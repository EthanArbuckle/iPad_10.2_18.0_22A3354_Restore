uint64_t sub_244A6C9A8(uint64_t a1, uint64_t a2, double *a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, int *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  unsigned int *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  double v129;
  double *v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  double *v134;
  _QWORD *v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;

  v135 = a4;
  v134 = a3;
  v156 = a1;
  v150 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  v151 = *(_QWORD *)(v150 - 8);
  v5 = MEMORY[0x24BDAC7A8](v150);
  v157 = (uint64_t *)((char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v138 = (uint64_t *)((char *)&v132 - v8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v137 = (uint64_t *)((char *)&v132 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v136 = (uint64_t *)((char *)&v132 - v12);
  MEMORY[0x24BDAC7A8](v11);
  v148 = (uint64_t *)((char *)&v132 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v141 = (uint64_t)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v140 = (uint64_t)&v132 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v139 = (uint64_t)&v132 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v147 = (uint64_t)&v132 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v149 = (char *)&v132 - v23;
  v154 = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x24BDAC7A8](v154);
  v145 = (uint64_t)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9D0);
  MEMORY[0x24BDAC7A8](v25);
  v144 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v143 = (uint64_t)&v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v152 = (uint64_t)&v132 - v30;
  v31 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  v32 = *((_QWORD *)v31 - 1);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v133 = (uint64_t *)((char *)&v132 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v33);
  v36 = (uint64_t *)((char *)&v132 - v35);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C8);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v132 = (uint64_t)&v132 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v132 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v132 - v43;
  v45 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0)
               + 20);
  v146 = a2;
  v142 = v45;
  v46 = *(_QWORD *)(a2 + v45);
  v47 = v46
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  swift_beginAccess();
  sub_244A7284C(v47, (uint64_t)v44, &qword_2573CF9C8);
  v48 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  LODWORD(v47) = v48(v44, 1, v31);
  v49 = (uint64_t)v44;
  v50 = v46;
  sub_244A72890(v49, &qword_2573CF9C8);
  if ((_DWORD)v47 != 1)
  {
    v51 = v46
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
    swift_beginAccess();
    sub_244A7284C(v51, (uint64_t)v42, &qword_2573CF9C8);
    if (v48(v42, 1, v31) == 1)
    {
      *v36 = MEMORY[0x24BEE4AF8];
      sub_244AE3C00();
      v52 = (char *)v36 + v31[6];
      *(_DWORD *)v52 = 0;
      v52[4] = 1;
      v53 = (char *)v36 + v31[7];
      *(_DWORD *)v53 = 0;
      v53[4] = 1;
      v54 = (char *)v36 + v31[8];
      *(_QWORD *)v54 = 0;
      v54[8] = 1;
      v55 = (char *)v36 + v31[9];
      *(_QWORD *)v55 = 0;
      v55[8] = 1;
      v56 = (char *)v36 + v31[10];
      *(_QWORD *)v56 = 0;
      v56[8] = 1;
      v57 = (char *)v36 + v31[11];
      *(_QWORD *)v57 = 0;
      v57[8] = 1;
      v58 = (char *)v36 + v31[12];
      *(_QWORD *)v58 = 0;
      v58[8] = 1;
      sub_244A72890((uint64_t)v42, &qword_2573CF9C8);
    }
    else
    {
      sub_244A729FC((uint64_t)v42, (uint64_t)v36, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
    }
    v59 = *((_BYTE *)v36 + v31[6] + 4);
    sub_244A729C0((uint64_t)v36, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
    if ((v59 & 1) == 0)
    {
      v60 = v46
          + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
      swift_beginAccess();
      v61 = v132;
      sub_244A7284C(v60, v132, &qword_2573CF9C8);
      if (v48((char *)v61, 1, v31) == 1)
      {
        v62 = v133;
        *v133 = MEMORY[0x24BEE4AF8];
        sub_244AE3C00();
        v63 = (char *)v62 + v31[6];
        *(_DWORD *)v63 = 0;
        v63[4] = 1;
        v64 = (char *)v62 + v31[7];
        *(_DWORD *)v64 = 0;
        v64[4] = 1;
        v65 = (char *)v62 + v31[8];
        *(_QWORD *)v65 = 0;
        v65[8] = 1;
        v66 = (char *)v62 + v31[9];
        *(_QWORD *)v66 = 0;
        v66[8] = 1;
        v67 = (char *)v62 + v31[10];
        *(_QWORD *)v67 = 0;
        v67[8] = 1;
        v68 = (char *)v62 + v31[11];
        *(_QWORD *)v68 = 0;
        v68[8] = 1;
        v69 = (char *)v62 + v31[12];
        *(_QWORD *)v69 = 0;
        v69[8] = 1;
        sub_244A72890(v61, &qword_2573CF9C8);
      }
      else
      {
        v62 = v133;
        sub_244A729FC(v61, (uint64_t)v133, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
      }
      v70 = (unsigned int *)((char *)v62 + v31[6]);
      v71 = *v70;
      v72 = *((unsigned __int8 *)v70 + 4);
      sub_244A729C0((uint64_t)v62, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
      if (v72)
        v73 = 0;
      else
        v73 = v71;
      MEMORY[0x24951DA28](v73, 0);
    }
  }
  v74 = v46
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
  swift_beginAccess();
  v75 = v152;
  sub_244A7284C(v74, v152, &qword_2573CF9E8);
  v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 48);
  v77 = (int *)v154;
  LODWORD(v74) = v76(v75, 1, v154);
  sub_244A72890(v75, &qword_2573CF9E8);
  if ((_DWORD)v74 == 1)
  {
    v78 = v155;
    v79 = v151;
    v80 = v150;
    v81 = (uint64_t)v149;
  }
  else
  {
    v82 = v50
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
    swift_beginAccess();
    v83 = v143;
    sub_244A7284C(v82, v143, &qword_2573CF9E8);
    if (v76(v83, 1, (uint64_t)v77) == 1)
    {
      v84 = v145;
      sub_244AE3C00();
      v85 = v84 + v77[5];
      *(_DWORD *)v85 = 0;
      *(_BYTE *)(v85 + 4) = 1;
      v86 = v84 + v77[6];
      *(_DWORD *)v86 = 0;
      *(_BYTE *)(v86 + 4) = 1;
      v87 = v84 + v77[7];
      *(_DWORD *)v87 = 0;
      *(_BYTE *)(v87 + 4) = 1;
      v88 = v84 + v77[8];
      *(_DWORD *)v88 = 0;
      *(_BYTE *)(v88 + 4) = 1;
      v89 = v84 + v77[9];
      *(_DWORD *)v89 = 0;
      *(_BYTE *)(v89 + 4) = 1;
      v90 = v84 + v77[10];
      *(_QWORD *)v90 = 0;
      *(_BYTE *)(v90 + 8) = 1;
      v91 = v84 + v77[11];
      *(_QWORD *)v91 = 0;
      *(_BYTE *)(v91 + 8) = 1;
      v92 = v84 + v77[12];
      *(_DWORD *)v92 = 0;
      *(_BYTE *)(v92 + 4) = 1;
      sub_244A72890(v83, &qword_2573CF9E8);
    }
    else
    {
      v84 = v145;
      sub_244A729FC(v83, v145, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
    }
    v93 = v155;
    v79 = v151;
    v80 = v150;
    v81 = (uint64_t)v149;
    v94 = sub_244AE3FF0();
    MEMORY[0x24BDAC7A8](v94);
    *(&v132 - 2) = v84;
    v95 = v144;
    sub_244AE40F8();
    v78 = v93;
    sub_244A729C0(v84, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v95, 0, 1, v94);
    sub_244AE3F24();
    v50 = *(_QWORD *)(v146 + v142);
  }
  v96 = v50
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
  swift_beginAccess();
  sub_244A7284C(v96, v81, &qword_2573CF9E0);
  v97 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  LODWORD(v96) = v97(v81, 1, v80);
  result = sub_244A72890(v81, &qword_2573CF9E0);
  if ((_DWORD)v96 != 1)
  {
    v99 = v50
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    v100 = v147;
    sub_244A7284C(v99, v147, &qword_2573CF9E0);
    if (v97(v100, 1, v80) == 1)
    {
      v101 = v148;
      *v148 = 0;
      v101[1] = 0xE000000000000000;
      v102 = MEMORY[0x24BEE4AF8];
      v101[2] = 0;
      v101[3] = v102;
      sub_244AE3C00();
      sub_244A72890(v100, &qword_2573CF9E0);
    }
    else
    {
      v101 = v148;
      sub_244A729FC(v100, (uint64_t)v148, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v103 = (uint64_t)v101;
    v105 = *v101;
    v104 = v101[1];
    swift_bridgeObjectRetain();
    sub_244A729C0(v103, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    if (v105 == 0xD00000000000001FLL && v104 == 0x8000000244AE9550)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v106 = sub_244AE44DC();
      result = swift_bridgeObjectRelease();
      if ((v106 & 1) == 0)
        return result;
    }
    v107 = v50
         + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    v108 = v139;
    sub_244A7284C(v107, v139, &qword_2573CF9E0);
    if (v97(v108, 1, v80) == 1)
    {
      v109 = v136;
      *v136 = 0;
      v109[1] = 0xE000000000000000;
      v110 = MEMORY[0x24BEE4AF8];
      v109[2] = 0;
      v109[3] = v110;
      sub_244AE3C00();
      sub_244A72890(v108, &qword_2573CF9E0);
    }
    else
    {
      v109 = v136;
      sub_244A729FC(v108, (uint64_t)v136, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v111 = v109[2];
    sub_244A729C0((uint64_t)v109, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    v112 = (double)v111 / 1000000.0;
    MEMORY[0x24951DA4C](*(_QWORD *)&v112, 0);
    v113 = v50
         + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    v114 = v140;
    sub_244A7284C(v113, v140, &qword_2573CF9E0);
    if (v97(v114, 1, v80) == 1)
    {
      v115 = v137;
      *v137 = 0;
      v115[1] = 0xE000000000000000;
      v116 = MEMORY[0x24BEE4AF8];
      v115[2] = 0;
      v115[3] = v116;
      sub_244AE3C00();
      sub_244A72890(v114, &qword_2573CF9E0);
    }
    else
    {
      v115 = v137;
      sub_244A729FC(v114, (uint64_t)v137, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v117 = v115[3];
    swift_bridgeObjectRetain();
    sub_244A729C0((uint64_t)v115, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    v118 = *(_QWORD *)(v117 + 16);
    swift_bridgeObjectRelease();
    v119 = v50
         + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    v120 = v119;
    v121 = v141;
    sub_244A7284C(v120, v141, &qword_2573CF9E0);
    if (v97(v121, 1, v80) == 1)
    {
      v122 = v138;
      *v138 = 0;
      v122[1] = 0xE000000000000000;
      v123 = MEMORY[0x24BEE4AF8];
      v122[2] = 0;
      v122[3] = v123;
      sub_244AE3C00();
      sub_244A72890(v121, &qword_2573CF9E0);
    }
    else
    {
      v122 = v138;
      sub_244A729FC(v121, (uint64_t)v138, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v124 = v122[3];
    swift_bridgeObjectRetain();
    sub_244A729C0((uint64_t)v122, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    v125 = *(_QWORD *)(v124 + 16);
    if (v125)
    {
      v155 = v78;
      v126 = v124 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      v127 = *(_QWORD *)(v79 + 72);
      v128 = v157;
      while (1)
      {
        sub_244A72964(v126, (uint64_t)v128, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        if (*v128 == 0xD000000000000017 && v128[1] == 0x8000000244AE9570)
          break;
        if ((sub_244AE44DC() & 1) != 0)
          break;
        v128 = v157;
        sub_244A729C0((uint64_t)v157, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v126 += v127;
        if (!--v125)
          goto LABEL_44;
      }
      swift_bridgeObjectRelease();
      v129 = (double)(unint64_t)v157[2] / 1000000.0;
      sub_244A729C0((uint64_t)v157, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
      v130 = v134;
      *v134 = v129;
      v131 = v135;
    }
    else
    {
LABEL_44:
      swift_bridgeObjectRelease();
      v131 = v135;
      v130 = v134;
    }
    *(double *)v131 = v112 - *v130;
    MEMORY[0x24951DA34](v118, 0);
    MEMORY[0x24951DA64](*(_QWORD *)v130, 0);
    result = MEMORY[0x24951DA58](*v131, 0);
    if (*(double *)v131 > 0.0 && v118 >= 2)
      return ((uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24951DAF4])((double)(uint64_t)(v118 - 1) * 1000.0 / *(double *)v131, 0);
  }
  return result;
}

uint64_t sub_244A6D898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)&v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_244AE3EDC();
  MEMORY[0x24BDAC7A8](v8);
  sub_244AE3F00();
  v17 = a2;
  sub_244AE40F8();
  sub_244AE3EE8();
  v9 = sub_244AE40D4();
  v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v11, a3, v9);
  *v7 = v10;
  v12 = *MEMORY[0x24BE5AF38];
  v13 = sub_244AE40E0();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 104))(v7, v12, v13);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
  return sub_244AE3EF4();
}

uint64_t sub_244A6DA34()
{
  return sub_244AE4158();
}

uint64_t sub_244A6DAA0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  v4 = (int *)result;
  if ((*(_BYTE *)(a2 + *(int *)(result + 20) + 4) & 1) == 0)
    result = sub_244AE3F3C();
  if ((*(_BYTE *)(a2 + v4[6] + 4) & 1) == 0)
    result = sub_244AE3F9C();
  v5 = (unsigned int *)(a2 + v4[7]);
  if ((v5[1] & 1) == 0)
    result = MEMORY[0x24951D9E0](*v5);
  if ((*(_BYTE *)(a2 + v4[8] + 4) & 1) == 0)
    result = sub_244AE3F6C();
  if ((*(_BYTE *)(a2 + v4[9] + 4) & 1) == 0)
    result = sub_244AE3F84();
  v6 = a2 + v4[10];
  if ((*(_BYTE *)(v6 + 8) & 1) == 0)
    result = MEMORY[0x24951D9F8](*(_QWORD *)v6, 0);
  v7 = a2 + v4[11];
  if ((*(_BYTE *)(v7 + 8) & 1) == 0)
    result = MEMORY[0x24951DA10](*(_QWORD *)v7, 0);
  v8 = (unsigned int *)(a2 + v4[12]);
  if ((v8[1] & 1) == 0)
    return MEMORY[0x24951D980](*v8, 0);
  return result;
}

uint64_t sub_244A6DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_244AE3EDC();
  MEMORY[0x24BDAC7A8](v8);
  sub_244AE3F00();
  v16 = a2;
  sub_244AE40F8();
  sub_244AE3EE8();
  sub_244AE40D4();
  v9 = swift_allocBox();
  v15 = a3;
  sub_244AE40F8();
  *v7 = v9;
  v10 = *MEMORY[0x24BE5AF38];
  v11 = sub_244AE40E0();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 104))(v7, v10, v11);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  return sub_244AE3EF4();
}

uint64_t sub_244A6DD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244AE3B4C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  return sub_244AE3ED0();
}

uint64_t sub_244A6DE58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[16];
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_244AE40A4();
  v9 = a2;
  sub_244AE40F8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  return sub_244AE40B0();
}

uint64_t sub_244A6DF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  unsigned int v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  unsigned int v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  unsigned int v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9B8);
  MEMORY[0x24BDAC7A8](v4);
  v89 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v6 = *(_QWORD *)(v92 - 8);
  v7 = MEMORY[0x24BDAC7A8](v92);
  v84 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v83 = (uint64_t)&v80 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v82 = (uint64_t)&v80 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v81 = (uint64_t)&v80 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v87 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v90 = (uint64_t)&v80 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v86 = (uint64_t)&v80 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v88 = (char *)&v80 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v85 = (uint64_t)&v80 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v80 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v80 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v80 - v31;
  v93 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v33 = a2;
  if (*(_QWORD *)(a2 + v93[9] + 8))
  {
    swift_bridgeObjectRetain();
    sub_244AE4074();
  }
  v91 = a1;
  v34 = a2 + v93[5];
  sub_244A7284C(v33 + v93[5], (uint64_t)v32, &qword_2573CF9A0);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v36 = v92;
  v37 = v35(v32, 1, v92);
  sub_244A72890((uint64_t)v32, &qword_2573CF9A0);
  if (v37 == 1)
  {
    v38 = v35;
    v39 = v89;
  }
  else
  {
    sub_244A7284C(v34, (uint64_t)v30, &qword_2573CF9A0);
    v38 = v35;
    if (v35(v30, 1, v36) == 1)
    {
      v40 = v81;
      sub_244AE3C00();
      v41 = (_QWORD *)(v40 + *(int *)(v36 + 20));
      *v41 = 0;
      v41[1] = 0;
      v42 = (_QWORD *)(v40 + *(int *)(v36 + 24));
      *v42 = 0;
      v42[1] = 0;
      sub_244A72890((uint64_t)v30, &qword_2573CF9A0);
    }
    else
    {
      v40 = v81;
      sub_244A729FC((uint64_t)v30, v81, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v39 = v89;
    v43 = *(_QWORD *)(v40 + *(int *)(v36 + 20) + 8);
    sub_244A729C0(v40, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v43)
    {
      v44 = sub_244AE405C();
      MEMORY[0x24BDAC7A8](v44);
      *(&v80 - 2) = v33;
      sub_244AE40F8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v39, 0, 1, v44);
      sub_244AE408C();
    }
  }
  v45 = v33 + v93[6];
  sub_244A7284C(v45, (uint64_t)v27, &qword_2573CF9A0);
  v46 = v92;
  v47 = v38(v27, 1, v92);
  sub_244A72890((uint64_t)v27, &qword_2573CF9A0);
  if (v47 == 1)
  {
    v48 = v38;
    v49 = (uint64_t)v88;
  }
  else
  {
    v50 = v45;
    v51 = v85;
    sub_244A7284C(v50, v85, &qword_2573CF9A0);
    v48 = v38;
    if (v38((char *)v51, 1, v46) == 1)
    {
      v52 = v82;
      sub_244AE3C00();
      v53 = (_QWORD *)(v52 + *(int *)(v46 + 20));
      *v53 = 0;
      v53[1] = 0;
      v54 = (_QWORD *)(v52 + *(int *)(v46 + 24));
      *v54 = 0;
      v54[1] = 0;
      sub_244A72890(v51, &qword_2573CF9A0);
    }
    else
    {
      v52 = v82;
      sub_244A729FC(v51, v82, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v49 = (uint64_t)v88;
    v55 = *(_QWORD *)(v52 + *(int *)(v46 + 20) + 8);
    sub_244A729C0(v52, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v55)
    {
      v56 = sub_244AE405C();
      MEMORY[0x24BDAC7A8](v56);
      *(&v80 - 2) = v33;
      sub_244AE40F8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v39, 0, 1, v56);
      sub_244AE4080();
    }
  }
  v57 = v33 + v93[8];
  sub_244A7284C(v57, v49, &qword_2573CF9A0);
  v58 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v48;
  v59 = v48((char *)v49, 1, v46);
  sub_244A72890(v49, &qword_2573CF9A0);
  if (v59 == 1)
  {
    v60 = v58;
  }
  else
  {
    v61 = v57;
    v62 = v86;
    sub_244A7284C(v61, v86, &qword_2573CF9A0);
    v60 = v58;
    if (v58(v62, 1, v46) == 1)
    {
      v63 = v83;
      sub_244AE3C00();
      v64 = (_QWORD *)(v63 + *(int *)(v46 + 20));
      *v64 = 0;
      v64[1] = 0;
      v65 = (_QWORD *)(v63 + *(int *)(v46 + 24));
      *v65 = 0;
      v65[1] = 0;
      sub_244A72890(v62, &qword_2573CF9A0);
    }
    else
    {
      v63 = v83;
      sub_244A729FC(v62, v83, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v66 = *(_QWORD *)(v63 + *(int *)(v46 + 20) + 8);
    sub_244A729C0(v63, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v66)
    {
      v67 = sub_244AE405C();
      MEMORY[0x24BDAC7A8](v67);
      *(&v80 - 2) = v33;
      sub_244AE40F8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v39, 0, 1, v67);
      sub_244AE4098();
    }
  }
  v68 = v33 + v93[7];
  v69 = v90;
  sub_244A7284C(v68, v90, &qword_2573CF9A0);
  v70 = v60;
  v71 = v60(v69, 1, v46);
  result = sub_244A72890(v69, &qword_2573CF9A0);
  if (v71 != 1)
  {
    v73 = v68;
    v74 = v87;
    sub_244A7284C(v73, v87, &qword_2573CF9A0);
    if (v70(v74, 1, v46) == 1)
    {
      v75 = v84;
      sub_244AE3C00();
      v76 = (_QWORD *)(v75 + *(int *)(v46 + 20));
      *v76 = 0;
      v76[1] = 0;
      v77 = (_QWORD *)(v75 + *(int *)(v46 + 24));
      *v77 = 0;
      v77[1] = 0;
      sub_244A72890(v74, &qword_2573CF9A0);
    }
    else
    {
      v75 = v84;
      sub_244A729FC(v74, v84, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v78 = *(_QWORD *)(v75 + *(int *)(v46 + 20) + 8);
    result = sub_244A729C0(v75, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v78)
    {
      v79 = sub_244AE405C();
      MEMORY[0x24BDAC7A8](v79);
      *(&v80 - 2) = v33;
      sub_244AE40F8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v39, 0, 1, v79);
      return sub_244AE4068();
    }
  }
  return result;
}

uint64_t sub_244A6E7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = a2 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0) + 20);
  sub_244A7284C(v20, (uint64_t)v10, &qword_2573CF9A0);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v21(v10, 1, v11) == 1)
  {
    sub_244AE3C00();
    v22 = &v19[*(int *)(v11 + 20)];
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v23 = &v19[*(int *)(v11 + 24)];
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    sub_244A72890((uint64_t)v10, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v10, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  swift_bridgeObjectRetain();
  sub_244A729C0((uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244AE4044();
  sub_244A7284C(v20, (uint64_t)v8, &qword_2573CF9A0);
  if (v21(v8, 1, v11) == 1)
  {
    sub_244AE3C00();
    v24 = &v17[*(int *)(v11 + 20)];
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v25 = &v17[*(int *)(v11 + 24)];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    sub_244A72890((uint64_t)v8, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v8, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  v26 = *(_QWORD *)&v17[*(int *)(v11 + 24) + 8];
  result = sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  if (v26)
  {
    v28 = v33;
    sub_244A7284C(v20, v33, &qword_2573CF9A0);
    if (v21((char *)v28, 1, v11) == 1)
    {
      v29 = v32;
      sub_244AE3C00();
      v30 = (_QWORD *)(v29 + *(int *)(v11 + 20));
      *v30 = 0;
      v30[1] = 0;
      v31 = (_QWORD *)(v29 + *(int *)(v11 + 24));
      *v31 = 0;
      v31[1] = 0;
      sub_244A72890(v28, &qword_2573CF9A0);
    }
    else
    {
      v29 = v32;
      sub_244A729FC(v28, v32, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    swift_bridgeObjectRetain();
    sub_244A729C0(v29, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    return sub_244AE4050();
  }
  return result;
}

uint64_t sub_244A6EB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = a2 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0) + 24);
  sub_244A7284C(v20, (uint64_t)v10, &qword_2573CF9A0);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v21(v10, 1, v11) == 1)
  {
    sub_244AE3C00();
    v22 = &v19[*(int *)(v11 + 20)];
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v23 = &v19[*(int *)(v11 + 24)];
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    sub_244A72890((uint64_t)v10, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v10, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  swift_bridgeObjectRetain();
  sub_244A729C0((uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244AE4044();
  sub_244A7284C(v20, (uint64_t)v8, &qword_2573CF9A0);
  if (v21(v8, 1, v11) == 1)
  {
    sub_244AE3C00();
    v24 = &v17[*(int *)(v11 + 20)];
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v25 = &v17[*(int *)(v11 + 24)];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    sub_244A72890((uint64_t)v8, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v8, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  v26 = *(_QWORD *)&v17[*(int *)(v11 + 24) + 8];
  result = sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  if (v26)
  {
    v28 = v33;
    sub_244A7284C(v20, v33, &qword_2573CF9A0);
    if (v21((char *)v28, 1, v11) == 1)
    {
      v29 = v32;
      sub_244AE3C00();
      v30 = (_QWORD *)(v29 + *(int *)(v11 + 20));
      *v30 = 0;
      v30[1] = 0;
      v31 = (_QWORD *)(v29 + *(int *)(v11 + 24));
      *v31 = 0;
      v31[1] = 0;
      sub_244A72890(v28, &qword_2573CF9A0);
    }
    else
    {
      v29 = v32;
      sub_244A729FC(v28, v32, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    swift_bridgeObjectRetain();
    sub_244A729C0(v29, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    return sub_244AE4050();
  }
  return result;
}

uint64_t sub_244A6EE68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = a2 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0) + 32);
  sub_244A7284C(v20, (uint64_t)v10, &qword_2573CF9A0);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v21(v10, 1, v11) == 1)
  {
    sub_244AE3C00();
    v22 = &v19[*(int *)(v11 + 20)];
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v23 = &v19[*(int *)(v11 + 24)];
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    sub_244A72890((uint64_t)v10, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v10, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  swift_bridgeObjectRetain();
  sub_244A729C0((uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244AE4044();
  sub_244A7284C(v20, (uint64_t)v8, &qword_2573CF9A0);
  if (v21(v8, 1, v11) == 1)
  {
    sub_244AE3C00();
    v24 = &v17[*(int *)(v11 + 20)];
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v25 = &v17[*(int *)(v11 + 24)];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    sub_244A72890((uint64_t)v8, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v8, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  v26 = *(_QWORD *)&v17[*(int *)(v11 + 24) + 8];
  result = sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  if (v26)
  {
    v28 = v33;
    sub_244A7284C(v20, v33, &qword_2573CF9A0);
    if (v21((char *)v28, 1, v11) == 1)
    {
      v29 = v32;
      sub_244AE3C00();
      v30 = (_QWORD *)(v29 + *(int *)(v11 + 20));
      *v30 = 0;
      v30[1] = 0;
      v31 = (_QWORD *)(v29 + *(int *)(v11 + 24));
      *v31 = 0;
      v31[1] = 0;
      sub_244A72890(v28, &qword_2573CF9A0);
    }
    else
    {
      v29 = v32;
      sub_244A729FC(v28, v32, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    swift_bridgeObjectRetain();
    sub_244A729C0(v29, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    return sub_244AE4050();
  }
  return result;
}

uint64_t sub_244A6F1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = a2 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0) + 28);
  sub_244A7284C(v20, (uint64_t)v10, &qword_2573CF9A0);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v21(v10, 1, v11) == 1)
  {
    sub_244AE3C00();
    v22 = &v19[*(int *)(v11 + 20)];
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v23 = &v19[*(int *)(v11 + 24)];
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    sub_244A72890((uint64_t)v10, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v10, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  swift_bridgeObjectRetain();
  sub_244A729C0((uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244AE4044();
  sub_244A7284C(v20, (uint64_t)v8, &qword_2573CF9A0);
  if (v21(v8, 1, v11) == 1)
  {
    sub_244AE3C00();
    v24 = &v17[*(int *)(v11 + 20)];
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v25 = &v17[*(int *)(v11 + 24)];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    sub_244A72890((uint64_t)v8, &qword_2573CF9A0);
  }
  else
  {
    sub_244A729FC((uint64_t)v8, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  }
  v26 = *(_QWORD *)&v17[*(int *)(v11 + 24) + 8];
  result = sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  if (v26)
  {
    v28 = v33;
    sub_244A7284C(v20, v33, &qword_2573CF9A0);
    if (v21((char *)v28, 1, v11) == 1)
    {
      v29 = v32;
      sub_244AE3C00();
      v30 = (_QWORD *)(v29 + *(int *)(v11 + 20));
      *v30 = 0;
      v30[1] = 0;
      v31 = (_QWORD *)(v29 + *(int *)(v11 + 24));
      *v31 = 0;
      v31[1] = 0;
      sub_244A72890(v28, &qword_2573CF9A0);
    }
    else
    {
      v29 = v32;
      sub_244A729FC(v28, v32, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    swift_bridgeObjectRetain();
    sub_244A729C0(v29, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    return sub_244AE4050();
  }
  return result;
}

uint64_t sub_244A6F520(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  int v102;
  BOOL v103;
  uint64_t *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  unint64_t v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t *v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  uint64_t *v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  uint64_t *v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t result;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  uint64_t *v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t *v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t *v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t (*v266)(char *, uint64_t, uint64_t);
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int *v286;
  uint64_t v287;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v245 = (uint64_t)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v275 = (uint64_t)&v243 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v274 = (uint64_t)&v243 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v269 = (uint64_t)&v243 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v279 = (uint64_t)&v243 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v257 = (uint64_t)&v243 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v273 = (uint64_t)&v243 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v272 = (uint64_t)&v243 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v265 = (uint64_t)&v243 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v278 = (uint64_t)&v243 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v256 = (uint64_t)&v243 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v271 = (uint64_t)&v243 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v270 = (uint64_t)&v243 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v262 = (uint64_t)&v243 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v277 = (uint64_t)&v243 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v244 = (uint64_t)&v243 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v250 = (uint64_t)&v243 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v259 = (char *)&v243 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v258 = (uint64_t)&v243 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v276 = (uint64_t)&v243 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v249 = (uint64_t)&v243 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v255 = (uint64_t)&v243 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v268 = (char *)&v243 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v267 = (uint64_t)&v243 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v282 = (uint64_t)&v243 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v285 = (uint64_t)&v243 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v248 = (uint64_t)&v243 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v254 = (uint64_t)&v243 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v264 = (char *)&v243 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v263 = (uint64_t)&v243 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v281 = (uint64_t)&v243 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v284 = (uint64_t)&v243 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v247 = (uint64_t)&v243 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v253 = (uint64_t)&v243 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v261 = (char *)&v243 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v260 = (uint64_t)&v243 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v280 = (uint64_t)&v243 - v79;
  v80 = MEMORY[0x24BDAC7A8](v78);
  v283 = (uint64_t)&v243 - v81;
  v82 = MEMORY[0x24BDAC7A8](v80);
  v246 = (uint64_t)&v243 - v83;
  v84 = MEMORY[0x24BDAC7A8](v82);
  v252 = (uint64_t)&v243 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v251 = (uint64_t)&v243 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v90 = (char *)&v243 - v89;
  v91 = MEMORY[0x24BDAC7A8](v88);
  v93 = (char *)&v243 - v92;
  MEMORY[0x24BDAC7A8](v91);
  v95 = (char *)&v243 - v94;
  v286 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v96 = v286[9];
  v287 = a2;
  v97 = (uint64_t *)(a2 + v96);
  v98 = v97[1];
  if (v98)
  {
    v99 = *v97;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a1 = v99;
    a1[1] = v98;
  }
  v100 = v287 + v286[5];
  sub_244A7284C(v100, (uint64_t)v95, &qword_2573CF9A0);
  v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v102 = v101(v95, 1, v4);
  sub_244A72890((uint64_t)v95, &qword_2573CF9A0);
  v103 = v102 == 1;
  v104 = a1;
  if (!v103)
  {
    sub_244A7284C(v100, (uint64_t)v93, &qword_2573CF9A0);
    v266 = v101;
    if (v101(v93, 1, v4) == 1)
    {
      v105 = v276;
      sub_244AE3C00();
      v106 = (_QWORD *)(v105 + *(int *)(v4 + 20));
      *v106 = 0;
      v106[1] = 0;
      v107 = (_QWORD *)(v105 + *(int *)(v4 + 24));
      *v107 = 0;
      v107[1] = 0;
      sub_244A72890((uint64_t)v93, &qword_2573CF9A0);
    }
    else
    {
      v105 = v276;
      sub_244A729FC((uint64_t)v93, v276, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v108 = *(_QWORD *)(v105 + *(int *)(v4 + 20) + 8);
    sub_244A729C0(v105, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    v101 = v266;
    if (v108)
    {
      sub_244A7284C(v100, (uint64_t)v90, &qword_2573CF9A0);
      if (v101(v90, 1, v4) == 1)
      {
        v109 = v258;
        sub_244AE3C00();
        v110 = (_QWORD *)(v109 + *(int *)(v4 + 20));
        *v110 = 0;
        v110[1] = 0;
        v111 = (_QWORD *)(v109 + *(int *)(v4 + 24));
        *v111 = 0;
        v111[1] = 0;
        sub_244A72890((uint64_t)v90, &qword_2573CF9A0);
      }
      else
      {
        v109 = v258;
        sub_244A729FC((uint64_t)v90, v258, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      }
      v112 = (uint64_t)v259;
      v113 = *(_QWORD *)(v109 + *(int *)(v4 + 24) + 8);
      sub_244A729C0(v109, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      if (v113)
      {
        v114 = v251;
        sub_244A7284C(v100, v251, &qword_2573CF9A0);
        if (v101((char *)v114, 1, v4) == 1)
        {
          sub_244AE3C00();
          v115 = (_QWORD *)(v112 + *(int *)(v4 + 20));
          *v115 = 0;
          v115[1] = 0;
          v116 = (_QWORD *)(v112 + *(int *)(v4 + 24));
          *v116 = 0;
          v116[1] = 0;
          sub_244A72890(v114, &qword_2573CF9A0);
        }
        else
        {
          sub_244A729FC(v114, v112, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v121 = (uint64_t *)(v112 + *(int *)(v4 + 20));
        if (v121[1])
        {
          v122 = *v121;
          v123 = v121[1];
        }
        else
        {
          v122 = 0;
          v123 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v112, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        v124 = v252;
        sub_244A7284C(v100, v252, &qword_2573CF9A0);
        if (v101((char *)v124, 1, v4) == 1)
        {
          v125 = v250;
          sub_244AE3C00();
          v126 = (_QWORD *)(v125 + *(int *)(v4 + 20));
          *v126 = 0;
          v126[1] = 0;
          v127 = (_QWORD *)(v125 + *(int *)(v4 + 24));
          *v127 = 0;
          v127[1] = 0;
          sub_244A72890(v124, &qword_2573CF9A0);
        }
        else
        {
          v125 = v250;
          sub_244A729FC(v124, v250, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v128 = (uint64_t *)(v125 + *(int *)(v4 + 24));
        if (v128[1])
        {
          v129 = *v128;
          v130 = v128[1];
        }
        else
        {
          v129 = 0;
          v130 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v125, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        sub_244A71308(v104[2], v104[3]);
        v104[2] = v122;
        v104[3] = v123;
        v104[4] = v129;
        v104[5] = v130;
      }
      else
      {
        v117 = v246;
        sub_244A7284C(v100, v246, &qword_2573CF9A0);
        if (v101((char *)v117, 1, v4) == 1)
        {
          v118 = v244;
          sub_244AE3C00();
          v119 = (_QWORD *)(v118 + *(int *)(v4 + 20));
          *v119 = 0;
          v119[1] = 0;
          v120 = (_QWORD *)(v118 + *(int *)(v4 + 24));
          *v120 = 0;
          v120[1] = 0;
          sub_244A72890(v117, &qword_2573CF9A0);
        }
        else
        {
          v118 = v244;
          sub_244A729FC(v117, v244, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v131 = (uint64_t *)(v118 + *(int *)(v4 + 20));
        if (v131[1])
        {
          v132 = *v131;
          v133 = v131[1];
        }
        else
        {
          v132 = 0;
          v133 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v118, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        sub_244A71308(v104[2], v104[3]);
        v104[2] = v132;
        v104[3] = v133;
        v104[4] = 0;
        v104[5] = 0;
      }
      v101 = v266;
    }
  }
  v134 = v286;
  v135 = v287;
  v136 = v287 + v286[6];
  v137 = v283;
  sub_244A7284C(v136, v283, &qword_2573CF9A0);
  v138 = v101((char *)v137, 1, v4);
  sub_244A72890(v137, &qword_2573CF9A0);
  if (v138 != 1)
  {
    v139 = v280;
    sub_244A7284C(v136, v280, &qword_2573CF9A0);
    if (v101((char *)v139, 1, v4) == 1)
    {
      v140 = v277;
      sub_244AE3C00();
      v141 = (_QWORD *)(v140 + *(int *)(v4 + 20));
      *v141 = 0;
      v141[1] = 0;
      v142 = (_QWORD *)(v140 + *(int *)(v4 + 24));
      *v142 = 0;
      v142[1] = 0;
      sub_244A72890(v139, &qword_2573CF9A0);
    }
    else
    {
      v140 = v277;
      sub_244A729FC(v139, v277, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v143 = *(_QWORD *)(v140 + *(int *)(v4 + 20) + 8);
    sub_244A729C0(v140, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v143)
    {
      v144 = v260;
      sub_244A7284C(v136, v260, &qword_2573CF9A0);
      if (v101((char *)v144, 1, v4) == 1)
      {
        v145 = v262;
        sub_244AE3C00();
        v146 = (_QWORD *)(v145 + *(int *)(v4 + 20));
        *v146 = 0;
        v146[1] = 0;
        v147 = (_QWORD *)(v145 + *(int *)(v4 + 24));
        *v147 = 0;
        v147[1] = 0;
        sub_244A72890(v144, &qword_2573CF9A0);
      }
      else
      {
        v145 = v262;
        sub_244A729FC(v144, v262, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      }
      v148 = (uint64_t)v261;
      v149 = v145;
      v150 = *(_QWORD *)(v145 + *(int *)(v4 + 24) + 8);
      sub_244A729C0(v149, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      if (v150)
      {
        sub_244A7284C(v136, v148, &qword_2573CF9A0);
        if (v101((char *)v148, 1, v4) == 1)
        {
          v151 = v270;
          sub_244AE3C00();
          v152 = (_QWORD *)(v151 + *(int *)(v4 + 20));
          *v152 = 0;
          v152[1] = 0;
          v153 = (_QWORD *)(v151 + *(int *)(v4 + 24));
          *v153 = 0;
          v153[1] = 0;
          sub_244A72890(v148, &qword_2573CF9A0);
        }
        else
        {
          v151 = v270;
          sub_244A729FC(v148, v270, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v158 = (uint64_t *)(v151 + *(int *)(v4 + 20));
        if (v158[1])
        {
          v159 = *v158;
          v160 = v158[1];
        }
        else
        {
          v159 = 0;
          v160 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v270, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        v161 = v253;
        sub_244A7284C(v136, v253, &qword_2573CF9A0);
        if (v101((char *)v161, 1, v4) == 1)
        {
          v162 = v271;
          sub_244AE3C00();
          v163 = (_QWORD *)(v162 + *(int *)(v4 + 20));
          *v163 = 0;
          v163[1] = 0;
          v164 = (_QWORD *)(v162 + *(int *)(v4 + 24));
          *v164 = 0;
          v164[1] = 0;
          sub_244A72890(v161, &qword_2573CF9A0);
        }
        else
        {
          v162 = v271;
          sub_244A729FC(v161, v271, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v165 = (uint64_t *)(v162 + *(int *)(v4 + 24));
        if (v165[1])
        {
          v166 = *v165;
          v167 = v165[1];
        }
        else
        {
          v166 = 0;
          v167 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v271, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        sub_244A71308(v104[6], v104[7]);
        v104[6] = v159;
        v104[7] = v160;
        v104[8] = v166;
        v104[9] = v167;
      }
      else
      {
        v154 = v247;
        sub_244A7284C(v136, v247, &qword_2573CF9A0);
        if (v101((char *)v154, 1, v4) == 1)
        {
          v155 = v256;
          sub_244AE3C00();
          v156 = (_QWORD *)(v155 + *(int *)(v4 + 20));
          *v156 = 0;
          v156[1] = 0;
          v157 = (_QWORD *)(v155 + *(int *)(v4 + 24));
          *v157 = 0;
          v157[1] = 0;
          sub_244A72890(v154, &qword_2573CF9A0);
        }
        else
        {
          v155 = v256;
          sub_244A729FC(v154, v256, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v168 = (uint64_t *)(v155 + *(int *)(v4 + 20));
        if (v168[1])
        {
          v169 = *v168;
          v170 = v168[1];
        }
        else
        {
          v169 = 0;
          v170 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v256, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        sub_244A71308(v104[6], v104[7]);
        v104[6] = v169;
        v104[7] = v170;
        v104[8] = 0;
        v104[9] = 0;
      }
    }
  }
  v171 = v135 + v134[8];
  v172 = v284;
  sub_244A7284C(v171, v284, &qword_2573CF9A0);
  v173 = v101((char *)v172, 1, v4);
  sub_244A72890(v172, &qword_2573CF9A0);
  if (v173 != 1)
  {
    v174 = v281;
    sub_244A7284C(v171, v281, &qword_2573CF9A0);
    if (v101((char *)v174, 1, v4) == 1)
    {
      v175 = v278;
      sub_244AE3C00();
      v176 = (_QWORD *)(v175 + *(int *)(v4 + 20));
      *v176 = 0;
      v176[1] = 0;
      v177 = (_QWORD *)(v175 + *(int *)(v4 + 24));
      *v177 = 0;
      v177[1] = 0;
      sub_244A72890(v174, &qword_2573CF9A0);
    }
    else
    {
      v175 = v278;
      sub_244A729FC(v174, v278, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v178 = *(_QWORD *)(v175 + *(int *)(v4 + 20) + 8);
    sub_244A729C0(v175, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v178)
    {
      v179 = v263;
      sub_244A7284C(v171, v263, &qword_2573CF9A0);
      if (v101((char *)v179, 1, v4) == 1)
      {
        v180 = v265;
        sub_244AE3C00();
        v181 = (_QWORD *)(v180 + *(int *)(v4 + 20));
        *v181 = 0;
        v181[1] = 0;
        v182 = (_QWORD *)(v180 + *(int *)(v4 + 24));
        *v182 = 0;
        v182[1] = 0;
        sub_244A72890(v179, &qword_2573CF9A0);
      }
      else
      {
        v180 = v265;
        sub_244A729FC(v179, v265, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      }
      v183 = (uint64_t)v264;
      v184 = v180;
      v185 = *(_QWORD *)(v180 + *(int *)(v4 + 24) + 8);
      sub_244A729C0(v184, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      if (v185)
      {
        sub_244A7284C(v171, v183, &qword_2573CF9A0);
        if (v101((char *)v183, 1, v4) == 1)
        {
          v186 = v272;
          sub_244AE3C00();
          v187 = (_QWORD *)(v186 + *(int *)(v4 + 20));
          *v187 = 0;
          v187[1] = 0;
          v188 = (_QWORD *)(v186 + *(int *)(v4 + 24));
          *v188 = 0;
          v188[1] = 0;
          sub_244A72890(v183, &qword_2573CF9A0);
        }
        else
        {
          v186 = v272;
          sub_244A729FC(v183, v272, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v193 = (uint64_t *)(v186 + *(int *)(v4 + 20));
        if (v193[1])
        {
          v194 = *v193;
          v195 = v193[1];
        }
        else
        {
          v194 = 0;
          v195 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v272, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        v196 = v254;
        sub_244A7284C(v171, v254, &qword_2573CF9A0);
        if (v101((char *)v196, 1, v4) == 1)
        {
          v197 = v273;
          sub_244AE3C00();
          v198 = (_QWORD *)(v197 + *(int *)(v4 + 20));
          *v198 = 0;
          v198[1] = 0;
          v199 = (_QWORD *)(v197 + *(int *)(v4 + 24));
          *v199 = 0;
          v199[1] = 0;
          sub_244A72890(v196, &qword_2573CF9A0);
        }
        else
        {
          v197 = v273;
          sub_244A729FC(v196, v273, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v200 = (uint64_t *)(v197 + *(int *)(v4 + 24));
        if (v200[1])
        {
          v201 = *v200;
          v202 = v200[1];
        }
        else
        {
          v201 = 0;
          v202 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v273, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        sub_244A71308(v104[10], v104[11]);
        v104[10] = v194;
        v104[11] = v195;
        v104[12] = v201;
        v104[13] = v202;
      }
      else
      {
        v189 = v248;
        sub_244A7284C(v171, v248, &qword_2573CF9A0);
        if (v101((char *)v189, 1, v4) == 1)
        {
          v190 = v257;
          sub_244AE3C00();
          v191 = (_QWORD *)(v190 + *(int *)(v4 + 20));
          *v191 = 0;
          v191[1] = 0;
          v192 = (_QWORD *)(v190 + *(int *)(v4 + 24));
          *v192 = 0;
          v192[1] = 0;
          sub_244A72890(v189, &qword_2573CF9A0);
        }
        else
        {
          v190 = v257;
          sub_244A729FC(v189, v257, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v203 = (uint64_t *)(v190 + *(int *)(v4 + 20));
        if (v203[1])
        {
          v204 = *v203;
          v205 = v203[1];
        }
        else
        {
          v204 = 0;
          v205 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v257, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        sub_244A71308(v104[10], v104[11]);
        v104[10] = v204;
        v104[11] = v205;
        v104[12] = 0;
        v104[13] = 0;
      }
    }
  }
  v206 = v135 + v134[7];
  v207 = v285;
  sub_244A7284C(v206, v285, &qword_2573CF9A0);
  v208 = v101((char *)v207, 1, v4);
  result = sub_244A72890(v207, &qword_2573CF9A0);
  if (v208 != 1)
  {
    v210 = v282;
    sub_244A7284C(v206, v282, &qword_2573CF9A0);
    if (v101((char *)v210, 1, v4) == 1)
    {
      v211 = v279;
      sub_244AE3C00();
      v212 = (_QWORD *)(v211 + *(int *)(v4 + 20));
      *v212 = 0;
      v212[1] = 0;
      v213 = (_QWORD *)(v211 + *(int *)(v4 + 24));
      *v213 = 0;
      v213[1] = 0;
      sub_244A72890(v210, &qword_2573CF9A0);
    }
    else
    {
      v211 = v279;
      sub_244A729FC(v210, v279, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v214 = *(_QWORD *)(v211 + *(int *)(v4 + 20) + 8);
    result = sub_244A729C0(v211, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v214)
    {
      v215 = v267;
      sub_244A7284C(v206, v267, &qword_2573CF9A0);
      if (v101((char *)v215, 1, v4) == 1)
      {
        v216 = v269;
        sub_244AE3C00();
        v217 = (_QWORD *)(v216 + *(int *)(v4 + 20));
        *v217 = 0;
        v217[1] = 0;
        v218 = (_QWORD *)(v216 + *(int *)(v4 + 24));
        *v218 = 0;
        v218[1] = 0;
        sub_244A72890(v215, &qword_2573CF9A0);
      }
      else
      {
        v216 = v269;
        sub_244A729FC(v215, v269, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      }
      v219 = (uint64_t)v268;
      v220 = v216;
      v221 = *(_QWORD *)(v216 + *(int *)(v4 + 24) + 8);
      sub_244A729C0(v220, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
      if (v221)
      {
        sub_244A7284C(v206, v219, &qword_2573CF9A0);
        if (v101((char *)v219, 1, v4) == 1)
        {
          v222 = v274;
          sub_244AE3C00();
          v223 = (_QWORD *)(v222 + *(int *)(v4 + 20));
          *v223 = 0;
          v223[1] = 0;
          v224 = (_QWORD *)(v222 + *(int *)(v4 + 24));
          *v224 = 0;
          v224[1] = 0;
          sub_244A72890(v219, &qword_2573CF9A0);
        }
        else
        {
          v222 = v274;
          sub_244A729FC(v219, v274, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v229 = (uint64_t *)(v222 + *(int *)(v4 + 20));
        if (v229[1])
        {
          v230 = *v229;
          v231 = v229[1];
        }
        else
        {
          v230 = 0;
          v231 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v274, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        v232 = v255;
        sub_244A7284C(v206, v255, &qword_2573CF9A0);
        if (v101((char *)v232, 1, v4) == 1)
        {
          v233 = v275;
          sub_244AE3C00();
          v234 = (_QWORD *)(v233 + *(int *)(v4 + 20));
          *v234 = 0;
          v234[1] = 0;
          v235 = (_QWORD *)(v233 + *(int *)(v4 + 24));
          *v235 = 0;
          v235[1] = 0;
          sub_244A72890(v232, &qword_2573CF9A0);
        }
        else
        {
          v233 = v275;
          sub_244A729FC(v232, v275, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v236 = (uint64_t *)(v233 + *(int *)(v4 + 24));
        if (v236[1])
        {
          v237 = *v236;
          v238 = v236[1];
        }
        else
        {
          v237 = 0;
          v238 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v275, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        result = sub_244A71308(v104[14], v104[15]);
        v104[14] = v230;
        v104[15] = v231;
        v104[16] = v237;
        v104[17] = v238;
      }
      else
      {
        v225 = v249;
        sub_244A7284C(v206, v249, &qword_2573CF9A0);
        if (v101((char *)v225, 1, v4) == 1)
        {
          v226 = v245;
          sub_244AE3C00();
          v227 = (_QWORD *)(v226 + *(int *)(v4 + 20));
          *v227 = 0;
          v227[1] = 0;
          v228 = (_QWORD *)(v226 + *(int *)(v4 + 24));
          *v228 = 0;
          v228[1] = 0;
          sub_244A72890(v225, &qword_2573CF9A0);
        }
        else
        {
          v226 = v245;
          sub_244A729FC(v225, v245, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v239 = (uint64_t *)(v226 + *(int *)(v4 + 20));
        v240 = v226;
        if (v239[1])
        {
          v241 = *v239;
          v242 = v239[1];
        }
        else
        {
          v241 = 0;
          v242 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        sub_244A729C0(v240, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        result = sub_244A71308(v104[14], v104[15]);
        v104[14] = v241;
        v104[15] = v242;
        v104[16] = 0;
        v104[17] = 0;
      }
    }
  }
  return result;
}

uint64_t sub_244A70BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t result;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;

  v87 = a1;
  v3 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v86 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v84 = (char *)&v78 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v79 = (uint64_t *)((char *)&v78 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v82 = (char *)&v78 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v80 = (char *)&v78 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v78 - v15);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v85 = (uint64_t)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v83 = (uint64_t)&v78 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v78 = (uint64_t)&v78 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v81 = (uint64_t)&v78 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v78 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v78 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v78 - v32;
  v34 = a2 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0) + 40);
  sub_244A7284C(v34, (uint64_t)v33, &qword_2573CF998);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  LODWORD(a2) = v35(v33, 1, v3);
  result = sub_244A72890((uint64_t)v33, &qword_2573CF998);
  if ((_DWORD)a2 != 1)
  {
    sub_244A7284C(v34, (uint64_t)v31, &qword_2573CF998);
    v37 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v35;
    v38 = v34;
    if (v35(v31, 1, v3) == 1)
    {
      v39 = MEMORY[0x24BEE4AF8];
      *v16 = MEMORY[0x24BEE4AF8];
      v16[1] = v39;
      sub_244AE3C00();
      v40 = (_QWORD *)((char *)v16 + *(int *)(v3 + 28));
      *v40 = 0;
      v40[1] = 0;
      v41 = (char *)v16 + *(int *)(v3 + 32);
      *(_QWORD *)v41 = 0;
      *((_WORD *)v41 + 4) = 256;
      sub_244A72890((uint64_t)v31, &qword_2573CF998);
    }
    else
    {
      sub_244A729FC((uint64_t)v31, (uint64_t)v16, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    }
    v42 = v87;
    v43 = v80;
    v44 = *(_QWORD *)((char *)v16 + *(int *)(v3 + 28) + 8);
    sub_244A729C0((uint64_t)v16, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    v45 = v82;
    if (v44)
    {
      sub_244A7284C(v38, (uint64_t)v28, &qword_2573CF998);
      if (v35(v28, 1, v3) == 1)
      {
        v46 = MEMORY[0x24BEE4AF8];
        *v43 = MEMORY[0x24BEE4AF8];
        v43[1] = v46;
        sub_244AE3C00();
        v47 = (_QWORD *)((char *)v43 + *(int *)(v3 + 28));
        *v47 = 0;
        v47[1] = 0;
        v48 = (char *)v43 + *(int *)(v3 + 32);
        *(_QWORD *)v48 = 0;
        *((_WORD *)v48 + 4) = 256;
        sub_244A72890((uint64_t)v28, &qword_2573CF998);
      }
      else
      {
        sub_244A729FC((uint64_t)v28, (uint64_t)v43, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      }
      v49 = (_QWORD *)((char *)v43 + *(int *)(v3 + 28));
      if (v49[1])
      {
        v50 = *v49;
        v51 = v49[1];
      }
      else
      {
        v50 = 0;
        v51 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_244A729C0((uint64_t)v43, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      swift_bridgeObjectRelease();
      *(_QWORD *)v42 = v50;
      *(_QWORD *)(v42 + 8) = v51;
    }
    v52 = v81;
    sub_244A7284C(v38, v81, &qword_2573CF998);
    if (v37(v52, 1, v3) == 1)
    {
      v53 = MEMORY[0x24BEE4AF8];
      *v45 = MEMORY[0x24BEE4AF8];
      v45[1] = v53;
      sub_244AE3C00();
      v54 = (_QWORD *)((char *)v45 + *(int *)(v3 + 28));
      *v54 = 0;
      v54[1] = 0;
      v55 = (char *)v45 + *(int *)(v3 + 32);
      *(_QWORD *)v55 = 0;
      *((_WORD *)v55 + 4) = 256;
      sub_244A72890(v52, &qword_2573CF998);
    }
    else
    {
      sub_244A729FC(v52, (uint64_t)v45, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    }
    v56 = (uint64_t *)v84;
    v57 = *((_BYTE *)v45 + *(int *)(v3 + 32) + 9);
    sub_244A729C0((uint64_t)v45, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    if ((v57 & 1) == 0)
    {
      v58 = v78;
      sub_244A7284C(v38, v78, &qword_2573CF998);
      if (v37(v58, 1, v3) == 1)
      {
        v59 = MEMORY[0x24BEE4AF8];
        v60 = v79;
        *v79 = MEMORY[0x24BEE4AF8];
        v60[1] = v59;
        sub_244AE3C00();
        v61 = (_QWORD *)((char *)v60 + *(int *)(v3 + 28));
        *v61 = 0;
        v61[1] = 0;
        v62 = (char *)v60 + *(int *)(v3 + 32);
        *(_QWORD *)v62 = 0;
        *((_WORD *)v62 + 4) = 256;
        sub_244A72890(v58, &qword_2573CF998);
      }
      else
      {
        v60 = v79;
        sub_244A729FC(v58, (uint64_t)v79, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      }
      v63 = (char *)v60 + *(int *)(v3 + 32);
      if ((v63[9] & 1) != 0)
      {
        sub_244A729C0((uint64_t)v60, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      }
      else
      {
        v64 = (uint64_t)v60;
        v65 = *(_QWORD *)v63;
        v66 = v63[8];
        sub_244A729C0(v64, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
        if ((v66 & 1) != 0 && v65)
          *(_BYTE *)(v42 + 32) = v65 != 1;
      }
    }
    v67 = v83;
    sub_244A7284C(v38, v83, &qword_2573CF998);
    if (v37(v67, 1, v3) == 1)
    {
      v68 = MEMORY[0x24BEE4AF8];
      *v56 = MEMORY[0x24BEE4AF8];
      v56[1] = v68;
      sub_244AE3C00();
      v69 = (uint64_t *)((char *)v56 + *(int *)(v3 + 28));
      *v69 = 0;
      v69[1] = 0;
      v70 = (char *)v56 + *(int *)(v3 + 32);
      *(_QWORD *)v70 = 0;
      *((_WORD *)v70 + 4) = 256;
      sub_244A72890(v67, &qword_2573CF998);
    }
    else
    {
      sub_244A729FC(v67, (uint64_t)v56, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    }
    v71 = v86;
    v72 = *v56;
    swift_bridgeObjectRetain();
    sub_244A729C0((uint64_t)v56, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v42 + 24) = v72;
    v73 = v85;
    sub_244A7284C(v38, v85, &qword_2573CF998);
    if (v37(v73, 1, v3) == 1)
    {
      v74 = MEMORY[0x24BEE4AF8];
      *v71 = MEMORY[0x24BEE4AF8];
      v71[1] = v74;
      sub_244AE3C00();
      v75 = (_QWORD *)((char *)v71 + *(int *)(v3 + 28));
      *v75 = 0;
      v75[1] = 0;
      v76 = (char *)v71 + *(int *)(v3 + 32);
      *(_QWORD *)v76 = 0;
      *((_WORD *)v76 + 4) = 256;
      sub_244A72890(v73, &qword_2573CF998);
    }
    else
    {
      sub_244A729FC(v73, (uint64_t)v71, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    }
    v77 = v71[1];
    swift_bridgeObjectRetain();
    sub_244A729C0((uint64_t)v71, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v42 + 16) = v77;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24951E268]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_244A71308(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244A71338(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6DD9C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A71350(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6DE58(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A71368(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6DF34(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A71380(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6F1C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A71398(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6EE68(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A713B0(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6EB0C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A713C8(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6E7B0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A713E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  char v58;
  double v59;
  double v60;
  double v61;
  char v62;
  uint64_t v63;
  char *v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  float v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  int *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  void (**v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  char v94;
  char v95;
  uint64_t v96;
  unsigned int v97;
  char v98;
  char v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  unsigned int (*v107)(uint64_t, uint64_t, int *);
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  int v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  NSObject *v143;
  int v144;
  int v145;
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char *v152;
  os_signpost_id_t v153;
  void (*v154)(char *, uint64_t);
  double v155;
  char *v156;
  char *v157;
  char *v158;
  void (**v159)(uint64_t, uint64_t);
  char *v160;
  uint64_t v161;
  double v162;
  uint64_t v163;
  char *v164;
  char *v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  double v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  double v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  double v193;
  uint64_t v194;

  v171 = a2;
  v186 = a1;
  v180 = sub_244AE411C();
  v183 = *(_QWORD *)(v180 - 8);
  v3 = MEMORY[0x24BDAC7A8](v180);
  v179 = (char *)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v182 = (char *)&v155 - v5;
  v174 = sub_244AE3B4C();
  v173 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174);
  v172 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_244AE41AC();
  v168 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v169 = (char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_244AE4140();
  v177 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v176 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v167 = (uint64_t)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v164 = (char *)&v155 - v12;
  v13 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  v163 = *((_QWORD *)v13 - 1);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v166 = (_QWORD *)((char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v165 = (char *)&v155 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9D0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)&v162 = (char *)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v160 = (char *)&v155 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v159 = (void (**)(uint64_t, uint64_t))((char *)&v155 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)&v185 = (char *)&v155 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v158 = (char *)&v155 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v157 = (char *)&v155 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v184 = (char *)&v155 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v156 = (char *)&v155 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9D8);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v155 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_244AE40D4();
  v175 = *(_QWORD *)(v187 - 8);
  MEMORY[0x24BDAC7A8](v187);
  v181 = (char *)&v155 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E0);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v155 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v155 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E8);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v155 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = *(int *)(v40 + 20);
  v46 = *(_QWORD *)(v2 + v161)
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
  swift_beginAccess();
  sub_244A7284C(v46, (uint64_t)v45, &qword_2573CF9E8);
  v47 = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  LODWORD(v46) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v45, 1, v47);
  sub_244A72890((uint64_t)v45, &qword_2573CF9E8);
  v188 = v2;
  sub_244A72964(v2, (uint64_t)v42, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
  if ((_DWORD)v46 == 1)
  {
    v48 = *(_QWORD *)&v42[*(int *)(v40 + 20)]
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v48, (uint64_t)v39, &qword_2573CF9E0);
    v49 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
    LODWORD(v48) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v39, 1, v49);
    sub_244A72890((uint64_t)v39, &qword_2573CF9E0);
    result = sub_244A729C0((uint64_t)v42, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    if ((_DWORD)v48 == 1)
      return result;
  }
  else
  {
    result = sub_244A729C0((uint64_t)v42, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
  }
  v193 = 0.0;
  v194 = 0;
  MEMORY[0x24BDAC7A8](result);
  *((_QWORD *)&v155 - 4) = v188;
  *((_QWORD *)&v155 - 3) = &v194;
  *((_QWORD *)&v155 - 2) = &v193;
  v51 = v181;
  sub_244AE40F8();
  sub_244AE41D0();
  swift_allocObject();
  v52 = sub_244AE41C4();
  MEMORY[0x24BDAC7A8](v52);
  *((_QWORD *)&v155 - 2) = v186;
  *((_QWORD *)&v155 - 1) = v51;
  sub_244AE41B8();
  swift_release();
  v53 = sub_244AE3F0C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v35, 0, 1, v53);
  v54 = (uint64_t)v159;
  v55 = (uint64_t)v156;
  v56 = sub_244A72890((uint64_t)v35, &qword_2573CF9D8);
  v57 = COERCE_DOUBLE(MEMORY[0x24951DA40](v56));
  v59 = 0.0;
  if ((v58 & 1) != 0)
    v60 = 0.0;
  else
    v60 = v57;
  v61 = COERCE_DOUBLE(MEMORY[0x24951DAE8]());
  if ((v62 & 1) == 0)
    v59 = v61;
  sub_244AE3F18();
  v63 = sub_244AE3FF0();
  v64 = *(char **)(v63 - 8);
  v65 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v64 + 6);
  if (v65(v55, 1, v63) == 1)
  {
    sub_244A72890(v55, &qword_2573CF9D0);
    v66 = 0.0;
  }
  else
  {
    v67 = sub_244AE3F30();
    (*((void (**)(uint64_t, uint64_t))v64 + 1))(v55, v63);
    if ((v67 & 0x100000000) != 0)
      v66 = 0.0;
    else
      v66 = *(float *)&v67;
  }
  v68 = (uint64_t)v157;
  sub_244AE3F18();
  v69 = (uint64_t)v184;
  v70 = v65((uint64_t)v184, 1, v63);
  v71 = (uint64_t)v164;
  v159 = (void (**)(uint64_t, uint64_t))v64;
  if (v70 == 1)
  {
    sub_244A72890(v69, &qword_2573CF9D0);
    v72 = (uint64_t)v158;
  }
  else
  {
    v73 = v65;
    v74 = v64;
    v75 = v51;
    v76 = v54;
    v77 = v13;
    v78 = v164;
    v79 = v69;
    v80 = sub_244AE3F90();
    v81 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v74 + 1);
    v65 = v73;
    v82 = v79;
    v71 = (uint64_t)v78;
    v13 = v77;
    v54 = v76;
    v51 = v75;
    v81(v82, v63);
    v72 = (uint64_t)v158;
    if ((v80 & 0x100000000) == 0)
      goto LABEL_19;
  }
  v80 = 0;
LABEL_19:
  v184 = (char *)v80;
  sub_244AE3F18();
  if (v65(v68, 1, v63) == 1)
  {
    sub_244A72890(v68, &qword_2573CF9D0);
    v83 = v159;
  }
  else
  {
    v84 = sub_244AE3FA8();
    v83 = v159;
    v159[1](v68, v63);
    if ((v84 & 0x100000000) == 0)
      goto LABEL_23;
  }
  v84 = 0;
LABEL_23:
  v158 = (char *)v84;
  sub_244AE3F18();
  if (v65(v72, 1, v63) == 1)
  {
    sub_244A72890(v72, &qword_2573CF9D0);
  }
  else
  {
    v85 = sub_244AE3F60();
    v83[1](v72, v63);
    if ((v85 & 0x100000000) == 0)
      goto LABEL_27;
  }
  v85 = 0;
LABEL_27:
  sub_244AE3F18();
  v86 = *(_QWORD *)&v185;
  if (v65(*(_QWORD *)&v185, 1, v63) == 1)
  {
    sub_244A72890(v86, &qword_2573CF9D0);
  }
  else
  {
    v87 = v65;
    v88 = v86;
    v89 = sub_244AE3F78();
    v90 = v88;
    v65 = v87;
    v83[1](v90, v63);
    if ((v89 & 0x100000000) == 0)
      goto LABEL_31;
  }
  v89 = 0;
LABEL_31:
  v156 = (char *)v89;
  sub_244AE3F18();
  if (v65(v54, 1, v63) == 1)
  {
    sub_244A72890(v54, &qword_2573CF9D0);
  }
  else
  {
    v91 = MEMORY[0x24951D9EC]();
    v92 = v54;
    v93 = *(double *)&v91;
    v95 = v94;
    v83[1](v92, v63);
    if ((v95 & 1) == 0)
    {
      v155 = v93;
      goto LABEL_36;
    }
  }
  v155 = 0.0;
LABEL_36:
  v96 = (uint64_t)v160;
  sub_244AE3F18();
  v97 = v65(v96, 1, v63);
  v157 = (char *)v85;
  if (v97 == 1)
  {
    sub_244A72890(v96, &qword_2573CF9D0);
  }
  else
  {
    v185 = COERCE_DOUBLE(MEMORY[0x24951DA04]());
    v99 = v98;
    v83[1](v96, v63);
    if ((v99 & 1) == 0)
      goto LABEL_40;
  }
  v185 = 0.0;
LABEL_40:
  v100 = *(_QWORD *)&v162;
  sub_244AE3F18();
  if (v65(v100, 1, v63) == 1)
  {
    sub_244A72890(v100, &qword_2573CF9D0);
    v101 = v165;
    v102 = v161;
LABEL_44:
    v162 = 0.0;
    goto LABEL_45;
  }
  *(double *)&v103 = COERCE_DOUBLE(MEMORY[0x24951D974]());
  v105 = v104;
  v83[1](v100, v63);
  v101 = v165;
  v102 = v161;
  if ((v105 & 1) != 0)
    goto LABEL_44;
  v162 = *(double *)&v103;
LABEL_45:
  v106 = *(_QWORD *)(v188 + v102)
       + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  swift_beginAccess();
  sub_244A7284C(v106, v71, &qword_2573CF9C8);
  v107 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v163 + 48);
  if (v107(v71, 1, v13) == 1)
  {
    *v101 = MEMORY[0x24BEE4AF8];
    sub_244AE3C00();
    v108 = (char *)v101 + v13[6];
    *(_DWORD *)v108 = 0;
    v108[4] = 1;
    v109 = (char *)v101 + v13[7];
    *(_DWORD *)v109 = 0;
    v109[4] = 1;
    v110 = (char *)v101 + v13[8];
    *(_QWORD *)v110 = 0;
    v110[8] = 1;
    v111 = (char *)v101 + v13[9];
    *(_QWORD *)v111 = 0;
    v111[8] = 1;
    v112 = (char *)v101 + v13[10];
    *(_QWORD *)v112 = 0;
    v112[8] = 1;
    v113 = (char *)v101 + v13[11];
    *(_QWORD *)v113 = 0;
    v113[8] = 1;
    v114 = (char *)v101 + v13[12];
    *(_QWORD *)v114 = 0;
    v114[8] = 1;
    sub_244A72890(v71, &qword_2573CF9C8);
  }
  else
  {
    sub_244A729FC(v71, (uint64_t)v101, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
  }
  v115 = (char *)v101 + v13[6];
  if (v115[4])
    v116 = 0;
  else
    v116 = *(_DWORD *)v115;
  LODWORD(v165) = v116;
  sub_244A729C0((uint64_t)v101, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
  v117 = *(_QWORD *)(v188 + v102)
       + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  swift_beginAccess();
  v118 = v167;
  sub_244A7284C(v117, v167, &qword_2573CF9C8);
  if (v107(v118, 1, v13) == 1)
  {
    v119 = v166;
    *v166 = MEMORY[0x24BEE4AF8];
    sub_244AE3C00();
    v120 = (char *)v119 + v13[6];
    *(_DWORD *)v120 = 0;
    v120[4] = 1;
    v121 = (char *)v119 + v13[7];
    *(_DWORD *)v121 = 0;
    v121[4] = 1;
    v122 = (char *)v119 + v13[8];
    *(_QWORD *)v122 = 0;
    v122[8] = 1;
    v123 = (char *)v119 + v13[9];
    *(_QWORD *)v123 = 0;
    v123[8] = 1;
    v124 = (char *)v119 + v13[10];
    *(_QWORD *)v124 = 0;
    v124[8] = 1;
    v125 = (char *)v119 + v13[11];
    *(_QWORD *)v125 = 0;
    v125[8] = 1;
    v126 = (char *)v119 + v13[12];
    *(_QWORD *)v126 = 0;
    v126[8] = 1;
    sub_244A72890(v118, &qword_2573CF9C8);
  }
  else
  {
    v119 = v166;
    sub_244A729FC(v118, (uint64_t)v166, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
  }
  v127 = v172;
  v128 = (char *)v119 + v13[7];
  LODWORD(v188) = *(_DWORD *)v128;
  v129 = v128[4];
  sub_244A729C0((uint64_t)v119, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
  (*(void (**)(char *, uint64_t, uint64_t))(v168 + 16))(v169, v171, v170);
  v130 = v176;
  sub_244AE4128();
  v131 = v173;
  v132 = v174;
  (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v127, v186, v174);
  sub_244A728CC();
  sub_244A6DA34();
  sub_244A72910(v133);
  sub_244A6DA34();
  sub_244A72910(v134);
  sub_244A6DA34();
  sub_244A72910(v135);
  sub_244A6DA34();
  sub_244A72910(v136);
  sub_244A72920();
  sub_244A6DA34();
  sub_244A72910(v137);
  sub_244A6DA34();
  sub_244A72910(v138);
  sub_244A6DA34();
  sub_244A72910(v139);
  sub_244A6DA34();
  sub_244A72910(v140);
  sub_244A6DA34();
  sub_244A72910(v141);
  v142 = v182;
  sub_244AE4110();
  v143 = sub_244AE4134();
  v144 = sub_244AE438C();
  if ((sub_244AE4398() & 1) != 0)
  {
    v145 = v188;
    if (v129)
      v145 = 0;
    LODWORD(v186) = v145;
    v146 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
    LODWORD(v188) = v144;
    v147 = v180;
    v146(v179, v142, v180);
    v148 = swift_slowAlloc();
    v149 = swift_slowAlloc();
    v192 = v149;
    *(_DWORD *)v148 = 136449794;
    v150 = sub_244AE3B34();
    v191 = sub_244A80950(v150, v151, &v192);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v127, v132);
    *(_WORD *)(v148 + 12) = 2050;
    swift_beginAccess();
    v190 = v194;
    sub_244AE43B0();
    *(_WORD *)(v148 + 22) = 2050;
    swift_beginAccess();
    v189 = v193;
    sub_244AE43B0();
    *(_WORD *)(v148 + 32) = 2050;
    v189 = v60;
    sub_244AE43B0();
    *(_WORD *)(v148 + 42) = 2050;
    v189 = v59;
    sub_244AE43B0();
    *(_WORD *)(v148 + 52) = 2050;
    v189 = v66;
    sub_244AE43B0();
    *(_WORD *)(v148 + 62) = 1026;
    LODWORD(v189) = (_DWORD)v184;
    sub_244AE43B0();
    *(_WORD *)(v148 + 68) = 1026;
    LODWORD(v189) = (_DWORD)v158;
    sub_244AE43B0();
    *(_WORD *)(v148 + 74) = 1026;
    LODWORD(v189) = (_DWORD)v157;
    sub_244AE43B0();
    *(_WORD *)(v148 + 80) = 1026;
    LODWORD(v189) = (_DWORD)v156;
    sub_244AE43B0();
    *(_WORD *)(v148 + 86) = 2050;
    v189 = v155;
    sub_244AE43B0();
    *(_WORD *)(v148 + 96) = 2050;
    v189 = v185;
    sub_244AE43B0();
    *(_WORD *)(v148 + 106) = 2050;
    v189 = v162;
    sub_244AE43B0();
    *(_WORD *)(v148 + 116) = 1026;
    LODWORD(v189) = (_DWORD)v165;
    sub_244AE43B0();
    *(_WORD *)(v148 + 122) = 1026;
    v51 = v181;
    LODWORD(v189) = v186;
    sub_244AE43B0();
    v152 = v179;
    v153 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v143, (os_signpost_type_t)v188, v153, "PrivateCloudMetrics", "requestIdentifier=%{public, signpost.description=attribute,public}s timeToFirstTokenMillis=%{public, signpost.description=attribute,public}f extendLatencyMillis=%{public, signpost.description=attribute,public}f totalInferenceMillis=%{public, signpost.description=attribute,public}f tokenRate=%{public, signpost.description=attribute,public}f speculativeDecodingAcceptanceRate=%{public, signpost.description=attribute,public}f draftModelInferenceCallCount=%{public, signpost.description=attribute,public}u targetModelInferenceCallCount=%{public, signpost.description=attribute,public}u draftOutputTokenCount=%{public, signpost.description=attribute,public}u targetOutputTokenCount=%{public, signpost.description=attribute,public}u draftModelTotalInferenceLatencyMillis=%{public, signpost.description=attribute,public}llu targetModelTotalInferenceLatencyMillis=%{public, signpost.description=attribute,public}llu draftSteps=%{public, signpost.description=attribute,public}llu inputTokensCount=%{public, signpost.description=attribute,public}u outputTokensCount=%{public, signpost.description=attribute,public}u", (uint8_t *)v148, 0x80u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v149, -1, -1);
    MEMORY[0x24951E31C](v148, -1, -1);

    v154 = *(void (**)(char *, uint64_t))(v183 + 8);
    v154(v182, v147);
    (*(void (**)(char *, uint64_t))(v177 + 8))(v130, v178);
    v154(v152, v147);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v131 + 8))(v127, v132);
    (*(void (**)(char *, uint64_t))(v183 + 8))(v142, v180);
    (*(void (**)(char *, uint64_t))(v177 + 8))(v130, v178);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v175 + 8))(v51, v187);
}

uint64_t sub_244A72818(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6C9A8(a1, *(_QWORD *)(v1 + 16), *(double **)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t sub_244A72834(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6D898(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_244A7284C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_244A72890(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_244A728CC()
{
  unint64_t result;

  result = qword_2573CF9F0;
  if (!qword_2573CF9F0)
  {
    result = MEMORY[0x24951E280](MEMORY[0x24BEE4540], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_2573CF9F0);
  }
  return result;
}

uint64_t sub_244A72910(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_244A72920()
{
  unint64_t result;

  result = qword_2573CF9F8;
  if (!qword_2573CF9F8)
  {
    result = MEMORY[0x24951E280](MEMORY[0x24BEE45A8], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2573CF9F8);
  }
  return result;
}

uint64_t sub_244A72964(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_244A729A8(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6DAA0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244A729C0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_244A729FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_244A72A40(uint64_t a1)
{
  return sub_244A71338(a1);
}

uint64_t static Logger.create<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_244A72A98(a1, a2);
  return sub_244AE41A0();
}

uint64_t sub_244A72A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v11;

  v4 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v8((char *)&v11 - v9, a1, a2);
  if ((swift_dynamicCast() & 1) != 0)
    return v11;
  v8(v6, a1, a2);
  return sub_244AE423C();
}

uint64_t sub_244A72B70()
{
  uint64_t result;

  result = os_variant_has_internal_content();
  byte_2573CFA00 = result;
  return result;
}

uint64_t static OSVariant.isInternalBuild.getter()
{
  return sub_244A72CCC(&qword_2573CF760, (unsigned __int8 *)&byte_2573CFA00);
}

uint64_t static OSVariant.isInternalBuild.setter(char a1)
{
  return sub_244A72D3C(a1, &qword_2573CF760, &byte_2573CFA00);
}

uint64_t (*static OSVariant.isInternalBuild.modify())()
{
  if (qword_2573CF760 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_244A72C38()
{
  uint64_t result;

  if (qword_2573CF760 != -1)
    swift_once();
  result = swift_beginAccess();
  byte_2573CFA01 = (byte_2573CFA00 & 1) == 0;
  return result;
}

uint64_t static OSVariant.isCustomerBuild.getter()
{
  return sub_244A72CCC(&qword_2573CF768, (unsigned __int8 *)&byte_2573CFA01);
}

uint64_t sub_244A72CCC(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return *a2;
}

uint64_t static OSVariant.isCustomerBuild.setter(char a1)
{
  return sub_244A72D3C(a1, &qword_2573CF768, &byte_2573CFA01);
}

uint64_t sub_244A72D3C(char a1, _QWORD *a2, _BYTE *a3)
{
  uint64_t result;

  if (*a2 != -1)
    swift_once();
  result = swift_beginAccess();
  *a3 = a1 & 1;
  return result;
}

uint64_t (*static OSVariant.isCustomerBuild.modify())()
{
  if (qword_2573CF768 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for OSVariant()
{
  return &type metadata for OSVariant;
}

uint64_t *sub_244A72E20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3B64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
    v9 = *(int *)(v8 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    v13 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_244AE41AC();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_244A72F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_244AE41AC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_244A72FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  v12 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_244AE41AC();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_244A73094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_244A73188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_244A7322C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_244A732F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A73304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_244AE41AC();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_244A733AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A733B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_244AE41AC();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for PrivateCloudComputeTransport()
{
  uint64_t result;

  result = qword_2573CFA60;
  if (!qword_2573CFA60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244A73498()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(319);
  if (v1 <= 0x3F)
  {
    result = sub_244AE41AC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_244A73528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v5 = sub_244AE41AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244AE3B64();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A72964(a1, a2, type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_244AE3B94();
  swift_allocObject();
  v13 = sub_244AE3B70();
  if (v2)
  {
    sub_244A729C0(a1, type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration);
    return sub_244A729C0(a2, type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration);
  }
  else
  {
    v15 = v13;
    v16 = type metadata accessor for PrivateCloudComputeTransport();
    *(_QWORD *)(a2 + *(int *)(v16 + 20)) = v15;
    sub_244AE41A0();
    sub_244A729C0(a1, type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + *(int *)(v16 + 24), v8, v5);
  }
}

unint64_t sub_244A736D8(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  double v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  result = sub_244A83D9C((uint64_t)&unk_2515AE6B8);
  v5 = floor((double)a1 / 250.0);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((unsigned __int128)((uint64_t)v5 * (__int128)250) >> 64 != (250 * (uint64_t)v5) >> 63)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((unsigned __int128)(((uint64_t)v5 + 1) * (__int128)250) >> 64 != (250 * ((uint64_t)v5 + 1)) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  v7 = sub_244AE44C4();
  v9 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_244A7CA30(v7, v9, 0xD000000000000027, 0x8000000244AE9420, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v11 = sub_244AE44C4();
  v13 = v12;
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_244A7CA30(v11, v13, 0xD000000000000023, 0x8000000244AE9450, v14);
  result = swift_bridgeObjectRelease();
  v15 = floor((double)a2 / 15.0);
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((unsigned __int128)((uint64_t)v15 * (__int128)15) >> 64 != (15 * (uint64_t)v15) >> 63)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((unsigned __int128)(((uint64_t)v15 + 1) * (__int128)15) >> 64 == (15 * ((uint64_t)v15 + 1)) >> 63)
  {
    v16 = sub_244AE44C4();
    v18 = v17;
    v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_244A7CA30(v16, v18, 0xD00000000000002FLL, 0x8000000244AE9480, v19);
    swift_bridgeObjectRelease();
    v20 = sub_244AE44C4();
    v22 = v21;
    v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_244A7CA30(v20, v22, 0xD00000000000002BLL, 0x8000000244AE94B0, v23);
    swift_bridgeObjectRelease();
    return v6;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_244A739F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9[14] = a8;
  v9[15] = v8;
  v9[12] = a6;
  v9[13] = a7;
  v9[10] = a4;
  v9[11] = a5;
  v9[8] = a2;
  v9[9] = a3;
  v9[7] = a1;
  v10 = sub_244AE3B4C();
  v9[16] = v10;
  v9[17] = *(_QWORD *)(v10 - 8);
  v9[18] = swift_task_alloc();
  v9[19] = swift_task_alloc();
  v11 = sub_244AE3BE8();
  v9[20] = v11;
  v9[21] = *(_QWORD *)(v11 - 8);
  v9[22] = swift_task_alloc();
  v12 = sub_244AE41AC();
  v9[23] = v12;
  v9[24] = *(_QWORD *)(v12 - 8);
  v9[25] = swift_task_alloc();
  v9[26] = type metadata accessor for PrivateMLRequest(0);
  v9[27] = swift_task_alloc();
  v9[28] = swift_task_alloc();
  v9[29] = swift_task_alloc();
  v9[30] = swift_task_alloc();
  v9[31] = swift_task_alloc();
  v9[32] = swift_task_alloc();
  v9[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244A73B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  unint64_t v130;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(int *)(type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0) + 24);
  if (*(_QWORD *)(v1 + v2))
    v3 = *(_QWORD *)(v1 + v2);
  else
    v3 = sub_244A83D9C(MEMORY[0x24BEE4AF8]);
  v4 = (uint64_t *)(v0 + 40);
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  if (!v5 || (v6 = sub_244A93B08(0xD000000000000014, 0x8000000244AE95B0), (v7 & 1) == 0))
  {
    sub_244A72964(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 264), type metadata accessor for PrivateMLRequest);
    goto LABEL_9;
  }
  v8 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v6);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain();
  sub_244A72964(v9, v8, type metadata accessor for PrivateMLRequest);
  if (!v12)
  {
LABEL_9:
    v13 = *(_QWORD *)(v0 + 264);
    v14 = (uint64_t *)(v13 + *(int *)(*(_QWORD *)(v0 + 208) + 104));
    v11 = *v14;
    v12 = v14[1];
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  v13 = *(_QWORD *)(v0 + 264);
LABEL_10:
  sub_244A729C0(v13, type metadata accessor for PrivateMLRequest);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v130 = v3;
  sub_244A7CA30(v11, v12, 0xD000000000000014, 0x8000000244AE95B0, isUniquelyReferenced_nonNull_native);
  *v4 = v3;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v3 + 16) || (v16 = sub_244A93B08(0x6C65646F6DLL, 0xE500000000000000), (v17 & 1) == 0))
  {
    sub_244A72964(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 256), type metadata accessor for PrivateMLRequest);
    goto LABEL_15;
  }
  v18 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 64);
  v20 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v16);
  v21 = *v20;
  v22 = v20[1];
  swift_bridgeObjectRetain();
  sub_244A72964(v19, v18, type metadata accessor for PrivateMLRequest);
  if (!v22)
  {
LABEL_15:
    v23 = *(_QWORD *)(v0 + 256);
    v24 = (uint64_t *)(v23 + *(int *)(*(_QWORD *)(v0 + 208) + 24));
    v21 = *v24;
    v22 = v24[1];
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  v23 = *(_QWORD *)(v0 + 256);
LABEL_16:
  sub_244A729C0(v23, type metadata accessor for PrivateMLRequest);
  v25 = swift_isUniquelyReferenced_nonNull_native();
  v130 = v3;
  sub_244A7CA30(v21, v22, 0x6C65646F6DLL, 0xE500000000000000, v25);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v3 + 16) || (v26 = sub_244A93B08(0x72657470616461, 0xE700000000000000), (v27 & 1) == 0))
  {
    sub_244A72964(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 248), type metadata accessor for PrivateMLRequest);
    goto LABEL_21;
  }
  v28 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 64);
  v30 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v26);
  v31 = *v30;
  v32 = v30[1];
  swift_bridgeObjectRetain();
  sub_244A72964(v29, v28, type metadata accessor for PrivateMLRequest);
  if (!v32)
  {
LABEL_21:
    v33 = *(_QWORD *)(v0 + 248);
    v34 = (uint64_t *)(v33 + *(int *)(*(_QWORD *)(v0 + 208) + 32));
    v31 = *v34;
    v32 = v34[1];
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  v33 = *(_QWORD *)(v0 + 248);
LABEL_22:
  sub_244A729C0(v33, type metadata accessor for PrivateMLRequest);
  v35 = swift_isUniquelyReferenced_nonNull_native();
  v130 = v3;
  sub_244A7CA30(v31, v32, 0x72657470616461, 0xE700000000000000, v35);
  *v4 = v3;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 16) && (v36 = sub_244A93B08(0xD000000000000010, 0x8000000244AE95D0), (v37 & 1) != 0))
  {
    v38 = *(_QWORD *)(v0 + 240);
    v39 = *(_QWORD *)(v0 + 64);
    v40 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v36);
    v41 = *v40;
    v42 = v40[1];
    swift_bridgeObjectRetain();
    sub_244A72964(v39, v38, type metadata accessor for PrivateMLRequest);
    if (v42)
      goto LABEL_28;
  }
  else
  {
    sub_244A72964(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 240), type metadata accessor for PrivateMLRequest);
  }
  *(_DWORD *)(v0 + 296) = *(_DWORD *)(*(_QWORD *)(v0 + 240) + *(int *)(*(_QWORD *)(v0 + 208) + 64));
  v41 = sub_244AE44C4();
  v42 = v43;
LABEL_28:
  v44 = *(_QWORD *)(v0 + 208);
  v45 = *(_QWORD *)(v0 + 64);
  sub_244A729C0(*(_QWORD *)(v0 + 240), type metadata accessor for PrivateMLRequest);
  v46 = sub_244A74924(v41, v42);
  if ((v47 & 1) != 0)
    v48 = 0;
  else
    v48 = v46;
  v49 = sub_244A736D8(*(_QWORD *)(v45 + *(int *)(v44 + 108)), v48);
  if (*(_QWORD *)(v49 + 16) && (v50 = sub_244A93B08(0xD000000000000027, 0x8000000244AE9420), (v51 & 1) != 0))
  {
    v52 = (uint64_t *)(*(_QWORD *)(v49 + 56) + 16 * v50);
    v53 = *v52;
    v54 = v52[1];
    swift_bridgeObjectRetain();
    v55 = *v4;
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v130 = v55;
    sub_244A7CA30(v53, v54, 0xD000000000000027, 0x8000000244AE9420, v56);
    *v4 = v55;
  }
  else
  {
    sub_244A7C454(0xD000000000000027, 0x8000000244AE9420);
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v49 + 16) && (v57 = sub_244A93B08(0xD000000000000023, 0x8000000244AE9450), (v58 & 1) != 0))
  {
    v59 = (uint64_t *)(*(_QWORD *)(v49 + 56) + 16 * v57);
    v60 = *v59;
    v61 = v59[1];
    swift_bridgeObjectRetain();
    v62 = *v4;
    v63 = swift_isUniquelyReferenced_nonNull_native();
    v130 = v62;
    sub_244A7CA30(v60, v61, 0xD000000000000023, 0x8000000244AE9450, v63);
    *v4 = v62;
  }
  else
  {
    sub_244A7C454(0xD000000000000023, 0x8000000244AE9450);
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v49 + 16) && (v64 = sub_244A93B08(0xD00000000000002FLL, 0x8000000244AE9480), (v65 & 1) != 0))
  {
    v66 = (uint64_t *)(*(_QWORD *)(v49 + 56) + 16 * v64);
    v67 = *v66;
    v68 = v66[1];
    swift_bridgeObjectRetain();
    v69 = *v4;
    v70 = swift_isUniquelyReferenced_nonNull_native();
    v130 = v69;
    sub_244A7CA30(v67, v68, 0xD00000000000002FLL, 0x8000000244AE9480, v70);
    *v4 = v69;
  }
  else
  {
    sub_244A7C454(0xD00000000000002FLL, 0x8000000244AE9480);
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v49 + 16) && (v71 = sub_244A93B08(0xD00000000000002BLL, 0x8000000244AE94B0), (v72 & 1) != 0))
  {
    v73 = (uint64_t *)(*(_QWORD *)(v49 + 56) + 16 * v71);
    v74 = *v73;
    v75 = v73[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v76 = *v4;
    v77 = swift_isUniquelyReferenced_nonNull_native();
    v130 = v76;
    sub_244A7CA30(v74, v75, 0xD00000000000002BLL, 0x8000000244AE94B0, v77);
    *v4 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_244A7C454(0xD00000000000002BLL, 0x8000000244AE94B0);
  }
  swift_bridgeObjectRelease();
  if (qword_2573CF760 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_2573CFA00 == 1)
  {
    v78 = *(_QWORD *)(v0 + 232);
    v79 = *(_QWORD *)(v0 + 192);
    v80 = *(_QWORD *)(v0 + 200);
    v81 = *(_QWORD *)(v0 + 184);
    v82 = *(_QWORD *)(v0 + 120);
    v83 = *(_QWORD *)(v0 + 64);
    v84 = type metadata accessor for PrivateCloudComputeTransport();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v80, v82 + *(int *)(v84 + 24), v81);
    sub_244A72964(v83, v78, type metadata accessor for PrivateMLRequest);
    v85 = sub_244AE4194();
    v86 = sub_244AE4368();
    v87 = os_log_type_enabled(v85, v86);
    v88 = *(_QWORD *)(v0 + 232);
    v90 = *(_QWORD *)(v0 + 192);
    v89 = *(_QWORD *)(v0 + 200);
    v91 = *(_QWORD *)(v0 + 184);
    if (v87)
    {
      v92 = (uint8_t *)swift_slowAlloc();
      v93 = swift_slowAlloc();
      v130 = v93;
      *(_DWORD *)v92 = 136315138;
      sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v94 = sub_244AE44C4();
      *(_QWORD *)(v0 + 48) = sub_244A80950(v94, v95, (uint64_t *)&v130);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      sub_244A729C0(v88, type metadata accessor for PrivateMLRequest);
      _os_log_impl(&dword_244A6B000, v85, v86, "%s Running internal build, applying overrides.", v92, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v93, -1, -1);
      MEMORY[0x24951E31C](v92, -1, -1);

    }
    else
    {
      sub_244A729C0(*(_QWORD *)(v0 + 232), type metadata accessor for PrivateMLRequest);

    }
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
    v96 = sub_244AE3B34();
    v98 = v97;
    v99 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    v100 = sub_244A9B5A0(v96, v98, v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 40) = v100;
    swift_bridgeObjectRelease();
  }
  v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 16);
  v101(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 128));
  v102 = *(_QWORD *)(v0 + 40);
  v103 = *(_QWORD *)(v102 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v103 || (v104 = sub_244A93B08(0x65662D656C707061, 0xEF64696572757461), (v105 & 1) == 0))
  {
    sub_244A72964(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 224), type metadata accessor for PrivateMLRequest);
    goto LABEL_59;
  }
  v106 = *(_QWORD *)(v0 + 224);
  v107 = *(_QWORD *)(v0 + 64);
  v108 = *(_QWORD *)(*(_QWORD *)(v102 + 56) + 16 * v104 + 8);
  swift_bridgeObjectRetain();
  sub_244A72964(v107, v106, type metadata accessor for PrivateMLRequest);
  if (!v108)
  {
LABEL_59:
    v109 = *(_QWORD *)(v0 + 224);
    v110 = *(_QWORD *)(v0 + 208);
    swift_bridgeObjectRetain();
    goto LABEL_60;
  }
  v109 = *(_QWORD *)(v0 + 224);
  v110 = *(_QWORD *)(v0 + 208);
LABEL_60:
  v111 = *(_QWORD *)(v0 + 144);
  v112 = *(_QWORD *)(v0 + 128);
  v113 = *(_QWORD *)(v0 + 64);
  sub_244A729C0(v109, type metadata accessor for PrivateMLRequest);
  v101(v111, v113 + *(int *)(v110 + 84), v112);
  v114 = *(_QWORD *)(v0 + 40);
  if (!*(_QWORD *)(v114 + 16) || (v115 = sub_244A93B08(0x75622D656C707061, 0xEE006469656C646ELL), (v116 & 1) == 0))
  {
    sub_244A72964(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 216), type metadata accessor for PrivateMLRequest);
    goto LABEL_65;
  }
  v117 = *(_QWORD *)(v0 + 216);
  v118 = *(_QWORD *)(v0 + 64);
  v119 = *(_QWORD *)(*(_QWORD *)(v114 + 56) + 16 * v115 + 8);
  swift_bridgeObjectRetain();
  sub_244A72964(v118, v117, type metadata accessor for PrivateMLRequest);
  if (!v119)
  {
LABEL_65:
    v120 = *(_QWORD *)(v0 + 216);
    swift_bridgeObjectRetain();
    goto LABEL_66;
  }
  v120 = *(_QWORD *)(v0 + 216);
LABEL_66:
  v122 = *(_QWORD *)(v0 + 112);
  v121 = *(_QWORD *)(v0 + 120);
  v123 = *(_QWORD *)(v0 + 64);
  v129 = *(_QWORD *)(v0 + 72);
  v127 = *(_OWORD *)(v0 + 96);
  v128 = *(_OWORD *)(v0 + 80);
  sub_244A729C0(v120, type metadata accessor for PrivateMLRequest);
  sub_244AE3BA0();
  type metadata accessor for PrivateCloudComputeTransport();
  v124 = swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v124;
  *(_QWORD *)(v124 + 16) = v122;
  *(_QWORD *)(v124 + 24) = v121;
  *(_QWORD *)(v124 + 32) = v123;
  *(_QWORD *)(v124 + 40) = v129;
  *(_OWORD *)(v124 + 48) = v128;
  *(_OWORD *)(v124 + 64) = v127;
  v125 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v125;
  *v125 = v0;
  v125[1] = sub_244A746AC;
  return sub_244AE3B58();
}

uint64_t sub_244A746AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244A74718()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A747F4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A748D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_244A93B08(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_244A74924(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_244AE4404();
      v7 = (uint64_t)sub_244A7CF3C(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_244A7CE58(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_244A74B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[15] = v11;
  v8[16] = v12;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  v8[17] = type metadata accessor for PrivateMLRequest.Response(0);
  v8[18] = swift_task_alloc();
  v8[19] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  type metadata accessor for PrivateMLRequest(0);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  v9 = sub_244AE41AC();
  v8[27] = v9;
  v8[28] = *(_QWORD *)(v9 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244A74CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[2];

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(int *)(type metadata accessor for PrivateCloudComputeTransport() + 24);
  *(_DWORD *)(v0 + 328) = v6;
  v7 = v5 + v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v0 + 264) = v8;
  v66 = v8;
  v67 = v7;
  ((void (*)(uint64_t))v8)(v1);
  sub_244A72964(v4, v3, type metadata accessor for PrivateMLRequest);
  v9 = sub_244AE4194();
  v10 = sub_244AE4368();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 224);
    v61 = *(_QWORD *)(v0 + 216);
    v64 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 208);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v69[0] = v14;
    *(_DWORD *)v13 = 136315138;
    sub_244AE3B4C();
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v15 = sub_244AE44C4();
    *(_QWORD *)(v0 + 48) = sub_244A80950(v15, v16, v69);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v12, type metadata accessor for PrivateMLRequest);
    _os_log_impl(&dword_244A6B000, v9, v10, "%s creating proto payload for private ML request", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v14, -1, -1);
    MEMORY[0x24951E31C](v13, -1, -1);

    v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v17(v64, v61);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 256);
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 224);
    sub_244A729C0(*(_QWORD *)(v0 + 208), type metadata accessor for PrivateMLRequest);

    v17 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v17(v18, v19);
  }
  v65 = v17;
  *(_QWORD *)(v0 + 272) = v17;
  v21 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD **)(v0 + 168);
  v62 = *(_QWORD *)(v0 + 160);
  v27 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 112);
  v28 = *(_QWORD *)(v0 + 88);
  v29 = *(_QWORD *)(v0 + 96);
  sub_244A72964(v28, v23, type metadata accessor for PrivateMLRequest);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244A75A70(v23, v29, v27, v26, v25);
  v66(v21, v67, v22);
  sub_244A72964(v28, v24, type metadata accessor for PrivateMLRequest);
  sub_244A72964((uint64_t)v25, v62, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest);
  v30 = sub_244AE4194();
  v31 = sub_244AE4350();
  v32 = os_log_type_enabled(v30, v31);
  v33 = *(_QWORD *)(v0 + 248);
  v34 = *(_QWORD *)(v0 + 216);
  v35 = *(_QWORD *)(v0 + 192);
  v36 = *(_QWORD *)(v0 + 160);
  if (v32)
  {
    v63 = *(_QWORD *)(v0 + 216);
    v37 = swift_slowAlloc();
    v60 = v33;
    v38 = swift_slowAlloc();
    v69[0] = v38;
    *(_DWORD *)v37 = 136315395;
    sub_244AE3B4C();
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v39 = sub_244AE44C4();
    *(_QWORD *)(v0 + 32) = sub_244A80950(v39, v40, v69);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v35, type metadata accessor for PrivateMLRequest);
    *(_WORD *)(v37 + 12) = 2081;
    sub_244A7DAA8(&qword_2573CFAC0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8340);
    v41 = sub_244AE3D5C();
    *(_QWORD *)(v0 + 40) = sub_244A80950(v41, v42, v69);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v36, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest);
    _os_log_impl(&dword_244A6B000, v30, v31, "%s proto payload: %{private}s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v38, -1, -1);
    MEMORY[0x24951E31C](v37, -1, -1);

    v43 = v60;
    v44 = v63;
  }
  else
  {
    sub_244A729C0(*(_QWORD *)(v0 + 192), type metadata accessor for PrivateMLRequest);
    sub_244A729C0(v36, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest);

    v43 = v33;
    v44 = v34;
  }
  v65(v43, v44);
  sub_244A7DAA8(&qword_2573CFAC0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8340);
  *(_QWORD *)(v0 + 280) = sub_244AE3D44();
  *(_QWORD *)(v0 + 288) = v45;
  v46 = *(_QWORD *)(v0 + 184);
  v47 = *(_QWORD *)(v0 + 88);
  v66(*(_QWORD *)(v0 + 240), v67, *(_QWORD *)(v0 + 216));
  sub_244A72964(v47, v46, type metadata accessor for PrivateMLRequest);
  v48 = sub_244AE4194();
  v49 = sub_244AE4368();
  v50 = os_log_type_enabled(v48, v49);
  v51 = *(_QWORD *)(v0 + 240);
  v52 = *(_QWORD *)(v0 + 216);
  v53 = *(_QWORD *)(v0 + 184);
  if (v50)
  {
    v68 = *(_QWORD *)(v0 + 240);
    v54 = (uint8_t *)swift_slowAlloc();
    v55 = swift_slowAlloc();
    v69[0] = v55;
    *(_DWORD *)v54 = 136315138;
    sub_244AE3B4C();
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v56 = sub_244AE44C4();
    *(_QWORD *)(v0 + 24) = sub_244A80950(v56, v57, v69);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v53, type metadata accessor for PrivateMLRequest);
    _os_log_impl(&dword_244A6B000, v48, v49, "%s writing serialized private ML request", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v55, -1, -1);
    MEMORY[0x24951E31C](v54, -1, -1);

    v65(v68, v52);
  }
  else
  {
    sub_244A729C0(*(_QWORD *)(v0 + 184), type metadata accessor for PrivateMLRequest);

    v65(v51, v52);
  }
  v58 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v58;
  *v58 = v0;
  v58[1] = sub_244A75440;
  return sub_244AE3BAC();
}

uint64_t sub_244A75440()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244A754A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t v27;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 328);
  v10 = sub_244AE3BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v8, v10);
  sub_244A72964(v7, v5 + *(int *)(v6 + 20), type metadata accessor for PrivateMLRequest);
  v1(v2, v9, v3);
  sub_244A72964(v7, v4, type metadata accessor for PrivateMLRequest);
  v11 = sub_244AE4194();
  v12 = sub_244AE4368();
  if (os_log_type_enabled(v11, v12))
  {
    v24 = *(_QWORD *)(v0 + 232);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    v13 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 176);
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v27 = v16;
    *(_DWORD *)v15 = 136315138;
    sub_244AE3B4C();
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_244AE44C4();
    *(_QWORD *)(v0 + 16) = sub_244A80950(v17, v18, &v27);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v14, type metadata accessor for PrivateMLRequest);
    _os_log_impl(&dword_244A6B000, v11, v12, "%s invoking user's body", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v16, -1, -1);
    MEMORY[0x24951E31C](v15, -1, -1);

    v25(v24, v13);
  }
  else
  {
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    v20 = *(_QWORD *)(v0 + 232);
    v21 = *(_QWORD *)(v0 + 216);
    sub_244A729C0(*(_QWORD *)(v0 + 176), type metadata accessor for PrivateMLRequest);

    v19(v20, v21);
  }
  v26 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 120) + *(_QWORD *)(v0 + 120));
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v22;
  *v22 = v0;
  v22[1] = sub_244A75728;
  return v26(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 144));
}

uint64_t sub_244A75728()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244A7578C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  sub_244A7D674(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
  sub_244A729C0(v2, type metadata accessor for PrivateMLRequest.Response);
  sub_244A729C0(v1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A75884()
{
  uint64_t v0;

  sub_244A7D674(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
  sub_244A729C0(*(_QWORD *)(v0 + 168), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A75970()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  sub_244A7D674(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
  sub_244A729C0(v1, type metadata accessor for PrivateMLRequest.Response);
  sub_244A729C0(*(_QWORD *)(v0 + 168), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A75A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  _BYTE *v200;
  uint64_t v201;
  int *Request;
  _QWORD *v203;
  uint64_t v204;
  void (*v205)(void);
  void (*v206)(void);
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  int v212;
  char *v213;
  char *v214;
  uint64_t v215;
  void (*v216)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  int *v255;
  int v256;
  _QWORD *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int *v273;
  _QWORD *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  int *v287;
  uint64_t v288;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v290;
  _QWORD *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  _QWORD *v298;
  uint64_t v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char v307;
  _QWORD *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  int v315;
  char *v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  int *v322;
  _QWORD *v323;
  char *v324;
  uint64_t v325;
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  char *v333;
  char *v334;
  char *v335;
  char *v336;
  char *v337;
  int *v338;
  uint64_t v339;
  char *v340;
  char *v341;
  char v342;
  uint64_t v343;
  uint64_t v344;
  _QWORD *v345;
  _QWORD *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  _QWORD *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  int *v357;
  _QWORD *v358;
  char *v359;
  uint64_t v360;
  char *v361;
  char *v362;
  char *v363;
  char *v364;
  char *v365;
  char *v366;
  char *v367;
  char *v368;
  char *v369;
  char *v370;
  char *v371;
  char *v372;
  int *v373;
  char *v374;
  char v375;
  uint64_t v376;
  _QWORD *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  int *v391;
  char *v392;
  uint64_t v393;
  char *v394;
  char *v395;
  char *v396;
  char *v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  char *v404;
  char *v405;
  int *v406;
  char *v407;
  uint64_t v408;
  char v409;
  uint64_t v410;
  _QWORD *v411;
  _QWORD *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  int v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  int *v427;
  char *v428;
  uint64_t v429;
  char *v430;
  char *v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  char *v436;
  char *v437;
  char *v438;
  char *v439;
  char *v440;
  char *v441;
  int *v442;
  char *v443;
  uint64_t v444;
  char v445;
  uint64_t v446;
  uint64_t v447;
  _QWORD *v448;
  _QWORD *v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  int v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  int *v464;
  _QWORD *v465;
  char *v466;
  uint64_t v467;
  char *v468;
  char *v469;
  char *v470;
  char *v471;
  char *v472;
  char *v473;
  char *v474;
  char *v475;
  char *v476;
  char *v477;
  char *v478;
  char *v479;
  int *v480;
  char *v481;
  uint64_t v482;
  char v483;
  uint64_t v484;
  uint64_t v485;
  _QWORD *v486;
  _QWORD *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  int *v500;
  _QWORD *v501;
  char *v502;
  uint64_t v503;
  char *v504;
  char *v505;
  char *v506;
  char *v507;
  char *v508;
  char *v509;
  char *v510;
  char *v511;
  char *v512;
  char *v513;
  char *v514;
  char *v515;
  int *v516;
  char *v517;
  char v518;
  uint64_t v519;
  _QWORD *v520;
  _QWORD *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  int *v534;
  _QWORD *v535;
  char *v536;
  uint64_t v537;
  char *v538;
  char *v539;
  char *v540;
  char *v541;
  char *v542;
  char *v543;
  char *v544;
  char *v545;
  char *v546;
  char *v547;
  char *v548;
  char *v549;
  uint64_t v550;
  _QWORD *v551;
  uint64_t v552;
  int *v553;
  uint64_t v554;
  char *v555;
  uint64_t v556;
  char v557;
  uint64_t v558;
  _QWORD *v559;
  _QWORD *v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  int *v573;
  int v574;
  uint64_t v575;
  char *v576;
  uint64_t v577;
  char *v578;
  char *v579;
  char *v580;
  char *v581;
  char *v582;
  char *v583;
  char *v584;
  char *v585;
  char *v586;
  char *v587;
  char *v588;
  char *v589;
  uint64_t v590;
  char *v591;
  uint64_t v592;
  char v593;
  uint64_t v594;
  _QWORD *v595;
  _QWORD *v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  unint64_t v607;
  uint64_t i;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  unint64_t v615;
  unint64_t v616;
  uint64_t v617;
  unint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t *v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  int *v629;
  _QWORD *v630;
  char *v631;
  uint64_t v632;
  char *v633;
  char *v634;
  char *v635;
  char *v636;
  char *v637;
  char *v638;
  char *v639;
  char *v640;
  char *v641;
  char *v642;
  char *v643;
  char *v644;
  uint64_t v645;
  char *v646;
  _QWORD *v647;
  unint64_t v648;
  unint64_t v649;
  _QWORD *v650;
  _QWORD *v651;
  uint64_t v652;
  _QWORD *v653;
  int *v654;
  uint64_t *v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  _QWORD *v664;
  _QWORD *v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t *v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  _QWORD *v678;
  _QWORD *v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t *v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  _QWORD *v691;
  _QWORD *v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  unsigned __int8 v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  _QWORD *v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t *v707;
  unint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  _QWORD *v716;
  _QWORD *v717;
  uint64_t v718;
  uint64_t *v719;
  unint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  _QWORD *v725;
  _QWORD *v726;
  int v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  int *v736;
  _QWORD *v737;
  char *v738;
  uint64_t v739;
  char *v740;
  char *v741;
  char *v742;
  char *v743;
  char *v744;
  char *v745;
  char *v746;
  char *v747;
  char *v748;
  char *v749;
  char *v750;
  char *v751;
  uint64_t v752;
  _QWORD *v753;
  uint64_t v754;
  char *v755;
  uint64_t v756;
  _QWORD *v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  int v763;
  _QWORD *v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  int *v771;
  _QWORD *v772;
  char *v773;
  uint64_t v774;
  char *v775;
  char *v776;
  char *v777;
  char *v778;
  char *v779;
  char *v780;
  char *v781;
  char *v782;
  char *v783;
  char *v784;
  char *v785;
  char *v786;
  uint64_t v787;
  uint64_t v788;
  _QWORD *v789;
  uint64_t v790;
  uint64_t v791;
  _QWORD *v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  unint64_t v798;
  uint64_t v799;
  uint64_t v800;
  _QWORD *v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  int v808;
  uint64_t v809;
  unint64_t v810;
  unint64_t v811;
  unint64_t v812;
  uint64_t v813;
  int *v814;
  uint64_t v815;
  uint64_t *v816;
  uint64_t v817;
  unint64_t v818;
  uint64_t v819;
  uint64_t v820;
  unint64_t *v821;
  uint64_t v822;
  _QWORD *v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  unint64_t v828;
  int64_t v829;
  uint64_t v830;
  unint64_t v831;
  unint64_t v832;
  unint64_t v834;
  int64_t v835;
  uint64_t v836;
  uint64_t *v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t *v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  _QWORD *v844;
  _QWORD *v845;
  unint64_t v846;
  unint64_t v847;
  unint64_t v848;
  uint64_t v849;
  void (*v850)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t *v857;
  uint64_t v858;
  uint64_t v859;
  _QWORD *v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  _QWORD **v867;
  _QWORD *v868;
  unint64_t v869;
  unint64_t v870;
  _QWORD *v871;
  _QWORD *v872;
  char v873;
  uint64_t v874;
  uint64_t v875;
  int *v876;
  unint64_t *v877;
  unint64_t *v878;
  unint64_t v879;
  unint64_t v880;
  uint64_t v881;
  unsigned int (*v882)(uint64_t, uint64_t, uint64_t);
  uint64_t v883;
  uint64_t *v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  unsigned int v888;
  uint64_t v889;
  _QWORD *v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  _QWORD *v901;
  _QWORD *v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  _QWORD *v913;
  _QWORD *v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  uint64_t v920;
  uint64_t v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  _QWORD *v925;
  _QWORD *v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  char v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  uint64_t v936;
  _QWORD *v937;
  uint64_t v938;
  uint64_t v939;
  char v940;
  uint64_t v941;
  uint64_t *v942;
  unint64_t v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  _QWORD *v952;
  _QWORD *v953;
  uint64_t v954;
  _QWORD *v955;
  uint64_t v956;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  char *v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  _QWORD *v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  char *v972;
  uint64_t v973;
  uint64_t v974;
  _QWORD *v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  char *v979;
  uint64_t v980;
  _QWORD *v981;
  char *v982;
  uint64_t v983;
  void (*v984)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v985;
  uint64_t v986;
  char *v987;
  _QWORD *v988;
  _QWORD *v989;
  uint64_t v990;
  _QWORD *v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  char *v998;
  uint64_t v999;
  void (*v1000)(void);
  char *v1001;
  char *v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  unint64_t v1007;
  char *v1008;
  _QWORD *v1009;
  char *v1010;
  char *v1011;
  char *v1012;
  _QWORD *v1013;
  char *v1014;
  char *v1015;
  _QWORD *v1016;
  char *v1017;
  char *v1018;
  char *v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  char *v1028;
  uint64_t v1029;
  uint64_t v1030;
  char *v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  char *v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  _QWORD *v1048;
  _QWORD *v1049;
  uint64_t v1050;
  uint64_t v1051;
  int *v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  char *v1057;
  char *v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  unint64_t *v1063;
  char *v1064;
  uint64_t v1065;
  uint64_t v1066;
  _QWORD *v1067;
  uint64_t v1068;
  uint64_t v1069;
  char *v1070;
  char *v1071;
  uint64_t v1072;
  uint64_t v1073;
  uint64_t v1074;
  uint64_t v1075;
  uint64_t v1076;
  void (*v1077)(void);
  uint64_t v1078;
  uint64_t v1079;
  _QWORD *v1080;
  int64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  _OWORD v1084[2];
  char v1085;
  _OWORD v1086[2];
  char v1087;
  __int128 v1088;
  __int128 v1089;
  char v1090;

  v1046 = a4;
  v1006 = a2;
  v1007 = a3;
  v1056 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v980 = (uint64_t)&v958 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v978 = (uint64_t)&v958 - v9;
  v1047 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v1039 = *(_QWORD *)(v1047 - 8);
  v10 = MEMORY[0x24BDAC7A8](v1047);
  v981 = (uint64_t *)((char *)&v958 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v1036 = (unint64_t *)((char *)&v958 - v12);
  v1060 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable(0);
  v1059 = *(_QWORD *)(v1060 - 8);
  v13 = MEMORY[0x24BDAC7A8](v1060);
  v1075 = (uint64_t)&v958 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v1074 = (uint64_t)&v958 - v15;
  v1040 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v1070 = *(char **)(v1040 - 8);
  v16 = MEMORY[0x24BDAC7A8](v1040);
  v986 = (uint64_t)&v958 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v987 = (char *)&v958 - v18;
  v995 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v19 = MEMORY[0x24BDAC7A8](v995);
  v985 = (uint64_t)&v958 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v1063 = (unint64_t *)((char *)&v958 - v21);
  v1055 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
  v1054 = *(_QWORD *)(v1055 - 8);
  MEMORY[0x24BDAC7A8](v1055);
  v1057 = (char *)&v958 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1062 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v1061 = *(_QWORD *)(v1062 - 8);
  MEMORY[0x24BDAC7A8](v1062);
  v1034 = (uint64_t)&v958 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v974 = type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0);
  MEMORY[0x24BDAC7A8](v974);
  v998 = (char *)&v958 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v973 = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0);
  MEMORY[0x24BDAC7A8](v973);
  v997 = (uint64_t)&v958 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v994 = (uint64_t)&v958 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v993 = (uint64_t)&v958 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v1068 = (uint64_t)&v958 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v1017 = (char *)&v958 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v1030 = (uint64_t)&v958 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v1014 = (char *)&v958 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v1029 = (uint64_t)&v958 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v1026 = (uint64_t)&v958 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v1024 = (uint64_t)&v958 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v1022 = (uint64_t)&v958 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v1020 = (uint64_t)&v958 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v977 = (uint64_t)&v958 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v972 = (char *)&v958 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v1073 = (uint64_t)&v958 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v1072 = (uint64_t)&v958 - v56;
  MEMORY[0x24BDAC7A8](v55);
  v976 = (uint64_t)&v958 - v57;
  v1081 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  v1079 = *(_QWORD *)(v1081 - 8);
  v58 = MEMORY[0x24BDAC7A8](v1081);
  v989 = (uint64_t *)((char *)&v958 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = MEMORY[0x24BDAC7A8](v58);
  v988 = (uint64_t *)((char *)&v958 - v61);
  v62 = MEMORY[0x24BDAC7A8](v60);
  v1080 = (uint64_t *)((char *)&v958 - v63);
  v64 = MEMORY[0x24BDAC7A8](v62);
  v1031 = (char *)&v958 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v1016 = (uint64_t *)((char *)&v958 - v67);
  v68 = MEMORY[0x24BDAC7A8](v66);
  v1013 = (uint64_t *)((char *)&v958 - v69);
  v70 = MEMORY[0x24BDAC7A8](v68);
  v1049 = (uint64_t *)((char *)&v958 - v71);
  v72 = MEMORY[0x24BDAC7A8](v70);
  v1011 = (char *)&v958 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v1010 = (char *)&v958 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v1009 = (uint64_t *)((char *)&v958 - v77);
  v78 = MEMORY[0x24BDAC7A8](v76);
  v1048 = (uint64_t *)((char *)&v958 - v79);
  v80 = MEMORY[0x24BDAC7A8](v78);
  v982 = (char *)&v958 - v81;
  v82 = MEMORY[0x24BDAC7A8](v80);
  v975 = (uint64_t *)((char *)&v958 - v83);
  MEMORY[0x24BDAC7A8](v82);
  v968 = (uint64_t *)((char *)&v958 - v84);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
  v86 = MEMORY[0x24BDAC7A8](v85);
  v966 = (uint64_t)&v958 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = MEMORY[0x24BDAC7A8](v86);
  v960 = (uint64_t)&v958 - v89;
  v90 = MEMORY[0x24BDAC7A8](v88);
  v959 = (uint64_t)&v958 - v91;
  v92 = MEMORY[0x24BDAC7A8](v90);
  v962 = (char *)&v958 - v93;
  v94 = MEMORY[0x24BDAC7A8](v92);
  v979 = (char *)&v958 - v95;
  v96 = MEMORY[0x24BDAC7A8](v94);
  v1053 = (uint64_t)&v958 - v97;
  v98 = MEMORY[0x24BDAC7A8](v96);
  v992 = (uint64_t)&v958 - v99;
  v100 = MEMORY[0x24BDAC7A8](v98);
  v990 = (uint64_t)&v958 - v101;
  v102 = MEMORY[0x24BDAC7A8](v100);
  v1002 = (char *)&v958 - v103;
  v104 = MEMORY[0x24BDAC7A8](v102);
  v999 = (uint64_t)&v958 - v105;
  v106 = MEMORY[0x24BDAC7A8](v104);
  v1005 = (uint64_t)&v958 - v107;
  v108 = MEMORY[0x24BDAC7A8](v106);
  v1004 = (uint64_t)&v958 - v109;
  v110 = MEMORY[0x24BDAC7A8](v108);
  v1003 = (uint64_t)&v958 - v111;
  v112 = MEMORY[0x24BDAC7A8](v110);
  v1038 = (uint64_t)&v958 - v113;
  v114 = MEMORY[0x24BDAC7A8](v112);
  v1058 = (char *)&v958 - v115;
  v116 = MEMORY[0x24BDAC7A8](v114);
  v1015 = (char *)&v958 - v117;
  v118 = MEMORY[0x24BDAC7A8](v116);
  v1012 = (char *)&v958 - v119;
  v120 = MEMORY[0x24BDAC7A8](v118);
  v1027 = (uint64_t)&v958 - v121;
  v122 = MEMORY[0x24BDAC7A8](v120);
  v1025 = (uint64_t)&v958 - v123;
  v124 = MEMORY[0x24BDAC7A8](v122);
  v1023 = (uint64_t)&v958 - v125;
  v126 = MEMORY[0x24BDAC7A8](v124);
  v1021 = (uint64_t)&v958 - v127;
  v128 = MEMORY[0x24BDAC7A8](v126);
  v1008 = (char *)&v958 - v129;
  v130 = MEMORY[0x24BDAC7A8](v128);
  v1018 = (char *)&v958 - v131;
  v132 = MEMORY[0x24BDAC7A8](v130);
  v971 = (uint64_t)&v958 - v133;
  v134 = MEMORY[0x24BDAC7A8](v132);
  v969 = (uint64_t)&v958 - v135;
  MEMORY[0x24BDAC7A8](v134);
  v970 = (uint64_t)&v958 - v136;
  v137 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v138 = *(_QWORD *)(v137 - 8);
  v139 = MEMORY[0x24BDAC7A8](v137);
  v967 = (uint64_t)&v958 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = MEMORY[0x24BDAC7A8](v139);
  v961 = (uint64_t)&v958 - v142;
  v143 = MEMORY[0x24BDAC7A8](v141);
  v965 = (uint64_t)&v958 - v144;
  v145 = MEMORY[0x24BDAC7A8](v143);
  v964 = (uint64_t)&v958 - v146;
  v147 = MEMORY[0x24BDAC7A8](v145);
  v963 = (uint64_t)&v958 - v148;
  v149 = MEMORY[0x24BDAC7A8](v147);
  v1064 = (char *)&v958 - v150;
  v151 = MEMORY[0x24BDAC7A8](v149);
  v1041 = (char *)&v958 - v152;
  v153 = MEMORY[0x24BDAC7A8](v151);
  v1033 = (uint64_t)&v958 - v154;
  v155 = MEMORY[0x24BDAC7A8](v153);
  v1001 = (char *)&v958 - v156;
  v157 = MEMORY[0x24BDAC7A8](v155);
  v1032 = (uint64_t)&v958 - v158;
  v159 = MEMORY[0x24BDAC7A8](v157);
  v1037 = (uint64_t)&v958 - v160;
  v161 = MEMORY[0x24BDAC7A8](v159);
  v1045 = (uint64_t)&v958 - v162;
  v163 = MEMORY[0x24BDAC7A8](v161);
  v1044 = (uint64_t)&v958 - v164;
  v165 = MEMORY[0x24BDAC7A8](v163);
  v1043 = (uint64_t)&v958 - v166;
  v167 = MEMORY[0x24BDAC7A8](v165);
  v1082 = (uint64_t)&v958 - v168;
  v169 = MEMORY[0x24BDAC7A8](v167);
  v1069 = (uint64_t)&v958 - v170;
  v171 = MEMORY[0x24BDAC7A8](v169);
  v1066 = (uint64_t)&v958 - v172;
  v173 = MEMORY[0x24BDAC7A8](v171);
  v1028 = (char *)&v958 - v174;
  v175 = MEMORY[0x24BDAC7A8](v173);
  v1065 = (uint64_t)&v958 - v176;
  v177 = MEMORY[0x24BDAC7A8](v175);
  v1051 = (uint64_t)&v958 - v178;
  v179 = MEMORY[0x24BDAC7A8](v177);
  v1050 = (uint64_t)&v958 - v180;
  v181 = MEMORY[0x24BDAC7A8](v179);
  v1019 = (char *)&v958 - v182;
  v183 = MEMORY[0x24BDAC7A8](v181);
  v1071 = (char *)&v958 - v184;
  v185 = MEMORY[0x24BDAC7A8](v183);
  v996 = (uint64_t)&v958 - v186;
  v187 = MEMORY[0x24BDAC7A8](v185);
  v189 = (char *)&v958 - v188;
  MEMORY[0x24BDAC7A8](v187);
  v191 = (char *)&v958 - v190;
  v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  v193 = MEMORY[0x24BDAC7A8](v192);
  v195 = (char *)&v958 - ((v194 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = MEMORY[0x24BDAC7A8](v193);
  v198 = (char *)&v958 - v197;
  MEMORY[0x24BDAC7A8](v196);
  v200 = (char *)&v958 - v199;
  v201 = MEMORY[0x24BEE4AF8];
  *a5 = MEMORY[0x24BEE4AF8];
  a5[1] = v201;
  Request = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  sub_244AE3C00();
  v203 = (_QWORD *)((char *)a5 + Request[7]);
  *v203 = 0;
  v203[1] = 0;
  v991 = v203;
  *(_OWORD *)((char *)a5 + Request[8]) = xmmword_244AE4A00;
  v204 = (uint64_t)a5 + Request[9];
  v1076 = v138;
  v205 = *(void (**)(void))(v138 + 56);
  v1078 = v204;
  v1083 = v137;
  v1077 = v205;
  v205();
  v1042 = Request[10];
  *((_BYTE *)a5 + v1042) = 2;
  v206 = *(void (**)(void))(v1039 + 56);
  v1035 = (uint64_t)a5 + Request[11];
  v1000 = v206;
  v206();
  v207 = Request[12];
  v1067 = a5;
  v208 = (uint64_t)a5 + v207;
  v209 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v1070 + 7);
  v209(v208, 1, 1, v1040);
  v1052 = (int *)type metadata accessor for PrivateMLRequest(0);
  v210 = v1056 + v1052[15];
  v211 = *(_QWORD *)v210;
  v212 = *(unsigned __int8 *)(v210 + 8);
  v983 = v208;
  v984 = v209;
  if (v212)
  {
    if (v212 == 1)
    {
      v213 = v998;
      sub_244AE3C00();
      v214 = &v213[*(int *)(v974 + 20)];
      *(_DWORD *)v214 = v211;
      v214[4] = 0;
      sub_244A72964((uint64_t)v213, (uint64_t)v195, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
      v215 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
      swift_storeEnumTagMultiPayload();
      v216 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v215 - 8) + 56);
      v216(v195, 0, 1, v215);
      v217 = v971;
      sub_244A7284C(v1078, v971, &qword_2573CFAD8);
      v218 = v1083;
      v219 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1076 + 48))(v217, 1, v1083);
      v220 = (uint64_t)v1018;
      if (v219 == 1)
      {
        v221 = v996;
        sub_244AE3C00();
        v222 = *(int *)(v218 + 20);
        if (qword_2573CF7B0 != -1)
          swift_once();
        *(_QWORD *)(v221 + v222) = qword_2573D04C0;
        swift_retain();
        sub_244A72890(v217, &qword_2573CFAD8);
      }
      else
      {
        v221 = v996;
        sub_244A729FC(v217, v996, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      }
      v236 = *(int *)(v1083 + 20);
      v237 = *(_QWORD *)(v221 + v236)
           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
      swift_beginAccess();
      v238 = v977;
      sub_244A7284C(v237, v977, &qword_2573CFAD0);
      v239 = (int *)v1081;
      if ((*(unsigned int (**)(uint64_t, uint64_t, int64_t))(v1079 + 48))(v238, 1, v1081) == 1)
      {
        v240 = v982;
        *(_QWORD *)v982 = MEMORY[0x24BEE4AF8];
        v216(&v240[v239[5]], 1, 1, v215);
        sub_244AE3C00();
        v241 = &v240[v239[7]];
        *(_DWORD *)v241 = 0;
        v241[4] = 1;
        v242 = &v240[v239[8]];
        *(_DWORD *)v242 = 0;
        v242[4] = 1;
        v243 = &v240[v239[9]];
        *(_DWORD *)v243 = 0;
        v243[4] = 1;
        v244 = &v240[v239[10]];
        *(_DWORD *)v244 = 0;
        v244[4] = 1;
        v245 = &v240[v239[11]];
        *(_DWORD *)v245 = 0;
        v245[4] = 1;
        v246 = &v240[v239[12]];
        *(_DWORD *)v246 = 0;
        v246[4] = 1;
        v247 = &v240[v239[13]];
        *(_QWORD *)v247 = 0;
        v247[8] = 1;
        v248 = &v240[v239[14]];
        *(_QWORD *)v248 = 0;
        v248[8] = 1;
        v249 = &v240[v239[15]];
        *(_QWORD *)v249 = 0;
        v249[8] = 1;
        v250 = &v240[v239[16]];
        *(_DWORD *)v250 = 0;
        v250[4] = 1;
        v251 = &v240[v239[17]];
        *(_DWORD *)v251 = 0;
        v251[4] = 1;
        v240[v239[18]] = 2;
        v252 = &v240[v239[19]];
        *(_DWORD *)v252 = 0;
        v252[4] = 1;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))(&v240[v239[20]], 1, 1, v1062);
        sub_244A72890(v238, &qword_2573CFAD0);
      }
      else
      {
        v240 = v982;
        sub_244A729FC(v238, (uint64_t)v982, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
      }
      v287 = v239;
      sub_244A7D700((uint64_t)v195, (uint64_t)&v240[v239[5]], &qword_2573CFAE0);
      v288 = v996;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v290 = v1083;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
        swift_allocObject();
        v291 = (_QWORD *)swift_retain();
        v240 = v982;
        *(_QWORD *)(v288 + v236) = sub_244AA0CB0(v291);
        swift_release();
      }
      v292 = *(_QWORD *)(v288 + v236);
      v293 = (uint64_t)v240;
      v294 = v1072;
      sub_244A729FC(v293, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v1079 + 56))(v294, 0, 1, v287);
      v295 = v1073;
      sub_244A7D6B8(v294, v1073);
      v296 = v292
           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
      swift_beginAccess();
      swift_retain();
      sub_244A7D700(v295, v296, &qword_2573CFAD0);
      swift_endAccess();
      swift_release();
      v297 = v1078;
      sub_244A72890(v1078, &qword_2573CFAD8);
      sub_244A729FC(v288, v297, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v297, 0, 1, v290);
      sub_244A729C0((uint64_t)v998, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
    }
    else
    {
      *v200 = 1;
      v231 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
      swift_storeEnumTagMultiPayload();
      v232 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 56);
      v232(v200, 0, 1, v231);
      v233 = v970;
      sub_244A7284C(v1078, v970, &qword_2573CFAD8);
      v234 = v1083;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1076 + 48))(v233, 1, v1083) == 1)
      {
        sub_244AE3C00();
        v235 = *(int *)(v234 + 20);
        if (qword_2573CF7B0 != -1)
          swift_once();
        *(_QWORD *)&v191[v235] = qword_2573D04C0;
        swift_retain();
        sub_244A72890(v233, &qword_2573CFAD8);
      }
      else
      {
        sub_244A729FC(v233, (uint64_t)v191, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      }
      v270 = *(int *)(v1083 + 20);
      v271 = *(_QWORD *)&v191[v270]
           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
      swift_beginAccess();
      v272 = v976;
      sub_244A7284C(v271, v976, &qword_2573CFAD0);
      v273 = (int *)v1081;
      if ((*(unsigned int (**)(uint64_t, uint64_t, int64_t))(v1079 + 48))(v272, 1, v1081) == 1)
      {
        v274 = v968;
        *v968 = MEMORY[0x24BEE4AF8];
        v232((_BYTE *)v274 + v273[5], 1, 1, v231);
        sub_244AE3C00();
        v275 = (char *)v274 + v273[7];
        *(_DWORD *)v275 = 0;
        v275[4] = 1;
        v276 = (char *)v274 + v273[8];
        *(_DWORD *)v276 = 0;
        v276[4] = 1;
        v277 = (char *)v274 + v273[9];
        *(_DWORD *)v277 = 0;
        v277[4] = 1;
        v278 = (char *)v274 + v273[10];
        *(_DWORD *)v278 = 0;
        v278[4] = 1;
        v279 = (char *)v274 + v273[11];
        *(_DWORD *)v279 = 0;
        v279[4] = 1;
        v280 = (char *)v274 + v273[12];
        *(_DWORD *)v280 = 0;
        v280[4] = 1;
        v281 = (char *)v274 + v273[13];
        *(_QWORD *)v281 = 0;
        v281[8] = 1;
        v282 = (char *)v274 + v273[14];
        *(_QWORD *)v282 = 0;
        v282[8] = 1;
        v283 = (char *)v274 + v273[15];
        *(_QWORD *)v283 = 0;
        v283[8] = 1;
        v284 = (char *)v274 + v273[16];
        *(_DWORD *)v284 = 0;
        v284[4] = 1;
        v285 = (char *)v274 + v273[17];
        *(_DWORD *)v285 = 0;
        v285[4] = 1;
        *((_BYTE *)v274 + v273[18]) = 2;
        v286 = (char *)v274 + v273[19];
        *(_DWORD *)v286 = 0;
        v286[4] = 1;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v274 + v273[20], 1, 1, v1062);
        sub_244A72890(v272, &qword_2573CFAD0);
      }
      else
      {
        v274 = v968;
        sub_244A729FC(v272, (uint64_t)v968, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
      }
      sub_244A7D700((uint64_t)v200, (uint64_t)v274 + v273[5], &qword_2573CFAE0);
      v307 = swift_isUniquelyReferenced_nonNull_native();
      v220 = (uint64_t)v1018;
      if ((v307 & 1) == 0)
      {
        type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
        swift_allocObject();
        v308 = (_QWORD *)swift_retain();
        *(_QWORD *)&v191[v270] = sub_244AA0CB0(v308);
        swift_release();
      }
      v309 = *(_QWORD *)&v191[v270];
      v310 = v1072;
      sub_244A729FC((uint64_t)v274, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int64_t))(v1079 + 56))(v310, 0, 1, v1081);
      v311 = v310;
      v312 = v1073;
      sub_244A7D6B8(v311, v1073);
      v313 = v309
           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
      swift_beginAccess();
      swift_retain();
      sub_244A7D700(v312, v313, &qword_2573CFAD0);
      swift_endAccess();
      swift_release();
      v297 = v1078;
      sub_244A72890(v1078, &qword_2573CFAD8);
      sub_244A729FC((uint64_t)v191, v297, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      v290 = v1083;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v297, 0, 1, v1083);
    }
    v306 = v1056;
    v298 = v1010;
  }
  else
  {
    v1070 = v189;
    v223 = (uint64_t)v972;
    v224 = v997;
    sub_244AE3C00();
    v225 = v224 + *(int *)(v973 + 20);
    *(_QWORD *)v225 = v211;
    *(_BYTE *)(v225 + 8) = 0;
    sub_244A72964(v224, (uint64_t)v198, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
    v226 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    swift_storeEnumTagMultiPayload();
    v998 = *(char **)(*(_QWORD *)(v226 - 8) + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v998)(v198, 0, 1, v226);
    v227 = v969;
    sub_244A7284C(v1078, v969, &qword_2573CFAD8);
    v228 = v1083;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1076 + 48))(v227, 1, v1083) == 1)
    {
      v229 = (uint64_t)v1070;
      sub_244AE3C00();
      v230 = *(int *)(v228 + 20);
      if (qword_2573CF7B0 != -1)
        swift_once();
      *(_QWORD *)(v229 + v230) = qword_2573D04C0;
      swift_retain();
      sub_244A72890(v227, &qword_2573CFAD8);
    }
    else
    {
      v229 = (uint64_t)v1070;
      sub_244A729FC(v227, (uint64_t)v1070, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    }
    v253 = *(int *)(v228 + 20);
    v254 = *(_QWORD *)(v229 + v253)
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    sub_244A7284C(v254, v223, &qword_2573CFAD0);
    v255 = (int *)v1081;
    v256 = (*(uint64_t (**)(uint64_t, uint64_t, int64_t))(v1079 + 48))(v223, 1, v1081);
    v257 = v975;
    if (v256 == 1)
    {
      *v975 = MEMORY[0x24BEE4AF8];
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v998)((char *)v257 + v255[5], 1, 1, v226);
      sub_244AE3C00();
      v258 = (char *)v257 + v255[7];
      *(_DWORD *)v258 = 0;
      v258[4] = 1;
      v259 = (char *)v257 + v255[8];
      *(_DWORD *)v259 = 0;
      v259[4] = 1;
      v260 = (char *)v257 + v255[9];
      *(_DWORD *)v260 = 0;
      v260[4] = 1;
      v261 = (char *)v257 + v255[10];
      *(_DWORD *)v261 = 0;
      v261[4] = 1;
      v262 = (char *)v257 + v255[11];
      *(_DWORD *)v262 = 0;
      v262[4] = 1;
      v263 = (char *)v257 + v255[12];
      *(_DWORD *)v263 = 0;
      v263[4] = 1;
      v264 = (char *)v257 + v255[13];
      *(_QWORD *)v264 = 0;
      v264[8] = 1;
      v265 = (char *)v257 + v255[14];
      *(_QWORD *)v265 = 0;
      v265[8] = 1;
      v266 = (char *)v257 + v255[15];
      *(_QWORD *)v266 = 0;
      v266[8] = 1;
      v267 = (char *)v257 + v255[16];
      *(_DWORD *)v267 = 0;
      v267[4] = 1;
      v268 = (char *)v257 + v255[17];
      *(_DWORD *)v268 = 0;
      v268[4] = 1;
      *((_BYTE *)v257 + v255[18]) = 2;
      v269 = (char *)v257 + v255[19];
      *(_DWORD *)v269 = 0;
      v269[4] = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v257 + v255[20], 1, 1, v1062);
      sub_244A72890(v223, &qword_2573CFAD0);
    }
    else
    {
      sub_244A729FC(v223, (uint64_t)v975, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    }
    v298 = v1010;
    sub_244A7D700((uint64_t)v198, (uint64_t)v257 + v255[5], &qword_2573CFAE0);
    v299 = (uint64_t)v1070;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
      swift_allocObject();
      v300 = (_QWORD *)swift_retain();
      *(_QWORD *)(v299 + v253) = sub_244AA0CB0(v300);
      swift_release();
    }
    v301 = *(_QWORD *)(v299 + v253);
    v302 = v1072;
    sub_244A729FC((uint64_t)v257, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int64_t))(v1079 + 56))(v302, 0, 1, v1081);
    v303 = v302;
    v304 = v1073;
    sub_244A7D6B8(v303, v1073);
    v305 = v301
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    swift_retain();
    sub_244A7D700(v304, v305, &qword_2573CFAD0);
    swift_endAccess();
    swift_release();
    v297 = v1078;
    sub_244A72890(v1078, &qword_2573CFAD8);
    sub_244A729FC(v299, v297, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v290 = v1083;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v297, 0, 1, v1083);
    sub_244A729C0(v997, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
    v306 = v1056;
    v220 = (uint64_t)v1018;
  }
  v314 = v1076;
  v315 = *(_DWORD *)(v306 + v1052[12]);
  sub_244A7284C(v297, v220, &qword_2573CFAD8);
  v1076 = *(_QWORD *)(v314 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v220, 1, v290) == 1)
  {
    v316 = v1071;
    sub_244AE3C00();
    v317 = *(int *)(v290 + 20);
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)&v316[v317] = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v220, &qword_2573CFAD8);
    v318 = v316;
  }
  else
  {
    v318 = v1071;
    sub_244A729FC(v220, (uint64_t)v1071, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  }
  v319 = *(int *)(v290 + 20);
  v320 = *(_QWORD *)&v318[v319]
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  v321 = v1020;
  sub_244A7284C(v320, v1020, &qword_2573CFAD0);
  v322 = (int *)v1081;
  v1070 = *(char **)(v1079 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v321, 1, v1081) == 1)
  {
    v323 = v1048;
    *v1048 = MEMORY[0x24BEE4AF8];
    v324 = (char *)v323 + v322[5];
    v325 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v325 - 8) + 56))(v324, 1, 1, v325);
    sub_244AE3C00();
    v326 = (char *)v323 + v322[7];
    *(_DWORD *)v326 = 0;
    v326[4] = 1;
    v327 = (char *)v323 + v322[8];
    *(_DWORD *)v327 = 0;
    v327[4] = 1;
    v328 = (char *)v323 + v322[9];
    *(_DWORD *)v328 = 0;
    v328[4] = 1;
    v329 = (char *)v323 + v322[10];
    *(_DWORD *)v329 = 0;
    v329[4] = 1;
    v330 = (char *)v323 + v322[11];
    *(_DWORD *)v330 = 0;
    v330[4] = 1;
    v331 = (char *)v323 + v322[12];
    *(_DWORD *)v331 = 0;
    v331[4] = 1;
    v332 = (char *)v323 + v322[13];
    *(_QWORD *)v332 = 0;
    v332[8] = 1;
    v333 = (char *)v323 + v322[14];
    *(_QWORD *)v333 = 0;
    v333[8] = 1;
    v334 = (char *)v323 + v322[15];
    *(_QWORD *)v334 = 0;
    v334[8] = 1;
    v335 = (char *)v323 + v322[16];
    *(_DWORD *)v335 = 0;
    v335[4] = 1;
    v336 = (char *)v323 + v322[17];
    *(_DWORD *)v336 = 0;
    v336[4] = 1;
    *((_BYTE *)v323 + v322[18]) = 2;
    v337 = (char *)v323 + v322[19];
    *(_DWORD *)v337 = 0;
    v337[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v323 + v322[20], 1, 1, v1062);
    sub_244A72890(v321, &qword_2573CFAD0);
  }
  else
  {
    v323 = v1048;
    sub_244A729FC(v321, (uint64_t)v1048, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v338 = v322;
  v339 = (uint64_t)v1008;
  v340 = (char *)v323 + v322[7];
  *(_DWORD *)v340 = v315;
  v340[4] = 0;
  v341 = v1071;
  v342 = swift_isUniquelyReferenced_nonNull_native();
  v343 = v1083;
  v344 = (uint64_t)v1019;
  if ((v342 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v345 = (_QWORD *)swift_retain();
    v346 = sub_244AA0CB0(v345);
    v341 = v1071;
    *(_QWORD *)&v1071[v319] = v346;
    swift_release();
  }
  v347 = *(_QWORD *)&v341[v319];
  v348 = v1072;
  sub_244A729FC((uint64_t)v1048, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  v1071 = *(char **)(v1079 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v1071)(v348, 0, 1, v338);
  v349 = v1073;
  sub_244A7D6B8(v348, v1073);
  v350 = v347
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v349, v350, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v351 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC((uint64_t)v341, v351, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v351, 0, 1, v343);
  LODWORD(v1079) = *(_DWORD *)(v1056 + v1052[14]);
  sub_244A7284C(v351, v339, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v339, 1, v343) == 1)
  {
    sub_244AE3C00();
    v352 = *(int *)(v343 + 20);
    v353 = v1011;
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v344 + v352) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v339, &qword_2573CFAD8);
  }
  else
  {
    sub_244A729FC(v339, v344, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v353 = v1011;
  }
  v354 = *(int *)(v343 + 20);
  v355 = *(_QWORD *)(v344 + v354)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  v356 = v1022;
  sub_244A7284C(v355, v1022, &qword_2573CFAD0);
  v357 = (int *)v1081;
  if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v356, 1, v1081) == 1)
  {
    v358 = v1009;
    *v1009 = MEMORY[0x24BEE4AF8];
    v359 = (char *)v358 + v357[5];
    v360 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v360 - 8) + 56))(v359, 1, 1, v360);
    sub_244AE3C00();
    v361 = (char *)v358 + v357[7];
    *(_DWORD *)v361 = 0;
    v361[4] = 1;
    v362 = (char *)v358 + v357[8];
    *(_DWORD *)v362 = 0;
    v362[4] = 1;
    v363 = (char *)v358 + v357[9];
    *(_DWORD *)v363 = 0;
    v363[4] = 1;
    v364 = (char *)v358 + v357[10];
    *(_DWORD *)v364 = 0;
    v364[4] = 1;
    v365 = (char *)v358 + v357[11];
    *(_DWORD *)v365 = 0;
    v365[4] = 1;
    v366 = (char *)v358 + v357[12];
    *(_DWORD *)v366 = 0;
    v366[4] = 1;
    v367 = (char *)v358 + v357[13];
    *(_QWORD *)v367 = 0;
    v367[8] = 1;
    v368 = (char *)v358 + v357[14];
    *(_QWORD *)v368 = 0;
    v368[8] = 1;
    v369 = (char *)v358 + v357[15];
    *(_QWORD *)v369 = 0;
    v369[8] = 1;
    v370 = (char *)v358 + v357[16];
    *(_DWORD *)v370 = 0;
    v370[4] = 1;
    v371 = (char *)v358 + v357[17];
    *(_DWORD *)v371 = 0;
    v371[4] = 1;
    *((_BYTE *)v358 + v357[18]) = 2;
    v372 = (char *)v358 + v357[19];
    *(_DWORD *)v372 = 0;
    v372[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v358 + v357[20], 1, 1, v1062);
    sub_244A72890(v356, &qword_2573CFAD0);
  }
  else
  {
    v358 = v1009;
    sub_244A729FC(v356, (uint64_t)v1009, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v373 = v357;
  v374 = (char *)v358 + v357[8];
  *(_DWORD *)v374 = v1079;
  v374[4] = 0;
  v375 = swift_isUniquelyReferenced_nonNull_native();
  v376 = v1083;
  if ((v375 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v377 = (_QWORD *)swift_retain();
    *(_QWORD *)(v344 + v354) = sub_244AA0CB0(v377);
    swift_release();
  }
  v378 = *(_QWORD *)(v344 + v354);
  v379 = v1072;
  sub_244A729FC((uint64_t)v358, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v1071)(v379, 0, 1, v373);
  v380 = v1073;
  sub_244A7D6B8(v379, v1073);
  v381 = v378
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v380, v381, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v382 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v344, v382, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v382, 0, 1, v376);
  v383 = *(_DWORD *)(v1056 + v1052[16]);
  v384 = v1021;
  sub_244A7284C(v382, v1021, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v384, 1, v376) == 1)
  {
    v385 = v1050;
    sub_244AE3C00();
    v386 = *(int *)(v376 + 20);
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v385 + v386) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v384, &qword_2573CFAD8);
    v387 = v385;
  }
  else
  {
    v387 = v1050;
    sub_244A729FC(v384, v1050, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  }
  v388 = *(int *)(v376 + 20);
  v389 = *(_QWORD *)(v387 + v388)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  v390 = v1024;
  sub_244A7284C(v389, v1024, &qword_2573CFAD0);
  v391 = (int *)v1081;
  if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v390, 1, v1081) == 1)
  {
    *v298 = MEMORY[0x24BEE4AF8];
    v392 = (char *)v298 + v391[5];
    v393 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v393 - 8) + 56))(v392, 1, 1, v393);
    sub_244AE3C00();
    v394 = (char *)v298 + v391[7];
    *(_DWORD *)v394 = 0;
    v394[4] = 1;
    v395 = (char *)v298 + v391[8];
    *(_DWORD *)v395 = 0;
    v395[4] = 1;
    v396 = (char *)v298 + v391[9];
    *(_DWORD *)v396 = 0;
    v396[4] = 1;
    v397 = (char *)v298 + v391[10];
    *(_DWORD *)v397 = 0;
    v397[4] = 1;
    v398 = (char *)v298 + v391[11];
    *(_DWORD *)v398 = 0;
    v398[4] = 1;
    v399 = (char *)v298 + v391[12];
    *(_DWORD *)v399 = 0;
    v399[4] = 1;
    v400 = (char *)v298 + v391[13];
    *(_QWORD *)v400 = 0;
    v400[8] = 1;
    v401 = (char *)v298 + v391[14];
    *(_QWORD *)v401 = 0;
    v401[8] = 1;
    v402 = (char *)v298 + v391[15];
    *(_QWORD *)v402 = 0;
    v402[8] = 1;
    v403 = (char *)v298 + v391[16];
    *(_DWORD *)v403 = 0;
    v403[4] = 1;
    v404 = (char *)v298 + v391[17];
    *(_DWORD *)v404 = 0;
    v404[4] = 1;
    *((_BYTE *)v298 + v391[18]) = 2;
    v405 = (char *)v298 + v391[19];
    *(_DWORD *)v405 = 0;
    v405[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v298 + v391[20], 1, 1, v1062);
    sub_244A72890(v390, &qword_2573CFAD0);
  }
  else
  {
    sub_244A729FC(v390, (uint64_t)v298, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v406 = v391;
  v407 = (char *)v298 + v391[9];
  *(_DWORD *)v407 = v383;
  v407[4] = 0;
  v408 = v1050;
  v409 = swift_isUniquelyReferenced_nonNull_native();
  v410 = v1083;
  if ((v409 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v411 = (_QWORD *)swift_retain();
    v412 = sub_244AA0CB0(v411);
    v408 = v1050;
    *(_QWORD *)(v1050 + v388) = v412;
    swift_release();
  }
  v413 = v408;
  v414 = *(_QWORD *)(v408 + v388);
  v415 = v1072;
  sub_244A729FC((uint64_t)v298, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v1071)(v415, 0, 1, v406);
  v416 = v1073;
  sub_244A7D6B8(v415, v1073);
  v417 = v414
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v416, v417, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v418 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v413, v418, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v418, 0, 1, v410);
  v419 = *(_DWORD *)(v1056 + v1052[17]);
  v420 = v1023;
  sub_244A7284C(v418, v1023, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v420, 1, v410) == 1)
  {
    v421 = v1051;
    sub_244AE3C00();
    v422 = *(int *)(v410 + 20);
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v421 + v422) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v420, &qword_2573CFAD8);
    v423 = v421;
  }
  else
  {
    v423 = v1051;
    sub_244A729FC(v420, v1051, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  }
  v424 = *(int *)(v410 + 20);
  v425 = *(_QWORD *)(v423 + v424)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  v426 = v1026;
  sub_244A7284C(v425, v1026, &qword_2573CFAD0);
  v427 = (int *)v1081;
  if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v426, 1, v1081) == 1)
  {
    *v353 = MEMORY[0x24BEE4AF8];
    v428 = (char *)v353 + v427[5];
    v429 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v429 - 8) + 56))(v428, 1, 1, v429);
    sub_244AE3C00();
    v430 = (char *)v353 + v427[7];
    *(_DWORD *)v430 = 0;
    v430[4] = 1;
    v431 = (char *)v353 + v427[8];
    *(_DWORD *)v431 = 0;
    v431[4] = 1;
    v432 = (char *)v353 + v427[9];
    *(_DWORD *)v432 = 0;
    v432[4] = 1;
    v433 = (char *)v353 + v427[10];
    *(_DWORD *)v433 = 0;
    v433[4] = 1;
    v434 = (char *)v353 + v427[11];
    *(_DWORD *)v434 = 0;
    v434[4] = 1;
    v435 = (char *)v353 + v427[12];
    *(_DWORD *)v435 = 0;
    v435[4] = 1;
    v436 = (char *)v353 + v427[13];
    *(_QWORD *)v436 = 0;
    v436[8] = 1;
    v437 = (char *)v353 + v427[14];
    *(_QWORD *)v437 = 0;
    v437[8] = 1;
    v438 = (char *)v353 + v427[15];
    *(_QWORD *)v438 = 0;
    v438[8] = 1;
    v439 = (char *)v353 + v427[16];
    *(_DWORD *)v439 = 0;
    v439[4] = 1;
    v440 = (char *)v353 + v427[17];
    *(_DWORD *)v440 = 0;
    v440[4] = 1;
    *((_BYTE *)v353 + v427[18]) = 2;
    v441 = (char *)v353 + v427[19];
    *(_DWORD *)v441 = 0;
    v441[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v353 + v427[20], 1, 1, v1062);
    sub_244A72890(v426, &qword_2573CFAD0);
  }
  else
  {
    sub_244A729FC(v426, (uint64_t)v353, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v442 = v427;
  v443 = (char *)v353 + v427[10];
  *(_DWORD *)v443 = v419;
  v443[4] = 0;
  v444 = v1051;
  v445 = swift_isUniquelyReferenced_nonNull_native();
  v446 = v1083;
  v447 = v1056;
  if ((v445 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v448 = (_QWORD *)swift_retain();
    v449 = sub_244AA0CB0(v448);
    v444 = v1051;
    *(_QWORD *)(v1051 + v424) = v449;
    swift_release();
  }
  v450 = *(_QWORD *)(v444 + v424);
  v451 = v1072;
  sub_244A729FC((uint64_t)v353, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v1071)(v451, 0, 1, v442);
  v452 = v1073;
  sub_244A7D6B8(v451, v1073);
  v453 = v450
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v452, v453, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v454 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v444, v454, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v454, 0, 1, v446);
  v455 = *(_DWORD *)(v447 + v1052[18]);
  v456 = v1025;
  sub_244A7284C(v454, v1025, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v456, 1, v446) == 1)
  {
    v457 = v1065;
    sub_244AE3C00();
    v458 = *(int *)(v446 + 20);
    v459 = (uint64_t)v1014;
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v457 + v458) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v456, &qword_2573CFAD8);
    v460 = v457;
  }
  else
  {
    v460 = v1065;
    sub_244A729FC(v456, v1065, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v459 = (uint64_t)v1014;
  }
  v461 = *(int *)(v446 + 20);
  v462 = *(_QWORD *)(v460 + v461)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  v463 = v1029;
  sub_244A7284C(v462, v1029, &qword_2573CFAD0);
  v464 = (int *)v1081;
  if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v463, 1, v1081) == 1)
  {
    v465 = v1049;
    *v1049 = MEMORY[0x24BEE4AF8];
    v466 = (char *)v465 + v464[5];
    v467 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v467 - 8) + 56))(v466, 1, 1, v467);
    sub_244AE3C00();
    v468 = (char *)v465 + v464[7];
    *(_DWORD *)v468 = 0;
    v468[4] = 1;
    v469 = (char *)v465 + v464[8];
    *(_DWORD *)v469 = 0;
    v469[4] = 1;
    v470 = (char *)v465 + v464[9];
    *(_DWORD *)v470 = 0;
    v470[4] = 1;
    v471 = (char *)v465 + v464[10];
    *(_DWORD *)v471 = 0;
    v471[4] = 1;
    v472 = (char *)v465 + v464[11];
    *(_DWORD *)v472 = 0;
    v472[4] = 1;
    v473 = (char *)v465 + v464[12];
    *(_DWORD *)v473 = 0;
    v473[4] = 1;
    v474 = (char *)v465 + v464[13];
    *(_QWORD *)v474 = 0;
    v474[8] = 1;
    v475 = (char *)v465 + v464[14];
    *(_QWORD *)v475 = 0;
    v475[8] = 1;
    v476 = (char *)v465 + v464[15];
    *(_QWORD *)v476 = 0;
    v476[8] = 1;
    v477 = (char *)v465 + v464[16];
    *(_DWORD *)v477 = 0;
    v477[4] = 1;
    v478 = (char *)v465 + v464[17];
    *(_DWORD *)v478 = 0;
    v478[4] = 1;
    *((_BYTE *)v465 + v464[18]) = 2;
    v479 = (char *)v465 + v464[19];
    *(_DWORD *)v479 = 0;
    v479[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v465 + v464[20], 1, 1, v1062);
    sub_244A72890(v463, &qword_2573CFAD0);
  }
  else
  {
    v465 = v1049;
    sub_244A729FC(v463, (uint64_t)v1049, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v480 = v464;
  v481 = (char *)v465 + v464[11];
  *(_DWORD *)v481 = v455;
  v481[4] = 0;
  v482 = v1065;
  v483 = swift_isUniquelyReferenced_nonNull_native();
  v484 = v1083;
  v485 = (uint64_t)v1028;
  if ((v483 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v486 = (_QWORD *)swift_retain();
    v487 = sub_244AA0CB0(v486);
    v482 = v1065;
    *(_QWORD *)(v1065 + v461) = v487;
    swift_release();
  }
  v488 = *(_QWORD *)(v482 + v461);
  v489 = v1072;
  sub_244A729FC((uint64_t)v1049, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v1071)(v489, 0, 1, v480);
  v490 = v1073;
  sub_244A7D6B8(v489, v1073);
  v491 = v488
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v490, v491, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v492 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v482, v492, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v492, 0, 1, v484);
  v493 = *(_DWORD *)(v1056 + v1052[19]);
  v494 = v492;
  v495 = v1027;
  sub_244A7284C(v494, v1027, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v495, 1, v484) == 1)
  {
    sub_244AE3C00();
    v496 = *(int *)(v484 + 20);
    v497 = (uint64_t)v1012;
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v485 + v496) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v495, &qword_2573CFAD8);
  }
  else
  {
    sub_244A729FC(v495, v485, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v497 = (uint64_t)v1012;
  }
  v498 = *(int *)(v484 + 20);
  v499 = *(_QWORD *)(v485 + v498)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  sub_244A7284C(v499, v459, &qword_2573CFAD0);
  v500 = (int *)v1081;
  if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v459, 1, v1081) == 1)
  {
    v501 = v1013;
    *v1013 = MEMORY[0x24BEE4AF8];
    v502 = (char *)v501 + v500[5];
    v503 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v503 - 8) + 56))(v502, 1, 1, v503);
    sub_244AE3C00();
    v504 = (char *)v501 + v500[7];
    *(_DWORD *)v504 = 0;
    v504[4] = 1;
    v505 = (char *)v501 + v500[8];
    *(_DWORD *)v505 = 0;
    v505[4] = 1;
    v506 = (char *)v501 + v500[9];
    *(_DWORD *)v506 = 0;
    v506[4] = 1;
    v507 = (char *)v501 + v500[10];
    *(_DWORD *)v507 = 0;
    v507[4] = 1;
    v508 = (char *)v501 + v500[11];
    *(_DWORD *)v508 = 0;
    v508[4] = 1;
    v509 = (char *)v501 + v500[12];
    *(_DWORD *)v509 = 0;
    v509[4] = 1;
    v510 = (char *)v501 + v500[13];
    *(_QWORD *)v510 = 0;
    v510[8] = 1;
    v511 = (char *)v501 + v500[14];
    *(_QWORD *)v511 = 0;
    v511[8] = 1;
    v512 = (char *)v501 + v500[15];
    *(_QWORD *)v512 = 0;
    v512[8] = 1;
    v513 = (char *)v501 + v500[16];
    *(_DWORD *)v513 = 0;
    v513[4] = 1;
    v514 = (char *)v501 + v500[17];
    *(_DWORD *)v514 = 0;
    v514[4] = 1;
    *((_BYTE *)v501 + v500[18]) = 2;
    v515 = (char *)v501 + v500[19];
    *(_DWORD *)v515 = 0;
    v515[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v501 + v500[20], 1, 1, v1062);
    sub_244A72890(v459, &qword_2573CFAD0);
  }
  else
  {
    v501 = v1013;
    sub_244A729FC(v459, (uint64_t)v1013, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v516 = v500;
  v517 = (char *)v501 + v500[12];
  *(_DWORD *)v517 = v493;
  v517[4] = 0;
  v518 = swift_isUniquelyReferenced_nonNull_native();
  v519 = v1083;
  v520 = v1031;
  if ((v518 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v521 = (_QWORD *)swift_retain();
    *(_QWORD *)(v485 + v498) = sub_244AA0CB0(v521);
    swift_release();
  }
  v522 = *(_QWORD *)(v485 + v498);
  v523 = v1072;
  sub_244A729FC((uint64_t)v501, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v1071)(v523, 0, 1, v516);
  v524 = v1073;
  sub_244A7D6B8(v523, v1073);
  v525 = v522
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v524, v525, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v526 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v485, v526, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v526, 0, 1, v519);
  v527 = *(_QWORD *)(v1056 + v1052[20]);
  sub_244A7284C(v526, v497, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v497, 1, v519) == 1)
  {
    v528 = v1066;
    sub_244AE3C00();
    v529 = *(int *)(v519 + 20);
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v528 + v529) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v497, &qword_2573CFAD8);
    v530 = v528;
  }
  else
  {
    v530 = v1066;
    sub_244A729FC(v497, v1066, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  }
  v531 = *(int *)(v519 + 20);
  v532 = *(_QWORD *)(v530 + v531)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  v533 = v1030;
  sub_244A7284C(v532, v1030, &qword_2573CFAD0);
  v534 = (int *)v1081;
  if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v533, 1, v1081) == 1)
  {
    v535 = v1016;
    *v1016 = MEMORY[0x24BEE4AF8];
    v536 = (char *)v535 + v534[5];
    v537 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v537 - 8) + 56))(v536, 1, 1, v537);
    sub_244AE3C00();
    v538 = (char *)v535 + v534[7];
    *(_DWORD *)v538 = 0;
    v538[4] = 1;
    v539 = (char *)v535 + v534[8];
    *(_DWORD *)v539 = 0;
    v539[4] = 1;
    v540 = (char *)v535 + v534[9];
    *(_DWORD *)v540 = 0;
    v540[4] = 1;
    v541 = (char *)v535 + v534[10];
    *(_DWORD *)v541 = 0;
    v541[4] = 1;
    v542 = (char *)v535 + v534[11];
    *(_DWORD *)v542 = 0;
    v542[4] = 1;
    v543 = (char *)v535 + v534[12];
    *(_DWORD *)v543 = 0;
    v543[4] = 1;
    v544 = (char *)v535 + v534[13];
    *(_QWORD *)v544 = 0;
    v544[8] = 1;
    v545 = (char *)v535 + v534[14];
    *(_QWORD *)v545 = 0;
    v545[8] = 1;
    v546 = (char *)v535 + v534[15];
    *(_QWORD *)v546 = 0;
    v546[8] = 1;
    v547 = (char *)v535 + v534[16];
    *(_DWORD *)v547 = 0;
    v547[4] = 1;
    v548 = (char *)v535 + v534[17];
    *(_DWORD *)v548 = 0;
    v548[4] = 1;
    *((_BYTE *)v535 + v534[18]) = 2;
    v549 = (char *)v535 + v534[19];
    *(_DWORD *)v549 = 0;
    v549[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v535 + v534[20], 1, 1, v1062);
    v550 = v533;
    v551 = v535;
    sub_244A72890(v550, &qword_2573CFAD0);
  }
  else
  {
    v552 = v533;
    v551 = v1016;
    sub_244A729FC(v552, (uint64_t)v1016, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v553 = v534;
  v554 = (uint64_t)v1015;
  v555 = (char *)v551 + v534[13];
  *(_QWORD *)v555 = v527;
  v555[8] = 0;
  v556 = v1066;
  v557 = swift_isUniquelyReferenced_nonNull_native();
  v558 = v1083;
  if ((v557 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v559 = (_QWORD *)swift_retain();
    v560 = sub_244AA0CB0(v559);
    v556 = v1066;
    *(_QWORD *)(v1066 + v531) = v560;
    swift_release();
  }
  v561 = *(_QWORD *)(v556 + v531);
  v562 = v1072;
  sub_244A729FC((uint64_t)v551, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v1071)(v562, 0, 1, v553);
  v563 = v1073;
  sub_244A7D6B8(v562, v1073);
  v564 = v561
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v563, v564, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v565 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v556, v565, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v565, 0, 1, v558);
  v566 = *(_QWORD *)(v1056 + v1052[22]);
  sub_244A7284C(v565, v554, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v554, 1, v558) == 1)
  {
    v567 = v1069;
    sub_244AE3C00();
    v568 = *(int *)(v558 + 20);
    v569 = (uint64_t)v1017;
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v567 + v568) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v554, &qword_2573CFAD8);
    v570 = v567;
  }
  else
  {
    v570 = v1069;
    sub_244A729FC(v554, v1069, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v569 = (uint64_t)v1017;
  }
  v571 = *(int *)(v558 + 20);
  v572 = *(_QWORD *)(v570 + v571)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  sub_244A7284C(v572, v569, &qword_2573CFAD0);
  v573 = (int *)v1081;
  v574 = ((uint64_t (*)(uint64_t, uint64_t, int64_t))v1070)(v569, 1, v1081);
  v575 = v1062;
  if (v574 == 1)
  {
    *v520 = MEMORY[0x24BEE4AF8];
    v576 = (char *)v520 + v573[5];
    v577 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v577 - 8) + 56))(v576, 1, 1, v577);
    sub_244AE3C00();
    v578 = (char *)v520 + v573[7];
    *(_DWORD *)v578 = 0;
    v578[4] = 1;
    v579 = (char *)v520 + v573[8];
    *(_DWORD *)v579 = 0;
    v579[4] = 1;
    v580 = (char *)v520 + v573[9];
    *(_DWORD *)v580 = 0;
    v580[4] = 1;
    v581 = (char *)v520 + v573[10];
    *(_DWORD *)v581 = 0;
    v581[4] = 1;
    v582 = (char *)v520 + v573[11];
    *(_DWORD *)v582 = 0;
    v582[4] = 1;
    v583 = (char *)v520 + v573[12];
    *(_DWORD *)v583 = 0;
    v583[4] = 1;
    v584 = (char *)v520 + v573[13];
    *(_QWORD *)v584 = 0;
    v584[8] = 1;
    v585 = (char *)v520 + v573[14];
    *(_QWORD *)v585 = 0;
    v585[8] = 1;
    v586 = (char *)v520 + v573[15];
    *(_QWORD *)v586 = 0;
    v586[8] = 1;
    v587 = (char *)v520 + v573[16];
    *(_DWORD *)v587 = 0;
    v587[4] = 1;
    v588 = (char *)v520 + v573[17];
    *(_DWORD *)v588 = 0;
    v588[4] = 1;
    *((_BYTE *)v520 + v573[18]) = 2;
    v589 = (char *)v520 + v573[19];
    *(_DWORD *)v589 = 0;
    v589[4] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v520 + v573[20], 1, 1, v575);
    sub_244A72890(v569, &qword_2573CFAD0);
  }
  else
  {
    sub_244A729FC(v569, (uint64_t)v520, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  }
  v590 = (uint64_t)v1058;
  v591 = (char *)v520 + v573[15];
  *(_QWORD *)v591 = v566;
  v591[8] = 0;
  v592 = v1069;
  v593 = swift_isUniquelyReferenced_nonNull_native();
  v594 = v1083;
  if ((v593 & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v595 = (_QWORD *)swift_retain();
    v596 = sub_244AA0CB0(v595);
    v592 = v1069;
    *(_QWORD *)(v1069 + v571) = v596;
    swift_release();
  }
  v597 = *(_QWORD *)(v592 + v571);
  v598 = v1072;
  sub_244A729FC((uint64_t)v520, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  ((void (*)(uint64_t, _QWORD, uint64_t, int64_t))v1071)(v598, 0, 1, v1081);
  v599 = v598;
  v600 = v1073;
  sub_244A7D6B8(v599, v1073);
  v601 = v597
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  swift_retain();
  sub_244A7D700(v600, v601, &qword_2573CFAD0);
  swift_endAccess();
  swift_release();
  v602 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v592, v602, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v602, 0, 1, v594);
  v603 = *(_QWORD *)(v1056 + v1052[23]);
  v604 = *(_QWORD *)(v603 + 56);
  v1065 = v603 + 56;
  v605 = 1 << *(_BYTE *)(v603 + 32);
  v606 = -1;
  if (v605 < 64)
    v606 = ~(-1 << v605);
  v607 = v606 & v604;
  v1066 = (unint64_t)(v605 + 63) >> 6;
  v1069 = v603;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v1079)
  {
    if (v607)
    {
      v615 = __clz(__rbit64(v607));
      v607 &= v607 - 1;
      v1079 = i;
      v616 = v615 | (i << 6);
      goto LABEL_137;
    }
    v617 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
LABEL_363:
      __break(1u);
      goto LABEL_364;
    }
    if (v617 >= v1066)
      goto LABEL_151;
    v618 = *(_QWORD *)(v1065 + 8 * v617);
    v619 = i + 1;
    if (!v618)
    {
      v619 = i + 2;
      if (i + 2 >= v1066)
        goto LABEL_151;
      v618 = *(_QWORD *)(v1065 + 8 * v619);
      if (!v618)
      {
        v619 = i + 3;
        if (i + 3 >= v1066)
          goto LABEL_151;
        v618 = *(_QWORD *)(v1065 + 8 * v619);
        if (!v618)
          break;
      }
    }
LABEL_136:
    v607 = (v618 - 1) & v618;
    v1079 = v619;
    v616 = __clz(__rbit64(v618)) + (v619 << 6);
LABEL_137:
    v621 = (uint64_t *)(*(_QWORD *)(v1069 + 48) + 16 * v616);
    v623 = *v621;
    v622 = v621[1];
    sub_244A7284C(v602, v590, &qword_2573CFAD8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v590, 1, v594) == 1)
    {
      swift_bridgeObjectRetain();
      v624 = v1082;
      sub_244AE3C00();
      v625 = *(int *)(v594 + 20);
      if (qword_2573CF7B0 != -1)
        swift_once();
      *(_QWORD *)(v624 + v625) = qword_2573D04C0;
      swift_retain();
      sub_244A72890(v590, &qword_2573CFAD8);
    }
    else
    {
      v624 = v1082;
      sub_244A729FC(v590, v1082, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      swift_bridgeObjectRetain();
    }
    v626 = *(int *)(v594 + 20);
    v627 = *(_QWORD *)(v624 + v626)
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    v628 = v1068;
    sub_244A7284C(v627, v1068, &qword_2573CFAD0);
    v629 = (int *)v1081;
    if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v628, 1, v1081) == 1)
    {
      v630 = v1080;
      *v1080 = MEMORY[0x24BEE4AF8];
      v631 = (char *)v630 + v629[5];
      v632 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v632 - 8) + 56))(v631, 1, 1, v632);
      sub_244AE3C00();
      v633 = (char *)v630 + v629[7];
      *(_DWORD *)v633 = 0;
      v633[4] = 1;
      v634 = (char *)v630 + v629[8];
      *(_DWORD *)v634 = 0;
      v634[4] = 1;
      v635 = (char *)v630 + v629[9];
      *(_DWORD *)v635 = 0;
      v635[4] = 1;
      v636 = (char *)v630 + v629[10];
      *(_DWORD *)v636 = 0;
      v636[4] = 1;
      v637 = (char *)v630 + v629[11];
      *(_DWORD *)v637 = 0;
      v637[4] = 1;
      v638 = (char *)v630 + v629[12];
      *(_DWORD *)v638 = 0;
      v638[4] = 1;
      v639 = (char *)v630 + v629[13];
      *(_QWORD *)v639 = 0;
      v639[8] = 1;
      v640 = (char *)v630 + v629[14];
      *(_QWORD *)v640 = 0;
      v640[8] = 1;
      v641 = (char *)v630 + v629[15];
      *(_QWORD *)v641 = 0;
      v641[8] = 1;
      v642 = (char *)v630 + v629[16];
      *(_DWORD *)v642 = 0;
      v642[4] = 1;
      v643 = (char *)v630 + v629[17];
      *(_DWORD *)v643 = 0;
      v643[4] = 1;
      *((_BYTE *)v630 + v629[18]) = 2;
      v644 = (char *)v630 + v629[19];
      *(_DWORD *)v644 = 0;
      v644[4] = 1;
      v645 = v629[20];
      v646 = (char *)v630;
      v590 = (uint64_t)v1058;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))(&v646[v645], 1, 1, v1062);
      sub_244A72890(v628, &qword_2573CFAD0);
    }
    else
    {
      v646 = (char *)v1080;
      sub_244A729FC(v628, (uint64_t)v1080, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    }
    v647 = *(_QWORD **)v646;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v647 = sub_244A7C26C(0, v647[2] + 1, 1, v647);
    v649 = v647[2];
    v648 = v647[3];
    if (v649 >= v648 >> 1)
      v647 = sub_244A7C26C((_QWORD *)(v648 > 1), v649 + 1, 1, v647);
    v647[2] = v649 + 1;
    v650 = &v647[2 * v649];
    v650[4] = v623;
    v650[5] = v622;
    v651 = v1080;
    *v1080 = v647;
    v652 = v1082;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
      swift_allocObject();
      v653 = (_QWORD *)swift_retain();
      v652 = v1082;
      *(_QWORD *)(v652 + v626) = sub_244AA0CB0(v653);
      swift_release();
    }
    v609 = *(_QWORD *)(v652 + v626);
    v610 = (uint64_t)v651;
    v611 = v1072;
    sub_244A729FC(v610, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    ((void (*)(uint64_t, _QWORD, uint64_t, int64_t))v1071)(v611, 0, 1, v1081);
    v612 = v611;
    v613 = v1073;
    sub_244A7D6B8(v612, v1073);
    v614 = v609
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    swift_retain();
    sub_244A7D700(v613, v614, &qword_2573CFAD0);
    swift_endAccess();
    swift_release();
    v602 = v1078;
    sub_244A72890(v1078, &qword_2573CFAD8);
    sub_244A729FC(v652, v602, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v594 = v1083;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v602, 0, 1, v1083);
  }
  v620 = i + 4;
  if (i + 4 < v1066)
  {
    v618 = *(_QWORD *)(v1065 + 8 * v620);
    if (!v618)
    {
      while (1)
      {
        v619 = v620 + 1;
        if (__OFADD__(v620, 1))
          break;
        if (v619 >= v1066)
          goto LABEL_151;
        v618 = *(_QWORD *)(v1065 + 8 * v619);
        ++v620;
        if (v618)
          goto LABEL_136;
      }
LABEL_364:
      __break(1u);
      goto LABEL_365;
    }
    v619 = i + 4;
    goto LABEL_136;
  }
LABEL_151:
  swift_release();
  v654 = v1052;
  v655 = (uint64_t *)(v1056 + v1052[6]);
  v657 = *v655;
  v656 = v655[1];
  v658 = v1038;
  sub_244A7284C(v602, v1038, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v658, 1, v594) == 1)
  {
    swift_bridgeObjectRetain();
    v659 = v1043;
    sub_244AE3C00();
    v660 = *(int *)(v594 + 20);
    v662 = (uint64_t)v1001;
    v661 = (uint64_t)v1002;
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v659 + v660) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v1038, &qword_2573CFAD8);
  }
  else
  {
    v659 = v1043;
    sub_244A729FC(v658, v1043, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    swift_bridgeObjectRetain();
    v662 = (uint64_t)v1001;
    v661 = (uint64_t)v1002;
  }
  v663 = *(int *)(v594 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v664 = (_QWORD *)swift_retain();
    v602 = v1078;
    v665 = sub_244AA0CB0(v664);
    v659 = v1043;
    *(_QWORD *)(v1043 + v663) = v665;
    swift_release();
  }
  v666 = *(_QWORD *)(v659 + v663);
  swift_beginAccess();
  *(_QWORD *)(v666 + 16) = v657;
  *(_QWORD *)(v666 + 24) = v656;
  swift_bridgeObjectRelease();
  sub_244A72890(v602, &qword_2573CFAD8);
  sub_244A729FC(v659, v602, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  v667 = v602;
  v668 = v602;
  v669 = v1083;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v667, 0, 1, v1083);
  v670 = (uint64_t *)(v1056 + v654[7]);
  v672 = *v670;
  v671 = v670[1];
  v673 = v668;
  v674 = v1003;
  sub_244A7284C(v673, v1003, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v674, 1, v669) == 1)
  {
    swift_bridgeObjectRetain();
    v675 = v1044;
    sub_244AE3C00();
    v676 = *(int *)(v669 + 20);
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v675 + v676) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v674, &qword_2573CFAD8);
  }
  else
  {
    v675 = v1044;
    sub_244A729FC(v674, v1044, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    swift_bridgeObjectRetain();
  }
  v677 = *(int *)(v669 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v678 = (_QWORD *)swift_retain();
    v679 = sub_244AA0CB0(v678);
    v675 = v1044;
    *(_QWORD *)(v1044 + v677) = v679;
    swift_release();
  }
  v680 = *(_QWORD *)(v675 + v677);
  swift_beginAccess();
  *(_QWORD *)(v680 + 48) = v672;
  *(_QWORD *)(v680 + 56) = v671;
  swift_bridgeObjectRelease();
  v681 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v675, v681, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  v682 = v1083;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v681, 0, 1, v1083);
  v683 = (uint64_t *)(v1056 + v654[9]);
  v685 = *v683;
  v684 = v683[1];
  v686 = v681;
  v687 = v1004;
  sub_244A7284C(v686, v1004, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v687, 1, v682) == 1)
  {
    swift_bridgeObjectRetain();
    v688 = v1045;
    sub_244AE3C00();
    v689 = *(int *)(v682 + 20);
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v688 + v689) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v687, &qword_2573CFAD8);
  }
  else
  {
    v688 = v1045;
    sub_244A729FC(v687, v1045, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    swift_bridgeObjectRetain();
  }
  v690 = *(int *)(v682 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v691 = (_QWORD *)swift_retain();
    v692 = sub_244AA0CB0(v691);
    v688 = v1045;
    *(_QWORD *)(v1045 + v690) = v692;
    swift_release();
  }
  v693 = *(_QWORD *)(v688 + v690);
  swift_beginAccess();
  *(_QWORD *)(v693 + 64) = v685;
  *(_QWORD *)(v693 + 72) = v684;
  swift_bridgeObjectRelease();
  v694 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v688, v694, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  v695 = v1083;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v694, 0, 1, v1083);
  v696 = sub_244AE4308();
  v697 = v694;
  v698 = v1005;
  sub_244A7284C(v697, v1005, &qword_2573CFAD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v698, 1, v695) == 1)
  {
    v699 = v1037;
    sub_244AE3C00();
    v700 = *(int *)(v695 + 20);
    if (qword_2573CF7B0 != -1)
      swift_once();
    *(_QWORD *)(v699 + v700) = qword_2573D04C0;
    swift_retain();
    sub_244A72890(v698, &qword_2573CFAD8);
    v701 = v699;
  }
  else
  {
    v701 = v1037;
    sub_244A729FC(v698, v1037, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  }
  v702 = v696;
  v703 = *(int *)(v695 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
    swift_allocObject();
    v704 = (_QWORD *)swift_retain();
    v701 = v1037;
    *(_QWORD *)(v701 + v703) = sub_244AA0CB0(v704);
    swift_release();
  }
  v705 = *(_QWORD *)(v701 + v703)
       + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__taskPriority;
  swift_beginAccess();
  *(_QWORD *)v705 = v702;
  *(_BYTE *)(v705 + 8) = 0;
  v706 = v1078;
  sub_244A72890(v1078, &qword_2573CFAD8);
  sub_244A729FC(v701, v706, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v706, 0, 1, v695);
  v707 = (uint64_t *)(v1056 + v654[8]);
  v709 = *v707;
  v708 = v707[1];
  v710 = HIBYTE(v708) & 0xF;
  if ((v708 & 0x2000000000000000) == 0)
    v710 = v709 & 0xFFFFFFFFFFFFLL;
  if (v710)
  {
    v711 = v999;
    sub_244A7284C(v706, v999, &qword_2573CFAD8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v711, 1, v695) == 1)
    {
      swift_bridgeObjectRetain();
      v712 = v1032;
      sub_244AE3C00();
      v713 = *(int *)(v695 + 20);
      if (qword_2573CF7B0 != -1)
        swift_once();
      *(_QWORD *)(v712 + v713) = qword_2573D04C0;
      swift_retain();
      sub_244A72890(v999, &qword_2573CFAD8);
      v714 = v712;
    }
    else
    {
      v714 = v1032;
      sub_244A729FC(v711, v1032, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      swift_bridgeObjectRetain();
    }
    v715 = *(int *)(v695 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
      swift_allocObject();
      v716 = (_QWORD *)swift_retain();
      v706 = v1078;
      v717 = sub_244AA0CB0(v716);
      v714 = v1032;
      *(_QWORD *)(v1032 + v715) = v717;
      swift_release();
    }
    v718 = *(_QWORD *)(v714 + v715);
    swift_beginAccess();
    *(_QWORD *)(v718 + 32) = v709;
    *(_QWORD *)(v718 + 40) = v708;
    swift_bridgeObjectRelease();
    sub_244A72890(v706, &qword_2573CFAD8);
    sub_244A729FC(v714, v706, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v695 = v1083;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v706, 0, 1, v1083);
  }
  v719 = (uint64_t *)(v1056 + v654[26]);
  v721 = *v719;
  v720 = v719[1];
  v722 = HIBYTE(v720) & 0xF;
  if ((v720 & 0x2000000000000000) == 0)
    v722 = v721 & 0xFFFFFFFFFFFFLL;
  if (v722)
  {
    sub_244A7284C(v706, v661, &qword_2573CFAD8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v661, 1, v695) == 1)
    {
      swift_bridgeObjectRetain();
      sub_244AE3C00();
      v723 = *(int *)(v695 + 20);
      if (qword_2573CF7B0 != -1)
        swift_once();
      *(_QWORD *)(v662 + v723) = qword_2573D04C0;
      swift_retain();
      sub_244A72890(v661, &qword_2573CFAD8);
    }
    else
    {
      sub_244A729FC(v661, v662, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      swift_bridgeObjectRetain();
    }
    v724 = *(int *)(v695 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
      swift_allocObject();
      v725 = (_QWORD *)swift_retain();
      v706 = v1078;
      *(_QWORD *)(v662 + v724) = sub_244AA0CB0(v725);
      swift_release();
    }
    v726 = (_QWORD *)(*(_QWORD *)(v662 + v724)
                    + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__tokenizerName);
    swift_beginAccess();
    *v726 = v721;
    v726[1] = v720;
    swift_bridgeObjectRelease();
    sub_244A72890(v706, &qword_2573CFAD8);
    sub_244A729FC(v662, v706, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    v695 = v1083;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v706, 0, 1, v1083);
  }
  v727 = *(_DWORD *)(v1056 + v654[11]);
  v728 = (uint64_t)v1041;
  if (v727)
  {
    v729 = v706;
    v730 = v990;
    sub_244A7284C(v729, v990, &qword_2573CFAD8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v730, 1, v695) == 1)
    {
      v731 = v1033;
      sub_244AE3C00();
      v732 = *(int *)(v695 + 20);
      if (qword_2573CF7B0 != -1)
        swift_once();
      *(_QWORD *)(v731 + v732) = qword_2573D04C0;
      swift_retain();
      sub_244A72890(v730, &qword_2573CFAD8);
    }
    else
    {
      v731 = v1033;
      sub_244A729FC(v730, v1033, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    }
    v733 = *(int *)(v695 + 20);
    v734 = *(_QWORD *)(v731 + v733)
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    v735 = v993;
    sub_244A7284C(v734, v993, &qword_2573CFAD0);
    v736 = (int *)v1081;
    if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v735, 1, v1081) == 1)
    {
      v737 = v988;
      *v988 = MEMORY[0x24BEE4AF8];
      v738 = (char *)v737 + v736[5];
      v739 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v739 - 8) + 56))(v738, 1, 1, v739);
      sub_244AE3C00();
      v740 = (char *)v737 + v736[7];
      *(_DWORD *)v740 = 0;
      v740[4] = 1;
      v741 = (char *)v737 + v736[8];
      *(_DWORD *)v741 = 0;
      v741[4] = 1;
      v742 = (char *)v737 + v736[9];
      *(_DWORD *)v742 = 0;
      v742[4] = 1;
      v743 = (char *)v737 + v736[10];
      *(_DWORD *)v743 = 0;
      v743[4] = 1;
      v744 = (char *)v737 + v736[11];
      *(_DWORD *)v744 = 0;
      v744[4] = 1;
      v745 = (char *)v737 + v736[12];
      *(_DWORD *)v745 = 0;
      v745[4] = 1;
      v746 = (char *)v737 + v736[13];
      *(_QWORD *)v746 = 0;
      v746[8] = 1;
      v747 = (char *)v737 + v736[14];
      *(_QWORD *)v747 = 0;
      v747[8] = 1;
      v748 = (char *)v737 + v736[15];
      *(_QWORD *)v748 = 0;
      v748[8] = 1;
      v749 = (char *)v737 + v736[16];
      *(_DWORD *)v749 = 0;
      v749[4] = 1;
      v750 = (char *)v737 + v736[17];
      *(_DWORD *)v750 = 0;
      v750[4] = 1;
      *((_BYTE *)v737 + v736[18]) = 2;
      v751 = (char *)v737 + v736[19];
      *(_DWORD *)v751 = 0;
      v751[4] = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v737 + v736[20], 1, 1, v1062);
      v752 = v735;
      v753 = v737;
      sub_244A72890(v752, &qword_2573CFAD0);
    }
    else
    {
      v754 = v735;
      v753 = v988;
      sub_244A729FC(v754, (uint64_t)v988, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    }
    v728 = (uint64_t)v1041;
    v755 = (char *)v753 + v736[19];
    *(_DWORD *)v755 = v727;
    v755[4] = 0;
    v756 = v1033;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
      swift_allocObject();
      v757 = (_QWORD *)swift_retain();
      *(_QWORD *)(v756 + v733) = sub_244AA0CB0(v757);
      swift_release();
    }
    v758 = *(_QWORD *)(v756 + v733);
    v759 = v1072;
    sub_244A729FC((uint64_t)v753, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    ((void (*)(uint64_t, _QWORD, uint64_t, int64_t))v1071)(v759, 0, 1, v1081);
    v760 = v1073;
    sub_244A7D6B8(v759, v1073);
    v761 = v758
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    swift_retain();
    sub_244A7D700(v760, v761, &qword_2573CFAD0);
    swift_endAccess();
    swift_release();
    v706 = v1078;
    sub_244A72890(v1078, &qword_2573CFAD8);
    sub_244A729FC(v756, v706, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v706, 0, 1, v695);
  }
  v762 = v1056 + v654[32];
  v763 = *(unsigned __int8 *)(v762 + 16);
  v764 = v1067;
  if (v763 != 255)
  {
    v1088 = *(_OWORD *)v762;
    LOBYTE(v1089) = v763;
    sub_244A81278((uint64_t *)&v1088, v1034);
    v765 = v992;
    sub_244A7284C(v706, v992, &qword_2573CFAD8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v765, 1, v695) == 1)
    {
      sub_244AE3C00();
      v766 = *(int *)(v695 + 20);
      v767 = v1062;
      if (qword_2573CF7B0 != -1)
        swift_once();
      *(_QWORD *)(v728 + v766) = qword_2573D04C0;
      swift_retain();
      sub_244A72890(v765, &qword_2573CFAD8);
    }
    else
    {
      sub_244A729FC(v765, v728, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      v767 = v1062;
    }
    v768 = *(int *)(v695 + 20);
    v769 = *(_QWORD *)(v728 + v768)
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    v770 = v994;
    sub_244A7284C(v769, v994, &qword_2573CFAD0);
    v771 = (int *)v1081;
    if (((unsigned int (*)(uint64_t, uint64_t, int64_t))v1070)(v770, 1, v1081) == 1)
    {
      v772 = v989;
      *v989 = MEMORY[0x24BEE4AF8];
      v773 = (char *)v772 + v771[5];
      v774 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v774 - 8) + 56))(v773, 1, 1, v774);
      sub_244AE3C00();
      v775 = (char *)v772 + v771[7];
      *(_DWORD *)v775 = 0;
      v775[4] = 1;
      v776 = (char *)v772 + v771[8];
      *(_DWORD *)v776 = 0;
      v776[4] = 1;
      v777 = (char *)v772 + v771[9];
      *(_DWORD *)v777 = 0;
      v777[4] = 1;
      v778 = (char *)v772 + v771[10];
      *(_DWORD *)v778 = 0;
      v778[4] = 1;
      v779 = (char *)v772 + v771[11];
      *(_DWORD *)v779 = 0;
      v779[4] = 1;
      v780 = (char *)v772 + v771[12];
      *(_DWORD *)v780 = 0;
      v780[4] = 1;
      v781 = (char *)v772 + v771[13];
      *(_QWORD *)v781 = 0;
      v781[8] = 1;
      v782 = (char *)v772 + v771[14];
      *(_QWORD *)v782 = 0;
      v782[8] = 1;
      v783 = (char *)v772 + v771[15];
      *(_QWORD *)v783 = 0;
      v783[8] = 1;
      v784 = (char *)v772 + v771[16];
      *(_DWORD *)v784 = 0;
      v784[4] = 1;
      v785 = (char *)v772 + v771[17];
      *(_DWORD *)v785 = 0;
      v785[4] = 1;
      *((_BYTE *)v772 + v771[18]) = 2;
      v786 = (char *)v772 + v771[19];
      *(_DWORD *)v786 = 0;
      v786[4] = 1;
      v787 = v1061;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1061 + 56))((char *)v772 + v771[20], 1, 1, v767);
      v788 = v770;
      v789 = v772;
      v728 = (uint64_t)v1041;
      sub_244A72890(v788, &qword_2573CFAD0);
    }
    else
    {
      v790 = v770;
      v789 = v989;
      sub_244A729FC(v790, (uint64_t)v989, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
      v787 = v1061;
    }
    v791 = (uint64_t)v789 + v771[20];
    sub_244A72890(v791, &qword_2573CFB00);
    sub_244A729FC(v1034, v791, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v787 + 56))(v791, 0, 1, v767);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
      swift_allocObject();
      v792 = (_QWORD *)swift_retain();
      *(_QWORD *)(v728 + v768) = sub_244AA0CB0(v792);
      swift_release();
    }
    v793 = *(_QWORD *)(v728 + v768);
    v794 = v1072;
    sub_244A729FC((uint64_t)v789, v1072, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    ((void (*)(uint64_t, _QWORD, uint64_t, int64_t))v1071)(v794, 0, 1, v1081);
    v795 = v1073;
    sub_244A7D6B8(v794, v1073);
    v796 = v793
         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
    swift_beginAccess();
    swift_retain();
    sub_244A7D700(v795, v796, &qword_2573CFAD0);
    swift_endAccess();
    swift_release();
    v797 = v1078;
    sub_244A72890(v1078, &qword_2573CFAD8);
    sub_244A729FC(v728, v797, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v797, 0, 1, v695);
  }
  v799 = v1006;
  v798 = v1007;
  v800 = HIBYTE(v1007) & 0xF;
  if ((v1007 & 0x2000000000000000) == 0)
    v800 = v1006 & 0xFFFFFFFFFFFFLL;
  if (v800)
  {
    v801 = v991;
    swift_bridgeObjectRelease();
    *v801 = v799;
    v801[1] = v798;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v802 = v1046;
  v803 = *(_QWORD *)(v1046 + 16);
  if (v803)
  {
    v804 = sub_244A7DAA8(&qword_2573CFAE8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE81D8);
    v1082 = 0;
    v805 = v802 + 48;
    do
    {
      v806 = *(_QWORD *)(v805 - 8);
      MEMORY[0x24BDAC7A8](v804);
      *(&v958 - 4) = v807;
      *(&v958 - 3) = v806;
      *((_DWORD *)&v958 - 4) = v808;
      swift_bridgeObjectRetain();
      v809 = v1082;
      sub_244AE3D74();
      v1082 = v809;
      swift_bridgeObjectRelease();
      v810 = v1067[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v810 = sub_244A7C060(0, *(_QWORD *)(v810 + 16) + 1, 1, v810, &qword_2573CFB10, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
      v812 = *(_QWORD *)(v810 + 16);
      v811 = *(_QWORD *)(v810 + 24);
      v813 = (uint64_t)v1057;
      if (v812 >= v811 >> 1)
        v810 = sub_244A7C060(v811 > 1, v812 + 1, 1, v810, &qword_2573CFB10, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
      v805 += 24;
      *(_QWORD *)(v810 + 16) = v812 + 1;
      v804 = sub_244A729FC(v813, v810+ ((*(unsigned __int8 *)(v1054 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1054 + 80))+ *(_QWORD *)(v1054 + 72) * v812, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
      v764 = v1067;
      v1067[1] = v810;
      --v803;
    }
    while (v803);
  }
  else
  {
    v1082 = 0;
  }
  swift_bridgeObjectRelease();
  *((_BYTE *)v764 + v1042) = 1;
  v814 = v1052;
  v815 = v1056;
  v816 = (uint64_t *)(v1056 + v1052[28]);
  v817 = *v816;
  v818 = v816[1];
  v819 = HIBYTE(v818) & 0xF;
  if ((v818 & 0x2000000000000000) == 0)
    v819 = v817 & 0xFFFFFFFFFFFFLL;
  v820 = v1083;
  if (!v819)
  {
LABEL_268:
    v856 = *(_QWORD *)(*(_QWORD *)(v815 + v814[30]) + 16);
    if (v856)
    {
      v1082 = swift_bridgeObjectRetain();
      v857 = (uint64_t *)(v1082 + 40);
      v858 = v1078;
      v859 = (uint64_t)v1064;
      do
      {
        v862 = *(v857 - 1);
        v861 = *v857;
        v863 = v858;
        v864 = v1053;
        sub_244A7284C(v863, v1053, &qword_2573CFAD8);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v864, 1, v820) == 1)
        {
          swift_bridgeObjectRetain();
          sub_244AE3C00();
          v865 = *(int *)(v820 + 20);
          if (qword_2573CF7B0 != -1)
            swift_once();
          *(_QWORD *)(v859 + v865) = qword_2573D04C0;
          swift_retain();
          sub_244A72890(v864, &qword_2573CFAD8);
          v820 = v1083;
        }
        else
        {
          sub_244A729FC(v864, v859, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
          swift_bridgeObjectRetain();
        }
        v866 = *(int *)(v820 + 20);
        v867 = (_QWORD **)(*(_QWORD *)(v859 + v866)
                         + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale);
        swift_beginAccess();
        v868 = *v867;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v868 = sub_244A7C26C(0, v868[2] + 1, 1, v868);
        v870 = v868[2];
        v869 = v868[3];
        if (v870 >= v869 >> 1)
          v868 = sub_244A7C26C((_QWORD *)(v869 > 1), v870 + 1, 1, v868);
        v868[2] = v870 + 1;
        v871 = &v868[2 * v870];
        v871[4] = v862;
        v871[5] = v861;
        v859 = (uint64_t)v1064;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
          swift_allocObject();
          v872 = (_QWORD *)swift_retain();
          v859 = (uint64_t)v1064;
          *(_QWORD *)(v859 + v866) = sub_244AA0CB0(v872);
          swift_release();
        }
        v857 += 2;
        v860 = (_QWORD *)(*(_QWORD *)(v859 + v866)
                        + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale);
        swift_beginAccess();
        *v860 = v868;
        swift_bridgeObjectRelease();
        v858 = v1078;
        sub_244A72890(v1078, &qword_2573CFAD8);
        sub_244A729FC(v859, v858, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
        v820 = v1083;
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v858, 0, 1, v1083);
        --v856;
      }
      while (v856);
      swift_bridgeObjectRelease();
    }
    if (qword_2573CF960 != -1)
      goto LABEL_366;
    goto LABEL_284;
  }
  v821 = v1063;
  *v1063 = MEMORY[0x24BEE4AF8];
  v822 = v995;
  sub_244AE3C00();
  v823 = (unint64_t *)((char *)v821 + *(int *)(v822 + 24));
  *v823 = v817;
  v823[1] = v818;
  v824 = *(_QWORD *)(v815 + v814[29]);
  v825 = *(_QWORD *)(v824 + 64);
  v1080 = (_QWORD *)(v824 + 64);
  v826 = 1 << *(_BYTE *)(v824 + 32);
  v827 = -1;
  if (v826 < 64)
    v827 = ~(-1 << v826);
  v828 = v827 & v825;
  v1081 = (unint64_t)(v826 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v829 = 0;
  v830 = v1074;
  if (!v828)
    goto LABEL_246;
  while (2)
  {
    v831 = __clz(__rbit64(v828));
    v828 &= v828 - 1;
    v832 = v831 | (v829 << 6);
LABEL_257:
    v836 = 16 * v832;
    v837 = (uint64_t *)(*(_QWORD *)(v824 + 48) + v836);
    v839 = *v837;
    v838 = v837[1];
    v840 = (uint64_t *)(*(_QWORD *)(v824 + 56) + v836);
    v842 = *v840;
    v841 = v840[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244AE3C00();
    v843 = v1060;
    v844 = (_QWORD *)(v830 + *(int *)(v1060 + 20));
    *v844 = 0;
    v844[1] = 0;
    v845 = (_QWORD *)(v830 + *(int *)(v843 + 24));
    *v844 = v839;
    v844[1] = v838;
    *v845 = v842;
    v845[1] = v841;
    sub_244A72964(v830, v1075, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
    v821 = v1063;
    v846 = *v1063;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v846 = sub_244A7C060(0, *(_QWORD *)(v846 + 16) + 1, 1, v846, &qword_2573CFB08, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
    v848 = *(_QWORD *)(v846 + 16);
    v847 = *(_QWORD *)(v846 + 24);
    if (v848 >= v847 >> 1)
      v846 = sub_244A7C060(v847 > 1, v848 + 1, 1, v846, &qword_2573CFB08, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
    *(_QWORD *)(v846 + 16) = v848 + 1;
    sub_244A729FC(v1075, v846+ ((*(unsigned __int8 *)(v1059 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1059 + 80))+ *(_QWORD *)(v1059 + 72) * v848, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
    *v821 = v846;
    sub_244A729C0(v1074, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
    v820 = v1083;
    if (v828)
      continue;
    break;
  }
LABEL_246:
  if (__OFADD__(v829++, 1))
    goto LABEL_363;
  if (v829 >= v1081)
  {
LABEL_267:
    swift_release();
    v849 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
    v850 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v849 - 8) + 56);
    v851 = (uint64_t)v987;
    v850(v987, 1, 1, v849);
    v852 = v1040;
    sub_244AE3C00();
    v853 = v985;
    sub_244A72964((uint64_t)v821, v985, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
    sub_244A72890(v851, &qword_2573CFAF0);
    sub_244A729FC(v853, v851, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
    v850((char *)v851, 0, 1, v849);
    v854 = v986;
    sub_244A72964(v851, v986, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
    v855 = v983;
    sub_244A72890(v983, &qword_2573CFAF8);
    sub_244A729FC(v854, v855, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
    v984(v855, 0, 1, v852);
    sub_244A729C0(v851, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
    sub_244A729C0((uint64_t)v821, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
    v815 = v1056;
    v814 = v1052;
    goto LABEL_268;
  }
  v834 = v1080[v829];
  if (v834)
  {
LABEL_256:
    v828 = (v834 - 1) & v834;
    v832 = __clz(__rbit64(v834)) + (v829 << 6);
    goto LABEL_257;
  }
  v835 = v829 + 1;
  if (v829 + 1 >= v1081)
    goto LABEL_267;
  v834 = v1080[v835];
  if (v834)
    goto LABEL_255;
  v835 = v829 + 2;
  if (v829 + 2 >= v1081)
    goto LABEL_267;
  v834 = v1080[v835];
  if (v834)
    goto LABEL_255;
  v835 = v829 + 3;
  if (v829 + 3 >= v1081)
    goto LABEL_267;
  v834 = v1080[v835];
  if (v834)
  {
LABEL_255:
    v829 = v835;
    goto LABEL_256;
  }
  while (1)
  {
    v829 = v835 + 1;
    if (__OFADD__(v835, 1))
      break;
    if (v829 >= v1081)
      goto LABEL_267;
    v834 = v1080[v829];
    ++v835;
    if (v834)
      goto LABEL_256;
  }
LABEL_365:
  __break(1u);
LABEL_366:
  swift_once();
LABEL_284:
  swift_beginAccess();
  v1088 = xmmword_2573D28C0;
  v1089 = unk_2573D28D0;
  v1090 = byte_2573D28E0;
  sub_244A7D760((uint64_t)&v1088);
  v873 = sub_244ADE91C();
  sub_244A7D790((uint64_t)&v1088);
  *((_BYTE *)v1067 + v1042) = v873 & 1;
  v874 = v1056;
  v875 = v1047;
  v876 = v1052;
  v877 = v1036;
  if (qword_2573CF768 != -1)
    swift_once();
  swift_beginAccess();
  if ((byte_2573CFA01 & 1) == 0)
  {
    v878 = (unint64_t *)(v874 + v876[31]);
    if (v878[1])
    {
      v879 = *v878;
      v880 = v878[1];
    }
    else
    {
      v879 = 0xD00000000000001FLL;
      v880 = 0x8000000244AE95F0;
    }
    v881 = v978;
    sub_244A7284C(v1035, v978, &qword_2573CFAC8);
    v882 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1039 + 48);
    if (v882(v881, 1, v875) == 1)
    {
      *v877 = 0;
      v877[1] = 0xE000000000000000;
      v877[2] = 0;
      v877[3] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v877 = v1036;
      sub_244AE3C00();
      sub_244A72890(v881, &qword_2573CFAC8);
    }
    else
    {
      sub_244A729FC(v881, (uint64_t)v877, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    *v877 = v879;
    v877[1] = v880;
    v883 = v1035;
    sub_244A72890(v1035, &qword_2573CFAC8);
    sub_244A729FC((uint64_t)v877, v883, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1000)(v883, 0, 1, v875);
    v884 = (uint64_t *)(v874 + v1052[5]);
    v886 = *v884;
    v885 = v884[1];
    v887 = v980;
    sub_244A7284C(v883, v980, &qword_2573CFAC8);
    v888 = v882(v887, 1, v875);
    v889 = (uint64_t)v979;
    v890 = v981;
    if (v888 == 1)
    {
      *v981 = 0;
      v890[1] = 0xE000000000000000;
      v890[2] = 0;
      v890[3] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_244AE3C00();
      sub_244A72890(v887, &qword_2573CFAC8);
    }
    else
    {
      sub_244A729FC(v887, (uint64_t)v981, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    v890[2] = v886;
    v890[3] = v885;
    v891 = v1035;
    sub_244A72890(v1035, &qword_2573CFAC8);
    sub_244A729FC((uint64_t)v890, v891, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1000)(v891, 0, 1, v875);
    if (qword_2573CF968 != -1)
      swift_once();
    swift_beginAccess();
    v1086[0] = xmmword_2573D28E8;
    v1086[1] = *(_OWORD *)&qword_2573D28F8;
    v1087 = byte_2573D2908;
    sub_244A7D7C0((uint64_t)v1086);
    v892 = sub_244ADE3AC();
    sub_244A7D800((uint64_t)v1086);
    if (v892)
    {
      if (*(_QWORD *)(v892 + 16))
      {
        v893 = sub_244A748D0(0xD000000000000010, 0x8000000244AE9610, v892);
        v895 = v894;
        swift_bridgeObjectRelease();
        if (v895)
        {
          if (v893 == 0xD000000000000010 && v895 == 0x8000000244AE9630 || (sub_244AE44DC() & 1) != 0)
          {
            sub_244A7284C(v1078, v889, &qword_2573CFAD8);
            v896 = v1083;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v889, 1, v1083) == 1)
            {
              v897 = v963;
              sub_244AE3C00();
              v898 = *(int *)(v896 + 20);
              if (qword_2573CF7B0 != -1)
                swift_once();
              *(_QWORD *)(v897 + v898) = qword_2573D04C0;
              swift_retain();
              sub_244A72890(v889, &qword_2573CFAD8);
              v899 = v897;
            }
            else
            {
              v899 = v963;
              sub_244A729FC(v889, v963, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            }
            v900 = *(int *)(v1083 + 20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
              swift_allocObject();
              v901 = (_QWORD *)swift_retain();
              v902 = sub_244AA0CB0(v901);
              v899 = v963;
              *(_QWORD *)(v963 + v900) = v902;
              swift_release();
            }
            v903 = *(_QWORD *)(v899 + v900);
            v904 = v899;
            v905 = v903
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
            swift_beginAccess();
            *(_QWORD *)v905 = 1;
            *(_WORD *)(v905 + 8) = 1;
            v906 = v1078;
            sub_244A72890(v1078, &qword_2573CFAD8);
            sub_244A729FC(v904, v906, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v906, 0, 1, v1083);
          }
          v907 = (uint64_t)v962;
          if (v893 == 0x43495645445F4E4FLL && v895 == 0xE900000000000045 || (sub_244AE44DC() & 1) != 0)
          {
            sub_244A7284C(v1078, v907, &qword_2573CFAD8);
            v908 = v1083;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v907, 1, v1083) == 1)
            {
              v909 = v964;
              sub_244AE3C00();
              v910 = *(int *)(v908 + 20);
              if (qword_2573CF7B0 != -1)
                swift_once();
              *(_QWORD *)(v909 + v910) = qword_2573D04C0;
              swift_retain();
              sub_244A72890(v907, &qword_2573CFAD8);
              v911 = v909;
            }
            else
            {
              v911 = v964;
              sub_244A729FC(v907, v964, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            }
            v912 = *(int *)(v1083 + 20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
              swift_allocObject();
              v913 = (_QWORD *)swift_retain();
              v914 = sub_244AA0CB0(v913);
              v911 = v964;
              *(_QWORD *)(v964 + v912) = v914;
              swift_release();
            }
            v915 = *(_QWORD *)(v911 + v912);
            v916 = v911;
            v917 = v915
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
            swift_beginAccess();
            *(_QWORD *)v917 = 2;
            *(_WORD *)(v917 + 8) = 1;
            v918 = v1078;
            sub_244A72890(v1078, &qword_2573CFAD8);
            sub_244A729FC(v916, v918, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v918, 0, 1, v1083);
          }
          if (v893 == 0x45565245535F4E4FLL && v895 == 0xE900000000000052 || (sub_244AE44DC() & 1) != 0)
          {
            v919 = v959;
            sub_244A7284C(v1078, v959, &qword_2573CFAD8);
            v920 = v1083;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v919, 1, v1083) == 1)
            {
              v921 = v965;
              sub_244AE3C00();
              v922 = *(int *)(v920 + 20);
              if (qword_2573CF7B0 != -1)
                swift_once();
              *(_QWORD *)(v921 + v922) = qword_2573D04C0;
              swift_retain();
              sub_244A72890(v919, &qword_2573CFAD8);
              v923 = v921;
            }
            else
            {
              v923 = v965;
              sub_244A729FC(v919, v965, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            }
            v924 = *(int *)(v1083 + 20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
              swift_allocObject();
              v925 = (_QWORD *)swift_retain();
              v926 = sub_244AA0CB0(v925);
              v923 = v965;
              *(_QWORD *)(v965 + v924) = v926;
              swift_release();
            }
            v927 = *(_QWORD *)(v923 + v924);
            v928 = v923;
            v929 = v927
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
            swift_beginAccess();
            *(_QWORD *)v929 = 3;
            *(_WORD *)(v929 + 8) = 1;
            v930 = v1078;
            sub_244A72890(v1078, &qword_2573CFAD8);
            sub_244A729FC(v928, v930, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v930, 0, 1, v1083);
          }
          if (v893 == 0x45565245535F4E4FLL && v895 == 0xED00004947545F52)
          {
            swift_bridgeObjectRelease();
            goto LABEL_339;
          }
          v931 = sub_244AE44DC();
          swift_bridgeObjectRelease();
          if ((v931 & 1) != 0)
          {
LABEL_339:
            v932 = v960;
            sub_244A7284C(v1078, v960, &qword_2573CFAD8);
            v933 = v1083;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v932, 1, v1083) == 1)
            {
              v934 = v961;
              sub_244AE3C00();
              v935 = *(int *)(v933 + 20);
              if (qword_2573CF7B0 != -1)
                swift_once();
              *(_QWORD *)(v934 + v935) = qword_2573D04C0;
              swift_retain();
              sub_244A72890(v932, &qword_2573CFAD8);
            }
            else
            {
              v934 = v961;
              sub_244A729FC(v932, v961, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            }
            v936 = *(int *)(v1083 + 20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
              swift_allocObject();
              v937 = (_QWORD *)swift_retain();
              *(_QWORD *)(v934 + v936) = sub_244AA0CB0(v937);
              swift_release();
            }
            v938 = *(_QWORD *)(v934 + v936)
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
            swift_beginAccess();
            *(_QWORD *)v938 = 4;
            *(_WORD *)(v938 + 8) = 1;
            v939 = v1078;
            sub_244A72890(v1078, &qword_2573CFAD8);
            sub_244A729FC(v934, v939, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v939, 0, 1, v1083);
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    if (qword_2573CF978 != -1)
      swift_once();
    swift_beginAccess();
    v1084[0] = xmmword_2573D2938;
    v1084[1] = unk_2573D2948;
    v1085 = byte_2573D2958;
    sub_244A7D760((uint64_t)v1084);
    v940 = sub_244ADE91C();
    sub_244A7D790((uint64_t)v1084);
    v941 = v1083;
    if ((v940 & 1) != 0)
    {
      v942 = (uint64_t *)(v874 + v1052[10]);
      v944 = *v942;
      v943 = v942[1];
      v945 = HIBYTE(v943) & 0xF;
      if ((v943 & 0x2000000000000000) == 0)
        v945 = v944 & 0xFFFFFFFFFFFFLL;
      if (v945)
      {
        v946 = v966;
        sub_244A7284C(v1078, v966, &qword_2573CFAD8);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1076)(v946, 1, v941) == 1)
        {
          swift_bridgeObjectRetain();
          v947 = v967;
          sub_244AE3C00();
          v948 = *(int *)(v941 + 20);
          if (qword_2573CF7B0 != -1)
            swift_once();
          *(_QWORD *)(v947 + v948) = qword_2573D04C0;
          swift_retain();
          sub_244A72890(v966, &qword_2573CFAD8);
          v949 = v947;
        }
        else
        {
          v950 = v946;
          v949 = v967;
          sub_244A729FC(v950, v967, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
          swift_bridgeObjectRetain();
        }
        v951 = *(int *)(v941 + 20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
          swift_allocObject();
          v952 = (_QWORD *)swift_retain();
          v953 = sub_244AA0CB0(v952);
          v949 = v967;
          *(_QWORD *)(v967 + v951) = v953;
          swift_release();
        }
        v954 = v949;
        v955 = (_QWORD *)(*(_QWORD *)(v949 + v951)
                        + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelName);
        swift_beginAccess();
        *v955 = v944;
        v955[1] = v943;
        swift_bridgeObjectRelease();
        v956 = v1078;
        sub_244A72890(v1078, &qword_2573CFAD8);
        sub_244A729FC(v954, v956, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1077)(v956, 0, 1, v1083);
      }
    }
  }
  return sub_244A729C0(v874, type metadata accessor for PrivateMLRequest);
}

uint64_t sub_244A7BF28(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  int v19;

  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = a2;
  v18 = a3;
  v19 = a4;
  sub_244A7DAA8(&qword_2573CFB18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE8070);
  sub_244AE3D74();
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
  v13 = a1 + *(int *)(v12 + 20);
  sub_244A72890(v13, &qword_2573CFB20);
  sub_244A729FC((uint64_t)v11, v13, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
  v15 = a1 + *(int *)(v12 + 24);
  *(_DWORD *)v15 = a4;
  *(_BYTE *)(v15 + 4) = 0;
  return result;
}

uint64_t sub_244A7C060(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_244AE4410();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_244A7D934(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_244A7C26C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB28);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_244A7D844(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244A7C378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB38);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_244A7C3DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_244AE42B4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24951DCBC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_244A7C454(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_244A93B08(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_244A7CCA0();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_244A7C85C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_244A7C538(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB30);
  v42 = a2;
  v6 = sub_244AE4434();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244AE4530();
    sub_244AE4254();
    result = sub_244AE4548();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_244A7C85C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244AE43E0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244AE4530();
        swift_bridgeObjectRetain();
        sub_244AE4254();
        v9 = sub_244AE4548();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_244A7CA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_244A93B08(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_244A7CCA0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_244A7C538(v17, a5 & 1);
  v23 = sub_244A93B08(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244AE44F4();
  __break(1u);
  return result;
}

uint64_t sub_244A7CBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_244A7CC58;
  return sub_244A74B70(a1, a2, a3, v7, v8, v9, v10, v11);
}

uint64_t sub_244A7CC58()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void *sub_244A7CCA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB30);
  v2 = *v0;
  v3 = sub_244AE4428();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unsigned __int8 *sub_244A7CE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_244AE42C0();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_244A7D1B8();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_244AE4404();
  }
LABEL_7:
  v11 = sub_244A7CF3C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_244A7CF3C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_244A7D1B8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_244AE42CC();
  v4 = sub_244A7D234(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_244A7D234(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_244A7D378(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_244A7C378(v9, 0);
      v12 = sub_244A7D464((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x24951DC74](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x24951DC74);
LABEL_9:
      sub_244AE4404();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24951DC74]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_244A7D378(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_244A7C3DC(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_244A7C3DC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_244AE429C();
  }
  __break(1u);
  return result;
}

unint64_t sub_244A7D464(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_244A7C3DC(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_244AE42A8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_244AE4404();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_244A7C3DC(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_244AE4284();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_244A7D674(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_244A7D6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244A7D700(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_244A7D744(uint64_t a1)
{
  uint64_t v1;

  return sub_244A7BF28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_DWORD *)(v1 + 32));
}

uint64_t sub_244A7D760(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_244A7D790(uint64_t a1)
{

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244A7D7C0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_244A7D800(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244A7D844(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244AE444C();
  __break(1u);
  return result;
}

uint64_t sub_244A7D934(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_244AE444C();
  __break(1u);
  return result;
}

uint64_t sub_244A7DA50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = (_QWORD *)(a1
                + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0)
                         + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t sub_244A7DAA8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24951E280](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.clientConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244AE3B64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.clientConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244AE3B64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.clientConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.workloadType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0)
                          + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573CFCA8);
}

uint64_t PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.workloadType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2
                + *(int *)(type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0)
                         + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.workloadType.modify())()
{
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  return nullsub_1;
}

uint64_t PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.workloadParameters.getter()
{
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  return swift_bridgeObjectRetain();
}

uint64_t PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.workloadParameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0) + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.workloadParameters.modify())()
{
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  return nullsub_1;
}

uint64_t PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration.init(clientConfiguration:workloadType:workloadParameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  v10 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v11 = *(int *)(v10 + 24);
  v12 = sub_244AE3B64();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a5, a1, v12);
  v14 = (_QWORD *)(a5 + *(int *)(v10 + 20));
  *v14 = a2;
  v14[1] = a3;
  *(_QWORD *)(a5 + v11) = a4;
  return result;
}

uint64_t PrivateMLClient.Configuration.transport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244A7DD3C(v1, a1);
}

uint64_t sub_244A7DD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivateMLClient.Configuration.Transport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PrivateMLClient.Configuration.Transport(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573CFC40);
}

uint64_t PrivateMLClient.Configuration.transport.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_244A7DD9C(a1, v1);
}

uint64_t sub_244A7DD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivateMLClient.Configuration.Transport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PrivateMLClient.Configuration.transport.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLClient.Configuration.init(transport:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_244A7DDF8(a1, a2);
}

uint64_t sub_244A7DDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivateMLClient.Configuration.Transport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *_s13ConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for PrivateMLClient.Configuration.Transport(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = sub_244AE3B64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
    v7 = *(int *)(v6 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v11 = *v9;
    v10 = v9[1];
    *v8 = v11;
    v8[1] = v10;
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s13ConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A7DF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s13ConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A7DF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PrivateMLClient.Configuration(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573CFB98);
}

uint64_t sub_244A7DFA8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244A7DFDC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s13ConfigurationV9TransportOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_244AE3B64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
    v8 = *(int *)(v7 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v12 = *v10;
    v11 = v10[1];
    *v9 = v12;
    v9[1] = v11;
    *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s13ConfigurationVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  *(_QWORD *)(a1 + *(int *)(v5 + 24)) = *(_QWORD *)(a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v4 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v5 + 24)) = *(_QWORD *)(a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  *(_QWORD *)(a1 + *(int *)(v5 + 24)) = *(_QWORD *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t _s13ConfigurationVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v5 + 24)) = *(_QWORD *)(a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV9TransportOwet()
{
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s13ConfigurationV9TransportOwst()
{
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A7E3E0()
{
  return 0;
}

uint64_t sub_244A7E3E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *_s13ConfigurationV9TransportO27PrivateComputeConfigurationVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3B64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s13ConfigurationV9TransportO27PrivateComputeConfigurationVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationV9TransportO27PrivateComputeConfigurationVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationV9TransportO27PrivateComputeConfigurationVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV9TransportO27PrivateComputeConfigurationVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t _s13ConfigurationV9TransportO27PrivateComputeConfigurationVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_244AE3B64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV9TransportO27PrivateComputeConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_244AE3B64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s13ConfigurationV9TransportO27PrivateComputeConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244AE3B64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_244A7E84C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3B64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t static PrivateMLClient.errorDomain.getter()
{
  return 0xD000000000000019;
}

uint64_t PrivateMLClient.ErrorCode.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t PrivateMLClient.ErrorCode.rawValue.getter()
{
  return 1;
}

uint64_t sub_244A7E8FC()
{
  return 1;
}

uint64_t sub_244A7E904()
{
  sub_244AE4530();
  sub_244AE453C();
  return sub_244AE4548();
}

uint64_t sub_244A7E944()
{
  return sub_244AE453C();
}

uint64_t sub_244A7E968()
{
  sub_244AE4530();
  sub_244AE453C();
  return sub_244AE4548();
}

_QWORD *sub_244A7E9A4@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_244A7E9B8(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t PrivateMLClient.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PrivateMLClient.init(configuration:)(a1);
  return v2;
}

uint64_t *PrivateMLClient.init(configuration:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _UNKNOWN **v32;

  v29 = a1;
  v27 = *v1;
  v2 = sub_244AE4140();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - v8;
  v10 = type metadata accessor for PrivateMLClient.Configuration.Transport(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244AE41AC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244AE41A0();
  v17 = (char *)v1 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_logger;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))((uint64_t)v1 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_logger, v16, v13);
  v18 = (uint64_t)v1 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_configuration;
  sub_244A72964(v29, (uint64_t)v1 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_configuration, type metadata accessor for PrivateMLClient.Configuration);
  sub_244A72964(v18, (uint64_t)v12, type metadata accessor for PrivateMLClient.Configuration.Transport);
  sub_244A7ED04((uint64_t)v12, (uint64_t)v9);
  sub_244A72964((uint64_t)v9, (uint64_t)v7, type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration);
  v31 = type metadata accessor for PrivateCloudComputeTransport();
  v32 = &off_2515AE968;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
  v20 = v28;
  sub_244A73528((uint64_t)v7, (uint64_t)boxed_opaque_existential_1);
  if (v20)
  {
    sub_244A729C0(v29, type metadata accessor for PrivateMLClient.Configuration);
    sub_244A729C0((uint64_t)v9, type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration);
    __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v30);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    sub_244A729C0(v18, type metadata accessor for PrivateMLClient.Configuration);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_244A729C0((uint64_t)v9, type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration);
    sub_244A7EDB8(&v30, (uint64_t)v1 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v17, v13);
    v21 = v24;
    sub_244AE4128();
    sub_244A729C0(v29, type metadata accessor for PrivateMLClient.Configuration);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))((uint64_t)v1 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_signPoster, v21, v26);
  }
  return v1;
}

uint64_t sub_244A7ED04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x24951E31CLL);
  return result;
}

uint64_t sub_244A7EDB8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t PrivateMLClient.prewarm(requestIdentifier:workloadParameters:featureIdentifier:bundleIdentifierOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  v9 = sub_244AE414C();
  v8[13] = v9;
  v8[14] = *(_QWORD *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v10 = sub_244AE411C();
  v8[16] = v10;
  v8[17] = *(_QWORD *)(v10 - 8);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244A7EE80()
{
  _QWORD *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  os_signpost_id_t v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_signpost_type_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;

  v0[21] = OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_signPoster;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_244AE4110();
  v1 = sub_244AE4134();
  v2 = sub_244AE4380();
  if ((sub_244AE4398() & 1) != 0)
  {
    v29 = v0[17];
    v22 = v0[9];
    v23 = v0[8];
    v3 = v0[6];
    v26 = v2;
    v4 = v0[5];
    v24 = v0[19];
    v27 = v0[16];
    v28 = *(void (**)(void))(v29 + 16);
    v28();
    v5 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v30 = v25;
    *(_DWORD *)v5 = 136446722;
    swift_bridgeObjectRetain();
    v0[2] = sub_244A80950(v4, v3, &v30);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2082;
    swift_bridgeObjectRetain();
    v6 = sub_244AE41E8();
    v8 = v7;
    swift_bridgeObjectRelease();
    v0[3] = sub_244A80950(v6, v8, &v30);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 22) = 2082;
    swift_bridgeObjectRetain();
    v0[4] = sub_244A80950(v23, v22, &v30);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    v9 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v1, v26, v9, "prewarm", "requestIdentifier=%{public, signpost.description=attribute,public}s) workload=%{public, signpost.description=attribute,public}s) featureIdentifier=%{public, signpost.description=attribute,public}s)", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v25, -1, -1);
    MEMORY[0x24951E31C](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v24, v27);
    v10 = v28;
  }
  else
  {
    v11 = v0[17];

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v10 = *(void (**)(void))(v11 + 16);
  }
  v0[22] = v10;
  v12 = v0[20];
  v13 = v0[16];
  v14 = v0[17];
  v15 = v0[12];
  v17 = v0[6];
  v16 = v0[7];
  v18 = v0[5];
  ((void (*)(_QWORD, uint64_t, uint64_t))v10)(v0[19], v12, v13);
  sub_244AE417C();
  swift_allocObject();
  v0[23] = sub_244AE4170();
  v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[24] = v19;
  v19(v12, v13);
  v0[25] = sub_244A9B5A0(v18, v17, v16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v15 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport), *(_QWORD *)(v15 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport + 24));
  type metadata accessor for PrivateCloudComputeTransport();
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v20 = (_QWORD *)swift_task_alloc();
  v0[26] = v20;
  *v20 = v0;
  v20[1] = sub_244A7F260;
  return sub_244AE3B88();
}

uint64_t sub_244A7F260()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_244A7F2BC()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;

  v1 = (_QWORD *)(v0 + 144);
  v2 = sub_244AE4134();
  sub_244AE4164();
  v3 = sub_244AE4374();
  if ((sub_244AE4398() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    swift_retain();
    sub_244AE4188();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x24BEE7810])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 152);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
    v9 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 128);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 176))(*(_QWORD *)(v0 + 152), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v2, v3, v12, "prewarm", v7, v11, 2u);
    MEMORY[0x24951E31C](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 192))(*v1, *(_QWORD *)(v0 + 128));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrivateMLClient.preFetch(requestIdentifier:workloadParameters:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v5 = sub_244AE414C();
  v4[11] = v5;
  v4[12] = *(_QWORD *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v6 = sub_244AE411C();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244A7F548()
{
  _QWORD *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  os_signpost_id_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  os_signpost_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v0[21] = OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_signPoster;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_244AE4110();
  v1 = sub_244AE4134();
  v2 = sub_244AE4380();
  if ((sub_244AE4398() & 1) != 0)
  {
    v25 = v0[15];
    v26 = v0[16];
    v3 = v0[8];
    v24 = v2;
    v4 = v0[7];
    v22 = v0[19];
    v5 = *(void (**)(void))(v26 + 16);
    v5();
    v6 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v6 = 136446466;
    swift_bridgeObjectRetain();
    v0[5] = sub_244A80950(v4, v3, &v27);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    v7 = sub_244AE41E8();
    v9 = v8;
    swift_bridgeObjectRelease();
    v0[6] = sub_244A80950(v7, v9, &v27);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v10 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v1, v24, v10, "preFetch", "requestIdentifier=%{public, signpost.description=attribute,public}s) workload=%{public, signpost.description=attribute,public}s)", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v23, -1, -1);
    MEMORY[0x24951E31C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v25);
  }
  else
  {
    v11 = v0[16];

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v5 = *(void (**)(void))(v11 + 16);
  }
  v0[22] = v5;
  v12 = v0[20];
  v13 = v0[15];
  v14 = v0[16];
  v15 = v0[9];
  v16 = v0[10];
  v18 = v0[7];
  v17 = v0[8];
  ((void (*)(_QWORD, uint64_t, uint64_t))v5)(v0[19], v12, v13);
  sub_244AE417C();
  swift_allocObject();
  v0[23] = sub_244AE4170();
  v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[24] = v19;
  v19(v12, v13);
  v0[25] = sub_244A9B5A0(v18, v17, v15);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v16 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport), *(_QWORD *)(v16 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport + 24));
  type metadata accessor for PrivateCloudComputeTransport();
  type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(0);
  v20 = (_QWORD *)swift_task_alloc();
  v0[26] = v20;
  *v20 = v0;
  v20[1] = sub_244A7F894;
  return sub_244AE3B7C();
}

uint64_t sub_244A7F894(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = v1;
  *(_BYTE *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244A7F904()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;
  uint64_t v13;

  v1 = (_QWORD *)(v0 + 144);
  swift_bridgeObjectRelease();
  v2 = sub_244AE4134();
  sub_244AE4164();
  v3 = sub_244AE4374();
  if ((sub_244AE4398() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);
    swift_retain();
    sub_244AE4188();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5) == *MEMORY[0x24BEE7810])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 152);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
    v9 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 176))(*(_QWORD *)(v0 + 152), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v2, v3, v12, "preFetch", v7, v11, 2u);
    MEMORY[0x24951E31C](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  v13 = *(unsigned __int8 *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(v0 + 192))(*v1, *(_QWORD *)(v0 + 120));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

uint64_t sub_244A7FAF4()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;

  v1 = (_QWORD *)(v0 + 136);
  swift_bridgeObjectRelease();
  v2 = sub_244AE4134();
  sub_244AE4164();
  v3 = sub_244AE4374();
  if ((sub_244AE4398() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 88);
    swift_retain();
    sub_244AE4188();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x24BEE7810])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 152);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 176))(*(_QWORD *)(v0 + 152), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v2, v3, v12, "preFetch", v7, v11, 2u);
    MEMORY[0x24951E31C](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 192))(*v1, *(_QWORD *)(v0 + 120));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t PrivateMLClient.withPrivateMLRequest<A>(request:prompt:delimiters:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9[11] = a8;
  v9[12] = v8;
  v9[9] = a6;
  v9[10] = a7;
  v9[7] = a4;
  v9[8] = a5;
  v9[5] = a2;
  v9[6] = a3;
  v9[4] = a1;
  v10 = sub_244AE414C();
  v9[13] = v10;
  v9[14] = *(_QWORD *)(v10 - 8);
  v9[15] = swift_task_alloc();
  v9[16] = swift_task_alloc();
  v11 = sub_244AE411C();
  v9[17] = v11;
  v9[18] = *(_QWORD *)(v11 - 8);
  v9[19] = swift_task_alloc();
  v9[20] = swift_task_alloc();
  v9[21] = swift_task_alloc();
  v9[22] = swift_task_alloc();
  type metadata accessor for PrivateMLRequest(0);
  v9[23] = swift_task_alloc();
  v9[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244A7FDE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_signpost_type_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD);
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  os_signpost_id_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  os_signpost_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0[24];
  v2 = v0[5];
  v0[25] = OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_signPoster;
  sub_244A72964(v2, v1, type metadata accessor for PrivateMLRequest);
  sub_244AE4110();
  v3 = sub_244AE4134();
  v4 = sub_244AE4380();
  v5 = sub_244AE4398();
  v6 = v0[24];
  if ((v5 & 1) != 0)
  {
    v31 = v4;
    v7 = v0[21];
    v32 = v0[17];
    v33 = v0[18];
    v8 = *(void (**)(uint64_t, _QWORD))(v33 + 16);
    v8(v7, v0[22]);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v34 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_244AE3B34();
    v0[3] = sub_244A80950(v11, v12, &v34);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v6, type metadata accessor for PrivateMLRequest);
    v13 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v3, v31, v13, "Execute PrivateML Request", "requestIdentifier=%{public, signpost.description=attribute,public}s)", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v10, -1, -1);
    MEMORY[0x24951E31C](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v7, v32);
  }
  else
  {
    v14 = v0[18];

    sub_244A729C0(v6, type metadata accessor for PrivateMLRequest);
    v8 = *(void (**)(uint64_t, _QWORD))(v14 + 16);
  }
  v0[26] = v8;
  v16 = v0[22];
  v15 = v0[23];
  v17 = v0[17];
  v18 = v0[18];
  v19 = v0[5];
  ((void (*)(_QWORD, uint64_t, uint64_t))v8)(v0[21], v16, v17);
  sub_244AE417C();
  swift_allocObject();
  v0[27] = sub_244AE4170();
  v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[28] = v20;
  v20(v16, v17);
  sub_244A72964(v19, v15, type metadata accessor for PrivateMLRequest);
  v21 = sub_244AE4194();
  v22 = sub_244AE4368();
  v23 = os_log_type_enabled(v21, v22);
  v24 = v0[23];
  if (v23)
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v34 = v26;
    *(_DWORD *)v25 = 136315138;
    sub_244AE3B4C();
    sub_244A80F70();
    v27 = sub_244AE44C4();
    v0[2] = sub_244A80950(v27, v28, &v34);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v24, type metadata accessor for PrivateMLRequest);
    _os_log_impl(&dword_244A6B000, v21, v22, "%s starting private ML request", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v26, -1, -1);
    MEMORY[0x24951E31C](v25, -1, -1);

  }
  else
  {

    sub_244A729C0(v24, type metadata accessor for PrivateMLRequest);
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[12] + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport), *(_QWORD *)(v0[12] + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport + 24));
  v29 = (_QWORD *)swift_task_alloc();
  v0[29] = v29;
  *v29 = v0;
  v29[1] = sub_244A801D4;
  return sub_244A739F0(v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
}

uint64_t sub_244A801D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244A80238()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;

  v1 = (_QWORD *)(v0 + 160);
  v2 = sub_244AE4134();
  sub_244AE4164();
  v3 = sub_244AE4374();
  if ((sub_244AE4398() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    swift_retain();
    sub_244AE4188();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5) == *MEMORY[0x24BEE7810])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 168);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 208))(*(_QWORD *)(v0 + 168), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v2, v3, v12, "Execute PrivateML Request", v7, v11, 2u);
    MEMORY[0x24951E31C](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 224))(*v1, *(_QWORD *)(v0 + 136));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A8042C()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;

  v1 = (_QWORD *)(v0 + 152);
  v2 = sub_244AE4134();
  sub_244AE4164();
  v3 = sub_244AE4374();
  if ((sub_244AE4398() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    swift_retain();
    sub_244AE4188();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x24BEE7810])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 168);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 208))(*(_QWORD *)(v0 + 168), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_244AE4104();
    _os_signpost_emit_with_name_impl(&dword_244A6B000, v2, v3, v12, "Execute PrivateML Request", v7, v11, 2u);
    MEMORY[0x24951E31C](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 224))(*v1, *(_QWORD *)(v0 + 136));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrivateMLClient.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_logger;
  v2 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_signPoster;
  v4 = sub_244AE4140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_244A729C0(v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_configuration, type metadata accessor for PrivateMLClient.Configuration);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport);
  return v0;
}

uint64_t PrivateMLClient.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_logger;
  v2 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_signPoster;
  v4 = sub_244AE4140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_244A729C0(v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_configuration, type metadata accessor for PrivateMLClient.Configuration);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC15PrivateMLClient15PrivateMLClient_transport);
  return swift_deallocClassInstance();
}

uint64_t sub_244A80754@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

void sub_244A80764(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_244AE4104();
  _os_signpost_emit_with_name_impl(&dword_244A6B000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_244A807E4(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_244A807F4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_244A80828(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_244AE3B4C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_244A80F70();
  v7 = sub_244AE44C4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

_BYTE **sub_244A808D0(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_244A808E0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_244A80950(v6, v7, a3);
  v8 = *a1 + 8;
  sub_244AE43B0();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_244A80950(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_244A80A20(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_244A81228((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_244A81228((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_244A80A20(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_244AE43BC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_244A80BD8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_244AE4404();
  if (!v8)
  {
    sub_244AE4410();
    __break(1u);
LABEL_17:
    result = sub_244AE444C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_244A80BD8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_244A80C6C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_244A80DE0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_244A80DE0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_244A80C6C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_244A7C378(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_244AE43F8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_244AE4410();
      __break(1u);
LABEL_10:
      v2 = sub_244AE4278();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_244AE444C();
    __break(1u);
LABEL_14:
    result = sub_244AE4410();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_244A80DE0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_244AE444C();
  __break(1u);
  return result;
}

uint64_t sub_244A80F2C(uint64_t (*a1)(void))
{
  return a1();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_244A80F70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2573CFAB8;
  if (!qword_2573CFAB8)
  {
    v1 = sub_244AE3B4C();
    result = MEMORY[0x24951E280](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_2573CFAB8);
  }
  return result;
}

unint64_t sub_244A80FBC()
{
  unint64_t result;

  result = qword_2573CFD20;
  if (!qword_2573CFD20)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for PrivateMLClient.ErrorCode, &type metadata for PrivateMLClient.ErrorCode);
    atomic_store(result, (unint64_t *)&qword_2573CFD20);
  }
  return result;
}

uint64_t sub_244A81000()
{
  return type metadata accessor for PrivateMLClient();
}

uint64_t type metadata accessor for PrivateMLClient()
{
  uint64_t result;

  result = qword_2573CFD50;
  if (!qword_2573CFD50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244A81044()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_244AE41AC();
  if (v1 <= 0x3F)
  {
    result = sub_244AE4140();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for PrivateMLClient.Configuration.Transport.PrivateComputeConfiguration(319);
      if (v3 <= 0x3F)
      {
        result = swift_updateClassMetadata2();
        if (!result)
          return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for PrivateMLClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PrivateMLClient.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t getEnumTagSinglePayload for PrivateMLClient.ErrorCode(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for PrivateMLClient.ErrorCode(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_244A811AC + 4 * byte_244AE4B10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_244A811CC + 4 * byte_244AE4B15[v4]))();
}

_BYTE *sub_244A811AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_244A811CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244A811D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244A811DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244A811E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244A811EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLClient.ErrorCode()
{
  return &type metadata for PrivateMLClient.ErrorCode;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_244A81228(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_244A81264(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244A807F4(a1, a2, a3, a4);
}

uint64_t sub_244A81278@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);

  v28 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
  v4 = MEMORY[0x24BDAC7A8](v28);
  v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v26 - v6);
  v27 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
  v8 = MEMORY[0x24BDAC7A8](v27);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v26 - v11);
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v26 - v17);
  v19 = a1[1];
  v30 = *a1;
  v20 = *((unsigned __int8 *)a1 + 16);
  v21 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v31(a2, 1, 1, v21);
  type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  sub_244AE3C00();
  if (v20)
  {
    if (v20 == 1)
    {
      *v18 = 0;
      v18[1] = 0;
      swift_bridgeObjectRetain();
      sub_244AE3C00();
      *v18 = v30;
      v18[1] = v19;
      sub_244A72964((uint64_t)v18, (uint64_t)v16, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
      sub_244A815B8(a2);
      sub_244A729FC((uint64_t)v16, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
      swift_storeEnumTagMultiPayload();
      v31(a2, 0, 1, v21);
      v22 = (uint64_t)v18;
      v23 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar;
    }
    else
    {
      *v7 = 0;
      v7[1] = 0;
      swift_bridgeObjectRetain();
      sub_244AE3C00();
      v24 = (uint64_t)v29;
      *v7 = v30;
      v7[1] = v19;
      sub_244A72964((uint64_t)v7, v24, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
      sub_244A815B8(a2);
      sub_244A729FC(v24, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
      swift_storeEnumTagMultiPayload();
      v31(a2, 0, 1, v21);
      v22 = (uint64_t)v7;
      v23 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar;
    }
  }
  else
  {
    *v12 = 0;
    v12[1] = 0;
    swift_bridgeObjectRetain();
    sub_244AE3C00();
    *v12 = v30;
    v12[1] = v19;
    sub_244A72964((uint64_t)v12, (uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
    sub_244A815B8(a2);
    sub_244A729FC((uint64_t)v10, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
    swift_storeEnumTagMultiPayload();
    v31(a2, 0, 1, v21);
    v22 = (uint64_t)v12;
    v23 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema;
  }
  return sub_244A729C0(v22, v23);
}

uint64_t sub_244A815B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PrivateMLClientModelOptions.init(modelName:modelAdaptorName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a4;
  v26 = a2;
  v7 = sub_244AE3B4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(a5 + 96) = 0;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_BYTE *)(a5 + 100) = 1;
  *(_QWORD *)(a5 + 104) = 0;
  *(_BYTE *)(a5 + 112) = -1;
  *(_DWORD *)(a5 + 116) = 0;
  *(_BYTE *)(a5 + 120) = 1;
  *(_DWORD *)(a5 + 124) = 0;
  *(_BYTE *)(a5 + 128) = 1;
  *(_DWORD *)(a5 + 132) = 0;
  *(_BYTE *)(a5 + 136) = 1;
  *(_DWORD *)(a5 + 140) = 0;
  *(_BYTE *)(a5 + 144) = 1;
  *(_DWORD *)(a5 + 148) = 0;
  *(_BYTE *)(a5 + 152) = 1;
  *(_QWORD *)(a5 + 160) = 0;
  *(_BYTE *)(a5 + 168) = 1;
  v11 = (int *)type metadata accessor for PrivateMLClientModelOptions();
  v12 = a5 + v11[18];
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v13(v12, 1, 1, v7);
  v14 = a5 + v11[19];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  *(_QWORD *)(a5 + v11[20]) = 0;
  *(_OWORD *)(a5 + v11[21]) = xmmword_244AE4A00;
  v15 = a5 + v11[22];
  v16 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (_QWORD *)(a5 + v11[23]);
  *v17 = 0;
  v17[1] = 0;
  v18 = a5 + v11[24];
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = 1;
  v19 = (_QWORD *)(a5 + v11[25]);
  *v19 = 0;
  v19[1] = 0;
  v20 = a5 + v11[26];
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  v21 = a5 + v11[27];
  *(_QWORD *)v21 = 0;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = -1;
  v22 = v26;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = v22;
  v23 = v28;
  *(_QWORD *)(a5 + 16) = v27;
  *(_QWORD *)(a5 + 24) = v23;
  sub_244AE3B40();
  sub_244A72890(v12, &qword_2573CF9C0);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v10, v7);
  v13(v12, 0, 1, v7);
  result = swift_bridgeObjectRelease();
  *v17 = 0xD000000000000032;
  v17[1] = 0x8000000244AE9A30;
  return result;
}

uint64_t type metadata accessor for PrivateMLClientModelOptions()
{
  uint64_t result;

  result = qword_2573CFE58;
  if (!qword_2573CFE58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PrivateMLClientModelOptions.init(modelName:modelAdaptorName:modelDraftName:modelVersion:modelAdaptorVersion:modelDraftVersion:numberOfCompletions:samplingStrategy:temperature:maxTokens:logProbs:lengthPenalty:frequencyPenalty:randomSeed:sessionID:timeout:stopSequences:metaData:taskPriority:tokenizerName:onBehalfOfPID:useCaseIdentifier:inputTokenSize:tmlConstraints:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, float a12@<S2>, double a13@<D3>, __int128 a14, uint64_t a15, uint64_t a16, int a17, uint64_t *a18, int a19, int a20,uint64_t a21,unsigned __int8 a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t *a34)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  void (*v48)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _BYTE v84[4];
  int v85;
  uint64_t v86;
  void (*v87)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  int v94;
  _QWORD *v95;
  void (*v96)(void);
  int v97;
  uint64_t v98;
  int v99;
  _BYTE *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v108 = a8;
  v107 = a7;
  v106 = a6;
  v105 = a5;
  v104 = a4;
  v103 = a3;
  v102 = a2;
  v98 = a1;
  v121 = a31;
  v122 = a32;
  v117 = a29;
  v118 = a30;
  v116 = a28;
  v124 = a26;
  v125 = a27;
  v123 = a25;
  v109 = a24;
  v127 = a23;
  v101 = a22;
  v99 = a20;
  v97 = a19;
  v94 = a17;
  v91 = a16;
  v90 = a15;
  v89 = a14;
  v114 = a33;
  v39 = sub_244AE4314();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v110 = &v84[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = sub_244AE3B4C();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v100 = &v84[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = *a18;
  v85 = *((unsigned __int8 *)a18 + 8);
  v45 = *a34;
  v112 = a34[1];
  v113 = v45;
  v111 = *((unsigned __int8 *)a34 + 16);
  *(_OWORD *)a9 = 0u;
  *(_OWORD *)(a9 + 16) = 0u;
  *(_OWORD *)(a9 + 32) = 0u;
  *(_OWORD *)(a9 + 48) = 0u;
  *(_OWORD *)(a9 + 64) = 0u;
  *(_OWORD *)(a9 + 80) = 0u;
  *(_DWORD *)(a9 + 96) = 0;
  *(_BYTE *)(a9 + 100) = 1;
  *(_QWORD *)(a9 + 104) = 0;
  *(_BYTE *)(a9 + 112) = -1;
  *(_DWORD *)(a9 + 116) = 0;
  *(_BYTE *)(a9 + 120) = 1;
  *(_DWORD *)(a9 + 124) = 0;
  *(_BYTE *)(a9 + 128) = 1;
  *(_DWORD *)(a9 + 132) = 0;
  *(_BYTE *)(a9 + 136) = 1;
  *(_DWORD *)(a9 + 140) = 0;
  *(_BYTE *)(a9 + 144) = 1;
  *(_DWORD *)(a9 + 148) = 0;
  *(_BYTE *)(a9 + 152) = 1;
  *(_QWORD *)(a9 + 160) = 0;
  *(_BYTE *)(a9 + 168) = 1;
  v46 = (int *)type metadata accessor for PrivateMLClientModelOptions();
  v47 = a9 + v46[18];
  v126 = v43;
  v48 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56);
  v115 = v42;
  v87 = v48;
  v48(v47, 1, 1, v42);
  v49 = a9 + v46[19];
  *(_QWORD *)v49 = 0;
  *(_BYTE *)(v49 + 8) = 1;
  v50 = v46[20];
  *(_QWORD *)(a9 + v50) = 0;
  v51 = a9 + v46[21];
  *(_OWORD *)v51 = xmmword_244AE4A00;
  v52 = a9 + v46[22];
  v119 = v40;
  v53 = *(void (**)(void))(v40 + 56);
  v88 = v52;
  v120 = v39;
  v96 = v53;
  v53();
  v54 = (_QWORD *)(a9 + v46[23]);
  *v54 = 0;
  v54[1] = 0;
  v95 = v54;
  v55 = a9 + v46[24];
  *(_QWORD *)v55 = 0;
  v93 = (_QWORD *)v55;
  *(_BYTE *)(v55 + 8) = 1;
  v56 = (_QWORD *)(a9 + v46[25]);
  *v56 = 0;
  v56[1] = 0;
  v57 = a9 + v46[26];
  *(_QWORD *)v57 = 0;
  v92 = (_QWORD *)v57;
  *(_BYTE *)(v57 + 8) = 1;
  v58 = a9 + v46[27];
  *(_QWORD *)v58 = 0;
  *(_QWORD *)(v58 + 8) = 0;
  *(_BYTE *)(v58 + 16) = -1;
  v59 = v102;
  *(_QWORD *)a9 = v98;
  *(_QWORD *)(a9 + 8) = v59;
  v60 = v104;
  *(_QWORD *)(a9 + 16) = v103;
  *(_QWORD *)(a9 + 24) = v60;
  v61 = v106;
  *(_QWORD *)(a9 + 32) = v105;
  *(_QWORD *)(a9 + 40) = v61;
  v62 = v108;
  *(_QWORD *)(a9 + 48) = v107;
  *(_QWORD *)(a9 + 56) = v62;
  *(_OWORD *)(a9 + 64) = v89;
  v63 = v91;
  *(_QWORD *)(a9 + 80) = v90;
  *(_QWORD *)(a9 + 88) = v63;
  *(_DWORD *)(a9 + 96) = v94;
  *(_BYTE *)(a9 + 100) = 0;
  *(_QWORD *)(a9 + 104) = v86;
  *(_BYTE *)(a9 + 112) = v85;
  *(float *)(a9 + 116) = a10;
  *(_BYTE *)(a9 + 120) = 0;
  *(_DWORD *)(a9 + 124) = v97;
  *(_BYTE *)(a9 + 128) = 0;
  *(_DWORD *)(a9 + 132) = v99;
  *(_BYTE *)(a9 + 136) = 0;
  *(float *)(a9 + 140) = a11;
  *(_BYTE *)(a9 + 144) = 0;
  *(float *)(a9 + 148) = a12;
  *(_BYTE *)(a9 + 152) = 0;
  if ((v101 & 1) != 0)
  {
    v128 = 0;
    MEMORY[0x24951E328](&v128, 8);
    a21 = v128;
  }
  *(_QWORD *)(a9 + 160) = a21;
  *(_BYTE *)(a9 + 168) = 0;
  v65 = v126;
  v66 = v100;
  v67 = v115;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v126 + 16))(v100, v127, v115);
  sub_244A72890(v47, &qword_2573CF9C0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v65 + 32))(v47, v66, v67);
  v87(v47, 0, 1, v67);
  *(double *)v49 = a13;
  *(_BYTE *)(v49 + 8) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v50) = v109;
  v68 = *(_QWORD *)v51;
  v69 = *(_QWORD *)(v51 + 8);
  v71 = v123;
  v70 = v124;
  sub_244A81E68(v123, v124);
  sub_244A81EAC(v68, v69);
  *(_QWORD *)v51 = v71;
  *(_QWORD *)(v51 + 8) = v70;
  v73 = v119;
  v72 = v120;
  v74 = v110;
  v75 = v125;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v119 + 16))(v110, v125, v120);
  v76 = v88;
  sub_244A72890(v88, &qword_2573CFDF8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v73 + 32))(v76, v74, v72);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v96)(v76, 0, 1, v72);
  v77 = v95;
  swift_bridgeObjectRelease();
  v78 = v117;
  *v77 = v116;
  v77[1] = v78;
  v79 = v93;
  *v93 = v118;
  *((_BYTE *)v79 + 8) = 0;
  swift_bridgeObjectRelease();
  v80 = v122;
  *v56 = v121;
  v56[1] = v80;
  v81 = v92;
  *v92 = v114;
  *((_BYTE *)v81 + 8) = 0;
  sub_244A81EC0(*(_QWORD *)v58, *(_QWORD *)(v58 + 8), *(_BYTE *)(v58 + 16));
  sub_244A7D674(v71, v70);
  v82 = v112;
  *(_QWORD *)v58 = v113;
  *(_QWORD *)(v58 + 8) = v82;
  *(_BYTE *)(v58 + 16) = v111;
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v75, v72);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8))(v127, v67);
}

uint64_t sub_244A81E68(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_244A81EAC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_244A7D674(a1, a2);
  return a1;
}

uint64_t sub_244A81EC0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_244A81ED4(a1, a2, a3);
  return a1;
}

uint64_t sub_244A81ED4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PrivateMLClientModelOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _OWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v12 = a2[10];
    v13 = a2[11];
    *(_BYTE *)(a1 + 100) = *((_BYTE *)a2 + 100);
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_DWORD *)(a1 + 116) = *((_DWORD *)a2 + 29);
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    LODWORD(v9) = *((_DWORD *)a2 + 31);
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    *(_DWORD *)(a1 + 124) = v9;
    LODWORD(v9) = *((_DWORD *)a2 + 33);
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_DWORD *)(a1 + 132) = v9;
    LODWORD(v9) = *((_DWORD *)a2 + 35);
    *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
    *(_DWORD *)(a1 + 140) = v9;
    LODWORD(v9) = *((_DWORD *)a2 + 37);
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    *(_DWORD *)(a1 + 148) = v9;
    v14 = a2[20];
    *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
    *(_QWORD *)(a1 + 160) = v14;
    v15 = a3[18];
    __dst = (void *)(a1 + v15);
    v16 = (char *)a2 + v15;
    *(_QWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 88) = v13;
    v17 = sub_244AE3B4C();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    v22 = a3[19];
    v23 = a3[20];
    v24 = (char *)v4 + v22;
    v25 = (uint64_t)a2 + v22;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = *(_BYTE *)(v25 + 8);
    *(_QWORD *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    v26 = a3[21];
    v27 = (char *)v4 + v26;
    v28 = (_OWORD *)((char *)a2 + v26);
    v29 = *(uint64_t *)((char *)a2 + v26 + 8);
    swift_bridgeObjectRetain();
    if (v29 >> 60 == 15)
    {
      *(_OWORD *)v27 = *v28;
    }
    else
    {
      v30 = *(_QWORD *)v28;
      sub_244A81E68(v30, v29);
      *(_QWORD *)v27 = v30;
      *((_QWORD *)v27 + 1) = v29;
    }
    v31 = a3[22];
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_244AE4314();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = a3[23];
    v38 = a3[24];
    v39 = (_QWORD *)((char *)v4 + v37);
    v40 = (uint64_t *)((char *)a2 + v37);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = (char *)v4 + v38;
    v43 = (uint64_t)a2 + v38;
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = *(_BYTE *)(v43 + 8);
    v44 = a3[25];
    v45 = a3[26];
    v46 = (_QWORD *)((char *)v4 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = (char *)v4 + v45;
    v50 = (uint64_t)a2 + v45;
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = *(_BYTE *)(v50 + 8);
    v51 = a3[27];
    v52 = (char *)v4 + v51;
    v53 = (uint64_t *)((char *)a2 + v51);
    v54 = *((unsigned __int8 *)a2 + v51 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v54 == 255)
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
      v52[16] = *((_BYTE *)v53 + 16);
    }
    else
    {
      v55 = *v53;
      v56 = v53[1];
      sub_244A82274(*v53, v56, v54);
      *(_QWORD *)v52 = v55;
      *((_QWORD *)v52 + 1) = v56;
      v52[16] = v54;
    }
  }
  return v4;
}

uint64_t sub_244A82274(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for PrivateMLClientModelOptions(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int v14;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[18];
  v5 = sub_244AE3B4C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v7 = (uint64_t *)(a1 + a2[21]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_244A7D674(*v7, v8);
  v9 = a1 + a2[22];
  v10 = sub_244AE4314();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v13 = a1 + a2[27];
  v14 = *(unsigned __int8 *)(v13 + 16);
  if (v14 != 255)
    return sub_244A81ED4(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), v14);
  return result;
}

uint64_t initializeWithCopy for PrivateMLClientModelOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  LODWORD(v8) = *(_DWORD *)(a2 + 124);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = v8;
  LODWORD(v8) = *(_DWORD *)(a2 + 132);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 132) = v8;
  LODWORD(v8) = *(_DWORD *)(a2 + 140);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_DWORD *)(a1 + 140) = v8;
  LODWORD(v8) = *(_DWORD *)(a2 + 148);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v8;
  v13 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v13;
  v14 = a3[18];
  __dst = (void *)(a1 + v14);
  v15 = (const void *)(a2 + v14);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  v16 = sub_244AE3B4C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  v20 = a3[19];
  v21 = a3[20];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v24 = a3[21];
  v25 = a1 + v24;
  v26 = (_OWORD *)(a2 + v24);
  v27 = *(_QWORD *)(a2 + v24 + 8);
  swift_bridgeObjectRetain();
  if (v27 >> 60 == 15)
  {
    *(_OWORD *)v25 = *v26;
  }
  else
  {
    v28 = *(_QWORD *)v26;
    sub_244A81E68(v28, v27);
    *(_QWORD *)v25 = v28;
    *(_QWORD *)(v25 + 8) = v27;
  }
  v29 = a3[22];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = sub_244AE4314();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v35 = a3[23];
  v36 = a3[24];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = a1 + v36;
  v41 = a2 + v36;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  v42 = a3[25];
  v43 = a3[26];
  v44 = (_QWORD *)(a1 + v42);
  v45 = (_QWORD *)(a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = a1 + v43;
  v48 = a2 + v43;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  v49 = a3[27];
  v50 = a1 + v49;
  v51 = (uint64_t *)(a2 + v49);
  v52 = *(unsigned __int8 *)(a2 + v49 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v52 == 255)
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
    *(_BYTE *)(v50 + 16) = *((_BYTE *)v51 + 16);
  }
  else
  {
    v53 = *v51;
    v54 = v51[1];
    sub_244A82274(*v51, v54, v52);
    *(_QWORD *)v50 = v53;
    *(_QWORD *)(v50 + 8) = v54;
    *(_BYTE *)(v50 + 16) = v52;
  }
  return a1;
}

uint64_t assignWithCopy for PrivateMLClientModelOptions(uint64_t a1, uint64_t a2, int *a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __int128 v65;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 124);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 132);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 132) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 140);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_DWORD *)(a1 + 140) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 148);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v7;
  v8 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v8;
  v9 = a3[18];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_244AE3B4C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = a3[19];
  v19 = a1 + v18;
  v20 = (uint64_t *)(a2 + v18);
  v21 = *v20;
  *(_BYTE *)(v19 + 8) = *((_BYTE *)v20 + 8);
  *(_QWORD *)v19 = v21;
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[21];
  v23 = (uint64_t *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = *(_QWORD *)(a2 + v22 + 8);
  if (*(_QWORD *)(a1 + v22 + 8) >> 60 == 15)
  {
    if (v25 >> 60 != 15)
    {
      v26 = *v24;
      sub_244A81E68(v26, v25);
      *v23 = v26;
      v23[1] = v25;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v25 >> 60 == 15)
  {
    sub_244A82C44((uint64_t)v23);
LABEL_12:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    goto LABEL_14;
  }
  v27 = *v24;
  sub_244A81E68(v27, v25);
  v28 = *v23;
  v29 = v23[1];
  *v23 = v27;
  v23[1] = v25;
  sub_244A7D674(v28, v29);
LABEL_14:
  v30 = a3[22];
  v31 = (void *)(a1 + v30);
  v32 = (void *)(a2 + v30);
  v33 = sub_244AE4314();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
LABEL_19:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v34 + 24))(v31, v32, v33);
LABEL_20:
  v39 = a3[23];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[24];
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  *(_BYTE *)(v43 + 8) = *((_BYTE *)v44 + 8);
  *(_QWORD *)v43 = v45;
  v46 = a3[25];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = a3[26];
  v50 = a1 + v49;
  v51 = (uint64_t *)(a2 + v49);
  v52 = *v51;
  *(_BYTE *)(v50 + 8) = *((_BYTE *)v51 + 8);
  *(_QWORD *)v50 = v52;
  v53 = a3[27];
  v54 = a1 + v53;
  v55 = (__int128 *)(a2 + v53);
  v56 = *(unsigned __int8 *)(a2 + v53 + 16);
  if (*(unsigned __int8 *)(a1 + v53 + 16) == 255)
  {
    if (v56 == 255)
    {
      v65 = *v55;
      *(_BYTE *)(v54 + 16) = *((_BYTE *)v55 + 16);
      *(_OWORD *)v54 = v65;
    }
    else
    {
      v62 = *(_QWORD *)v55;
      v63 = *((_QWORD *)v55 + 1);
      sub_244A82274(v62, v63, v56);
      *(_QWORD *)v54 = v62;
      *(_QWORD *)(v54 + 8) = v63;
      *(_BYTE *)(v54 + 16) = v56;
    }
  }
  else if (v56 == 255)
  {
    sub_244A82C78(v54);
    v64 = *((_BYTE *)v55 + 16);
    *(_OWORD *)v54 = *v55;
    *(_BYTE *)(v54 + 16) = v64;
  }
  else
  {
    v57 = *(_QWORD *)v55;
    v58 = *((_QWORD *)v55 + 1);
    sub_244A82274(v57, v58, v56);
    v59 = *(_QWORD *)v54;
    v60 = *(_QWORD *)(v54 + 8);
    *(_QWORD *)v54 = v57;
    *(_QWORD *)(v54 + 8) = v58;
    v61 = *(_BYTE *)(v54 + 16);
    *(_BYTE *)(v54 + 16) = v56;
    sub_244A81ED4(v59, v60, v61);
  }
  return a1;
}

uint64_t sub_244A82C44(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t sub_244A82C78(uint64_t a1)
{
  sub_244A81ED4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t initializeWithTake for PrivateMLClientModelOptions(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v10;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  LODWORD(v10) = *(_DWORD *)(a2 + 148);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v10;
  v11 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v11;
  v12 = a3[18];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  v15 = sub_244AE3B4C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[19];
  v19 = a3[20];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v22 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_244AE4314();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  v34 = a3[27];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  return a1;
}

uint64_t assignWithTake for PrivateMLClientModelOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  v12 = *(_DWORD *)(a2 + 132);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 132) = v12;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v13 = a3[18];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = sub_244AE3B4C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  v22 = a3[19];
  v23 = a3[20];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease();
  v26 = a3[21];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a1 + v26 + 8);
  if (v29 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    goto LABEL_12;
  }
  v30 = *(_QWORD *)(v28 + 8);
  if (v30 >> 60 == 15)
  {
    sub_244A82C44(v27);
    goto LABEL_10;
  }
  v31 = *(_QWORD *)v27;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v30;
  sub_244A7D674(v31, v29);
LABEL_12:
  v32 = a3[22];
  v33 = (void *)(a1 + v32);
  v34 = (void *)(a2 + v32);
  v35 = sub_244AE4314();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v36 + 8))(v33, v35);
LABEL_17:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v36 + 40))(v33, v34, v35);
LABEL_18:
  v41 = a3[23];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = a3[24];
  v47 = a3[25];
  v48 = a1 + v46;
  v49 = a2 + v46;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  v50 = (_QWORD *)(a1 + v47);
  v51 = (uint64_t *)(a2 + v47);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[26];
  v55 = a3[27];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  *(_QWORD *)v56 = *(_QWORD *)v57;
  v58 = a1 + v55;
  v59 = a2 + v55;
  v60 = *(unsigned __int8 *)(a1 + v55 + 16);
  if (v60 == 255)
  {
LABEL_22:
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
    return a1;
  }
  v61 = *(unsigned __int8 *)(v59 + 16);
  if (v61 == 255)
  {
    sub_244A82C78(a1 + v55);
    goto LABEL_22;
  }
  v62 = *(_QWORD *)v58;
  v63 = *(_QWORD *)(v58 + 8);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = v61;
  sub_244A81ED4(v62, v63, v60);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLClientModelOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A83314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 72);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF8);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 88);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for PrivateMLClientModelOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A833D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 72);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 88);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_244A83478()
{
  unint64_t v0;
  unint64_t v1;

  sub_244A83584(319, &qword_2573CFE68, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, qword_2573CFE70, (void (*)(uint64_t))MEMORY[0x24BEE6990]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_244A83584(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_244AE43A4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PrivateMLClientModelOptions.SamplingStrategy(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateMLClientModelOptions.SamplingStrategy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_244A83670(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_244A83688(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLClientModelOptions.SamplingStrategy()
{
  return &type metadata for PrivateMLClientModelOptions.SamplingStrategy;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLClientModelOptions.TMLSchema()
{
  return &type metadata for PrivateMLClientModelOptions.TMLSchema;
}

_QWORD *initializeBufferWithCopyOfBuffer for PrivateMLClientModelOptions.TMLGrammar(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrivateMLClientModelOptions.TMLGrammar()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithTake for PrivateMLClientModelOptions.TMLGrammar(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PrivateMLClientModelOptions.TMLGrammar()
{
  return &type metadata for PrivateMLClientModelOptions.TMLGrammar;
}

_QWORD *_s15PrivateMLClient27PrivateMLClientModelOptionsV9TMLSchemaOwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15PrivateMLClient27PrivateMLClientModelOptionsV9TMLSchemaOwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_244A837D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLClientModelOptions.TMLPartialGrammar()
{
  return &type metadata for PrivateMLClientModelOptions.TMLPartialGrammar;
}

uint64_t destroy for PrivateMLClientModelOptions.TMLConstraints(uint64_t a1)
{
  return sub_244A81ED4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15PrivateMLClient27PrivateMLClientModelOptionsV14TMLConstraintsOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_244A82274(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PrivateMLClientModelOptions.TMLConstraints(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_244A82274(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_244A81ED4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PrivateMLClientModelOptions.TMLConstraints(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_244A81ED4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLClientModelOptions.TMLConstraints(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateMLClientModelOptions.TMLConstraints(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_244A839B4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_244A839BC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLClientModelOptions.TMLConstraints()
{
  return &type metadata for PrivateMLClientModelOptions.TMLConstraints;
}

uint64_t sub_244A839E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a10 + 8) + *(_QWORD *)(a10 + 8));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v18;
  *v18 = v10;
  v18[1] = sub_244A7CC58;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_244A83AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_244A83B18;
  return v9(a1, a2, a3);
}

uint64_t sub_244A83B18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_244A83B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 24)
                                                                                              + *(_QWORD *)(a7 + 24));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_244A7CC58;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t PrivateMLClientErrorCode.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t PrivateMLClientErrorCode.rawValue.getter()
{
  return 1;
}

uint64_t PrivateMLClientError.code.getter()
{
  return 1;
}

uint64_t PrivateMLClientError.message.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_244AE423C();
}

unint64_t sub_244A83CA4()
{
  unint64_t result;

  result = qword_2573CFF10;
  if (!qword_2573CFF10)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for PrivateMLClientErrorCode, &type metadata for PrivateMLClientErrorCode);
    atomic_store(result, (unint64_t *)&qword_2573CFF10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PrivateMLClientErrorCode(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_244A83D28 + 4 * asc_244AE4DA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_244A83D48 + 4 * byte_244AE4DA5[v4]))();
}

_BYTE *sub_244A83D28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_244A83D48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244A83D50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244A83D58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244A83D60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244A83D68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLClientErrorCode()
{
  return &type metadata for PrivateMLClientErrorCode;
}

uint64_t dispatch thunk of PrivateMLClientError.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PrivateMLClientError.code.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PrivateMLClientError.message.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unint64_t sub_244A83D9C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB30);
  v2 = (_QWORD *)sub_244AE4440();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_244A93B08(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244A83EBC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D03B8);
  v2 = (_QWORD *)sub_244AE4440();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_244A93B08(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t PrivateMLRequest.Response.makeAsyncEventsIterator(transparencyReporter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_244A8B924(a1, type metadata accessor for PrivateMLRequest.Response.AsyncEventsIterator, a2);
}

uint64_t type metadata accessor for PrivateMLRequest(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0078);
}

uint64_t type metadata accessor for PrivateMLRequest.Response(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0180);
}

uint64_t sub_244A84010(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for PrivateMLRequest.Response.AsyncEventsIterator(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D02B8);
}

uint64_t PrivateMLRequest.Response.AsyncEventsIterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[252] = v1;
  v2[251] = a1;
  v2[253] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  v2[254] = swift_task_alloc();
  v2[255] = swift_task_alloc();
  v2[256] = swift_task_alloc();
  v2[257] = swift_task_alloc();
  v2[258] = swift_task_alloc();
  v2[259] = swift_task_alloc();
  v2[260] = swift_task_alloc();
  v2[261] = swift_task_alloc();
  v2[262] = swift_task_alloc();
  v2[263] = swift_task_alloc();
  v3 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  v2[264] = v3;
  v2[265] = *(_QWORD *)(v3 - 8);
  v2[266] = swift_task_alloc();
  v2[267] = swift_task_alloc();
  v2[268] = swift_task_alloc();
  v2[269] = swift_task_alloc();
  v2[270] = swift_task_alloc();
  v2[271] = swift_task_alloc();
  v2[272] = swift_task_alloc();
  v2[273] = swift_task_alloc();
  v2[274] = swift_task_alloc();
  v2[275] = swift_task_alloc();
  v2[276] = swift_task_alloc();
  v2[277] = swift_task_alloc();
  v2[278] = swift_task_alloc();
  v2[279] = swift_task_alloc();
  v2[280] = swift_task_alloc();
  v2[281] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E0);
  v2[282] = swift_task_alloc();
  v2[283] = swift_task_alloc();
  v2[284] = swift_task_alloc();
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v2[285] = v4;
  v2[286] = *(_QWORD *)(v4 - 8);
  v2[287] = swift_task_alloc();
  v2[288] = swift_task_alloc();
  v2[289] = swift_task_alloc();
  v2[290] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
  v2[291] = swift_task_alloc();
  v2[292] = swift_task_alloc();
  v2[293] = swift_task_alloc();
  v2[294] = swift_task_alloc();
  v2[295] = swift_task_alloc();
  v2[296] = swift_task_alloc();
  v2[297] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
  v2[298] = swift_task_alloc();
  v2[299] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  v2[300] = swift_task_alloc();
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v2[301] = v5;
  v2[302] = *(_QWORD *)(v5 - 8);
  v2[303] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
  v2[304] = swift_task_alloc();
  v2[305] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9D8);
  v2[306] = swift_task_alloc();
  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v2[307] = v6;
  v2[308] = *(_QWORD *)(v6 - 8);
  v2[309] = swift_task_alloc();
  v2[310] = swift_task_alloc();
  v2[311] = swift_task_alloc();
  v2[312] = swift_task_alloc();
  v2[313] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  v2[314] = swift_task_alloc();
  v2[315] = swift_task_alloc();
  v2[316] = swift_task_alloc();
  v2[317] = swift_task_alloc();
  v2[318] = swift_task_alloc();
  v2[319] = swift_task_alloc();
  v2[320] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0);
  v2[321] = swift_task_alloc();
  v2[322] = swift_task_alloc();
  v2[323] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  v2[324] = swift_task_alloc();
  sub_244AE3C24();
  v2[325] = swift_task_alloc();
  v2[326] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse(0);
  v2[327] = swift_task_alloc();
  v7 = sub_244AE41AC();
  v2[328] = v7;
  v2[329] = *(_QWORD *)(v7 - 8);
  v2[330] = swift_task_alloc();
  v2[331] = swift_task_alloc();
  v2[332] = swift_task_alloc();
  v2[333] = swift_task_alloc();
  v2[334] = swift_task_alloc();
  v2[335] = swift_task_alloc();
  v2[336] = swift_task_alloc();
  v2[337] = swift_task_alloc();
  v2[338] = swift_task_alloc();
  v2[339] = swift_task_alloc();
  v2[340] = swift_task_alloc();
  v2[341] = swift_task_alloc();
  v2[342] = swift_task_alloc();
  v2[343] = swift_task_alloc();
  v2[344] = swift_task_alloc();
  v2[345] = swift_task_alloc();
  v2[346] = swift_task_alloc();
  v2[347] = swift_task_alloc();
  v2[348] = swift_task_alloc();
  v2[349] = swift_task_alloc();
  v2[350] = swift_task_alloc();
  v8 = sub_244AE3B4C();
  v2[351] = v8;
  v2[352] = *(_QWORD *)(v8 - 8);
  v2[353] = swift_task_alloc();
  v2[354] = swift_task_alloc();
  v2[355] = swift_task_alloc();
  v2[356] = swift_task_alloc();
  v2[357] = swift_task_alloc();
  v2[358] = swift_task_alloc();
  v2[359] = swift_task_alloc();
  v2[360] = swift_task_alloc();
  v2[361] = swift_task_alloc();
  v2[362] = swift_task_alloc();
  v2[363] = swift_task_alloc();
  v2[364] = swift_task_alloc();
  v2[365] = swift_task_alloc();
  v2[366] = swift_task_alloc();
  v2[367] = swift_task_alloc();
  v2[368] = swift_task_alloc();
  v2[369] = swift_task_alloc();
  v2[370] = swift_task_alloc();
  v2[371] = swift_task_alloc();
  v2[372] = swift_task_alloc();
  v2[373] = swift_task_alloc();
  v2[374] = swift_task_alloc();
  v2[375] = swift_task_alloc();
  v2[376] = swift_task_alloc();
  v2[377] = swift_task_alloc();
  v2[378] = swift_task_alloc();
  v2[379] = swift_task_alloc();
  v2[380] = swift_task_alloc();
  v2[381] = swift_task_alloc();
  v2[382] = swift_task_alloc();
  v2[383] = swift_task_alloc();
  v2[384] = swift_task_alloc();
  v2[385] = swift_task_alloc();
  v2[386] = swift_task_alloc();
  v2[387] = swift_task_alloc();
  v2[388] = swift_task_alloc();
  v2[389] = swift_task_alloc();
  v2[390] = swift_task_alloc();
  v2[391] = swift_task_alloc();
  v2[392] = swift_task_alloc();
  v2[393] = swift_task_alloc();
  v2[394] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244A84870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 3152);
  v2 = *(_QWORD *)(v0 + 3144);
  v38 = *(_QWORD *)(v0 + 3136);
  v3 = *(_QWORD *)(v0 + 2816);
  v4 = *(_QWORD *)(v0 + 2808);
  v5 = *(_QWORD *)(v0 + 2800);
  v6 = *(_QWORD *)(v0 + 2632);
  v7 = *(_QWORD *)(v0 + 2624);
  v8 = *(_QWORD *)(v0 + 2016);
  v9 = type metadata accessor for PrivateMLRequest.Response.AsyncEventsIterator(0);
  *(_QWORD *)(v0 + 3160) = v9;
  v37 = v9;
  v10 = *(int *)(v9 + 20);
  *(_DWORD *)(v0 + 1716) = v10;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 3168) = v11;
  v11(v1, v8 + v10, v4);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v0 + 3176) = v12;
  v12(v5, v8, v7);
  v11(v2, v1, v4);
  v11(v38, v2, v4);
  v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 3184) = v13;
  v13(v2, v4);
  v14 = sub_244AE4194();
  v15 = sub_244AE4368();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 3136);
    v17 = *(_QWORD *)(v0 + 2808);
    v35 = *(_QWORD *)(v0 + 2800);
    v36 = *(_QWORD *)(v0 + 2632);
    v39 = *(_QWORD *)(v0 + 2624);
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v40 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_244AE44C4();
    *(_QWORD *)(v0 + 2000) = sub_244A80950(v20, v21, &v40);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v13(v16, v17);
    _os_log_impl(&dword_244A6B000, v14, v15, "%s waiting for next response data", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v19, -1, -1);
    MEMORY[0x24951E31C](v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v22(v35, v39);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 2800);
    v24 = *(_QWORD *)(v0 + 2632);
    v25 = *(_QWORD *)(v0 + 2624);
    v13(*(_QWORD *)(v0 + 3136), *(_QWORD *)(v0 + 2808));

    v22 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v22(v23, v25);
  }
  *(_QWORD *)(v0 + 3192) = v22;
  v26 = *(_QWORD *)(v0 + 2016);
  v27 = *(int *)(v37 + 24);
  *(_DWORD *)(v0 + 3248) = v27;
  v28 = v26 + v27;
  v29 = sub_244AE3BC4();
  *(_QWORD *)(v0 + 3200) = v29;
  v30 = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v0 + 3208) = v30;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = *(_QWORD *)(v0 + 2008);
    (*(void (**)(_QWORD, _QWORD))(v0 + 3184))(*(_QWORD *)(v0 + 3152), *(_QWORD *)(v0 + 2808));
    sub_244A72890(v28, &qword_2573CFF18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    v32 = type metadata accessor for PrivateMLRequest.Response.Event(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 3216) = v34;
    *v34 = v0;
    v34[1] = sub_244A852D8;
    return sub_244AE3BB8();
  }
}

uint64_t sub_244A852D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[403] = a1;
  v4[404] = a2;
  v4[405] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244A8534C()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD, _QWORD);
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  void (*v53)(uint64_t, uint64_t);
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80[21];

  v1 = v0;
  v2 = v0[404];
  if (v2 >> 60 == 15)
  {
    v3 = v0[401];
    v4 = v1[400];
    v5 = v1[251];
    v6 = v1[252] + *((int *)v1 + 812);
    ((void (*)(_QWORD, _QWORD))v1[398])(v1[394], v1[351]);
    sub_244A72890(v6, &qword_2573CFF18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v6, 1, 1, v4);
    v7 = type metadata accessor for PrivateMLRequest.Response.Event(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))v1[1];
  }
  else
  {
    v9 = v0[403];
    v10 = (void (*)(_QWORD, _QWORD, _QWORD))v0[397];
    v79 = v0;
    v11 = (void (*)(uint64_t, uint64_t, uint64_t))v0[396];
    v12 = v0[394];
    v13 = v0[391];
    v14 = v0[390];
    v15 = v0[389];
    v16 = v79[352];
    v17 = v79[351];
    v10(v79[349], v79[252], v79[328]);
    v11(v13, v12, v17);
    v11(v14, v13, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v15, v13, v17);
    sub_244A93AB0(v9, v2);
    sub_244A93AB0(v9, v2);
    v18 = sub_244AE4194();
    v19 = sub_244AE4368();
    v20 = os_log_type_enabled(v18, v19);
    v21 = v79[404];
    if (v20)
    {
      v22 = (void (*)(uint64_t, uint64_t))v79[398];
      v23 = v79[390];
      v76 = v79[389];
      v24 = v79[351];
      v25 = swift_slowAlloc();
      v80[0] = swift_slowAlloc();
      *(_DWORD *)v25 = 136315394;
      sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v26 = sub_244AE44C4();
      v79[248] = sub_244A80950(v26, v27, v80);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      v22(v76, v24);
      v22(v23, v24);
      *(_WORD *)(v25 + 12) = 2048;
      __asm { BR              X10 }
    }
    v28 = v79[403];
    v29 = (void (*)(uint64_t, uint64_t))v79[399];
    v30 = (void (*)(uint64_t, uint64_t))v79[398];
    v31 = v79[390];
    v32 = v79[389];
    v33 = v79[351];
    v34 = v79[349];
    v35 = v79[328];
    sub_244A81EAC(v28, v21);
    v30(v32, v33);
    v30(v31, v33);
    v36 = v79;
    sub_244A81EAC(v28, v21);

    v29(v34, v35);
    v37 = v79[405];
    v38 = v79[404];
    v39 = v79[403];
    memset(v80, 0, 40);
    sub_244A81E68(v39, v38);
    sub_244AE3C18();
    sub_244A7DAA8(&qword_2573CFF40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE8D70);
    sub_244AE3D38();
    if (v37)
    {
      v40 = v79[404];
      v41 = v79[403];
      ((void (*)(_QWORD, _QWORD))v79[398])(v79[394], v79[351]);
      sub_244A81EAC(v41, v40);
    }
    else
    {
      v42 = v79[324];
      sub_244A7284C(v79[327], v42, &qword_2573CFF38);
      v43 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43) != 1)
      {
        v64 = (char *)&loc_244A86290 + *((int *)qword_244A8AFF0 + swift_getEnumCaseMultiPayload());
        __asm { BR              X10 }
      }
      v44 = (void (*)(uint64_t, uint64_t))v79[398];
      v45 = (void (*)(uint64_t, uint64_t, uint64_t))v79[396];
      v46 = v79[394];
      v47 = v79[354];
      v48 = v79[353];
      v49 = v79[351];
      ((void (*)(_QWORD, _QWORD, _QWORD))v79[397])(v79[330], v79[252], v79[328]);
      v45(v47, v46, v49);
      v45(v48, v47, v49);
      v44(v47, v49);
      v50 = sub_244AE4194();
      v51 = sub_244AE435C();
      v52 = os_log_type_enabled(v50, v51);
      v53 = (void (*)(uint64_t, uint64_t))v79[399];
      v54 = (void (*)(uint64_t, uint64_t))v79[398];
      v55 = v79[353];
      v56 = v79[351];
      v57 = v79[330];
      v58 = v79[328];
      if (v52)
      {
        v78 = v79[328];
        v77 = v79[330];
        v59 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        v80[0] = v60;
        *(_DWORD *)v59 = 136315138;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v61 = sub_244AE44C4();
        v79[243] = sub_244A80950(v61, v62, v80);
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v54(v55, v56);
        _os_log_impl(&dword_244A6B000, v50, v51, "%s received nil response type", v59, 0xCu);
        swift_arrayDestroy();
        v63 = v60;
        v36 = v79;
        MEMORY[0x24951E31C](v63, -1, -1);
        MEMORY[0x24951E31C](v59, -1, -1);

        v53(v77, v78);
      }
      else
      {
        v54(v79[353], v79[351]);

        v53(v57, v58);
      }
      v65 = v36[404];
      v66 = v36[403];
      v67 = v36[401];
      v68 = v36[400];
      v69 = (void (*)(uint64_t, uint64_t))v36[398];
      v70 = v36[394];
      v71 = v36[351];
      v72 = v36[327];
      v73 = v36[252] + *((int *)v36 + 812);
      sub_244A72890(v73, &qword_2573CFF18);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v73, 1, 1, v68);
      sub_244A93AC4();
      swift_allocError();
      *(_OWORD *)v74 = 0u;
      *(_OWORD *)(v74 + 16) = 0u;
      *(_QWORD *)(v74 + 32) = 0;
      *(_BYTE *)(v74 + 40) = 2;
      swift_willThrow();
      sub_244A81EAC(v66, v65);
      sub_244A729C0(v72, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v69(v70, v71);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))v36[1];
  }
  return v8();
}

void sub_244A86CF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void (*v14)(unint64_t, unint64_t);
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  void (*v53)(uint64_t, unint64_t);
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t);
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  void (*v87)(uint64_t, unint64_t);
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  __int128 v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, unint64_t, uint64_t);
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  _BOOL4 v135;
  void (*v136)(unint64_t, unint64_t);
  void (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  NSObject *v152;
  os_log_type_t v153;
  uint8_t *v154;
  void (*v155)(uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  __int128 v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  void (*v189)(uint64_t, unint64_t, uint64_t);
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  NSObject *v198;
  os_log_type_t v199;
  _BOOL4 v200;
  void (*v201)(unint64_t, unint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;

  STACK[0x3A0] = v1[398];
  v3 = (void (*)(uint64_t, uint64_t, uint64_t))v1[397];
  v4 = (void (*)(uint64_t, uint64_t, uint64_t))v1[396];
  v5 = v1[394];
  v6 = v1[372];
  STACK[0x398] = v1[371];
  v7 = v1[351];
  v8 = v1[341];
  v9 = v1[328];
  v10 = v1[252];
  sub_244A729FC(v0, v1[298], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
  v3(v8, v10, v9);
  v4(v6, v5, v7);
  v4(STACK[0x398], v6, v7);
  ((void (*)(uint64_t, uint64_t))STACK[0x3A0])(v6, v7);
  v11 = sub_244AE4194();
  v12 = sub_244AE4368();
  v13 = os_log_type_enabled(v11, v12);
  v14 = (void (*)(unint64_t, unint64_t))v1[399];
  v15 = (void (*)(uint64_t, uint64_t))v1[398];
  v16 = v1[371];
  v17 = v1[351];
  v18 = v1[341];
  v19 = v1[328];
  if (v13)
  {
    STACK[0x3A0] = (unint64_t)v14;
    v20 = v15;
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    STACK[0x398] = v19;
    v23 = v22;
    *(_QWORD *)(v2 - 240) = v22;
    STACK[0x390] = v18;
    *(_DWORD *)v21 = 136315138;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v24 = sub_244AE44C4();
    *(_QWORD *)STACK[0x370] = sub_244A80950(v24, v25, (uint64_t *)(v2 - 240));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v20(v16, v17);
    _os_log_impl(&dword_244A6B000, v11, v12, "%s received final response", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v23, -1, -1);
    MEMORY[0x24951E31C](v21, -1, -1);

    ((void (*)(unint64_t, unint64_t))STACK[0x3A0])(STACK[0x390], STACK[0x398]);
  }
  else
  {
    v15(v1[371], v1[351]);

    v14(v18, v19);
  }
  v26 = STACK[0x3A8];
  v27 = *(_QWORD *)(STACK[0x3A8] + 2368);
  v28 = *(_QWORD *)(STACK[0x3A8] + 2288);
  v29 = *(_QWORD *)(STACK[0x3A8] + 2280);
  v30 = *(_QWORD *)(STACK[0x3A8] + 2384) + *(int *)(*(_QWORD *)(STACK[0x3A8] + 2376) + 24);
  sub_244A7284C(v30, v27, &qword_2573CFF28);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v29) = v31(v27, 1, v29);
  sub_244A72890(v27, &qword_2573CFF28);
  if ((_DWORD)v29 != 1)
  {
    v32 = *(_QWORD *)(v26 + 2360);
    v33 = *(_QWORD *)(v26 + 2280);
    sub_244A7284C(v30, v32, &qword_2573CFF28);
    if (v31(v32, 1, v33) == 1)
    {
      v34 = *(_QWORD *)(v26 + 2320);
      v35 = *(_QWORD *)(v26 + 2280);
      sub_244AE3C00();
      v36 = *(int *)(v35 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v37 = *(_QWORD *)(v26 + 2360);
      *(_QWORD *)(v34 + v36) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v37, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v26 + 2360), *(_QWORD *)(v26 + 2320), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    }
    v38 = *(_QWORD *)(v26 + 2320);
    sub_244A713E0(*(_QWORD *)(v26 + 2016) + *(int *)(v26 + 1716), *(_QWORD *)(v26 + 2016));
    sub_244A729C0(v38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
  }
  if (qword_2573CF960 != -1)
    swift_once();
  swift_beginAccess();
  v39 = unk_2573D28D0;
  v40 = STACK[0x388];
  *(_OWORD *)v40 = xmmword_2573D28C0;
  *(_OWORD *)(v40 + 16) = v39;
  *(_BYTE *)(v40 + 32) = byte_2573D28E0;
  sub_244A7D760(v40);
  v41 = sub_244ADE91C();
  sub_244A7D790(v40);
  if ((v41 & 1) != 0)
  {
    v42 = *(_QWORD *)(v26 + 2352);
    v43 = *(_QWORD *)(v26 + 2280);
    sub_244A7284C(v30, v42, &qword_2573CFF28);
    LODWORD(v43) = v31(v42, 1, v43);
    sub_244A72890(v42, &qword_2573CFF28);
    STACK[0x2E8] = v30;
    STACK[0x2E0] = (unint64_t)v31;
    if ((_DWORD)v43 == 1)
    {
      v44 = *(void (**)(uint64_t, uint64_t))(v26 + 3184);
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 3168);
      v46 = *(_QWORD *)(v26 + 3152);
      v47 = *(_QWORD *)(v26 + 2960);
      v48 = *(_QWORD *)(v26 + 2952);
      v49 = *(_QWORD *)(v26 + 2808);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v26 + 3176))(*(_QWORD *)(v26 + 2720), *(_QWORD *)(v26 + 2016), *(_QWORD *)(v26 + 2624));
      v45(v47, v46, v49);
      v45(v48, v47, v49);
      v44(v47, v49);
      v50 = sub_244AE4194();
      v51 = sub_244AE435C();
      v52 = os_log_type_enabled(v50, v51);
      v53 = *(void (**)(uint64_t, unint64_t))(v26 + 3192);
      v54 = *(void (**)(uint64_t, uint64_t))(v26 + 3184);
      v55 = *(_QWORD *)(v26 + 2952);
      v56 = *(_QWORD *)(v26 + 2808);
      v57 = *(_QWORD *)(v26 + 2720);
      v58 = *(_QWORD *)(v26 + 2624);
      if (v52)
      {
        STACK[0x3A0] = (unint64_t)v53;
        v59 = swift_slowAlloc();
        STACK[0x398] = v58;
        v60 = (uint8_t *)v59;
        v61 = swift_slowAlloc();
        *(_QWORD *)(v2 - 240) = v61;
        *(_DWORD *)v60 = 136315138;
        STACK[0x390] = (unint64_t)(v60 + 4);
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v62 = sub_244AE44C4();
        *(_QWORD *)STACK[0x2F8] = sub_244A80950(v62, v63, (uint64_t *)(v2 - 240));
        v26 = STACK[0x3A8];
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v54(v55, v56);
        _os_log_impl(&dword_244A6B000, v50, v51, "%s contains no debug information", v60, 0xCu);
        swift_arrayDestroy();
        v64 = v61;
        v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x2E0];
        MEMORY[0x24951E31C](v64, -1, -1);
        MEMORY[0x24951E31C](v60, -1, -1);

        ((void (*)(uint64_t, unint64_t))STACK[0x3A0])(v57, STACK[0x398]);
      }
      else
      {
        v54(*(_QWORD *)(v26 + 2952), *(_QWORD *)(v26 + 2808));

        v53(v57, v58);
      }
      v30 = STACK[0x2E8];
    }
    v65 = *(_QWORD *)(v26 + 2344);
    v66 = *(_QWORD *)(v26 + 2280);
    sub_244A7284C(v30, v65, &qword_2573CFF28);
    if (v31(v65, 1, v66) == 1)
    {
      v67 = *(_QWORD *)(v26 + 2312);
      v68 = *(_QWORD *)(v26 + 2280);
      sub_244AE3C00();
      v69 = *(int *)(v68 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v70 = *(_QWORD *)(v26 + 2344);
      *(_QWORD *)(v67 + v69) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v70, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v26 + 2344), *(_QWORD *)(v26 + 2312), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    }
    v71 = *(_QWORD *)(v26 + 2312);
    v72 = *(_QWORD *)(v26 + 2280);
    v73 = *(_QWORD *)(v26 + 2272);
    v74 = *(_QWORD *)(v26 + 2120);
    v75 = *(_QWORD *)(v26 + 2112);
    v76 = *(_QWORD *)(v71 + *(int *)(v72 + 20))
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v76, v73, &qword_2573CF9E0);
    v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
    STACK[0x300] = (unint64_t)v77;
    LODWORD(v75) = v77(v73, 1, v75);
    sub_244A72890(v73, &qword_2573CF9E0);
    sub_244A729C0(v71, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    STACK[0x2F0] = v72;
    if ((_DWORD)v75 == 1)
    {
      v78 = *(void (**)(uint64_t, uint64_t))(v26 + 3184);
      v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 3168);
      v80 = *(_QWORD *)(v26 + 3152);
      v81 = *(_QWORD *)(v26 + 2944);
      v82 = *(_QWORD *)(v26 + 2936);
      v83 = *(_QWORD *)(v26 + 2808);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v26 + 3176))(*(_QWORD *)(v26 + 2712), *(_QWORD *)(v26 + 2016), *(_QWORD *)(v26 + 2624));
      v79(v81, v80, v83);
      v79(v82, v81, v83);
      v78(v81, v83);
      v84 = sub_244AE4194();
      v85 = sub_244AE435C();
      v86 = os_log_type_enabled(v84, v85);
      v87 = *(void (**)(uint64_t, unint64_t))(v26 + 3192);
      v88 = *(void (**)(uint64_t, uint64_t))(v26 + 3184);
      v89 = *(_QWORD *)(v26 + 2936);
      v90 = *(_QWORD *)(v26 + 2808);
      v91 = *(_QWORD *)(v26 + 2712);
      v92 = *(_QWORD *)(v26 + 2624);
      if (v86)
      {
        STACK[0x3A0] = (unint64_t)v87;
        v93 = swift_slowAlloc();
        STACK[0x398] = v92;
        v94 = (uint8_t *)v93;
        v95 = swift_slowAlloc();
        *(_QWORD *)(v2 - 240) = v95;
        *(_DWORD *)v94 = 136315138;
        STACK[0x390] = (unint64_t)(v94 + 4);
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v96 = sub_244AE44C4();
        *(_QWORD *)STACK[0x308] = sub_244A80950(v96, v97, (uint64_t *)(v2 - 240));
        v26 = STACK[0x3A8];
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v88(v89, v90);
        _os_log_impl(&dword_244A6B000, v84, v85, "%s contains no performance metrics", v94, 0xCu);
        swift_arrayDestroy();
        v98 = v95;
        v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x2E0];
        MEMORY[0x24951E31C](v98, -1, -1);
        MEMORY[0x24951E31C](v94, -1, -1);

        ((void (*)(uint64_t, unint64_t))STACK[0x3A0])(v91, STACK[0x398]);
      }
      else
      {
        v88(*(_QWORD *)(v26 + 2936), *(_QWORD *)(v26 + 2808));

        v87(v91, v92);
      }
      v30 = STACK[0x2E8];
      v72 = STACK[0x2F0];
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v26 + 3176))(*(_QWORD *)(v26 + 2704), *(_QWORD *)(v26 + 2016), *(_QWORD *)(v26 + 2624));
    v99 = sub_244AE4194();
    v100 = sub_244AE4368();
    if (os_log_type_enabled(v99, v100))
    {
      v101 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v101 = 0;
      _os_log_impl(&dword_244A6B000, v99, v100, "Performance metrics for first 10 responses: ", v101, 2u);
      MEMORY[0x24951E31C](v101, -1, -1);
    }
    v102 = *(void (**)(uint64_t, uint64_t))(v26 + 3192);
    v103 = *(_QWORD *)(v26 + 2704);
    v104 = *(_QWORD *)(v26 + 2624);
    v105 = *(_QWORD *)(v26 + 2336);
    v106 = *(_QWORD *)(v26 + 2280);

    v102(v103, v104);
    sub_244A7284C(v30, v105, &qword_2573CFF28);
    if (v31(v105, 1, v106) == 1)
    {
      v107 = *(_QWORD *)(v26 + 2304);
      sub_244AE3C00();
      v108 = *(int *)(v72 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v109 = *(_QWORD *)(v26 + 2336);
      *(_QWORD *)(v107 + v108) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v109, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v26 + 2336), *(_QWORD *)(v26 + 2304), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    }
    v110 = *(_QWORD *)(v26 + 2264);
    v111 = *(_QWORD *)(v26 + 2112);
    v112 = *(_QWORD *)(*(_QWORD *)(v26 + 2304) + *(int *)(v72 + 20))
         + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v112, v110, &qword_2573CF9E0);
    v113 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x300])(v110, 1, v111);
    v114 = *(_QWORD *)(v26 + 2264);
    v115 = *(_QWORD **)(v26 + 2248);
    if (v113 == 1)
    {
      *v115 = 0;
      v115[1] = 0xE000000000000000;
      v116 = MEMORY[0x24BEE4AF8];
      v115[2] = 0;
      v115[3] = v116;
      sub_244AE3C00();
      sub_244A72890(v114, &qword_2573CF9E0);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v26 + 2264), (uint64_t)v115, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v117 = *(_QWORD *)(v26 + 2248);
    sub_244A729C0(*(_QWORD *)(v26 + 2304), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    v118 = *(_QWORD *)(v117 + 24);
    swift_bridgeObjectRetain();
    sub_244A729C0(v117, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    if (*(_QWORD *)(v118 + 16) >= 0xAuLL)
      v120 = 10;
    else
      v120 = *(_QWORD *)(v118 + 16);
    if (v120)
    {
      STACK[0x338] = *(_QWORD *)(v26 + 2224);
      STACK[0x330] = *(_QWORD *)(v26 + 2200);
      v121 = *(_QWORD *)(v26 + 2120);
      v122 = *(unsigned __int8 *)(v121 + 80);
      STACK[0x308] = v118;
      v123 = v118 + ((v122 + 32) & ~v122);
      STACK[0x348] = *(_QWORD *)(v121 + 72);
      *(_QWORD *)&v119 = 136315650;
      *(_OWORD *)&STACK[0x320] = v119;
      STACK[0x310] = MEMORY[0x24BEE4AD8] + 8;
      do
      {
        STACK[0x3A0] = v120;
        STACK[0x370] = *(_QWORD *)(v26 + 3184);
        STACK[0x350] = *(_QWORD *)(v26 + 3176);
        v124 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 3168);
        STACK[0x358] = *(_QWORD *)(v26 + 3152);
        v125 = *(_QWORD *)(v26 + 2928);
        STACK[0x360] = *(_QWORD *)(v26 + 2920);
        v126 = *(_QWORD *)(v26 + 2808);
        v127 = *(_QWORD *)(v26 + 2696);
        v128 = *(_QWORD *)(v26 + 2624);
        v129 = *(_QWORD *)(v26 + 2240);
        v130 = *(_QWORD *)(v26 + 2232);
        STACK[0x368] = *(_QWORD *)(v26 + 2224);
        STACK[0x378] = *(_QWORD *)(v26 + 2216);
        STACK[0x380] = *(_QWORD *)(v26 + 2208);
        STACK[0x388] = *(_QWORD *)(v26 + 2200);
        STACK[0x390] = *(_QWORD *)(v26 + 2192);
        v131 = *(_QWORD *)(v26 + 2016);
        STACK[0x398] = v123;
        sub_244A72964(v123, v129, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        ((void (*)(uint64_t, uint64_t, uint64_t))STACK[0x350])(v127, v131, v128);
        v124(v125, STACK[0x358], v126);
        v124(STACK[0x360], v125, v126);
        ((void (*)(unint64_t, uint64_t))STACK[0x370])(v125, v126);
        sub_244A72964(v129, v130, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A72964(v130, STACK[0x368], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A729FC(v130, STACK[0x378], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v132 = STACK[0x380];
        sub_244A72964(v129, STACK[0x380], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A72964(v132, STACK[0x388], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A729FC(v132, STACK[0x390], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v133 = sub_244AE4194();
        v134 = sub_244AE4368();
        v135 = os_log_type_enabled(v133, v134);
        v136 = *(void (**)(unint64_t, unint64_t))(v26 + 3192);
        v137 = *(void (**)(uint64_t, uint64_t))(v26 + 3184);
        v138 = *(_QWORD *)(v26 + 2920);
        v139 = *(_QWORD *)(v26 + 2808);
        STACK[0x388] = *(_QWORD *)(v26 + 2696);
        STACK[0x380] = *(_QWORD *)(v26 + 2624);
        STACK[0x390] = *(_QWORD *)(v26 + 2240);
        v140 = *(uint64_t **)(v26 + 2224);
        STACK[0x378] = *(_QWORD *)(v26 + 2216);
        v141 = *(_QWORD *)(v26 + 2200);
        v142 = *(_QWORD *)(v26 + 2192);
        if (v135)
        {
          v143 = swift_slowAlloc();
          STACK[0x370] = (unint64_t)v136;
          v144 = v143;
          v145 = swift_slowAlloc();
          STACK[0x368] = v145;
          *(_QWORD *)(v2 - 240) = v145;
          *(_DWORD *)v144 = *(_OWORD *)&STACK[0x320];
          sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v146 = sub_244AE44C4();
          *(_QWORD *)(v144 + 4) = sub_244A80950(v146, v147, (uint64_t *)(v2 - 240));
          swift_bridgeObjectRelease();
          v137(v138, v139);
          *(_WORD *)(v144 + 12) = 2080;
          v148 = *v140;
          v149 = *(_QWORD *)(STACK[0x338] + 8);
          swift_bridgeObjectRetain();
          *(_QWORD *)(v144 + 14) = sub_244A80950(v148, v149, (uint64_t *)(v2 - 240));
          swift_bridgeObjectRelease();
          sub_244A729C0(STACK[0x378], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          sub_244A729C0((uint64_t)v140, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_WORD *)(v144 + 22) = 2048;
          v150 = *(_QWORD *)(STACK[0x330] + 16);
          sub_244A729C0(v141, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_QWORD *)(v144 + 24) = v150;
          sub_244A729C0(v142, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          _os_log_impl(&dword_244A6B000, v133, v134, "%s performance metrics: %s - %llu", (uint8_t *)v144, 0x20u);
          v151 = STACK[0x368];
          swift_arrayDestroy();
          MEMORY[0x24951E31C](v151, -1, -1);
          MEMORY[0x24951E31C](v144, -1, -1);

          ((void (*)(unint64_t, unint64_t))STACK[0x370])(STACK[0x388], STACK[0x380]);
        }
        else
        {
          sub_244A729C0(v141, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);

          sub_244A729C0(v142, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          sub_244A729C0(STACK[0x378], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          sub_244A729C0((uint64_t)v140, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          v137(v138, v139);
          v136(STACK[0x388], STACK[0x380]);
        }
        sub_244A729C0(STACK[0x390], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v123 = STACK[0x398] + STACK[0x348];
        v120 = STACK[0x3A0] - 1;
        v26 = STACK[0x3A8];
      }
      while (STACK[0x3A0] != 1);
      swift_bridgeObjectRelease();
      v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x2E0];
      v30 = STACK[0x2E8];
      v72 = STACK[0x2F0];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v26 + 3176))(*(_QWORD *)(v26 + 2688), *(_QWORD *)(v26 + 2016), *(_QWORD *)(v26 + 2624));
    v152 = sub_244AE4194();
    v153 = sub_244AE4368();
    if (os_log_type_enabled(v152, v153))
    {
      v154 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v154 = 0;
      _os_log_impl(&dword_244A6B000, v152, v153, "Performance metrics for last 10 responses: ", v154, 2u);
      MEMORY[0x24951E31C](v154, -1, -1);
    }
    v155 = *(void (**)(uint64_t, uint64_t))(v26 + 3192);
    v156 = *(_QWORD *)(v26 + 2688);
    v157 = *(_QWORD *)(v26 + 2624);
    v158 = *(_QWORD *)(v26 + 2328);
    v159 = *(_QWORD *)(v26 + 2280);

    v155(v156, v157);
    sub_244A7284C(v30, v158, &qword_2573CFF28);
    if (v31(v158, 1, v159) == 1)
    {
      v160 = *(_QWORD *)(v26 + 2296);
      sub_244AE3C00();
      v161 = *(int *)(v72 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v162 = *(_QWORD *)(v26 + 2328);
      *(_QWORD *)(v160 + v161) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v162, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v26 + 2328), *(_QWORD *)(v26 + 2296), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    }
    v163 = *(_QWORD *)(v26 + 2256);
    v164 = *(_QWORD *)(v26 + 2112);
    v165 = *(_QWORD *)(*(_QWORD *)(v26 + 2296) + *(int *)(v72 + 20))
         + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v165, v163, &qword_2573CF9E0);
    v166 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x300])(v163, 1, v164);
    v167 = *(_QWORD *)(v26 + 2256);
    v168 = *(_QWORD **)(v26 + 2184);
    if (v166 == 1)
    {
      *v168 = 0;
      v168[1] = 0xE000000000000000;
      v169 = MEMORY[0x24BEE4AF8];
      v168[2] = 0;
      v168[3] = v169;
      sub_244AE3C00();
      sub_244A72890(v167, &qword_2573CF9E0);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v26 + 2256), (uint64_t)v168, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v170 = *(_QWORD *)(v26 + 2184);
    sub_244A729C0(*(_QWORD *)(v26 + 2296), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    v171 = *(_QWORD *)(v170 + 24);
    swift_bridgeObjectRetain();
    sub_244A729C0(v170, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    v173 = *(_QWORD *)(v171 + 16);
    v174 = v173 - 10;
    if (v173 < 0xA)
      v174 = 0;
    if (v174 != v173)
    {
      STACK[0x330] = *(_QWORD *)(v26 + 2160);
      STACK[0x320] = *(_QWORD *)(v26 + 2136);
      v186 = *(_QWORD *)(v26 + 2120);
      STACK[0x348] = v186;
      STACK[0x340] = v171
                   + ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80));
      v187 = 10;
      if (v173 < 0xA)
        v187 = v173;
      v188 = -v187;
      *(_QWORD *)&v172 = 136315650;
      *(_OWORD *)&STACK[0x310] = v172;
      STACK[0x308] = MEMORY[0x24BEE4AD8] + 8;
      STACK[0x338] = v171;
      STACK[0x350] = v173;
      do
      {
        STACK[0x3A0] = v188;
        if (!__CFADD__(v173, v188))
        {
          __break(1u);
          JUMPOUT(0x244A8AF64);
        }
        STACK[0x378] = *(_QWORD *)(v26 + 3184);
        STACK[0x358] = *(_QWORD *)(v26 + 3176);
        v189 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 3168);
        STACK[0x360] = *(_QWORD *)(v26 + 3152);
        v190 = *(_QWORD *)(v26 + 2912);
        STACK[0x368] = *(_QWORD *)(v26 + 2904);
        v191 = *(_QWORD *)(v26 + 2808);
        v192 = *(_QWORD *)(v26 + 2680);
        v193 = *(_QWORD *)(v26 + 2624);
        v194 = *(_QWORD *)(v26 + 2176);
        v195 = *(_QWORD *)(v26 + 2168);
        STACK[0x370] = *(_QWORD *)(v26 + 2160);
        STACK[0x380] = *(_QWORD *)(v26 + 2152);
        STACK[0x388] = *(_QWORD *)(v26 + 2144);
        STACK[0x390] = *(_QWORD *)(v26 + 2136);
        STACK[0x398] = *(_QWORD *)(v26 + 2128);
        v196 = *(_QWORD *)(v26 + 2016);
        sub_244A72964(STACK[0x340] + *(_QWORD *)(STACK[0x348] + 72) * (v173 + v188), v194, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        ((void (*)(uint64_t, uint64_t, uint64_t))STACK[0x358])(v192, v196, v193);
        v189(v190, STACK[0x360], v191);
        v189(STACK[0x368], v190, v191);
        ((void (*)(unint64_t, uint64_t))STACK[0x378])(v190, v191);
        sub_244A72964(v194, v195, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A72964(v195, STACK[0x370], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A729FC(v195, STACK[0x380], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v197 = STACK[0x388];
        sub_244A72964(v194, STACK[0x388], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A72964(v197, STACK[0x390], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A729FC(v197, STACK[0x398], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v198 = sub_244AE4194();
        v199 = sub_244AE4368();
        v200 = os_log_type_enabled(v198, v199);
        v201 = *(void (**)(unint64_t, unint64_t))(v26 + 3192);
        STACK[0x380] = *(_QWORD *)(v26 + 3184);
        v202 = *(_QWORD *)(v26 + 2904);
        v203 = *(_QWORD *)(v26 + 2808);
        STACK[0x390] = *(_QWORD *)(v26 + 2680);
        STACK[0x388] = *(_QWORD *)(v26 + 2624);
        STACK[0x398] = *(_QWORD *)(v26 + 2176);
        v204 = *(uint64_t **)(v26 + 2160);
        v205 = *(_QWORD *)(v26 + 2152);
        v206 = *(_QWORD *)(v26 + 2136);
        v207 = *(_QWORD *)(v26 + 2128);
        if (v200)
        {
          v208 = swift_slowAlloc();
          STACK[0x370] = v207;
          STACK[0x378] = (unint64_t)v201;
          v209 = v208;
          v210 = swift_slowAlloc();
          *(_QWORD *)(v2 - 240) = v210;
          *(_DWORD *)v209 = *(_OWORD *)&STACK[0x310];
          sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v211 = sub_244AE44C4();
          *(_QWORD *)(v209 + 4) = sub_244A80950(v211, v212, (uint64_t *)(v2 - 240));
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, uint64_t))STACK[0x380])(v202, v203);
          *(_WORD *)(v209 + 12) = 2080;
          v213 = *v204;
          v214 = *(_QWORD *)(STACK[0x330] + 8);
          swift_bridgeObjectRetain();
          *(_QWORD *)(v209 + 14) = sub_244A80950(v213, v214, (uint64_t *)(v2 - 240));
          swift_bridgeObjectRelease();
          sub_244A729C0(v205, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          sub_244A729C0((uint64_t)v204, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_WORD *)(v209 + 22) = 2048;
          v215 = *(_QWORD *)(STACK[0x320] + 16);
          sub_244A729C0(v206, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_QWORD *)(v209 + 24) = v215;
          sub_244A729C0(STACK[0x370], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          _os_log_impl(&dword_244A6B000, v198, v199, "%s performance metrics: %s - %llu", (uint8_t *)v209, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x24951E31C](v210, -1, -1);
          MEMORY[0x24951E31C](v209, -1, -1);

          ((void (*)(unint64_t, unint64_t))STACK[0x378])(STACK[0x390], STACK[0x388]);
        }
        else
        {
          sub_244A729C0(v206, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);

          sub_244A729C0(v207, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          sub_244A729C0(v205, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          sub_244A729C0((uint64_t)v204, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          ((void (*)(uint64_t, uint64_t))STACK[0x380])(v202, v203);
          v201(STACK[0x390], STACK[0x388]);
        }
        sub_244A729C0(STACK[0x398], type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v188 = STACK[0x3A0] + 1;
        v26 = STACK[0x3A8];
        v173 = STACK[0x350];
      }
      while (STACK[0x3A0] != -1);
    }
    swift_bridgeObjectRelease();
  }
  v175 = *(_QWORD *)(v26 + 3232);
  v176 = *(_QWORD *)(v26 + 3224);
  v177 = *(_QWORD *)(v26 + 3208);
  v178 = *(_QWORD *)(v26 + 3200);
  v179 = *(int *)(v26 + 3248);
  STACK[0x3A0] = *(_QWORD *)(v26 + 3184);
  v180 = *(_QWORD *)(v26 + 3152);
  v181 = *(_QWORD *)(v26 + 2808);
  v182 = *(_QWORD *)(v26 + 2616);
  v183 = *(_QWORD *)(v26 + 2384);
  v184 = *(_QWORD *)(v26 + 2016) + v179;
  v185 = *(_QWORD **)(STACK[0x3A8] + 2008);
  sub_244A72890(v184, &qword_2573CFF18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56))(v184, 1, 1, v178);
  sub_244A81EAC(v176, v175);
  sub_244A729C0(v183, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
  sub_244A729C0(v182, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
  ((void (*)(uint64_t, uint64_t))STACK[0x3A0])(v180, v181);
  *v185 = 0;
  v185[1] = 0xE000000000000000;
  type metadata accessor for PrivateMLRequest.Response.Event(0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x244A8991CLL);
}

void sub_244A86EDC()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, _QWORD, uint64_t);
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(uint64_t, _QWORD, uint64_t);
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  void (*v84)(unint64_t, unint64_t);
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  void (*v100)(unint64_t, unint64_t);
  uint64_t v101;
  uint64_t v102;
  os_log_type_t v103;
  const char *v104;
  void *v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v6 = v4[263];
  v7 = v4[253];
  sub_244A729FC(v2, v6, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
  v8 = v6 + *(int *)(v7 + 20);
  if ((*(_BYTE *)(v8 + 9) & 1) != 0)
    goto LABEL_2;
  v33 = *(_QWORD *)v8;
  if ((*(_BYTE *)(v8 + 8) & 1) != 0)
  {
    if (!v33)
    {
LABEL_2:
      STACK[0x340] = v3;
      STACK[0x320] = v1;
      STACK[0x338] = v0;
      STACK[0x398] = v4[398];
      v9 = (void (*)(uint64_t, _QWORD, uint64_t))v4[397];
      v10 = (void (*)(uint64_t, uint64_t, uint64_t))v4[396];
      v11 = v4[394];
      v12 = v4[362];
      v13 = v4[361];
      v14 = v4[351];
      v15 = v4[334];
      v16 = v4[328];
      v17 = v4[263];
      v18 = v4[262];
      v19 = v4[261];
      STACK[0x3A0] = v4[260];
      v9(v15, v4[252], v16);
      v10(v12, v11, v14);
      v10(v13, v12, v14);
      ((void (*)(uint64_t, uint64_t))STACK[0x398])(v12, v14);
      sub_244A72964(v17, v18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A72964(v18, v19, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A729FC(v18, STACK[0x3A0], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v20 = sub_244AE4194();
      v21 = sub_244AE4368();
      if (os_log_type_enabled(v20, v21))
      {
        STACK[0x3A0] = (unint64_t)v20;
        v22 = (void (*)(uint64_t, uint64_t))v4[398];
        v23 = v4[361];
        v24 = v4[351];
        STACK[0x398] = v4[261];
        v25 = v4[253];
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        *(_QWORD *)(v5 - 240) = v27;
        *(_DWORD *)v26 = 136315394;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v28 = sub_244AE44C4();
        v4[238] = sub_244A80950(v28, v29, (uint64_t *)(v5 - 240));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v22(v23, v24);
        *(_WORD *)(v26 + 12) = 2080;
        v30 = (uint64_t *)(STACK[0x398] + *(int *)(v25 + 24));
        if (v30[1])
        {
          v31 = *v30;
          v32 = v30[1];
        }
        else
        {
          v31 = 0;
          v32 = 0xE000000000000000;
        }
        v99 = (_QWORD *)STACK[0x3A8];
        STACK[0x378] = *(_QWORD *)(STACK[0x3A8] + 3232);
        STACK[0x368] = v99[403];
        v100 = (void (*)(unint64_t, unint64_t))v99[399];
        STACK[0x398] = v99[398];
        STACK[0x390] = v99[394];
        STACK[0x388] = v99[351];
        STACK[0x360] = v99[334];
        STACK[0x358] = v99[328];
        STACK[0x380] = v99[327];
        STACK[0x370] = v99[263];
        v101 = v99[261];
        v102 = v99[260];
        swift_bridgeObjectRetain();
        v99[236] = sub_244A80950(v31, v32, (uint64_t *)(v5 - 240));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        sub_244A729C0(v102, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        sub_244A729C0(v101, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        v103 = v21;
        v104 = "%s received status response not set. %s";
LABEL_22:
        v105 = (void *)STACK[0x3A0];
        _os_log_impl(&dword_244A6B000, (os_log_t)STACK[0x3A0], v103, v104, (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v27, -1, -1);
        MEMORY[0x24951E31C](v26, -1, -1);

        sub_244A81EAC(STACK[0x368], STACK[0x378]);
        v100(STACK[0x360], STACK[0x358]);
        sub_244A729C0(STACK[0x370], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        sub_244A729C0(STACK[0x380], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
        ((void (*)(unint64_t, unint64_t))STACK[0x398])(STACK[0x390], STACK[0x388]);
        goto LABEL_23;
      }
      STACK[0x390] = v4[404];
      v41 = v4[403];
      STACK[0x398] = v4[399];
      v34 = (void (*)(unint64_t, uint64_t))v4[398];
      STACK[0x3A8] = v4[394];
      v42 = v4[361];
      v43 = v4[351];
      v44 = v4[334];
      v45 = v4[328];
      STACK[0x3A0] = v4[327];
      STACK[0x388] = v4[263];
      v46 = v4[261];
      v47 = v4[260];
LABEL_11:

      sub_244A729C0(v47, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A729C0(v46, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v34(v42, v43);
      sub_244A81EAC(v41, STACK[0x390]);
      ((void (*)(uint64_t, uint64_t))STACK[0x398])(v44, v45);
      sub_244A729C0(STACK[0x388], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A729C0(STACK[0x3A0], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v39 = STACK[0x3A8];
      v40 = v43;
      goto LABEL_12;
    }
    if (v33 == 1)
    {
LABEL_15:
      STACK[0x398] = v4[398];
      v48 = (void (*)(uint64_t, _QWORD, uint64_t))v4[397];
      v49 = (void (*)(uint64_t, uint64_t, uint64_t))v4[396];
      v50 = v4[394];
      v51 = v4[360];
      v52 = v4[359];
      v53 = v4[351];
      v54 = v4[333];
      v55 = v4[328];
      v56 = v4[263];
      v57 = v4[259];
      v58 = v4[258];
      STACK[0x3A0] = v4[257];
      v48(v54, v4[252], v55);
      v49(v51, v50, v53);
      v49(v52, v51, v53);
      ((void (*)(uint64_t, uint64_t))STACK[0x398])(v51, v53);
      sub_244A72964(v56, v57, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A72964(v57, v58, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A729FC(v57, STACK[0x3A0], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v20 = sub_244AE4194();
      v59 = sub_244AE4368();
      if (os_log_type_enabled(v20, v59))
      {
        STACK[0x3A0] = (unint64_t)v20;
        v60 = (void (*)(uint64_t, uint64_t))v4[398];
        v61 = v4[359];
        v62 = v4[351];
        STACK[0x398] = v4[258];
        v63 = v4[253];
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        *(_QWORD *)(v5 - 240) = v27;
        *(_DWORD *)v26 = 136315394;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v64 = sub_244AE44C4();
        v4[233] = sub_244A80950(v64, v65, (uint64_t *)(v5 - 240));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v60(v61, v62);
        *(_WORD *)(v26 + 12) = 2080;
        v66 = (uint64_t *)(STACK[0x398] + *(int *)(v63 + 24));
        if (v66[1])
        {
          v67 = *v66;
          v68 = v66[1];
        }
        else
        {
          v67 = 0;
          v68 = 0xE000000000000000;
        }
        v125 = (_QWORD *)STACK[0x3A8];
        STACK[0x378] = *(_QWORD *)(STACK[0x3A8] + 3232);
        STACK[0x368] = v125[403];
        v100 = (void (*)(unint64_t, unint64_t))v125[399];
        STACK[0x398] = v125[398];
        STACK[0x390] = v125[394];
        STACK[0x388] = v125[351];
        STACK[0x360] = v125[333];
        STACK[0x358] = v125[328];
        STACK[0x380] = v125[327];
        STACK[0x370] = v125[263];
        v126 = v125[258];
        v127 = v125[257];
        swift_bridgeObjectRetain();
        v125[232] = sub_244A80950(v67, v68, (uint64_t *)(v5 - 240));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        sub_244A729C0(v127, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        sub_244A729C0(v126, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        v103 = v59;
        v104 = "%s received status response ok. %s";
        goto LABEL_22;
      }
      STACK[0x390] = v4[404];
      v41 = v4[403];
      STACK[0x398] = v4[399];
      v34 = (void (*)(unint64_t, uint64_t))v4[398];
      STACK[0x3A8] = v4[394];
      v42 = v4[359];
      v43 = v4[351];
      v44 = v4[333];
      v45 = v4[328];
      STACK[0x3A0] = v4[327];
      STACK[0x388] = v4[263];
      v46 = v4[258];
      v47 = v4[257];
      goto LABEL_11;
    }
  }
  else if (v33 != 2)
  {
    if (v33 != 1)
    {
      if (v33)
      {
        v34 = (void (*)(unint64_t, uint64_t))v4[398];
        v35 = v4[394];
        v36 = v4[351];
        v37 = v4[327];
        v38 = v4[263];
        sub_244A81EAC(v4[403], v4[404]);
        sub_244A729C0(v38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        sub_244A729C0(v37, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
        v39 = v35;
        v40 = v36;
LABEL_12:
        v34(v39, v40);
LABEL_23:
        type metadata accessor for PrivateMLRequest.Response.Event(0);
        JUMPOUT(0x244A853F0);
      }
      goto LABEL_2;
    }
    goto LABEL_15;
  }
  STACK[0x3A0] = v4[398];
  v69 = (void (*)(uint64_t, _QWORD, uint64_t))v4[397];
  v70 = (void (*)(uint64_t, uint64_t, uint64_t))v4[396];
  v71 = v4[394];
  v72 = v4[358];
  v73 = v4[357];
  v74 = v4[351];
  v75 = v4[332];
  v76 = v4[328];
  v77 = v4[263];
  v78 = v4[256];
  v79 = *(_QWORD *)(STACK[0x3A8] + 2040);
  v69(v75, *(_QWORD *)(STACK[0x3A8] + 2016), v76);
  v70(v72, v71, v74);
  v70(v73, v72, v74);
  ((void (*)(uint64_t, uint64_t))STACK[0x3A0])(v72, v74);
  sub_244A72964(v77, v78, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
  v80 = (_QWORD *)STACK[0x3A8];
  sub_244A72964(v78, v79, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
  sub_244A729C0(v78, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
  v81 = sub_244AE4194();
  v82 = sub_244AE435C();
  LODWORD(STACK[0x3A0]) = v82;
  v83 = os_log_type_enabled(v81, v82);
  v84 = (void (*)(unint64_t, unint64_t))v80[399];
  v85 = (void (*)(uint64_t, uint64_t))v80[398];
  v86 = v80[357];
  v87 = v80[351];
  v88 = v80[332];
  v89 = v80[328];
  v90 = v80[255];
  if (v83)
  {
    STACK[0x370] = v80[254];
    STACK[0x378] = v80[253];
    v91 = swift_slowAlloc();
    STACK[0x398] = v88;
    v92 = v91;
    v93 = swift_slowAlloc();
    STACK[0x380] = v93;
    *(_QWORD *)(v5 - 240) = v93;
    *(_DWORD *)v92 = 136315394;
    STACK[0x390] = (unint64_t)v84;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v94 = sub_244AE44C4();
    STACK[0x388] = v89;
    *(_QWORD *)(STACK[0x3A8] + 1880) = sub_244A80950(v94, v95, (uint64_t *)(v5 - 240));
    sub_244AE43B0();
    v80 = (_QWORD *)STACK[0x3A8];
    swift_bridgeObjectRelease();
    v85(v86, v87);
    *(_WORD *)(v92 + 12) = 2080;
    sub_244A72964(v90, STACK[0x370], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    v96 = sub_244AE423C();
    v80[234] = sub_244A80950(v96, v97, (uint64_t *)(v5 - 240));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v90, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    _os_log_impl(&dword_244A6B000, v81, (os_log_type_t)LODWORD(STACK[0x3A0]), "%s received status response error: %s", (uint8_t *)v92, 0x16u);
    v98 = STACK[0x380];
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v98, -1, -1);
    MEMORY[0x24951E31C](v92, -1, -1);

    ((void (*)(unint64_t, unint64_t))STACK[0x390])(STACK[0x398], STACK[0x388]);
  }
  else
  {
    v85(v80[357], v80[351]);
    sub_244A729C0(v90, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);

    v84(v88, v89);
  }
  v106 = v80[263];
  v107 = (int *)v80[253];
  v108 = v107[6];
  v109 = (uint64_t *)(v106 + v107[7]);
  v110 = v109[1];
  v111 = (uint64_t *)(v106 + v108);
  v112 = *(_QWORD *)(v106 + v108 + 8);
  if (v110)
  {
    v113 = *v109;
    if (v112)
    {
      v114 = *v111;
      v115 = *(_QWORD *)(v106 + v108 + 8);
    }
    else
    {
      v114 = 0;
      v115 = 0xE000000000000000;
    }
    v118 = (_QWORD *)STACK[0x3A8];
    STACK[0x380] = *(_QWORD *)(STACK[0x3A8] + 3232);
    v119 = v118[403];
    STACK[0x3A0] = v118[398];
    STACK[0x398] = v118[394];
    STACK[0x390] = v118[351];
    STACK[0x388] = v118[327];
    v120 = (int *)(v106 + v107[8]);
    if (*((_BYTE *)v120 + 4))
      v121 = 0;
    else
      v121 = *v120;
    sub_244A93AC4();
    swift_allocError();
    *(_QWORD *)v122 = v114;
    *(_QWORD *)(v122 + 8) = v115;
    *(_QWORD *)(v122 + 16) = v113;
    *(_QWORD *)(v122 + 24) = v110;
    *(_QWORD *)(v122 + 32) = v121;
    *(_BYTE *)(v122 + 40) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_244A81EAC(v119, STACK[0x380]);
    sub_244A729C0(v106, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    sub_244A729C0(STACK[0x388], type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
    v123 = STACK[0x398];
    v124 = STACK[0x390];
  }
  else
  {
    if (v112)
    {
      v116 = *v111;
      v117 = *(_QWORD *)(v106 + v108 + 8);
    }
    else
    {
      v116 = 0;
      v117 = 0xE000000000000000;
    }
    v128 = (_QWORD *)STACK[0x3A8];
    v129 = *(_QWORD *)(STACK[0x3A8] + 3232);
    v130 = *(_QWORD *)(STACK[0x3A8] + 3224);
    STACK[0x3A0] = *(_QWORD *)(STACK[0x3A8] + 3184);
    STACK[0x398] = v128[394];
    v131 = v128[351];
    v132 = v128[327];
    sub_244A93AC4();
    swift_allocError();
    *(_QWORD *)v133 = v116;
    *(_QWORD *)(v133 + 8) = v117;
    *(_QWORD *)(v133 + 24) = 0;
    *(_QWORD *)(v133 + 32) = 0;
    *(_QWORD *)(v133 + 16) = 0;
    *(_BYTE *)(v133 + 40) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_244A81EAC(v130, v129);
    sub_244A729C0(v106, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    sub_244A729C0(v132, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
    v123 = STACK[0x398];
    v124 = v131;
  }
  ((void (*)(unint64_t, unint64_t))STACK[0x3A0])(v123, v124);
  JUMPOUT(0x244A865A4);
}

void sub_244A870C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  void (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  void (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  void (*v105)(uint64_t, uint64_t);
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  void (*v114)(uint64_t, uint64_t);
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  Swift::String v184;
  void (*v185)(uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  int *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  Swift::String v212;
  uint64_t v213;
  void (*v214)(uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t, uint64_t, uint64_t);
  void (*v220)(uint64_t, uint64_t, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  NSObject *v228;
  _BOOL4 v229;
  void (*v230)(uint64_t, uint64_t);
  void (*v231)(uint64_t, uint64_t);
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(uint64_t, uint64_t, uint64_t);
  void (*v243)(uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  NSObject *v249;
  _BOOL4 v250;
  void (*v251)(uint64_t, uint64_t);
  void (*v252)(uint64_t, uint64_t);
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  void (*v270)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  void (*v271)(uint64_t, uint64_t);
  void (*v272)(uint64_t, uint64_t, uint64_t);
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  NSObject *v277;
  os_log_type_t v278;
  _BOOL4 v279;
  void (*v280)(uint64_t, uint64_t);
  void (*v281)(uint64_t, uint64_t);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint8_t *v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t *v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t *v298;
  uint64_t *v299;
  _OWORD *v300;
  uint64_t *v301;
  uint64_t v302;
  _QWORD *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t *v307;
  uint64_t *v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  void (*v312)(uint64_t, uint64_t);
  void (*v313)(uint64_t, uint64_t, uint64_t);
  uint64_t v314;
  os_log_type_t v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t *v322;
  uint64_t v323;
  uint64_t v324;
  os_log_type_t v325;
  uint64_t v326;
  char v327;
  char v328;
  _OWORD *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t (*v337)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v338)(uint64_t, uint64_t, uint64_t);
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  void (*v346)(uint64_t, uint64_t);
  uint64_t v347;
  uint64_t v348;
  void (*v349)(uint64_t, uint64_t);
  void (*v350)(uint64_t, uint64_t, uint64_t);
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  os_log_type_t v357;
  void (*v358)(uint64_t, uint64_t);
  unint64_t v359;
  _QWORD *v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;

  v308 = v5;
  v303 = v4;
  v307 = v2;
  v305 = v0;
  v291 = v1;
  v346 = (void (*)(uint64_t, uint64_t))v6[398];
  v313 = (void (*)(uint64_t, uint64_t, uint64_t))v6[397];
  v8 = (void (*)(uint64_t, uint64_t, uint64_t))v6[396];
  v324 = v6[394];
  v9 = v6[388];
  v334 = v6[387];
  v10 = v6[351];
  v11 = v6[348];
  v12 = v6[328];
  v13 = v6[323];
  v14 = v6[322];
  v341 = v6[321];
  v15 = v6[252];
  sub_244A729FC(v3, v13, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  v313(v11, v15, v12);
  v8(v9, v324, v10);
  v8(v334, v9, v10);
  v346(v9, v10);
  sub_244A72964(v13, v14, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  sub_244A72964(v14, v341, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  sub_244A729C0(v14, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  v16 = sub_244AE4194();
  v17 = sub_244AE4350();
  v18 = os_log_type_enabled(v16, v17);
  v19 = (void (*)(uint64_t, uint64_t))v6[399];
  v20 = (void (*)(uint64_t, uint64_t))v6[398];
  v21 = v6[387];
  v22 = v6[351];
  v23 = v6[348];
  v24 = v6[328];
  v25 = v6[321];
  if (v18)
  {
    v325 = v17;
    v26 = swift_slowAlloc();
    v335 = swift_slowAlloc();
    *(_QWORD *)(v7 - 240) = v335;
    *(_DWORD *)v26 = 136315394;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v27 = sub_244AE44C4();
    v6[246] = sub_244A80950(v27, v28, (uint64_t *)(v7 - 240));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v20(v21, v22);
    *(_WORD *)(v26 + 12) = 2080;
    sub_244A7DAA8(&qword_2573CFF60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE8CF8);
    v29 = sub_244AE3D5C();
    v6[247] = sub_244A80950(v29, v30, (uint64_t *)(v7 - 240));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v25, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
    _os_log_impl(&dword_244A6B000, v16, v325, "%s received inference environment response %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v335, -1, -1);
    MEMORY[0x24951E31C](v26, -1, -1);
  }
  else
  {
    v20(v6[387], v6[351]);
    sub_244A729C0(v25, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  }

  v19(v23, v24);
  v31 = v6[323];
  v32 = v6[320];
  v33 = v6[319];
  v34 = v6[308];
  v35 = v6[307];
  sub_244A93C4C(v329);
  sub_244A93C70((uint64_t)v329, v291);
  v36 = v31 + *(int *)(v32 + 20);
  sub_244A7284C(v36, v33, &qword_2573CFF30);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  LODWORD(v35) = v37(v33, 1, v35);
  sub_244A72890(v33, &qword_2573CFF30);
  if ((_DWORD)v35 == 1)
  {
    v38 = (void (*)(uint64_t, uint64_t))v6[398];
    v39 = (void (*)(uint64_t, uint64_t, uint64_t))v6[396];
    v40 = v6[394];
    v41 = v6[376];
    v42 = v6[375];
    v43 = v6[351];
    ((void (*)(_QWORD, _QWORD, _QWORD))v6[397])(v6[343], v6[252], v6[328]);
    v39(v41, v40, v43);
    v39(v42, v41, v43);
    v38(v41, v43);
    v44 = sub_244AE4194();
    v45 = sub_244AE4344();
    v46 = os_log_type_enabled(v44, v45);
    v351 = v6[404];
    v347 = v6[403];
    v47 = (void (*)(uint64_t, uint64_t))v6[399];
    v48 = (void (*)(uint64_t, uint64_t))v6[398];
    v49 = v6[394];
    v50 = v6[375];
    v51 = v6[351];
    v342 = v6[343];
    v336 = v6[328];
    v52 = v6[327];
    v354 = v6[323];
    if (v46)
    {
      v330 = v6[394];
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      *(_QWORD *)(v7 - 240) = v54;
      *(_DWORD *)v53 = 136315138;
      sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v55 = sub_244AE44C4();
      *v322 = sub_244A80950(v55, v56, (uint64_t *)(v7 - 240));
      sub_244AE43B0();
      v6 = v360;
      swift_bridgeObjectRelease();
      v48(v50, v51);
      _os_log_impl(&dword_244A6B000, v44, v45, "%s has no environment response", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v54, -1, -1);
      MEMORY[0x24951E31C](v53, -1, -1);

      sub_244A81EAC(v347, v351);
      v47(v342, v336);
      sub_244A729C0(v354, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
      sub_244A729C0(v52, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v57 = v330;
    }
    else
    {

      v48(v50, v51);
      sub_244A81EAC(v347, v351);
      v47(v342, v336);
      sub_244A729C0(v354, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
      sub_244A729C0(v52, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v57 = v49;
    }
    v48(v57, v51);
    v348 = 0;
    v71 = 0;
    v72 = 0;
    v73 = 0;
    v74 = 0;
    v75 = v305;
    goto LABEL_11;
  }
  v58 = v6[318];
  v59 = v6[307];
  sub_244A7284C(v36, v58, &qword_2573CFF30);
  v60 = v37(v58, 1, v59);
  v61 = v6[318];
  v62 = v6[313];
  v355 = v36;
  if (v60 == 1)
  {
    v63 = (int *)v6[307];
    v64 = v6[302];
    v65 = v6[301];
    sub_244AE3C00();
    v66 = v62 + v63[5];
    v67 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56);
    v68(v66, 1, 1, v67);
    v68(v62 + v63[6], 1, 1, v67);
    v68(v62 + v63[7], 1, 1, v67);
    v68(v62 + v63[8], 1, 1, v67);
    v69 = (_QWORD *)(v62 + v63[9]);
    *v69 = 0;
    v69[1] = 0;
    v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    v36 = v355;
    v70(v62 + v63[10], 1, 1, v65);
    sub_244A72890(v61, &qword_2573CFF30);
  }
  else
  {
    sub_244A729FC(v61, v62, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  }
  v81 = v6[313];
  v82 = v6[252] + *((int *)v6 + 429);
  sub_244AE41D0();
  swift_allocObject();
  sub_244AE41C4();
  v83 = swift_task_alloc();
  *(_QWORD *)(v83 + 16) = v82;
  *(_QWORD *)(v83 + 24) = v81;
  sub_244AE41B8();
  v84 = v6[306];
  swift_release();
  swift_task_dealloc();
  v85 = sub_244AE3F0C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 0, 1, v85);
  v86 = v6[317];
  v87 = v6[313];
  v88 = v6[307];
  sub_244A72890(v6[306], &qword_2573CF9D8);
  sub_244A729C0(v87, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  sub_244A7284C(v36, v86, &qword_2573CFF30);
  v89 = v37(v86, 1, v88);
  v90 = v6[317];
  v91 = v6[312];
  if (v89 == 1)
  {
    v92 = (int *)v6[307];
    v93 = v6[302];
    v94 = v6[301];
    sub_244AE3C00();
    v95 = v91 + v92[5];
    v96 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
    v97(v95, 1, 1, v96);
    v97(v91 + v92[6], 1, 1, v96);
    v97(v91 + v92[7], 1, 1, v96);
    v97(v91 + v92[8], 1, 1, v96);
    v98 = (_QWORD *)(v91 + v92[9]);
    *v98 = 0;
    v98[1] = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v91 + v92[10], 1, 1, v94);
    sub_244A72890(v90, &qword_2573CFF30);
  }
  else
  {
    sub_244A729FC(v6[317], v6[312], type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  }
  v99 = v6[312];
  v100 = v6[307];
  v101 = v6[305];
  v102 = v6[302];
  v103 = v6[301];
  sub_244A7284C(v99 + *(int *)(v100 + 40), v101, &qword_2573CF998);
  v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
  LODWORD(v103) = v104(v101, 1, v103);
  sub_244A72890(v101, &qword_2573CF998);
  sub_244A729C0(v99, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  v343 = v100;
  if ((_DWORD)v103 == 1)
  {
    v105 = (void (*)(uint64_t, uint64_t))v6[398];
    v106 = (void (*)(uint64_t, uint64_t, uint64_t))v6[396];
    v107 = v6[394];
    v108 = v6[383];
    v109 = v6[382];
    v110 = v6[351];
    ((void (*)(_QWORD, _QWORD, _QWORD))v6[397])(v6[346], v6[252], v6[328]);
    v106(v108, v107, v110);
    v106(v109, v108, v110);
    v105(v108, v110);
    v111 = sub_244AE4194();
    v112 = sub_244AE4350();
    v113 = os_log_type_enabled(v111, v112);
    v114 = (void (*)(uint64_t, uint64_t))v6[399];
    v115 = (void (*)(uint64_t, uint64_t))v6[398];
    v116 = v6[382];
    v117 = v6[351];
    v118 = v6[346];
    v119 = v6[328];
    if (v113)
    {
      v349 = (void (*)(uint64_t, uint64_t))v6[399];
      v331 = v6[328];
      v120 = (uint8_t *)swift_slowAlloc();
      v337 = v37;
      v121 = swift_slowAlloc();
      *(_QWORD *)(v7 - 240) = v121;
      *(_DWORD *)v120 = 136315138;
      sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v122 = sub_244AE44C4();
      *v301 = sub_244A80950(v122, v123, (uint64_t *)(v7 - 240));
      v6 = v360;
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      v115(v116, v117);
      _os_log_impl(&dword_244A6B000, v111, v112, "%s has no rendered prompt", v120, 0xCu);
      swift_arrayDestroy();
      v124 = v121;
      v37 = v337;
      MEMORY[0x24951E31C](v124, -1, -1);
      MEMORY[0x24951E31C](v120, -1, -1);

      v349(v118, v331);
    }
    else
    {
      v115(v6[382], v6[351]);

      v114(v118, v119);
    }
    v348 = 0;
    v140 = 0;
    v323 = 0;
    v333 = 0;
    v141 = 0;
    v142 = v355;
  }
  else
  {
    v125 = v6[316];
    v126 = v6[307];
    sub_244A84010(v6[252] + *(int *)(v6[395] + 28), (uint64_t)v309);
    v127 = v6[208];
    v128 = v6[209];
    __swift_project_boxed_opaque_existential_1(v309, v127);
    sub_244A7284C(v355, v125, &qword_2573CFF30);
    v129 = v37(v125, 1, v126);
    v130 = v6[316];
    v131 = v6[311];
    v338 = v37;
    if (v129 == 1)
    {
      v132 = (int *)v6[307];
      v326 = v6[302];
      v332 = v6[301];
      sub_244AE3C00();
      v133 = v131 + v132[5];
      v134 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v135 = v128;
      v136 = v127;
      v137 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56);
      v138 = v133;
      v100 = v343;
      v137(v138, 1, 1, v134);
      v137(v131 + v132[6], 1, 1, v134);
      v137(v131 + v132[7], 1, 1, v134);
      v137(v131 + v132[8], 1, 1, v134);
      v127 = v136;
      v128 = v135;
      v139 = (_QWORD *)(v131 + v132[9]);
      *v139 = 0;
      v139[1] = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v326 + 56))(v131 + *(int *)(v343 + 40), 1, 1, v332);
      sub_244A72890(v130, &qword_2573CFF30);
    }
    else
    {
      sub_244A729FC(v130, v131, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    }
    v156 = v6[304];
    v157 = v6[301];
    sub_244A7284C(v6[311] + *(int *)(v100 + 40), v156, &qword_2573CF998);
    v158 = v104(v156, 1, v157);
    v159 = v6[304];
    v160 = (_QWORD *)v6[303];
    v161 = MEMORY[0x24BEE4AF8];
    if (v158 == 1)
    {
      v162 = v6[301];
      *v160 = MEMORY[0x24BEE4AF8];
      v160[1] = v161;
      sub_244AE3C00();
      v163 = (_QWORD *)((char *)v160 + *(int *)(v162 + 28));
      *v163 = 0;
      v163[1] = 0;
      v164 = (char *)v160 + *(int *)(v162 + 32);
      *(_QWORD *)v164 = 0;
      *((_WORD *)v164 + 4) = 256;
      sub_244A72890(v159, &qword_2573CF998);
    }
    else
    {
      sub_244A729FC(v6[304], v6[303], type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    }
    v165 = v6[303];
    v166 = v6[301];
    sub_244A729C0(v6[311], type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    v167 = (uint64_t *)(v165 + *(int *)(v166 + 28));
    if (v167[1])
    {
      v168 = *v167;
      v169 = v167[1];
    }
    else
    {
      v168 = 0;
      v169 = 0xE000000000000000;
    }
    v192 = v360[315];
    v193 = v360[307];
    v194 = v360[303];
    swift_bridgeObjectRetain();
    sub_244A729C0(v194, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v128 + 32))(v168, v169, v127, v128);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v309);
    sub_244A7284C(v355, v192, &qword_2573CFF30);
    v195 = v338(v192, 1, v193);
    v196 = v360[315];
    v197 = v360[310];
    if (v195 == 1)
    {
      v198 = (int *)v360[307];
      v199 = v360[302];
      v200 = v360[301];
      sub_244AE3C00();
      v201 = v197 + v198[5];
      v202 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v203 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v202 - 8) + 56);
      v203(v201, 1, 1, v202);
      v203(v197 + v198[6], 1, 1, v202);
      v203(v197 + v198[7], 1, 1, v202);
      v203(v197 + v198[8], 1, 1, v202);
      v204 = (_QWORD *)(v197 + v198[9]);
      *v204 = 0;
      v204[1] = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v199 + 56))(v197 + *(int *)(v343 + 40), 1, 1, v200);
      sub_244A72890(v196, &qword_2573CFF30);
    }
    else
    {
      sub_244A729FC(v360[315], v360[310], type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    }
    v205 = v360[310];
    *(_QWORD *)(v7 - 240) = 0;
    *(_QWORD *)(v7 - 232) = 0xE000000000000000;
    v206 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v7 - 224) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v7 - 216) = v206;
    *(_BYTE *)(v7 - 208) = 2;
    sub_244A70BB4(v7 - 240, v205);
    v207 = *(_QWORD *)(v7 - 240);
    v208 = *(_QWORD *)(v7 - 232);
    v210 = *(_QWORD *)(v7 - 224);
    v209 = *(_QWORD *)(v7 - 216);
    v211 = *(_BYTE *)(v7 - 208);
    sub_244A729C0(v360[310], type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    *(_QWORD *)(v7 - 240) = v207;
    *(_QWORD *)(v7 - 232) = v208;
    *(_QWORD *)(v7 - 224) = v210;
    *(_QWORD *)(v7 - 216) = v209;
    *(_BYTE *)(v7 - 208) = v211;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v212 = ServerPromptInfo.asJSONString()();
    if (v213)
    {
      v214 = (void (*)(uint64_t, uint64_t))v360[398];
      v215 = v360[394];
      v216 = v360[351];
      v217 = v360[327];
      v218 = v360[323];
      sub_244A81EAC(v360[403], v360[404]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_244A729C0(v218, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
      sub_244A729C0(v217, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v214(v215, v216);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v190 = v291;
      v191 = v297;
      goto LABEL_41;
    }
    v328 = v211;
    v348 = v207;
    v241 = v208;
    v242 = (void (*)(uint64_t, uint64_t, uint64_t))v360[397];
    v243 = (void (*)(uint64_t, uint64_t, uint64_t))v360[396];
    v306 = v360[394];
    v244 = v360[386];
    v310 = v360[385];
    v314 = v360[384];
    v245 = v360[351];
    v246 = v360[347];
    v247 = v360[328];
    v248 = v360[252];
    v321 = v241;
    swift_bridgeObjectRelease();
    v323 = v210;
    swift_bridgeObjectRelease();
    v333 = v209;
    swift_bridgeObjectRelease();
    v242(v246, v248, v247);
    v243(v244, v306, v245);
    v243(v310, v244, v245);
    v350(v314, v244, v245);
    swift_bridgeObjectRetain();
    v6 = v360;
    v249 = sub_244AE4194();
    v315 = sub_244AE4350();
    v250 = os_log_type_enabled(v249, v315);
    v251 = (void (*)(uint64_t, uint64_t))v360[399];
    v252 = (void (*)(uint64_t, uint64_t))v360[398];
    v253 = v360[385];
    v254 = v360[384];
    v255 = v360[351];
    v256 = v360[347];
    v257 = v360[328];
    if (v250)
    {
      v258 = swift_slowAlloc();
      v302 = swift_slowAlloc();
      *(_QWORD *)(v7 - 240) = v302;
      *(_DWORD *)v258 = 136315394;
      sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v259 = sub_244AE44C4();
      *v293 = sub_244A80950(v259, v260, (uint64_t *)(v7 - 240));
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      v252(v254, v255);
      v252(v253, v255);
      *(_WORD *)(v258 + 12) = 2080;
      swift_bridgeObjectRetain();
      *v292 = sub_244A80950(v212._countAndFlagsBits, (unint64_t)v212._object, (uint64_t *)(v7 - 240));
      sub_244AE43B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244A6B000, v249, v315, "%s server prompt info promptInfo=%s", (uint8_t *)v258, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v302, -1, -1);
      v261 = v258;
      v6 = v360;
      MEMORY[0x24951E31C](v261, -1, -1);
    }
    else
    {
      v252(v360[384], v360[351]);
      v252(v253, v255);
      swift_bridgeObjectRelease_n();
    }

    v251(v256, v257);
    v37 = v338;
    v142 = v355;
    v140 = v321;
    v141 = v328;
  }
  v143 = v6[314];
  v144 = v6[307];
  sub_244A7284C(v142, v143, &qword_2573CFF30);
  v145 = v37(v143, 1, v144);
  v146 = v6[314];
  v147 = v6[309];
  v327 = v141;
  if (v145 == 1)
  {
    v148 = (int *)v6[307];
    v149 = v6[302];
    v150 = v6[301];
    sub_244AE3C00();
    v151 = v147 + v148[5];
    v152 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v153 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56);
    v153(v151, 1, 1, v152);
    v153(v147 + v148[6], 1, 1, v152);
    v153(v147 + v148[7], 1, 1, v152);
    v153(v147 + v148[8], 1, 1, v152);
    v154 = (_QWORD *)(v147 + v148[9]);
    *v154 = 0;
    v154[1] = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v147 + *(int *)(v343 + 40), 1, 1, v150);
    sub_244A72890(v146, &qword_2573CFF30);
  }
  else
  {
    sub_244A729FC(v146, v147, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  }
  v155 = v6[309];
  v369 = 0u;
  v368 = 0u;
  v367 = 0u;
  v365 = 0u;
  v366 = 0u;
  v363 = 0u;
  v364 = 0u;
  v361 = 0u;
  v362 = 0u;
  sub_244A6F520((uint64_t *)&v361, v155);
  v170 = v6[309];
  v171 = v368;
  *(_OWORD *)(v304 + 96) = v367;
  *(_OWORD *)(v304 + 112) = v171;
  *(_OWORD *)(v304 + 128) = v369;
  v172 = v364;
  *(_OWORD *)(v304 + 32) = v363;
  *(_OWORD *)(v304 + 48) = v172;
  v173 = v366;
  *(_OWORD *)(v304 + 64) = v365;
  *(_OWORD *)(v304 + 80) = v173;
  v174 = v362;
  *(_OWORD *)v304 = v361;
  *(_OWORD *)(v304 + 16) = v174;
  sub_244A729C0(v170, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  v175 = *(_OWORD *)(v304 + 112);
  v300[6] = *(_OWORD *)(v304 + 96);
  v300[7] = v175;
  v300[8] = *(_OWORD *)(v304 + 128);
  v176 = *(_OWORD *)(v304 + 48);
  v300[2] = *(_OWORD *)(v304 + 32);
  v300[3] = v176;
  v177 = *(_OWORD *)(v304 + 80);
  v300[4] = *(_OWORD *)(v304 + 64);
  v300[5] = v177;
  v178 = *(_OWORD *)(v304 + 16);
  *v300 = *(_OWORD *)v304;
  v300[1] = v178;
  nullsub_1();
  sub_244A93C70(v291, (uint64_t)v299);
  sub_244A93DA0(v299);
  sub_244A93C70((uint64_t)v300, v291);
  v179 = *(_OWORD *)(v304 + 112);
  *(_OWORD *)(v7 - 144) = *(_OWORD *)(v304 + 96);
  *(_OWORD *)(v7 - 128) = v179;
  *(_OWORD *)(v7 - 112) = *(_OWORD *)(v304 + 128);
  v180 = *(_OWORD *)(v304 + 48);
  *(_OWORD *)(v7 - 208) = *(_OWORD *)(v304 + 32);
  *(_OWORD *)(v7 - 192) = v180;
  v181 = *(_OWORD *)(v304 + 80);
  *(_OWORD *)(v7 - 176) = *(_OWORD *)(v304 + 64);
  *(_OWORD *)(v7 - 160) = v181;
  v182 = *(_OWORD *)(v304 + 16);
  *(_OWORD *)(v7 - 240) = *(_OWORD *)v304;
  *(_OWORD *)(v7 - 224) = v182;
  sub_244A93EDC((_QWORD *)v304);
  v184 = ServerEnvironmentInfo.asJSONString()();
  if (!v183)
  {
    v320 = v140;
    v219 = (void (*)(uint64_t, uint64_t, uint64_t))v6[397];
    v220 = (void (*)(uint64_t, uint64_t, uint64_t))v6[396];
    v221 = v6[394];
    v222 = v6[381];
    v223 = v6[380];
    v356 = v6[379];
    v224 = v6[351];
    v225 = v360[345];
    v226 = v360[328];
    v227 = v360[252];
    sub_244A93CD0((_QWORD *)v304);
    v219(v225, v227, v226);
    v220(v222, v221, v224);
    v220(v223, v222, v224);
    v350(v356, v222, v224);
    swift_bridgeObjectRetain();
    v6 = v360;
    v228 = sub_244AE4194();
    v357 = sub_244AE4344();
    v229 = os_log_type_enabled(v228, v357);
    v230 = (void (*)(uint64_t, uint64_t))v360[399];
    v231 = (void (*)(uint64_t, uint64_t))v360[398];
    v232 = v360[380];
    v233 = v360[379];
    v234 = v360[351];
    v235 = v360[345];
    v236 = v360[328];
    if (v229)
    {
      v237 = swift_slowAlloc();
      v318 = swift_slowAlloc();
      *(_QWORD *)(v7 - 240) = v318;
      *(_DWORD *)v237 = 136315394;
      sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v238 = sub_244AE44C4();
      *v308 = sub_244A80950(v238, v239, (uint64_t *)(v7 - 240));
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      v231(v233, v234);
      v231(v232, v234);
      *(_WORD *)(v237 + 12) = 2080;
      swift_bridgeObjectRetain();
      *v294 = sub_244A80950(v184._countAndFlagsBits, (unint64_t)v184._object, (uint64_t *)(v7 - 240));
      sub_244AE43B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244A6B000, v228, v357, "%s environment %s", (uint8_t *)v237, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v318, -1, -1);
      v240 = v237;
      v6 = v360;
      MEMORY[0x24951E31C](v240, -1, -1);
    }
    else
    {
      v231(v360[379], v360[351]);
      v231(v232, v234);
      swift_bridgeObjectRelease_n();
    }

    v230(v235, v236);
    sub_244A93C70(v291, v295);
    sub_244A93C70(v295, v296);
    if (sub_244A94018(v296) == 1 || (v262 = v6[63]) == 0)
    {
      v271 = (void (*)(uint64_t, uint64_t))v6[398];
      v272 = (void (*)(uint64_t, uint64_t, uint64_t))v6[396];
      v273 = v6[394];
      v274 = v6[378];
      v275 = v6[377];
      v276 = v6[351];
      ((void (*)(_QWORD, _QWORD, _QWORD))v6[397])(v6[344], v6[252], v6[328]);
      v272(v274, v273, v276);
      v272(v275, v274, v276);
      v271(v274, v276);
      v277 = sub_244AE4194();
      v278 = sub_244AE4344();
      v279 = os_log_type_enabled(v277, v278);
      v359 = v6[404];
      v353 = v6[403];
      v280 = (void (*)(uint64_t, uint64_t))v6[399];
      v281 = (void (*)(uint64_t, uint64_t))v6[398];
      v282 = v6[394];
      v283 = v6[377];
      v284 = v6[351];
      v345 = v6[344];
      v340 = v6[328];
      v285 = v6[327];
      v286 = v6[323];
      if (v279)
      {
        v312 = (void (*)(uint64_t, uint64_t))v6[399];
        v287 = (uint8_t *)swift_slowAlloc();
        v317 = v285;
        v288 = swift_slowAlloc();
        *(_QWORD *)(v7 - 240) = v288;
        *(_DWORD *)v287 = 136315138;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v289 = sub_244AE44C4();
        *v307 = sub_244A80950(v289, v290, (uint64_t *)(v7 - 240));
        v6 = v360;
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v281(v283, v284);
        _os_log_impl(&dword_244A6B000, v277, v278, "%s provided no adapter asset information", v287, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v288, -1, -1);
        MEMORY[0x24951E31C](v287, -1, -1);

        sub_244A81EAC(v353, v359);
        v312(v345, v340);
        sub_244A729C0(v286, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
        sub_244A729C0(v317, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      }
      else
      {

        v281(v283, v284);
        sub_244A81EAC(v353, v359);
        v280(v345, v340);
        sub_244A729C0(v286, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
        sub_244A729C0(v285, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      }
      v281(v282, v284);
    }
    else
    {
      v316 = v6[404];
      v311 = v6[403];
      v358 = (void (*)(uint64_t, uint64_t))v6[398];
      v352 = v6[394];
      v344 = v6[351];
      v339 = v6[327];
      v319 = v6[323];
      v263 = v6[65];
      v264 = v6[64];
      v265 = v6[62];
      sub_244A84010(v6[252] + *(int *)(v6[395] + 28), (uint64_t)v303);
      v266 = v6[203];
      v267 = v6[204];
      __swift_project_boxed_opaque_existential_1(v303, v266);
      if (v263)
        v268 = v264;
      else
        v268 = 0;
      if (v263)
        v269 = v263;
      else
        v269 = 0xE000000000000000;
      v270 = *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v267 + 24);
      sub_244A93FAC(v265, v262);
      swift_bridgeObjectRetain();
      v270(v265, v262, v268, v269, v266, v267);
      sub_244A71308(v265, v262);
      sub_244A81EAC(v311, v316);
      v6 = v360;
      swift_bridgeObjectRelease();
      sub_244A729C0(v319, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
      sub_244A729C0(v339, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v358(v352, v344);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v303);
    }
    v75 = v305;
    v71 = v320;
    v72 = v323;
    v73 = v333;
    v74 = v327;
LABEL_11:
    v76 = v6[251];
    v77 = v6[252] + *((int *)v6 + 429);
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF58);
    v79 = v76 + *(int *)(v78 + 48);
    v80 = v76 + *(int *)(v78 + 64);
    sub_244A72964(v77, v76, type metadata accessor for PrivateMLRequest);
    sub_244A93C70(v291, v75);
    sub_244A93C70(v75, v79);
    *(_QWORD *)v80 = v348;
    *(_QWORD *)(v80 + 8) = v71;
    *(_QWORD *)(v80 + 16) = v72;
    *(_QWORD *)(v80 + 24) = v73;
    *(_BYTE *)(v80 + 32) = v74;
    type metadata accessor for PrivateMLRequest.Response.Event(0);
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x244A853F8);
  }
  v185 = (void (*)(uint64_t, uint64_t))v6[398];
  v186 = v6[394];
  v187 = v6[351];
  v188 = v6[327];
  v189 = v6[323];
  sub_244A81EAC(v6[403], v6[404]);
  sub_244A93CD0((_QWORD *)v304);
  sub_244A729C0(v189, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  sub_244A729C0(v188, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
  v185(v186, v187);
  sub_244A93FDC(v348, v140);
  v190 = v291;
  v191 = v298;
LABEL_41:
  sub_244A93C70(v190, (uint64_t)v191);
  sub_244A93DA0(v191);
  JUMPOUT(0x244A865A4);
}

void sub_244A87388()
{
  unint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void (*v11)(unint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 3184);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3168);
  v4 = *(_QWORD *)(v0 + 3152);
  v5 = *(_QWORD *)(v0 + 2848);
  v6 = *(_QWORD *)(v0 + 2840);
  v7 = *(_QWORD *)(v0 + 2808);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 3176))(*(_QWORD *)(v0 + 2648), *(_QWORD *)(v0 + 2016), *(_QWORD *)(v0 + 2624));
  v3(v5, v4, v7);
  v3(v6, v5, v7);
  v2(v5, v7);
  v8 = sub_244AE4194();
  v9 = sub_244AE4368();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void (**)(unint64_t, uint64_t))(v0 + 3192);
  v12 = *(void (**)(uint64_t, uint64_t))(v0 + 3184);
  v13 = *(_QWORD *)(v0 + 2840);
  v14 = *(_QWORD *)(v0 + 2808);
  v15 = *(_QWORD *)(v0 + 2648);
  v16 = *(_QWORD *)(v0 + 2624);
  if (v10)
  {
    STACK[0x3A0] = (unint64_t)v11;
    v17 = swift_slowAlloc();
    STACK[0x398] = v15;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    *(_QWORD *)(v1 - 240) = v19;
    *(_DWORD *)v18 = 136315138;
    STACK[0x388] = (unint64_t)(v18 + 4);
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_244AE44C4();
    *(_QWORD *)STACK[0x360] = sub_244A80950(v20, v21, (uint64_t *)(v1 - 240));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v12(v13, v14);
    _os_log_impl(&dword_244A6B000, v8, v9, "%s received inference complete response", v18, 0xCu);
    swift_arrayDestroy();
    v22 = v19;
    v0 = STACK[0x3A8];
    MEMORY[0x24951E31C](v22, -1, -1);
    MEMORY[0x24951E31C](v18, -1, -1);

    ((void (*)(unint64_t, uint64_t))STACK[0x3A0])(STACK[0x398], v16);
  }
  else
  {
    v12(*(_QWORD *)(v0 + 2840), *(_QWORD *)(v0 + 2808));

    v11(v15, v16);
  }
  v23 = *(void (**)(uint64_t, uint64_t))(v0 + 3184);
  v24 = *(_QWORD *)(v0 + 3152);
  v25 = *(_QWORD *)(v0 + 2808);
  v26 = *(_QWORD *)(v0 + 2616);
  v27 = *(_QWORD *)(v0 + 2592);
  v28 = *(_QWORD **)(v0 + 2008);
  sub_244A81EAC(*(_QWORD *)(v0 + 3224), *(_QWORD *)(v0 + 3232));
  sub_244A729C0(v26, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
  v23(v24, v25);
  *v28 = 0;
  v28[1] = 0xE000000000000000;
  v29 = type metadata accessor for PrivateMLRequest.Response.Event(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  sub_244A729C0(v27, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  JUMPOUT(0x244A853FCLL);
}

uint64_t sub_244A8B004()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 3184))(*(_QWORD *)(v0 + 3152), *(_QWORD *)(v0 + 2808));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A8B770(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_244A7CC58;
  return PrivateMLRequest.Response.AsyncEventsIterator.next()(a1);
}

uint64_t sub_244A8B7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_244A8B818;
  return PrivateMLRequest.Response.AsyncEventsIterator.next()(a1);
}

uint64_t sub_244A8B818()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  if (*(_QWORD *)(v2 + 24))
  {
    swift_getObjectType();
    sub_244AE42F0();
  }
  return swift_task_switch();
}

uint64_t sub_244A8B8B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 40);
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D03B0);
  swift_willThrowTypedImpl();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrivateMLRequest.Response.makeAsyncIterator(transparencyReporter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_244A8B924(a1, type metadata accessor for PrivateMLRequest.Response.AsyncIterator, a2);
}

uint64_t sub_244A8B924@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[40];

  v7 = sub_244AE41AC();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PrivateMLRequest(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244AE3BC4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244AE3BD0();
  v17 = type metadata accessor for PrivateMLRequest.Response(0);
  sub_244A72964(v3 + *(int *)(v17 + 20), (uint64_t)v12, type metadata accessor for PrivateMLRequest);
  sub_244A84010(a1, (uint64_t)v25);
  v18 = (int *)a2(0);
  v19 = a3 + v18[6];
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v20(v19, 1, 1, v13);
  sub_244A72890(v19, &qword_2573CFF18);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v19, v16, v13);
  v20(v19, 0, 1, v13);
  sub_244A72964((uint64_t)v12, a3 + v18[5], type metadata accessor for PrivateMLRequest);
  sub_244A84010((uint64_t)v25, a3 + v18[7]);
  sub_244AE41A0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  sub_244A729C0((uint64_t)v12, type metadata accessor for PrivateMLRequest);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(a3, v9, v24);
}

uint64_t PrivateMLRequest.Response.AsyncIterator.next()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[42] = v0;
  v1[43] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v2 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  v1[49] = v2;
  v1[50] = *(_QWORD *)(v2 - 8);
  v1[51] = swift_task_alloc();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E0);
  v1[57] = swift_task_alloc();
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  v3 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v1[60] = v3;
  v1[61] = *(_QWORD *)(v3 - 8);
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  v1[69] = swift_task_alloc();
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
  v1[73] = swift_task_alloc();
  v1[74] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  v1[75] = swift_task_alloc();
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v1[76] = v4;
  v1[77] = *(_QWORD *)(v4 - 8);
  v1[78] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
  v1[79] = swift_task_alloc();
  v1[80] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9D8);
  v1[81] = swift_task_alloc();
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v1[82] = v5;
  v1[83] = *(_QWORD *)(v5 - 8);
  v1[84] = swift_task_alloc();
  v1[85] = swift_task_alloc();
  v1[86] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  v1[87] = swift_task_alloc();
  v1[88] = swift_task_alloc();
  v1[89] = swift_task_alloc();
  v1[90] = swift_task_alloc();
  v1[91] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0);
  v1[92] = swift_task_alloc();
  v1[93] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  v1[94] = swift_task_alloc();
  sub_244AE3C24();
  v1[95] = swift_task_alloc();
  v1[96] = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse(0);
  v1[97] = swift_task_alloc();
  v6 = sub_244AE41AC();
  v1[98] = v6;
  v1[99] = *(_QWORD *)(v6 - 8);
  v1[100] = swift_task_alloc();
  v1[101] = swift_task_alloc();
  v1[102] = swift_task_alloc();
  v1[103] = swift_task_alloc();
  v1[104] = swift_task_alloc();
  v1[105] = swift_task_alloc();
  v1[106] = swift_task_alloc();
  v1[107] = swift_task_alloc();
  v1[108] = swift_task_alloc();
  v1[109] = swift_task_alloc();
  v1[110] = swift_task_alloc();
  v1[111] = swift_task_alloc();
  v1[112] = swift_task_alloc();
  v1[113] = swift_task_alloc();
  v1[114] = swift_task_alloc();
  v1[115] = swift_task_alloc();
  v1[116] = swift_task_alloc();
  v7 = sub_244AE3B4C();
  v1[117] = v7;
  v1[118] = *(_QWORD *)(v7 - 8);
  v1[119] = swift_task_alloc();
  v1[120] = swift_task_alloc();
  v1[121] = swift_task_alloc();
  v1[122] = swift_task_alloc();
  v1[123] = swift_task_alloc();
  v1[124] = swift_task_alloc();
  v1[125] = swift_task_alloc();
  v1[126] = swift_task_alloc();
  v1[127] = swift_task_alloc();
  v1[128] = swift_task_alloc();
  v1[129] = swift_task_alloc();
  v1[130] = swift_task_alloc();
  v1[131] = swift_task_alloc();
  v1[132] = swift_task_alloc();
  v1[133] = swift_task_alloc();
  v1[134] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244A8C0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 1072);
  v2 = *(_QWORD *)(v0 + 1064);
  v3 = *(_QWORD *)(v0 + 944);
  v4 = *(_QWORD *)(v0 + 936);
  v5 = *(_QWORD *)(v0 + 928);
  v6 = *(_QWORD *)(v0 + 792);
  v7 = *(_QWORD *)(v0 + 784);
  v8 = *(_QWORD *)(v0 + 336);
  v9 = type metadata accessor for PrivateMLRequest.Response.AsyncIterator(0);
  *(_QWORD *)(v0 + 1080) = v9;
  v10 = *(int *)(v9 + 20);
  *(_DWORD *)(v0 + 92) = v10;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 1088) = v11;
  v11(v1, v8 + v10, v4);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v0 + 1096) = v12;
  v12(v5, v8, v7);
  v11(v2, v1, v4);
  v13 = sub_244AE4194();
  v14 = sub_244AE4368();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = *(_QWORD *)(v0 + 1064);
    v35 = *(_QWORD *)(v0 + 944);
    v36 = v9;
    v16 = *(_QWORD *)(v0 + 936);
    v37 = *(_QWORD *)(v0 + 792);
    v38 = *(_QWORD *)(v0 + 784);
    v39 = *(_QWORD *)(v0 + 928);
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v40 = v18;
    *(_DWORD *)v17 = 136315138;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v19 = v16;
    v20 = sub_244AE44C4();
    *(_QWORD *)(v0 + 328) = sub_244A80950(v20, v21, &v40);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v22 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v23 = v19;
    v9 = v36;
    v22(v15, v23);
    _os_log_impl(&dword_244A6B000, v13, v14, "%s waiting for next response data", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v18, -1, -1);
    MEMORY[0x24951E31C](v17, -1, -1);

    v24 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v24(v39, v38);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 928);
    v26 = *(_QWORD *)(v0 + 792);
    v27 = *(_QWORD *)(v0 + 784);
    v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 944) + 8);
    v22(*(_QWORD *)(v0 + 1064), *(_QWORD *)(v0 + 936));

    v24 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v24(v25, v27);
  }
  *(_QWORD *)(v0 + 1112) = v22;
  *(_QWORD *)(v0 + 1104) = v24;
  v28 = *(_QWORD *)(v0 + 336);
  v29 = *(int *)(v9 + 24);
  *(_DWORD *)(v0 + 1168) = v29;
  v30 = v28 + v29;
  v31 = sub_244AE3BC4();
  *(_QWORD *)(v0 + 1120) = v31;
  v32 = *(_QWORD *)(v31 - 8);
  *(_QWORD *)(v0 + 1128) = v32;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v22(*(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 936));
    sub_244A72890(v30, &qword_2573CFF18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, 1, 1, v31);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
  else
  {
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1136) = v34;
    *v34 = v0;
    v34[1] = sub_244A8C82C;
    return sub_244AE3BB8();
  }
}

uint64_t sub_244A8C82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[143] = a1;
  v4[144] = a2;
  v4[145] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244A8C8A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t);
  unint64_t v63;
  uint64_t v64;
  uint64_t v65[7];

  v1 = *(_QWORD *)(v0 + 1152);
  v2 = *(_QWORD *)(v0 + 936);
  if (v1 >> 60 == 15)
  {
    v3 = *(_QWORD *)(v0 + 1128);
    v4 = *(_QWORD *)(v0 + 1120);
    v5 = *(_QWORD *)(v0 + 336) + *(int *)(v0 + 1168);
    (*(void (**)(_QWORD, _QWORD))(v0 + 1112))(*(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 936));
    sub_244A72890(v5, &qword_2573CFF18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v5, 1, 1, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 1144);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1088);
    v9 = *(_QWORD *)(v0 + 1072);
    v10 = *(_QWORD *)(v0 + 1056);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1096))(*(_QWORD *)(v0 + 920), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 784));
    v8(v10, v9, v2);
    sub_244A93AB0(v7, v1);
    sub_244A81E68(v7, v1);
    v11 = sub_244AE4194();
    v12 = sub_244AE4368();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 1152);
    if (v13)
    {
      v15 = *(_QWORD *)(v0 + 1056);
      v62 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
      v63 = v14 >> 62;
      v16 = *(_QWORD *)(v0 + 936);
      v17 = swift_slowAlloc();
      v65[0] = swift_slowAlloc();
      *(_DWORD *)v17 = 136315394;
      sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v18 = sub_244AE44C4();
      *(_QWORD *)(v0 + 312) = sub_244A80950(v18, v19, v65);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      v62(v15, v16);
      *(_WORD *)(v17 + 12) = 2048;
      __asm { BR              X9 }
    }
    v20 = *(_QWORD *)(v0 + 1144);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 1104);
    v23 = *(_QWORD *)(v0 + 1056);
    v24 = *(_QWORD *)(v0 + 936);
    v25 = *(_QWORD *)(v0 + 920);
    v26 = *(_QWORD *)(v0 + 784);
    sub_244A81EAC(v20, v14);
    v21(v23, v24);
    sub_244A81EAC(v20, v14);

    v22(v25, v26);
    v27 = *(_QWORD *)(v0 + 1160);
    v28 = *(_QWORD *)(v0 + 1152);
    v29 = *(_QWORD *)(v0 + 1144);
    memset(v65, 0, 40);
    sub_244A81E68(v29, v28);
    sub_244AE3C18();
    sub_244A7DAA8(&qword_2573CFF40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE8D70);
    sub_244AE3D38();
    if (v27)
    {
      v30 = *(_QWORD *)(v0 + 1152);
      v31 = *(_QWORD *)(v0 + 1144);
      (*(void (**)(_QWORD, _QWORD))(v0 + 1112))(*(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 936));
      sub_244A81EAC(v31, v30);
    }
    else
    {
      v32 = *(_QWORD *)(v0 + 752);
      sub_244A7284C(*(_QWORD *)(v0 + 776), v32, &qword_2573CFF38);
      v33 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) != 1)
      {
        v50 = (char *)&loc_244A8D348 + *((int *)qword_244A90618 + swift_getEnumCaseMultiPayload());
        __asm { BR              X10 }
      }
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1088);
      v35 = *(_QWORD *)(v0 + 1072);
      v36 = *(_QWORD *)(v0 + 952);
      v37 = *(_QWORD *)(v0 + 936);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1096))(*(_QWORD *)(v0 + 800), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 784));
      v34(v36, v35, v37);
      v38 = sub_244AE4194();
      v39 = sub_244AE435C();
      v40 = os_log_type_enabled(v38, v39);
      v41 = *(void (**)(uint64_t, uint64_t))(v0 + 1104);
      v42 = *(_QWORD *)(v0 + 952);
      v43 = *(_QWORD *)(v0 + 936);
      v44 = *(_QWORD *)(v0 + 800);
      v45 = *(_QWORD *)(v0 + 784);
      if (v40)
      {
        v64 = *(_QWORD *)(v0 + 784);
        v61 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
        v46 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v65[0] = v47;
        *(_DWORD *)v46 = 136315138;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v48 = sub_244AE44C4();
        *(_QWORD *)(v0 + 288) = sub_244A80950(v48, v49, v65);
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v61(v42, v43);
        _os_log_impl(&dword_244A6B000, v38, v39, "%s received nil response type", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v47, -1, -1);
        MEMORY[0x24951E31C](v46, -1, -1);

        v41(v44, v64);
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v0 + 1112))(*(_QWORD *)(v0 + 952), *(_QWORD *)(v0 + 936));

        v41(v44, v45);
      }
      v51 = *(_QWORD *)(v0 + 1152);
      v52 = *(_QWORD *)(v0 + 1144);
      v53 = *(_QWORD *)(v0 + 1128);
      v54 = *(_QWORD *)(v0 + 1120);
      v55 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
      v56 = *(_QWORD *)(v0 + 1072);
      v57 = *(_QWORD *)(v0 + 936);
      v58 = *(_QWORD *)(v0 + 776);
      v59 = *(_QWORD *)(v0 + 336) + *(int *)(v0 + 1168);
      sub_244A72890(v59, &qword_2573CFF18);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v59, 1, 1, v54);
      sub_244A93AC4();
      swift_allocError();
      *(_OWORD *)v60 = 0u;
      *(_OWORD *)(v60 + 16) = 0u;
      *(_QWORD *)(v60 + 32) = 0;
      *(_BYTE *)(v60 + 40) = 2;
      swift_willThrow();
      sub_244A81EAC(v52, v51);
      sub_244A729C0(v58, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v55(v56, v57);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

void sub_244A8DA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void (*v17)(_QWORD, _QWORD);
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  void (*v52)(uint64_t, uint64_t);
  void (*v53)(uint64_t, _QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  _BOOL4 v81;
  void (*v82)(uint64_t, uint64_t);
  void (*v83)(uint64_t, _QWORD);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  void (*v148)(uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  BOOL v180;
  void (*v181)(uint64_t, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  NSObject *v188;
  os_log_type_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  void (*v202)(uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t (*v207)(uint64_t, uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t (*v210)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v5 - 144) = v2;
  *(_QWORD *)(v5 - 136) = v4;
  *(_QWORD *)(v5 - 256) = v0;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 1096);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 1088);
  v8 = *(_QWORD *)(v3 + 1072);
  v9 = *(_QWORD *)(v3 + 1024);
  v10 = *(_QWORD *)(v3 + 936);
  v11 = *(_QWORD *)(v3 + 888);
  v12 = *(_QWORD *)(v3 + 784);
  v13 = *(_QWORD *)(v3 + 336);
  sub_244A729FC(v1, *(_QWORD *)(v3 + 584), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
  v6(v11, v13, v12);
  v7(v9, v8, v10);
  v14 = sub_244AE4194();
  v15 = sub_244AE4368();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(void (**)(_QWORD, _QWORD))(v3 + 1112);
  v18 = *(void (**)(uint64_t, uint64_t))(v3 + 1104);
  v19 = *(_QWORD *)(v3 + 1024);
  v20 = *(_QWORD *)(v3 + 936);
  v21 = *(_QWORD *)(v3 + 888);
  v22 = *(_QWORD *)(v3 + 784);
  if (v16)
  {
    *(_QWORD *)(v5 - 176) = v22;
    *(_QWORD *)(v5 - 224) = v17;
    v23 = swift_slowAlloc();
    *(_QWORD *)(v5 - 200) = v18;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    *(_QWORD *)(v5 - 128) = v25;
    *(_DWORD *)v24 = 136315138;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v26 = sub_244AE44C4();
    **(_QWORD **)(v5 - 184) = sub_244A80950(v26, v27, (uint64_t *)(v5 - 128));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 - 224))(v19, v20);
    _os_log_impl(&dword_244A6B000, v14, v15, "%s received final response", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v25, -1, -1);
    MEMORY[0x24951E31C](v24, -1, -1);

    (*(void (**)(uint64_t, _QWORD))(v5 - 200))(v21, *(_QWORD *)(v5 - 176));
  }
  else
  {
    v17(*(_QWORD *)(v3 + 1024), *(_QWORD *)(v3 + 936));

    v18(v21, v22);
  }
  v28 = *(_QWORD *)(v3 + 568);
  v29 = *(_QWORD *)(v3 + 480);
  v30 = *(_QWORD *)(v3 + 488);
  v31 = *(_QWORD *)(v3 + 584) + *(int *)(*(_QWORD *)(v3 + 576) + 24);
  sub_244A7284C(v31, v28, &qword_2573CFF28);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  LODWORD(v29) = v32(v28, 1, v29);
  sub_244A72890(v28, &qword_2573CFF28);
  if ((_DWORD)v29 != 1)
  {
    v33 = *(_QWORD *)(v3 + 560);
    v34 = *(_QWORD *)(v3 + 480);
    sub_244A7284C(v31, v33, &qword_2573CFF28);
    if (v32(v33, 1, v34) == 1)
    {
      v35 = *(_QWORD *)(v3 + 520);
      v36 = *(_QWORD *)(v3 + 480);
      sub_244AE3C00();
      v37 = *(int *)(v36 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v38 = *(_QWORD *)(v3 + 560);
      *(_QWORD *)(v35 + v37) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v38, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v3 + 560), *(_QWORD *)(v3 + 520), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    }
    v39 = *(_QWORD *)(v3 + 520);
    sub_244A713E0(*(_QWORD *)(v3 + 336) + *(int *)(v3 + 92), *(_QWORD *)(v3 + 336));
    sub_244A729C0(v39, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
  }
  if (qword_2573CF960 != -1)
    swift_once();
  swift_beginAccess();
  v40 = unk_2573D28D0;
  v41 = *(_QWORD *)(v5 - 152);
  *(_OWORD *)v41 = xmmword_2573D28C0;
  *(_OWORD *)(v41 + 16) = v40;
  *(_BYTE *)(v41 + 32) = byte_2573D28E0;
  sub_244A7D760(v41);
  v42 = sub_244ADE91C();
  sub_244A7D790(v41);
  if ((v42 & 1) != 0)
  {
    v43 = *(_QWORD *)(v3 + 552);
    v44 = *(_QWORD *)(v3 + 480);
    sub_244A7284C(v31, v43, &qword_2573CFF28);
    LODWORD(v44) = v32(v43, 1, v44);
    sub_244A72890(v43, &qword_2573CFF28);
    v209 = v31;
    v207 = v32;
    if ((_DWORD)v44 == 1)
    {
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 1088);
      v46 = *(_QWORD *)(v3 + 1072);
      v47 = *(_QWORD *)(v3 + 1016);
      v48 = *(_QWORD *)(v3 + 936);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 1096))(*(_QWORD *)(v3 + 880), *(_QWORD *)(v3 + 336), *(_QWORD *)(v3 + 784));
      v45(v47, v46, v48);
      v49 = sub_244AE4194();
      v50 = sub_244AE435C();
      v51 = os_log_type_enabled(v49, v50);
      v52 = *(void (**)(uint64_t, uint64_t))(v3 + 1112);
      v53 = *(void (**)(uint64_t, _QWORD))(v3 + 1104);
      v54 = *(_QWORD *)(v3 + 1016);
      v55 = *(_QWORD *)(v3 + 936);
      v56 = *(_QWORD *)(v3 + 880);
      *(_QWORD *)(v5 - 152) = *(_QWORD *)(v3 + 784);
      if (v51)
      {
        *(_QWORD *)(v5 - 160) = v53;
        v57 = swift_slowAlloc();
        *(_QWORD *)(v5 - 168) = v56;
        v58 = (uint8_t *)v57;
        v59 = swift_slowAlloc();
        *(_QWORD *)(v5 - 128) = v59;
        *(_DWORD *)v58 = 136315138;
        *(_QWORD *)(v5 - 176) = v58 + 4;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v60 = sub_244AE44C4();
        **(_QWORD **)(v5 - 232) = sub_244A80950(v60, v61, (uint64_t *)(v5 - 128));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v52(v54, v55);
        _os_log_impl(&dword_244A6B000, v49, v50, "%s contains no debug information", v58, 0xCu);
        swift_arrayDestroy();
        v62 = v59;
        v32 = v207;
        MEMORY[0x24951E31C](v62, -1, -1);
        MEMORY[0x24951E31C](v58, -1, -1);

        (*(void (**)(_QWORD, _QWORD))(v5 - 160))(*(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 152));
      }
      else
      {
        v52(v54, v55);

        v53(v56, *(_QWORD *)(v5 - 152));
      }
    }
    v63 = *(_QWORD *)(v3 + 544);
    v64 = *(_QWORD *)(v3 + 480);
    sub_244A7284C(v31, v63, &qword_2573CFF28);
    if (v32(v63, 1, v64) == 1)
    {
      v65 = *(_QWORD *)(v3 + 512);
      v66 = *(_QWORD *)(v3 + 480);
      sub_244AE3C00();
      v67 = *(int *)(v66 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v68 = *(_QWORD *)(v3 + 544);
      *(_QWORD *)(v65 + v67) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v68, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v3 + 544), *(_QWORD *)(v3 + 512), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    }
    v69 = *(_QWORD *)(v3 + 512);
    v70 = *(_QWORD *)(v3 + 472);
    v71 = *(_QWORD *)(v3 + 480);
    v72 = *(_QWORD *)(v3 + 392);
    v73 = *(_QWORD *)(v3 + 400);
    v74 = *(_QWORD *)(v69 + *(int *)(v71 + 20))
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v74, v70, &qword_2573CF9E0);
    v210 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
    LODWORD(v72) = v210(v70, 1, v72);
    sub_244A72890(v70, &qword_2573CF9E0);
    sub_244A729C0(v69, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    v208 = v71;
    if ((_DWORD)v72 == 1)
    {
      v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 1088);
      v76 = *(_QWORD *)(v3 + 1072);
      v77 = *(_QWORD *)(v3 + 1008);
      v78 = *(_QWORD *)(v3 + 936);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 1096))(*(_QWORD *)(v3 + 872), *(_QWORD *)(v3 + 336), *(_QWORD *)(v3 + 784));
      v75(v77, v76, v78);
      v79 = sub_244AE4194();
      v80 = sub_244AE435C();
      v81 = os_log_type_enabled(v79, v80);
      v82 = *(void (**)(uint64_t, uint64_t))(v3 + 1112);
      v83 = *(void (**)(uint64_t, _QWORD))(v3 + 1104);
      v84 = *(_QWORD *)(v3 + 1008);
      v85 = *(_QWORD *)(v3 + 936);
      v86 = *(_QWORD *)(v3 + 872);
      *(_QWORD *)(v5 - 152) = *(_QWORD *)(v3 + 784);
      if (v81)
      {
        *(_QWORD *)(v5 - 160) = v83;
        v87 = swift_slowAlloc();
        *(_QWORD *)(v5 - 168) = v86;
        v88 = (uint8_t *)v87;
        v89 = swift_slowAlloc();
        *(_QWORD *)(v5 - 128) = v89;
        *(_DWORD *)v88 = 136315138;
        *(_QWORD *)(v5 - 176) = v88 + 4;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v90 = sub_244AE44C4();
        **(_QWORD **)(v5 - 136) = sub_244A80950(v90, v91, (uint64_t *)(v5 - 128));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v82(v84, v85);
        _os_log_impl(&dword_244A6B000, v79, v80, "%s contains no performance metrics", v88, 0xCu);
        swift_arrayDestroy();
        v92 = v89;
        v32 = v207;
        MEMORY[0x24951E31C](v92, -1, -1);
        MEMORY[0x24951E31C](v88, -1, -1);

        (*(void (**)(_QWORD, _QWORD))(v5 - 160))(*(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 152));
      }
      else
      {
        v82(v84, v85);

        v83(v86, *(_QWORD *)(v5 - 152));
      }
      v71 = v208;
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 1096))(*(_QWORD *)(v3 + 864), *(_QWORD *)(v3 + 336), *(_QWORD *)(v3 + 784));
    v93 = sub_244AE4194();
    v94 = sub_244AE4368();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v95 = 0;
      _os_log_impl(&dword_244A6B000, v93, v94, "Performance metrics for first 10 responses: ", v95, 2u);
      MEMORY[0x24951E31C](v95, -1, -1);
    }
    v96 = *(void (**)(uint64_t, uint64_t))(v3 + 1104);
    v97 = *(_QWORD *)(v3 + 864);
    v98 = *(_QWORD *)(v3 + 784);
    v99 = *(_QWORD *)(v3 + 536);
    v100 = *(_QWORD *)(v3 + 480);

    v96(v97, v98);
    sub_244A7284C(v31, v99, &qword_2573CFF28);
    if (v32(v99, 1, v100) == 1)
    {
      v101 = *(_QWORD *)(v3 + 504);
      sub_244AE3C00();
      v102 = *(int *)(v71 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v103 = *(_QWORD *)(v3 + 536);
      *(_QWORD *)(v101 + v102) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v103, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v3 + 536), *(_QWORD *)(v3 + 504), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    }
    v104 = *(_QWORD *)(v3 + 464);
    v105 = *(_QWORD *)(v3 + 392);
    v106 = *(_QWORD *)(*(_QWORD *)(v3 + 504) + *(int *)(v71 + 20))
         + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v106, v104, &qword_2573CF9E0);
    v107 = v210(v104, 1, v105);
    v108 = *(_QWORD *)(v3 + 464);
    v109 = *(_QWORD **)(v3 + 448);
    if (v107 == 1)
    {
      *v109 = 0;
      v109[1] = 0xE000000000000000;
      v110 = MEMORY[0x24BEE4AF8];
      v109[2] = 0;
      v109[3] = v110;
      sub_244AE3C00();
      sub_244A72890(v108, &qword_2573CF9E0);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v3 + 464), (uint64_t)v109, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v111 = *(_QWORD *)(v3 + 448);
    sub_244A729C0(*(_QWORD *)(v3 + 504), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    v112 = *(_QWORD *)(v111 + 24);
    swift_bridgeObjectRetain();
    sub_244A729C0(v111, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    if (*(_QWORD *)(v112 + 16) >= 0xAuLL)
      v114 = 10;
    else
      v114 = *(_QWORD *)(v112 + 16);
    if (v114)
    {
      v115 = *(_QWORD *)(v3 + 440);
      *(_QWORD *)(v5 - 200) = *(_QWORD *)(v3 + 432);
      *(_QWORD *)(v5 - 192) = v115;
      v116 = *(_QWORD *)(v3 + 400);
      v117 = v112 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
      v118 = *(_QWORD *)(v116 + 72);
      *(_QWORD *)(v5 - 144) = *(_QWORD *)(v3 + 1112);
      *(_QWORD *)(v5 - 136) = v118;
      *(_QWORD *)&v113 = 136315650;
      *(_OWORD *)(v5 - 224) = v113;
      *(_QWORD *)(v5 - 232) = MEMORY[0x24BEE4AD8] + 8;
      do
      {
        v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 1088);
        v125 = *(_QWORD *)(v3 + 1072);
        v126 = *(_QWORD *)(v3 + 1000);
        v127 = *(_QWORD *)(v3 + 936);
        v129 = *(_QWORD *)(v3 + 432);
        v128 = *(_QWORD *)(v3 + 440);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 1096))(*(_QWORD *)(v3 + 856), *(_QWORD *)(v3 + 336), *(_QWORD *)(v3 + 784));
        v124(v126, v125, v127);
        sub_244A72964(v117, v128, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A72964(v117, v129, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v130 = sub_244AE4194();
        v131 = sub_244AE4368();
        if (os_log_type_enabled(v130, v131))
        {
          v132 = *(_QWORD *)(v3 + 1112);
          v133 = *(_QWORD *)(v3 + 1104);
          v134 = *(_QWORD *)(v3 + 1000);
          v135 = *(_QWORD *)(v3 + 936);
          *(_QWORD *)(v5 - 152) = *(_QWORD *)(v3 + 856);
          *(_QWORD *)(v5 - 144) = v133;
          v136 = *(_QWORD *)(v3 + 784);
          *(_QWORD *)(v5 - 184) = *(_QWORD *)(v3 + 440);
          *(_QWORD *)(v5 - 176) = v132;
          *(_QWORD *)(v5 - 168) = *(_QWORD *)(v3 + 432);
          *(_QWORD *)(v5 - 160) = v136;
          v137 = swift_slowAlloc();
          v138 = swift_slowAlloc();
          *(_QWORD *)(v5 - 128) = v138;
          *(_DWORD *)v137 = *(_OWORD *)(v5 - 224);
          sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v139 = sub_244AE44C4();
          *(_QWORD *)(v137 + 4) = sub_244A80950(v139, v140, (uint64_t *)(v5 - 128));
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v5 - 176))(v134, v135);
          *(_WORD *)(v137 + 12) = 2080;
          v141 = *(uint64_t **)(v5 - 184);
          v142 = *v141;
          v143 = *(_QWORD *)(*(_QWORD *)(v5 - 192) + 8);
          swift_bridgeObjectRetain();
          *(_QWORD *)(v137 + 14) = sub_244A80950(v142, v143, (uint64_t *)(v5 - 128));
          swift_bridgeObjectRelease();
          sub_244A729C0((uint64_t)v141, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_WORD *)(v137 + 22) = 2048;
          v144 = *(_QWORD *)(*(_QWORD *)(v5 - 200) + 16);
          sub_244A729C0(*(_QWORD *)(v5 - 168), type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_QWORD *)(v137 + 24) = v144;
          _os_log_impl(&dword_244A6B000, v130, v131, "%s performance metrics: %s - %llu", (uint8_t *)v137, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x24951E31C](v138, -1, -1);
          MEMORY[0x24951E31C](v137, -1, -1);

          (*(void (**)(_QWORD, _QWORD))(v5 - 144))(*(_QWORD *)(v5 - 152), *(_QWORD *)(v5 - 160));
          *(_QWORD *)(v5 - 144) = *(_QWORD *)(v3 + 1112);
        }
        else
        {
          *(_QWORD *)(v5 - 152) = *(_QWORD *)(v3 + 1104);
          v119 = *(_QWORD *)(v3 + 1000);
          v120 = *(_QWORD *)(v3 + 936);
          v121 = *(_QWORD *)(v3 + 856);
          v122 = *(_QWORD *)(v3 + 784);
          v123 = *(_QWORD *)(v3 + 440);
          sub_244A729C0(*(_QWORD *)(v3 + 432), type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);

          sub_244A729C0(v123, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          (*(void (**)(uint64_t, uint64_t))(v5 - 144))(v119, v120);
          (*(void (**)(uint64_t, uint64_t))(v5 - 152))(v121, v122);
        }
        v117 += *(_QWORD *)(v5 - 136);
        --v114;
      }
      while (v114);
      swift_bridgeObjectRelease();
      v32 = v207;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 1096))(*(_QWORD *)(v3 + 848), *(_QWORD *)(v3 + 336), *(_QWORD *)(v3 + 784));
    v145 = sub_244AE4194();
    v146 = sub_244AE4368();
    if (os_log_type_enabled(v145, v146))
    {
      v147 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v147 = 0;
      _os_log_impl(&dword_244A6B000, v145, v146, "Performance metrics for last 10 responses: ", v147, 2u);
      MEMORY[0x24951E31C](v147, -1, -1);
    }
    v148 = *(void (**)(uint64_t, uint64_t))(v3 + 1104);
    v149 = *(_QWORD *)(v3 + 848);
    v150 = *(_QWORD *)(v3 + 784);
    v151 = *(_QWORD *)(v3 + 528);
    v152 = *(_QWORD *)(v3 + 480);

    v148(v149, v150);
    sub_244A7284C(v209, v151, &qword_2573CFF28);
    if (v32(v151, 1, v152) == 1)
    {
      v153 = *(_QWORD *)(v3 + 496);
      sub_244AE3C00();
      v154 = v208;
      v155 = *(int *)(v208 + 20);
      if (qword_2573CF858 != -1)
        swift_once();
      v156 = *(_QWORD *)(v3 + 528);
      *(_QWORD *)(v153 + v155) = qword_2573D04C8;
      swift_retain();
      sub_244A72890(v156, &qword_2573CFF28);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v3 + 528), *(_QWORD *)(v3 + 496), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
      v154 = v208;
    }
    v157 = *(_QWORD *)(v3 + 456);
    v158 = *(_QWORD *)(v3 + 392);
    v159 = *(_QWORD *)(*(_QWORD *)(v3 + 496) + *(int *)(v154 + 20))
         + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v159, v157, &qword_2573CF9E0);
    v160 = v210(v157, 1, v158);
    v161 = *(_QWORD *)(v3 + 456);
    v162 = *(_QWORD **)(v3 + 424);
    if (v160 == 1)
    {
      *v162 = 0;
      v162[1] = 0xE000000000000000;
      v163 = MEMORY[0x24BEE4AF8];
      v162[2] = 0;
      v162[3] = v163;
      sub_244AE3C00();
      sub_244A72890(v161, &qword_2573CF9E0);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v3 + 456), (uint64_t)v162, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v164 = *(_QWORD *)(v3 + 424);
    sub_244A729C0(*(_QWORD *)(v3 + 496), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    v165 = *(_QWORD *)(v164 + 24);
    swift_bridgeObjectRetain();
    sub_244A729C0(v164, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    v167 = *(_QWORD *)(v165 + 16);
    v168 = v167 - 10;
    if (v167 < 0xA)
      v168 = 0;
    if (v168 != v167)
    {
      v169 = *(_QWORD *)(v3 + 416);
      *(_QWORD *)(v5 - 232) = *(_QWORD *)(v3 + 408);
      *(_QWORD *)(v5 - 224) = v169;
      v170 = *(_QWORD *)(v3 + 400);
      *(_QWORD *)(v5 - 152) = v170;
      *(_QWORD *)(v5 - 160) = v165
                            + ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80));
      *(_QWORD *)(v5 - 168) = *(_QWORD *)(v3 + 1112);
      v171 = 10;
      if (v167 < 0xA)
        v171 = v167;
      v172 = -v171;
      *(_QWORD *)&v166 = 136315650;
      *(_OWORD *)(v5 - 256) = v166;
      *(_QWORD *)(v5 - 144) = v167;
      do
      {
        *(_QWORD *)(v5 - 136) = v172;
        if (!__CFADD__(v167, v172))
        {
          __break(1u);
          JUMPOUT(0x244A9058CLL);
        }
        v181 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 1088);
        v182 = *(_QWORD *)(v3 + 1072);
        v183 = *(_QWORD *)(v3 + 992);
        v184 = *(_QWORD *)(v3 + 936);
        v186 = *(_QWORD *)(v3 + 408);
        v185 = *(_QWORD *)(v3 + 416);
        v187 = *(_QWORD *)(v5 - 160) + *(_QWORD *)(*(_QWORD *)(v5 - 152) + 72) * (v167 + v172);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 1096))(*(_QWORD *)(v3 + 840), *(_QWORD *)(v3 + 336), *(_QWORD *)(v3 + 784));
        v181(v183, v182, v184);
        sub_244A72964(v187, v185, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A72964(v187, v186, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v188 = sub_244AE4194();
        v189 = sub_244AE4368();
        if (os_log_type_enabled(v188, v189))
        {
          v190 = *(_QWORD *)(v3 + 1104);
          *(_QWORD *)(v5 - 200) = *(_QWORD *)(v3 + 1112);
          *(_QWORD *)(v5 - 192) = v190;
          v191 = *(_QWORD *)(v3 + 992);
          v192 = *(_QWORD *)(v3 + 936);
          v193 = *(_QWORD *)(v3 + 840);
          *(_QWORD *)(v5 - 176) = *(_QWORD *)(v3 + 784);
          *(_QWORD *)(v5 - 168) = v193;
          v194 = *(uint64_t **)(v3 + 416);
          *(_QWORD *)(v5 - 184) = *(_QWORD *)(v3 + 408);
          v195 = swift_slowAlloc();
          v196 = swift_slowAlloc();
          *(_QWORD *)(v5 - 128) = v196;
          *(_DWORD *)v195 = *(_OWORD *)(v5 - 256);
          sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v197 = sub_244AE44C4();
          *(_QWORD *)(v195 + 4) = sub_244A80950(v197, v198, (uint64_t *)(v5 - 128));
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v5 - 200))(v191, v192);
          *(_WORD *)(v195 + 12) = 2080;
          v199 = *v194;
          v200 = *(_QWORD *)(*(_QWORD *)(v5 - 224) + 8);
          swift_bridgeObjectRetain();
          *(_QWORD *)(v195 + 14) = sub_244A80950(v199, v200, (uint64_t *)(v5 - 128));
          swift_bridgeObjectRelease();
          sub_244A729C0((uint64_t)v194, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_WORD *)(v195 + 22) = 2048;
          v201 = *(_QWORD *)(*(_QWORD *)(v5 - 232) + 16);
          sub_244A729C0(*(_QWORD *)(v5 - 184), type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          *(_QWORD *)(v195 + 24) = v201;
          _os_log_impl(&dword_244A6B000, v188, v189, "%s performance metrics: %s - %llu", (uint8_t *)v195, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x24951E31C](v196, -1, -1);
          MEMORY[0x24951E31C](v195, -1, -1);

          (*(void (**)(_QWORD, _QWORD))(v5 - 192))(*(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 176));
          *(_QWORD *)(v5 - 168) = *(_QWORD *)(v3 + 1112);
        }
        else
        {
          v173 = *(void (**)(uint64_t, uint64_t))(v3 + 1104);
          v174 = *(_QWORD *)(v3 + 992);
          v175 = *(_QWORD *)(v3 + 936);
          v176 = *(_QWORD *)(v3 + 840);
          v177 = *(_QWORD *)(v3 + 784);
          v178 = *(_QWORD *)(v3 + 416);
          sub_244A729C0(*(_QWORD *)(v3 + 408), type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);

          sub_244A729C0(v178, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
          (*(void (**)(uint64_t, uint64_t))(v5 - 168))(v174, v175);
          v173(v176, v177);
        }
        v167 = *(_QWORD *)(v5 - 144);
        v179 = *(_QWORD *)(v5 - 136);
        v180 = __CFADD__(v179, 1);
        v172 = v179 + 1;
      }
      while (!v180);
    }
    sub_244A81EAC(*(_QWORD *)(v3 + 1144), *(_QWORD *)(v3 + 1152));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_244A81EAC(*(_QWORD *)(v3 + 1144), *(_QWORD *)(v3 + 1152));
  }
  v202 = *(void (**)(uint64_t, uint64_t))(v3 + 1112);
  v203 = *(_QWORD *)(v3 + 1072);
  v204 = *(_QWORD *)(v3 + 936);
  v205 = *(_QWORD *)(v3 + 776);
  v206 = *(_QWORD *)(v3 + 336) + *(int *)(v3 + 1168);
  sub_244A729C0(*(_QWORD *)(v3 + 584), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
  sub_244A729C0(v205, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
  v202(v203, v204);
  sub_244A72890(v206, &qword_2573CFF18);
  JUMPOUT(0x244A8C918);
}

void sub_244A8DC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  void (*v70)(uint64_t, uint64_t);
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD, _QWORD);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t v92;
  NSObject *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(_QWORD, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  os_log_type_t v128;
  NSObject *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v3 = *(_QWORD *)(v1 + 384);
  v4 = *(_QWORD *)(v1 + 344);
  sub_244A729FC(v0, v3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
  v5 = v3 + *(int *)(v4 + 20);
  if ((*(_BYTE *)(v5 + 9) & 1) != 0)
    goto LABEL_2;
  v25 = *(_QWORD *)v5;
  if ((*(_BYTE *)(v5 + 8) & 1) != 0)
  {
    if (!v25)
    {
LABEL_2:
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1088);
      v7 = *(_QWORD *)(v1 + 1072);
      v8 = *(_QWORD *)(v1 + 984);
      v9 = *(_QWORD *)(v1 + 936);
      v11 = *(_QWORD *)(v1 + 376);
      v10 = *(_QWORD *)(v1 + 384);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 1096))(*(_QWORD *)(v1 + 832), *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 784));
      v6(v8, v7, v9);
      sub_244A72964(v10, v11, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v12 = sub_244AE4194();
      v13 = sub_244AE4368();
      if (os_log_type_enabled(v12, v13))
      {
        *(_QWORD *)(v2 - 136) = v12;
        v14 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
        v15 = *(_QWORD *)(v1 + 984);
        v16 = *(_QWORD *)(v1 + 936);
        v17 = *(_QWORD *)(v1 + 376);
        *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 344);
        *(_QWORD *)(v2 - 152) = v17;
        v18 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        *(_QWORD *)(v2 - 144) = v19;
        *(_QWORD *)(v2 - 128) = v19;
        *(_DWORD *)v18 = 136315394;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v20 = sub_244AE44C4();
        *(_QWORD *)(v1 + 232) = sub_244A80950(v20, v21, (uint64_t *)(v2 - 128));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v14(v15, v16);
        *(_WORD *)(v18 + 12) = 2080;
        v22 = (uint64_t *)(*(_QWORD *)(v2 - 152) + *(int *)(*(_QWORD *)(v2 - 160) + 24));
        if (v22[1])
        {
          v23 = *v22;
          v24 = v22[1];
        }
        else
        {
          v23 = 0;
          v24 = 0xE000000000000000;
        }
        v86 = *(_QWORD *)(v1 + 1152);
        *(_QWORD *)(v2 - 192) = *(_QWORD *)(v1 + 1144);
        *(_QWORD *)(v2 - 184) = v86;
        v87 = *(_QWORD *)(v1 + 1112);
        v88 = *(void (**)(_QWORD, _QWORD))(v1 + 1104);
        *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 1072);
        *(_QWORD *)(v2 - 152) = v87;
        v89 = *(_QWORD *)(v1 + 936);
        *(_QWORD *)(v2 - 200) = *(_QWORD *)(v1 + 832);
        *(_QWORD *)(v2 - 232) = *(_QWORD *)(v1 + 784);
        *(_QWORD *)(v2 - 176) = *(_QWORD *)(v1 + 776);
        *(_QWORD *)(v2 - 168) = v89;
        v90 = *(_QWORD *)(v1 + 376);
        v91 = *(_QWORD *)(v1 + 384);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v1 + 224) = sub_244A80950(v23, v24, (uint64_t *)(v2 - 128));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        sub_244A729C0(v90, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        v92 = v13;
        v93 = *(NSObject **)(v2 - 136);
        _os_log_impl(&dword_244A6B000, v93, v92, "%s received status response not set. %s", (uint8_t *)v18, 0x16u);
        v94 = *(_QWORD *)(v2 - 144);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v94, -1, -1);
        MEMORY[0x24951E31C](v18, -1, -1);

        sub_244A81EAC(*(_QWORD *)(v2 - 192), *(_QWORD *)(v2 - 184));
        v88(*(_QWORD *)(v2 - 200), *(_QWORD *)(v2 - 232));
        sub_244A729C0(v91, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        sub_244A729C0(*(_QWORD *)(v2 - 176), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
        (*(void (**)(_QWORD, _QWORD))(v2 - 152))(*(_QWORD *)(v2 - 160), *(_QWORD *)(v2 - 168));
        goto LABEL_38;
      }
      v31 = *(_QWORD *)(v1 + 1144);
      v32 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
      v33 = *(_QWORD *)(v1 + 1104);
      *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 1152);
      *(_QWORD *)(v2 - 152) = v33;
      v34 = *(_QWORD *)(v1 + 1072);
      v35 = *(_QWORD *)(v1 + 984);
      v36 = *(_QWORD *)(v1 + 936);
      v37 = *(_QWORD *)(v1 + 832);
      v38 = *(_QWORD *)(v1 + 784);
      *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 776);
      *(_QWORD *)(v2 - 136) = v34;
      v39 = *(_QWORD *)(v1 + 376);
      v40 = *(_QWORD *)(v1 + 384);

      sub_244A729C0(v39, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v32(v35, v36);
      v41 = v31;
      goto LABEL_11;
    }
    if (v25 == 1)
    {
LABEL_14:
      v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1088);
      v43 = *(_QWORD *)(v1 + 1072);
      v44 = *(_QWORD *)(v1 + 976);
      v45 = *(_QWORD *)(v1 + 936);
      v46 = *(_QWORD *)(v1 + 384);
      v47 = *(_QWORD *)(v1 + 368);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 1096))(*(_QWORD *)(v1 + 824), *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 784));
      v42(v44, v43, v45);
      sub_244A72964(v46, v47, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v48 = sub_244AE4194();
      v49 = sub_244AE4368();
      if (os_log_type_enabled(v48, v49))
      {
        *(_QWORD *)(v2 - 136) = v48;
        v50 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
        v51 = *(_QWORD *)(v1 + 976);
        v52 = *(_QWORD *)(v1 + 936);
        *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 368);
        v53 = *(_QWORD *)(v1 + 344);
        v54 = swift_slowAlloc();
        v55 = swift_slowAlloc();
        *(_QWORD *)(v2 - 128) = v55;
        *(_DWORD *)v54 = 136315394;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v56 = sub_244AE44C4();
        *(_QWORD *)(v1 + 200) = sub_244A80950(v56, v57, (uint64_t *)(v2 - 128));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v50(v51, v52);
        *(_WORD *)(v54 + 12) = 2080;
        v58 = (uint64_t *)(*(_QWORD *)(v2 - 144) + *(int *)(v53 + 24));
        if (v58[1])
        {
          v59 = *v58;
          v60 = v58[1];
        }
        else
        {
          v59 = 0;
          v60 = 0xE000000000000000;
        }
        v121 = *(_QWORD *)(v1 + 1152);
        v122 = *(_QWORD *)(v1 + 1144);
        v123 = *(_QWORD *)(v1 + 1112);
        v124 = *(void (**)(_QWORD, uint64_t))(v1 + 1104);
        *(_QWORD *)(v2 - 152) = *(_QWORD *)(v1 + 1072);
        *(_QWORD *)(v2 - 144) = v123;
        *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 936);
        *(_QWORD *)(v2 - 200) = *(_QWORD *)(v1 + 824);
        *(_QWORD *)(v2 - 192) = v122;
        v125 = *(_QWORD *)(v1 + 784);
        v126 = *(_QWORD *)(v1 + 776);
        *(_QWORD *)(v2 - 176) = v121;
        *(_QWORD *)(v2 - 168) = v126;
        *(_QWORD *)(v2 - 184) = *(_QWORD *)(v1 + 384);
        v127 = *(_QWORD *)(v1 + 368);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v1 + 208) = sub_244A80950(v59, v60, (uint64_t *)(v2 - 128));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        sub_244A729C0(v127, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        v128 = v49;
        v129 = *(NSObject **)(v2 - 136);
        _os_log_impl(&dword_244A6B000, v129, v128, "%s received status response ok. %s", (uint8_t *)v54, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v55, -1, -1);
        MEMORY[0x24951E31C](v54, -1, -1);

        sub_244A81EAC(*(_QWORD *)(v2 - 192), *(_QWORD *)(v2 - 176));
        v124(*(_QWORD *)(v2 - 200), v125);
        sub_244A729C0(*(_QWORD *)(v2 - 184), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        sub_244A729C0(*(_QWORD *)(v2 - 168), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
        (*(void (**)(_QWORD, _QWORD))(v2 - 144))(*(_QWORD *)(v2 - 152), *(_QWORD *)(v2 - 160));
LABEL_38:
        JUMPOUT(0x244A8C928);
      }
      v95 = *(_QWORD *)(v1 + 1144);
      v32 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
      v96 = *(_QWORD *)(v1 + 1104);
      *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 1152);
      *(_QWORD *)(v2 - 152) = v96;
      v97 = *(_QWORD *)(v1 + 1072);
      v98 = *(_QWORD *)(v1 + 976);
      v36 = *(_QWORD *)(v1 + 936);
      v37 = *(_QWORD *)(v1 + 824);
      v38 = *(_QWORD *)(v1 + 784);
      *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 776);
      *(_QWORD *)(v2 - 136) = v97;
      v40 = *(_QWORD *)(v1 + 384);
      v99 = *(_QWORD *)(v1 + 368);

      sub_244A729C0(v99, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v32(v98, v36);
      v41 = v95;
LABEL_11:
      sub_244A81EAC(v41, *(_QWORD *)(v2 - 160));
      (*(void (**)(uint64_t, uint64_t))(v2 - 152))(v37, v38);
      sub_244A729C0(v40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A729C0(*(_QWORD *)(v2 - 144), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
      v32(*(_QWORD *)(v2 - 136), v36);
      goto LABEL_38;
    }
  }
  else if (v25 != 2)
  {
    if (v25 != 1)
    {
      if (v25)
      {
        v26 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
        v27 = *(_QWORD *)(v1 + 1072);
        v28 = *(_QWORD *)(v1 + 936);
        v29 = *(_QWORD *)(v1 + 776);
        v30 = *(_QWORD *)(v1 + 384);
        sub_244A81EAC(*(_QWORD *)(v1 + 1144), *(_QWORD *)(v1 + 1152));
        sub_244A729C0(v30, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
        sub_244A729C0(v29, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
        v26(v27, v28);
        goto LABEL_38;
      }
      goto LABEL_2;
    }
    goto LABEL_14;
  }
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1088);
  v62 = *(_QWORD *)(v1 + 1072);
  v63 = *(_QWORD *)(v1 + 968);
  v64 = *(_QWORD *)(v1 + 936);
  v65 = *(_QWORD *)(v1 + 384);
  v66 = *(_QWORD *)(v1 + 360);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 1096))(*(_QWORD *)(v1 + 816), *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 784));
  v61(v63, v62, v64);
  sub_244A72964(v65, v66, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
  v67 = sub_244AE4194();
  v68 = sub_244AE435C();
  v69 = os_log_type_enabled(v67, v68);
  v70 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
  v71 = *(void (**)(uint64_t, uint64_t))(v1 + 1104);
  v72 = *(_QWORD *)(v1 + 968);
  v73 = *(_QWORD *)(v1 + 936);
  v74 = *(_QWORD *)(v1 + 816);
  v75 = *(_QWORD *)(v1 + 784);
  v76 = *(_QWORD *)(v1 + 360);
  if (v69)
  {
    v77 = *(_QWORD *)(v1 + 344);
    *(_QWORD *)(v2 - 176) = *(_QWORD *)(v1 + 352);
    *(_QWORD *)(v2 - 168) = v77;
    v78 = swift_slowAlloc();
    *(_QWORD *)(v2 - 136) = v75;
    v79 = v78;
    v80 = swift_slowAlloc();
    *(_QWORD *)(v2 - 160) = v80;
    *(_QWORD *)(v2 - 128) = v80;
    *(_DWORD *)v79 = 136315394;
    *(_QWORD *)(v2 - 144) = v74;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v81 = sub_244AE44C4();
    *(_QWORD *)(v2 - 152) = v71;
    *(_QWORD *)(v1 + 216) = sub_244A80950(v81, v82, (uint64_t *)(v2 - 128));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v70(v72, v73);
    *(_WORD *)(v79 + 12) = 2080;
    sub_244A72964(v76, *(_QWORD *)(v2 - 176), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    v83 = sub_244AE423C();
    *(_QWORD *)(v1 + 192) = sub_244A80950(v83, v84, (uint64_t *)(v2 - 128));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v76, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    _os_log_impl(&dword_244A6B000, v67, v68, "%s received status response error: %s)", (uint8_t *)v79, 0x16u);
    v85 = *(_QWORD *)(v2 - 160);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v85, -1, -1);
    MEMORY[0x24951E31C](v79, -1, -1);

    (*(void (**)(_QWORD, _QWORD))(v2 - 152))(*(_QWORD *)(v2 - 144), *(_QWORD *)(v2 - 136));
  }
  else
  {
    v70(*(_QWORD *)(v1 + 968), *(_QWORD *)(v1 + 936));
    sub_244A729C0(v76, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);

    v71(v74, v75);
  }
  v100 = *(_QWORD *)(v1 + 384);
  v101 = *(int **)(v1 + 344);
  v102 = v101[6];
  v103 = (uint64_t *)(v100 + v101[7]);
  v104 = v103[1];
  v105 = (uint64_t *)(v100 + v102);
  v106 = *(_QWORD *)(v100 + v102 + 8);
  if (v104)
  {
    v107 = *v103;
    if (v106)
    {
      v108 = *v105;
      v109 = *(_QWORD *)(v100 + v102 + 8);
    }
    else
    {
      v108 = 0;
      v109 = 0xE000000000000000;
    }
    v112 = *(_QWORD *)(v1 + 1152);
    v113 = *(_QWORD *)(v1 + 1144);
    v114 = *(_QWORD *)(v1 + 1112);
    *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 1072);
    *(_QWORD *)(v2 - 136) = v114;
    *(_QWORD *)(v2 - 152) = *(_QWORD *)(v1 + 936);
    v115 = *(_QWORD *)(v1 + 776);
    *(_QWORD *)(v2 - 168) = v112;
    *(_QWORD *)(v2 - 160) = v115;
    v116 = (int *)(v100 + v101[8]);
    if (*((_BYTE *)v116 + 4))
      v117 = 0;
    else
      v117 = *v116;
    sub_244A93AC4();
    swift_allocError();
    *(_QWORD *)v118 = v108;
    *(_QWORD *)(v118 + 8) = v109;
    *(_QWORD *)(v118 + 16) = v107;
    *(_QWORD *)(v118 + 24) = v104;
    *(_QWORD *)(v118 + 32) = v117;
    *(_BYTE *)(v118 + 40) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_244A81EAC(v113, *(_QWORD *)(v2 - 168));
    sub_244A729C0(v100, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    sub_244A729C0(*(_QWORD *)(v2 - 160), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
    v120 = *(_QWORD *)(v2 - 152);
    v119 = *(_QWORD *)(v2 - 144);
  }
  else
  {
    if (v106)
    {
      v110 = *v105;
      v111 = *(_QWORD *)(v100 + v102 + 8);
    }
    else
    {
      v110 = 0;
      v111 = 0xE000000000000000;
    }
    v130 = *(_QWORD *)(v1 + 1152);
    v131 = *(_QWORD *)(v1 + 1144);
    v132 = *(_QWORD *)(v1 + 1112);
    *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 1072);
    *(_QWORD *)(v2 - 136) = v132;
    v133 = *(_QWORD *)(v1 + 936);
    v134 = *(_QWORD *)(v1 + 776);
    sub_244A93AC4();
    swift_allocError();
    *(_QWORD *)v135 = v110;
    *(_QWORD *)(v135 + 8) = v111;
    *(_QWORD *)(v135 + 24) = 0;
    *(_QWORD *)(v135 + 32) = 0;
    *(_QWORD *)(v135 + 16) = 0;
    *(_BYTE *)(v135 + 40) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_244A81EAC(v131, v130);
    sub_244A729C0(v100, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    sub_244A729C0(v134, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
    v119 = *(_QWORD *)(v2 - 144);
    v120 = v133;
  }
  (*(void (**)(uint64_t, uint64_t))(v2 - 136))(v119, v120);
  JUMPOUT(0x244A8D614);
}

void sub_244A8DD80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  _BOOL4 v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  _BOOL4 v78;
  void (*v79)(uint64_t, uint64_t);
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  *(_QWORD *)(v4 - 184) = v3;
  *(_QWORD *)(v4 - 168) = v2;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1096);
  v6 = *(_QWORD *)(v1 + 1088);
  v7 = *(_QWORD *)(v1 + 1072);
  v8 = *(_QWORD *)(v1 + 1048);
  v9 = *(_QWORD *)(v1 + 936);
  v10 = *(_QWORD *)(v1 + 912);
  v11 = *(_QWORD *)(v1 + 784);
  v12 = *(_QWORD *)(v1 + 744);
  *(_QWORD *)(v4 - 160) = *(_QWORD *)(v1 + 736);
  *(_QWORD *)(v4 - 152) = v6;
  v13 = *(_QWORD *)(v1 + 336);
  sub_244A729FC(v0, v12, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  v5(v10, v13, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 152))(v8, v7, v9);
  sub_244A72964(v12, *(_QWORD *)(v4 - 160), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  v14 = sub_244AE4194();
  v15 = sub_244AE4368();
  v16 = v15;
  v17 = os_log_type_enabled(v14, v15);
  v18 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
  v19 = *(void (**)(uint64_t, uint64_t))(v1 + 1104);
  v20 = *(_QWORD *)(v1 + 1048);
  v21 = *(_QWORD *)(v1 + 936);
  v22 = *(_QWORD *)(v1 + 912);
  v23 = *(_QWORD *)(v1 + 784);
  v24 = *(_QWORD *)(v1 + 736);
  if (v17)
  {
    *(_QWORD *)(v4 - 232) = *(_QWORD *)(v1 + 728);
    v25 = swift_slowAlloc();
    *(_DWORD *)(v4 - 224) = v16;
    v26 = v25;
    v27 = swift_slowAlloc();
    *(_QWORD *)(v4 - 160) = v27;
    *(_QWORD *)(v4 - 128) = v27;
    *(_DWORD *)v26 = 136315394;
    *(_QWORD *)(v4 - 152) = v19;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v28 = sub_244AE44C4();
    *(_QWORD *)(v4 - 192) = v22;
    *(_QWORD *)(v1 + 296) = sub_244A80950(v28, v29, (uint64_t *)(v4 - 128));
    *(_QWORD *)(v4 - 144) = v23;
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v18(v20, v21);
    *(_WORD *)(v26 + 12) = 2080;
    sub_244A7DAA8(&qword_2573CFF60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE8CF8);
    v30 = sub_244AE3D5C();
    *(_QWORD *)(v1 + 304) = sub_244A80950(v30, v31, (uint64_t *)(v4 - 128));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A729C0(v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
    _os_log_impl(&dword_244A6B000, v14, (os_log_type_t)*(_DWORD *)(v4 - 224), "%s received inference environment response %s", (uint8_t *)v26, 0x16u);
    v32 = *(_QWORD *)(v4 - 160);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v32, -1, -1);
    MEMORY[0x24951E31C](v26, -1, -1);

    (*(void (**)(_QWORD, _QWORD))(v4 - 152))(*(_QWORD *)(v4 - 192), *(_QWORD *)(v4 - 144));
  }
  else
  {
    v18(*(_QWORD *)(v1 + 1048), *(_QWORD *)(v1 + 936));
    sub_244A729C0(v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);

    v19(v22, v23);
  }
  v33 = *(_QWORD *)(v1 + 720);
  v34 = *(_QWORD *)(v1 + 664);
  v35 = *(_QWORD *)(v1 + 656);
  v36 = *(_QWORD *)(v1 + 744) + *(int *)(*(_QWORD *)(v1 + 728) + 20);
  sub_244A7284C(v36, v33, &qword_2573CFF30);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  LODWORD(v35) = v37(v33, 1, v35);
  sub_244A72890(v33, &qword_2573CFF30);
  if ((_DWORD)v35 != 1)
  {
    v38 = *(_QWORD *)(v1 + 712);
    v39 = *(_QWORD *)(v1 + 656);
    sub_244A7284C(v36, v38, &qword_2573CFF30);
    v40 = v37(v38, 1, v39);
    v41 = *(_QWORD *)(v1 + 712);
    v42 = *(_QWORD *)(v1 + 688);
    if (v40 == 1)
    {
      v43 = *(int **)(v1 + 656);
      v44 = *(_QWORD *)(v1 + 616);
      *(_QWORD *)(v4 - 136) = *(_QWORD *)(v1 + 608);
      sub_244AE3C00();
      v45 = v42 + v43[5];
      v46 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
      v47(v45, 1, 1, v46);
      v47(v42 + v43[6], 1, 1, v46);
      v47(v42 + v43[7], 1, 1, v46);
      v47(v42 + v43[8], 1, 1, v46);
      v48 = (_QWORD *)(v42 + v43[9]);
      *v48 = 0;
      v48[1] = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v44 + 56))(v42 + v43[10], 1, 1, *(_QWORD *)(v4 - 136));
      sub_244A72890(v41, &qword_2573CFF30);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v1 + 712), *(_QWORD *)(v1 + 688), type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    }
    v49 = *(_QWORD *)(v1 + 688);
    v50 = *(_QWORD *)(v1 + 336) + *(int *)(v1 + 92);
    sub_244AE41D0();
    swift_allocObject();
    sub_244AE41C4();
    v51 = swift_task_alloc();
    *(_QWORD *)(v51 + 16) = v50;
    *(_QWORD *)(v51 + 24) = v49;
    sub_244AE41B8();
    v52 = *(_QWORD *)(v1 + 648);
    swift_release();
    swift_task_dealloc();
    v53 = sub_244AE3F0C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
    v54 = *(_QWORD *)(v1 + 704);
    v55 = *(_QWORD *)(v1 + 688);
    v56 = *(_QWORD *)(v1 + 656);
    sub_244A72890(*(_QWORD *)(v1 + 648), &qword_2573CF9D8);
    sub_244A729C0(v55, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    sub_244A7284C(v36, v54, &qword_2573CFF30);
    v57 = v37(v54, 1, v56);
    v58 = *(_QWORD *)(v1 + 704);
    v59 = *(_QWORD *)(v1 + 680);
    if (v57 == 1)
    {
      v60 = *(int **)(v1 + 656);
      v61 = *(_QWORD *)(v1 + 616);
      *(_QWORD *)(v4 - 136) = *(_QWORD *)(v1 + 608);
      sub_244AE3C00();
      v62 = v59 + v60[5];
      v63 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
      v64(v62, 1, 1, v63);
      v64(v59 + v60[6], 1, 1, v63);
      v64(v59 + v60[7], 1, 1, v63);
      v64(v59 + v60[8], 1, 1, v63);
      v65 = (_QWORD *)(v59 + v60[9]);
      *v65 = 0;
      v65[1] = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v61 + 56))(v59 + v60[10], 1, 1, *(_QWORD *)(v4 - 136));
      sub_244A72890(v58, &qword_2573CFF30);
    }
    else
    {
      sub_244A729FC(*(_QWORD *)(v1 + 704), *(_QWORD *)(v1 + 680), type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    }
    v66 = *(_QWORD *)(v1 + 680);
    v67 = *(_QWORD *)(v1 + 656);
    v68 = *(_QWORD *)(v1 + 640);
    v69 = *(_QWORD *)(v1 + 616);
    v70 = *(_QWORD *)(v1 + 608);
    sub_244A7284C(v66 + *(int *)(v67 + 40), v68, &qword_2573CF998);
    v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
    LODWORD(v70) = v71(v68, 1, v70);
    sub_244A72890(v68, &qword_2573CF998);
    sub_244A729C0(v66, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    if ((_DWORD)v70 == 1)
    {
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1088);
      v73 = *(_QWORD *)(v1 + 1072);
      v74 = *(_QWORD *)(v1 + 1040);
      v75 = *(_QWORD *)(v1 + 936);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 1096))(*(_QWORD *)(v1 + 904), *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 784));
      v72(v74, v73, v75);
      v76 = sub_244AE4194();
      v77 = sub_244AE4368();
      v78 = os_log_type_enabled(v76, v77);
      v79 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
      v80 = *(void (**)(uint64_t, uint64_t))(v1 + 1104);
      v81 = *(_QWORD *)(v1 + 1040);
      v82 = *(_QWORD *)(v1 + 936);
      v83 = *(_QWORD *)(v1 + 904);
      v84 = *(_QWORD *)(v1 + 784);
      if (v78)
      {
        *(_QWORD *)(v4 - 136) = v80;
        v85 = swift_slowAlloc();
        *(_QWORD *)(v4 - 144) = v83;
        v86 = (uint8_t *)v85;
        v87 = swift_slowAlloc();
        *(_QWORD *)(v4 - 152) = v84;
        v88 = v87;
        *(_QWORD *)(v4 - 128) = v87;
        *(_DWORD *)v86 = 136315138;
        *(_QWORD *)(v4 - 160) = v86 + 4;
        sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v89 = sub_244AE44C4();
        **(_QWORD **)(v4 - 176) = sub_244A80950(v89, v90, (uint64_t *)(v4 - 128));
        sub_244AE43B0();
        swift_bridgeObjectRelease();
        v79(v81, v82);
        _os_log_impl(&dword_244A6B000, v76, v77, "%s has no rendered prompt", v86, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v88, -1, -1);
        MEMORY[0x24951E31C](v86, -1, -1);

        (*(void (**)(_QWORD, _QWORD))(v4 - 136))(*(_QWORD *)(v4 - 144), *(_QWORD *)(v4 - 152));
      }
      else
      {
        v79(*(_QWORD *)(v1 + 1040), *(_QWORD *)(v1 + 936));

        v80(v83, v84);
      }
    }
    else
    {
      *(_QWORD *)(v4 - 136) = v71;
      v91 = *(_QWORD *)(v1 + 696);
      v92 = *(_QWORD *)(v1 + 656);
      v93 = *(_QWORD **)(v4 - 168);
      sub_244A84010(*(_QWORD *)(v1 + 336) + *(int *)(*(_QWORD *)(v1 + 1080) + 28), (uint64_t)v93);
      v94 = *(_QWORD *)(v1 + 40);
      v95 = *(_QWORD *)(v1 + 48);
      v96 = __swift_project_boxed_opaque_existential_1(v93, v94);
      sub_244A7284C(v36, v91, &qword_2573CFF30);
      v97 = v37(v91, 1, v92);
      v98 = *(_QWORD *)(v1 + 696);
      v99 = *(_QWORD *)(v1 + 672);
      if (v97 == 1)
      {
        v100 = *(int **)(v1 + 656);
        v101 = *(_QWORD *)(v1 + 608);
        *(_QWORD *)(v4 - 160) = *(_QWORD *)(v1 + 616);
        *(_QWORD *)(v4 - 152) = v101;
        sub_244AE3C00();
        v102 = v99 + v100[5];
        v103 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
        *(_QWORD *)(v4 - 144) = v96;
        v104 = v103;
        v105 = v95;
        v106 = v94;
        v107 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56);
        v107(v102, 1, 1, v103);
        v107(v99 + v100[6], 1, 1, v104);
        v107(v99 + v100[7], 1, 1, v104);
        v107(v99 + v100[8], 1, 1, v104);
        v94 = v106;
        v95 = v105;
        v108 = (_QWORD *)(v99 + v100[9]);
        *v108 = 0;
        v108[1] = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 160) + 56))(v99 + *(int *)(v67 + 40), 1, 1, *(_QWORD *)(v4 - 152));
        sub_244A72890(v98, &qword_2573CFF30);
      }
      else
      {
        sub_244A729FC(*(_QWORD *)(v1 + 696), *(_QWORD *)(v1 + 672), type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      }
      v109 = *(_QWORD *)(v1 + 632);
      v110 = *(_QWORD *)(v1 + 608);
      sub_244A7284C(*(_QWORD *)(v1 + 672) + *(int *)(v67 + 40), v109, &qword_2573CF998);
      v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 - 136))(v109, 1, v110);
      v112 = *(_QWORD *)(v1 + 632);
      v113 = *(_QWORD **)(v1 + 624);
      if (v111 == 1)
      {
        v114 = *(_QWORD *)(v1 + 608);
        v115 = MEMORY[0x24BEE4AF8];
        *v113 = MEMORY[0x24BEE4AF8];
        v113[1] = v115;
        sub_244AE3C00();
        v116 = (_QWORD *)((char *)v113 + *(int *)(v114 + 28));
        *v116 = 0;
        v116[1] = 0;
        v117 = (char *)v113 + *(int *)(v114 + 32);
        *(_QWORD *)v117 = 0;
        *((_WORD *)v117 + 4) = 256;
        sub_244A72890(v112, &qword_2573CF998);
      }
      else
      {
        sub_244A729FC(*(_QWORD *)(v1 + 632), *(_QWORD *)(v1 + 624), type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      }
      v118 = *(_QWORD *)(v1 + 624);
      v119 = *(_QWORD *)(v1 + 608);
      sub_244A729C0(*(_QWORD *)(v1 + 672), type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      v120 = (uint64_t *)(v118 + *(int *)(v119 + 28));
      if (v120[1])
      {
        v121 = *v120;
        v122 = v120[1];
      }
      else
      {
        v121 = 0;
        v122 = 0xE000000000000000;
      }
      v123 = *(_QWORD *)(v1 + 624);
      swift_bridgeObjectRetain();
      sub_244A729C0(v123, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v95 + 32))(v121, v122, v94, v95);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v4 - 168));
    }
  }
  v124 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
  v125 = *(_QWORD *)(v1 + 1072);
  v126 = *(_QWORD *)(v1 + 936);
  v127 = *(_QWORD *)(v1 + 776);
  v128 = *(_QWORD *)(v1 + 744);
  sub_244A81EAC(*(_QWORD *)(v1 + 1144), *(_QWORD *)(v1 + 1152));
  sub_244A729C0(v128, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  sub_244A729C0(v127, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
  v124(v125, v126);
  JUMPOUT(0x244A8C92CLL);
}

void sub_244A8DFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void (*v11)(_QWORD, _QWORD);
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v3 - 136) = v1;
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1088);
  v5 = *(_QWORD *)(v0 + 1072);
  v6 = *(_QWORD *)(v0 + 960);
  v7 = *(_QWORD *)(v0 + 936);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1096))(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 784));
  v4(v6, v5, v7);
  v8 = sub_244AE4194();
  v9 = sub_244AE4368();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void (**)(_QWORD, _QWORD))(v0 + 1112);
  v12 = *(void (**)(uint64_t, uint64_t))(v0 + 1104);
  v13 = *(_QWORD *)(v0 + 960);
  v14 = *(_QWORD *)(v0 + 936);
  v15 = *(_QWORD *)(v0 + 808);
  v16 = *(_QWORD *)(v0 + 784);
  if (v10)
  {
    *(_QWORD *)(v3 - 144) = v15;
    *(_QWORD *)(v3 - 168) = v11;
    v17 = swift_slowAlloc();
    *(_QWORD *)(v3 - 152) = v12;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    *(_QWORD *)(v3 - 128) = v19;
    *(_QWORD *)(v3 - 160) = v16;
    *(_DWORD *)v18 = 136315138;
    *(_QWORD *)(v3 - 176) = v18 + 4;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_244AE44C4();
    *v2 = sub_244A80950(v20, v21, (uint64_t *)(v3 - 128));
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 - 168))(v13, v14);
    _os_log_impl(&dword_244A6B000, v8, v9, "%s received inference complete response", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v19, -1, -1);
    MEMORY[0x24951E31C](v18, -1, -1);

    (*(void (**)(_QWORD, _QWORD))(v3 - 152))(*(_QWORD *)(v3 - 144), *(_QWORD *)(v3 - 160));
  }
  else
  {
    v11(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 936));

    v12(v15, v16);
  }
  v22 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
  v23 = *(_QWORD *)(v0 + 1072);
  v24 = *(_QWORD *)(v0 + 936);
  v25 = *(_QWORD *)(v0 + 776);
  v26 = *(_QWORD *)(v0 + 752);
  sub_244A81EAC(*(_QWORD *)(v0 + 1144), *(_QWORD *)(v0 + 1152));
  sub_244A729C0(v25, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse);
  v22(v23, v24);
  sub_244A729C0(v26, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  JUMPOUT(0x244A90204);
}

uint64_t sub_244A9062C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 1112))(*(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 936));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A90A9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_244A90AE4;
  return PrivateMLRequest.Response.AsyncIterator.next()();
}

uint64_t sub_244A90AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    v8 = *(_QWORD **)(v6 + 16);
    *v8 = a1;
    v8[1] = a2;
  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_244A90B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v4[7] = v5;
  *v5 = v4;
  v5[1] = sub_244A90B90;
  return PrivateMLRequest.Response.AsyncIterator.next()();
}

uint64_t sub_244A90B90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 32);
  *(_QWORD *)(*v3 + 64) = v2;
  swift_task_dealloc();
  if (v2)
  {
    if (v7)
    {
      swift_getObjectType();
      sub_244AE42F0();
    }
  }
  else
  {
    if (v7)
    {
      swift_getObjectType();
      sub_244AE42F0();
    }
    *(_QWORD *)(v6 + 72) = a2;
    *(_QWORD *)(v6 + 80) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_244A90C68()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 24) = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244A90C84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD **)(v0 + 48);
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D03B0);
  swift_willThrowTypedImpl();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrivateMLRequest.PromptDebugInfo.clientPrompt.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.PromptDebugInfo.clientPrompt.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.PromptDebugInfo.clientPrompt.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLRequest.PromptDebugInfo.clientDelimieters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PrivateMLRequest.PromptDebugInfo.clientDelimieters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.PromptDebugInfo.clientDelimieters.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLRequest.PromptDebugInfo.promptTemplateID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.PromptDebugInfo.promptTemplateID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PrivateMLRequest.PromptDebugInfo.promptTemplateID.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLRequest.PromptDebugInfo.promptTemplateVariableBindings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PrivateMLRequest.PromptDebugInfo.promptTemplateVariableBindings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.PromptDebugInfo.promptTemplateVariableBindings.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLRequest.PromptDebugInfo.locale.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PrivateMLRequest.PromptDebugInfo.locale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.PromptDebugInfo.locale.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLRequest.PromptDebugInfo.init(clientPrompt:clientDelimieters:promptTemplateID:promptTemplateVariableBindings:locale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t result;

  sub_244A83D9C(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PrivateMLRequest.PromptDebugInfo.asJSONString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String result;

  v1 = sub_244AE4230();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_244AE3ABC();
  MEMORY[0x24BDAC7A8](v2);
  sub_244AE3AEC();
  swift_allocObject();
  sub_244AE3AE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF70);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_244AE4EB0;
  sub_244AE3AA4();
  sub_244A7DAA8((unint64_t *)&qword_2573CFF78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF80);
  sub_244A94050();
  sub_244AE43D4();
  sub_244AE3AC8();
  sub_244A940E0();
  v3 = sub_244AE3AD4();
  if (v0)
  {
    v5 = swift_release();
  }
  else
  {
    v7 = v3;
    v8 = v4;
    sub_244AE4224();
    v9 = sub_244AE4218();
    v11 = v10;
    sub_244A7D674(v7, v8);
    swift_release();
    if (v11)
      v5 = v9;
    else
      v5 = 32123;
    if (v11)
      v6 = v11;
    else
      v6 = (void *)0xE200000000000000;
  }
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t sub_244A91194(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244A911D0 + 4 * byte_244AE4ED0[a1]))(0x7250746E65696C63, 0xEC00000074706D6FLL);
}

unint64_t sub_244A911D0()
{
  return 0xD000000000000011;
}

uint64_t sub_244A91224()
{
  return 0x656C61636F6CLL;
}

BOOL sub_244A91238(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_244A9124C()
{
  sub_244AE4530();
  sub_244AE453C();
  return sub_244AE4548();
}

uint64_t sub_244A91290()
{
  return sub_244AE453C();
}

uint64_t sub_244A912B8()
{
  sub_244AE4530();
  sub_244AE453C();
  return sub_244AE4548();
}

uint64_t sub_244A912F8()
{
  unsigned __int8 *v0;

  return sub_244A91194(*v0);
}

uint64_t sub_244A91300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244A9B2FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244A91324()
{
  return 0;
}

void sub_244A91330(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_244A9133C()
{
  sub_244A94124();
  return sub_244AE456C();
}

uint64_t sub_244A91364()
{
  sub_244A94124();
  return sub_244AE4578();
}

uint64_t PrivateMLRequest.PromptDebugInfo.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v18 = v1[3];
  v19 = v8;
  v9 = v1[4];
  v16 = v1[5];
  v17 = v9;
  v15 = v1[6];
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_244A94124();
  sub_244AE4560();
  LOBYTE(v21) = 0;
  sub_244AE4494();
  if (!v2)
  {
    v21 = v19;
    v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFA8);
    sub_244A94168(&qword_2573CFFB0, &qword_2573CFFA8, MEMORY[0x24BEE44F8]);
    sub_244AE44B8();
    LOBYTE(v21) = 2;
    sub_244AE4494();
    v21 = v16;
    v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFB8);
    sub_244A94168(&qword_2573CFFC0, &qword_2573CFFB8, MEMORY[0x24BEE0D08]);
    sub_244AE44B8();
    v21 = v15;
    v20 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFC8);
    sub_244A94220(&qword_2573CFFD0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_244AE44B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t PrivateMLRequest.PromptDebugInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_244A83D9C(MEMORY[0x24BEE4AF8]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244A94124();
  sub_244AE4554();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v27 = a2;
    LOBYTE(v30) = 0;
    v9 = sub_244AE4464();
    v12 = v11;
    v26 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFA8);
    v29 = 1;
    sub_244A941C4(&qword_2573CFFE0, &qword_2573CFFA8, MEMORY[0x24BEE4520]);
    swift_bridgeObjectRetain();
    sub_244AE4488();
    v13 = v30;
    LOBYTE(v30) = 2;
    v14 = v13;
    swift_bridgeObjectRetain();
    v15 = sub_244AE4464();
    v17 = v16;
    v24 = v15;
    v25 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFB8);
    v29 = 3;
    sub_244A941C4(&qword_2573CFFE8, &qword_2573CFFB8, MEMORY[0x24BEE0D38]);
    swift_bridgeObjectRetain();
    sub_244AE4488();
    v23 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFC8);
    v29 = 4;
    sub_244A94220(&qword_2573CFFF0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_244AE4488();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v18 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = v27;
    *v27 = v26;
    v19[1] = v12;
    v20 = v24;
    v19[2] = v25;
    v19[3] = v20;
    v21 = v23;
    v19[4] = v17;
    v19[5] = v21;
    v19[6] = v18;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244A91A14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PrivateMLRequest.PromptDebugInfo.init(from:)(a1, a2);
}

uint64_t sub_244A91A28(_QWORD *a1)
{
  return PrivateMLRequest.PromptDebugInfo.encode(to:)(a1);
}

uint64_t PrivateMLRequest.SamplingStrategy.description.getter()
{
  uint64_t v0;
  _QWORD v2[2];

  if (!*(_BYTE *)(v0 + 8))
  {
    v2[0] = 0;
    v2[1] = 0xE000000000000000;
    sub_244AE43EC();
    sub_244AE426C();
    sub_244AE4320();
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_244AE43EC();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "topK (count: ");
    HIWORD(v2[1]) = -4864;
    sub_244AE44C4();
    sub_244AE426C();
    swift_bridgeObjectRelease();
LABEL_5:
    sub_244AE426C();
    return v2[0];
  }
  return 0x78616D677261;
}

uint64_t PrivateMLRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244AE3B4C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PrivateMLRequest.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244AE3B4C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PrivateMLRequest.id.modify())()
{
  return nullsub_1;
}

uint64_t PrivateMLRequest.featureIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.featureIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.featureIdentifier.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.modelName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.modelName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.modelName.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.modelVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.modelVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.modelVersion.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.modelAdaptorName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.modelAdaptorName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.modelAdaptorName.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.modelAdaptorVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.modelAdaptorVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.modelAdaptorVersion.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.draftModelName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.draftModelName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.draftModelName.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.draftSteps.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 44));
}

uint64_t PrivateMLRequest.draftSteps.setter(int a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(_DWORD *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.draftSteps.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.numberOfCompletions.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 48));
}

uint64_t PrivateMLRequest.numberOfCompletions.setter(int a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(_DWORD *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.numberOfCompletions.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

float PrivateMLRequest.topP.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 52));
}

uint64_t PrivateMLRequest.topP.setter(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(float *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.topP.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

float PrivateMLRequest.temperature.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 56));
}

uint64_t PrivateMLRequest.temperature.setter(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(float *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.temperature.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.samplingStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for PrivateMLRequest(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 60));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t PrivateMLRequest.samplingStrategy.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for PrivateMLRequest(0);
  v5 = v1 + *(int *)(result + 60);
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
  return result;
}

uint64_t (*PrivateMLRequest.samplingStrategy.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.maxTokens.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 64));
}

uint64_t PrivateMLRequest.maxTokens.setter(int a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(_DWORD *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.maxTokens.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.logProbs.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 68));
}

uint64_t PrivateMLRequest.logProbs.setter(int a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(_DWORD *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.logProbs.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

float PrivateMLRequest.lengthPenalty.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 72));
}

uint64_t PrivateMLRequest.lengthPenalty.setter(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(float *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.lengthPenalty.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

float PrivateMLRequest.frequencyPenalty.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 76));
}

uint64_t PrivateMLRequest.frequencyPenalty.setter(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(float *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.frequencyPenalty.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.randomSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 80));
}

uint64_t PrivateMLRequest.randomSeed.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(_QWORD *)(v1 + *(int *)(result + 80)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.randomSeed.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.sessionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 84);
  v4 = sub_244AE3B4C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PrivateMLRequest.sessionID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 84);
  v4 = sub_244AE3B4C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PrivateMLRequest.sessionID.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

double PrivateMLRequest.timeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 88));
}

uint64_t PrivateMLRequest.timeout.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(double *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.timeout.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.stopSequences.getter()
{
  type metadata accessor for PrivateMLRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t PrivateMLRequest.stopSequences.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PrivateMLRequest(0) + 92);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.stopSequences.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.metaData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 96);
  v2 = *(_QWORD *)v1;
  sub_244A93AB0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t PrivateMLRequest.metaData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 96);
  result = sub_244A81EAC(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*PrivateMLRequest.metaData.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.taskPriority.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 100);
  v4 = sub_244AE4314();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PrivateMLRequest.taskPriority.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 100);
  v4 = sub_244AE4314();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PrivateMLRequest.taskPriority.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.tokenizerName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 104));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.tokenizerName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 104));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.tokenizerName.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.inputTokenSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 108));
}

uint64_t PrivateMLRequest.inputTokenSize.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrivateMLRequest(0);
  *(_QWORD *)(v1 + *(int *)(result + 108)) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.inputTokenSize.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.promptTemplateID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 112));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.promptTemplateID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 112));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.promptTemplateID.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.promptTemplateVariableBindings.getter()
{
  type metadata accessor for PrivateMLRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t PrivateMLRequest.promptTemplateVariableBindings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PrivateMLRequest(0) + 116);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.promptTemplateVariableBindings.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.locale.getter()
{
  type metadata accessor for PrivateMLRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t PrivateMLRequest.locale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PrivateMLRequest(0) + 120);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PrivateMLRequest.locale.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 124));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 124));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PrivateMLRequest.bundleIdentifier.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.tmlConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 128);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  return sub_244A94280(v4, v5, v6);
}

uint64_t PrivateMLRequest.tmlConstraints.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 128);
  result = sub_244A81EC0(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  return result;
}

uint64_t (*PrivateMLRequest.tmlConstraints.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

unint64_t PrivateMLRequest.realUserIdentifier.getter()
{
  uint64_t v0;
  unsigned int *v1;

  v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 132));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t PrivateMLRequest.realUserIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for PrivateMLRequest(0);
  v4 = v1 + *(int *)(result + 132);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t (*PrivateMLRequest.realUserIdentifier.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.promptDebugInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 136));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  return sub_244A94294(v4, v5, v6);
}

__n128 PrivateMLRequest.promptDebugInfo.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 *v3;
  __n128 result;
  __n128 v5;
  __n128 v6;
  __n128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = a1[2];
  v2 = a1[3].n128_u64[0];
  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for PrivateMLRequest(0) + 136));
  sub_244A942F0(v3->n128_u64[0], v3->n128_i64[1], v3[1].n128_i64[0]);
  *v3 = v7;
  v3[1] = v6;
  result = v5;
  v3[2] = v5;
  v3[3].n128_u64[0] = v2;
  return result;
}

uint64_t (*PrivateMLRequest.promptDebugInfo.modify())()
{
  type metadata accessor for PrivateMLRequest(0);
  return nullsub_1;
}

uint64_t PrivateMLRequest.init(id:modelName:featureIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t result;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a2;
  v42 = a3;
  v10 = sub_244AE41AC();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for PrivateMLRequest(0);
  v14 = (_QWORD *)(a6 + v13[7]);
  *v14 = 49;
  v14[1] = 0xE100000000000000;
  v15 = (_QWORD *)(a6 + v13[8]);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  v16 = (_QWORD *)(a6 + v13[9]);
  *v16 = 49;
  v16[1] = 0xE100000000000000;
  v17 = (_QWORD *)(a6 + v13[10]);
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  *(_DWORD *)(a6 + v13[11]) = 0;
  *(_DWORD *)(a6 + v13[12]) = 1;
  *(_DWORD *)(a6 + v13[13]) = 0;
  *(_DWORD *)(a6 + v13[14]) = 1065353216;
  v18 = a6 + v13[15];
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = 2;
  *(_DWORD *)(a6 + v13[16]) = 2048;
  *(_DWORD *)(a6 + v13[17]) = 0;
  *(_DWORD *)(a6 + v13[18]) = 0;
  *(_DWORD *)(a6 + v13[19]) = 0;
  *(_QWORD *)(a6 + v13[20]) = 0;
  sub_244AE3B40();
  *(_QWORD *)(a6 + v13[22]) = 0;
  *(_QWORD *)(a6 + v13[23]) = MEMORY[0x24BEE4B08];
  *(_OWORD *)(a6 + v13[24]) = xmmword_244AE4A00;
  sub_244AE42FC();
  v19 = (_QWORD *)(a6 + v13[26]);
  *v19 = 0xD000000000000032;
  v19[1] = 0x8000000244AE9A30;
  *(_QWORD *)(a6 + v13[27]) = 0;
  v20 = (_QWORD *)(a6 + v13[28]);
  *v20 = 0;
  v20[1] = 0xE000000000000000;
  v21 = v13[29];
  v22 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a6 + v21) = sub_244A83D9C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(a6 + v13[30]) = v22;
  v23 = (_QWORD *)(a6 + v13[31]);
  *v23 = 0;
  v23[1] = 0;
  v24 = a6 + v13[32];
  *(_QWORD *)v24 = 0;
  *(_QWORD *)(v24 + 8) = 0;
  *(_BYTE *)(v24 + 16) = -1;
  v25 = a6 + v13[33];
  *(_DWORD *)v25 = 0;
  *(_BYTE *)(v25 + 4) = 1;
  v26 = a6 + v13[34];
  v27 = sub_244AE3B4C();
  *(_OWORD *)v26 = 0u;
  *(_OWORD *)(v26 + 16) = 0u;
  *(_OWORD *)(v26 + 32) = 0u;
  *(_QWORD *)(v26 + 48) = 0;
  v28 = a5;
  v29 = a4;
  v30 = *(_QWORD *)(v27 - 8);
  v31 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(a6, a1, v27);
  v32 = (_QWORD *)(a6 + v13[6]);
  v33 = v42;
  *v32 = v41;
  v32[1] = v33;
  if (!v29 && v28 == 0xE000000000000000 || (sub_244AE44DC() & 1) != 0)
  {
    v42 = v29;
    sub_244AE41A0();
    v34 = sub_244AE4194();
    v35 = sub_244AE435C();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_244A6B000, v34, v35, "feature identifier is not provided", v36, 2u);
      MEMORY[0x24951E31C](v36, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v27);
    result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v12, v40);
    v29 = v42;
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(a1, v27);
  }
  v38 = (_QWORD *)(a6 + v13[5]);
  *v38 = v29;
  v38[1] = v28;
  return result;
}

unint64_t sub_244A930D4()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 40) != 1)
    return 0xD000000000000019;
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_244A93128()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40) == 1)
    return *(_QWORD *)(v0 + 32);
  else
    return 1;
}

uint64_t sub_244A9313C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*((_BYTE *)v0 + 40) && *((_BYTE *)v0 + 40) != 1)
    return sub_244AE423C();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateMLRequest.description.getter()
{
  sub_244AE43EC();
  sub_244AE426C();
  sub_244AE3B4C();
  sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  type metadata accessor for PrivateMLRequest(0);
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE432C();
  sub_244AE426C();
  sub_244AE432C();
  sub_244AE426C();
  PrivateMLRequest.SamplingStrategy.description.getter();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE432C();
  sub_244AE426C();
  sub_244AE432C();
  sub_244AE426C();
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE4320();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE4338();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  sub_244AE4314();
  sub_244A7DAA8(qword_2573CFFF8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], MEMORY[0x24BEE69A0]);
  sub_244AE44C4();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  sub_244AE426C();
  swift_bridgeObjectRetain();
  sub_244AE41E8();
  sub_244AE426C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_244A93988(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 8;
  result = sub_244AE43B0();
  *a1 = v5;
  return result;
}

void *sub_244A939E0(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_244AE444C();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_244A93A74@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for PrivateMLRequest.Response.Event(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0228);
}

uint64_t sub_244A93AB0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_244A81E68(a1, a2);
  return a1;
}

unint64_t sub_244A93AC4()
{
  unint64_t result;

  result = qword_2573CFF48;
  if (!qword_2573CFF48)
  {
    result = MEMORY[0x24951E280](&unk_244AE53FC, &type metadata for PrivateMLRequest.PrivateMLRequestError);
    atomic_store(result, (unint64_t *)&qword_2573CFF48);
  }
  return result;
}

unint64_t sub_244A93B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_244AE4530();
  sub_244AE4254();
  v4 = sub_244AE4548();
  return sub_244A93B6C(a1, a2, v4);
}

unint64_t sub_244A93B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_244AE44DC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_244AE44DC() & 1) == 0);
    }
  }
  return v6;
}

double sub_244A93C4C(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_244AE4EC0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  return result;
}

uint64_t sub_244A93C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244A93CB8(uint64_t a1)
{
  uint64_t v1;

  return sub_244A6DBEC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *sub_244A93CD0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[10];
  v8 = a1[11];
  v9 = a1[15];
  v10 = a1[14];
  swift_bridgeObjectRelease();
  sub_244A71308(v2, v3);
  sub_244A71308(v4, v5);
  sub_244A71308(v6, v8);
  sub_244A71308(v10, v9);
  return a1;
}

uint64_t *sub_244A93DA0(uint64_t *a1)
{
  sub_244A93DF8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

uint64_t sub_244A93DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_244A71308(a3, a4);
    sub_244A71308(a7, a8);
    sub_244A71308(a11, a12);
    return sub_244A71308(a15, a16);
  }
  return result;
}

_QWORD *sub_244A93EDC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[10];
  v8 = a1[11];
  v9 = a1[15];
  v10 = a1[14];
  swift_bridgeObjectRetain();
  sub_244A93FAC(v2, v3);
  sub_244A93FAC(v4, v5);
  sub_244A93FAC(v6, v8);
  sub_244A93FAC(v10, v9);
  return a1;
}

uint64_t sub_244A93FAC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_244A93FDC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244A94018(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t type metadata accessor for PrivateMLRequest.Response.AsyncIterator(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0358);
}

unint64_t sub_244A94050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2573CFF88;
  if (!qword_2573CFF88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2573CFF80);
    result = MEMORY[0x24951E280](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2573CFF88);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24951E274](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_244A940E0()
{
  unint64_t result;

  result = qword_2573CFF90;
  if (!qword_2573CFF90)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for PrivateMLRequest.PromptDebugInfo, &type metadata for PrivateMLRequest.PromptDebugInfo);
    atomic_store(result, (unint64_t *)&qword_2573CFF90);
  }
  return result;
}

unint64_t sub_244A94124()
{
  unint64_t result;

  result = qword_2573CFFA0;
  if (!qword_2573CFFA0)
  {
    result = MEMORY[0x24951E280](&unk_244AE53AC, &type metadata for PrivateMLRequest.PromptDebugInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573CFFA0);
  }
  return result;
}

uint64_t sub_244A94168(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x24BEE0D08];
    v7[1] = a3;
    result = MEMORY[0x24951E280](MEMORY[0x24BEE04C0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244A941C4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x24BEE0D38];
    v7[1] = a3;
    result = MEMORY[0x24951E280](MEMORY[0x24BEE04E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244A94220(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2573CFFC8);
    v8 = a2;
    result = MEMORY[0x24951E280](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244A94280(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_244A82274(a1, a2, a3);
  return a1;
}

uint64_t sub_244A94294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_244A942F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244A9434C()
{
  return MEMORY[0x24BEE3F20];
}

uint64_t *initializeBufferWithCopyOfBuffer for PrivateMLRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _OWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  void (*v88)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v89;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3B4C();
    v88 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v89 = v7;
    v88(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (uint64_t *)((char *)a1 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (uint64_t *)((char *)a1 + v25);
    v30 = (uint64_t *)((char *)a2 + v25);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[12];
    *(_DWORD *)((char *)a1 + a3[11]) = *(_DWORD *)((char *)a2 + a3[11]);
    *(_DWORD *)((char *)a1 + v32) = *(_DWORD *)((char *)a2 + v32);
    v33 = a3[14];
    *(_DWORD *)((char *)a1 + a3[13]) = *(_DWORD *)((char *)a2 + a3[13]);
    *(_DWORD *)((char *)a1 + v33) = *(_DWORD *)((char *)a2 + v33);
    v34 = a3[15];
    v35 = a3[16];
    v36 = (char *)a1 + v34;
    v37 = (char *)a2 + v34;
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    *(_DWORD *)((char *)a1 + v35) = *(_DWORD *)((char *)a2 + v35);
    v38 = a3[18];
    *(_DWORD *)((char *)a1 + a3[17]) = *(_DWORD *)((char *)a2 + a3[17]);
    *(_DWORD *)((char *)a1 + v38) = *(_DWORD *)((char *)a2 + v38);
    v39 = a3[20];
    *(_DWORD *)((char *)a1 + a3[19]) = *(_DWORD *)((char *)a2 + a3[19]);
    *(uint64_t *)((char *)a1 + v39) = *(uint64_t *)((char *)a2 + v39);
    v40 = a3[21];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v88((uint64_t *)v41, (uint64_t *)v42, v89);
    v43 = a3[23];
    *(uint64_t *)((char *)a1 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
    *(uint64_t *)((char *)a1 + v43) = *(uint64_t *)((char *)a2 + v43);
    v44 = a3[24];
    v45 = (char *)a1 + v44;
    v46 = (_OWORD *)((char *)a2 + v44);
    v47 = *(uint64_t *)((char *)a2 + v44 + 8);
    swift_bridgeObjectRetain();
    if (v47 >> 60 == 15)
    {
      *(_OWORD *)v45 = *v46;
    }
    else
    {
      v49 = *(_QWORD *)v46;
      sub_244A81E68(v49, v47);
      *(_QWORD *)v45 = v49;
      *((_QWORD *)v45 + 1) = v47;
    }
    v50 = a3[25];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    v53 = sub_244AE4314();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v54 = a3[26];
    v55 = a3[27];
    v56 = (uint64_t *)((char *)a1 + v54);
    v57 = (uint64_t *)((char *)a2 + v54);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    *(uint64_t *)((char *)a1 + v55) = *(uint64_t *)((char *)a2 + v55);
    v59 = a3[28];
    v60 = a3[29];
    v61 = (uint64_t *)((char *)a1 + v59);
    v62 = (uint64_t *)((char *)a2 + v59);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    *(uint64_t *)((char *)a1 + v60) = *(uint64_t *)((char *)a2 + v60);
    v64 = a3[31];
    *(uint64_t *)((char *)a1 + a3[30]) = *(uint64_t *)((char *)a2 + a3[30]);
    v65 = (uint64_t *)((char *)a1 + v64);
    v66 = (uint64_t *)((char *)a2 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    v68 = a3[32];
    v69 = (char *)a1 + v68;
    v70 = (char *)a2 + v68;
    v71 = *((unsigned __int8 *)a2 + v68 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v71 == 255)
    {
      *(_OWORD *)v69 = *(_OWORD *)v70;
      v69[16] = v70[16];
    }
    else
    {
      v72 = *(_QWORD *)v70;
      v73 = *((_QWORD *)v70 + 1);
      sub_244A82274(*(_QWORD *)v70, v73, v71);
      *(_QWORD *)v69 = v72;
      *((_QWORD *)v69 + 1) = v73;
      v69[16] = v71;
    }
    v74 = a3[33];
    v75 = a3[34];
    v76 = (char *)a1 + v74;
    v77 = (char *)a2 + v74;
    *(_DWORD *)v76 = *(_DWORD *)v77;
    v76[4] = v77[4];
    v78 = (uint64_t *)((char *)a1 + v75);
    v79 = (uint64_t *)((char *)a2 + v75);
    v80 = v79[2];
    if (v80)
    {
      v81 = v79[1];
      *v78 = *v79;
      v78[1] = v81;
      v82 = v79[3];
      v83 = v79[4];
      v78[2] = v80;
      v78[3] = v82;
      v84 = v79[5];
      v85 = v79[6];
      v78[4] = v83;
      v78[5] = v84;
      v78[6] = v85;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v86 = *((_OWORD *)v79 + 1);
      *(_OWORD *)v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v86;
      *((_OWORD *)v78 + 2) = *((_OWORD *)v79 + 2);
      v78[6] = v79[6];
    }
  }
  return a1;
}

uint64_t destroy for PrivateMLRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int v12;

  v4 = sub_244AE3B4C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + a2[21], v4);
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a1 + a2[24]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_244A7D674(*v6, v7);
  v8 = a1 + a2[25];
  v9 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v11 = a1 + a2[32];
  v12 = *(unsigned __int8 *)(v11 + 16);
  if (v12 != 255)
    result = sub_244A81ED4(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), v12);
  if (*(_QWORD *)(a1 + a2[34] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PrivateMLRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;

  v6 = sub_244AE3B4C();
  v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v87 = v6;
  v86(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_QWORD *)(a1 + v24);
  v29 = (_QWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_DWORD *)(a1 + v31) = *(_DWORD *)(a2 + v31);
  v32 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(_DWORD *)(a1 + v32) = *(_DWORD *)(a2 + v32);
  v33 = a3[15];
  v34 = a3[16];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  *(_DWORD *)(a1 + v34) = *(_DWORD *)(a2 + v34);
  v37 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v37) = *(_DWORD *)(a2 + v37);
  v38 = a3[20];
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)(a2 + a3[19]);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  v39 = a3[21];
  v40 = a1 + v39;
  v41 = a2 + v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v86(v40, v41, v87);
  v42 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  v43 = a3[24];
  v44 = a1 + v43;
  v45 = (_OWORD *)(a2 + v43);
  v46 = *(_QWORD *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  if (v46 >> 60 == 15)
  {
    *(_OWORD *)v44 = *v45;
  }
  else
  {
    v47 = *(_QWORD *)v45;
    sub_244A81E68(v47, v46);
    *(_QWORD *)v44 = v47;
    *(_QWORD *)(v44 + 8) = v46;
  }
  v48 = a3[25];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  v52 = a3[26];
  v53 = a3[27];
  v54 = (_QWORD *)(a1 + v52);
  v55 = (_QWORD *)(a2 + v52);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  *(_QWORD *)(a1 + v53) = *(_QWORD *)(a2 + v53);
  v57 = a3[28];
  v58 = a3[29];
  v59 = (_QWORD *)(a1 + v57);
  v60 = (_QWORD *)(a2 + v57);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  v62 = a3[31];
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  v66 = a3[32];
  v67 = a1 + v66;
  v68 = (uint64_t *)(a2 + v66);
  v69 = *(unsigned __int8 *)(a2 + v66 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v69 == 255)
  {
    *(_OWORD *)v67 = *(_OWORD *)v68;
    *(_BYTE *)(v67 + 16) = *((_BYTE *)v68 + 16);
  }
  else
  {
    v70 = *v68;
    v71 = v68[1];
    sub_244A82274(*v68, v71, v69);
    *(_QWORD *)v67 = v70;
    *(_QWORD *)(v67 + 8) = v71;
    *(_BYTE *)(v67 + 16) = v69;
  }
  v72 = a3[33];
  v73 = a3[34];
  v74 = a1 + v72;
  v75 = a2 + v72;
  *(_DWORD *)v74 = *(_DWORD *)v75;
  *(_BYTE *)(v74 + 4) = *(_BYTE *)(v75 + 4);
  v76 = (_QWORD *)(a1 + v73);
  v77 = (_QWORD *)(a2 + v73);
  v78 = v77[2];
  if (v78)
  {
    v79 = v77[1];
    *v76 = *v77;
    v76[1] = v79;
    v80 = v77[3];
    v81 = v77[4];
    v76[2] = v78;
    v76[3] = v80;
    v82 = v77[5];
    v83 = v77[6];
    v76[4] = v81;
    v76[5] = v82;
    v76[6] = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v84 = *((_OWORD *)v77 + 1);
    *(_OWORD *)v76 = *(_OWORD *)v77;
    *((_OWORD *)v76 + 1) = v84;
    *((_OWORD *)v76 + 2) = *((_OWORD *)v77 + 2);
    v76[6] = v77[6];
  }
  return a1;
}

uint64_t assignWithCopy for PrivateMLRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  int v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  v6 = sub_244AE3B4C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  v26 = a3[15];
  v27 = a1 + v26;
  v28 = (uint64_t *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 8) = *((_BYTE *)v28 + 8);
  *(_QWORD *)v27 = v29;
  *(_DWORD *)(a1 + a3[16]) = *(_DWORD *)(a2 + a3[16]);
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + a3[18]) = *(_DWORD *)(a2 + a3[18]);
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)(a2 + a3[19]);
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v7(a1 + a3[21], a2 + a3[21], v6);
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[24];
  v31 = (uint64_t *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v33 = *(_QWORD *)(a2 + v30 + 8);
  if (*(_QWORD *)(a1 + v30 + 8) >> 60 == 15)
  {
    if (v33 >> 60 != 15)
    {
      v34 = *v32;
      sub_244A81E68(v34, v33);
      *v31 = v34;
      v31[1] = v33;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v33 >> 60 == 15)
  {
    sub_244A82C44((uint64_t)v31);
LABEL_6:
    *(_OWORD *)v31 = *(_OWORD *)v32;
    goto LABEL_8;
  }
  v35 = *v32;
  sub_244A81E68(v35, v33);
  v36 = *v31;
  v37 = v31[1];
  *v31 = v35;
  v31[1] = v33;
  sub_244A7D674(v36, v37);
LABEL_8:
  v38 = a3[25];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  v42 = a3[26];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[27]) = *(_QWORD *)(a2 + a3[27]);
  v45 = a3[28];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[31];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[32];
  v52 = a1 + v51;
  v53 = (__int128 *)(a2 + v51);
  v54 = *(unsigned __int8 *)(a2 + v51 + 16);
  if (*(unsigned __int8 *)(a1 + v51 + 16) == 255)
  {
    if (v54 == 255)
    {
      v63 = *v53;
      *(_BYTE *)(v52 + 16) = *((_BYTE *)v53 + 16);
      *(_OWORD *)v52 = v63;
    }
    else
    {
      v60 = *(_QWORD *)v53;
      v61 = *((_QWORD *)v53 + 1);
      sub_244A82274(v60, v61, v54);
      *(_QWORD *)v52 = v60;
      *(_QWORD *)(v52 + 8) = v61;
      *(_BYTE *)(v52 + 16) = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_244A82C78(v52);
    v62 = *((_BYTE *)v53 + 16);
    *(_OWORD *)v52 = *v53;
    *(_BYTE *)(v52 + 16) = v62;
  }
  else
  {
    v55 = *(_QWORD *)v53;
    v56 = *((_QWORD *)v53 + 1);
    sub_244A82274(v55, v56, v54);
    v57 = *(_QWORD *)v52;
    v58 = *(_QWORD *)(v52 + 8);
    *(_QWORD *)v52 = v55;
    *(_QWORD *)(v52 + 8) = v56;
    v59 = *(_BYTE *)(v52 + 16);
    *(_BYTE *)(v52 + 16) = v54;
    sub_244A81ED4(v57, v58, v59);
  }
  v64 = a3[33];
  v65 = a1 + v64;
  v66 = (int *)(a2 + v64);
  v67 = *v66;
  *(_BYTE *)(v65 + 4) = *((_BYTE *)v66 + 4);
  *(_DWORD *)v65 = v67;
  v68 = a3[34];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (_QWORD *)(a2 + v68);
  v71 = *(_QWORD *)(a1 + v68 + 16);
  v72 = *(_QWORD *)(a2 + v68 + 16);
  if (v71)
  {
    if (v72)
    {
      *v69 = *v70;
      v69[1] = v70[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v69[2] = v70[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v69[3] = v70[3];
      v69[4] = v70[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v69[5] = v70[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v69[6] = v70[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_244A951A8((uint64_t)v69);
      v74 = *((_OWORD *)v70 + 1);
      v73 = *((_OWORD *)v70 + 2);
      v75 = *(_OWORD *)v70;
      v69[6] = v70[6];
      *((_OWORD *)v69 + 1) = v74;
      *((_OWORD *)v69 + 2) = v73;
      *(_OWORD *)v69 = v75;
    }
  }
  else if (v72)
  {
    *v69 = *v70;
    v69[1] = v70[1];
    v69[2] = v70[2];
    v69[3] = v70[3];
    v69[4] = v70[4];
    v69[5] = v70[5];
    v69[6] = v70[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *(_OWORD *)v70;
    v77 = *((_OWORD *)v70 + 1);
    v78 = *((_OWORD *)v70 + 2);
    v69[6] = v70[6];
    *((_OWORD *)v69 + 1) = v77;
    *((_OWORD *)v69 + 2) = v78;
    *(_OWORD *)v69 = v76;
  }
  return a1;
}

uint64_t sub_244A951A8(uint64_t a1)
{
  destroy for PrivateMLRequest.PromptDebugInfo();
  return a1;
}

uint64_t initializeWithTake for PrivateMLRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v6 = sub_244AE3B4C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  v12 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v13 = a3[15];
  v14 = a3[16];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  v17 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v17) = *(_DWORD *)(a2 + v17);
  v18 = a3[20];
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)(a2 + a3[19]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v7(a1 + a3[21], a2 + a3[21], v6);
  v19 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[25];
  *(_OWORD *)(a1 + a3[24]) = *(_OWORD *)(a2 + a3[24]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = a3[27];
  *(_OWORD *)(a1 + a3[26]) = *(_OWORD *)(a2 + a3[26]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  v25 = a3[29];
  *(_OWORD *)(a1 + a3[28]) = *(_OWORD *)(a2 + a3[28]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v26 = a3[31];
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  v27 = a3[32];
  v28 = a3[33];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  v31 = a1 + v28;
  v32 = a2 + v28;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  v33 = a3[34];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 48) = *(_QWORD *)(v35 + 48);
  return a1;
}

uint64_t assignWithTake for PrivateMLRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;

  v6 = sub_244AE3B4C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_DWORD *)(a1 + v38) = *(_DWORD *)(a2 + v38);
  v39 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(_DWORD *)(a1 + v39) = *(_DWORD *)(a2 + v39);
  v40 = a3[15];
  v41 = a3[16];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  *(_DWORD *)(a1 + v41) = *(_DWORD *)(a2 + v41);
  v44 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v44) = *(_DWORD *)(a2 + v44);
  v45 = a3[20];
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)(a2 + a3[19]);
  *(_QWORD *)(a1 + v45) = *(_QWORD *)(a2 + v45);
  v7(a1 + a3[21], a2 + a3[21], v6);
  v46 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);
  swift_bridgeObjectRelease();
  v47 = a3[24];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)(a1 + v47 + 8);
  if (v50 >> 60 == 15)
    goto LABEL_4;
  v51 = *(_QWORD *)(v49 + 8);
  if (v51 >> 60 == 15)
  {
    sub_244A82C44(v48);
LABEL_4:
    *(_OWORD *)v48 = *(_OWORD *)v49;
    goto LABEL_6;
  }
  v52 = *(_QWORD *)v48;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_QWORD *)(v48 + 8) = v51;
  sub_244A7D674(v52, v50);
LABEL_6:
  v53 = a3[25];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v54, v55, v56);
  v57 = a3[26];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (uint64_t *)(a2 + v57);
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = a3[28];
  *(_QWORD *)(a1 + a3[27]) = *(_QWORD *)(a2 + a3[27]);
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  swift_bridgeObjectRelease();
  v67 = a3[31];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  v72 = a3[32];
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = *(unsigned __int8 *)(a1 + v72 + 16);
  if (v75 != 255)
  {
    v76 = *(unsigned __int8 *)(v74 + 16);
    if (v76 != 255)
    {
      v77 = *(_QWORD *)v73;
      v78 = *(_QWORD *)(v73 + 8);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *(_BYTE *)(v73 + 16) = v76;
      sub_244A81ED4(v77, v78, v75);
      goto LABEL_11;
    }
    sub_244A82C78(v73);
  }
  *(_OWORD *)v73 = *(_OWORD *)v74;
  *(_BYTE *)(v73 + 16) = *(_BYTE *)(v74 + 16);
LABEL_11:
  v79 = a3[33];
  v80 = a3[34];
  v81 = a1 + v79;
  v82 = a2 + v79;
  *(_DWORD *)v81 = *(_DWORD *)v82;
  *(_BYTE *)(v81 + 4) = *(_BYTE *)(v82 + 4);
  v83 = a1 + v80;
  v84 = a2 + v80;
  if (!*(_QWORD *)(a1 + v80 + 16))
  {
LABEL_15:
    v87 = *(_OWORD *)(v84 + 16);
    *(_OWORD *)v83 = *(_OWORD *)v84;
    *(_OWORD *)(v83 + 16) = v87;
    *(_OWORD *)(v83 + 32) = *(_OWORD *)(v84 + 32);
    *(_QWORD *)(v83 + 48) = *(_QWORD *)(v84 + 48);
    return a1;
  }
  if (!*(_QWORD *)(v84 + 16))
  {
    sub_244A951A8(a1 + v80);
    goto LABEL_15;
  }
  v85 = *(_QWORD *)(v84 + 8);
  *(_QWORD *)v83 = *(_QWORD *)v84;
  *(_QWORD *)(v83 + 8) = v85;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v83 + 16) = *(_QWORD *)(v84 + 16);
  swift_bridgeObjectRelease();
  v86 = *(_QWORD *)(v84 + 32);
  *(_QWORD *)(v83 + 24) = *(_QWORD *)(v84 + 24);
  *(_QWORD *)(v83 + 32) = v86;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v83 + 40) = *(_QWORD *)(v84 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v83 + 48) = *(_QWORD *)(v84 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A95780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_244AE3B4C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_244AE4314();
    v10 = a1 + *(int *)(a3 + 100);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A95838(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_244AE3B4C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_244AE4314();
    v12 = a1 + *(int *)(a4 + 100);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_244A958E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_244AE3B4C();
  if (v1 <= 0x3F)
  {
    result = sub_244AE4314();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PrivateMLRequest.Response(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t *v88;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v47 = *a2;
    *a1 = *a2;
    v48 = v47 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3BDC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v88 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3B4C();
    v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v87 = v11;
    v86(v9, v10, v11);
    v12 = (int *)type metadata accessor for PrivateMLRequest(0);
    v13 = v12[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v12[7];
    v22 = &v9[v21];
    v23 = &v10[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = v12[8];
    v26 = &v9[v25];
    v27 = &v10[v25];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = v12[9];
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = v12[10];
    v34 = &v9[v33];
    v35 = &v10[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    *(_DWORD *)&v9[v12[11]] = *(_DWORD *)&v10[v12[11]];
    *(_DWORD *)&v9[v12[12]] = *(_DWORD *)&v10[v12[12]];
    *(_DWORD *)&v9[v12[13]] = *(_DWORD *)&v10[v12[13]];
    *(_DWORD *)&v9[v12[14]] = *(_DWORD *)&v10[v12[14]];
    v37 = v12[15];
    v38 = &v9[v37];
    v39 = &v10[v37];
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    *(_DWORD *)&v9[v12[16]] = *(_DWORD *)&v10[v12[16]];
    *(_DWORD *)&v9[v12[17]] = *(_DWORD *)&v10[v12[17]];
    *(_DWORD *)&v9[v12[18]] = *(_DWORD *)&v10[v12[18]];
    *(_DWORD *)&v9[v12[19]] = *(_DWORD *)&v10[v12[19]];
    *(_QWORD *)&v9[v12[20]] = *(_QWORD *)&v10[v12[20]];
    v40 = v12[21];
    v41 = &v9[v40];
    v42 = &v10[v40];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v86(v41, v42, v87);
    *(_QWORD *)&v9[v12[22]] = *(_QWORD *)&v10[v12[22]];
    *(_QWORD *)&v9[v12[23]] = *(_QWORD *)&v10[v12[23]];
    v43 = v12[24];
    v44 = &v9[v43];
    v45 = &v10[v43];
    v46 = *(_QWORD *)&v10[v43 + 8];
    swift_bridgeObjectRetain();
    if (v46 >> 60 == 15)
    {
      *(_OWORD *)v44 = *(_OWORD *)v45;
    }
    else
    {
      v49 = *(_QWORD *)v45;
      sub_244A81E68(v49, v46);
      *(_QWORD *)v44 = v49;
      *((_QWORD *)v44 + 1) = v46;
    }
    v50 = v12[25];
    v51 = &v9[v50];
    v52 = &v10[v50];
    v53 = sub_244AE4314();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v54 = v12[26];
    v55 = &v9[v54];
    v56 = &v10[v54];
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    *(_QWORD *)&v9[v12[27]] = *(_QWORD *)&v10[v12[27]];
    v58 = v12[28];
    v59 = &v9[v58];
    v60 = &v10[v58];
    v61 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = v61;
    *(_QWORD *)&v9[v12[29]] = *(_QWORD *)&v10[v12[29]];
    *(_QWORD *)&v9[v12[30]] = *(_QWORD *)&v10[v12[30]];
    v62 = v12[31];
    v63 = &v9[v62];
    v64 = &v10[v62];
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    v66 = v12[32];
    v67 = &v9[v66];
    v68 = &v10[v66];
    v69 = v10[v66 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69 == 255)
    {
      *(_OWORD *)v67 = *(_OWORD *)v68;
      v67[16] = v68[16];
    }
    else
    {
      v70 = *(_QWORD *)v68;
      v71 = *((_QWORD *)v68 + 1);
      sub_244A82274(*(_QWORD *)v68, v71, v69);
      *(_QWORD *)v67 = v70;
      *((_QWORD *)v67 + 1) = v71;
      v67[16] = v69;
    }
    v72 = v12[33];
    v73 = &v9[v72];
    v74 = &v10[v72];
    *(_DWORD *)v73 = *(_DWORD *)v74;
    v73[4] = v74[4];
    v75 = v12[34];
    v76 = &v9[v75];
    v77 = &v10[v75];
    v78 = *((_QWORD *)v77 + 2);
    if (v78)
    {
      v79 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v79;
      v80 = *((_QWORD *)v77 + 3);
      v81 = *((_QWORD *)v77 + 4);
      *((_QWORD *)v76 + 2) = v78;
      *((_QWORD *)v76 + 3) = v80;
      v82 = *((_QWORD *)v77 + 5);
      v83 = *((_QWORD *)v77 + 6);
      *((_QWORD *)v76 + 4) = v81;
      *((_QWORD *)v76 + 5) = v82;
      *((_QWORD *)v76 + 6) = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v84 = *((_OWORD *)v77 + 1);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *((_OWORD *)v76 + 1) = v84;
      *((_OWORD *)v76 + 2) = *((_OWORD *)v77 + 2);
      *((_QWORD *)v76 + 6) = *((_QWORD *)v77 + 6);
    }
    return v88;
  }
  return (uint64_t *)v48;
}

uint64_t destroy for PrivateMLRequest.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int v15;

  v4 = sub_244AE3BDC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_244AE3B4C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for PrivateMLRequest(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7(v5 + v8[21], v6);
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(v5 + v8[24]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_244A7D674(*v9, v10);
  v11 = v5 + v8[25];
  v12 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v14 = v5 + v8[32];
  v15 = *(unsigned __int8 *)(v14 + 16);
  if (v15 != 255)
    result = sub_244A81ED4(*(_QWORD *)v14, *(_QWORD *)(v14 + 8), v15);
  if (*(_QWORD *)(v5 + v8[34] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PrivateMLRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;

  v6 = sub_244AE3BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v85 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v84 = v10;
  v83(v8, v9, v10);
  v11 = (int *)type metadata accessor for PrivateMLRequest(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v8 + v12);
  v14 = (_QWORD *)(v9 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v11[6];
  v17 = (_QWORD *)(v8 + v16);
  v18 = (_QWORD *)(v9 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v11[7];
  v21 = (_QWORD *)(v8 + v20);
  v22 = (_QWORD *)(v9 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v11[8];
  v25 = (_QWORD *)(v8 + v24);
  v26 = (_QWORD *)(v9 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v11[9];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (_QWORD *)(v9 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = v11[10];
  v33 = (_QWORD *)(v8 + v32);
  v34 = (_QWORD *)(v9 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  *(_DWORD *)(v8 + v11[11]) = *(_DWORD *)(v9 + v11[11]);
  *(_DWORD *)(v8 + v11[12]) = *(_DWORD *)(v9 + v11[12]);
  *(_DWORD *)(v8 + v11[13]) = *(_DWORD *)(v9 + v11[13]);
  *(_DWORD *)(v8 + v11[14]) = *(_DWORD *)(v9 + v11[14]);
  v36 = v11[15];
  v37 = v8 + v36;
  v38 = v9 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_DWORD *)(v8 + v11[16]) = *(_DWORD *)(v9 + v11[16]);
  *(_DWORD *)(v8 + v11[17]) = *(_DWORD *)(v9 + v11[17]);
  *(_DWORD *)(v8 + v11[18]) = *(_DWORD *)(v9 + v11[18]);
  *(_DWORD *)(v8 + v11[19]) = *(_DWORD *)(v9 + v11[19]);
  *(_QWORD *)(v8 + v11[20]) = *(_QWORD *)(v9 + v11[20]);
  v39 = v11[21];
  v40 = v8 + v39;
  v41 = v9 + v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v83(v40, v41, v84);
  *(_QWORD *)(v8 + v11[22]) = *(_QWORD *)(v9 + v11[22]);
  *(_QWORD *)(v8 + v11[23]) = *(_QWORD *)(v9 + v11[23]);
  v42 = v11[24];
  v43 = v8 + v42;
  v44 = (_OWORD *)(v9 + v42);
  v45 = *(_QWORD *)(v9 + v42 + 8);
  swift_bridgeObjectRetain();
  if (v45 >> 60 == 15)
  {
    *(_OWORD *)v43 = *v44;
  }
  else
  {
    v46 = *(_QWORD *)v44;
    sub_244A81E68(v46, v45);
    *(_QWORD *)v43 = v46;
    *(_QWORD *)(v43 + 8) = v45;
  }
  v47 = v11[25];
  v48 = v8 + v47;
  v49 = v9 + v47;
  v50 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = v11[26];
  v52 = (_QWORD *)(v8 + v51);
  v53 = (_QWORD *)(v9 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  *(_QWORD *)(v8 + v11[27]) = *(_QWORD *)(v9 + v11[27]);
  v55 = v11[28];
  v56 = (_QWORD *)(v8 + v55);
  v57 = (_QWORD *)(v9 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  *(_QWORD *)(v8 + v11[29]) = *(_QWORD *)(v9 + v11[29]);
  *(_QWORD *)(v8 + v11[30]) = *(_QWORD *)(v9 + v11[30]);
  v59 = v11[31];
  v60 = (_QWORD *)(v8 + v59);
  v61 = (_QWORD *)(v9 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  v63 = v11[32];
  v64 = v8 + v63;
  v65 = (uint64_t *)(v9 + v63);
  v66 = *(unsigned __int8 *)(v9 + v63 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v66 == 255)
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *(_BYTE *)(v64 + 16) = *((_BYTE *)v65 + 16);
  }
  else
  {
    v67 = *v65;
    v68 = v65[1];
    sub_244A82274(*v65, v68, v66);
    *(_QWORD *)v64 = v67;
    *(_QWORD *)(v64 + 8) = v68;
    *(_BYTE *)(v64 + 16) = v66;
  }
  v69 = v11[33];
  v70 = v8 + v69;
  v71 = v9 + v69;
  *(_DWORD *)v70 = *(_DWORD *)v71;
  *(_BYTE *)(v70 + 4) = *(_BYTE *)(v71 + 4);
  v72 = v11[34];
  v73 = (_QWORD *)(v8 + v72);
  v74 = (_QWORD *)(v9 + v72);
  v75 = v74[2];
  if (v75)
  {
    v76 = v74[1];
    *v73 = *v74;
    v73[1] = v76;
    v77 = v74[3];
    v78 = v74[4];
    v73[2] = v75;
    v73[3] = v77;
    v79 = v74[5];
    v80 = v74[6];
    v73[4] = v78;
    v73[5] = v79;
    v73[6] = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v81 = *((_OWORD *)v74 + 1);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v81;
    *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
    v73[6] = v74[6];
  }
  return v85;
}

uint64_t assignWithCopy for PrivateMLRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;

  v6 = sub_244AE3BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for PrivateMLRequest(0);
  v13 = v12[5];
  v14 = (_QWORD *)(v8 + v13);
  v15 = (_QWORD *)(v9 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = (_QWORD *)(v8 + v16);
  v18 = (_QWORD *)(v9 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v12[7];
  v20 = (_QWORD *)(v8 + v19);
  v21 = (_QWORD *)(v9 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v12[8];
  v23 = (_QWORD *)(v8 + v22);
  v24 = (_QWORD *)(v9 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v12[9];
  v26 = (_QWORD *)(v8 + v25);
  v27 = (_QWORD *)(v9 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v12[10];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (_QWORD *)(v9 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + v12[11]) = *(_DWORD *)(v9 + v12[11]);
  *(_DWORD *)(v8 + v12[12]) = *(_DWORD *)(v9 + v12[12]);
  *(_DWORD *)(v8 + v12[13]) = *(_DWORD *)(v9 + v12[13]);
  *(_DWORD *)(v8 + v12[14]) = *(_DWORD *)(v9 + v12[14]);
  v31 = v12[15];
  v32 = v8 + v31;
  v33 = (uint64_t *)(v9 + v31);
  v34 = *v33;
  *(_BYTE *)(v32 + 8) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  *(_DWORD *)(v8 + v12[16]) = *(_DWORD *)(v9 + v12[16]);
  *(_DWORD *)(v8 + v12[17]) = *(_DWORD *)(v9 + v12[17]);
  *(_DWORD *)(v8 + v12[18]) = *(_DWORD *)(v9 + v12[18]);
  *(_DWORD *)(v8 + v12[19]) = *(_DWORD *)(v9 + v12[19]);
  *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
  v11(v8 + v12[21], v9 + v12[21], v10);
  *(_QWORD *)(v8 + v12[22]) = *(_QWORD *)(v9 + v12[22]);
  *(_QWORD *)(v8 + v12[23]) = *(_QWORD *)(v9 + v12[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v12[24];
  v36 = (uint64_t *)(v8 + v35);
  v37 = (uint64_t *)(v9 + v35);
  v38 = *(_QWORD *)(v9 + v35 + 8);
  if (*(_QWORD *)(v8 + v35 + 8) >> 60 == 15)
  {
    if (v38 >> 60 != 15)
    {
      v39 = *v37;
      sub_244A81E68(v39, v38);
      *v36 = v39;
      v36[1] = v38;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v38 >> 60 == 15)
  {
    sub_244A82C44((uint64_t)v36);
LABEL_6:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_8;
  }
  v40 = *v37;
  sub_244A81E68(v40, v38);
  v41 = *v36;
  v42 = v36[1];
  *v36 = v40;
  v36[1] = v38;
  sub_244A7D674(v41, v42);
LABEL_8:
  v43 = v12[25];
  v44 = v8 + v43;
  v45 = v9 + v43;
  v46 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = v12[26];
  v48 = (_QWORD *)(v8 + v47);
  v49 = (_QWORD *)(v9 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[27]) = *(_QWORD *)(v9 + v12[27]);
  v50 = v12[28];
  v51 = (_QWORD *)(v8 + v50);
  v52 = (_QWORD *)(v9 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[29]) = *(_QWORD *)(v9 + v12[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[30]) = *(_QWORD *)(v9 + v12[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = v12[31];
  v54 = (_QWORD *)(v8 + v53);
  v55 = (_QWORD *)(v9 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v12[32];
  v57 = v8 + v56;
  v58 = (__int128 *)(v9 + v56);
  v59 = *(unsigned __int8 *)(v9 + v56 + 16);
  if (*(unsigned __int8 *)(v8 + v56 + 16) == 255)
  {
    if (v59 == 255)
    {
      v68 = *v58;
      *(_BYTE *)(v57 + 16) = *((_BYTE *)v58 + 16);
      *(_OWORD *)v57 = v68;
    }
    else
    {
      v65 = *(_QWORD *)v58;
      v66 = *((_QWORD *)v58 + 1);
      sub_244A82274(v65, v66, v59);
      *(_QWORD *)v57 = v65;
      *(_QWORD *)(v57 + 8) = v66;
      *(_BYTE *)(v57 + 16) = v59;
    }
  }
  else if (v59 == 255)
  {
    sub_244A82C78(v57);
    v67 = *((_BYTE *)v58 + 16);
    *(_OWORD *)v57 = *v58;
    *(_BYTE *)(v57 + 16) = v67;
  }
  else
  {
    v60 = *(_QWORD *)v58;
    v61 = *((_QWORD *)v58 + 1);
    sub_244A82274(v60, v61, v59);
    v62 = *(_QWORD *)v57;
    v63 = *(_QWORD *)(v57 + 8);
    *(_QWORD *)v57 = v60;
    *(_QWORD *)(v57 + 8) = v61;
    v64 = *(_BYTE *)(v57 + 16);
    *(_BYTE *)(v57 + 16) = v59;
    sub_244A81ED4(v62, v63, v64);
  }
  v69 = v12[33];
  v70 = v8 + v69;
  v71 = (int *)(v9 + v69);
  v72 = *v71;
  *(_BYTE *)(v70 + 4) = *((_BYTE *)v71 + 4);
  *(_DWORD *)v70 = v72;
  v73 = v12[34];
  v74 = (_QWORD *)(v8 + v73);
  v75 = (_QWORD *)(v9 + v73);
  v76 = *(_QWORD *)(v9 + v73 + 16);
  if (v74[2])
  {
    if (v76)
    {
      *v74 = *v75;
      v74[1] = v75[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[2] = v75[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[3] = v75[3];
      v74[4] = v75[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[5] = v75[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[6] = v75[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_244A951A8((uint64_t)v74);
      v78 = *((_OWORD *)v75 + 1);
      v77 = *((_OWORD *)v75 + 2);
      v79 = *(_OWORD *)v75;
      v74[6] = v75[6];
      *((_OWORD *)v74 + 1) = v78;
      *((_OWORD *)v74 + 2) = v77;
      *(_OWORD *)v74 = v79;
    }
  }
  else if (v76)
  {
    *v74 = *v75;
    v74[1] = v75[1];
    v74[2] = v75[2];
    v74[3] = v75[3];
    v74[4] = v75[4];
    v74[5] = v75[5];
    v74[6] = v75[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v80 = *(_OWORD *)v75;
    v81 = *((_OWORD *)v75 + 1);
    v82 = *((_OWORD *)v75 + 2);
    v74[6] = v75[6];
    *((_OWORD *)v74 + 1) = v81;
    *((_OWORD *)v74 + 2) = v82;
    *(_OWORD *)v74 = v80;
  }
  return a1;
}

uint64_t initializeWithTake for PrivateMLRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  __int128 v30;

  v6 = sub_244AE3BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for PrivateMLRequest(0);
  *(_OWORD *)(v8 + v12[5]) = *(_OWORD *)(v9 + v12[5]);
  *(_OWORD *)(v8 + v12[6]) = *(_OWORD *)(v9 + v12[6]);
  *(_OWORD *)(v8 + v12[7]) = *(_OWORD *)(v9 + v12[7]);
  *(_OWORD *)(v8 + v12[8]) = *(_OWORD *)(v9 + v12[8]);
  *(_OWORD *)(v8 + v12[9]) = *(_OWORD *)(v9 + v12[9]);
  *(_OWORD *)(v8 + v12[10]) = *(_OWORD *)(v9 + v12[10]);
  *(_DWORD *)(v8 + v12[11]) = *(_DWORD *)(v9 + v12[11]);
  *(_DWORD *)(v8 + v12[12]) = *(_DWORD *)(v9 + v12[12]);
  *(_DWORD *)(v8 + v12[13]) = *(_DWORD *)(v9 + v12[13]);
  *(_DWORD *)(v8 + v12[14]) = *(_DWORD *)(v9 + v12[14]);
  v13 = v12[15];
  v14 = v8 + v13;
  v15 = v9 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_DWORD *)(v8 + v12[16]) = *(_DWORD *)(v9 + v12[16]);
  *(_DWORD *)(v8 + v12[17]) = *(_DWORD *)(v9 + v12[17]);
  *(_DWORD *)(v8 + v12[18]) = *(_DWORD *)(v9 + v12[18]);
  *(_DWORD *)(v8 + v12[19]) = *(_DWORD *)(v9 + v12[19]);
  *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
  v11(v8 + v12[21], v9 + v12[21], v10);
  *(_QWORD *)(v8 + v12[22]) = *(_QWORD *)(v9 + v12[22]);
  *(_QWORD *)(v8 + v12[23]) = *(_QWORD *)(v9 + v12[23]);
  *(_OWORD *)(v8 + v12[24]) = *(_OWORD *)(v9 + v12[24]);
  v16 = v12[25];
  v17 = v8 + v16;
  v18 = v9 + v16;
  v19 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(v8 + v12[26]) = *(_OWORD *)(v9 + v12[26]);
  *(_QWORD *)(v8 + v12[27]) = *(_QWORD *)(v9 + v12[27]);
  *(_OWORD *)(v8 + v12[28]) = *(_OWORD *)(v9 + v12[28]);
  *(_QWORD *)(v8 + v12[29]) = *(_QWORD *)(v9 + v12[29]);
  *(_QWORD *)(v8 + v12[30]) = *(_QWORD *)(v9 + v12[30]);
  *(_OWORD *)(v8 + v12[31]) = *(_OWORD *)(v9 + v12[31]);
  v20 = v12[32];
  v21 = v8 + v20;
  v22 = v9 + v20;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  v23 = v12[33];
  v24 = v8 + v23;
  v25 = v9 + v23;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v26 = v12[34];
  v27 = v8 + v26;
  v28 = (__int128 *)(v9 + v26);
  *(_QWORD *)(v27 + 48) = *((_QWORD *)v28 + 6);
  v29 = v28[2];
  v30 = *v28;
  *(_OWORD *)(v27 + 16) = v28[1];
  *(_OWORD *)(v27 + 32) = v29;
  *(_OWORD *)v27 = v30;
  return a1;
}

uint64_t assignWithTake for PrivateMLRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;

  v6 = sub_244AE3BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for PrivateMLRequest(0);
  v13 = v12[5];
  v14 = (_QWORD *)(v8 + v13);
  v15 = (uint64_t *)(v9 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (uint64_t *)(v9 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v12[7];
  v24 = (_QWORD *)(v8 + v23);
  v25 = (uint64_t *)(v9 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = v12[8];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (uint64_t *)(v9 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = v12[9];
  v34 = (_QWORD *)(v8 + v33);
  v35 = (uint64_t *)(v9 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = v12[10];
  v39 = (_QWORD *)(v8 + v38);
  v40 = (uint64_t *)(v9 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + v12[11]) = *(_DWORD *)(v9 + v12[11]);
  *(_DWORD *)(v8 + v12[12]) = *(_DWORD *)(v9 + v12[12]);
  *(_DWORD *)(v8 + v12[13]) = *(_DWORD *)(v9 + v12[13]);
  *(_DWORD *)(v8 + v12[14]) = *(_DWORD *)(v9 + v12[14]);
  v43 = v12[15];
  v44 = v8 + v43;
  v45 = v9 + v43;
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *(_BYTE *)(v44 + 8) = *(_BYTE *)(v45 + 8);
  *(_DWORD *)(v8 + v12[16]) = *(_DWORD *)(v9 + v12[16]);
  *(_DWORD *)(v8 + v12[17]) = *(_DWORD *)(v9 + v12[17]);
  *(_DWORD *)(v8 + v12[18]) = *(_DWORD *)(v9 + v12[18]);
  *(_DWORD *)(v8 + v12[19]) = *(_DWORD *)(v9 + v12[19]);
  *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
  v11(v8 + v12[21], v9 + v12[21], v10);
  *(_QWORD *)(v8 + v12[22]) = *(_QWORD *)(v9 + v12[22]);
  *(_QWORD *)(v8 + v12[23]) = *(_QWORD *)(v9 + v12[23]);
  swift_bridgeObjectRelease();
  v46 = v12[24];
  v47 = v8 + v46;
  v48 = v9 + v46;
  v49 = *(_QWORD *)(v8 + v46 + 8);
  if (v49 >> 60 == 15)
    goto LABEL_4;
  v50 = *(_QWORD *)(v48 + 8);
  if (v50 >> 60 == 15)
  {
    sub_244A82C44(v47);
LABEL_4:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    goto LABEL_6;
  }
  v51 = *(_QWORD *)v47;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_QWORD *)(v47 + 8) = v50;
  sub_244A7D674(v51, v49);
LABEL_6:
  v52 = v12[25];
  v53 = v8 + v52;
  v54 = v9 + v52;
  v55 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
  v56 = v12[26];
  v57 = (_QWORD *)(v8 + v56);
  v58 = (uint64_t *)(v9 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[27]) = *(_QWORD *)(v9 + v12[27]);
  v61 = v12[28];
  v62 = (_QWORD *)(v8 + v61);
  v63 = (uint64_t *)(v9 + v61);
  v65 = *v63;
  v64 = v63[1];
  *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[29]) = *(_QWORD *)(v9 + v12[29]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[30]) = *(_QWORD *)(v9 + v12[30]);
  swift_bridgeObjectRelease();
  v66 = v12[31];
  v67 = (_QWORD *)(v8 + v66);
  v68 = (uint64_t *)(v9 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  v71 = v12[32];
  v72 = v8 + v71;
  v73 = v9 + v71;
  v74 = *(unsigned __int8 *)(v8 + v71 + 16);
  if (v74 != 255)
  {
    v75 = *(unsigned __int8 *)(v73 + 16);
    if (v75 != 255)
    {
      v76 = *(_QWORD *)v72;
      v77 = *(_QWORD *)(v72 + 8);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *(_BYTE *)(v72 + 16) = v75;
      sub_244A81ED4(v76, v77, v74);
      goto LABEL_11;
    }
    sub_244A82C78(v72);
  }
  *(_OWORD *)v72 = *(_OWORD *)v73;
  *(_BYTE *)(v72 + 16) = *(_BYTE *)(v73 + 16);
LABEL_11:
  v78 = v12[33];
  v79 = v8 + v78;
  v80 = v9 + v78;
  *(_DWORD *)v79 = *(_DWORD *)v80;
  *(_BYTE *)(v79 + 4) = *(_BYTE *)(v80 + 4);
  v81 = v12[34];
  v82 = v8 + v81;
  v83 = v9 + v81;
  if (!*(_QWORD *)(v82 + 16))
  {
LABEL_15:
    v86 = *(_OWORD *)(v83 + 16);
    *(_OWORD *)v82 = *(_OWORD *)v83;
    *(_OWORD *)(v82 + 16) = v86;
    *(_OWORD *)(v82 + 32) = *(_OWORD *)(v83 + 32);
    *(_QWORD *)(v82 + 48) = *(_QWORD *)(v83 + 48);
    return a1;
  }
  if (!*(_QWORD *)(v83 + 16))
  {
    sub_244A951A8(v82);
    goto LABEL_15;
  }
  v84 = *(_QWORD *)(v83 + 8);
  *(_QWORD *)v82 = *(_QWORD *)v83;
  *(_QWORD *)(v82 + 8) = v84;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v82 + 16) = *(_QWORD *)(v83 + 16);
  swift_bridgeObjectRelease();
  v85 = *(_QWORD *)(v83 + 32);
  *(_QWORD *)(v82 + 24) = *(_QWORD *)(v83 + 24);
  *(_QWORD *)(v82 + 32) = v85;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v82 + 40) = *(_QWORD *)(v83 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v82 + 48) = *(_QWORD *)(v83 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest.Response()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A97018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_244AE3BDC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for PrivateMLRequest(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest.Response()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244A97098(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_244AE3BDC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for PrivateMLRequest(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_244A97114()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_244AE3BDC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PrivateMLRequest(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PrivateMLRequest.Response.Event(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v43 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v43;
      swift_bridgeObjectRetain();
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v6 = sub_244AE3B4C();
    v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v109 = v6;
    v108(a1, a2, v6);
    v7 = (int *)type metadata accessor for PrivateMLRequest(0);
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    v12 = v7[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = v7[7];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v20 = v7[8];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = v7[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = v7[10];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    *(_DWORD *)&a1[v7[11]] = *(_DWORD *)&a2[v7[11]];
    *(_DWORD *)&a1[v7[12]] = *(_DWORD *)&a2[v7[12]];
    *(_DWORD *)&a1[v7[13]] = *(_DWORD *)&a2[v7[13]];
    *(_DWORD *)&a1[v7[14]] = *(_DWORD *)&a2[v7[14]];
    v32 = v7[15];
    v33 = &a1[v32];
    v34 = &a2[v32];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *(_DWORD *)&a1[v7[16]] = *(_DWORD *)&a2[v7[16]];
    *(_DWORD *)&a1[v7[17]] = *(_DWORD *)&a2[v7[17]];
    *(_DWORD *)&a1[v7[18]] = *(_DWORD *)&a2[v7[18]];
    *(_DWORD *)&a1[v7[19]] = *(_DWORD *)&a2[v7[19]];
    *(_QWORD *)&a1[v7[20]] = *(_QWORD *)&a2[v7[20]];
    v35 = v7[21];
    v36 = &a1[v35];
    v37 = &a2[v35];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v108(v36, v37, v109);
    *(_QWORD *)&a1[v7[22]] = *(_QWORD *)&a2[v7[22]];
    *(_QWORD *)&a1[v7[23]] = *(_QWORD *)&a2[v7[23]];
    v38 = v7[24];
    v39 = &a1[v38];
    v40 = &a2[v38];
    v41 = *(_QWORD *)&a2[v38 + 8];
    swift_bridgeObjectRetain();
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    else
    {
      v44 = *(_QWORD *)v40;
      sub_244A81E68(v44, v41);
      *(_QWORD *)v39 = v44;
      *((_QWORD *)v39 + 1) = v41;
    }
    v45 = v7[25];
    v46 = &a1[v45];
    v47 = &a2[v45];
    v48 = sub_244AE4314();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    v49 = v7[26];
    v50 = &a1[v49];
    v51 = &a2[v49];
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    *(_QWORD *)&a1[v7[27]] = *(_QWORD *)&a2[v7[27]];
    v53 = v7[28];
    v54 = &a1[v53];
    v55 = &a2[v53];
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    *(_QWORD *)&a1[v7[29]] = *(_QWORD *)&a2[v7[29]];
    *(_QWORD *)&a1[v7[30]] = *(_QWORD *)&a2[v7[30]];
    v57 = v7[31];
    v58 = &a1[v57];
    v59 = &a2[v57];
    v60 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *((_QWORD *)v58 + 1) = v60;
    v61 = v7[32];
    v62 = &a1[v61];
    v63 = &a2[v61];
    v64 = a2[v61 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v64 == 255)
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
      v62[16] = v63[16];
    }
    else
    {
      v65 = *(_QWORD *)v63;
      v66 = *((_QWORD *)v63 + 1);
      sub_244A82274(*(_QWORD *)v63, v66, v64);
      *(_QWORD *)v62 = v65;
      *((_QWORD *)v62 + 1) = v66;
      v62[16] = v64;
    }
    v67 = v7[33];
    v68 = &a1[v67];
    v69 = &a2[v67];
    *(_DWORD *)v68 = *(_DWORD *)v69;
    v68[4] = v69[4];
    v70 = v7[34];
    v71 = &a1[v70];
    v72 = &a2[v70];
    v73 = *((_QWORD *)v72 + 2);
    if (v73)
    {
      v74 = *((_QWORD *)v72 + 1);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = v74;
      v75 = *((_QWORD *)v72 + 3);
      v76 = *((_QWORD *)v72 + 4);
      *((_QWORD *)v71 + 2) = v73;
      *((_QWORD *)v71 + 3) = v75;
      v77 = *((_QWORD *)v72 + 5);
      v78 = *((_QWORD *)v72 + 6);
      *((_QWORD *)v71 + 4) = v76;
      *((_QWORD *)v71 + 5) = v77;
      *((_QWORD *)v71 + 6) = v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v79 = *((_OWORD *)v72 + 1);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v79;
      *((_OWORD *)v71 + 2) = *((_OWORD *)v72 + 2);
      *((_QWORD *)v71 + 6) = *((_QWORD *)v72 + 6);
    }
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF58);
    v81 = *(int *)(v80 + 48);
    v82 = &a1[v81];
    v83 = &a2[v81];
    v84 = *(_QWORD *)&a2[v81 + 8];
    if (v84 == 1)
    {
      v85 = *((_OWORD *)v83 + 7);
      *((_OWORD *)v82 + 6) = *((_OWORD *)v83 + 6);
      *((_OWORD *)v82 + 7) = v85;
      *((_OWORD *)v82 + 8) = *((_OWORD *)v83 + 8);
      v86 = *((_OWORD *)v83 + 3);
      *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
      *((_OWORD *)v82 + 3) = v86;
      v87 = *((_OWORD *)v83 + 5);
      *((_OWORD *)v82 + 4) = *((_OWORD *)v83 + 4);
      *((_OWORD *)v82 + 5) = v87;
      v88 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v88;
      goto LABEL_25;
    }
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    v89 = *((_QWORD *)v83 + 3);
    swift_bridgeObjectRetain();
    if (v89)
    {
      *((_QWORD *)v82 + 2) = *((_QWORD *)v83 + 2);
      *((_QWORD *)v82 + 3) = v89;
      v90 = *((_QWORD *)v83 + 5);
      *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
      *((_QWORD *)v82 + 5) = v90;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v91 = *((_QWORD *)v83 + 7);
      if (v91)
        goto LABEL_18;
    }
    else
    {
      v97 = *((_OWORD *)v83 + 2);
      *((_OWORD *)v82 + 1) = *((_OWORD *)v83 + 1);
      *((_OWORD *)v82 + 2) = v97;
      v91 = *((_QWORD *)v83 + 7);
      if (v91)
      {
LABEL_18:
        *((_QWORD *)v82 + 6) = *((_QWORD *)v83 + 6);
        *((_QWORD *)v82 + 7) = v91;
        v92 = *((_QWORD *)v83 + 9);
        *((_QWORD *)v82 + 8) = *((_QWORD *)v83 + 8);
        *((_QWORD *)v82 + 9) = v92;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v93 = *((_QWORD *)v83 + 11);
        if (v93)
          goto LABEL_19;
        goto LABEL_23;
      }
    }
    v98 = *((_OWORD *)v83 + 4);
    *((_OWORD *)v82 + 3) = *((_OWORD *)v83 + 3);
    *((_OWORD *)v82 + 4) = v98;
    v93 = *((_QWORD *)v83 + 11);
    if (v93)
    {
LABEL_19:
      *((_QWORD *)v82 + 10) = *((_QWORD *)v83 + 10);
      *((_QWORD *)v82 + 11) = v93;
      v94 = *((_QWORD *)v83 + 13);
      *((_QWORD *)v82 + 12) = *((_QWORD *)v83 + 12);
      *((_QWORD *)v82 + 13) = v94;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v95 = *((_QWORD *)v83 + 15);
      if (v95)
      {
LABEL_20:
        *((_QWORD *)v82 + 14) = *((_QWORD *)v83 + 14);
        *((_QWORD *)v82 + 15) = v95;
        v96 = *((_QWORD *)v83 + 17);
        *((_QWORD *)v82 + 16) = *((_QWORD *)v83 + 16);
        *((_QWORD *)v82 + 17) = v96;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
LABEL_24:
      v100 = *((_OWORD *)v83 + 8);
      *((_OWORD *)v82 + 7) = *((_OWORD *)v83 + 7);
      *((_OWORD *)v82 + 8) = v100;
LABEL_25:
      v101 = *(int *)(v80 + 64);
      v102 = &a1[v101];
      v103 = &a2[v101];
      v104 = *((_QWORD *)v103 + 1);
      if (v104)
      {
        *(_QWORD *)v102 = *(_QWORD *)v103;
        *((_QWORD *)v102 + 1) = v104;
        v105 = *((_QWORD *)v103 + 3);
        *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
        *((_QWORD *)v102 + 3) = v105;
        v102[32] = v103[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v106 = *((_OWORD *)v103 + 1);
        *(_OWORD *)v102 = *(_OWORD *)v103;
        *((_OWORD *)v102 + 1) = v106;
        v102[32] = v103[32];
      }
      goto LABEL_28;
    }
LABEL_23:
    v99 = *((_OWORD *)v83 + 6);
    *((_OWORD *)v82 + 5) = *((_OWORD *)v83 + 5);
    *((_OWORD *)v82 + 6) = v99;
    v95 = *((_QWORD *)v83 + 15);
    if (v95)
      goto LABEL_20;
    goto LABEL_24;
  }
  v42 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  a1 = (char *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for PrivateMLRequest.Response.Event(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  int *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_244AE3B4C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(a1, v2);
  v4 = (int *)type metadata accessor for PrivateMLRequest(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3(a1 + v4[21], v2);
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(a1 + v4[24]);
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_244A7D674(*v5, v6);
  v7 = a1 + v4[25];
  v8 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + v4[32];
  v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 != 255)
    sub_244A81ED4(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), v10);
  if (*(_QWORD *)(a1 + v4[34] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF58);
  v12 = (_QWORD *)(a1 + *(int *)(v11 + 48));
  if (v12[1] != 1)
  {
    swift_bridgeObjectRelease();
    if (v12[3])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v12[7])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v12[11])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v12[15])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  result = *(_QWORD *)(a1 + *(int *)(v11 + 64) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for PrivateMLRequest.Response.Event(char *a1, char *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v40 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v40;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  v4 = sub_244AE3B4C();
  v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v106 = v4;
  v105(a1, a2, v4);
  v5 = (int *)type metadata accessor for PrivateMLRequest(0);
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = *((_QWORD *)v8 + 1);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *((_QWORD *)v7 + 1) = v9;
  v10 = v5[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v5[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v18 = v5[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = v5[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  v26 = v5[10];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = v29;
  *(_DWORD *)&a1[v5[11]] = *(_DWORD *)&a2[v5[11]];
  *(_DWORD *)&a1[v5[12]] = *(_DWORD *)&a2[v5[12]];
  *(_DWORD *)&a1[v5[13]] = *(_DWORD *)&a2[v5[13]];
  *(_DWORD *)&a1[v5[14]] = *(_DWORD *)&a2[v5[14]];
  v30 = v5[15];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_DWORD *)&a1[v5[16]] = *(_DWORD *)&a2[v5[16]];
  *(_DWORD *)&a1[v5[17]] = *(_DWORD *)&a2[v5[17]];
  *(_DWORD *)&a1[v5[18]] = *(_DWORD *)&a2[v5[18]];
  *(_DWORD *)&a1[v5[19]] = *(_DWORD *)&a2[v5[19]];
  *(_QWORD *)&a1[v5[20]] = *(_QWORD *)&a2[v5[20]];
  v33 = v5[21];
  v34 = &a1[v33];
  v35 = &a2[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v105(v34, v35, v106);
  *(_QWORD *)&a1[v5[22]] = *(_QWORD *)&a2[v5[22]];
  *(_QWORD *)&a1[v5[23]] = *(_QWORD *)&a2[v5[23]];
  v36 = v5[24];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *(_QWORD *)&a2[v36 + 8];
  swift_bridgeObjectRetain();
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
  }
  else
  {
    v41 = *(_QWORD *)v38;
    sub_244A81E68(v41, v39);
    *(_QWORD *)v37 = v41;
    *((_QWORD *)v37 + 1) = v39;
  }
  v42 = v5[25];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = sub_244AE4314();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = v5[26];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = v49;
  *(_QWORD *)&a1[v5[27]] = *(_QWORD *)&a2[v5[27]];
  v50 = v5[28];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = v53;
  *(_QWORD *)&a1[v5[29]] = *(_QWORD *)&a2[v5[29]];
  *(_QWORD *)&a1[v5[30]] = *(_QWORD *)&a2[v5[30]];
  v54 = v5[31];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = *((_QWORD *)v56 + 1);
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *((_QWORD *)v55 + 1) = v57;
  v58 = v5[32];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = a2[v58 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v61 == 255)
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
    v59[16] = v60[16];
  }
  else
  {
    v62 = *(_QWORD *)v60;
    v63 = *((_QWORD *)v60 + 1);
    sub_244A82274(*(_QWORD *)v60, v63, v61);
    *(_QWORD *)v59 = v62;
    *((_QWORD *)v59 + 1) = v63;
    v59[16] = v61;
  }
  v64 = v5[33];
  v65 = &a1[v64];
  v66 = &a2[v64];
  *(_DWORD *)v65 = *(_DWORD *)v66;
  v65[4] = v66[4];
  v67 = v5[34];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = *((_QWORD *)v69 + 2);
  if (v70)
  {
    v71 = *((_QWORD *)v69 + 1);
    *(_QWORD *)v68 = *(_QWORD *)v69;
    *((_QWORD *)v68 + 1) = v71;
    v72 = *((_QWORD *)v69 + 3);
    v73 = *((_QWORD *)v69 + 4);
    *((_QWORD *)v68 + 2) = v70;
    *((_QWORD *)v68 + 3) = v72;
    v74 = *((_QWORD *)v69 + 5);
    v75 = *((_QWORD *)v69 + 6);
    *((_QWORD *)v68 + 4) = v73;
    *((_QWORD *)v68 + 5) = v74;
    *((_QWORD *)v68 + 6) = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *((_OWORD *)v69 + 1);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *((_OWORD *)v68 + 1) = v76;
    *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
    *((_QWORD *)v68 + 6) = *((_QWORD *)v69 + 6);
  }
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF58);
  v78 = *(int *)(v77 + 48);
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = *(_QWORD *)&a2[v78 + 8];
  if (v81 == 1)
  {
    v82 = *((_OWORD *)v80 + 7);
    *((_OWORD *)v79 + 6) = *((_OWORD *)v80 + 6);
    *((_OWORD *)v79 + 7) = v82;
    *((_OWORD *)v79 + 8) = *((_OWORD *)v80 + 8);
    v83 = *((_OWORD *)v80 + 3);
    *((_OWORD *)v79 + 2) = *((_OWORD *)v80 + 2);
    *((_OWORD *)v79 + 3) = v83;
    v84 = *((_OWORD *)v80 + 5);
    *((_OWORD *)v79 + 4) = *((_OWORD *)v80 + 4);
    *((_OWORD *)v79 + 5) = v84;
    v85 = *((_OWORD *)v80 + 1);
    *(_OWORD *)v79 = *(_OWORD *)v80;
    *((_OWORD *)v79 + 1) = v85;
    goto LABEL_23;
  }
  *(_QWORD *)v79 = *(_QWORD *)v80;
  *((_QWORD *)v79 + 1) = v81;
  v86 = *((_QWORD *)v80 + 3);
  swift_bridgeObjectRetain();
  if (v86)
  {
    *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
    *((_QWORD *)v79 + 3) = v86;
    v87 = *((_QWORD *)v80 + 5);
    *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
    *((_QWORD *)v79 + 5) = v87;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v88 = *((_QWORD *)v80 + 7);
    if (v88)
      goto LABEL_16;
  }
  else
  {
    v94 = *((_OWORD *)v80 + 2);
    *((_OWORD *)v79 + 1) = *((_OWORD *)v80 + 1);
    *((_OWORD *)v79 + 2) = v94;
    v88 = *((_QWORD *)v80 + 7);
    if (v88)
    {
LABEL_16:
      *((_QWORD *)v79 + 6) = *((_QWORD *)v80 + 6);
      *((_QWORD *)v79 + 7) = v88;
      v89 = *((_QWORD *)v80 + 9);
      *((_QWORD *)v79 + 8) = *((_QWORD *)v80 + 8);
      *((_QWORD *)v79 + 9) = v89;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v90 = *((_QWORD *)v80 + 11);
      if (v90)
        goto LABEL_17;
LABEL_21:
      v96 = *((_OWORD *)v80 + 6);
      *((_OWORD *)v79 + 5) = *((_OWORD *)v80 + 5);
      *((_OWORD *)v79 + 6) = v96;
      v92 = *((_QWORD *)v80 + 15);
      if (v92)
        goto LABEL_18;
      goto LABEL_22;
    }
  }
  v95 = *((_OWORD *)v80 + 4);
  *((_OWORD *)v79 + 3) = *((_OWORD *)v80 + 3);
  *((_OWORD *)v79 + 4) = v95;
  v90 = *((_QWORD *)v80 + 11);
  if (!v90)
    goto LABEL_21;
LABEL_17:
  *((_QWORD *)v79 + 10) = *((_QWORD *)v80 + 10);
  *((_QWORD *)v79 + 11) = v90;
  v91 = *((_QWORD *)v80 + 13);
  *((_QWORD *)v79 + 12) = *((_QWORD *)v80 + 12);
  *((_QWORD *)v79 + 13) = v91;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v92 = *((_QWORD *)v80 + 15);
  if (v92)
  {
LABEL_18:
    *((_QWORD *)v79 + 14) = *((_QWORD *)v80 + 14);
    *((_QWORD *)v79 + 15) = v92;
    v93 = *((_QWORD *)v80 + 17);
    *((_QWORD *)v79 + 16) = *((_QWORD *)v80 + 16);
    *((_QWORD *)v79 + 17) = v93;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
LABEL_22:
  v97 = *((_OWORD *)v80 + 8);
  *((_OWORD *)v79 + 7) = *((_OWORD *)v80 + 7);
  *((_OWORD *)v79 + 8) = v97;
LABEL_23:
  v98 = *(int *)(v77 + 64);
  v99 = &a1[v98];
  v100 = &a2[v98];
  v101 = *((_QWORD *)v100 + 1);
  if (v101)
  {
    *(_QWORD *)v99 = *(_QWORD *)v100;
    *((_QWORD *)v99 + 1) = v101;
    v102 = *((_QWORD *)v100 + 3);
    *((_QWORD *)v99 + 2) = *((_QWORD *)v100 + 2);
    *((_QWORD *)v99 + 3) = v102;
    v99[32] = v100[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v103 = *((_OWORD *)v100 + 1);
    *(_OWORD *)v99 = *(_OWORD *)v100;
    *((_OWORD *)v99 + 1) = v103;
    v99[32] = v100[32];
  }
LABEL_26:
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for PrivateMLRequest.Response.Event(char *a1, char *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  __int128 v85;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;

  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for PrivateMLRequest.Response.Event);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v4 = sub_244AE3B4C();
    v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
    v88 = v4;
    v87(a1, a2, v4);
    v5 = (int *)type metadata accessor for PrivateMLRequest(0);
    v6 = v5[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
    v9 = v5[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    v12 = v5[7];
    v13 = &a1[v12];
    v14 = &a2[v12];
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    v15 = v5[8];
    v16 = &a1[v15];
    v17 = &a2[v15];
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
    v18 = v5[9];
    v19 = &a1[v18];
    v20 = &a2[v18];
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    v21 = v5[10];
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    *(_DWORD *)&a1[v5[11]] = *(_DWORD *)&a2[v5[11]];
    *(_DWORD *)&a1[v5[12]] = *(_DWORD *)&a2[v5[12]];
    *(_DWORD *)&a1[v5[13]] = *(_DWORD *)&a2[v5[13]];
    *(_DWORD *)&a1[v5[14]] = *(_DWORD *)&a2[v5[14]];
    v24 = v5[15];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = v26[8];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v27;
    *(_DWORD *)&a1[v5[16]] = *(_DWORD *)&a2[v5[16]];
    *(_DWORD *)&a1[v5[17]] = *(_DWORD *)&a2[v5[17]];
    *(_DWORD *)&a1[v5[18]] = *(_DWORD *)&a2[v5[18]];
    *(_DWORD *)&a1[v5[19]] = *(_DWORD *)&a2[v5[19]];
    *(_QWORD *)&a1[v5[20]] = *(_QWORD *)&a2[v5[20]];
    v28 = v5[21];
    v29 = &a1[v28];
    v30 = &a2[v28];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87(v29, v30, v88);
    *(_QWORD *)&a1[v5[22]] = *(_QWORD *)&a2[v5[22]];
    *(_QWORD *)&a1[v5[23]] = *(_QWORD *)&a2[v5[23]];
    v31 = v5[24];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = *(_QWORD *)&a2[v31 + 8];
    swift_bridgeObjectRetain();
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
    }
    else
    {
      v35 = *(_QWORD *)v33;
      sub_244A81E68(v35, v34);
      *(_QWORD *)v32 = v35;
      *((_QWORD *)v32 + 1) = v34;
    }
    v36 = v5[25];
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = sub_244AE4314();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = v5[26];
    v41 = &a1[v40];
    v42 = &a2[v40];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
    *(_QWORD *)&a1[v5[27]] = *(_QWORD *)&a2[v5[27]];
    v43 = v5[28];
    v44 = &a1[v43];
    v45 = &a2[v43];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
    *(_QWORD *)&a1[v5[29]] = *(_QWORD *)&a2[v5[29]];
    *(_QWORD *)&a1[v5[30]] = *(_QWORD *)&a2[v5[30]];
    v46 = v5[31];
    v47 = &a1[v46];
    v48 = &a2[v46];
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
    v49 = v5[32];
    v50 = &a1[v49];
    v51 = &a2[v49];
    v52 = a2[v49 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52 == 255)
    {
      v55 = *(_OWORD *)v51;
      v50[16] = v51[16];
      *(_OWORD *)v50 = v55;
    }
    else
    {
      v53 = *(_QWORD *)v51;
      v54 = *((_QWORD *)v51 + 1);
      sub_244A82274(*(_QWORD *)v51, v54, v52);
      *(_QWORD *)v50 = v53;
      *((_QWORD *)v50 + 1) = v54;
      v50[16] = v52;
    }
    v56 = v5[33];
    v57 = &a1[v56];
    v58 = &a2[v56];
    v59 = *(_DWORD *)v58;
    v57[4] = v58[4];
    *(_DWORD *)v57 = v59;
    v60 = v5[34];
    v61 = &a1[v60];
    v62 = &a2[v60];
    if (*((_QWORD *)v62 + 2))
    {
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
      *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
      *((_QWORD *)v61 + 3) = *((_QWORD *)v62 + 3);
      *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
      *((_QWORD *)v61 + 5) = *((_QWORD *)v62 + 5);
      *((_QWORD *)v61 + 6) = *((_QWORD *)v62 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v63 = *(_OWORD *)v62;
      v64 = *((_OWORD *)v62 + 1);
      v65 = *((_OWORD *)v62 + 2);
      *((_QWORD *)v61 + 6) = *((_QWORD *)v62 + 6);
      *((_OWORD *)v61 + 1) = v64;
      *((_OWORD *)v61 + 2) = v65;
      *(_OWORD *)v61 = v63;
    }
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF58);
    v67 = *(int *)(v66 + 48);
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (*(_QWORD *)&a2[v67 + 8] == 1)
    {
      *(_OWORD *)v68 = *(_OWORD *)v69;
      v70 = *((_OWORD *)v69 + 1);
      v71 = *((_OWORD *)v69 + 2);
      v72 = *((_OWORD *)v69 + 4);
      *((_OWORD *)v68 + 3) = *((_OWORD *)v69 + 3);
      *((_OWORD *)v68 + 4) = v72;
      *((_OWORD *)v68 + 1) = v70;
      *((_OWORD *)v68 + 2) = v71;
      v73 = *((_OWORD *)v69 + 5);
      v74 = *((_OWORD *)v69 + 6);
      v75 = *((_OWORD *)v69 + 8);
      *((_OWORD *)v68 + 7) = *((_OWORD *)v69 + 7);
      *((_OWORD *)v68 + 8) = v75;
      *((_OWORD *)v68 + 5) = v73;
      *((_OWORD *)v68 + 6) = v74;
      goto LABEL_24;
    }
    *(_QWORD *)v68 = *(_QWORD *)v69;
    *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
    v76 = *((_QWORD *)v69 + 3);
    swift_bridgeObjectRetain();
    if (v76)
    {
      *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
      *((_QWORD *)v68 + 3) = *((_QWORD *)v69 + 3);
      *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
      *((_QWORD *)v68 + 5) = *((_QWORD *)v69 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v69 + 7))
        goto LABEL_17;
    }
    else
    {
      v77 = *((_OWORD *)v69 + 2);
      *((_OWORD *)v68 + 1) = *((_OWORD *)v69 + 1);
      *((_OWORD *)v68 + 2) = v77;
      if (*((_QWORD *)v69 + 7))
      {
LABEL_17:
        *((_QWORD *)v68 + 6) = *((_QWORD *)v69 + 6);
        *((_QWORD *)v68 + 7) = *((_QWORD *)v69 + 7);
        *((_QWORD *)v68 + 8) = *((_QWORD *)v69 + 8);
        *((_QWORD *)v68 + 9) = *((_QWORD *)v69 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (*((_QWORD *)v69 + 11))
          goto LABEL_18;
        goto LABEL_22;
      }
    }
    v78 = *((_OWORD *)v69 + 4);
    *((_OWORD *)v68 + 3) = *((_OWORD *)v69 + 3);
    *((_OWORD *)v68 + 4) = v78;
    if (*((_QWORD *)v69 + 11))
    {
LABEL_18:
      *((_QWORD *)v68 + 10) = *((_QWORD *)v69 + 10);
      *((_QWORD *)v68 + 11) = *((_QWORD *)v69 + 11);
      *((_QWORD *)v68 + 12) = *((_QWORD *)v69 + 12);
      *((_QWORD *)v68 + 13) = *((_QWORD *)v69 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v69 + 15))
      {
LABEL_19:
        *((_QWORD *)v68 + 14) = *((_QWORD *)v69 + 14);
        *((_QWORD *)v68 + 15) = *((_QWORD *)v69 + 15);
        *((_QWORD *)v68 + 16) = *((_QWORD *)v69 + 16);
        *((_QWORD *)v68 + 17) = *((_QWORD *)v69 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      }
LABEL_23:
      v80 = *((_OWORD *)v69 + 8);
      *((_OWORD *)v68 + 7) = *((_OWORD *)v69 + 7);
      *((_OWORD *)v68 + 8) = v80;
LABEL_24:
      v81 = *(int *)(v66 + 64);
      v82 = &a1[v81];
      v83 = &a2[v81];
      if (*((_QWORD *)v83 + 1))
      {
        *(_QWORD *)v82 = *(_QWORD *)v83;
        *((_QWORD *)v82 + 1) = *((_QWORD *)v83 + 1);
        *((_QWORD *)v82 + 2) = *((_QWORD *)v83 + 2);
        *((_QWORD *)v82 + 3) = *((_QWORD *)v83 + 3);
        v82[32] = v83[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v84 = *(_OWORD *)v83;
        v85 = *((_OWORD *)v83 + 1);
        v82[32] = v83[32];
        *(_OWORD *)v82 = v84;
        *((_OWORD *)v82 + 1) = v85;
      }
      goto LABEL_27;
    }
LABEL_22:
    v79 = *((_OWORD *)v69 + 6);
    *((_OWORD *)v68 + 5) = *((_OWORD *)v69 + 5);
    *((_OWORD *)v68 + 6) = v79;
    if (*((_QWORD *)v69 + 15))
      goto LABEL_19;
    goto LABEL_23;
  }
  return a1;
}

char *initializeWithTake for PrivateMLRequest.Response.Event(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_244AE3B4C();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for PrivateMLRequest(0);
    *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
    *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
    *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
    *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
    *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
    *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
    *(_DWORD *)&a1[v8[11]] = *(_DWORD *)&a2[v8[11]];
    *(_DWORD *)&a1[v8[12]] = *(_DWORD *)&a2[v8[12]];
    *(_DWORD *)&a1[v8[13]] = *(_DWORD *)&a2[v8[13]];
    *(_DWORD *)&a1[v8[14]] = *(_DWORD *)&a2[v8[14]];
    v9 = v8[15];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *(_DWORD *)&a1[v8[16]] = *(_DWORD *)&a2[v8[16]];
    *(_DWORD *)&a1[v8[17]] = *(_DWORD *)&a2[v8[17]];
    *(_DWORD *)&a1[v8[18]] = *(_DWORD *)&a2[v8[18]];
    *(_DWORD *)&a1[v8[19]] = *(_DWORD *)&a2[v8[19]];
    *(_QWORD *)&a1[v8[20]] = *(_QWORD *)&a2[v8[20]];
    v7(&a1[v8[21]], &a2[v8[21]], v6);
    *(_QWORD *)&a1[v8[22]] = *(_QWORD *)&a2[v8[22]];
    *(_QWORD *)&a1[v8[23]] = *(_QWORD *)&a2[v8[23]];
    *(_OWORD *)&a1[v8[24]] = *(_OWORD *)&a2[v8[24]];
    v12 = v8[25];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_244AE4314();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    *(_OWORD *)&a1[v8[26]] = *(_OWORD *)&a2[v8[26]];
    *(_QWORD *)&a1[v8[27]] = *(_QWORD *)&a2[v8[27]];
    *(_OWORD *)&a1[v8[28]] = *(_OWORD *)&a2[v8[28]];
    *(_QWORD *)&a1[v8[29]] = *(_QWORD *)&a2[v8[29]];
    *(_QWORD *)&a1[v8[30]] = *(_QWORD *)&a2[v8[30]];
    *(_OWORD *)&a1[v8[31]] = *(_OWORD *)&a2[v8[31]];
    v16 = v8[32];
    v17 = &a1[v16];
    v18 = &a2[v16];
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v17[16] = v18[16];
    v19 = v8[33];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v20[4] = v21[4];
    *(_DWORD *)v20 = *(_DWORD *)v21;
    v22 = v8[34];
    v23 = &a1[v22];
    v24 = &a2[v22];
    *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
    v25 = *((_OWORD *)v24 + 2);
    v26 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
    *((_OWORD *)v23 + 2) = v25;
    *(_OWORD *)v23 = v26;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF58);
    v28 = *(int *)(v27 + 48);
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *((_OWORD *)v30 + 3);
    *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    *((_OWORD *)v29 + 3) = v31;
    v32 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v32;
    v33 = *((_OWORD *)v30 + 8);
    v34 = *((_OWORD *)v30 + 6);
    *((_OWORD *)v29 + 7) = *((_OWORD *)v30 + 7);
    *((_OWORD *)v29 + 8) = v33;
    v35 = *((_OWORD *)v30 + 5);
    *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
    *((_OWORD *)v29 + 5) = v35;
    *((_OWORD *)v29 + 6) = v34;
    v36 = *(int *)(v27 + 64);
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = *((_OWORD *)v38 + 1);
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v39;
    v37[32] = v38[32];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for PrivateMLRequest.Response.Event(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;

  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for PrivateMLRequest.Response.Event);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_244AE3B4C();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for PrivateMLRequest(0);
      *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      *(_DWORD *)&a1[v8[11]] = *(_DWORD *)&a2[v8[11]];
      *(_DWORD *)&a1[v8[12]] = *(_DWORD *)&a2[v8[12]];
      *(_DWORD *)&a1[v8[13]] = *(_DWORD *)&a2[v8[13]];
      *(_DWORD *)&a1[v8[14]] = *(_DWORD *)&a2[v8[14]];
      v9 = v8[15];
      v10 = &a1[v9];
      v11 = &a2[v9];
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v10[8] = v11[8];
      *(_DWORD *)&a1[v8[16]] = *(_DWORD *)&a2[v8[16]];
      *(_DWORD *)&a1[v8[17]] = *(_DWORD *)&a2[v8[17]];
      *(_DWORD *)&a1[v8[18]] = *(_DWORD *)&a2[v8[18]];
      *(_DWORD *)&a1[v8[19]] = *(_DWORD *)&a2[v8[19]];
      *(_QWORD *)&a1[v8[20]] = *(_QWORD *)&a2[v8[20]];
      v7(&a1[v8[21]], &a2[v8[21]], v6);
      *(_QWORD *)&a1[v8[22]] = *(_QWORD *)&a2[v8[22]];
      *(_QWORD *)&a1[v8[23]] = *(_QWORD *)&a2[v8[23]];
      *(_OWORD *)&a1[v8[24]] = *(_OWORD *)&a2[v8[24]];
      v12 = v8[25];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_244AE4314();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)&a1[v8[26]] = *(_OWORD *)&a2[v8[26]];
      *(_QWORD *)&a1[v8[27]] = *(_QWORD *)&a2[v8[27]];
      *(_OWORD *)&a1[v8[28]] = *(_OWORD *)&a2[v8[28]];
      *(_QWORD *)&a1[v8[29]] = *(_QWORD *)&a2[v8[29]];
      *(_QWORD *)&a1[v8[30]] = *(_QWORD *)&a2[v8[30]];
      *(_OWORD *)&a1[v8[31]] = *(_OWORD *)&a2[v8[31]];
      v16 = v8[32];
      v17 = &a1[v16];
      v18 = &a2[v16];
      *(_OWORD *)v17 = *(_OWORD *)v18;
      v17[16] = v18[16];
      v19 = v8[33];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v20[4] = v21[4];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v22 = v8[34];
      v23 = &a1[v22];
      v24 = &a2[v22];
      *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
      v25 = *((_OWORD *)v24 + 2);
      v26 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((_OWORD *)v23 + 2) = v25;
      *(_OWORD *)v23 = v26;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF58);
      v28 = *(int *)(v27 + 48);
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v31;
      v32 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v32;
      v33 = *((_OWORD *)v30 + 8);
      v34 = *((_OWORD *)v30 + 6);
      *((_OWORD *)v29 + 7) = *((_OWORD *)v30 + 7);
      *((_OWORD *)v29 + 8) = v33;
      v35 = *((_OWORD *)v30 + 5);
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      *((_OWORD *)v29 + 5) = v35;
      *((_OWORD *)v29 + 6) = v34;
      v36 = *(int *)(v27 + 64);
      v37 = &a1[v36];
      v38 = &a2[v36];
      v39 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v39;
      v37[32] = v38[32];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest.Response.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest.Response.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_244A98B88()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_244A98B98()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = &unk_244AE5148;
  result = type metadata accessor for PrivateMLRequest(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest.Response.AsyncEventsIterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest.Response.AsyncEventsIterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_244A98DC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2573D02C8[0])
  {
    sub_244AE3BC4();
    v0 = sub_244AE43A4();
    if (!v1)
      atomic_store(v0, qword_2573D02C8);
  }
}

_QWORD *_s15PrivateMLClient16PrivateMLRequestV8ResponseV19AsyncEventsIteratorVwCP_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v47 = *a2;
    *a1 = *a2;
    v48 = (_QWORD *)(v47 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE41AC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v96 = a3;
    v97 = a2;
    v8 = *(int *)(a3 + 20);
    v98 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3B4C();
    v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v95 = v11;
    v94(v9, v10, v11);
    v12 = (int *)type metadata accessor for PrivateMLRequest(0);
    v13 = v12[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v12[7];
    v22 = &v9[v21];
    v23 = &v10[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = v12[8];
    v26 = &v9[v25];
    v27 = &v10[v25];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = v12[9];
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = v12[10];
    v34 = &v9[v33];
    v35 = &v10[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    *(_DWORD *)&v9[v12[11]] = *(_DWORD *)&v10[v12[11]];
    *(_DWORD *)&v9[v12[12]] = *(_DWORD *)&v10[v12[12]];
    *(_DWORD *)&v9[v12[13]] = *(_DWORD *)&v10[v12[13]];
    *(_DWORD *)&v9[v12[14]] = *(_DWORD *)&v10[v12[14]];
    v37 = v12[15];
    v38 = &v9[v37];
    v39 = &v10[v37];
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    *(_DWORD *)&v9[v12[16]] = *(_DWORD *)&v10[v12[16]];
    *(_DWORD *)&v9[v12[17]] = *(_DWORD *)&v10[v12[17]];
    *(_DWORD *)&v9[v12[18]] = *(_DWORD *)&v10[v12[18]];
    *(_DWORD *)&v9[v12[19]] = *(_DWORD *)&v10[v12[19]];
    *(_QWORD *)&v9[v12[20]] = *(_QWORD *)&v10[v12[20]];
    v40 = v12[21];
    v41 = &v9[v40];
    v42 = &v10[v40];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v94(v41, v42, v95);
    *(_QWORD *)&v9[v12[22]] = *(_QWORD *)&v10[v12[22]];
    *(_QWORD *)&v9[v12[23]] = *(_QWORD *)&v10[v12[23]];
    v43 = v12[24];
    v44 = &v9[v43];
    v45 = &v10[v43];
    v46 = *(_QWORD *)&v10[v43 + 8];
    swift_bridgeObjectRetain();
    if (v46 >> 60 == 15)
    {
      *(_OWORD *)v44 = *(_OWORD *)v45;
    }
    else
    {
      v49 = *(_QWORD *)v45;
      sub_244A81E68(v49, v46);
      *(_QWORD *)v44 = v49;
      *((_QWORD *)v44 + 1) = v46;
    }
    v50 = v12[25];
    v51 = &v9[v50];
    v52 = &v10[v50];
    v53 = sub_244AE4314();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v54 = v12[26];
    v55 = &v9[v54];
    v56 = &v10[v54];
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    *(_QWORD *)&v9[v12[27]] = *(_QWORD *)&v10[v12[27]];
    v58 = v12[28];
    v59 = &v9[v58];
    v60 = &v10[v58];
    v61 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = v61;
    *(_QWORD *)&v9[v12[29]] = *(_QWORD *)&v10[v12[29]];
    *(_QWORD *)&v9[v12[30]] = *(_QWORD *)&v10[v12[30]];
    v62 = v12[31];
    v63 = &v9[v62];
    v64 = &v10[v62];
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    v66 = v12[32];
    v67 = &v9[v66];
    v68 = &v10[v66];
    v69 = v10[v66 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69 == 255)
    {
      *(_OWORD *)v67 = *(_OWORD *)v68;
      v67[16] = v68[16];
    }
    else
    {
      v70 = *(_QWORD *)v68;
      v71 = *((_QWORD *)v68 + 1);
      sub_244A82274(*(_QWORD *)v68, v71, v69);
      *(_QWORD *)v67 = v70;
      *((_QWORD *)v67 + 1) = v71;
      v67[16] = v69;
    }
    v72 = v12[33];
    v73 = &v9[v72];
    v74 = &v10[v72];
    *(_DWORD *)v73 = *(_DWORD *)v74;
    v73[4] = v74[4];
    v75 = v12[34];
    v76 = &v9[v75];
    v77 = &v10[v75];
    v78 = *((_QWORD *)v77 + 2);
    if (v78)
    {
      v79 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v79;
      v80 = *((_QWORD *)v77 + 3);
      v81 = *((_QWORD *)v77 + 4);
      *((_QWORD *)v76 + 2) = v78;
      *((_QWORD *)v76 + 3) = v80;
      v82 = *((_QWORD *)v77 + 5);
      v83 = *((_QWORD *)v77 + 6);
      *((_QWORD *)v76 + 4) = v81;
      *((_QWORD *)v76 + 5) = v82;
      *((_QWORD *)v76 + 6) = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v84 = *((_OWORD *)v77 + 1);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *((_OWORD *)v76 + 1) = v84;
      *((_OWORD *)v76 + 2) = *((_OWORD *)v77 + 2);
      *((_QWORD *)v76 + 6) = *((_QWORD *)v77 + 6);
    }
    v48 = v98;
    v85 = *(int *)(v96 + 24);
    v86 = (char *)v98 + v85;
    v87 = (char *)v97 + v85;
    v88 = sub_244AE3BC4();
    v89 = *(_QWORD *)(v88 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
    {
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF18);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
    }
    v91 = *(int *)(v96 + 28);
    v92 = *(_OWORD *)((char *)v97 + v91 + 24);
    *(_OWORD *)((char *)v98 + v91 + 24) = v92;
    (**(void (***)(void))(v92 - 8))();
  }
  return v48;
}

uint64_t _s15PrivateMLClient16PrivateMLRequestV8ResponseV19AsyncEventsIteratorVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_244AE3B4C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for PrivateMLRequest(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7(v5 + v8[21], v6);
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(v5 + v8[24]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_244A7D674(*v9, v10);
  v11 = v5 + v8[25];
  v12 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v5 + v8[32];
  v14 = *(unsigned __int8 *)(v13 + 16);
  if (v14 != 255)
    sub_244A81ED4(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), v14);
  if (*(_QWORD *)(v5 + v8[34] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = a1 + a2[6];
  v16 = sub_244AE3BC4();
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + a2[7]);
}

uint64_t _s15PrivateMLClient16PrivateMLRequestV8ResponseV19AsyncEventsIteratorVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v6 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v93 = a3;
  v94 = a2;
  v7 = *(int *)(a3 + 20);
  v95 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v92 = v10;
  v91(v8, v9, v10);
  v11 = (int *)type metadata accessor for PrivateMLRequest(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v8 + v12);
  v14 = (_QWORD *)(v9 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v11[6];
  v17 = (_QWORD *)(v8 + v16);
  v18 = (_QWORD *)(v9 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v11[7];
  v21 = (_QWORD *)(v8 + v20);
  v22 = (_QWORD *)(v9 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v11[8];
  v25 = (_QWORD *)(v8 + v24);
  v26 = (_QWORD *)(v9 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v11[9];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (_QWORD *)(v9 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = v11[10];
  v33 = (_QWORD *)(v8 + v32);
  v34 = (_QWORD *)(v9 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  *(_DWORD *)(v8 + v11[11]) = *(_DWORD *)(v9 + v11[11]);
  *(_DWORD *)(v8 + v11[12]) = *(_DWORD *)(v9 + v11[12]);
  *(_DWORD *)(v8 + v11[13]) = *(_DWORD *)(v9 + v11[13]);
  *(_DWORD *)(v8 + v11[14]) = *(_DWORD *)(v9 + v11[14]);
  v36 = v11[15];
  v37 = v8 + v36;
  v38 = v9 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_DWORD *)(v8 + v11[16]) = *(_DWORD *)(v9 + v11[16]);
  *(_DWORD *)(v8 + v11[17]) = *(_DWORD *)(v9 + v11[17]);
  *(_DWORD *)(v8 + v11[18]) = *(_DWORD *)(v9 + v11[18]);
  *(_DWORD *)(v8 + v11[19]) = *(_DWORD *)(v9 + v11[19]);
  *(_QWORD *)(v8 + v11[20]) = *(_QWORD *)(v9 + v11[20]);
  v39 = v11[21];
  v40 = v8 + v39;
  v41 = v9 + v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v91(v40, v41, v92);
  *(_QWORD *)(v8 + v11[22]) = *(_QWORD *)(v9 + v11[22]);
  *(_QWORD *)(v8 + v11[23]) = *(_QWORD *)(v9 + v11[23]);
  v42 = v11[24];
  v43 = v8 + v42;
  v44 = (_OWORD *)(v9 + v42);
  v45 = *(_QWORD *)(v9 + v42 + 8);
  swift_bridgeObjectRetain();
  if (v45 >> 60 == 15)
  {
    *(_OWORD *)v43 = *v44;
  }
  else
  {
    v46 = *(_QWORD *)v44;
    sub_244A81E68(v46, v45);
    *(_QWORD *)v43 = v46;
    *(_QWORD *)(v43 + 8) = v45;
  }
  v47 = v11[25];
  v48 = v8 + v47;
  v49 = v9 + v47;
  v50 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = v11[26];
  v52 = (_QWORD *)(v8 + v51);
  v53 = (_QWORD *)(v9 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  *(_QWORD *)(v8 + v11[27]) = *(_QWORD *)(v9 + v11[27]);
  v55 = v11[28];
  v56 = (_QWORD *)(v8 + v55);
  v57 = (_QWORD *)(v9 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  *(_QWORD *)(v8 + v11[29]) = *(_QWORD *)(v9 + v11[29]);
  *(_QWORD *)(v8 + v11[30]) = *(_QWORD *)(v9 + v11[30]);
  v59 = v11[31];
  v60 = (_QWORD *)(v8 + v59);
  v61 = (_QWORD *)(v9 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  v63 = v11[32];
  v64 = v8 + v63;
  v65 = (uint64_t *)(v9 + v63);
  v66 = *(unsigned __int8 *)(v9 + v63 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v66 == 255)
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *(_BYTE *)(v64 + 16) = *((_BYTE *)v65 + 16);
  }
  else
  {
    v67 = *v65;
    v68 = v65[1];
    sub_244A82274(*v65, v68, v66);
    *(_QWORD *)v64 = v67;
    *(_QWORD *)(v64 + 8) = v68;
    *(_BYTE *)(v64 + 16) = v66;
  }
  v69 = v11[33];
  v70 = v8 + v69;
  v71 = v9 + v69;
  *(_DWORD *)v70 = *(_DWORD *)v71;
  *(_BYTE *)(v70 + 4) = *(_BYTE *)(v71 + 4);
  v72 = v11[34];
  v73 = (_QWORD *)(v8 + v72);
  v74 = (_QWORD *)(v9 + v72);
  v75 = v74[2];
  if (v75)
  {
    v76 = v74[1];
    *v73 = *v74;
    v73[1] = v76;
    v77 = v74[3];
    v78 = v74[4];
    v73[2] = v75;
    v73[3] = v77;
    v79 = v74[5];
    v80 = v74[6];
    v73[4] = v78;
    v73[5] = v79;
    v73[6] = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v81 = *((_OWORD *)v74 + 1);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v81;
    *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
    v73[6] = v74[6];
  }
  v82 = *(int *)(v93 + 24);
  v83 = (void *)(v95 + v82);
  v84 = (const void *)(v94 + v82);
  v85 = sub_244AE3BC4();
  v86 = *(_QWORD *)(v85 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
  {
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF18);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(v83, v84, v85);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
  }
  v88 = *(int *)(v93 + 28);
  v89 = *(_OWORD *)(v94 + v88 + 24);
  *(_OWORD *)(v95 + v88 + 24) = v89;
  (**(void (***)(void))(v89 - 8))();
  return v95;
}

uint64_t _s15PrivateMLClient16PrivateMLRequestV8ResponseV19AsyncEventsIteratorVwca_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;

  v6 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for PrivateMLRequest(0);
  v13 = v12[5];
  v14 = (_QWORD *)(v8 + v13);
  v15 = (_QWORD *)(v9 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = (_QWORD *)(v8 + v16);
  v18 = (_QWORD *)(v9 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v12[7];
  v20 = (_QWORD *)(v8 + v19);
  v21 = (_QWORD *)(v9 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v12[8];
  v23 = (_QWORD *)(v8 + v22);
  v24 = (_QWORD *)(v9 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v12[9];
  v26 = (_QWORD *)(v8 + v25);
  v27 = (_QWORD *)(v9 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v12[10];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (_QWORD *)(v9 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + v12[11]) = *(_DWORD *)(v9 + v12[11]);
  *(_DWORD *)(v8 + v12[12]) = *(_DWORD *)(v9 + v12[12]);
  *(_DWORD *)(v8 + v12[13]) = *(_DWORD *)(v9 + v12[13]);
  *(_DWORD *)(v8 + v12[14]) = *(_DWORD *)(v9 + v12[14]);
  v31 = v12[15];
  v32 = v8 + v31;
  v33 = (uint64_t *)(v9 + v31);
  v34 = *v33;
  *(_BYTE *)(v32 + 8) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  *(_DWORD *)(v8 + v12[16]) = *(_DWORD *)(v9 + v12[16]);
  *(_DWORD *)(v8 + v12[17]) = *(_DWORD *)(v9 + v12[17]);
  *(_DWORD *)(v8 + v12[18]) = *(_DWORD *)(v9 + v12[18]);
  *(_DWORD *)(v8 + v12[19]) = *(_DWORD *)(v9 + v12[19]);
  *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
  v11(v8 + v12[21], v9 + v12[21], v10);
  *(_QWORD *)(v8 + v12[22]) = *(_QWORD *)(v9 + v12[22]);
  *(_QWORD *)(v8 + v12[23]) = *(_QWORD *)(v9 + v12[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v12[24];
  v36 = (uint64_t *)(v8 + v35);
  v37 = (uint64_t *)(v9 + v35);
  v38 = *(_QWORD *)(v9 + v35 + 8);
  if (*(_QWORD *)(v8 + v35 + 8) >> 60 == 15)
  {
    if (v38 >> 60 != 15)
    {
      v39 = *v37;
      sub_244A81E68(v39, v38);
      *v36 = v39;
      v36[1] = v38;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v38 >> 60 == 15)
  {
    sub_244A82C44((uint64_t)v36);
LABEL_6:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_8;
  }
  v40 = *v37;
  sub_244A81E68(v40, v38);
  v41 = *v36;
  v42 = v36[1];
  *v36 = v40;
  v36[1] = v38;
  sub_244A7D674(v41, v42);
LABEL_8:
  v43 = v12[25];
  v44 = v8 + v43;
  v45 = v9 + v43;
  v46 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = v12[26];
  v48 = (_QWORD *)(v8 + v47);
  v49 = (_QWORD *)(v9 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[27]) = *(_QWORD *)(v9 + v12[27]);
  v50 = v12[28];
  v51 = (_QWORD *)(v8 + v50);
  v52 = (_QWORD *)(v9 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[29]) = *(_QWORD *)(v9 + v12[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[30]) = *(_QWORD *)(v9 + v12[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = v12[31];
  v54 = (_QWORD *)(v8 + v53);
  v55 = (_QWORD *)(v9 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v12[32];
  v57 = v8 + v56;
  v58 = (__int128 *)(v9 + v56);
  v59 = *(unsigned __int8 *)(v9 + v56 + 16);
  if (*(unsigned __int8 *)(v8 + v56 + 16) == 255)
  {
    if (v59 == 255)
    {
      v68 = *v58;
      *(_BYTE *)(v57 + 16) = *((_BYTE *)v58 + 16);
      *(_OWORD *)v57 = v68;
    }
    else
    {
      v65 = *(_QWORD *)v58;
      v66 = *((_QWORD *)v58 + 1);
      sub_244A82274(v65, v66, v59);
      *(_QWORD *)v57 = v65;
      *(_QWORD *)(v57 + 8) = v66;
      *(_BYTE *)(v57 + 16) = v59;
    }
  }
  else if (v59 == 255)
  {
    sub_244A82C78(v57);
    v67 = *((_BYTE *)v58 + 16);
    *(_OWORD *)v57 = *v58;
    *(_BYTE *)(v57 + 16) = v67;
  }
  else
  {
    v60 = *(_QWORD *)v58;
    v61 = *((_QWORD *)v58 + 1);
    sub_244A82274(v60, v61, v59);
    v62 = *(_QWORD *)v57;
    v63 = *(_QWORD *)(v57 + 8);
    *(_QWORD *)v57 = v60;
    *(_QWORD *)(v57 + 8) = v61;
    v64 = *(_BYTE *)(v57 + 16);
    *(_BYTE *)(v57 + 16) = v59;
    sub_244A81ED4(v62, v63, v64);
  }
  v69 = v12[33];
  v70 = v8 + v69;
  v71 = (int *)(v9 + v69);
  v72 = *v71;
  *(_BYTE *)(v70 + 4) = *((_BYTE *)v71 + 4);
  *(_DWORD *)v70 = v72;
  v73 = v12[34];
  v74 = (_QWORD *)(v8 + v73);
  v75 = (_QWORD *)(v9 + v73);
  v76 = *(_QWORD *)(v9 + v73 + 16);
  if (v74[2])
  {
    if (v76)
    {
      *v74 = *v75;
      v74[1] = v75[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[2] = v75[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[3] = v75[3];
      v74[4] = v75[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[5] = v75[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v74[6] = v75[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_244A951A8((uint64_t)v74);
      v78 = *((_OWORD *)v75 + 1);
      v77 = *((_OWORD *)v75 + 2);
      v79 = *(_OWORD *)v75;
      v74[6] = v75[6];
      *((_OWORD *)v74 + 1) = v78;
      *((_OWORD *)v74 + 2) = v77;
      *(_OWORD *)v74 = v79;
    }
  }
  else if (v76)
  {
    *v74 = *v75;
    v74[1] = v75[1];
    v74[2] = v75[2];
    v74[3] = v75[3];
    v74[4] = v75[4];
    v74[5] = v75[5];
    v74[6] = v75[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v80 = *(_OWORD *)v75;
    v81 = *((_OWORD *)v75 + 1);
    v82 = *((_OWORD *)v75 + 2);
    v74[6] = v75[6];
    *((_OWORD *)v74 + 1) = v81;
    *((_OWORD *)v74 + 2) = v82;
    *(_OWORD *)v74 = v80;
  }
  v83 = a3[6];
  v84 = (void *)(a1 + v83);
  v85 = (void *)(a2 + v83);
  v86 = sub_244AE3BC4();
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v87 + 48);
  v89 = v88(v84, 1, v86);
  v90 = v88(v85, 1, v86);
  if (!v89)
  {
    if (!v90)
    {
      (*(void (**)(void *, void *, uint64_t))(v87 + 24))(v84, v85, v86);
      goto LABEL_28;
    }
    (*(void (**)(void *, uint64_t))(v87 + 8))(v84, v86);
    goto LABEL_27;
  }
  if (v90)
  {
LABEL_27:
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF18);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, void *, uint64_t))(v87 + 16))(v84, v85, v86);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
LABEL_28:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t _s15PrivateMLClient16PrivateMLRequestV8ResponseV19AsyncEventsIteratorVwtk_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;

  v6 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for PrivateMLRequest(0);
  *(_OWORD *)(v8 + v12[5]) = *(_OWORD *)(v9 + v12[5]);
  *(_OWORD *)(v8 + v12[6]) = *(_OWORD *)(v9 + v12[6]);
  *(_OWORD *)(v8 + v12[7]) = *(_OWORD *)(v9 + v12[7]);
  *(_OWORD *)(v8 + v12[8]) = *(_OWORD *)(v9 + v12[8]);
  *(_OWORD *)(v8 + v12[9]) = *(_OWORD *)(v9 + v12[9]);
  *(_OWORD *)(v8 + v12[10]) = *(_OWORD *)(v9 + v12[10]);
  *(_DWORD *)(v8 + v12[11]) = *(_DWORD *)(v9 + v12[11]);
  *(_DWORD *)(v8 + v12[12]) = *(_DWORD *)(v9 + v12[12]);
  *(_DWORD *)(v8 + v12[13]) = *(_DWORD *)(v9 + v12[13]);
  *(_DWORD *)(v8 + v12[14]) = *(_DWORD *)(v9 + v12[14]);
  v13 = v12[15];
  v14 = v8 + v13;
  v15 = v9 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_DWORD *)(v8 + v12[16]) = *(_DWORD *)(v9 + v12[16]);
  *(_DWORD *)(v8 + v12[17]) = *(_DWORD *)(v9 + v12[17]);
  *(_DWORD *)(v8 + v12[18]) = *(_DWORD *)(v9 + v12[18]);
  *(_DWORD *)(v8 + v12[19]) = *(_DWORD *)(v9 + v12[19]);
  *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
  v11(v8 + v12[21], v9 + v12[21], v10);
  *(_QWORD *)(v8 + v12[22]) = *(_QWORD *)(v9 + v12[22]);
  *(_QWORD *)(v8 + v12[23]) = *(_QWORD *)(v9 + v12[23]);
  *(_OWORD *)(v8 + v12[24]) = *(_OWORD *)(v9 + v12[24]);
  v16 = v12[25];
  v17 = v8 + v16;
  v18 = v9 + v16;
  v19 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(v8 + v12[26]) = *(_OWORD *)(v9 + v12[26]);
  *(_QWORD *)(v8 + v12[27]) = *(_QWORD *)(v9 + v12[27]);
  *(_OWORD *)(v8 + v12[28]) = *(_OWORD *)(v9 + v12[28]);
  *(_QWORD *)(v8 + v12[29]) = *(_QWORD *)(v9 + v12[29]);
  *(_QWORD *)(v8 + v12[30]) = *(_QWORD *)(v9 + v12[30]);
  *(_OWORD *)(v8 + v12[31]) = *(_OWORD *)(v9 + v12[31]);
  v20 = v12[32];
  v21 = v8 + v20;
  v22 = v9 + v20;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  v23 = v12[33];
  v24 = v8 + v23;
  v25 = v9 + v23;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v26 = v12[34];
  v27 = v8 + v26;
  v28 = (__int128 *)(v9 + v26);
  *(_QWORD *)(v27 + 48) = *((_QWORD *)v28 + 6);
  v29 = v28[2];
  v30 = *v28;
  *(_OWORD *)(v27 + 16) = v28[1];
  *(_OWORD *)(v27 + 32) = v29;
  *(_OWORD *)v27 = v30;
  v31 = a3[6];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = sub_244AE3BC4();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF18);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v37 = a3[7];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  return a1;
}

uint64_t _s15PrivateMLClient16PrivateMLRequestV8ResponseV19AsyncEventsIteratorVwta_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;

  v6 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244AE3B4C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for PrivateMLRequest(0);
  v13 = v12[5];
  v14 = (_QWORD *)(v8 + v13);
  v15 = (uint64_t *)(v9 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (uint64_t *)(v9 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v12[7];
  v24 = (_QWORD *)(v8 + v23);
  v25 = (uint64_t *)(v9 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = v12[8];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (uint64_t *)(v9 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = v12[9];
  v34 = (_QWORD *)(v8 + v33);
  v35 = (uint64_t *)(v9 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = v12[10];
  v39 = (_QWORD *)(v8 + v38);
  v40 = (uint64_t *)(v9 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + v12[11]) = *(_DWORD *)(v9 + v12[11]);
  *(_DWORD *)(v8 + v12[12]) = *(_DWORD *)(v9 + v12[12]);
  *(_DWORD *)(v8 + v12[13]) = *(_DWORD *)(v9 + v12[13]);
  *(_DWORD *)(v8 + v12[14]) = *(_DWORD *)(v9 + v12[14]);
  v43 = v12[15];
  v44 = v8 + v43;
  v45 = v9 + v43;
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *(_BYTE *)(v44 + 8) = *(_BYTE *)(v45 + 8);
  *(_DWORD *)(v8 + v12[16]) = *(_DWORD *)(v9 + v12[16]);
  *(_DWORD *)(v8 + v12[17]) = *(_DWORD *)(v9 + v12[17]);
  *(_DWORD *)(v8 + v12[18]) = *(_DWORD *)(v9 + v12[18]);
  *(_DWORD *)(v8 + v12[19]) = *(_DWORD *)(v9 + v12[19]);
  *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
  v11(v8 + v12[21], v9 + v12[21], v10);
  *(_QWORD *)(v8 + v12[22]) = *(_QWORD *)(v9 + v12[22]);
  *(_QWORD *)(v8 + v12[23]) = *(_QWORD *)(v9 + v12[23]);
  swift_bridgeObjectRelease();
  v46 = v12[24];
  v47 = v8 + v46;
  v48 = v9 + v46;
  v49 = *(_QWORD *)(v8 + v46 + 8);
  if (v49 >> 60 == 15)
    goto LABEL_4;
  v50 = *(_QWORD *)(v48 + 8);
  if (v50 >> 60 == 15)
  {
    sub_244A82C44(v47);
LABEL_4:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    goto LABEL_6;
  }
  v51 = *(_QWORD *)v47;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_QWORD *)(v47 + 8) = v50;
  sub_244A7D674(v51, v49);
LABEL_6:
  v52 = v12[25];
  v53 = v8 + v52;
  v54 = v9 + v52;
  v55 = sub_244AE4314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
  v56 = v12[26];
  v57 = (_QWORD *)(v8 + v56);
  v58 = (uint64_t *)(v9 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[27]) = *(_QWORD *)(v9 + v12[27]);
  v61 = v12[28];
  v62 = (_QWORD *)(v8 + v61);
  v63 = (uint64_t *)(v9 + v61);
  v65 = *v63;
  v64 = v63[1];
  *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[29]) = *(_QWORD *)(v9 + v12[29]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[30]) = *(_QWORD *)(v9 + v12[30]);
  swift_bridgeObjectRelease();
  v66 = v12[31];
  v67 = (_QWORD *)(v8 + v66);
  v68 = (uint64_t *)(v9 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  v71 = v12[32];
  v72 = v8 + v71;
  v73 = v9 + v71;
  v74 = *(unsigned __int8 *)(v8 + v71 + 16);
  if (v74 != 255)
  {
    v75 = *(unsigned __int8 *)(v73 + 16);
    if (v75 != 255)
    {
      v76 = *(_QWORD *)v72;
      v77 = *(_QWORD *)(v72 + 8);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *(_BYTE *)(v72 + 16) = v75;
      sub_244A81ED4(v76, v77, v74);
      goto LABEL_11;
    }
    sub_244A82C78(v72);
  }
  *(_OWORD *)v72 = *(_OWORD *)v73;
  *(_BYTE *)(v72 + 16) = *(_BYTE *)(v73 + 16);
LABEL_11:
  v78 = v12[33];
  v79 = v8 + v78;
  v80 = v9 + v78;
  *(_DWORD *)v79 = *(_DWORD *)v80;
  *(_BYTE *)(v79 + 4) = *(_BYTE *)(v80 + 4);
  v81 = v12[34];
  v82 = (_QWORD *)(v8 + v81);
  v83 = (_QWORD *)(v9 + v81);
  if (v82[2])
  {
    if (v83[2])
    {
      v84 = v83[1];
      *v82 = *v83;
      v82[1] = v84;
      swift_bridgeObjectRelease();
      v82[2] = v83[2];
      swift_bridgeObjectRelease();
      v85 = v83[4];
      v82[3] = v83[3];
      v82[4] = v85;
      swift_bridgeObjectRelease();
      v82[5] = v83[5];
      swift_bridgeObjectRelease();
      v82[6] = v83[6];
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_244A951A8((uint64_t)v82);
  }
  v86 = *((_OWORD *)v83 + 1);
  *(_OWORD *)v82 = *(_OWORD *)v83;
  *((_OWORD *)v82 + 1) = v86;
  *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
  v82[6] = v83[6];
LABEL_16:
  v87 = a3[6];
  v88 = (void *)(a1 + v87);
  v89 = (void *)(a2 + v87);
  v90 = sub_244AE3BC4();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
  v93 = v92(v88, 1, v90);
  v94 = v92(v89, 1, v90);
  if (!v93)
  {
    if (!v94)
    {
      (*(void (**)(void *, void *, uint64_t))(v91 + 40))(v88, v89, v90);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    goto LABEL_21;
  }
  if (v94)
  {
LABEL_21:
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF18);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(void *, void *, uint64_t))(v91 + 32))(v88, v89, v90);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_22:
  v96 = a3[7];
  v97 = a1 + v96;
  v98 = a2 + v96;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + v96);
  v99 = *(_OWORD *)(v98 + 16);
  *(_OWORD *)v97 = *(_OWORD *)v98;
  *(_OWORD *)(v97 + 16) = v99;
  *(_QWORD *)(v97 + 32) = *(_QWORD *)(v98 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest.Response.AsyncIterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_8Tm(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_244AE41AC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for PrivateMLRequest(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF18);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest.Response.AsyncIterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_9Tm(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_244AE41AC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for PrivateMLRequest(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF18);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7] + 24) = (a2 - 1);
  return result;
}

void sub_244A9AA10()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_244AE41AC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PrivateMLRequest(319);
    if (v1 <= 0x3F)
    {
      sub_244A98DC8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t destroy for PrivateMLRequest.PromptDebugInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PrivateMLRequest.PromptDebugInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PrivateMLRequest.PromptDebugInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PrivateMLRequest.PromptDebugInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest.PromptDebugInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest.PromptDebugInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLRequest.PromptDebugInfo()
{
  return &type metadata for PrivateMLRequest.PromptDebugInfo;
}

ValueMetadata *type metadata accessor for PrivateMLRequest.SamplingStrategy()
{
  return &type metadata for PrivateMLRequest.SamplingStrategy;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest.PromptDebugInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest.PromptDebugInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_244A9AE4C + 4 * byte_244AE4EDA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_244A9AE80 + 4 * byte_244AE4ED5[v4]))();
}

uint64_t sub_244A9AE80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9AE88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244A9AE90);
  return result;
}

uint64_t sub_244A9AE9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244A9AEA4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_244A9AEA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9AEB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9AEBC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_244A9AEC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLRequest.PromptDebugInfo.CodingKeys()
{
  return &type metadata for PrivateMLRequest.PromptDebugInfo.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for ServerAssetInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_244A9AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6)
  {
    if (a6 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for PrivateMLRequest.PrivateMLRequestError(uint64_t a1)
{
  return sub_244A9AF70(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_244A9AF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6)
  {
    if (a6 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrivateMLRequest.PrivateMLRequestError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_244A9AF0C(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PrivateMLRequest.PrivateMLRequestError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_244A9AF0C(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_244A9AF70(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PrivateMLRequest.PrivateMLRequestError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_244A9AF70(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateMLRequest.PrivateMLRequestError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateMLRequest.PrivateMLRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_244A9B1B4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 1u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_244A9B1CC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PrivateMLRequest.PrivateMLRequestError()
{
  return &type metadata for PrivateMLRequest.PrivateMLRequestError;
}

unint64_t sub_244A9B200(uint64_t a1)
{
  unint64_t result;

  result = sub_244A93AC4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244A9B228()
{
  unint64_t result;

  result = qword_2573D0398;
  if (!qword_2573D0398)
  {
    result = MEMORY[0x24951E280](&unk_244AE5384, &type metadata for PrivateMLRequest.PromptDebugInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0398);
  }
  return result;
}

unint64_t sub_244A9B270()
{
  unint64_t result;

  result = qword_2573D03A0;
  if (!qword_2573D03A0)
  {
    result = MEMORY[0x24951E280](&unk_244AE52F4, &type metadata for PrivateMLRequest.PromptDebugInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D03A0);
  }
  return result;
}

unint64_t sub_244A9B2B8()
{
  unint64_t result;

  result = qword_2573D03A8;
  if (!qword_2573D03A8)
  {
    result = MEMORY[0x24951E280](&unk_244AE531C, &type metadata for PrivateMLRequest.PromptDebugInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D03A8);
  }
  return result;
}

uint64_t sub_244A9B2FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7250746E65696C63 && a2 == 0xEC00000074706D6FLL;
  if (v2 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244AE9C00 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000244AE9C20 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000244AE9C40 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_244AE44DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_244A9B50C(uint64_t a1)
{
  return sub_244A93CB8(a1);
}

uint64_t sub_244A9B524()
{
  uint64_t v0;

  v0 = sub_244AE41AC();
  __swift_allocate_value_buffer(v0, qword_2573D03C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573D03C0);
  return sub_244AE41A0();
}

uint64_t sub_244A9B5A0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45[4];
  __int128 v46;
  _OWORD v47[2];
  _OWORD v48[2];
  char v49;
  __int128 v50;
  _OWORD v51[2];
  __int128 v52;
  _OWORD v53[3];

  v6 = qword_2573CF930;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  swift_beginAccess();
  v52 = xmmword_2573D27B0;
  v53[0] = *(_OWORD *)&qword_2573D27C0;
  *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)((char *)&qword_2573D27C8 + 1);
  sub_244A9C050((uint64_t)&v52);
  v7 = sub_244ADDE20();
  v9 = v8;
  sub_244A9C090((uint64_t)&v52);
  if (v9)
  {
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v50 = a3;
      sub_244A7CA30(v7, v9, 0x6C65646F6DLL, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      if (qword_2573CF770 != -1)
        swift_once();
      v12 = sub_244AE41AC();
      __swift_project_value_buffer(v12, (uint64_t)qword_2573D03C0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v13 = sub_244AE4194();
      v14 = sub_244AE4368();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v44 = swift_slowAlloc();
        *(_QWORD *)&v50 = v44;
        *(_DWORD *)v15 = 136315394;
        swift_bridgeObjectRetain();
        sub_244A80950(a1, a2, (uint64_t *)&v50);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v46 = sub_244A80950(v7, v9, (uint64_t *)&v50);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244A6B000, v13, v14, "%s Overriding workload parameters.model=[%s]", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v44, -1, -1);
        MEMORY[0x24951E31C](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_2573CF938 != -1)
    swift_once();
  swift_beginAccess();
  v50 = xmmword_2573D27E0;
  v51[0] = *(_OWORD *)&qword_2573D27F0;
  *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)((char *)&qword_2573D27F8 + 1);
  sub_244A9C050((uint64_t)&v50);
  v16 = sub_244ADDE20();
  v18 = v17;
  sub_244A9C090((uint64_t)&v50);
  if (v18)
  {
    v19 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0)
      v19 = v16 & 0xFFFFFFFFFFFFLL;
    if (v19)
    {
      swift_bridgeObjectRetain();
      v20 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v46 = a3;
      sub_244A7CA30(v16, v18, 0x72657470616461, 0xE700000000000000, v20);
      swift_bridgeObjectRelease();
      if (qword_2573CF770 != -1)
        swift_once();
      v21 = sub_244AE41AC();
      __swift_project_value_buffer(v21, (uint64_t)qword_2573D03C0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v22 = sub_244AE4194();
      v23 = sub_244AE4368();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        *(_QWORD *)&v46 = v25;
        *(_DWORD *)v24 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v48[0] = sub_244A80950(a1, a2, (uint64_t *)&v46);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v48[0] = sub_244A80950(v16, v18, (uint64_t *)&v46);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244A6B000, v22, v23, "%s Overriding workload parameters.adapter=[%s]", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v25, -1, -1);
        MEMORY[0x24951E31C](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_2573CF948 != -1)
    swift_once();
  swift_beginAccess();
  v48[0] = xmmword_2573D2838;
  v48[1] = *(_OWORD *)&qword_2573D2848;
  v49 = byte_2573D2858;
  sub_244A7D7C0((uint64_t)v48);
  v26 = sub_244ADE3AC();
  sub_244A7D800((uint64_t)v48);
  if (v26)
  {
    if (*(_QWORD *)(v26 + 16))
    {
      swift_bridgeObjectRelease();
      if (qword_2573CF770 != -1)
        swift_once();
      v27 = sub_244AE41AC();
      __swift_project_value_buffer(v27, (uint64_t)qword_2573D03C0);
      swift_bridgeObjectRetain_n();
      v28 = sub_244AE4194();
      v29 = sub_244AE4368();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        *(_QWORD *)&v46 = v31;
        *(_DWORD *)v30 = 136315138;
        swift_bridgeObjectRetain();
        v45[1] = sub_244A80950(a1, a2, (uint64_t *)&v46);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244A6B000, v28, v29, "%s Overriding workload parameters with user default supplied ones", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v31, -1, -1);
        MEMORY[0x24951E31C](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a3 = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_2573CF958 != -1)
    swift_once();
  swift_beginAccess();
  v46 = xmmword_2573D2890;
  v47[0] = *(_OWORD *)&qword_2573D28A0;
  *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)((char *)&qword_2573D28A8 + 1);
  sub_244A9C050((uint64_t)&v46);
  v32 = sub_244ADDE20();
  v34 = v33;
  sub_244A9C090((uint64_t)&v46);
  if (v34)
  {
    v35 = HIBYTE(v34) & 0xF;
    if ((v34 & 0x2000000000000000) == 0)
      v35 = v32 & 0xFFFFFFFFFFFFLL;
    if (v35)
    {
      swift_bridgeObjectRetain();
      v36 = swift_isUniquelyReferenced_nonNull_native();
      sub_244A7CA30(v32, v34, 0x6C65646F6DLL, 0xE500000000000000, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v37 = swift_isUniquelyReferenced_nonNull_native();
      v45[0] = a3;
      sub_244A7CA30(v32, v34, 0x72657470616461, 0xE700000000000000, v37);
      swift_bridgeObjectRelease();
      if (qword_2573CF770 != -1)
        swift_once();
      v38 = sub_244AE41AC();
      __swift_project_value_buffer(v38, (uint64_t)qword_2573D03C0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v39 = sub_244AE4194();
      v40 = sub_244AE4368();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v45[0] = v42;
        *(_DWORD *)v41 = 136315650;
        swift_bridgeObjectRetain();
        sub_244A80950(a1, a2, v45);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v41 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_244A80950(v32, v34, v45);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v41 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_244A80950(v32, v34, v45);
        sub_244AE43B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244A6B000, v39, v40, "%s Overriding workload parameters.model=[%s] adapter=[%s]", (uint8_t *)v41, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24951E31C](v42, -1, -1);
        MEMORY[0x24951E31C](v41, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return a3;
}

uint64_t sub_244A9C050(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_244A9C090(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

PrivateMLClient::ServerAssetInfo __swiftcall ServerAssetInfo.init(name:version:)(Swift::String name, Swift::String_optional version)
{
  Swift::String_optional *v2;
  PrivateMLClient::ServerAssetInfo result;

  v2->value = name;
  v2[1] = version;
  result.version = version;
  result.name = name;
  return result;
}

PrivateMLClient::ServerAssetInfo __swiftcall ServerAssetInfo.init(name:)(Swift::String name)
{
  Swift::String *v1;
  PrivateMLClient::ServerAssetInfo result;

  *v1 = name;
  v1[1]._countAndFlagsBits = 0;
  v1[1]._object = 0;
  result.name = name;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ServerEnvironmentInfo.asJSONString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String result;

  v1 = sub_244AE4230();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_244AE3ABC();
  MEMORY[0x24BDAC7A8](v2);
  sub_244AE3AEC();
  swift_allocObject();
  sub_244AE3AE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF70);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_244AE4EB0;
  sub_244AE3AA4();
  sub_244A9C378();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF80);
  sub_244A94050();
  sub_244AE43D4();
  sub_244AE3AC8();
  sub_244A9C3C0();
  v3 = sub_244AE3AD4();
  if (v0)
  {
    v5 = swift_release();
  }
  else
  {
    v7 = v3;
    v8 = v4;
    sub_244AE4224();
    v9 = sub_244AE4218();
    v11 = v10;
    sub_244A7D674(v7, v8);
    swift_release();
    if (v11)
      v5 = v9;
    else
      v5 = 32123;
    if (v11)
      v6 = v11;
    else
      v6 = (void *)0xE200000000000000;
  }
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

unint64_t sub_244A9C378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2573CFF78;
  if (!qword_2573CFF78)
  {
    v1 = sub_244AE3ABC();
    result = MEMORY[0x24951E280](MEMORY[0x24BDCB2C8], v1);
    atomic_store(result, (unint64_t *)&qword_2573CFF78);
  }
  return result;
}

unint64_t sub_244A9C3C0()
{
  unint64_t result;

  result = qword_2573D03D8;
  if (!qword_2573D03D8)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerEnvironmentInfo, &type metadata for ServerEnvironmentInfo);
    atomic_store(result, (unint64_t *)&qword_2573D03D8);
  }
  return result;
}

uint64_t ServerEnvironmentInfo.cloudosVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerEnvironmentInfo.cloudosVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ServerEnvironmentInfo.cloudosVersion.modify())()
{
  return nullsub_1;
}

uint64_t ServerEnvironmentInfo.baseModel.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_244A93FAC(v2, v3);
}

__n128 ServerEnvironmentInfo.baseModel.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_244A71308(v1[2], v1[3]);
  result = v5;
  *((__n128 *)v1 + 1) = v5;
  v1[4] = v2;
  v1[5] = v3;
  return result;
}

uint64_t (*ServerEnvironmentInfo.baseModel.modify())()
{
  return nullsub_1;
}

uint64_t ServerEnvironmentInfo.adapter.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[6];
  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_244A93FAC(v2, v3);
}

__n128 ServerEnvironmentInfo.adapter.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_244A71308(v1[6], v1[7]);
  result = v5;
  *((__n128 *)v1 + 3) = v5;
  v1[8] = v2;
  v1[9] = v3;
  return result;
}

uint64_t (*ServerEnvironmentInfo.adapter.modify())()
{
  return nullsub_1;
}

uint64_t ServerEnvironmentInfo.tokenizer.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  v5 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_244A93FAC(v2, v3);
}

__n128 ServerEnvironmentInfo.tokenizer.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_244A71308(v1[10], v1[11]);
  result = v5;
  *((__n128 *)v1 + 5) = v5;
  v1[12] = v2;
  v1[13] = v3;
  return result;
}

uint64_t (*ServerEnvironmentInfo.tokenizer.modify())()
{
  return nullsub_1;
}

uint64_t ServerEnvironmentInfo.draftModel.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[14];
  v3 = v1[15];
  v4 = v1[16];
  v5 = v1[17];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_244A93FAC(v2, v3);
}

__n128 ServerEnvironmentInfo.draftModel.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_244A71308(v1[14], v1[15]);
  result = v5;
  *((__n128 *)v1 + 7) = v5;
  v1[16] = v2;
  v1[17] = v3;
  return result;
}

uint64_t (*ServerEnvironmentInfo.draftModel.modify())()
{
  return nullsub_1;
}

uint64_t sub_244A9C634()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244A9C670 + 4 * byte_244AE5440[*v0]))(0x56736F64756F6C63, 0xEE006E6F69737265);
}

uint64_t sub_244A9C670()
{
  return 0x65646F4D65736162;
}

uint64_t sub_244A9C68C()
{
  return 0x72657470616461;
}

uint64_t sub_244A9C6A4()
{
  return 0x657A696E656B6F74;
}

uint64_t sub_244A9C6C4()
{
  return 0x646F4D7466617264;
}

uint64_t sub_244A9C6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244A9E1DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244A9C704()
{
  sub_244A9C9DC();
  return sub_244AE456C();
}

uint64_t sub_244A9C72C()
{
  sub_244A9C9DC();
  return sub_244AE4578();
}

uint64_t ServerEnvironmentInfo.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D03E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v34 = v1[3];
  v35 = v7;
  v8 = v1[4];
  v32 = v1[5];
  v33 = v8;
  v9 = v1[6];
  v30 = v1[7];
  v31 = v9;
  v10 = v1[8];
  v28 = v1[9];
  v29 = v10;
  v11 = v1[11];
  v24 = v1[10];
  v25 = v11;
  v12 = v1[13];
  v26 = v1[12];
  v27 = v12;
  v13 = v1[15];
  v20 = v1[14];
  v21 = v13;
  v14 = v1[17];
  v22 = v1[16];
  v23 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244A9C9DC();
  sub_244AE4560();
  LOBYTE(v37) = 0;
  v15 = v36;
  sub_244AE4494();
  if (!v15)
  {
    v17 = v29;
    v16 = v30;
    v37 = v35;
    v38 = v34;
    v18 = v31;
    v39 = v33;
    v40 = v32;
    v41 = 1;
    sub_244A9CA20();
    sub_244AE44A0();
    v37 = v18;
    v38 = v16;
    v39 = v17;
    v40 = v28;
    v41 = 2;
    sub_244AE44A0();
    v37 = v24;
    v38 = v25;
    v39 = v26;
    v40 = v27;
    v41 = 3;
    sub_244AE44A0();
    v37 = v20;
    v38 = v21;
    v39 = v22;
    v40 = v23;
    v41 = 4;
    sub_244AE44A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_244A9C9DC()
{
  unint64_t result;

  result = qword_2573D03E8;
  if (!qword_2573D03E8)
  {
    result = MEMORY[0x24951E280](&unk_244AE5724, &type metadata for ServerEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D03E8);
  }
  return result;
}

unint64_t sub_244A9CA20()
{
  unint64_t result;

  result = qword_2573D03F0;
  if (!qword_2573D03F0)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerAssetInfo, &type metadata for ServerAssetInfo);
    atomic_store(result, (unint64_t *)&qword_2573D03F0);
  }
  return result;
}

_QWORD *ServerEnvironmentInfo.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D03F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_244A9C9DC();
  sub_244AE4554();
  if (v2)
  {
    v48 = v2;
    v50 = 0uLL;
    v49 = 0uLL;
    v79 = 0;
    v51 = 0;
    v52 = 0;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    v67 = 0uLL;
    v68 = 0uLL;
    v69 = 0;
    v70 = 0;
    v71 = 0;
    v72 = v51;
    v73 = v52;
    v74 = v79;
    v75 = v49;
    v76 = v50;
    v77 = 0u;
    v78 = 0u;
  }
  else
  {
    LOBYTE(v67) = 0;
    v10 = sub_244AE4464();
    v13 = v12;
    v46 = v10;
    LOBYTE(v53) = 1;
    v14 = sub_244A9D03C();
    swift_bridgeObjectRetain();
    sub_244AE4470();
    v45 = v13;
    v15 = v67;
    LOBYTE(v53) = 2;
    v43 = *((_QWORD *)&v68 + 1);
    v44 = v68;
    sub_244A93FAC(v67, *((uint64_t *)&v67 + 1));
    v48 = v14;
    sub_244AE4470();
    v41 = a2;
    v42 = *((_QWORD *)&v15 + 1);
    LOBYTE(v53) = 3;
    v51 = *((_QWORD *)&v67 + 1);
    v16 = v67;
    v79 = *((_QWORD *)&v68 + 1);
    v52 = v68;
    sub_244A93FAC(v67, *((uint64_t *)&v67 + 1));
    sub_244AE4470();
    v17 = v16;
    v62 = 4;
    v49 = v67;
    v50 = v68;
    sub_244A93FAC(v67, *((uint64_t *)&v67 + 1));
    sub_244AE4470();
    v48 = 0;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v18 = v63;
    v19 = v64;
    v20 = v66;
    v40 = v65;
    v37 = v66;
    sub_244A93FAC(v63, v64);
    sub_244A71308(0, 0);
    *(_QWORD *)&v53 = v46;
    *((_QWORD *)&v53 + 1) = v45;
    v36 = v15;
    *(_QWORD *)&v54 = v15;
    *((_QWORD *)&v54 + 1) = v42;
    *(_QWORD *)&v55 = v44;
    *((_QWORD *)&v55 + 1) = v43;
    *(_QWORD *)&v56 = v17;
    *((_QWORD *)&v56 + 1) = v51;
    *(_QWORD *)&v57 = v52;
    *((_QWORD *)&v57 + 1) = v79;
    v21 = v49;
    v58 = v49;
    v59 = v50;
    v38 = v19;
    v39 = v18;
    *(_QWORD *)&v60 = v18;
    *((_QWORD *)&v60 + 1) = v19;
    *(_QWORD *)&v61 = v40;
    *((_QWORD *)&v61 + 1) = v20;
    sub_244A93EDC(&v53);
    sub_244A71308(v18, v19);
    v22 = *((_QWORD *)&v49 + 1);
    sub_244A71308(v21, *((uint64_t *)&v49 + 1));
    v23 = v17;
    v24 = v51;
    sub_244A71308(v17, v51);
    v25 = v36;
    v27 = v42;
    v26 = v43;
    v28 = v44;
    sub_244A71308(v36, v42);
    v29 = v45;
    swift_bridgeObjectRelease();
    v30 = v60;
    v31 = v41;
    v41[6] = v59;
    v31[7] = v30;
    v31[8] = v61;
    v32 = v56;
    v31[2] = v55;
    v31[3] = v32;
    v33 = v58;
    v31[4] = v57;
    v31[5] = v33;
    v34 = v54;
    *v31 = v53;
    v31[1] = v34;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    *(_QWORD *)&v67 = v46;
    *((_QWORD *)&v67 + 1) = v29;
    *(_QWORD *)&v68 = v25;
    *((_QWORD *)&v68 + 1) = v27;
    v69 = v28;
    v70 = v26;
    v71 = v23;
    v72 = v24;
    v73 = v52;
    v74 = v79;
    *(_QWORD *)&v75 = v49;
    *((_QWORD *)&v75 + 1) = v22;
    v76 = v50;
    *(_QWORD *)&v77 = v39;
    *((_QWORD *)&v77 + 1) = v38;
    *(_QWORD *)&v78 = v40;
    *((_QWORD *)&v78 + 1) = v37;
  }
  return sub_244A93CD0(&v67);
}

unint64_t sub_244A9D03C()
{
  unint64_t result;

  result = qword_2573D0400;
  if (!qword_2573D0400)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerAssetInfo, &type metadata for ServerAssetInfo);
    atomic_store(result, (unint64_t *)&qword_2573D0400);
  }
  return result;
}

_QWORD *sub_244A9D080@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return ServerEnvironmentInfo.init(from:)(a1, a2);
}

uint64_t sub_244A9D094(_QWORD *a1)
{
  return ServerEnvironmentInfo.encode(to:)(a1);
}

uint64_t ServerAssetInfo.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerAssetInfo.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_244A9D100(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_244A9D118()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F6973726576;
  else
    return 1701667182;
}

uint64_t sub_244A9D14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244A9E438(a1, a2);
  *a3 = result;
  return result;
}

void sub_244A9D170(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_244A9D17C()
{
  sub_244A9D300();
  return sub_244AE456C();
}

uint64_t sub_244A9D1A4()
{
  sub_244A9D300();
  return sub_244AE4578();
}

uint64_t ServerAssetInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D0408);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244A9D300();
  sub_244AE4560();
  v12 = 0;
  sub_244AE44AC();
  if (!v2)
  {
    v11 = 1;
    sub_244AE4494();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_244A9D300()
{
  unint64_t result;

  result = qword_2573D0410;
  if (!qword_2573D0410)
  {
    result = MEMORY[0x24951E280](&unk_244AE56D4, &type metadata for ServerAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0410);
  }
  return result;
}

uint64_t ServerAssetInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D0418);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244A9D300();
  sub_244AE4554();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = 0;
  v9 = sub_244AE447C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_244AE4464();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244A9D4E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ServerAssetInfo.init(from:)(a1, a2);
}

uint64_t sub_244A9D4F8(_QWORD *a1)
{
  return ServerAssetInfo.encode(to:)(a1);
}

uint64_t destroy for ServerEnvironmentInfo(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (a1[3])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[15];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ServerEnvironmentInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = *(_QWORD *)(a2 + 56);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v14;
    v7 = *(_QWORD *)(a2 + 56);
    if (v7)
    {
LABEL_3:
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = *(_QWORD *)(a2 + 88);
      if (v9)
        goto LABEL_4;
LABEL_8:
      v16 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v16;
      v11 = *(_QWORD *)(a2 + 120);
      if (v11)
        goto LABEL_5;
LABEL_9:
      v17 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v17;
      return a1;
    }
  }
  v15 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v15;
  v9 = *(_QWORD *)(a2 + 88);
  if (!v9)
    goto LABEL_8;
LABEL_4:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = *(_QWORD *)(a2 + 120);
  if (!v11)
    goto LABEL_9;
LABEL_5:
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  v12 = *(_QWORD *)(a2 + 128);
  v13 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v12;
  *(_QWORD *)(a1 + 136) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ServerEnvironmentInfo(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_244A9D9A4((uint64_t)(a1 + 2));
      v7 = *((_OWORD *)a2 + 2);
      *v4 = *v5;
      *((_OWORD *)a1 + 2) = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 2);
    *v4 = *v5;
    *((_OWORD *)a1 + 2) = v8;
  }
  v9 = a1 + 6;
  v10 = a2 + 6;
  v11 = a2[7];
  if (a1[7])
  {
    if (v11)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_244A9D9A4((uint64_t)(a1 + 6));
      v12 = *((_OWORD *)a2 + 4);
      *v9 = *v10;
      *((_OWORD *)a1 + 4) = v12;
    }
  }
  else if (v11)
  {
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *((_OWORD *)a2 + 4);
    *v9 = *v10;
    *((_OWORD *)a1 + 4) = v13;
  }
  v14 = a1 + 10;
  v15 = a2 + 10;
  v16 = a2[11];
  if (a1[11])
  {
    if (v16)
    {
      a1[10] = a2[10];
      a1[11] = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_244A9D9A4((uint64_t)(a1 + 10));
      v17 = *((_OWORD *)a2 + 6);
      *v14 = *v15;
      *((_OWORD *)a1 + 6) = v17;
    }
  }
  else if (v16)
  {
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *((_OWORD *)a2 + 6);
    *v14 = *v15;
    *((_OWORD *)a1 + 6) = v18;
  }
  v19 = a1 + 14;
  v20 = a2 + 14;
  v21 = a2[15];
  if (a1[15])
  {
    if (v21)
    {
      a1[14] = a2[14];
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[16] = a2[16];
      a1[17] = a2[17];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_244A9D9A4((uint64_t)(a1 + 14));
      v22 = *((_OWORD *)a2 + 8);
      *v19 = *v20;
      *((_OWORD *)a1 + 8) = v22;
    }
  }
  else if (v21)
  {
    a1[14] = a2[14];
    a1[15] = a2[15];
    a1[16] = a2[16];
    a1[17] = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *((_OWORD *)a2 + 8);
    *v19 = *v20;
    *((_OWORD *)a1 + 8) = v23;
  }
  return a1;
}

uint64_t sub_244A9D9A4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for ServerEnvironmentInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_244A9D9A4(a1 + 16);
  }
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
LABEL_6:
  if (*(_QWORD *)(a1 + 56))
  {
    v8 = *(_QWORD *)(a2 + 56);
    if (v8)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_244A9D9A4(a1 + 48);
  }
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
LABEL_11:
  if (*(_QWORD *)(a1 + 88))
  {
    v11 = *(_QWORD *)(a2 + 88);
    if (v11)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_244A9D9A4(a1 + 80);
  }
  v13 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v13;
LABEL_16:
  if (!*(_QWORD *)(a1 + 120))
  {
LABEL_20:
    v16 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v16;
    return a1;
  }
  v14 = *(_QWORD *)(a2 + 120);
  if (!v14)
  {
    sub_244A9D9A4(a1 + 112);
    goto LABEL_20;
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerEnvironmentInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerEnvironmentInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerEnvironmentInfo()
{
  return &type metadata for ServerEnvironmentInfo;
}

uint64_t destroy for ServerAssetInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ServerAssetInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ServerAssetInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for ServerAssetInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerAssetInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerAssetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerAssetInfo()
{
  return &type metadata for ServerAssetInfo;
}

uint64_t getEnumTagSinglePayload for ServerPromptInfo.Source(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerAssetInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244A9DED4 + 4 * byte_244AE544A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244A9DF08 + 4 * byte_244AE5445[v4]))();
}

uint64_t sub_244A9DF08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9DF10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244A9DF18);
  return result;
}

uint64_t sub_244A9DF24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244A9DF2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244A9DF30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9DF38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_244A9DF44(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ServerAssetInfo.CodingKeys()
{
  return &type metadata for ServerAssetInfo.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerEnvironmentInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_244A9DFAC + 4 * byte_244AE5454[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_244A9DFE0 + 4 * byte_244AE544F[v4]))();
}

uint64_t sub_244A9DFE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9DFE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244A9DFF0);
  return result;
}

uint64_t sub_244A9DFFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244A9E004);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_244A9E008(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9E010(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerEnvironmentInfo.CodingKeys()
{
  return &type metadata for ServerEnvironmentInfo.CodingKeys;
}

unint64_t sub_244A9E030()
{
  unint64_t result;

  result = qword_2573D0420;
  if (!qword_2573D0420)
  {
    result = MEMORY[0x24951E280](&unk_244AE55F4, &type metadata for ServerEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0420);
  }
  return result;
}

unint64_t sub_244A9E078()
{
  unint64_t result;

  result = qword_2573D0428;
  if (!qword_2573D0428)
  {
    result = MEMORY[0x24951E280](&unk_244AE56AC, &type metadata for ServerAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0428);
  }
  return result;
}

unint64_t sub_244A9E0C0()
{
  unint64_t result;

  result = qword_2573D0430;
  if (!qword_2573D0430)
  {
    result = MEMORY[0x24951E280](&unk_244AE561C, &type metadata for ServerAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0430);
  }
  return result;
}

unint64_t sub_244A9E108()
{
  unint64_t result;

  result = qword_2573D0438;
  if (!qword_2573D0438)
  {
    result = MEMORY[0x24951E280](&unk_244AE5644, &type metadata for ServerAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0438);
  }
  return result;
}

unint64_t sub_244A9E150()
{
  unint64_t result;

  result = qword_2573D0440;
  if (!qword_2573D0440)
  {
    result = MEMORY[0x24951E280](&unk_244AE5564, &type metadata for ServerEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0440);
  }
  return result;
}

unint64_t sub_244A9E198()
{
  unint64_t result;

  result = qword_2573D0448;
  if (!qword_2573D0448)
  {
    result = MEMORY[0x24951E280](&unk_244AE558C, &type metadata for ServerEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0448);
  }
  return result;
}

uint64_t sub_244A9E1DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x56736F64756F6C63 && a2 == 0xEE006E6F69737265;
  if (v2 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F4D65736162 && a2 == 0xE90000000000006CLL || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72657470616461 && a2 == 0xE700000000000000 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A696E656B6F74 && a2 == 0xE900000000000072 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646F4D7466617264 && a2 == 0xEA00000000006C65)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_244AE44DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_244A9E438(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_244AE44DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_244A9E518(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x726576726573;
  else
    v2 = 0x746E65696C63;
  if ((a2 & 1) != 0)
    v3 = 0x726576726573;
  else
    v3 = 0x746E65696C63;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_244AE44DC();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ServerPromptInfo.asJSONString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String result;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_244AE4230();
  MEMORY[0x24BDAC7A8](v2);
  v20[1] = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244AE3ABC();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(_QWORD *)v0;
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_BYTE *)(v0 + 32);
  sub_244AE3AEC();
  swift_allocObject();
  sub_244AE3AE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF70);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_244AE4EB0;
  sub_244AE3AA4();
  v22 = v8;
  sub_244A9C378();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF80);
  sub_244A94050();
  v21 = *(_OWORD *)(v1 + 8);
  sub_244AE43D4();
  sub_244AE3AC8();
  v22 = v5;
  v23 = v21;
  v24 = v6;
  v25 = v7;
  sub_244A9E7A0();
  v9 = v26;
  v10 = sub_244AE3AD4();
  if (v9)
  {
    v12 = swift_release();
  }
  else
  {
    v14 = v10;
    v15 = v11;
    sub_244AE4224();
    v16 = sub_244AE4218();
    v18 = v17;
    sub_244A7D674(v14, v15);
    swift_release();
    if (v18)
      v12 = v16;
    else
      v12 = 32123;
    if (v18)
      v13 = v18;
    else
      v13 = (void *)0xE200000000000000;
  }
  result._object = v13;
  result._countAndFlagsBits = v12;
  return result;
}

unint64_t sub_244A9E7A0()
{
  unint64_t result;

  result = qword_2573D0450;
  if (!qword_2573D0450)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerPromptInfo, &type metadata for ServerPromptInfo);
    atomic_store(result, (unint64_t *)&qword_2573D0450);
  }
  return result;
}

PrivateMLClient::ServerPromptInfo::Source_optional __swiftcall ServerPromptInfo.Source.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PrivateMLClient::ServerPromptInfo::Source_optional result;
  char v5;

  v2 = v1;
  v3 = sub_244AE4458();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ServerPromptInfo.Source.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x726576726573;
  else
    return 0x746E65696C63;
}

uint64_t sub_244A9E870(char *a1, char *a2)
{
  return sub_244A9E518(*a1, *a2);
}

uint64_t sub_244A9E87C()
{
  sub_244AE4530();
  sub_244AE4254();
  swift_bridgeObjectRelease();
  return sub_244AE4548();
}

uint64_t sub_244A9E8E8()
{
  sub_244AE4254();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244A9E928()
{
  sub_244AE4530();
  sub_244AE4254();
  swift_bridgeObjectRelease();
  return sub_244AE4548();
}

PrivateMLClient::ServerPromptInfo::Source_optional sub_244A9E990(Swift::String *a1)
{
  return ServerPromptInfo.Source.init(rawValue:)(*a1);
}

void sub_244A9E99C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x746E65696C63;
  if (*v1)
    v2 = 0x726576726573;
  *a1 = v2;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_244A9E9CC()
{
  sub_244A9FA78();
  return sub_244AE42E4();
}

uint64_t sub_244A9EA28()
{
  sub_244A9FA78();
  return sub_244AE42D8();
}

uint64_t ServerPromptInfo.renderedPrompt.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPromptInfo.renderedPrompt.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ServerPromptInfo.renderedPrompt.modify())()
{
  return nullsub_1;
}

uint64_t ServerPromptInfo.segments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServerPromptInfo.segments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ServerPromptInfo.segments.modify())()
{
  return nullsub_1;
}

uint64_t ServerPromptInfo.tokenIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServerPromptInfo.tokenIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ServerPromptInfo.tokenIDs.modify())()
{
  return nullsub_1;
}

void ServerPromptInfo.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *ServerPromptInfo.source.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*ServerPromptInfo.source.modify())()
{
  return nullsub_1;
}

uint64_t sub_244A9EB8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244A9EBC8 + 4 * byte_244AE5780[*v0]))(0x64657265646E6572, 0xEE0074706D6F7250);
}

uint64_t sub_244A9EBC8()
{
  return 0x73746E656D676573;
}

uint64_t sub_244A9EBE0()
{
  return 0x7344496E656B6F74;
}

uint64_t sub_244A9EBF8()
{
  return 0x656372756F73;
}

uint64_t sub_244A9EC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244A9F8A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_244A9EC30(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_244A9EC3C()
{
  sub_244A9EEAC();
  return sub_244AE456C();
}

uint64_t sub_244A9EC64()
{
  sub_244A9EEAC();
  return sub_244AE4578();
}

uint64_t ServerPromptInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D0458);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  v15 = v7;
  v13 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244A9EEAC();
  sub_244AE4560();
  LOBYTE(v18) = 0;
  v8 = v16;
  sub_244AE44AC();
  if (!v8)
  {
    v9 = v14;
    v10 = v13;
    v18 = v15;
    v17 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFC8);
    sub_244A9F280(&qword_2573CFFD0, &qword_2573CFFC8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_244AE44B8();
    v18 = v9;
    v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D0468);
    sub_244A9F280(&qword_2573D0470, &qword_2573D0468, MEMORY[0x24BEE3F90], MEMORY[0x24BEE12A0]);
    sub_244AE44B8();
    LOBYTE(v18) = v10;
    v17 = 3;
    sub_244A9EEF0();
    sub_244AE44A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_244A9EEAC()
{
  unint64_t result;

  result = qword_2573D0460;
  if (!qword_2573D0460)
  {
    result = MEMORY[0x24951E280](&unk_244AE59E4, &type metadata for ServerPromptInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D0460);
  }
  return result;
}

unint64_t sub_244A9EEF0()
{
  unint64_t result;

  result = qword_2573D0478;
  if (!qword_2573D0478)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerPromptInfo.Source, &type metadata for ServerPromptInfo.Source);
    atomic_store(result, (unint64_t *)&qword_2573D0478);
  }
  return result;
}

uint64_t ServerPromptInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D0480);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244A9EEAC();
  sub_244AE4554();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  LOBYTE(v23) = 0;
  v9 = sub_244AE447C();
  v11 = v10;
  v21 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFFC8);
  v22 = 1;
  sub_244A9F280(&qword_2573CFFF0, &qword_2573CFFC8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_244AE4488();
  v12 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D0468);
  v22 = 2;
  sub_244A9F280(&qword_2573D0488, &qword_2573D0468, MEMORY[0x24BEE3FB8], MEMORY[0x24BEE12D0]);
  v20 = v12;
  swift_bridgeObjectRetain();
  sub_244AE4488();
  v13 = v23;
  v22 = 3;
  sub_244A9F2DC();
  v19 = v13;
  swift_bridgeObjectRetain();
  sub_244AE4470();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v23;
  v17 = v20;
  v16 = v21;
  *v21 = v9;
  v16[1] = v11;
  v18 = v19;
  v16[2] = v17;
  v16[3] = v18;
  *((_BYTE *)v16 + 32) = v15;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244A9F280(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x24951E280](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_244A9F2DC()
{
  unint64_t result;

  result = qword_2573D0490;
  if (!qword_2573D0490)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerPromptInfo.Source, &type metadata for ServerPromptInfo.Source);
    atomic_store(result, (unint64_t *)&qword_2573D0490);
  }
  return result;
}

unint64_t sub_244A9F324()
{
  unint64_t result;

  result = qword_2573D0498;
  if (!qword_2573D0498)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerPromptInfo.Source, &type metadata for ServerPromptInfo.Source);
    atomic_store(result, (unint64_t *)&qword_2573D0498);
  }
  return result;
}

uint64_t sub_244A9F368@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ServerPromptInfo.init(from:)(a1, a2);
}

uint64_t sub_244A9F37C(_QWORD *a1)
{
  return ServerPromptInfo.encode(to:)(a1);
}

uint64_t destroy for ServerPromptInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServerPromptInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServerPromptInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ServerPromptInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerPromptInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerPromptInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerPromptInfo()
{
  return &type metadata for ServerPromptInfo;
}

uint64_t storeEnumTagSinglePayload for ServerPromptInfo.Source(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244A9F5F0 + 4 * byte_244AE5789[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244A9F624 + 4 * byte_244AE5784[v4]))();
}

uint64_t sub_244A9F624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9F62C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244A9F634);
  return result;
}

uint64_t sub_244A9F640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244A9F648);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244A9F64C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9F654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerPromptInfo.Source()
{
  return &type metadata for ServerPromptInfo.Source;
}

uint64_t getEnumTagSinglePayload for ServerPromptInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerPromptInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_244A9F74C + 4 * byte_244AE5793[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_244A9F780 + 4 * byte_244AE578E[v4]))();
}

uint64_t sub_244A9F780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9F788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244A9F790);
  return result;
}

uint64_t sub_244A9F79C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244A9F7A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_244A9F7A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244A9F7B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerPromptInfo.CodingKeys()
{
  return &type metadata for ServerPromptInfo.CodingKeys;
}

unint64_t sub_244A9F7D0()
{
  unint64_t result;

  result = qword_2573D04A0;
  if (!qword_2573D04A0)
  {
    result = MEMORY[0x24951E280](&unk_244AE59BC, &type metadata for ServerPromptInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D04A0);
  }
  return result;
}

unint64_t sub_244A9F818()
{
  unint64_t result;

  result = qword_2573D04A8;
  if (!qword_2573D04A8)
  {
    result = MEMORY[0x24951E280](&unk_244AE592C, &type metadata for ServerPromptInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D04A8);
  }
  return result;
}

unint64_t sub_244A9F860()
{
  unint64_t result;

  result = qword_2573D04B0;
  if (!qword_2573D04B0)
  {
    result = MEMORY[0x24951E280](&unk_244AE5954, &type metadata for ServerPromptInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573D04B0);
  }
  return result;
}

uint64_t sub_244A9F8A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64657265646E6572 && a2 == 0xEE0074706D6F7250;
  if (v2 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E656D676573 && a2 == 0xE800000000000000 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7344496E656B6F74 && a2 == 0xE800000000000000 || (sub_244AE44DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_244AE44DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_244A9FA78()
{
  unint64_t result;

  result = qword_2573D04B8;
  if (!qword_2573D04B8)
  {
    result = MEMORY[0x24951E280](&protocol conformance descriptor for ServerPromptInfo.Source, &type metadata for ServerPromptInfo.Source);
    atomic_store(result, (unint64_t *)&qword_2573D04B8);
  }
  return result;
}

uint64_t sub_244A9FABC@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = MEMORY[0x24BEE4AF8];
  v2 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  v3 = (char *)a1 + v2[5];
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_244AE3C00();
  v5 = (char *)a1 + v2[7];
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  v6 = (char *)a1 + v2[8];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a1 + v2[9];
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = (char *)a1 + v2[10];
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  v9 = (char *)a1 + v2[11];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  v10 = (char *)a1 + v2[12];
  *(_DWORD *)v10 = 0;
  v10[4] = 1;
  v11 = (char *)a1 + v2[13];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = (char *)a1 + v2[14];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = (char *)a1 + v2[15];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = (char *)a1 + v2[16];
  *(_DWORD *)v14 = 0;
  v14[4] = 1;
  v15 = (char *)a1 + v2[17];
  *(_DWORD *)v15 = 0;
  v15[4] = 1;
  *((_BYTE *)a1 + v2[18]) = 2;
  v16 = (char *)a1 + v2[19];
  *(_DWORD *)v16 = 0;
  v16[4] = 1;
  v17 = (char *)a1 + v2[20];
  v18 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
}

void sub_244A9FC28(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_244AD60E0();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

void sub_244A9FC58(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_244AD60E0();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

uint64_t sub_244A9FC90()
{
  sub_244AD33C0();
  return sub_244AE3C48();
}

void sub_244A9FCD4()
{
  qword_2573DAA50 = (uint64_t)&unk_2515AE7A8;
}

uint64_t sub_244A9FCE8@<X0>(_QWORD *a1@<X8>)
{
  return sub_244A9FF10(&qword_2573CF778, &qword_2573DAA50, a1);
}

uint64_t sub_244A9FD08()
{
  sub_244AD6058();
  return sub_244AE3C48();
}

void sub_244A9FD40()
{
  qword_2573DAA58 = (uint64_t)&unk_2515AE818;
}

uint64_t sub_244A9FD54@<X0>(_QWORD *a1@<X8>)
{
  return sub_244A9FF10(&qword_2573CF780, &qword_2573DAA58, a1);
}

void sub_244A9FD70(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t sub_244A9FD80@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_244A9FD98()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

_QWORD *sub_244A9FDA0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 3uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_244A9FDBC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_244A9FDC8()
{
  sub_244AE4530();
  sub_244AE41F4();
  return sub_244AE4548();
}

uint64_t sub_244A9FE30()
{
  sub_244AD609C();
  return sub_244AE3C48();
}

uint64_t sub_244A9FE68()
{
  sub_244AE4530();
  sub_244AE41F4();
  return sub_244AE4548();
}

BOOL sub_244A9FECC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_244A9FEE0()
{
  qword_2573DAA60 = (uint64_t)&unk_2515AE868;
}

uint64_t sub_244A9FEF4@<X0>(_QWORD *a1@<X8>)
{
  return sub_244A9FF10(&qword_2573CF788, &qword_2573DAA60, a1);
}

uint64_t sub_244A9FF10@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_244A9FF5C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_244AE44DC();
}

uint64_t sub_244A9FF90(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DAA68, (uint64_t)"threshold", 9, MEMORY[0x24BE5C318]);
}

uint64_t sub_244A9FFB0()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_244AE3C54();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0);
      sub_244AE3CCC();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_244AA0044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA93C8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_244AA0060);
}

uint64_t sub_244AA0060(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20) + 8) & 1) == 0)
    return sub_244AE3DC8();
  return result;
}

uint64_t sub_244AA00D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_244AE3C00();
  v5 = a2 + *(int *)(a1 + 20);
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  return result;
}

unint64_t sub_244AA0110()
{
  return 0xD00000000000002BLL;
}

uint64_t (*sub_244AA0138())()
{
  return nullsub_1;
}

uint64_t sub_244AA0148()
{
  return sub_244A9FFB0();
}

uint64_t sub_244AA0160()
{
  sub_244A7DAA8(&qword_2573D1C10, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8BA0);
  return sub_244AE3C3C();
}

uint64_t sub_244AA01B4@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF790, (uint64_t)qword_2573DAA68, a1);
}

uint64_t sub_244AA01D0()
{
  sub_244A7DAA8(&qword_2573D1B80, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8BD8);
  return sub_244AE3D50();
}

uint64_t sub_244AA0214()
{
  sub_244A7DAA8(&qword_2573D1B80, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8BD8);
  return sub_244AE3D68();
}

uint64_t sub_244AA026C(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DAA80, (uint64_t)"count", 5, MEMORY[0x24BE5C318]);
}

uint64_t sub_244AA028C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_244AE3C54();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0);
      sub_244AE3CF0();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_244AA0320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AAA0C8(a1, a2, a3, (uint64_t)type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244AC735C);
}

uint64_t sub_244AA0344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_244AE3C00();
  v5 = a2 + *(int *)(a1 + 20);
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  return result;
}

unint64_t sub_244AA037C()
{
  return 0xD000000000000028;
}

uint64_t sub_244AA0398()
{
  return sub_244AA028C();
}

uint64_t sub_244AA03AC()
{
  sub_244A7DAA8(&qword_2573D1C30, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE8A38);
  return sub_244AE3C3C();
}

uint64_t sub_244AA03FC@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF798, (uint64_t)qword_2573DAA80, a1);
}

uint64_t sub_244AA0418@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_244AE3E34();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_244AA0484()
{
  sub_244A7DAA8(&qword_2573D1B60, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE8A70);
  return sub_244AE3D50();
}

uint64_t sub_244AA04C4()
{
  sub_244A7DAA8(&qword_2573D1B60, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE8A70);
  return sub_244AE3D68();
}

uint64_t sub_244AA0518()
{
  uint64_t v0;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAA98);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAA98);
  return sub_244AE3E28();
}

uint64_t sub_244AA0560()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_244AE3C54();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_244AA05A0()
{
  return sub_244AE3BF4();
}

unint64_t sub_244AA05B8()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_244AA05D4()
{
  return sub_244AA0560();
}

uint64_t sub_244AA05E8()
{
  return sub_244AA05A0();
}

uint64_t sub_244AA05FC()
{
  sub_244A7DAA8(&qword_2573D1C38, type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling, (uint64_t)&unk_244AE88D0);
  return sub_244AE3C3C();
}

uint64_t sub_244AA064C@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7A0, (uint64_t)qword_2573DAA98, a1);
}

uint64_t sub_244AA0668()
{
  sub_244A7DAA8(&qword_2573D1B40, type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling, (uint64_t)&unk_244AE8908);
  return sub_244AE3D50();
}

uint64_t sub_244AA06A8()
{
  sub_244A7DAA8(&qword_2573D1B40, type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling, (uint64_t)&unk_244AE8908);
  return sub_244AE3D68();
}

uint64_t sub_244AA06F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_244AE3C0C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_244A7DAA8(&qword_2573D1C28, v5, MEMORY[0x24BE5BF20]);
  LOBYTE(a2) = sub_244AE4200();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return a2 & 1;
}

uint64_t sub_244AA0804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v31;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAAB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAAB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_244AE5A40;
  v5 = v31 + v4;
  v6 = v31 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v31 + v4) = 1;
  *(_QWORD *)v6 = "model_name";
  *(_QWORD *)(v6 + 8) = 10;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C328];
  v8 = sub_244AE3E10();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v31 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "model_adaptor_name";
  *(_QWORD *)(v10 + 8) = 18;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v31 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "model_version";
  *((_QWORD *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v31 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "model_adaptor_version";
  *((_QWORD *)v14 + 1) = 21;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v31 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "options";
  *((_QWORD *)v16 + 1) = 7;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v31 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "session_id";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v31 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "task_priority";
  *((_QWORD *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v31 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "tokenizer_name";
  *((_QWORD *)v22 + 1) = 14;
  v22[16] = 2;
  v9();
  v23 = v31 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "llm_preprocessing";
  *(_QWORD *)(v23 + 8) = 17;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v31 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "draft_model_name";
  *((_QWORD *)v25 + 1) = 16;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v31 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "draft_model_version";
  *((_QWORD *)v27 + 1) = 19;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v31 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "locale";
  *((_QWORD *)v29 + 1) = 6;
  v29[16] = 2;
  v9();
  return sub_244AE3E1C();
}

_OWORD *sub_244AA0B8C()
{
  _OWORD *result;

  type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
  swift_allocObject();
  result = sub_244AA0BC8();
  qword_2573D04C0 = (uint64_t)result;
  return result;
}

_OWORD *sub_244AA0BC8()
{
  _OWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  _QWORD *v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;

  v0[3] = 0u;
  v0[4] = 0u;
  v0[1] = 0u;
  v0[2] = 0u;
  v1 = (char *)v0
     + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  v2 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (char *)v0
     + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__sessionID;
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = (char *)v0
     + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__taskPriority;
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = (_QWORD *)((char *)v0
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__tokenizerName);
  *v5 = 0;
  v5[1] = 0;
  v6 = (char *)v0
     + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
  *(_QWORD *)v6 = 0;
  *((_WORD *)v6 + 4) = 256;
  v7 = (_QWORD *)((char *)v0
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelName);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)((char *)v0
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelVersion);
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)((char *)v0
            + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale) = MEMORY[0x24BEE4AF8];
  return v0;
}

_QWORD *sub_244AA0CB0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;

  v2 = (_QWORD *)v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD0);
  MEMORY[0x24BDAC7A8](v4);
  v55 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v1 + 64) = 0u;
  v53 = (_QWORD *)(v1 + 64);
  *(_OWORD *)(v1 + 48) = 0u;
  v6 = (_QWORD *)(v1 + 48);
  *(_OWORD *)(v1 + 32) = 0u;
  v7 = (_QWORD *)(v1 + 32);
  *(_OWORD *)(v1 + 16) = 0u;
  v8 = v1
     + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  v54 = v1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = v1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__sessionID;
  v56 = v10;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = v1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__taskPriority;
  v57 = v11;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__tokenizerName);
  *v12 = 0;
  v12[1] = 0;
  v13 = v1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
  *(_QWORD *)v13 = 0;
  *(_WORD *)(v13 + 8) = 256;
  v14 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelName);
  v58 = v13;
  v59 = v14;
  *v14 = 0;
  v14[1] = 0;
  v15 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelVersion);
  v60 = v15;
  *v15 = 0;
  v15[1] = 0;
  v61 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale);
  *v61 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v16 = a1[2];
  v17 = a1[3];
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v16;
  *(_QWORD *)(v1 + 24) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = a1[4];
  v18 = a1[5];
  swift_beginAccess();
  *v7 = v19;
  v2[5] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v21 = a1[6];
  v20 = a1[7];
  swift_beginAccess();
  *v6 = v21;
  v2[7] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v23 = a1[8];
  v22 = a1[9];
  v24 = v53;
  swift_beginAccess();
  *v24 = v23;
  v2[9] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (uint64_t)a1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  v26 = v55;
  sub_244A7284C(v25, v55, &qword_2573CFAD0);
  v27 = v54;
  swift_beginAccess();
  sub_244A7D700(v26, v27, &qword_2573CFAD0);
  swift_endAccess();
  v28 = (char *)a1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__sessionID;
  swift_beginAccess();
  v29 = *(_QWORD *)v28;
  LOBYTE(v28) = v28[8];
  v30 = v56;
  swift_beginAccess();
  *(_QWORD *)v30 = v29;
  *(_BYTE *)(v30 + 8) = (_BYTE)v28;
  v31 = (char *)a1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__taskPriority;
  swift_beginAccess();
  v32 = *(_QWORD *)v31;
  LOBYTE(v31) = v31[8];
  v33 = v57;
  swift_beginAccess();
  *(_QWORD *)v33 = v32;
  *(_BYTE *)(v33 + 8) = (_BYTE)v31;
  v34 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__tokenizerName);
  swift_beginAccess();
  v36 = *v34;
  v35 = v34[1];
  swift_beginAccess();
  *v12 = v36;
  v12[1] = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = (char *)a1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
  swift_beginAccess();
  v38 = *(_QWORD *)v37;
  LOBYTE(v36) = v37[8];
  LOBYTE(v37) = v37[9];
  v39 = v58;
  swift_beginAccess();
  *(_QWORD *)v39 = v38;
  *(_BYTE *)(v39 + 8) = v36;
  *(_BYTE *)(v39 + 9) = (_BYTE)v37;
  v40 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelName);
  swift_beginAccess();
  v42 = *v40;
  v41 = v40[1];
  v43 = v59;
  swift_beginAccess();
  *v43 = v42;
  v43[1] = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelVersion);
  swift_beginAccess();
  v46 = *v44;
  v45 = v44[1];
  v47 = v60;
  swift_beginAccess();
  *v47 = v46;
  v47[1] = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale);
  swift_beginAccess();
  v49 = *v48;
  swift_bridgeObjectRetain();
  swift_release();
  v50 = v61;
  swift_beginAccess();
  *v50 = v49;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_244AA11F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244A72890(v0+ OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options, &qword_2573CFAD0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_244AA128C()
{
  sub_244AA11F4();
  return swift_deallocClassInstance();
}

uint64_t sub_244AA12AC()
{
  return type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(0);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D0538);
}

void sub_244AA12C8()
{
  unint64_t v0;

  sub_244A83584(319, qword_2573D0548, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D0B40);
}

uint64_t sub_244AA1390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC30B0(a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig._StorageClass, (uint64_t (*)(uint64_t))sub_244AA0CB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_244AA13C4);
}

uint64_t sub_244AA13C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  char v10;

  result = sub_244AE3C54();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_244AC3340();
          break;
        case 2:
          sub_244AC33BC();
          break;
        case 3:
          sub_244AA15E4();
          break;
        case 4:
          sub_244AA1660();
          break;
        case 5:
          sub_244AC3438(a2, a1, a3, a4, (uint64_t)&OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, &qword_2573D1B00, (uint64_t)&unk_244AE8610);
          break;
        case 6:
        case 7:
          sub_244AA16DC();
          break;
        case 8:
        case 10:
        case 11:
          sub_244AA17F0();
          break;
        case 9:
          sub_244AA175C();
          break;
        case 12:
          sub_244AA1870();
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA15E4()
{
  swift_beginAccess();
  sub_244AE3CD8();
  return swift_endAccess();
}

uint64_t sub_244AA1660()
{
  swift_beginAccess();
  sub_244AE3CD8();
  return swift_endAccess();
}

uint64_t sub_244AA16DC()
{
  swift_beginAccess();
  sub_244AE3CFC();
  return swift_endAccess();
}

uint64_t sub_244AA175C()
{
  swift_beginAccess();
  sub_244AD33C0();
  sub_244AE3C78();
  return swift_endAccess();
}

uint64_t sub_244AA17F0()
{
  swift_beginAccess();
  sub_244AE3CD8();
  return swift_endAccess();
}

uint64_t sub_244AA1870()
{
  swift_beginAccess();
  sub_244AE3CC0();
  return swift_endAccess();
}

uint64_t sub_244AA18F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC3520(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_244AA1918);
}

uint64_t sub_244AA1918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;

  result = sub_244AC3660(a1);
  if (!v4)
  {
    sub_244AC36FC(a1);
    sub_244AA1AE8(a1);
    sub_244AA1B84(a1);
    sub_244AA1C20(a1, a2, a3, a4);
    sub_244AA1DAC(a1, a2, a3, a4, &OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__sessionID);
    sub_244AA1DAC(a1, a2, a3, a4, &OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__taskPriority);
    sub_244AA1EE4(a1, a2, a3, a4, &OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__tokenizerName);
    sub_244AA1E38(a1);
    sub_244AA1EE4(a1, a2, a3, a4, &OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelName);
    sub_244AA1EE4(a1, a2, a3, a4, &OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelVersion);
    v10 = a1
        + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale;
    result = swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v10 + 16))
    {
      swift_bridgeObjectRetain();
      sub_244AE3DBC();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_244AA1AE8(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 56))
  {
    swift_bridgeObjectRetain();
    sub_244AE3DD4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244AA1B84(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 72))
  {
    swift_bridgeObjectRetain();
    sub_244AE3DD4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244AA1C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
  swift_beginAccess();
  sub_244A7284C(v12, (uint64_t)v7, &qword_2573CFAD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFAD0);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  sub_244A7DAA8(&qword_2573D1B00, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE8610);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
}

uint64_t sub_244AA1DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t result;

  v5 = a1 + *a5;
  result = swift_beginAccess();
  if ((*(_BYTE *)(v5 + 8) & 1) == 0)
    return sub_244AE3DEC();
  return result;
}

uint64_t sub_244AA1E38(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1
     + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
  result = swift_beginAccess();
  if ((*(_BYTE *)(v1 + 9) & 1) == 0)
  {
    sub_244AD33C0();
    return sub_244AE3D98();
  }
  return result;
}

uint64_t sub_244AA1EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t result;

  v5 = a1 + *a5;
  result = swift_beginAccess();
  if (*(_QWORD *)(v5 + 8))
  {
    swift_bridgeObjectRetain();
    sub_244AE3DD4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244AA1F90(uint64_t a1, uint64_t a2)
{
  return sub_244AD4050(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t (*)(uint64_t, uint64_t))sub_244AA1FB8) & 1;
}

uint64_t sub_244AA1FB8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD **v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  char *v38;
  uint64_t v39;
  char v40;
  char *v41;
  char v42;
  char *v43;
  uint64_t v44;
  char v45;
  char *v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD **v68;
  _QWORD *v69;
  _QWORD **v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v72 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C50);
  MEMORY[0x24BDAC7A8](v7);
  v73 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD **)((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v71 - v13;
  swift_beginAccess();
  v16 = a1[2];
  v15 = a1[3];
  swift_beginAccess();
  v17 = a2[3];
  if (!v15)
  {
    if (v17)
      goto LABEL_29;
    goto LABEL_8;
  }
  if (!v17)
    goto LABEL_29;
  if (v16 == a2[2] && v15 == v17 || (v18 = 0, (sub_244AE44DC() & 1) != 0))
  {
LABEL_8:
    swift_beginAccess();
    v19 = a1[4];
    v20 = a1[5];
    swift_beginAccess();
    v21 = a2[5];
    if (v20)
    {
      if (!v21)
        goto LABEL_29;
      if (v19 != a2[4] || v20 != v21)
      {
        v18 = 0;
        if ((sub_244AE44DC() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v21)
    {
      goto LABEL_29;
    }
    swift_beginAccess();
    v22 = a1[6];
    v23 = a1[7];
    swift_beginAccess();
    v24 = a2[7];
    if (v23)
    {
      if (!v24)
        goto LABEL_29;
      if (v22 != a2[6] || v23 != v24)
      {
        v18 = 0;
        if ((sub_244AE44DC() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v24)
    {
      goto LABEL_29;
    }
    swift_beginAccess();
    v25 = a1[8];
    v26 = a1[9];
    swift_beginAccess();
    v27 = a2[9];
    if (v26)
    {
      if (v27)
      {
        if (v25 != a2[8] || v26 != v27)
        {
          v18 = 0;
          if ((sub_244AE44DC() & 1) == 0)
            return v18 & 1;
        }
LABEL_31:
        v29 = (uint64_t)a1
            + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
        swift_beginAccess();
        sub_244A7284C(v29, (uint64_t)v14, &qword_2573CFAD0);
        v30 = (uint64_t)a2
            + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__options;
        swift_beginAccess();
        v31 = v73;
        v32 = v73 + *(int *)(v7 + 48);
        sub_244A7284C((uint64_t)v14, v73, &qword_2573CFAD0);
        v71 = v32;
        sub_244A7284C(v30, v32, &qword_2573CFAD0);
        v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v33(v31, 1, v4) == 1)
        {
          swift_retain();
          swift_retain();
          sub_244A72890((uint64_t)v14, &qword_2573CFAD0);
          if (v33(v71, 1, v4) == 1)
          {
            sub_244A72890(v31, &qword_2573CFAD0);
LABEL_38:
            v38 = (char *)a1
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__sessionID;
            swift_beginAccess();
            v39 = *(_QWORD *)v38;
            v40 = v38[8];
            v41 = (char *)a2
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__sessionID;
            swift_beginAccess();
            v42 = v41[8];
            if ((v40 & 1) != 0)
            {
              if (!v41[8])
                goto LABEL_79;
            }
            else
            {
              if (v39 != *(_QWORD *)v41)
                v42 = 1;
              if ((v42 & 1) != 0)
                goto LABEL_79;
            }
            v43 = (char *)a1
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__taskPriority;
            swift_beginAccess();
            v44 = *(_QWORD *)v43;
            v45 = v43[8];
            v46 = (char *)a2
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__taskPriority;
            swift_beginAccess();
            v47 = v46[8];
            if ((v45 & 1) != 0)
            {
              if (!v46[8])
                goto LABEL_79;
            }
            else
            {
              if (v44 != *(_QWORD *)v46)
                v47 = 1;
              if ((v47 & 1) != 0)
                goto LABEL_79;
            }
            v48 = (_QWORD *)((char *)a1
                           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__tokenizerName);
            swift_beginAccess();
            v49 = *v48;
            v50 = v48[1];
            v51 = (_QWORD *)((char *)a2
                           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__tokenizerName);
            swift_beginAccess();
            v52 = v51[1];
            if (v50)
            {
              if (!v52)
                goto LABEL_79;
              if (v49 != *v51 || v50 != v52)
              {
                v18 = 0;
                if ((sub_244AE44DC() & 1) == 0)
                  goto LABEL_80;
              }
            }
            else if (v52)
            {
              goto LABEL_79;
            }
            v53 = (char *)a1
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
            swift_beginAccess();
            v54 = *(_QWORD *)v53;
            v55 = v53[9];
            v56 = (char *)a2
                + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__llmPreprocessing;
            swift_beginAccess();
            if ((v55 & 1) != 0)
            {
              if ((v56[9] & 1) == 0)
                goto LABEL_79;
            }
            else
            {
              if ((v56[9] & 1) != 0)
                goto LABEL_79;
              v62 = *(_QWORD *)v56;
              if ((v56[8] & 1) != 0)
                __asm { BR              X10 }
              if (v54 != v62)
                goto LABEL_79;
            }
            v57 = (_QWORD *)((char *)a1
                           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelName);
            swift_beginAccess();
            v58 = *v57;
            v59 = v57[1];
            v60 = (_QWORD *)((char *)a2
                           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelName);
            swift_beginAccess();
            v61 = v60[1];
            if (v59)
            {
              if (!v61)
                goto LABEL_79;
              if (v58 != *v60 || v59 != v61)
              {
                v18 = 0;
                if ((sub_244AE44DC() & 1) == 0)
                  goto LABEL_80;
              }
            }
            else if (v61)
            {
              goto LABEL_79;
            }
            v63 = (_QWORD *)((char *)a1
                           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelVersion);
            swift_beginAccess();
            v64 = *v63;
            v65 = v63[1];
            v66 = (_QWORD *)((char *)a2
                           + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__draftModelVersion);
            swift_beginAccess();
            v67 = v66[1];
            if (v65)
            {
              if (v67)
              {
                if (v64 != *v66 || v65 != v67)
                {
                  v18 = 0;
                  if ((sub_244AE44DC() & 1) == 0)
                    goto LABEL_80;
                }
                goto LABEL_78;
              }
            }
            else if (!v67)
            {
LABEL_78:
              v68 = (_QWORD **)((char *)a1
                              + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale);
              swift_beginAccess();
              v69 = *v68;
              v70 = (_QWORD **)((char *)a2
                              + OBJC_IVAR____TtCV15PrivateMLClient39Apple_Cloudml_Inference_Tie_ModelConfigP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__locale);
              swift_beginAccess();
              v18 = sub_244ACE390(v69, *v70);
LABEL_80:
              swift_release();
              swift_release();
              return v18 & 1;
            }
LABEL_79:
            v18 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          sub_244A7284C(v31, (uint64_t)v12, &qword_2573CFAD0);
          v34 = v71;
          if (v33(v71, 1, v4) != 1)
          {
            v35 = v34;
            v36 = v72;
            sub_244A729FC(v35, (uint64_t)v72, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
            swift_retain();
            swift_retain();
            v37 = sub_244AD36FC(v12, v36);
            sub_244A729C0((uint64_t)v36, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
            sub_244A72890((uint64_t)v14, &qword_2573CFAD0);
            sub_244A729C0((uint64_t)v12, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
            sub_244A72890(v31, &qword_2573CFAD0);
            if ((v37 & 1) == 0)
              goto LABEL_79;
            goto LABEL_38;
          }
          swift_retain();
          swift_retain();
          sub_244A72890((uint64_t)v14, &qword_2573CFAD0);
          sub_244A729C0((uint64_t)v12, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
        }
        sub_244A72890(v31, &qword_2573D1C50);
        goto LABEL_79;
      }
    }
    else if (!v27)
    {
      goto LABEL_31;
    }
LABEL_29:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_244AA27D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_244AC49F8(a1, &qword_2573CF7B0, &qword_2573D04C0, a2);
}

unint64_t sub_244AA27F0()
{
  return 0xD000000000000027;
}

uint64_t sub_244AA280C()
{
  sub_244A7DAA8(&qword_2573D1C40, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE8768);
  return sub_244AE3C3C();
}

uint64_t sub_244AA285C@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7A8, (uint64_t)qword_2573DAAB0, a1);
}

uint64_t sub_244AA2878()
{
  sub_244A7DAA8(&qword_2573D1B20, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE87A0);
  return sub_244AE3D50();
}

uint64_t sub_244AA28B8()
{
  sub_244A7DAA8(&qword_2573D1B20, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE87A0);
  return sub_244AE3D68();
}

uint64_t sub_244AA290C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAAC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAAC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A50;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "NOT_SET";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "NO_PREPROCESSING";
  *(_QWORD *)(v11 + 8) = 16;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "ON_DEVICE";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "DEPRECATED_ON_SERVER";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 4;
  *(_QWORD *)v16 = "ON_SERVER_TGI";
  *(_QWORD *)(v16 + 8) = 13;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AA2B0C@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7B8, (uint64_t)qword_2573DAAC8, a1);
}

uint64_t sub_244AA2B28()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAAE0 = 0xD000000000000027;
  *(_QWORD *)algn_2573DAAE8 = 0x8000000244AEA060;
  return result;
}

uint64_t sub_244AA2B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v42;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAAF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAAF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_244AE5A60;
  v5 = v42 + v4;
  v6 = v42 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v42 + v4) = 1;
  *(_QWORD *)v6 = "num_completions";
  *(_QWORD *)(v6 + 8) = 15;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C328];
  v8 = sub_244AE3E10();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 3;
  *(_QWORD *)v10 = "temperature";
  *(_QWORD *)(v10 + 8) = 11;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 4;
  *(_QWORD *)v12 = "max_tokens";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 5;
  *(_QWORD *)v14 = "logprobs";
  *((_QWORD *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 6;
  *(_QWORD *)v16 = "length_penalty";
  *((_QWORD *)v16 + 1) = 14;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 7;
  *(_QWORD *)v18 = "frequency_penalty";
  *((_QWORD *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 8;
  *(_QWORD *)v20 = "random_seed";
  *((_QWORD *)v20 + 1) = 11;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 9;
  *(_QWORD *)v22 = "DEPRECATED_nucleus_sampling_threshold";
  *((_QWORD *)v22 + 1) = 37;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 10;
  *(_QWORD *)v23 = "timeout";
  *(_QWORD *)(v23 + 8) = 7;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 11;
  *(_QWORD *)v25 = "stop_sequences";
  *((_QWORD *)v25 + 1) = 14;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 12;
  *(_QWORD *)v27 = "DEPRECATED_top_k";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 13;
  *(_QWORD *)v29 = "DEPRECATED_arg_max";
  *((_QWORD *)v29 + 1) = 18;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 19;
  *(_QWORD *)v31 = "disable_stop_sequences_check";
  *((_QWORD *)v31 + 1) = 28;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "arg_max";
  *((_QWORD *)v33 + 1) = 7;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "nucleus_sampling";
  *((_QWORD *)v35 + 1) = 16;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "top_k";
  *((_QWORD *)v37 + 1) = 5;
  v37[16] = 2;
  v9();
  v38 = v5 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "draft_steps";
  *(_QWORD *)(v38 + 8) = 11;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v5 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 18;
  *(_QWORD *)v40 = "constraints";
  *((_QWORD *)v40 + 1) = 11;
  v40[16] = 2;
  v9();
  return sub_244AE3E1C();
}

uint64_t sub_244AA3064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_244AE3C54();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 4:
        case 5:
        case 12:
        case 13:
        case 17:
          type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
          v12 = v11;
          sub_244AE3CF0();
          goto LABEL_13;
        case 3:
        case 6:
        case 7:
          type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
          v12 = v11;
          sub_244AE3C9C();
          goto LABEL_13;
        case 8:
          type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
          v12 = v11;
          sub_244AE3CFC();
          goto LABEL_13;
        case 9:
        case 10:
          type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
          v12 = v11;
          sub_244AE3CCC();
          goto LABEL_13;
        case 11:
          v12 = v11;
          sub_244AE3CC0();
          goto LABEL_13;
        case 14:
          v12 = v11;
          sub_244AA32B8(a1, v5);
          goto LABEL_13;
        case 15:
          v12 = v11;
          sub_244AA343C(v5, a1, a2, a3);
          goto LABEL_13;
        case 16:
          v12 = v11;
          sub_244AA385C(v5, a1, a2, a3);
          goto LABEL_13;
        case 18:
          v12 = v11;
          sub_244AA3C7C();
          goto LABEL_13;
        case 19:
          type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
          v12 = v11;
          sub_244AE3C6C();
LABEL_13:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA32B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  char v8;
  _BYTE *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 2;
  result = sub_244AE3C6C();
  if (!v2)
  {
    v8 = v14;
    if (v14 != 2)
    {
      v9 = (_BYTE *)(a2
                   + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0)
                            + 20));
      sub_244A7284C((uint64_t)v9, (uint64_t)v6, &qword_2573CFAE0);
      v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
      v13 = *(_QWORD *)(v10 - 8);
      v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v10);
      sub_244A72890((uint64_t)v6, &qword_2573CFAE0);
      if (v11 != 1)
        sub_244AE3C60();
      sub_244A72890((uint64_t)v9, &qword_2573CFAE0);
      *v9 = v8 & 1;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v10);
    }
  }
  return result;
}

uint64_t sub_244AA343C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v40 = a3;
  v41 = a4;
  v42 = a1;
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v36 = (uint64_t)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v32 - v23;
  v37 = v5;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v32 - v23, 1, 1, v4);
  v33 = v42 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0) + 20);
  sub_244A7284C(v33, (uint64_t)v12, &qword_2573CFAE0);
  v34 = v14;
  LODWORD(v42) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)v42 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFAE0);
    v26 = v13;
  }
  else
  {
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1C88);
      sub_244A729FC((uint64_t)v17, (uint64_t)v9, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
      sub_244A729FC((uint64_t)v9, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
      v25(v24, 0, 1, v4);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    }
  }
  v27 = v38;
  sub_244A7DAA8(&qword_2573D1B80, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8BD8);
  sub_244AE3D20();
  if (v27)
    return sub_244A72890((uint64_t)v24, &qword_2573D1C88);
  v29 = v36;
  sub_244A7284C((uint64_t)v24, v36, &qword_2573D1C88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v29, 1, v4) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1C88);
    return sub_244A72890(v29, &qword_2573D1C88);
  }
  else
  {
    v30 = v35;
    sub_244A729FC(v29, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
    if ((_DWORD)v42 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1C88);
    v31 = v33;
    sub_244A72890(v33, &qword_2573CFAE0);
    sub_244A729FC(v30, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v26);
  }
}

uint64_t sub_244AA385C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v40 = a3;
  v41 = a4;
  v42 = a1;
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C90);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v36 = (uint64_t)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v32 - v23;
  v37 = v5;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v32 - v23, 1, 1, v4);
  v33 = v42 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0) + 20);
  sub_244A7284C(v33, (uint64_t)v12, &qword_2573CFAE0);
  v34 = v14;
  LODWORD(v42) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)v42 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFAE0);
    v26 = v13;
  }
  else
  {
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1C90);
      sub_244A729FC((uint64_t)v17, (uint64_t)v9, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
      sub_244A729FC((uint64_t)v9, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
      v25(v24, 0, 1, v4);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    }
  }
  v27 = v38;
  sub_244A7DAA8(&qword_2573D1B60, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE8A70);
  sub_244AE3D20();
  if (v27)
    return sub_244A72890((uint64_t)v24, &qword_2573D1C90);
  v29 = v36;
  sub_244A7284C((uint64_t)v24, v36, &qword_2573D1C90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v29, 1, v4) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1C90);
    return sub_244A72890(v29, &qword_2573D1C90);
  }
  else
  {
    v30 = v35;
    sub_244A729FC(v29, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
    if ((_DWORD)v42 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1C90);
    v31 = v33;
    sub_244A72890(v33, &qword_2573CFAE0);
    sub_244A729FC(v30, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v26);
  }
}

uint64_t sub_244AA3C7C()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  sub_244A7DAA8(&qword_2573D18B8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE6A90);
  return sub_244AE3D20();
}

uint64_t sub_244AA3D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;

  v5 = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_244AC610C(v5, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
  if (!v4)
  {
    sub_244AA402C(v5);
    sub_244AC6200(v5, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions);
    sub_244AA40A0(v5);
    sub_244AA4114(v5);
    sub_244AA4188(v5);
    sub_244AA41FC(v5);
    sub_244AA4270(v5);
    sub_244AA42E4(v5);
    if (*(_QWORD *)(*(_QWORD *)v5 + 16))
      sub_244AE3DBC();
    sub_244AA4358(v5);
    sub_244AA43CC(v5);
    v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
    sub_244A7284C(v5 + *(int *)(v13 + 20), (uint64_t)v11, &qword_2573CFAE0);
    v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14) == 1)
    {
      v15 = a1;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        v15 = a1;
        if (EnumCaseMultiPayload == 1)
          sub_244AA455C(v5);
        else
          sub_244AA4708(v5);
        sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      }
      else
      {
        v15 = a1;
        sub_244AA4440(v5);
      }
    }
    sub_244AA48B4(v5);
    sub_244AA4928(v5, v15, a2, a3);
    sub_244AA4A9C(v5);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AA402C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 32) + 4) & 1) == 0)
    return sub_244AE3DB0();
  return result;
}

uint64_t sub_244AA40A0(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 40) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AA4114(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 44) + 4) & 1) == 0)
    return sub_244AE3DB0();
  return result;
}

uint64_t sub_244AA4188(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 4) & 1) == 0)
    return sub_244AE3DB0();
  return result;
}

uint64_t sub_244AA41FC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 52) + 8) & 1) == 0)
    return sub_244AE3DEC();
  return result;
}

uint64_t sub_244AA4270(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 56) + 8) & 1) == 0)
    return sub_244AE3DC8();
  return result;
}

uint64_t sub_244AA42E4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 60) + 8) & 1) == 0)
    return sub_244AE3DC8();
  return result;
}

uint64_t sub_244AA4358(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 64) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AA43CC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 68) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AA4440(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  sub_244A7284C(a1 + *(int *)(v5 + 20), (uint64_t)v4, &qword_2573CFAE0);
  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFAE0);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    return sub_244AE3D8C();
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  __break(1u);
  return result;
}

uint64_t sub_244AA455C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  sub_244A7284C(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_2573CFAE0);
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFAE0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
    sub_244A7DAA8(&qword_2573D1B80, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8BD8);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  __break(1u);
  return result;
}

uint64_t sub_244AA4708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  sub_244A7284C(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_2573CFAE0);
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFAE0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
    sub_244A7DAA8(&qword_2573D1B60, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE8A70);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  __break(1u);
  return result;
}

uint64_t sub_244AA48B4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 76) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AA4928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  sub_244A7284C(a1 + *(int *)(v12 + 80), (uint64_t)v7, &qword_2573CFB00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFB00);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
  sub_244A7DAA8(&qword_2573D18B8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE6A90);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
}

uint64_t sub_244AA4A9C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 72)) != 2)
    return sub_244AE3D8C();
  return result;
}

uint64_t sub_244AA4B18(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF7C0, &qword_2573DAAE0);
}

uint64_t (*sub_244AA4B40())()
{
  return nullsub_1;
}

uint64_t sub_244AA4B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA3064(a1, a2, a3);
}

uint64_t sub_244AA4B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA3D10(a1, a2, a3);
}

uint64_t sub_244AA4B7C()
{
  sub_244A7DAA8(&qword_2573D1C80, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE85D8);
  return sub_244AE3C3C();
}

uint64_t sub_244AA4BCC@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7C8, (uint64_t)qword_2573DAAF0, a1);
}

uint64_t sub_244AA4BE8()
{
  sub_244A7DAA8(&qword_2573D1B00, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE8610);
  return sub_244AE3D50();
}

uint64_t sub_244AA4C28()
{
  sub_244A7DAA8(&qword_2573D1B00, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE8610);
  return sub_244AE3D68();
}

uint64_t sub_244AA4C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAB08);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAB08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A70;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "prompt_token_ids";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "model_config";
  *(_QWORD *)(v11 + 8) = 12;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "include_perf_metrics";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "request_metadata";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AA4E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_244AE3C54();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_244AE3C84();
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_244AC7C28(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, &qword_2573D1B20, (uint64_t)&unk_244AE87A0);
          goto LABEL_5;
        case 3:
          type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest(0);
          v12 = v11;
          sub_244AE3C6C();
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_244AC7D70(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, &qword_2573D18D8, (uint64_t)&unk_244AE6BF8);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA4FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16) || (result = sub_244AE3D80(), !v4))
  {
    result = sub_244AA5098(v3, a1, a2, a3);
    if (!v4)
    {
      sub_244AA520C(v3);
      sub_244AA5280(v3, a1, a2, a3);
      type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest(0);
      return sub_244AE3BF4();
    }
  }
  return result;
}

uint64_t sub_244AA5098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest(0);
  sub_244A7284C(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_2573CFAD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFAD8);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  sub_244A7DAA8(&qword_2573D1B20, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE87A0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
}

uint64_t sub_244AA520C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 28)) != 2)
    return sub_244AE3D8C();
  return result;
}

uint64_t sub_244AA5280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest(0);
  sub_244A7284C(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_2573CFAC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFAC8);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
  sub_244A7DAA8(&qword_2573D18D8, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6BF8);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
}

uint64_t sub_244AA53F4@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  *a2 = MEMORY[0x24BEE4AF8];
  sub_244AE3C00();
  v4 = (char *)a2 + a1[6];
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1[8];
  *((_BYTE *)a2 + a1[7]) = 2;
  v7 = (char *)a2 + v6;
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
}

unint64_t sub_244AA5490()
{
  return 0xD00000000000002CLL;
}

uint64_t (*sub_244AA54B4())()
{
  return nullsub_1;
}

uint64_t sub_244AA54C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA4E40(a1, a2, a3);
}

uint64_t sub_244AA54DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA4FA4(a1, a2, a3);
}

uint64_t sub_244AA54F0()
{
  sub_244A7DAA8(&qword_2573D1C98, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, (uint64_t)&unk_244AE8470);
  return sub_244AE3C3C();
}

uint64_t sub_244AA5540@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7D0, (uint64_t)qword_2573DAB08, a1);
}

uint64_t sub_244AA555C()
{
  sub_244A7DAA8(&qword_2573D1AE0, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, (uint64_t)&unk_244AE84A8);
  return sub_244AE3D50();
}

uint64_t sub_244AA559C()
{
  sub_244A7DAA8(&qword_2573D1AE0, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, (uint64_t)&unk_244AE84A8);
  return sub_244AE3D68();
}

uint64_t sub_244AA55F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v24;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAB20);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAB20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_244AE5A80;
  v5 = v24 + v4;
  v6 = v24 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v24 + v4) = 1;
  *(_QWORD *)v6 = "prompt";
  *(_QWORD *)(v6 + 8) = 6;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_244AE3E10();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 3;
  *(_QWORD *)v10 = "data";
  *(_QWORD *)(v10 + 8) = 4;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 4;
  *(_QWORD *)v12 = "model_config";
  *((_QWORD *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 5;
  *(_QWORD *)v14 = "prompts";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 6;
  *(_QWORD *)v16 = "include_perf_metrics";
  *((_QWORD *)v16 + 1) = 20;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 7;
  *(_QWORD *)v18 = "request_metadata";
  *((_QWORD *)v18 + 1) = 16;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 8;
  *(_QWORD *)v20 = "delimiters";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 9;
  *(_QWORD *)v22 = "prompt_template";
  *((_QWORD *)v22 + 1) = 15;
  v22[16] = 2;
  v9();
  return sub_244AE3E1C();
}

uint64_t sub_244AA58A8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_244AE3C54();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
          sub_244AE3CD8();
          break;
        case 3:
          type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
          sub_244AE3C90();
          break;
        case 4:
          sub_244AA5AB0();
          break;
        case 5:
          sub_244AE3CC0();
          break;
        case 6:
          type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
          sub_244AE3C6C();
          break;
        case 7:
          sub_244AA5B44();
          break;
        case 8:
          type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
          sub_244A7DAA8(&qword_2573CFAE8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE81D8);
          sub_244AE3D14();
          break;
        case 9:
          sub_244AA5BD8();
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA5AB0()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  sub_244A7DAA8(&qword_2573D1B20, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE87A0);
  return sub_244AE3D20();
}

uint64_t sub_244AA5B44()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  sub_244A7DAA8(&qword_2573D18D8, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6BF8);
  return sub_244AE3D20();
}

uint64_t sub_244AA5BD8()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  sub_244A7DAA8(&qword_2573D1838, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE64F0);
  return sub_244AE3D20();
}

uint64_t sub_244AA5C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC511C((uint64_t)v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest);
  if (!v4)
  {
    sub_244AA5E30((uint64_t)v3);
    sub_244AA5ECC((uint64_t)v3, a1, a2, a3);
    if (*(_QWORD *)(*v3 + 16))
      sub_244AE3DBC();
    sub_244AA6040((uint64_t)v3);
    sub_244AA60B4((uint64_t)v3, a1, a2, a3);
    if (*(_QWORD *)(v3[1] + 16))
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
      sub_244A7DAA8(&qword_2573CFAE8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE81D8);
      sub_244AE3DF8();
    }
    sub_244AA6228((uint64_t)v3, a1, a2, a3);
    type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AA5E30(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  v3 = a1 + *(int *)(result + 32);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    sub_244A81E68(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_244AE3DA4();
    return sub_244A81EAC(v5, v4);
  }
  return result;
}

uint64_t sub_244AA5ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Request;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Request = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  sub_244A7284C(a1 + *(int *)(Request + 36), (uint64_t)v7, &qword_2573CFAD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFAD8);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  sub_244A7DAA8(&qword_2573D1B20, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE87A0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
}

uint64_t sub_244AA6040(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 2)
    return sub_244AE3D8C();
  return result;
}

uint64_t sub_244AA60B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Request;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Request = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  sub_244A7284C(a1 + *(int *)(Request + 44), (uint64_t)v7, &qword_2573CFAC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFAC8);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
  sub_244A7DAA8(&qword_2573D18D8, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6BF8);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
}

uint64_t sub_244AA6228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Request;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Request = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  sub_244A7284C(a1 + *(int *)(Request + 48), (uint64_t)v7, &qword_2573CFAF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFAF8);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
  sub_244A7DAA8(&qword_2573D1838, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE64F0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
}

uint64_t sub_244AA639C@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = MEMORY[0x24BEE4AF8];
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = v4;
  sub_244AE3C00();
  v5 = a1[8];
  v6 = (_QWORD *)((char *)a2 + a1[7]);
  *v6 = 0;
  v6[1] = 0;
  *(_OWORD *)((char *)a2 + v5) = xmmword_244AE4A00;
  v7 = (char *)a2 + a1[9];
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = a1[11];
  *((_BYTE *)a2 + a1[10]) = 2;
  v10 = (char *)a2 + v9;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (char *)a2 + a1[12];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
}

unint64_t sub_244AA647C()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_244AA6498()
{
  return sub_244AA58A8();
}

uint64_t sub_244AA64AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA5C6C(a1, a2, a3);
}

uint64_t sub_244AA64C0()
{
  sub_244A7DAA8(&qword_2573D1CB0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8308);
  return sub_244AE3C3C();
}

uint64_t sub_244AA6510@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7D8, (uint64_t)qword_2573DAB20, a1);
}

uint64_t sub_244AA652C()
{
  sub_244A7DAA8(&qword_2573CFAC0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8340);
  return sub_244AE3D50();
}

uint64_t sub_244AA656C()
{
  sub_244A7DAA8(&qword_2573CFAC0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8340);
  return sub_244AE3D68();
}

uint64_t sub_244AA65C0()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAB38 = 0xD00000000000002BLL;
  unk_2573DAB40 = 0x8000000244AEA3C0;
  return result;
}

uint64_t sub_244AA662C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAB48);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAB48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A90;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "token";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "position";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AA677C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_244AE3C54();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
        sub_244AE3CF0();
      }
      else if (result == 1)
      {
        sub_244AC7B84(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, &qword_2573CFB18, (uint64_t)&unk_244AE8070);
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA688C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AA6904(v3, a1, a2, a3);
  if (!v4)
  {
    sub_244AC6090(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AA6904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
  sub_244A7284C(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_2573CFB20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFB20);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
  sub_244A7DAA8(&qword_2573CFB18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE8070);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
}

uint64_t sub_244AA6A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_244AE3C00();
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a2 + *(int *)(a1 + 24);
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_244AA6AE8(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF7E0, &qword_2573DAB38);
}

uint64_t sub_244AA6B08(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v5;

  if (*a3 != -1)
    swift_once();
  v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_244AA6B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA677C(a1, a2, a3);
}

uint64_t sub_244AA6B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA688C(a1, a2, a3);
}

uint64_t sub_244AA6B84()
{
  sub_244A7DAA8(&qword_2573D1CD8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE81A0);
  return sub_244AE3C3C();
}

uint64_t sub_244AA6BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7E8, (uint64_t)qword_2573DAB48, a1);
}

uint64_t sub_244AA6BF0()
{
  sub_244A7DAA8(&qword_2573CFAE8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE81D8);
  return sub_244AE3D50();
}

uint64_t sub_244AA6C30()
{
  sub_244A7DAA8(&qword_2573CFAE8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE81D8);
  return sub_244AE3D68();
}

uint64_t sub_244AA6C80()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_2573CF7E0 != -1)
    swift_once();
  v1 = qword_2573DAB38;
  v2 = unk_2573DAB40;
  swift_bridgeObjectRetain();
  result = sub_244AE426C();
  qword_2573DAB60 = v1;
  *(_QWORD *)algn_2573DAB68 = v2;
  return result;
}

uint64_t sub_244AA6D14(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DAB70, (uint64_t)"identifier", 10, MEMORY[0x24BE5C318]);
}

uint64_t sub_244AA6D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AAA00C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
}

uint64_t sub_244AA6D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AAA0C8(a1, a2, a3, (uint64_t)type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244AA9B40);
}

uint64_t sub_244AA6D74(uint64_t a1, uint64_t a2)
{
  return sub_244AD1DE0(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken) & 1;
}

uint64_t sub_244AA6D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _QWORD *v5;

  result = sub_244AE3C00();
  v5 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t sub_244AA6DC4(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF7F0, &qword_2573DAB60);
}

uint64_t sub_244AA6DE4()
{
  sub_244A7DAA8(&qword_2573D1CE0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE8038);
  return sub_244AE3C3C();
}

uint64_t sub_244AA6E34@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF7F8, (uint64_t)qword_2573DAB70, a1);
}

uint64_t sub_244AA6E50()
{
  sub_244A7DAA8(&qword_2573CFB18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE8070);
  return sub_244AE3D50();
}

uint64_t sub_244AA6E90()
{
  sub_244A7DAA8(&qword_2573CFB18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE8070);
  return sub_244AE3D68();
}

uint64_t sub_244AA6EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAB88);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAB88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A50;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "next_token_response";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "final_response";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "status_response";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "inference_environment_response";
  *((_QWORD *)v15 + 1) = 30;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "inference_complete_response";
  *(_QWORD *)(v16 + 8) = 27;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AA70E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_244AE3C54();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_244AA71F0(v5, a1, a2, a3);
          break;
        case 2:
          sub_244AA7630(v5, a1, a2, a3);
          break;
        case 3:
          sub_244AA7A74(v5, a1, a2, a3);
          break;
        case 4:
          sub_244AA7EB8(v5, a1, a2, a3);
          break;
        case 5:
          sub_244AA82FC(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA71F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1BE0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFF38);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFF38);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1BE0);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573D1A58, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7D28);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1BE0);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1BE0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1BE0);
    return sub_244A72890((uint64_t)v33, &qword_2573D1BE0);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1BE0);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFF38);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244AA7630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1BE8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFF38);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFF38);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1BE8);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573D1A18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7A58);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1BE8);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1BE8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1BE8);
    return sub_244A72890((uint64_t)v33, &qword_2573D1BE8);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1BE8);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFF38);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244AA7A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1BF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFF38);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFF38);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1BF0);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573D19D8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7788);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1BF0);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1BF0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1BF0);
    return sub_244A72890((uint64_t)v33, &qword_2573D1BF0);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1BF0);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFF38);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244AA7EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1BF8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFF38);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFF38);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1BF8);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573CFF60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE8CF8);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1BF8);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1BF8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1BF8);
    return sub_244A72890((uint64_t)v33, &qword_2573D1BF8);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1BF8);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFF38);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244AA82FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C00);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFF38);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFF38);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1C00);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573D1A38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7BC0);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1C00);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1C00);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1C00);
    return sub_244A72890((uint64_t)v33, &qword_2573D1C00);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1C00);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFF38);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244AA8740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(v0, (uint64_t)v3, &qword_2573CFF38);
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_244AA880C + 4 * byte_244AE5B06[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse(0);
  return sub_244AE3BF4();
}

uint64_t sub_244AA88F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFF38);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFF38);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    sub_244A7DAA8(&qword_2573D1A58, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7D28);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  __break(1u);
  return result;
}

uint64_t sub_244AA8A90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFF38);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFF38);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
    sub_244A7DAA8(&qword_2573D1A18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7A58);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  __break(1u);
  return result;
}

uint64_t sub_244AA8C30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFF38);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFF38);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    sub_244A7DAA8(&qword_2573D19D8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7788);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  __break(1u);
  return result;
}

uint64_t sub_244AA8DD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFF38);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFF38);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
    sub_244A7DAA8(&qword_2573CFF60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE8CF8);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  __break(1u);
  return result;
}

uint64_t sub_244AA8F70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFF38);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFF38);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse);
    sub_244A7DAA8(&qword_2573D1A38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7BC0);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  __break(1u);
  return result;
}

uint64_t sub_244AA9110@<X0>(uint64_t a1@<X8>)
{
  return sub_244ACAF40(type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType, a1);
}

unint64_t sub_244AA911C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_244AA9138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA70E4(a1, a2, a3);
}

uint64_t sub_244AA914C()
{
  return sub_244AA8740();
}

uint64_t sub_244AA9160()
{
  sub_244A7DAA8(&qword_2573D1BD8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE7F48);
  return sub_244AE3C3C();
}

uint64_t sub_244AA91B0@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF800, (uint64_t)qword_2573DAB88, a1);
}

uint64_t sub_244AA91CC()
{
  sub_244A7DAA8(&qword_2573CFF40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE8D70);
  return sub_244AE3D50();
}

uint64_t sub_244AA920C()
{
  sub_244A7DAA8(&qword_2573CFF40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE8D70);
  return sub_244AE3D68();
}

uint64_t sub_244AA9260()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DABA0 = 0xD00000000000002CLL;
  *(_QWORD *)algn_2573DABA8 = 0x8000000244AE9F70;
  return result;
}

uint64_t sub_244AA92D0(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DABB0, (uint64_t)"inference_environment_info", 26, MEMORY[0x24BE5C328]);
}

uint64_t sub_244AA92F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_244AE3C54();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 1)
        sub_244AC7B84(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, &qword_2573D1938, (uint64_t)&unk_244AE7058);
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA93AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA93C8(a1, a2, a3, sub_244AA9420);
}

uint64_t sub_244AA93C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = a4(v4, a1, a2, a3);
  if (!v5)
    return sub_244AE3BF4();
  return result;
}

uint64_t sub_244AA9420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0);
  sub_244A7284C(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_2573CFF30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFF30);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  sub_244A7DAA8(&qword_2573D1938, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE7058);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
}

uint64_t sub_244AA9594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  sub_244AE3C00();
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t sub_244AA95E0(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF808, &qword_2573DABA0);
}

uint64_t sub_244AA9600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA92F0(a1, a2, a3);
}

uint64_t sub_244AA9614()
{
  sub_244A7DAA8(&qword_2573D1C08, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE7E58);
  return sub_244AE3C3C();
}

uint64_t sub_244AA9664@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF810, (uint64_t)qword_2573DABB0, a1);
}

uint64_t sub_244AA9680()
{
  sub_244A7DAA8(&qword_2573CFF60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE8CF8);
  return sub_244AE3D50();
}

uint64_t sub_244AA96C0()
{
  sub_244A7DAA8(&qword_2573CFF60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE8CF8);
  return sub_244AE3D68();
}

uint64_t sub_244AA9714()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DABC8 = 0xD00000000000002CLL;
  unk_2573DABD0 = 0x8000000244AE9F70;
  return result;
}

uint64_t sub_244AA9784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DABD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DABD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A70;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "token";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "DEPRECATED_sentence";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "DEPRECATED_inference_environment_info";
  *((_QWORD *)v13 + 1) = 37;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "token_padding";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AA9950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_244AE3C54();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
          type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
          sub_244AE3CD8();
          break;
        case 3:
          sub_244AC7CCC(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, &qword_2573D1938, (uint64_t)&unk_244AE7058);
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AA9A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AA9B40(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
  if (!v4)
  {
    sub_244AC50A0(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    sub_244AA9BB4(v3, a1, a2, a3);
    sub_244AA9D28(v3);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AA9B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 20) + 8))
    return sub_244AE3DD4();
  return result;
}

uint64_t sub_244AA9BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  sub_244A7284C(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_2573CFF30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFF30);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  sub_244A7DAA8(&qword_2573D1938, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE7058);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
}

uint64_t sub_244AA9D28(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 32) + 8))
    return sub_244AE3DD4();
  return result;
}

uint64_t sub_244AA9DA0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  sub_244AE3C00();
  v4 = a1[6];
  v5 = (_QWORD *)(a2 + a1[5]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a2 + v4);
  *v6 = 0;
  v6[1] = 0;
  v7 = a2 + a1[7];
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v10 = (_QWORD *)(a2 + a1[8]);
  *v10 = 0;
  v10[1] = 0;
  return result;
}

uint64_t sub_244AA9E18(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF818, &qword_2573DABC8);
}

uint64_t sub_244AA9E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA9950(a1, a2, a3);
}

uint64_t sub_244AA9E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AA9A90(a1, a2, a3);
}

uint64_t sub_244AA9E60()
{
  sub_244A7DAA8(&qword_2573D1D30, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7CF0);
  return sub_244AE3C3C();
}

uint64_t sub_244AA9EB0@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF820, (uint64_t)qword_2573DABD8, a1);
}

uint64_t sub_244AA9ECC()
{
  sub_244A7DAA8(&qword_2573D1A58, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7D28);
  return sub_244AE3D50();
}

uint64_t sub_244AA9F0C()
{
  sub_244A7DAA8(&qword_2573D1A58, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7D28);
  return sub_244AE3D68();
}

uint64_t sub_244AA9F60()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DABF0 = 0xD00000000000002CLL;
  *(_QWORD *)algn_2573DABF8 = 0x8000000244AE9F70;
  return result;
}

uint64_t sub_244AA9FD0(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DAC00, (uint64_t)"sentence", 8, MEMORY[0x24BE5C318]);
}

uint64_t sub_244AA9FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AAA00C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse);
}

uint64_t sub_244AAA00C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t result;
  char v7;

  while (1)
  {
    result = sub_244AE3C54();
    if (v4 || (v7 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      sub_244AE3CD8();
    }
    v4 = 0;
  }
  return result;
}

uint64_t sub_244AAA0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AAA0C8(a1, a2, a3, (uint64_t)type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244AA9B40);
}

uint64_t sub_244AAA0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = a5(v5, a1, a2, a3, a4);
  if (!v6)
    return sub_244AE3BF4();
  return result;
}

uint64_t sub_244AAA124(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF828, &qword_2573DABF0);
}

uint64_t sub_244AAA144()
{
  sub_244A7DAA8(&qword_2573D1D38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7B88);
  return sub_244AE3C3C();
}

uint64_t sub_244AAA194@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF830, (uint64_t)qword_2573DAC00, a1);
}

uint64_t sub_244AAA1B0()
{
  sub_244A7DAA8(&qword_2573D1A38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7BC0);
  return sub_244AE3D50();
}

uint64_t sub_244AAA1F0()
{
  sub_244A7DAA8(&qword_2573D1A38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7BC0);
  return sub_244AE3D68();
}

uint64_t sub_244AAA240(uint64_t a1, uint64_t a2)
{
  return sub_244AD1DE0(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse) & 1;
}

uint64_t sub_244AAA260()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAC18 = 0xD00000000000002CLL;
  unk_2573DAC20 = 0x8000000244AE9F70;
  return result;
}

uint64_t sub_244AAA2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAC28);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAC28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A90;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "sentence";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "debug_info";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AAA42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_244AE3C54();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_244AC7C28(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, &qword_2573D19F8, (uint64_t)&unk_244AE78F0);
      }
      else if (result == 1)
      {
        type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
        sub_244AE3CD8();
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AAA53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AA9B40(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse);
  if (!v4)
  {
    sub_244AAA5B0(v3, a1, a2, a3);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AAA5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
  sub_244A7284C(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_2573CFF28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFF28);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
  sub_244A7DAA8(&qword_2573D19F8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE78F0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
}

uint64_t sub_244AAA728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  sub_244AE3C00();
  v4 = *(int *)(a1 + 24);
  v5 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v5 = 0;
  v5[1] = 0;
  v6 = a2 + v4;
  v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

uint64_t sub_244AAA77C(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF838, &qword_2573DAC18);
}

uint64_t sub_244AAA79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AAA42C(a1, a2, a3);
}

uint64_t sub_244AAA7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AAA53C(a1, a2, a3);
}

uint64_t sub_244AAA7C4()
{
  sub_244A7DAA8(&qword_2573D1D40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7A20);
  return sub_244AE3C3C();
}

uint64_t sub_244AAA814@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF840, (uint64_t)qword_2573DAC28, a1);
}

uint64_t sub_244AAA830()
{
  sub_244A7DAA8(&qword_2573D1A18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7A58);
  return sub_244AE3D50();
}

uint64_t sub_244AAA870()
{
  sub_244A7DAA8(&qword_2573D1A18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7A58);
  return sub_244AE3D68();
}

uint64_t sub_244AAA8C0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_2573CF838 != -1)
    swift_once();
  v1 = qword_2573DAC18;
  v2 = unk_2573DAC20;
  swift_bridgeObjectRetain();
  result = sub_244AE426C();
  qword_2573DAC40 = v1;
  *(_QWORD *)algn_2573DAC48 = v2;
  return result;
}

uint64_t sub_244AAA94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAC50);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAC50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5AA0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "DEPRECATED_harness";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "DEPRECATED_model_name";
  *(_QWORD *)(v11 + 8) = 21;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "perf_metrics";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "inference_environment_info";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "speculative_decoding_metrics";
  *((_QWORD *)v17 + 1) = 28;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "inference_metrics";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AAAB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo._StorageClass(0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  v1 = v0
     + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
  v2 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo;
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = v0
     + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = v0
     + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  qword_2573D04C8 = v0;
  return result;
}

uint64_t sub_244AAAC80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C8);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E8);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  v13 = v1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
  v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = v1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo;
  v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
  v36 = v1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
  v18 = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  v37 = v1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  v20 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  swift_beginAccess();
  v22 = a1[2];
  v21 = a1[3];
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v22;
  *(_QWORD *)(v1 + 24) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v24 = a1[4];
  v23 = a1[5];
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v24;
  *(_QWORD *)(v1 + 40) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (uint64_t)a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
  swift_beginAccess();
  sub_244A7284C(v25, (uint64_t)v12, &qword_2573CF9E0);
  swift_beginAccess();
  sub_244A7D700((uint64_t)v12, v13, &qword_2573CF9E0);
  swift_endAccess();
  v26 = (uint64_t)a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo;
  swift_beginAccess();
  v27 = v38;
  sub_244A7284C(v26, v38, &qword_2573CFF30);
  swift_beginAccess();
  sub_244A7D700(v27, v15, &qword_2573CFF30);
  swift_endAccess();
  v28 = (uint64_t)a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
  swift_beginAccess();
  v29 = v39;
  sub_244A7284C(v28, v39, &qword_2573CF9E8);
  v30 = v36;
  swift_beginAccess();
  sub_244A7D700(v29, v30, &qword_2573CF9E8);
  swift_endAccess();
  v31 = (uint64_t)a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  swift_beginAccess();
  v32 = v40;
  sub_244A7284C(v31, v40, &qword_2573CF9C8);
  swift_release();
  v33 = v37;
  swift_beginAccess();
  sub_244A7D700(v32, v33, &qword_2573CF9C8);
  swift_endAccess();
  return v2;
}

uint64_t sub_244AAB0F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244A72890(v0+ OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics, &qword_2573CF9E0);
  sub_244A72890(v0+ OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo, &qword_2573CFF30);
  sub_244A72890(v0+ OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics, &qword_2573CF9E8);
  sub_244A72890(v0+ OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics, &qword_2573CF9C8);
  return swift_deallocClassInstance();
}

uint64_t sub_244AAB184()
{
  return type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo._StorageClass(0);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo._StorageClass(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D0790);
}

void sub_244AAB1A0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_244A83584(319, &qword_2573D07A0, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, &qword_2573D07A8, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    if (v1 <= 0x3F)
    {
      sub_244A83584(319, &qword_2573D07B0, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
      if (v2 <= 0x3F)
      {
        sub_244A83584(319, qword_2573D07B8, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D16F8);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D1338);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0A00);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0950);
}

uint64_t *sub_244AAB2F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3C0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v7 + v19;
    v22 = (char *)a2 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = (char *)v7 + v20;
    v24 = (char *)a2 + v20;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = a3[10];
    v26 = a3[11];
    v27 = (char *)v7 + v25;
    v28 = (char *)a2 + v25;
    v27[8] = v28[8];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v29 = (char *)v7 + v26;
    v30 = (char *)a2 + v26;
    v29[8] = v30[8];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v31 = a3[12];
    v32 = (char *)v7 + v31;
    v33 = (char *)a2 + v31;
    v32[8] = v33[8];
    *(_QWORD *)v32 = *(_QWORD *)v33;
  }
  return v7;
}

uint64_t sub_244AAB458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_244AAB4A0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = (char *)a1 + v18;
  v22 = (char *)a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = a3[10];
  v24 = a3[11];
  v25 = (char *)a1 + v23;
  v26 = (char *)a2 + v23;
  v25[8] = v26[8];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = (char *)a1 + v24;
  v28 = (char *)a2 + v24;
  v27[8] = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = a3[12];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v30[8] = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  return a1;
}

_QWORD *sub_244AAB5D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char v37;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v13;
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v17;
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = v20[8];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v21;
  v22 = a3[9];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = v24[8];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v25;
  v26 = a3[10];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v29;
  v30 = a3[11];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = v32[8];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v33;
  v34 = a3[12];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = v36[8];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v37;
  return a1;
}

_QWORD *sub_244AAB718(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = a3[10];
  v23 = a3[11];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  v24[8] = v25[8];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = (char *)a1 + v23;
  v27 = (char *)a2 + v23;
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = a3[12];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v29[8] = v30[8];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  return a1;
}

_QWORD *sub_244AAB83C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = a3[10];
  v23 = a3[11];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  v24[8] = v25[8];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = (char *)a1 + v23;
  v27 = (char *)a2 + v23;
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = a3[12];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v29[8] = v30[8];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  return a1;
}

uint64_t sub_244AAB968()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAB978()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAB988()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244AABA1C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v22[4] = v23[4];
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    v24[8] = v25[8];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v26 = a3[11];
    v27 = a3[12];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    v28[8] = v29[8];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v30 = (char *)a1 + v27;
    v31 = (char *)a2 + v27;
    v30[4] = v31[4];
    *(_DWORD *)v30 = *(_DWORD *)v31;
  }
  return a1;
}

uint64_t sub_244AABB6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  *(_DWORD *)v29 = *(_DWORD *)v30;
  return a1;
}

uint64_t sub_244AABC8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v30;
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = v34;
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_BYTE *)(v37 + 4);
  *(_DWORD *)v36 = *(_DWORD *)v37;
  *(_BYTE *)(v36 + 4) = v38;
  return a1;
}

uint64_t sub_244AABDBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  *(_DWORD *)v29 = *(_DWORD *)v30;
  return a1;
}

uint64_t sub_244AABEDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  *(_DWORD *)v29 = *(_DWORD *)v30;
  return a1;
}

uint64_t sub_244AABFFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAC00C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAC01C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.LLMPreprocessing()
{
  return &type metadata for Apple_Cloudml_Inference_Tie_ModelConfig.LLMPreprocessing;
}

uint64_t sub_244AAC0CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAC0DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0AB0);
}

uint64_t sub_244AAC100()
{
  return sub_244AD9D2C();
}

_QWORD *sub_244AAC110(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v83;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v20 = sub_244AE3C0C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v9, v10, v20);
        v21 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
        v22 = &v9[v21];
        v23 = &v10[v21];
        *(_DWORD *)v22 = *(_DWORD *)v23;
        v22[4] = v23[4];
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v16 = sub_244AE3C0C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
        v17 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
        v18 = &v9[v17];
        v19 = &v10[v17];
        *(_QWORD *)v18 = *(_QWORD *)v19;
        v18[8] = v19[8];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v24 = a3[6];
    v25 = (char *)v7 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_244AE3C0C();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    v28(v25, v26, v27);
    v29 = a3[7];
    v30 = a3[8];
    v31 = (char *)v7 + v29;
    v32 = (char *)a2 + v29;
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = (char *)v7 + v30;
    v34 = (char *)a2 + v30;
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    v35 = a3[9];
    v36 = a3[10];
    v37 = (char *)v7 + v35;
    v38 = (char *)a2 + v35;
    *(_DWORD *)v37 = *(_DWORD *)v38;
    v37[4] = v38[4];
    v39 = (char *)v7 + v36;
    v40 = (char *)a2 + v36;
    v39[4] = v40[4];
    *(_DWORD *)v39 = *(_DWORD *)v40;
    v41 = a3[11];
    v42 = a3[12];
    v43 = (char *)v7 + v41;
    v44 = (char *)a2 + v41;
    *(_DWORD *)v43 = *(_DWORD *)v44;
    v43[4] = v44[4];
    v45 = (char *)v7 + v42;
    v46 = (char *)a2 + v42;
    *(_DWORD *)v45 = *(_DWORD *)v46;
    v45[4] = v46[4];
    v47 = a3[13];
    v48 = a3[14];
    v49 = (char *)v7 + v47;
    v50 = (char *)a2 + v47;
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = v50[8];
    v51 = (char *)v7 + v48;
    v52 = (char *)a2 + v48;
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v51[8] = v52[8];
    v53 = a3[15];
    v54 = a3[16];
    v55 = (char *)v7 + v53;
    v56 = (char *)a2 + v53;
    *(_QWORD *)v55 = *(_QWORD *)v56;
    v55[8] = v56[8];
    v57 = (char *)v7 + v54;
    v58 = (char *)a2 + v54;
    *(_DWORD *)v57 = *(_DWORD *)v58;
    v57[4] = v58[4];
    v59 = a3[17];
    v60 = a3[18];
    v61 = (char *)v7 + v59;
    v62 = (char *)a2 + v59;
    *(_DWORD *)v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    *((_BYTE *)v7 + v60) = *((_BYTE *)a2 + v60);
    v63 = a3[19];
    v64 = a3[20];
    v65 = (char *)v7 + v63;
    v66 = (char *)a2 + v63;
    v65[4] = v66[4];
    v67 = (_QWORD *)((char *)v7 + v64);
    v68 = (_QWORD *)((char *)a2 + v64);
    *(_DWORD *)v65 = *(_DWORD *)v66;
    v69 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      v72 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
      v73 = *(_QWORD *)(v72 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v73 + 48))(v68, 1, v72))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v75 = swift_getEnumCaseMultiPayload();
        v83 = v73;
        if (v75 == 2)
        {
          v78 = v68[1];
          *v67 = *v68;
          v67[1] = v78;
          v77 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
        }
        else
        {
          v76 = v68[1];
          *v67 = *v68;
          v67[1] = v76;
          if (v75 == 1)
            v77 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
          else
            v77 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
        }
        v79 = *(int *)(v77 + 20);
        v80 = (char *)v67 + v79;
        v81 = (char *)v68 + v79;
        swift_bridgeObjectRetain();
        v28(v80, v81, v27);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v67, 0, 1, v72);
      }
      v28((char *)v67 + *(int *)(v69 + 20), (char *)v68 + *(int *)(v69 + 20), v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
  }
  return v7;
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1048);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0FA0);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0F10);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D0E78);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0DE8);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0D40);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0CB0);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D0C20);
}

uint64_t sub_244AAC67C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5)
    && swift_getEnumCaseMultiPayload() - 1 <= 1)
  {
    v6 = sub_244AE3C0C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  v7 = a1 + a2[6];
  v8 = sub_244AE3C0C();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v15(v7, v8);
  v9 = a1 + a2[20];
  v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
  if (!(_DWORD)result)
  {
    v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          swift_bridgeObjectRelease();
          v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
          goto LABEL_12;
        case 1:
          swift_bridgeObjectRelease();
          v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
          goto LABEL_12;
        case 0:
          swift_bridgeObjectRelease();
          v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
LABEL_12:
          v15(v9 + *(int *)(v14 + 20), v8);
          break;
      }
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v9 + *(int *)(v10 + 20), v8);
  }
  return result;
}

_QWORD *sub_244AAC82C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v81;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
      v19 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
      v20 = &v7[v19];
      v21 = &v8[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v14 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
      v16 = &v7[v15];
      v17 = &v8[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      v16[8] = v17[8];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v22 = a3[6];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_244AE3C0C();
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v26(v23, v24, v25);
  v27 = a3[7];
  v28 = a3[8];
  v29 = (char *)a1 + v27;
  v30 = (char *)a2 + v27;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  v29[4] = v30[4];
  v31 = (char *)a1 + v28;
  v32 = (char *)a2 + v28;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v31[4] = v32[4];
  v33 = a3[9];
  v34 = a3[10];
  v35 = (char *)a1 + v33;
  v36 = (char *)a2 + v33;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  v35[4] = v36[4];
  v37 = (char *)a1 + v34;
  v38 = (char *)a2 + v34;
  v37[4] = v38[4];
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v39 = a3[11];
  v40 = a3[12];
  v41 = (char *)a1 + v39;
  v42 = (char *)a2 + v39;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  v41[4] = v42[4];
  v43 = (char *)a1 + v40;
  v44 = (char *)a2 + v40;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  v43[4] = v44[4];
  v45 = a3[13];
  v46 = a3[14];
  v47 = (char *)a1 + v45;
  v48 = (char *)a2 + v45;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  v49 = (char *)a1 + v46;
  v50 = (char *)a2 + v46;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v49[8] = v50[8];
  v51 = a3[15];
  v52 = a3[16];
  v53 = (char *)a1 + v51;
  v54 = (char *)a2 + v51;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v53[8] = v54[8];
  v55 = (char *)a1 + v52;
  v56 = (char *)a2 + v52;
  *(_DWORD *)v55 = *(_DWORD *)v56;
  v55[4] = v56[4];
  v57 = a3[17];
  v58 = a3[18];
  v59 = (char *)a1 + v57;
  v60 = (char *)a2 + v57;
  *(_DWORD *)v59 = *(_DWORD *)v60;
  v59[4] = v60[4];
  *((_BYTE *)a1 + v58) = *((_BYTE *)a2 + v58);
  v61 = a3[19];
  v62 = a3[20];
  v63 = (char *)a1 + v61;
  v64 = (char *)a2 + v61;
  v63[4] = v64[4];
  v65 = (_QWORD *)((char *)a1 + v62);
  v66 = (_QWORD *)((char *)a2 + v62);
  *(_DWORD *)v63 = *(_DWORD *)v64;
  v67 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v70 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
    v71 = *(_QWORD *)(v70 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v71 + 48))(v66, 1, v70))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      v73 = swift_getEnumCaseMultiPayload();
      v81 = v71;
      if (v73 == 2)
      {
        v76 = v66[1];
        *v65 = *v66;
        v65[1] = v76;
        v75 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
      }
      else
      {
        v74 = v66[1];
        *v65 = *v66;
        v65[1] = v74;
        if (v73 == 1)
          v75 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
        else
          v75 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
      }
      v77 = *(int *)(v75 + 20);
      v78 = (char *)v65 + v77;
      v79 = (char *)v66 + v77;
      swift_bridgeObjectRetain();
      v26(v78, v79, v25);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v65, 0, 1, v70);
    }
    v26((char *)v65 + *(int *)(v67 + 20), (char *)v66 + *(int *)(v67 + 20), v25);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  return a1;
}

_QWORD *sub_244AACCC8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  size_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  int v90;
  int v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  BOOL v104;
  void (*v105)(char *, char *, uint64_t);
  int v106;
  uint64_t v107;
  char *v108;
  char *v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  void (*v123)(char *, char *, uint64_t);
  char *v124;
  char *v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v97 = sub_244AE3C0C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v7, v8, v97);
        v98 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
        v99 = &v7[v98];
        v100 = &v8[v98];
        v101 = v100[4];
        *(_DWORD *)v99 = *(_DWORD *)v100;
        v99[4] = v101;
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v22 = sub_244AE3C0C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v7, v8, v22);
        v23 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
        v24 = &v7[v23];
        v25 = &v8[v23];
        v26 = v25[8];
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v24[8] = v26;
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      v20 = *(_QWORD *)(v10 + 64);
LABEL_9:
      memcpy(v7, v8, v20);
      goto LABEL_17;
    }
    sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
LABEL_8:
    v20 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0) - 8) + 64);
    goto LABEL_9;
  }
  if (v13)
    goto LABEL_8;
  v14 = swift_getEnumCaseMultiPayload();
  if (v14 == 2)
  {
    v27 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v7, v8, v27);
    v28 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
    v29 = &v7[v28];
    v30 = &v8[v28];
    v31 = v30[4];
    *(_DWORD *)v29 = *(_DWORD *)v30;
    v29[4] = v31;
    swift_storeEnumTagMultiPayload();
  }
  else if (v14 == 1)
  {
    v15 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v7, v8, v15);
    v16 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
    v17 = &v7[v16];
    v18 = &v8[v16];
    v19 = v18[8];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v19;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v32 = a3[6];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_244AE3C0C();
  v127 = *(_QWORD *)(v35 - 8);
  v36 = *(void (**)(char *, char *, uint64_t))(v127 + 24);
  v36(v33, v34, v35);
  v37 = a3[7];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_DWORD *)v39;
  v38[4] = v39[4];
  *(_DWORD *)v38 = v40;
  v41 = a3[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  LOBYTE(v40) = v43[4];
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v42[4] = v40;
  v44 = a3[9];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  LOBYTE(v40) = v46[4];
  *(_DWORD *)v45 = *(_DWORD *)v46;
  v45[4] = v40;
  v47 = a3[10];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  LOBYTE(v40) = v49[4];
  *(_DWORD *)v48 = *(_DWORD *)v49;
  v48[4] = v40;
  v50 = a3[11];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  LOBYTE(v40) = v52[4];
  *(_DWORD *)v51 = *(_DWORD *)v52;
  v51[4] = v40;
  v53 = a3[12];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  LOBYTE(v40) = v55[4];
  *(_DWORD *)v54 = *(_DWORD *)v55;
  v54[4] = v40;
  v56 = a3[13];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  LOBYTE(v40) = v58[8];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v40;
  v59 = a3[14];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  LOBYTE(v40) = v61[8];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v60[8] = v40;
  v62 = a3[15];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  LOBYTE(v40) = v64[8];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  v63[8] = v40;
  v65 = a3[16];
  v66 = (char *)a1 + v65;
  v67 = (char *)a2 + v65;
  LOBYTE(v40) = v67[4];
  *(_DWORD *)v66 = *(_DWORD *)v67;
  v66[4] = v40;
  v68 = a3[17];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  LOBYTE(v40) = v70[4];
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v40;
  *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  v71 = a3[19];
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  v74 = *(_DWORD *)v73;
  v72[4] = v73[4];
  *(_DWORD *)v72 = v74;
  v75 = a3[20];
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  v78 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (!v81)
  {
    v126 = v36;
    if (v82)
    {
      sub_244A729C0((uint64_t)v76, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
      goto LABEL_23;
    }
    v87 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
    v88 = *(_QWORD *)(v87 - 8);
    v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
    v90 = v89(v76, 1, v87);
    v91 = v89(v77, 1, v87);
    if (v90)
    {
      if (!v91)
      {
        v92 = swift_getEnumCaseMultiPayload();
        if (v92 == 2)
        {
          *(_QWORD *)v76 = *(_QWORD *)v77;
          *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
          v93 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
        }
        else
        {
          *(_QWORD *)v76 = *(_QWORD *)v77;
          *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
          if (v92 == 1)
            v93 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
          else
            v93 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
        }
        v111 = *(int *)(v93 + 20);
        v112 = &v76[v111];
        v113 = &v77[v111];
        v114 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
        swift_bridgeObjectRetain();
        v114(v112, v113, v35);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v76, 0, 1, v87);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v91)
      {
        v104 = a1 == a2;
        v105 = v126;
        if (v104)
        {
LABEL_49:
          v105(&v76[*(int *)(v78 + 20)], &v77[*(int *)(v78 + 20)], v35);
          return a1;
        }
        sub_244A729C0((uint64_t)v76, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
        v106 = swift_getEnumCaseMultiPayload();
        if (v106 == 2)
        {
          *(_QWORD *)v76 = *(_QWORD *)v77;
          *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
          v116 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0) + 20);
          v117 = &v76[v116];
          v118 = &v77[v116];
          v119 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
          swift_bridgeObjectRetain();
          v119(v117, v118, v35);
          swift_storeEnumTagMultiPayload();
          v126(&v76[*(int *)(v78 + 20)], &v77[*(int *)(v78 + 20)], v35);
          return a1;
        }
        if (v106 == 1)
        {
          *(_QWORD *)v76 = *(_QWORD *)v77;
          *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
          v107 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0) + 20);
          v108 = &v76[v107];
          v109 = &v77[v107];
          v110 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
          swift_bridgeObjectRetain();
          v110(v108, v109, v35);
          swift_storeEnumTagMultiPayload();
          v126(&v76[*(int *)(v78 + 20)], &v77[*(int *)(v78 + 20)], v35);
          return a1;
        }
        *(_QWORD *)v76 = *(_QWORD *)v77;
        *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
        v120 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0) + 20);
        v121 = &v76[v120];
        v122 = &v77[v120];
        v123 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
        swift_bridgeObjectRetain();
        v123(v121, v122, v35);
        swift_storeEnumTagMultiPayload();
LABEL_48:
        v105 = v126;
        goto LABEL_49;
      }
      sub_244A729C0((uint64_t)v76, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    }
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_48;
  }
  if (v82)
  {
LABEL_23:
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    return a1;
  }
  v83 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v84 = *(_QWORD *)(v83 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v77, 1, v83))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(&v76[*(int *)(v78 + 20)], &v77[*(int *)(v78 + 20)], v35);
  }
  else
  {
    v94 = swift_getEnumCaseMultiPayload();
    if (v94 == 2)
    {
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
      v95 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
    }
    else
    {
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
      if (v94 == 1)
        v95 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
      else
        v95 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
    }
    v102 = *(int *)(v95 + 20);
    v124 = &v77[v102];
    v125 = &v76[v102];
    v103 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
    swift_bridgeObjectRetain();
    v103(v125, v124, v35);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v76, 0, 1, v83);
    v103(&v76[*(int *)(v78 + 20)], &v77[*(int *)(v78 + 20)], v35);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  return a1;
}

_QWORD *sub_244AAD59C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v17 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v7, v8, v17);
      v18 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
      v19 = &v7[v18];
      v20 = &v8[v18];
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v19[4] = v20[4];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      v14 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
      v15 = &v7[v14];
      v16 = &v8[v14];
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v15[8] = v16[8];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v21 = a3[6];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_244AE3C0C();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v26 = a3[7];
  v27 = a3[8];
  v28 = (char *)a1 + v26;
  v29 = (char *)a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  v28[4] = v29[4];
  v30 = (char *)a1 + v27;
  v31 = (char *)a2 + v27;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  v30[4] = v31[4];
  v32 = a3[9];
  v33 = a3[10];
  v34 = (char *)a1 + v32;
  v35 = (char *)a2 + v32;
  *(_DWORD *)v34 = *(_DWORD *)v35;
  v34[4] = v35[4];
  v36 = (char *)a1 + v33;
  v37 = (char *)a2 + v33;
  v36[4] = v37[4];
  *(_DWORD *)v36 = *(_DWORD *)v37;
  v38 = a3[11];
  v39 = a3[12];
  v40 = (char *)a1 + v38;
  v41 = (char *)a2 + v38;
  *(_DWORD *)v40 = *(_DWORD *)v41;
  v40[4] = v41[4];
  v42 = (char *)a1 + v39;
  v43 = (char *)a2 + v39;
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v42[4] = v43[4];
  v44 = a3[13];
  v45 = a3[14];
  v46 = (char *)a1 + v44;
  v47 = (char *)a2 + v44;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  v48 = (char *)a1 + v45;
  v49 = (char *)a2 + v45;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v48[8] = v49[8];
  v50 = a3[15];
  v51 = a3[16];
  v52 = (char *)a1 + v50;
  v53 = (char *)a2 + v50;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  v52[8] = v53[8];
  v54 = (char *)a1 + v51;
  v55 = (char *)a2 + v51;
  *(_DWORD *)v54 = *(_DWORD *)v55;
  v54[4] = v55[4];
  v56 = a3[17];
  v57 = a3[18];
  v58 = (char *)a1 + v56;
  v59 = (char *)a2 + v56;
  *(_DWORD *)v58 = *(_DWORD *)v59;
  v58[4] = v59[4];
  *((_BYTE *)a1 + v57) = *((_BYTE *)a2 + v57);
  v60 = a3[19];
  v61 = a3[20];
  v62 = (char *)a1 + v60;
  v63 = (char *)a2 + v60;
  v62[4] = v63[4];
  v64 = (_OWORD *)((char *)a1 + v61);
  v65 = (_OWORD *)((char *)a2 + v61);
  *(_DWORD *)v62 = *(_DWORD *)v63;
  v66 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    v69 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v70 + 48))(v65, 1, v69))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      v72 = swift_getEnumCaseMultiPayload();
      if (v72 == 2)
      {
        *v64 = *v65;
        v73 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
      }
      else
      {
        *v64 = *v65;
        if (v72 == 1)
          v73 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
        else
          v73 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
      }
      v25((char *)v64 + *(int *)(v73 + 20), (char *)v65 + *(int *)(v73 + 20), v24);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v64, 0, 1, v69);
    }
    v25((char *)v64 + *(int *)(v66 + 20), (char *)v65 + *(int *)(v66 + 20), v24);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  return a1;
}

_QWORD *sub_244AADA0C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  size_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  int v86;
  int v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void (*v97)(char *, char *, uint64_t);
  BOOL v98;
  void (*v99)(char *, char *, uint64_t);
  int v100;
  uint64_t v101;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v93 = sub_244AE3C0C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v7, v8, v93);
        v94 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
        v95 = &v7[v94];
        v96 = &v8[v94];
        *(_DWORD *)v95 = *(_DWORD *)v96;
        v95[4] = v96[4];
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v21 = sub_244AE3C0C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v7, v8, v21);
        v22 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
        v23 = &v7[v22];
        v24 = &v8[v22];
        *(_QWORD *)v23 = *(_QWORD *)v24;
        v23[8] = v24[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      v19 = *(_QWORD *)(v10 + 64);
LABEL_9:
      memcpy(v7, v8, v19);
      goto LABEL_17;
    }
    sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
LABEL_8:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0) - 8) + 64);
    goto LABEL_9;
  }
  if (v13)
    goto LABEL_8;
  v14 = swift_getEnumCaseMultiPayload();
  if (v14 == 2)
  {
    v25 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v7, v8, v25);
    v26 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    swift_storeEnumTagMultiPayload();
  }
  else if (v14 == 1)
  {
    v15 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v7, v8, v15);
    v16 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
    v17 = &v7[v16];
    v18 = &v8[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v29 = a3[6];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_244AE3C0C();
  v105 = *(_QWORD *)(v32 - 8);
  v33 = *(void (**)(char *, char *, uint64_t))(v105 + 40);
  v33(v30, v31, v32);
  v34 = a3[7];
  v35 = a3[8];
  v36 = (char *)a1 + v34;
  v37 = (char *)a2 + v34;
  *(_DWORD *)v36 = *(_DWORD *)v37;
  v36[4] = v37[4];
  v38 = (char *)a1 + v35;
  v39 = (char *)a2 + v35;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  v38[4] = v39[4];
  v40 = a3[9];
  v41 = a3[10];
  v42 = (char *)a1 + v40;
  v43 = (char *)a2 + v40;
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v42[4] = v43[4];
  v44 = (char *)a1 + v41;
  v45 = (char *)a2 + v41;
  v44[4] = v45[4];
  *(_DWORD *)v44 = *(_DWORD *)v45;
  v46 = a3[11];
  v47 = a3[12];
  v48 = (char *)a1 + v46;
  v49 = (char *)a2 + v46;
  *(_DWORD *)v48 = *(_DWORD *)v49;
  v48[4] = v49[4];
  v50 = (char *)a1 + v47;
  v51 = (char *)a2 + v47;
  *(_DWORD *)v50 = *(_DWORD *)v51;
  v50[4] = v51[4];
  v52 = a3[13];
  v53 = a3[14];
  v54 = (char *)a1 + v52;
  v55 = (char *)a2 + v52;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v54[8] = v55[8];
  v56 = (char *)a1 + v53;
  v57 = (char *)a2 + v53;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  v56[8] = v57[8];
  v58 = a3[15];
  v59 = a3[16];
  v60 = (char *)a1 + v58;
  v61 = (char *)a2 + v58;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v60[8] = v61[8];
  v62 = (char *)a1 + v59;
  v63 = (char *)a2 + v59;
  *(_DWORD *)v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v64 = a3[17];
  v65 = a3[18];
  v66 = (char *)a1 + v64;
  v67 = (char *)a2 + v64;
  *(_DWORD *)v66 = *(_DWORD *)v67;
  v66[4] = v67[4];
  *((_BYTE *)a1 + v65) = *((_BYTE *)a2 + v65);
  v68 = a3[19];
  v69 = a3[20];
  v70 = (char *)a1 + v68;
  v71 = (char *)a2 + v68;
  v70[4] = v71[4];
  v72 = (char *)a1 + v69;
  v73 = (char *)a2 + v69;
  *(_DWORD *)v70 = *(_DWORD *)v71;
  v74 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
  v77 = v76(v72, 1, v74);
  v78 = v76(v73, 1, v74);
  if (!v77)
  {
    v104 = v33;
    if (v78)
    {
      sub_244A729C0((uint64_t)v72, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
      goto LABEL_23;
    }
    v83 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
    v84 = *(_QWORD *)(v83 - 8);
    v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
    v86 = v85(v72, 1, v83);
    v87 = v85(v73, 1, v83);
    if (v86)
    {
      if (!v87)
      {
        v88 = swift_getEnumCaseMultiPayload();
        if (v88 == 2)
        {
          *(_OWORD *)v72 = *(_OWORD *)v73;
          v89 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
        }
        else
        {
          *(_OWORD *)v72 = *(_OWORD *)v73;
          if (v88 == 1)
            v89 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
          else
            v89 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
        }
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v72[*(int *)(v89 + 20)], &v73[*(int *)(v89 + 20)], v32);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v72, 0, 1, v83);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v87)
      {
        v98 = a1 == a2;
        v99 = v104;
        if (!v98)
        {
          sub_244A729C0((uint64_t)v72, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
          v100 = swift_getEnumCaseMultiPayload();
          if (v100 == 2)
          {
            *(_OWORD *)v72 = *(_OWORD *)v73;
            v103 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
            (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v72[*(int *)(v103 + 20)], &v73[*(int *)(v103 + 20)], v32);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            *(_OWORD *)v72 = *(_OWORD *)v73;
            if (v100 == 1)
              v101 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
            else
              v101 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
            (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v72[*(int *)(v101 + 20)], &v73[*(int *)(v101 + 20)], v32);
            swift_storeEnumTagMultiPayload();
          }
        }
        goto LABEL_50;
      }
      sub_244A729C0((uint64_t)v72, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    }
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
LABEL_49:
    v99 = v104;
LABEL_50:
    v99(&v72[*(int *)(v74 + 20)], &v73[*(int *)(v74 + 20)], v32);
    return a1;
  }
  if (v78)
  {
LABEL_23:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    return a1;
  }
  v79 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v80 = *(_QWORD *)(v79 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v72[*(int *)(v74 + 20)], &v73[*(int *)(v74 + 20)], v32);
  }
  else
  {
    v90 = swift_getEnumCaseMultiPayload();
    if (v90 == 2)
    {
      *(_OWORD *)v72 = *(_OWORD *)v73;
      v91 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
    }
    else
    {
      *(_OWORD *)v72 = *(_OWORD *)v73;
      if (v90 == 1)
        v91 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
      else
        v91 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
    }
    v97 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
    v97(&v72[*(int *)(v91 + 20)], &v73[*(int *)(v91 + 20)], v32);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v72, 0, 1, v79);
    v97(&v72[*(int *)(v74 + 20)], &v73[*(int *)(v74 + 20)], v32);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  return a1;
}

uint64_t sub_244AAE210()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAE21C(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_244AE3C0C();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[20];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_244AAE2E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_244AAE2F4(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_244AE3C0C();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[20];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_244AAE3BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_244A83584(319, &qword_2573D0B50, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  if (v0 <= 0x3F)
  {
    sub_244AE3C0C();
    if (v1 <= 0x3F)
    {
      sub_244A83584(319, qword_2573D0B58, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_244AAE4D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAE4E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAE4F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAE508()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_244AAE518(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_244AE3C0C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_244AAE5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_244AAE5FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_244AE3C0C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_244AAE66C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_244AAE6E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_244AAE744(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_244AAE7B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_7Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_244AE3C0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_244AAE848()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_8Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_244AE3C0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_244AAE8CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244AAE940(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_244AE3C0C();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
    }
    else
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_244AE3C0C();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_244AAEAD0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
  }
  else if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
  }
  v4 = a1 + *(int *)(v3 + 20);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_244AAEB68(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
    else
      v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
  }
  v8 = *(int *)(v6 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_244AE3C0C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_244AAEC48(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      if (EnumCaseMultiPayload == 1)
        v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
      else
        v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
    }
    v6 = *(int *)(v5 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_244AE3C0C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_244AAED58(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
  }
  else
  {
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
    else
      v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
  }
  v6 = *(int *)(v5 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_244AAEE24(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
    }
    else
    {
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
      else
        v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
    }
    v6 = *(int *)(v5 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_244AAEF08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_244AAEFA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
      }
      else
      {
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        if (EnumCaseMultiPayload == 1)
          v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
        else
          v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
      }
      v15 = *(int *)(v13 + 20);
      v24 = (char *)a1 + v15;
      v16 = (char *)a2 + v15;
      v17 = sub_244AE3C0C();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v24, v16, v17);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v19 = *(int *)(a3 + 20);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t sub_244AAF154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
        goto LABEL_8;
      case 1:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
        goto LABEL_8;
      case 0:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
LABEL_8:
        v7 = a1 + *(int *)(v6 + 20);
        v8 = sub_244AE3C0C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_244AAF240(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v22;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      if (EnumCaseMultiPayload == 1)
        v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
      else
        v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
    }
    v13 = *(int *)(v11 + 20);
    v22 = (char *)a1 + v13;
    v14 = (char *)a2 + v13;
    v15 = sub_244AE3C0C();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v22, v14, v15);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v17 = *(int *)(a3 + 20);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *sub_244AAF3C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        if (EnumCaseMultiPayload == 1)
          v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
        else
          v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
      }
      v20 = *(int *)(v12 + 20);
      v34 = (char *)a1 + v20;
      v21 = (char *)a2 + v20;
      v22 = sub_244AE3C0C();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v34, v21, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_17;
    }
LABEL_8:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_17;
  }
  if (v10)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    v14 = swift_getEnumCaseMultiPayload();
    if (v14 == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v29 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_244AE3C0C();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v30, v31, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      if (v14 == 1)
        v15 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0) + 20);
      else
        v15 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_244AE3C0C();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_17:
  v24 = *(int *)(a3 + 20);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_OWORD *sub_244AAF6EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
    }
    else
    {
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
      else
        v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
    }
    v11 = *(int *)(v10 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_OWORD *sub_244AAF850(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
      }
      else
      {
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
          v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
        else
          v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
      }
      v19 = *(int *)(v12 + 20);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_17;
    }
LABEL_8:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_17;
  }
  if (v10)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    v14 = swift_getEnumCaseMultiPayload();
    if (v14 == 2)
    {
      *a1 = *a2;
      v28 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0) + 20);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *a1 = *a2;
      if (v14 == 1)
        v15 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0) + 20);
      else
        v15 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_17:
  v23 = *(int *)(a3 + 20);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_244AAFB04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAFB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_13Tm(a1, a2, a3, &qword_2573CFDF0);
}

uint64_t sub_244AAFB1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAFB28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_14Tm(a1, a2, a3, a4, &qword_2573CFDF0);
}

void sub_244AAFB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_244ADAB88(a1, a2, a3, qword_2573D0E88, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
}

uint64_t *sub_244AAFB48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
  }
  return a1;
}

uint64_t sub_244AAFBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_244AAFC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  return a1;
}

uint64_t sub_244AAFCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_244AAFD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_244AAFD90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAFDA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AAFDB0()
{
  return sub_244AD9D2C();
}

uint64_t *sub_244AAFDBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t sub_244AAFE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_244AAFEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_244AAFF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_244AAFF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_244AB0004()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB0014()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB0024()
{
  return sub_244AD9D2C();
}

uint64_t *sub_244AB0030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v13 = sub_244AE3C0C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      *(_DWORD *)v15 = *(_DWORD *)v16;
      v15[4] = v16[4];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_244AE3C0C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v10[8] = v11[8];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_244AB0168(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 1)
  {
    v3 = sub_244AE3C0C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

char *sub_244AB01B8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v12 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_244AB02C8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;

  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = v15[4];
      *(_DWORD *)v14 = *(_DWORD *)v15;
      v14[4] = v16;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = v10[8];
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v11;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *sub_244AB03F0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    v12 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_244AB0500(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
      v13 = &a1[v12];
      v14 = &a2[v12];
      *(_DWORD *)v13 = *(_DWORD *)v14;
      v13[4] = v14[4];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_244AB0628()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_244AB06CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB06DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D10D8);
}

uint64_t sub_244AB0704(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_244AB0764 + 4 * byte_244AE5B0F[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1490);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D13F0);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D15C8);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1668);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1790);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D12A8);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1218);
}

uint64_t sub_244AB1384(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_244AE3C0C();
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(v5 + 28);
      v7 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
      {
        v4(v6, v3);
        v8 = v6 + v7[5];
        v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
        v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
        if (!v10(v8, 1, v9))
        {
          v4(v8, v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v11 = v6 + v7[6];
        if (!v10(v11, 1, v9))
        {
          v4(v11, v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v12 = v6 + v7[7];
        if (!v10(v12, 1, v9))
        {
          v4(v12, v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v13 = v6 + v7[8];
        if (!v10(v13, 1, v9))
        {
          v4(v13, v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v14 = v6 + v7[10];
        v15 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v4(v14 + *(int *)(v15 + 24), v3);
          swift_bridgeObjectRelease();
        }
      }
      return swift_bridgeObjectRelease();
    case 1:
      v16 = sub_244AE3C0C();
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(a1, v16);
      v18 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
      swift_bridgeObjectRelease();
      v19 = a1 + *(int *)(v18 + 24);
      v20 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20);
      if (!(_DWORD)result)
      {
        v17(v19, v16);
        return swift_release();
      }
      return result;
    case 2:
      v21 = sub_244AE3C0C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
      type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      v22 = sub_244AE3C0C();
      v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
      v23(a1, v22);
      v24 = a1
          + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0)
                   + 20);
      v25 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v25 - 1) + 48))(v24, 1, v25);
      if ((_DWORD)result)
        return result;
      v23(v24, v22);
      v26 = v24 + v25[5];
      v27 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
      if (!v28(v26, 1, v27))
      {
        v23(v26, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v29 = v24 + v25[6];
      if (!v28(v29, 1, v27))
      {
        v23(v29, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v30 = v24 + v25[7];
      if (!v28(v30, 1, v27))
      {
        v23(v30, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v31 = v24 + v25[8];
      if (!v28(v31, 1, v27))
      {
        v23(v31, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v32 = v24 + v25[10];
      v33 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23(v32 + *(int *)(v33 + 24), v22);
      return swift_bridgeObjectRelease();
    case 4:
      v34 = sub_244AE3C0C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(a1, v34);
      type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse(0);
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

void sub_244AB1944()
{
  char *v0;

  v0 = (char *)sub_244AB1998 + 4 * byte_244AE5B1E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_244AB1998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, int *);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int *v83;
  uint64_t v84;
  unsigned int (*v85)(char *, uint64_t, int *);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void (*v97)(char *, _QWORD, uint64_t, int *);
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(char *, uint64_t, uint64_t);
  void (*v106)(uint64_t, uint64_t, uint64_t);
  char *v107;
  int *v108;
  char *v109;

  v2 = sub_244AE3C0C();
  v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v106(v0, v1, v2);
  v3 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  v4 = v3[5];
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v1 + v4);
  v7 = v6[1];
  *v5 = *v6;
  v5[1] = v7;
  v8 = v3[6];
  v9 = (_QWORD *)(v0 + v8);
  v10 = (_QWORD *)(v1 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v108 = v3;
  v12 = v3[7];
  v13 = (char *)(v0 + v12);
  v14 = (char *)(v1 + v12);
  v15 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(unsigned int (**)(char *, uint64_t, int *))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v103 = v16;
    v106((uint64_t)v13, (uint64_t)v14, v2);
    v19 = v15[5];
    v109 = v13;
    v20 = &v13[v19];
    v21 = &v14[v19];
    v22 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v23 = *(_QWORD *)(v22 - 8);
    v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v104 = v2;
    if (v105(v21, 1, v22))
    {
      v24 = v14;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v26 = (void (*)(char *, char *, uint64_t))v106;
    }
    else
    {
      v27 = v2;
      v26 = (void (*)(char *, char *, uint64_t))v106;
      v106((uint64_t)v20, (uint64_t)v21, v27);
      v28 = *(int *)(v22 + 20);
      v29 = &v20[v28];
      v30 = &v21[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = *(int *)(v22 + 24);
      v33 = &v20[v32];
      v34 = &v21[v32];
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v20, 0, 1, v22);
      v24 = v14;
    }
    v37 = v15[6];
    v38 = &v109[v37];
    v39 = &v24[v37];
    if (v105(&v24[v37], 1, v22))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v26(v38, v39, v104);
      v41 = *(int *)(v22 + 20);
      v42 = &v38[v41];
      v43 = &v39[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = *(int *)(v22 + 24);
      v46 = &v38[v45];
      v47 = &v39[v45];
      v48 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49(v38, 0, 1, v22);
      v24 = v14;
    }
    v50 = v15[7];
    v51 = &v109[v50];
    v52 = &v24[v50];
    if (v105(&v24[v50], 1, v22))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      v26(v51, v52, v104);
      v54 = *(int *)(v22 + 20);
      v55 = &v51[v54];
      v56 = &v52[v54];
      v57 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      v58 = *(int *)(v22 + 24);
      v59 = &v51[v58];
      v60 = &v52[v58];
      v61 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      v62 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(v51, 0, 1, v22);
      v24 = v14;
    }
    v63 = v15[8];
    v64 = &v109[v63];
    v65 = &v24[v63];
    if (v105(&v24[v63], 1, v22))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v26(v64, v65, v104);
      v67 = *(int *)(v22 + 20);
      v68 = &v64[v67];
      v69 = &v65[v67];
      v70 = *((_QWORD *)v69 + 1);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = v70;
      v71 = *(int *)(v22 + 24);
      v72 = &v64[v71];
      v73 = &v65[v71];
      v74 = *((_QWORD *)v73 + 1);
      *(_QWORD *)v72 = *(_QWORD *)v73;
      *((_QWORD *)v72 + 1) = v74;
      v75 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v75(v64, 0, 1, v22);
      v24 = v14;
    }
    v76 = v15[9];
    v77 = &v109[v76];
    v78 = &v24[v76];
    v79 = *((_QWORD *)v78 + 1);
    *(_QWORD *)v77 = *(_QWORD *)v78;
    *((_QWORD *)v77 + 1) = v79;
    v80 = v15[10];
    v81 = &v109[v80];
    v82 = &v24[v80];
    v83 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    v84 = *((_QWORD *)v83 - 1);
    v85 = *(unsigned int (**)(char *, uint64_t, int *))(v84 + 48);
    swift_bridgeObjectRetain();
    if (v85(v82, 1, v83))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      v87 = *((_QWORD *)v82 + 1);
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *((_QWORD *)v81 + 1) = v87;
      v88 = v83[6];
      v89 = &v81[v88];
      v107 = &v82[v88];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v106((uint64_t)v89, (uint64_t)v107, v104);
      v90 = v83[7];
      v91 = &v81[v90];
      v92 = &v82[v90];
      v93 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v91 = *(_QWORD *)v92;
      *((_QWORD *)v91 + 1) = v93;
      v94 = v83[8];
      v95 = &v81[v94];
      v96 = &v82[v94];
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_WORD *)v95 + 4) = *((_WORD *)v96 + 4);
      v97 = *(void (**)(char *, _QWORD, uint64_t, int *))(v84 + 56);
      swift_bridgeObjectRetain();
      v97(v81, 0, 1, v83);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(v109, 0, 1, v15);
  }
  v98 = v108[8];
  v99 = (_QWORD *)(v0 + v98);
  v100 = (_QWORD *)(v1 + v98);
  v101 = v100[1];
  *v99 = *v100;
  v99[1] = v101;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_244AB2510(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_244A729C0(result, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v2 = (char *)&loc_244AB257C + 4 * byte_244AE5B23[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1188);
}

void sub_244AB31FC()
{
  char *v0;

  v0 = (char *)sub_244AB3250 + 4 * byte_244AE5B28[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_244AB3250(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v67;
  int *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *v73;

  v30 = sub_244AE3C0C();
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
  v31(v28, v29, v30);
  v32 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  *(_OWORD *)(v28 + v32[5]) = *(_OWORD *)(v29 + v32[5]);
  *(_OWORD *)(v28 + v32[6]) = *(_OWORD *)(v29 + v32[6]);
  v33 = v32[7];
  v34 = (char *)(v28 + v33);
  v35 = (char *)(v29 + v33);
  v36 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v37 = *((_QWORD *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v68 = v32;
    v69 = v37;
    v31((uint64_t)v34, (uint64_t)v35, v30);
    v39 = v36[5];
    v73 = v34;
    v67 = &v34[v39];
    v40 = &v35[v39];
    v41 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v42 = *(_QWORD *)(v41 - 8);
    v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    v70 = (void (*)(char *, char *, uint64_t))v31;
    v71 = v30;
    if (v72(v40, 1, v41))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v67, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v31((uint64_t)v67, (uint64_t)v40, v30);
      *(_OWORD *)&v67[*(int *)(v41 + 20)] = *(_OWORD *)&v40[*(int *)(v41 + 20)];
      *(_OWORD *)&v67[*(int *)(v41 + 24)] = *(_OWORD *)&v40[*(int *)(v41 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v67, 0, 1, v41);
    }
    v44 = v42;
    v45 = v36[6];
    v46 = &v73[v45];
    v47 = &v35[v45];
    v32 = v68;
    if (v72(&v35[v45], 1, v41))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v70(v46, v47, v71);
      *(_OWORD *)&v46[*(int *)(v41 + 20)] = *(_OWORD *)&v47[*(int *)(v41 + 20)];
      *(_OWORD *)&v46[*(int *)(v41 + 24)] = *(_OWORD *)&v47[*(int *)(v41 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v41);
    }
    v49 = v36[7];
    v50 = &v73[v49];
    v51 = &v35[v49];
    if (v72(&v35[v49], 1, v41))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v70(v50, v51, v71);
      *(_OWORD *)&v50[*(int *)(v41 + 20)] = *(_OWORD *)&v51[*(int *)(v41 + 20)];
      *(_OWORD *)&v50[*(int *)(v41 + 24)] = *(_OWORD *)&v51[*(int *)(v41 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v50, 0, 1, v41);
    }
    v53 = v36[8];
    v54 = &v73[v53];
    v55 = &v35[v53];
    if (v72(&v35[v53], 1, v41))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v70(v54, v55, v71);
      *(_OWORD *)&v54[*(int *)(v41 + 20)] = *(_OWORD *)&v55[*(int *)(v41 + 20)];
      *(_OWORD *)&v54[*(int *)(v41 + 24)] = *(_OWORD *)&v55[*(int *)(v41 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v54, 0, 1, v41);
    }
    *(_OWORD *)&v73[v36[9]] = *(_OWORD *)&v35[v36[9]];
    v57 = v36[10];
    v58 = &v73[v57];
    v59 = &v35[v57];
    v60 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    v61 = *((_QWORD *)v60 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v61 + 48))(v59, 1, v60))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
      v70(&v58[v60[6]], &v59[v60[6]], v71);
      *(_OWORD *)&v58[v60[7]] = *(_OWORD *)&v59[v60[7]];
      v63 = v60[8];
      v64 = &v58[v63];
      v65 = &v59[v63];
      *((_WORD *)v64 + 4) = *((_WORD *)v65 + 4);
      *(_QWORD *)v64 = *(_QWORD *)v65;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v61 + 56))(v58, 0, 1, v60);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v69 + 56))(v73, 0, 1, v36);
  }
  *(_OWORD *)(v28 + v32[8]) = *(_OWORD *)(v29 + v32[8]);
  swift_storeEnumTagMultiPayload();
  return v28;
}

uint64_t sub_244AB3C04(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_244A729C0(result, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v2 = (char *)&loc_244AB3C70 + 4 * byte_244AE5B2D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_244AB4624()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_244AB4710()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB4720()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB4730()
{
  return sub_244AD9D2C();
}

uint64_t *sub_244AB473C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, int *);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void (*v91)(char *, _QWORD, uint64_t, int *);
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  char *v95;
  void (*v96)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v94 = v13;
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = v12[5];
      v17 = &v10[v16];
      v18 = &v11[v16];
      v19 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v20 = *(_QWORD *)(v19 - 8);
      v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      v96 = (void (*)(char *, char *, uint64_t))v8;
      if (v93(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v17, (uint64_t *)v18, v7);
        v22 = *(int *)(v19 + 20);
        v23 = &v17[v22];
        v24 = &v18[v22];
        v25 = *((_QWORD *)v24 + 1);
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = v25;
        v26 = *(int *)(v19 + 24);
        v27 = &v17[v26];
        v28 = &v18[v26];
        v29 = *((_QWORD *)v28 + 1);
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *((_QWORD *)v27 + 1) = v29;
        v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30(v17, 0, 1, v19);
      }
      v31 = v12[6];
      v32 = &v10[v31];
      v33 = &v11[v31];
      if (v93(&v11[v31], 1, v19))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v96(v32, v33, v7);
        v35 = *(int *)(v19 + 20);
        v36 = &v32[v35];
        v37 = &v33[v35];
        v38 = *((_QWORD *)v37 + 1);
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = v38;
        v39 = *(int *)(v19 + 24);
        v40 = &v32[v39];
        v41 = &v33[v39];
        v42 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v42;
        v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v32, 0, 1, v19);
      }
      v44 = v12[7];
      v45 = &v10[v44];
      v46 = &v11[v44];
      if (v93(&v11[v44], 1, v19))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v96(v45, v46, v7);
        v48 = *(int *)(v19 + 20);
        v49 = &v45[v48];
        v50 = &v46[v48];
        v51 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v51;
        v52 = *(int *)(v19 + 24);
        v53 = &v45[v52];
        v54 = &v46[v52];
        v55 = *((_QWORD *)v54 + 1);
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = v55;
        v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v56(v45, 0, 1, v19);
      }
      v57 = v12[8];
      v58 = &v10[v57];
      v59 = &v11[v57];
      if (v93(&v11[v57], 1, v19))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        v96(v58, v59, v7);
        v61 = *(int *)(v19 + 20);
        v62 = &v58[v61];
        v63 = &v59[v61];
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = v64;
        v65 = *(int *)(v19 + 24);
        v66 = &v58[v65];
        v67 = &v59[v65];
        v68 = *((_QWORD *)v67 + 1);
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_QWORD *)v66 + 1) = v68;
        v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v69(v58, 0, 1, v19);
      }
      v70 = v12[9];
      v71 = &v10[v70];
      v72 = &v11[v70];
      v73 = *((_QWORD *)v72 + 1);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = v73;
      v74 = v12[10];
      v75 = &v10[v74];
      v76 = &v11[v74];
      v77 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
      v78 = *((_QWORD *)v77 - 1);
      v79 = *(unsigned int (**)(char *, uint64_t, int *))(v78 + 48);
      swift_bridgeObjectRetain();
      if (v79(v76, 1, v77))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        v81 = *((_QWORD *)v76 + 1);
        *(_QWORD *)v75 = *(_QWORD *)v76;
        *((_QWORD *)v75 + 1) = v81;
        v82 = v77[6];
        v95 = &v75[v82];
        v83 = &v76[v82];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v96(v95, v83, v7);
        v84 = v77[7];
        v85 = &v75[v84];
        v86 = &v76[v84];
        v87 = *((_QWORD *)v86 + 1);
        *(_QWORD *)v85 = *(_QWORD *)v86;
        *((_QWORD *)v85 + 1) = v87;
        v88 = v77[8];
        v89 = &v75[v88];
        v90 = &v76[v88];
        *(_QWORD *)v89 = *(_QWORD *)v90;
        *((_WORD *)v89 + 4) = *((_WORD *)v90 + 4);
        v91 = *(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56);
        swift_bridgeObjectRetain();
        v91(v75, 0, 1, v77);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v94 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_244AB4C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_244AE3C0C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    v9 = v6 + v7[5];
    v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    if (!v11(v9, 1, v10))
    {
      v5(v9, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v12 = v6 + v7[6];
    if (!v11(v12, 1, v10))
    {
      v5(v12, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v13 = v6 + v7[7];
    if (!v11(v13, 1, v10))
    {
      v5(v13, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v14 = v6 + v7[8];
    if (!v11(v14, 1, v10))
    {
      v5(v14, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v15 = v6 + v7[10];
    v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5(v15 + *(int *)(v16 + 24), v4);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_244AB4E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int *v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, int *);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void (*v89)(char *, _QWORD, uint64_t, int *);
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  char *v93;
  void (*v94)(char *, char *, uint64_t);

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v92 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v18 = *(_QWORD *)(v17 - 8);
    v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    v94 = (void (*)(char *, char *, uint64_t))v7;
    if (v91(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      v20 = *(int *)(v17 + 20);
      v21 = &v15[v20];
      v22 = &v16[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = *(int *)(v17 + 24);
      v25 = &v15[v24];
      v26 = &v16[v24];
      v27 = *((_QWORD *)v26 + 1);
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28(v15, 0, 1, v17);
    }
    v29 = v11[6];
    v30 = &v9[v29];
    v31 = &v10[v29];
    if (v91(&v10[v29], 1, v17))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v94(v30, v31, v6);
      v33 = *(int *)(v17 + 20);
      v34 = &v30[v33];
      v35 = &v31[v33];
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v37 = *(int *)(v17 + 24);
      v38 = &v30[v37];
      v39 = &v31[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41(v30, 0, 1, v17);
    }
    v42 = v11[7];
    v43 = &v9[v42];
    v44 = &v10[v42];
    if (v91(&v10[v42], 1, v17))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v94(v43, v44, v6);
      v46 = *(int *)(v17 + 20);
      v47 = &v43[v46];
      v48 = &v44[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = *(int *)(v17 + 24);
      v51 = &v43[v50];
      v52 = &v44[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v43, 0, 1, v17);
    }
    v55 = v11[8];
    v56 = &v9[v55];
    v57 = &v10[v55];
    if (v91(&v10[v55], 1, v17))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v94(v56, v57, v6);
      v59 = *(int *)(v17 + 20);
      v60 = &v56[v59];
      v61 = &v57[v59];
      v62 = *((_QWORD *)v61 + 1);
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *((_QWORD *)v60 + 1) = v62;
      v63 = *(int *)(v17 + 24);
      v64 = &v56[v63];
      v65 = &v57[v63];
      v66 = *((_QWORD *)v65 + 1);
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *((_QWORD *)v64 + 1) = v66;
      v67 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67(v56, 0, 1, v17);
    }
    v68 = v11[9];
    v69 = &v9[v68];
    v70 = &v10[v68];
    v71 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_QWORD *)v69 + 1) = v71;
    v72 = v11[10];
    v73 = &v9[v72];
    v74 = &v10[v72];
    v75 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    v76 = *((_QWORD *)v75 - 1);
    v77 = *(unsigned int (**)(char *, uint64_t, int *))(v76 + 48);
    swift_bridgeObjectRetain();
    if (v77(v74, 1, v75))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      v79 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v79;
      v80 = v75[6];
      v93 = &v73[v80];
      v81 = &v74[v80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v94(v93, v81, v6);
      v82 = v75[7];
      v83 = &v73[v82];
      v84 = &v74[v82];
      v85 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v85;
      v86 = v75[8];
      v87 = &v73[v86];
      v88 = &v74[v86];
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_WORD *)v87 + 4) = *((_WORD *)v88 + 4);
      v89 = *(void (**)(char *, _QWORD, uint64_t, int *))(v76 + 56);
      swift_bridgeObjectRetain();
      v89(v73, 0, 1, v75);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v92 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_244AB5304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void (*v72)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  void (*v83)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  unsigned int (*v92)(char *, uint64_t, int *);
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  __int16 v103;
  void (*v104)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  int v110;
  int v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int v124;
  int v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  void (*v133)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  int v138;
  int v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  void (*v146)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  int *v154;
  uint64_t v155;
  uint64_t (*v156)(char *, uint64_t, int *);
  int v157;
  int v158;
  uint64_t v159;
  char *v160;
  char *v161;
  void (*v162)(char *, char *, uint64_t);
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  __int16 v169;
  void (*v170)(char *, _QWORD, uint64_t, int *);
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  unsigned int (*v202)(char *, uint64_t, uint64_t);
  void (*v203)(char *, char *, uint64_t);
  void (*v204)(char *, char *, uint64_t);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_244A729C0(v10, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      goto LABEL_7;
    }
    v206 = a1;
    v208 = v6;
    v203 = (void (*)(char *, char *, uint64_t))v8;
    v8(v10, (uint64_t)v11, v6);
    v28 = v12[5];
    v29 = (char *)(v10 + v28);
    v30 = &v11[v28];
    v31 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v34 = v33(v29, 1, v31);
    v35 = v33(v30, 1, v31);
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v208);
        v36 = *(int *)(v31 + 20);
        v37 = &v29[v36];
        v38 = &v30[v36];
        *(_QWORD *)v37 = *(_QWORD *)v38;
        *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
        v39 = *(int *)(v31 + 24);
        v40 = &v29[v39];
        v41 = &v30[v39];
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
        v42 = v32;
        v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v29, 0, 1, v31);
        v32 = v42;
        goto LABEL_30;
      }
    }
    else
    {
      if (!v35)
      {
        v203(v29, v30, v208);
        v171 = *(int *)(v31 + 20);
        v172 = &v29[v171];
        v173 = &v30[v171];
        *(_QWORD *)v172 = *(_QWORD *)v173;
        *((_QWORD *)v172 + 1) = *((_QWORD *)v173 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v174 = *(int *)(v31 + 24);
        v175 = &v29[v174];
        v176 = &v30[v174];
        *(_QWORD *)v175 = *(_QWORD *)v176;
        *((_QWORD *)v175 + 1) = *((_QWORD *)v176 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_30:
        v107 = v12[6];
        v108 = (char *)(v10 + v107);
        v109 = &v11[v107];
        v110 = v33((char *)(v10 + v107), 1, v31);
        v111 = v33(v109, 1, v31);
        if (v110)
        {
          if (!v111)
          {
            (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v108, v109, v208);
            v112 = *(int *)(v31 + 20);
            v113 = &v108[v112];
            v114 = &v109[v112];
            *(_QWORD *)v113 = *(_QWORD *)v114;
            *((_QWORD *)v113 + 1) = *((_QWORD *)v114 + 1);
            v115 = *(int *)(v31 + 24);
            v116 = &v108[v115];
            v117 = &v109[v115];
            *(_QWORD *)v116 = *(_QWORD *)v117;
            *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
            v118 = v32;
            v119 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v119(v108, 0, 1, v31);
            v32 = v118;
            goto LABEL_36;
          }
        }
        else
        {
          if (!v111)
          {
            v203(v108, v109, v208);
            v177 = *(int *)(v31 + 20);
            v178 = &v108[v177];
            v179 = &v109[v177];
            *(_QWORD *)v178 = *(_QWORD *)v179;
            *((_QWORD *)v178 + 1) = *((_QWORD *)v179 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v180 = *(int *)(v31 + 24);
            v181 = &v108[v180];
            v182 = &v109[v180];
            *(_QWORD *)v181 = *(_QWORD *)v182;
            *((_QWORD *)v181 + 1) = *((_QWORD *)v182 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_36:
            v121 = v12[7];
            v122 = (char *)(v10 + v121);
            v123 = &v11[v121];
            v124 = v33((char *)(v10 + v121), 1, v31);
            v125 = v33(v123, 1, v31);
            if (v124)
            {
              if (!v125)
              {
                (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v122, v123, v208);
                v126 = *(int *)(v31 + 20);
                v127 = &v122[v126];
                v128 = &v123[v126];
                *(_QWORD *)v127 = *(_QWORD *)v128;
                *((_QWORD *)v127 + 1) = *((_QWORD *)v128 + 1);
                v129 = *(int *)(v31 + 24);
                v130 = &v122[v129];
                v131 = &v123[v129];
                *(_QWORD *)v130 = *(_QWORD *)v131;
                *((_QWORD *)v130 + 1) = *((_QWORD *)v131 + 1);
                v132 = v32;
                v133 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v133(v122, 0, 1, v31);
                v32 = v132;
                goto LABEL_42;
              }
            }
            else
            {
              if (!v125)
              {
                v203(v122, v123, v208);
                v183 = *(int *)(v31 + 20);
                v184 = &v122[v183];
                v185 = &v123[v183];
                *(_QWORD *)v184 = *(_QWORD *)v185;
                *((_QWORD *)v184 + 1) = *((_QWORD *)v185 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v186 = *(int *)(v31 + 24);
                v187 = &v122[v186];
                v188 = &v123[v186];
                *(_QWORD *)v187 = *(_QWORD *)v188;
                *((_QWORD *)v187 + 1) = *((_QWORD *)v188 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_42:
                v135 = v12[8];
                v136 = (char *)(v10 + v135);
                v137 = &v11[v135];
                v138 = v33((char *)(v10 + v135), 1, v31);
                v139 = v33(v137, 1, v31);
                if (v138)
                {
                  if (!v139)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v136, v137, v208);
                    v140 = *(int *)(v31 + 20);
                    v141 = &v136[v140];
                    v142 = &v137[v140];
                    *(_QWORD *)v141 = *(_QWORD *)v142;
                    *((_QWORD *)v141 + 1) = *((_QWORD *)v142 + 1);
                    v143 = *(int *)(v31 + 24);
                    v144 = &v136[v143];
                    v145 = &v137[v143];
                    *(_QWORD *)v144 = *(_QWORD *)v145;
                    *((_QWORD *)v144 + 1) = *((_QWORD *)v145 + 1);
                    v146 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v146(v136, 0, 1, v31);
LABEL_48:
                    a1 = v206;
                    v148 = v12[9];
                    v149 = (_QWORD *)(v10 + v148);
                    v150 = &v11[v148];
                    *v149 = *(_QWORD *)v150;
                    v149[1] = *((_QWORD *)v150 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v151 = v12[10];
                    v152 = (char *)(v10 + v151);
                    v153 = &v11[v151];
                    v154 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
                    v155 = *((_QWORD *)v154 - 1);
                    v156 = *(uint64_t (**)(char *, uint64_t, int *))(v155 + 48);
                    v157 = v156(v152, 1, v154);
                    v158 = v156(v153, 1, v154);
                    if (v157)
                    {
                      if (!v158)
                      {
                        *(_QWORD *)v152 = *(_QWORD *)v153;
                        *((_QWORD *)v152 + 1) = *((_QWORD *)v153 + 1);
                        v159 = v154[6];
                        v160 = &v152[v159];
                        v161 = &v153[v159];
                        v162 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        v162(v160, v161, v208);
                        v163 = v154[7];
                        v164 = &v152[v163];
                        v165 = &v153[v163];
                        *(_QWORD *)v164 = *(_QWORD *)v165;
                        *((_QWORD *)v164 + 1) = *((_QWORD *)v165 + 1);
                        v166 = v154[8];
                        v167 = &v152[v166];
                        v168 = &v153[v166];
                        v169 = *((_WORD *)v168 + 4);
                        *(_QWORD *)v167 = *(_QWORD *)v168;
                        *((_WORD *)v167 + 4) = v169;
                        v170 = *(void (**)(char *, _QWORD, uint64_t, int *))(v155 + 56);
                        swift_bridgeObjectRetain();
                        v170(v152, 0, 1, v154);
                        return a1;
                      }
                    }
                    else
                    {
                      if (!v158)
                      {
                        *(_QWORD *)v152 = *(_QWORD *)v153;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        *((_QWORD *)v152 + 1) = *((_QWORD *)v153 + 1);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v203(&v152[v154[6]], &v153[v154[6]], v208);
                        v195 = v154[7];
                        v196 = &v152[v195];
                        v197 = &v153[v195];
                        *(_QWORD *)v196 = *(_QWORD *)v197;
                        *((_QWORD *)v196 + 1) = *((_QWORD *)v197 + 1);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v198 = v154[8];
                        v199 = &v152[v198];
                        v200 = &v153[v198];
                        v201 = *(_QWORD *)v200;
                        *((_WORD *)v199 + 4) = *((_WORD *)v200 + 4);
                        *(_QWORD *)v199 = v201;
                        return a1;
                      }
                      sub_244A729C0((uint64_t)v152, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
                    }
                    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998) - 8)
                                    + 64);
                    v26 = v152;
                    v27 = v153;
                    goto LABEL_8;
                  }
                }
                else
                {
                  if (!v139)
                  {
                    v203(v136, v137, v208);
                    v189 = *(int *)(v31 + 20);
                    v190 = &v136[v189];
                    v191 = &v137[v189];
                    *(_QWORD *)v190 = *(_QWORD *)v191;
                    *((_QWORD *)v190 + 1) = *((_QWORD *)v191 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v192 = *(int *)(v31 + 24);
                    v193 = &v136[v192];
                    v194 = &v137[v192];
                    *(_QWORD *)v193 = *(_QWORD *)v194;
                    *((_QWORD *)v193 + 1) = *((_QWORD *)v194 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    goto LABEL_48;
                  }
                  sub_244A729C0((uint64_t)v136, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
                }
                v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
                memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
                goto LABEL_48;
              }
              sub_244A729C0((uint64_t)v122, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
            }
            v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
            memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
            goto LABEL_42;
          }
          sub_244A729C0((uint64_t)v108, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        goto LABEL_36;
      }
      sub_244A729C0((uint64_t)v29, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    goto LABEL_30;
  }
  if (v16)
  {
LABEL_7:
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30) - 8) + 64);
    v26 = (void *)v10;
    v27 = v11;
LABEL_8:
    memcpy(v26, v27, v25);
    return a1;
  }
  v205 = a1;
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v17(v10, v11, v6);
  v18 = v12[5];
  v19 = v6;
  v20 = (char *)(v10 + v18);
  v21 = &v11[v18];
  v22 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v23 = *(_QWORD *)(v22 - 8);
  v202 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v207 = v19;
  v204 = (void (*)(char *, char *, uint64_t))v17;
  if (v202(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v20, v21, v19);
    v44 = *(int *)(v22 + 20);
    v45 = &v20[v44];
    v46 = &v21[v44];
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
    v47 = *(int *)(v22 + 24);
    v48 = &v20[v47];
    v49 = &v21[v47];
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
    v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50(v20, 0, 1, v22);
  }
  v51 = v12[6];
  v52 = (char *)(v10 + v51);
  v53 = &v11[v51];
  if (v202(&v11[v51], 1, v22))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v52, v53, v207);
    v55 = *(int *)(v22 + 20);
    v56 = &v52[v55];
    v57 = &v53[v55];
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
    v58 = *(int *)(v22 + 24);
    v59 = &v52[v58];
    v60 = &v53[v58];
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
    v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61(v52, 0, 1, v22);
  }
  v62 = v12[7];
  v63 = (char *)(v10 + v62);
  v64 = &v11[v62];
  if (v202(&v11[v62], 1, v22))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v63, v64, v207);
    v66 = *(int *)(v22 + 20);
    v67 = &v63[v66];
    v68 = &v64[v66];
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = *((_QWORD *)v68 + 1);
    v69 = *(int *)(v22 + 24);
    v70 = &v63[v69];
    v71 = &v64[v69];
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
    v72 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72(v63, 0, 1, v22);
  }
  v73 = v12[8];
  v74 = (char *)(v10 + v73);
  v75 = &v11[v73];
  if (v202(&v11[v73], 1, v22))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v74, v75, v207);
    v77 = *(int *)(v22 + 20);
    v78 = &v74[v77];
    v79 = &v75[v77];
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
    v80 = *(int *)(v22 + 24);
    v81 = &v74[v80];
    v82 = &v75[v80];
    *(_QWORD *)v81 = *(_QWORD *)v82;
    *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);
    v83 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v83(v74, 0, 1, v22);
  }
  v84 = v12[9];
  v85 = (_QWORD *)(v10 + v84);
  v86 = &v11[v84];
  *v85 = *(_QWORD *)v86;
  v85[1] = *((_QWORD *)v86 + 1);
  v87 = v12[10];
  v88 = (_QWORD *)(v10 + v87);
  v89 = &v11[v87];
  v90 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v91 = *((_QWORD *)v90 - 1);
  v92 = *(unsigned int (**)(char *, uint64_t, int *))(v91 + 48);
  swift_bridgeObjectRetain();
  if (v92(v89, 1, v90))
  {
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    *v88 = *(_QWORD *)v89;
    v88[1] = *((_QWORD *)v89 + 1);
    v94 = v90[6];
    v95 = (char *)v88 + v94;
    v96 = &v89[v94];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v204(v95, v96, v207);
    v97 = v90[7];
    v98 = (_QWORD *)((char *)v88 + v97);
    v99 = &v89[v97];
    *v98 = *(_QWORD *)v99;
    v98[1] = *((_QWORD *)v99 + 1);
    v100 = v90[8];
    v101 = (char *)v88 + v100;
    v102 = &v89[v100];
    v103 = *((_WORD *)v102 + 4);
    *(_QWORD *)v101 = *(_QWORD *)v102;
    *((_WORD *)v101 + 4) = v103;
    v104 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v91 + 56);
    swift_bridgeObjectRetain();
    v104(v88, 0, 1, v90);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  return v205;
}

uint64_t sub_244AB5FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v44 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v18 = *(_QWORD *)(v17 - 8);
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    v45 = v18;
    if (v43(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      *(_OWORD *)&v15[*(int *)(v17 + 20)] = *(_OWORD *)&v16[*(int *)(v17 + 20)];
      *(_OWORD *)&v15[*(int *)(v17 + 24)] = *(_OWORD *)&v16[*(int *)(v17 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = v11[6];
    v21 = &v9[v20];
    v22 = &v10[v20];
    if (v43(&v10[v20], 1, v17))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = (void (*)(char *, char *, uint64_t))v7;
    }
    else
    {
      v24 = (void (*)(char *, char *, uint64_t))v7;
      v7((uint64_t)v21, (uint64_t)v22, v6);
      *(_OWORD *)&v21[*(int *)(v17 + 20)] = *(_OWORD *)&v22[*(int *)(v17 + 20)];
      *(_OWORD *)&v21[*(int *)(v17 + 24)] = *(_OWORD *)&v22[*(int *)(v17 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v21, 0, 1, v17);
    }
    v25 = v11[7];
    v26 = &v9[v25];
    v27 = &v10[v25];
    if (v43(&v10[v25], 1, v17))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v24(v26, v27, v6);
      *(_OWORD *)&v26[*(int *)(v17 + 20)] = *(_OWORD *)&v27[*(int *)(v17 + 20)];
      *(_OWORD *)&v26[*(int *)(v17 + 24)] = *(_OWORD *)&v27[*(int *)(v17 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v26, 0, 1, v17);
    }
    v29 = v11[8];
    v30 = &v9[v29];
    v31 = &v10[v29];
    if (v43(&v10[v29], 1, v17))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v24(v30, v31, v6);
      *(_OWORD *)&v30[*(int *)(v17 + 20)] = *(_OWORD *)&v31[*(int *)(v17 + 20)];
      *(_OWORD *)&v30[*(int *)(v17 + 24)] = *(_OWORD *)&v31[*(int *)(v17 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v30, 0, 1, v17);
    }
    *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
    v33 = v11[10];
    v34 = &v9[v33];
    v35 = &v10[v33];
    v36 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    v37 = *((_QWORD *)v36 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v24(&v34[v36[6]], &v35[v36[6]], v6);
      *(_OWORD *)&v34[v36[7]] = *(_OWORD *)&v35[v36[7]];
      v39 = v36[8];
      v40 = &v34[v39];
      v41 = &v35[v39];
      *((_WORD *)v40 + 4) = *((_WORD *)v41 + 4);
      *(_QWORD *)v40 = *(_QWORD *)v41;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v44 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_244AB63A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  int *v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, int *);
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  void (*v139)(char *, char *, uint64_t);
  unsigned int (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_244A729C0(v10, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      goto LABEL_7;
    }
    v143 = a1;
    v139 = (void (*)(char *, char *, uint64_t))v8;
    v8(v10, (uint64_t)v11, v6);
    v27 = v12[5];
    v28 = (char *)(v10 + v27);
    v29 = &v11[v27];
    v30 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v141 = *(_QWORD *)(v30 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
    v32 = v31(v28, 1, v30);
    v33 = v31(v29, 1, v30);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v28, v29, v6);
        *(_OWORD *)&v28[*(int *)(v30 + 20)] = *(_OWORD *)&v29[*(int *)(v30 + 20)];
        *(_OWORD *)&v28[*(int *)(v30 + 24)] = *(_OWORD *)&v29[*(int *)(v30 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v28, 0, 1, v30);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v33)
      {
        v139(v28, v29, v6);
        v91 = *(int *)(v30 + 20);
        v92 = &v28[v91];
        v93 = &v29[v91];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        *(_QWORD *)v92 = v95;
        *((_QWORD *)v92 + 1) = v94;
        swift_bridgeObjectRelease();
        v96 = *(int *)(v30 + 24);
        v97 = &v28[v96];
        v98 = &v29[v96];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        *(_QWORD *)v97 = v100;
        *((_QWORD *)v97 + 1) = v99;
        swift_bridgeObjectRelease();
LABEL_30:
        v57 = v12[6];
        v58 = (char *)(v10 + v57);
        v59 = &v11[v57];
        v60 = v31((char *)(v10 + v57), 1, v30);
        v61 = v31(v59, 1, v30);
        if (v60)
        {
          if (!v61)
          {
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v58, v59, v6);
            *(_OWORD *)&v58[*(int *)(v30 + 20)] = *(_OWORD *)&v59[*(int *)(v30 + 20)];
            *(_OWORD *)&v58[*(int *)(v30 + 24)] = *(_OWORD *)&v59[*(int *)(v30 + 24)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v58, 0, 1, v30);
            goto LABEL_36;
          }
        }
        else
        {
          if (!v61)
          {
            v139(v58, v59, v6);
            v101 = *(int *)(v30 + 20);
            v102 = &v58[v101];
            v103 = &v59[v101];
            v105 = *(_QWORD *)v103;
            v104 = *((_QWORD *)v103 + 1);
            *(_QWORD *)v102 = v105;
            *((_QWORD *)v102 + 1) = v104;
            swift_bridgeObjectRelease();
            v106 = *(int *)(v30 + 24);
            v107 = &v58[v106];
            v108 = &v59[v106];
            v110 = *(_QWORD *)v108;
            v109 = *((_QWORD *)v108 + 1);
            *(_QWORD *)v107 = v110;
            *((_QWORD *)v107 + 1) = v109;
            swift_bridgeObjectRelease();
LABEL_36:
            v63 = v12[7];
            v64 = (char *)(v10 + v63);
            v65 = &v11[v63];
            v66 = v31((char *)(v10 + v63), 1, v30);
            v67 = v31(v65, 1, v30);
            if (v66)
            {
              if (!v67)
              {
                (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v64, v65, v6);
                *(_OWORD *)&v64[*(int *)(v30 + 20)] = *(_OWORD *)&v65[*(int *)(v30 + 20)];
                *(_OWORD *)&v64[*(int *)(v30 + 24)] = *(_OWORD *)&v65[*(int *)(v30 + 24)];
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v64, 0, 1, v30);
                goto LABEL_42;
              }
            }
            else
            {
              if (!v67)
              {
                v139(v64, v65, v6);
                v111 = *(int *)(v30 + 20);
                v112 = &v64[v111];
                v113 = &v65[v111];
                v115 = *(_QWORD *)v113;
                v114 = *((_QWORD *)v113 + 1);
                *(_QWORD *)v112 = v115;
                *((_QWORD *)v112 + 1) = v114;
                swift_bridgeObjectRelease();
                v116 = *(int *)(v30 + 24);
                v117 = &v64[v116];
                v118 = &v65[v116];
                v120 = *(_QWORD *)v118;
                v119 = *((_QWORD *)v118 + 1);
                *(_QWORD *)v117 = v120;
                *((_QWORD *)v117 + 1) = v119;
                swift_bridgeObjectRelease();
LABEL_42:
                v69 = v12[8];
                v70 = (char *)(v10 + v69);
                v71 = &v11[v69];
                v72 = v31((char *)(v10 + v69), 1, v30);
                v73 = v31(v71, 1, v30);
                if (v72)
                {
                  if (!v73)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v70, v71, v6);
                    *(_OWORD *)&v70[*(int *)(v30 + 20)] = *(_OWORD *)&v71[*(int *)(v30 + 20)];
                    *(_OWORD *)&v70[*(int *)(v30 + 24)] = *(_OWORD *)&v71[*(int *)(v30 + 24)];
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v70, 0, 1, v30);
LABEL_48:
                    v75 = v12[9];
                    v76 = (_QWORD *)(v10 + v75);
                    v77 = &v11[v75];
                    v79 = *(_QWORD *)v77;
                    v78 = *((_QWORD *)v77 + 1);
                    *v76 = v79;
                    v76[1] = v78;
                    swift_bridgeObjectRelease();
                    v80 = v12[10];
                    v81 = v10 + v80;
                    v82 = &v11[v80];
                    v83 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
                    v84 = *((_QWORD *)v83 - 1);
                    v85 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v84 + 48);
                    v86 = v85(v81, 1, v83);
                    v87 = v85((uint64_t)v82, 1, v83);
                    if (v86)
                    {
                      a1 = v143;
                      if (!v87)
                      {
                        *(_OWORD *)v81 = *(_OWORD *)v82;
                        (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v81 + v83[6], &v82[v83[6]], v6);
                        *(_OWORD *)(v81 + v83[7]) = *(_OWORD *)&v82[v83[7]];
                        v88 = v83[8];
                        v89 = v81 + v88;
                        v90 = &v82[v88];
                        *(_WORD *)(v89 + 8) = *((_WORD *)v90 + 4);
                        *(_QWORD *)v89 = *(_QWORD *)v90;
                        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v84 + 56))(v81, 0, 1, v83);
                        return a1;
                      }
                    }
                    else
                    {
                      a1 = v143;
                      if (!v87)
                      {
                        *(_QWORD *)v81 = *(_QWORD *)v82;
                        swift_bridgeObjectRelease();
                        *(_QWORD *)(v81 + 8) = *((_QWORD *)v82 + 1);
                        swift_bridgeObjectRelease();
                        v139((char *)(v81 + v83[6]), &v82[v83[6]], v6);
                        v131 = v83[7];
                        v132 = (_QWORD *)(v81 + v131);
                        v133 = &v82[v131];
                        v135 = *(_QWORD *)v133;
                        v134 = *((_QWORD *)v133 + 1);
                        *v132 = v135;
                        v132[1] = v134;
                        swift_bridgeObjectRelease();
                        v136 = v83[8];
                        v137 = v81 + v136;
                        v138 = &v82[v136];
                        *(_QWORD *)v137 = *(_QWORD *)v138;
                        *(_WORD *)(v137 + 8) = *((_WORD *)v138 + 4);
                        return a1;
                      }
                      sub_244A729C0(v81, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
                    }
                    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998) - 8)
                                    + 64);
                    v25 = (void *)v81;
                    v26 = v82;
                    goto LABEL_8;
                  }
                }
                else
                {
                  if (!v73)
                  {
                    v139(v70, v71, v6);
                    v121 = *(int *)(v30 + 20);
                    v122 = &v70[v121];
                    v123 = &v71[v121];
                    v125 = *(_QWORD *)v123;
                    v124 = *((_QWORD *)v123 + 1);
                    *(_QWORD *)v122 = v125;
                    *((_QWORD *)v122 + 1) = v124;
                    swift_bridgeObjectRelease();
                    v126 = *(int *)(v30 + 24);
                    v127 = &v70[v126];
                    v128 = &v71[v126];
                    v130 = *(_QWORD *)v128;
                    v129 = *((_QWORD *)v128 + 1);
                    *(_QWORD *)v127 = v130;
                    *((_QWORD *)v127 + 1) = v129;
                    swift_bridgeObjectRelease();
                    goto LABEL_48;
                  }
                  sub_244A729C0((uint64_t)v70, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
                }
                v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
                memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
                goto LABEL_48;
              }
              sub_244A729C0((uint64_t)v64, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
            }
            v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
            memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
            goto LABEL_42;
          }
          sub_244A729C0((uint64_t)v58, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        goto LABEL_36;
      }
      sub_244A729C0((uint64_t)v28, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_30;
  }
  if (v16)
  {
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30) - 8) + 64);
    v25 = (void *)v10;
    v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  v142 = a1;
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v17(v10, v11, v6);
  v18 = v12[5];
  v19 = (char *)(v10 + v18);
  v20 = &v11[v18];
  v21 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v22 = *(_QWORD *)(v21 - 8);
  v140 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v140(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v19, v20, v6);
    *(_OWORD *)&v19[*(int *)(v21 + 20)] = *(_OWORD *)&v20[*(int *)(v21 + 20)];
    *(_OWORD *)&v19[*(int *)(v21 + 24)] = *(_OWORD *)&v20[*(int *)(v21 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v34 = v12[6];
  v35 = (char *)(v10 + v34);
  v36 = &v11[v34];
  if (v140(&v11[v34], 1, v21))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v35, v36, v6);
    *(_OWORD *)&v35[*(int *)(v21 + 20)] = *(_OWORD *)&v36[*(int *)(v21 + 20)];
    *(_OWORD *)&v35[*(int *)(v21 + 24)] = *(_OWORD *)&v36[*(int *)(v21 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v35, 0, 1, v21);
  }
  v38 = v12[7];
  v39 = (char *)(v10 + v38);
  v40 = &v11[v38];
  if (v140(&v11[v38], 1, v21))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v39, v40, v6);
    *(_OWORD *)&v39[*(int *)(v21 + 20)] = *(_OWORD *)&v40[*(int *)(v21 + 20)];
    *(_OWORD *)&v39[*(int *)(v21 + 24)] = *(_OWORD *)&v40[*(int *)(v21 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v39, 0, 1, v21);
  }
  v42 = v12[8];
  v43 = (char *)(v10 + v42);
  v44 = &v11[v42];
  if (v140(&v11[v42], 1, v21))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v43, v44, v6);
    *(_OWORD *)&v43[*(int *)(v21 + 20)] = *(_OWORD *)&v44[*(int *)(v21 + 20)];
    *(_OWORD *)&v43[*(int *)(v21 + 24)] = *(_OWORD *)&v44[*(int *)(v21 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v43, 0, 1, v21);
  }
  *(_OWORD *)(v10 + v12[9]) = *(_OWORD *)&v11[v12[9]];
  v46 = v12[10];
  v47 = (_OWORD *)(v10 + v46);
  v48 = &v11[v46];
  v49 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v50 = *((_QWORD *)v49 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v50 + 48))(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    *v47 = *(_OWORD *)v48;
    v17((uint64_t)v47 + v49[6], &v48[v49[6]], v6);
    *(_OWORD *)((char *)v47 + v49[7]) = *(_OWORD *)&v48[v49[7]];
    v52 = v49[8];
    v53 = (char *)v47 + v52;
    v54 = &v48[v52];
    *((_WORD *)v53 + 4) = *((_WORD *)v54 + 4);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v50 + 56))(v47, 0, 1, v49);
  }
  a1 = v142;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_244AB6DB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB6DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_23Tm(a1, a2, a3, &qword_2573CFF30);
}

uint64_t sub_244AB6DC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB6DD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_24Tm(a1, a2, a3, a4, &qword_2573CFF30);
}

void sub_244AB6DE0()
{
  unint64_t v0;
  unint64_t v1;

  sub_244AE3C0C();
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, &qword_2573D07A8, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_244AB6E74(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t *, uint64_t);
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t *, uint64_t *, uint64_t);
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *, uint64_t *, uint64_t);
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  int *v77;
  uint64_t v78;
  unsigned int (*v79)(_QWORD *, uint64_t, int *);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void (*v92)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v94;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v94 = *(_QWORD *)(v12 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
    if (v13(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = *(int *)(v12 + 20);
      v17 = &v10[v16];
      v18 = &v11[v16];
      v19 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *(int *)(v12 + 24);
      v21 = &v10[v20];
      v22 = &v11[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = v7;
      v25 = v8;
      v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v10, 0, 1, v12);
      v8 = v25;
      v7 = v24;
    }
    v27 = a3[6];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    if (v13((char *)a2 + v27, 1, v12))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v28, (uint64_t *)v29, v7);
      v31 = *(int *)(v12 + 20);
      v32 = &v28[v31];
      v33 = &v29[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      v35 = *(int *)(v12 + 24);
      v36 = &v28[v35];
      v37 = &v29[v35];
      v38 = *((_QWORD *)v37 + 1);
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = v38;
      v39 = v7;
      v40 = v8;
      v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41(v28, 0, 1, v12);
      v8 = v40;
      v7 = v39;
    }
    v42 = a3[7];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    if (v13((char *)a2 + v42, 1, v12))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v43, (uint64_t *)v44, v7);
      v46 = *(int *)(v12 + 20);
      v47 = &v43[v46];
      v48 = &v44[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = *(int *)(v12 + 24);
      v51 = &v43[v50];
      v52 = &v44[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v54 = v7;
      v55 = v8;
      v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v56(v43, 0, 1, v12);
      v8 = v55;
      v7 = v54;
    }
    v57 = a3[8];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    if (v13((char *)a2 + v57, 1, v12))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v58, (uint64_t *)v59, v7);
      v61 = *(int *)(v12 + 20);
      v62 = &v58[v61];
      v63 = &v59[v61];
      v64 = *((_QWORD *)v63 + 1);
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *((_QWORD *)v62 + 1) = v64;
      v65 = *(int *)(v12 + 24);
      v66 = &v58[v65];
      v67 = &v59[v65];
      v68 = *((_QWORD *)v67 + 1);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = v68;
      v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(v58, 0, 1, v12);
    }
    v70 = a3[9];
    v71 = a3[10];
    v72 = (uint64_t *)((char *)a1 + v70);
    v73 = (uint64_t *)((char *)a2 + v70);
    v74 = v73[1];
    *v72 = *v73;
    v72[1] = v74;
    v75 = (uint64_t *)((char *)a1 + v71);
    v76 = (uint64_t *)((char *)a2 + v71);
    v77 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    v78 = *((_QWORD *)v77 - 1);
    v79 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v78 + 48);
    swift_bridgeObjectRetain();
    if (v79(v76, 1, v77))
    {
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      v81 = v76[1];
      *v75 = *v76;
      v75[1] = v81;
      v82 = v77[6];
      v83 = (char *)v75 + v82;
      v84 = (char *)v76 + v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8((uint64_t *)v83, (uint64_t *)v84, v7);
      v85 = v77[7];
      v86 = (_QWORD *)((char *)v75 + v85);
      v87 = (_QWORD *)((char *)v76 + v85);
      v88 = v87[1];
      *v86 = *v87;
      v86[1] = v88;
      v89 = v77[8];
      v90 = (char *)v75 + v89;
      v91 = (char *)v76 + v89;
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *((_WORD *)v90 + 4) = *((_WORD *)v91 + 4);
      v92 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v78 + 56);
      swift_bridgeObjectRetain();
      v92(v75, 0, 1, v77);
    }
  }
  return a1;
}

uint64_t sub_244AB72D8(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = sub_244AE3C0C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = a1 + a2[6];
  if (!v8(v9, 1, v7))
  {
    v5(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = a1 + a2[7];
  if (!v8(v10, 1, v7))
  {
    v5(v10, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = a1 + a2[8];
  if (!v8(v11, 1, v7))
  {
    v5(v11, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v12 = a1 + a2[10];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v12 + *(int *)(v13 + 24), v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244AB74E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  int *v75;
  uint64_t v76;
  unsigned int (*v77)(_QWORD *, uint64_t, int *);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v92;

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v92 = *(_QWORD *)(v11 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
  if (v12(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = *(int *)(v11 + 24);
    v19 = &v9[v18];
    v20 = &v10[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = v6;
    v23 = v7;
    v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v9, 0, 1, v11);
    v7 = v23;
    v6 = v22;
  }
  v25 = a3[6];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  if (v12((char *)(a2 + v25), 1, v11))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v26, (uint64_t)v27, v6);
    v29 = *(int *)(v11 + 20);
    v30 = &v26[v29];
    v31 = &v27[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = *(int *)(v11 + 24);
    v34 = &v26[v33];
    v35 = &v27[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = v6;
    v38 = v7;
    v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39(v26, 0, 1, v11);
    v7 = v38;
    v6 = v37;
  }
  v40 = a3[7];
  v41 = (char *)(a1 + v40);
  v42 = (char *)(a2 + v40);
  if (v12((char *)(a2 + v40), 1, v11))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v41, (uint64_t)v42, v6);
    v44 = *(int *)(v11 + 20);
    v45 = &v41[v44];
    v46 = &v42[v44];
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v48 = *(int *)(v11 + 24);
    v49 = &v41[v48];
    v50 = &v42[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = v6;
    v53 = v7;
    v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54(v41, 0, 1, v11);
    v7 = v53;
    v6 = v52;
  }
  v55 = a3[8];
  v56 = (char *)(a1 + v55);
  v57 = (char *)(a2 + v55);
  if (v12((char *)(a2 + v55), 1, v11))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v56, (uint64_t)v57, v6);
    v59 = *(int *)(v11 + 20);
    v60 = &v56[v59];
    v61 = &v57[v59];
    v62 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *((_QWORD *)v60 + 1) = v62;
    v63 = *(int *)(v11 + 24);
    v64 = &v56[v63];
    v65 = &v57[v63];
    v66 = *((_QWORD *)v65 + 1);
    *(_QWORD *)v64 = *(_QWORD *)v65;
    *((_QWORD *)v64 + 1) = v66;
    v67 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67(v56, 0, 1, v11);
  }
  v68 = a3[9];
  v69 = a3[10];
  v70 = (_QWORD *)(a1 + v68);
  v71 = (_QWORD *)(a2 + v68);
  v72 = v71[1];
  *v70 = *v71;
  v70[1] = v72;
  v73 = (_QWORD *)(a1 + v69);
  v74 = (_QWORD *)(a2 + v69);
  v75 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v76 = *((_QWORD *)v75 - 1);
  v77 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v76 + 48);
  swift_bridgeObjectRetain();
  if (v77(v74, 1, v75))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v79 = v74[1];
    *v73 = *v74;
    v73[1] = v79;
    v80 = v75[6];
    v81 = (char *)v73 + v80;
    v82 = (char *)v74 + v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7((uint64_t)v81, (uint64_t)v82, v6);
    v83 = v75[7];
    v84 = (_QWORD *)((char *)v73 + v83);
    v85 = (_QWORD *)((char *)v74 + v83);
    v86 = v85[1];
    *v84 = *v85;
    v84[1] = v86;
    v87 = v75[8];
    v88 = (char *)v73 + v87;
    v89 = (char *)v74 + v87;
    *(_QWORD *)v88 = *(_QWORD *)v89;
    *((_WORD *)v88 + 4) = *((_WORD *)v89 + 4);
    v90 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v76 + 56);
    swift_bridgeObjectRetain();
    v90(v73, 0, 1, v75);
  }
  return a1;
}

uint64_t sub_244AB7920(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  int *v68;
  uint64_t v69;
  uint64_t (*v70)(_QWORD *, uint64_t, int *);
  int v71;
  int v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int16 v83;
  void (*v84)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v85;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;

  v6 = sub_244AE3C0C();
  v119 = *(_QWORD *)(v6 - 8);
  v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 24);
  v118(a1, a2, v6);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v8, v9, v6);
      v15 = *(int *)(v10 + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      v18 = *(int *)(v10 + 24);
      v19 = &v8[v18];
      v20 = &v9[v18];
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_244A729C0((uint64_t)v8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v118((uint64_t)v8, (uint64_t)v9, v6);
  v87 = *(int *)(v10 + 20);
  v88 = &v8[v87];
  v89 = &v9[v87];
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v90 = *(int *)(v10 + 24);
  v91 = &v8[v90];
  v92 = &v9[v90];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *((_QWORD *)v91 + 1) = *((_QWORD *)v92 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  v23 = a3[6];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = v12((char *)(a1 + v23), 1, v10);
  v27 = v12(v25, 1, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v24, v25, v6);
      v28 = *(int *)(v10 + 20);
      v29 = &v24[v28];
      v30 = &v25[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
      v31 = *(int *)(v10 + 24);
      v32 = &v24[v31];
      v33 = &v25[v31];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
      v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34(v24, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    sub_244A729C0((uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v118((uint64_t)v24, (uint64_t)v25, v6);
  v93 = *(int *)(v10 + 20);
  v94 = &v24[v93];
  v95 = &v25[v93];
  *(_QWORD *)v94 = *(_QWORD *)v95;
  *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v96 = *(int *)(v10 + 24);
  v97 = &v24[v96];
  v98 = &v25[v96];
  *(_QWORD *)v97 = *(_QWORD *)v98;
  *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  v36 = a3[7];
  v37 = (char *)(a1 + v36);
  v38 = (char *)(a2 + v36);
  v39 = v12((char *)(a1 + v36), 1, v10);
  v40 = v12(v38, 1, v10);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v37, v38, v6);
      v41 = *(int *)(v10 + 20);
      v42 = &v37[v41];
      v43 = &v38[v41];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
      v44 = *(int *)(v10 + 24);
      v45 = &v37[v44];
      v46 = &v38[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
      v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(v37, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v40)
  {
    sub_244A729C0((uint64_t)v37, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_18:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  v118((uint64_t)v37, (uint64_t)v38, v6);
  v99 = *(int *)(v10 + 20);
  v100 = &v37[v99];
  v101 = &v38[v99];
  *(_QWORD *)v100 = *(_QWORD *)v101;
  *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v102 = *(int *)(v10 + 24);
  v103 = &v37[v102];
  v104 = &v38[v102];
  *(_QWORD *)v103 = *(_QWORD *)v104;
  *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  v49 = a3[8];
  v50 = (char *)(a1 + v49);
  v51 = (char *)(a2 + v49);
  v52 = v12((char *)(a1 + v49), 1, v10);
  v53 = v12(v51, 1, v10);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v50, v51, v6);
      v54 = *(int *)(v10 + 20);
      v55 = &v50[v54];
      v56 = &v51[v54];
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
      v57 = *(int *)(v10 + 24);
      v58 = &v50[v57];
      v59 = &v51[v57];
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
      v60 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60(v50, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v53)
  {
    sub_244A729C0((uint64_t)v50, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_24:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_25;
  }
  v118((uint64_t)v50, (uint64_t)v51, v6);
  v105 = *(int *)(v10 + 20);
  v106 = &v50[v105];
  v107 = &v51[v105];
  *(_QWORD *)v106 = *(_QWORD *)v107;
  *((_QWORD *)v106 + 1) = *((_QWORD *)v107 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v108 = *(int *)(v10 + 24);
  v109 = &v50[v108];
  v110 = &v51[v108];
  *(_QWORD *)v109 = *(_QWORD *)v110;
  *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_25:
  v62 = a3[9];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  *v63 = *v64;
  v63[1] = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = a3[10];
  v66 = (_QWORD *)(a1 + v65);
  v67 = (_QWORD *)(a2 + v65);
  v68 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v69 = *((_QWORD *)v68 - 1);
  v70 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v69 + 48);
  v71 = v70(v66, 1, v68);
  v72 = v70(v67, 1, v68);
  if (!v71)
  {
    if (!v72)
    {
      *v66 = *v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v66[1] = v67[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v118((uint64_t)v66 + v68[6], (uint64_t)v67 + v68[6], v6);
      v111 = v68[7];
      v112 = (_QWORD *)((char *)v66 + v111);
      v113 = (_QWORD *)((char *)v67 + v111);
      *v112 = *v113;
      v112[1] = v113[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v114 = v68[8];
      v115 = (char *)v66 + v114;
      v116 = (char *)v67 + v114;
      v117 = *(_QWORD *)v116;
      *((_WORD *)v115 + 4) = *((_WORD *)v116 + 4);
      *(_QWORD *)v115 = v117;
      return a1;
    }
    sub_244A729C0((uint64_t)v66, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    goto LABEL_30;
  }
  if (v72)
  {
LABEL_30:
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    return a1;
  }
  *v66 = *v67;
  v66[1] = v67[1];
  v73 = v68[6];
  v74 = (char *)v66 + v73;
  v75 = (char *)v67 + v73;
  v76 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v76(v74, v75, v6);
  v77 = v68[7];
  v78 = (_QWORD *)((char *)v66 + v77);
  v79 = (_QWORD *)((char *)v67 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  v80 = v68[8];
  v81 = (char *)v66 + v80;
  v82 = (char *)v67 + v80;
  v83 = *((_WORD *)v82 + 4);
  *(_QWORD *)v81 = *(_QWORD *)v82;
  *((_WORD *)v81 + 4) = v83;
  v84 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v69 + 56);
  swift_bridgeObjectRetain();
  v84(v66, 0, 1, v68);
  return a1;
}

uint64_t sub_244AB80D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_OWORD *)&v9[*(int *)(v11 + 20)] = *(_OWORD *)&v10[*(int *)(v11 + 20)];
    *(_OWORD *)&v9[*(int *)(v11 + 24)] = *(_OWORD *)&v10[*(int *)(v11 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[6];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  if (v13((char *)(a2 + v15), 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v16, (uint64_t)v17, v6);
    *(_OWORD *)&v16[*(int *)(v11 + 20)] = *(_OWORD *)&v17[*(int *)(v11 + 20)];
    *(_OWORD *)&v16[*(int *)(v11 + 24)] = *(_OWORD *)&v17[*(int *)(v11 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[7];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  if (v13((char *)(a2 + v19), 1, v11))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v20, (uint64_t)v21, v6);
    *(_OWORD *)&v20[*(int *)(v11 + 20)] = *(_OWORD *)&v21[*(int *)(v11 + 20)];
    *(_OWORD *)&v20[*(int *)(v11 + 24)] = *(_OWORD *)&v21[*(int *)(v11 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v23 = a3[8];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  if (v13((char *)(a2 + v23), 1, v11))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    *(_OWORD *)&v24[*(int *)(v11 + 20)] = *(_OWORD *)&v25[*(int *)(v11 + 20)];
    *(_OWORD *)&v24[*(int *)(v11 + 24)] = *(_OWORD *)&v25[*(int *)(v11 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  v27 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v28 = (_OWORD *)(a1 + v27);
  v29 = (_OWORD *)(a2 + v27);
  v30 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v31 = *((_QWORD *)v30 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    *v28 = *v29;
    v7((uint64_t)v28 + v30[6], (uint64_t)v29 + v30[6], v6);
    *(_OWORD *)((char *)v28 + v30[7]) = *(_OWORD *)((char *)v29 + v30[7]);
    v33 = v30[8];
    v34 = (char *)v28 + v33;
    v35 = (char *)v29 + v33;
    *((_WORD *)v34 + 4) = *((_WORD *)v35 + 4);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
  }
  return a1;
}

uint64_t sub_244AB8424(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  int *v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD *, uint64_t, int *);
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  void (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;

  v6 = sub_244AE3C0C();
  v101 = *(_QWORD *)(v6 - 8);
  v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 40);
  v100(a1, a2, v6);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v8, v9, v6);
      *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
      *(_OWORD *)&v8[*(int *)(v10 + 24)] = *(_OWORD *)&v9[*(int *)(v10 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_244A729C0((uint64_t)v8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v100((uint64_t)v8, (uint64_t)v9, v6);
  v52 = *(int *)(v10 + 20);
  v53 = &v8[v52];
  v54 = &v9[v52];
  v56 = *(_QWORD *)v54;
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)v53 = v56;
  *((_QWORD *)v53 + 1) = v55;
  swift_bridgeObjectRelease();
  v57 = *(int *)(v10 + 24);
  v58 = &v8[v57];
  v59 = &v9[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = v61;
  *((_QWORD *)v58 + 1) = v60;
  swift_bridgeObjectRelease();
LABEL_7:
  v16 = a3[6];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = v12((char *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v17, v18, v6);
      *(_OWORD *)&v17[*(int *)(v10 + 20)] = *(_OWORD *)&v18[*(int *)(v10 + 20)];
      *(_OWORD *)&v17[*(int *)(v10 + 24)] = *(_OWORD *)&v18[*(int *)(v10 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  v100((uint64_t)v17, (uint64_t)v18, v6);
  v62 = *(int *)(v10 + 20);
  v63 = &v17[v62];
  v64 = &v18[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *(_QWORD *)v63 = v66;
  *((_QWORD *)v63 + 1) = v65;
  swift_bridgeObjectRelease();
  v67 = *(int *)(v10 + 24);
  v68 = &v17[v67];
  v69 = &v18[v67];
  v71 = *(_QWORD *)v69;
  v70 = *((_QWORD *)v69 + 1);
  *(_QWORD *)v68 = v71;
  *((_QWORD *)v68 + 1) = v70;
  swift_bridgeObjectRelease();
LABEL_13:
  v22 = a3[7];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  v25 = v12((char *)(a1 + v22), 1, v10);
  v26 = v12(v24, 1, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v23, v24, v6);
      *(_OWORD *)&v23[*(int *)(v10 + 20)] = *(_OWORD *)&v24[*(int *)(v10 + 20)];
      *(_OWORD *)&v23[*(int *)(v10 + 24)] = *(_OWORD *)&v24[*(int *)(v10 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    sub_244A729C0((uint64_t)v23, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_18:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  v100((uint64_t)v23, (uint64_t)v24, v6);
  v72 = *(int *)(v10 + 20);
  v73 = &v23[v72];
  v74 = &v24[v72];
  v76 = *(_QWORD *)v74;
  v75 = *((_QWORD *)v74 + 1);
  *(_QWORD *)v73 = v76;
  *((_QWORD *)v73 + 1) = v75;
  swift_bridgeObjectRelease();
  v77 = *(int *)(v10 + 24);
  v78 = &v23[v77];
  v79 = &v24[v77];
  v81 = *(_QWORD *)v79;
  v80 = *((_QWORD *)v79 + 1);
  *(_QWORD *)v78 = v81;
  *((_QWORD *)v78 + 1) = v80;
  swift_bridgeObjectRelease();
LABEL_19:
  v28 = a3[8];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  v31 = v12((char *)(a1 + v28), 1, v10);
  v32 = v12(v30, 1, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v29, v30, v6);
      *(_OWORD *)&v29[*(int *)(v10 + 20)] = *(_OWORD *)&v30[*(int *)(v10 + 20)];
      *(_OWORD *)&v29[*(int *)(v10 + 24)] = *(_OWORD *)&v30[*(int *)(v10 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    sub_244A729C0((uint64_t)v29, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_24:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  v100((uint64_t)v29, (uint64_t)v30, v6);
  v82 = *(int *)(v10 + 20);
  v83 = &v29[v82];
  v84 = &v30[v82];
  v86 = *(_QWORD *)v84;
  v85 = *((_QWORD *)v84 + 1);
  *(_QWORD *)v83 = v86;
  *((_QWORD *)v83 + 1) = v85;
  swift_bridgeObjectRelease();
  v87 = *(int *)(v10 + 24);
  v88 = &v29[v87];
  v89 = &v30[v87];
  v91 = *(_QWORD *)v89;
  v90 = *((_QWORD *)v89 + 1);
  *(_QWORD *)v88 = v91;
  *((_QWORD *)v88 + 1) = v90;
  swift_bridgeObjectRelease();
LABEL_25:
  v34 = a3[9];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[10];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  v42 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v43 = *((_QWORD *)v42 - 1);
  v44 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (!v45)
  {
    if (!v46)
    {
      *v40 = *v41;
      swift_bridgeObjectRelease();
      v40[1] = v41[1];
      swift_bridgeObjectRelease();
      v100((uint64_t)v40 + v42[6], (uint64_t)v41 + v42[6], v6);
      v92 = v42[7];
      v93 = (_QWORD *)((char *)v40 + v92);
      v94 = (_QWORD *)((char *)v41 + v92);
      v96 = *v94;
      v95 = v94[1];
      *v93 = v96;
      v93[1] = v95;
      swift_bridgeObjectRelease();
      v97 = v42[8];
      v98 = (char *)v40 + v97;
      v99 = (char *)v41 + v97;
      *(_QWORD *)v98 = *(_QWORD *)v99;
      *((_WORD *)v98 + 4) = *((_WORD *)v99 + 4);
      return a1;
    }
    sub_244A729C0((uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    goto LABEL_30;
  }
  if (v46)
  {
LABEL_30:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))((char *)v40 + v42[6], (char *)v41 + v42[6], v6);
  *(_OWORD *)((char *)v40 + v42[7]) = *(_OWORD *)((char *)v41 + v42[7]);
  v47 = v42[8];
  v48 = (char *)v40 + v47;
  v49 = (char *)v41 + v47;
  *((_WORD *)v48 + 4) = *((_WORD *)v49 + 4);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v43 + 56))(v40, 0, 1, v42);
  return a1;
}

uint64_t sub_244AB8A4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB8A58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[9] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t sub_244AB8B3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB8B48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_244AE3C0C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[9] + 8) = a2;
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[10];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_244AB8C1C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_244AE3C0C();
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, &qword_2573D1348, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    if (v1 <= 0x3F)
    {
      sub_244A83584(319, qword_2573D1350, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_244AB8CEC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3C0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (uint64_t *)((char *)v7 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)v7 + v14;
    v19 = (char *)a2 + v14;
    *((_WORD *)v18 + 4) = *((_WORD *)v19 + 4);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_244AB8DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_244AB8E44(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244AE3C0C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (char *)a1 + v13;
  v18 = (char *)a2 + v13;
  *((_WORD *)v17 + 4) = *((_WORD *)v18 + 4);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_244AB8F04(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)v15;
  *((_WORD *)v14 + 4) = *((_WORD *)v15 + 4);
  *(_QWORD *)v14 = v16;
  return a1;
}

_OWORD *sub_244AB8FE0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *((_WORD *)v11 + 4) = *((_WORD *)v12 + 4);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  return a1;
}

_QWORD *sub_244AB9070(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_WORD *)v16 + 4) = *((_WORD *)v17 + 4);
  return a1;
}

uint64_t sub_244AB912C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AB9138(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_244AB91B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_244AB91C0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_244AE3C0C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_244AB9234()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_244AB92C0(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, int *);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  void (*v110)(char *, _QWORD, uint64_t, int *);
  uint64_t v111;
  char *v112;
  _QWORD *v113;
  uint64_t v114;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  int *v122;
  char *v123;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = &a1[v10];
    v15 = &a2[v10];
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v122 = a3;
    v123 = a2;
    v17 = a3[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v25 = v122;
      v24 = v123;
    }
    else
    {
      v117 = v21;
      v8(v18, v19, v7);
      v27 = (int *)v20;
      v28 = *(int *)(v20 + 20);
      v29 = v18;
      v30 = &v18[v28];
      v116 = v19;
      v31 = &v19[v28];
      v32 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v33 = *(_QWORD *)(v32 - 8);
      v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v118 = v8;
      v119 = v7;
      if (v120(v31, 1, v32))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v8(v30, v31, v7);
        v35 = *(int *)(v32 + 20);
        v36 = &v30[v35];
        v37 = &v31[v35];
        v38 = *((_QWORD *)v37 + 1);
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = v38;
        v39 = *(int *)(v32 + 24);
        v40 = &v30[v39];
        v41 = &v31[v39];
        v42 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v42;
        v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v30, 0, 1, v32);
      }
      v44 = v33;
      v45 = v27;
      v46 = v27[6];
      v47 = v29;
      v48 = &v29[v46];
      v49 = &v116[v46];
      v50 = v120;
      if (v120(&v116[v46], 1, v32))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        v52 = v118;
      }
      else
      {
        v52 = v118;
        v118(v48, v49, v119);
        v53 = *(int *)(v32 + 20);
        v54 = &v48[v53];
        v55 = &v49[v53];
        v56 = *((_QWORD *)v55 + 1);
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = v56;
        v57 = *(int *)(v32 + 24);
        v58 = &v48[v57];
        v59 = &v49[v57];
        v60 = *((_QWORD *)v59 + 1);
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *((_QWORD *)v58 + 1) = v60;
        v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61(v48, 0, 1, v32);
        v50 = v120;
      }
      v62 = v45[7];
      v63 = &v47[v62];
      v64 = &v116[v62];
      if (v50(&v116[v62], 1, v32))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        v52(v63, v64, v119);
        v66 = *(int *)(v32 + 20);
        v67 = &v63[v66];
        v68 = &v64[v66];
        v69 = *((_QWORD *)v68 + 1);
        *(_QWORD *)v67 = *(_QWORD *)v68;
        *((_QWORD *)v67 + 1) = v69;
        v70 = *(int *)(v32 + 24);
        v71 = &v63[v70];
        v72 = &v64[v70];
        v73 = *((_QWORD *)v72 + 1);
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *((_QWORD *)v71 + 1) = v73;
        v74 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v74(v63, 0, 1, v32);
        v50 = v120;
      }
      v75 = v45[8];
      v76 = &v47[v75];
      v77 = &v116[v75];
      if (v50(&v116[v75], 1, v32))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        v52(v76, v77, v119);
        v79 = *(int *)(v32 + 20);
        v80 = &v76[v79];
        v81 = &v77[v79];
        v82 = *((_QWORD *)v81 + 1);
        *(_QWORD *)v80 = *(_QWORD *)v81;
        *((_QWORD *)v80 + 1) = v82;
        v83 = *(int *)(v32 + 24);
        v84 = &v76[v83];
        v85 = &v77[v83];
        v86 = *((_QWORD *)v85 + 1);
        *(_QWORD *)v84 = *(_QWORD *)v85;
        *((_QWORD *)v84 + 1) = v86;
        v87 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v87(v76, 0, 1, v32);
      }
      v88 = v45[9];
      v89 = &v47[v88];
      v90 = &v116[v88];
      v91 = *((_QWORD *)v90 + 1);
      *(_QWORD *)v89 = *(_QWORD *)v90;
      *((_QWORD *)v89 + 1) = v91;
      v92 = v45[10];
      v121 = v47;
      v93 = &v47[v92];
      v94 = &v116[v92];
      v95 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
      v96 = *((_QWORD *)v95 - 1);
      v97 = *(unsigned int (**)(char *, uint64_t, int *))(v96 + 48);
      swift_bridgeObjectRetain();
      if (v97(v94, 1, v95))
      {
        v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        v99 = *((_QWORD *)v94 + 1);
        *(_QWORD *)v93 = *(_QWORD *)v94;
        *((_QWORD *)v93 + 1) = v99;
        v100 = v95[6];
        v101 = &v93[v100];
        v102 = &v94[v100];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v118(v101, v102, v119);
        v103 = v95[7];
        v104 = &v93[v103];
        v105 = &v94[v103];
        v106 = *((_QWORD *)v105 + 1);
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = v95[8];
        v108 = &v93[v107];
        v109 = &v94[v107];
        *(_QWORD *)v108 = *(_QWORD *)v109;
        *((_WORD *)v108 + 4) = *((_WORD *)v109 + 4);
        v110 = *(void (**)(char *, _QWORD, uint64_t, int *))(v96 + 56);
        swift_bridgeObjectRetain();
        v110(v93, 0, 1, v95);
      }
      v25 = v122;
      v24 = v123;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v117 + 56))(v121, 0, 1, v45);
    }
    v111 = v25[8];
    v112 = &a1[v111];
    v113 = (_QWORD *)((char *)v24 + v111);
    v114 = v113[1];
    *v112 = *v113;
    v112[1] = v114;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_244AB97FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_244AE3C0C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  v7 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {
    v5(v6, v4);
    v8 = v6 + v7[5];
    v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    if (!v10(v8, 1, v9))
    {
      v5(v8, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v11 = v6 + v7[6];
    if (!v10(v11, 1, v9))
    {
      v5(v11, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v12 = v6 + v7[7];
    if (!v10(v12, 1, v9))
    {
      v5(v12, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v13 = v6 + v7[8];
    if (!v10(v13, 1, v9))
    {
      v5(v13, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v14 = v6 + v7[10];
    v15 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5(v14 + *(int *)(v15 + 24), v4);
      swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_244AB9A68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, int *);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int *v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, int *);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void (*v104)(char *, _QWORD, uint64_t, int *);
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  int *v112;
  uint64_t v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[7];
  v115 = a1;
  v116 = a2;
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(unsigned int (**)(char *, uint64_t, int *))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v111 = v20;
    v7((uint64_t)v17, (uint64_t)v18, v6);
    v23 = v19[5];
    v24 = v17;
    v25 = &v17[v23];
    v26 = &v18[v23];
    v27 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v28 = *(_QWORD *)(v27 - 8);
    v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v113 = v6;
    v110 = v7;
    if (v114(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v25, (uint64_t)v26, v6);
      v30 = *(int *)(v27 + 20);
      v31 = &v25[v30];
      v32 = &v26[v30];
      v33 = *((_QWORD *)v32 + 1);
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = v33;
      v34 = *(int *)(v27 + 24);
      v35 = &v25[v34];
      v36 = &v26[v34];
      v37 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v37;
      v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v25, 0, 1, v27);
    }
    v39 = v28;
    v40 = v19[6];
    v41 = v24;
    v42 = &v24[v40];
    v43 = &v18[v40];
    v44 = v114;
    if (v114(&v18[v40], 1, v27))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      v46 = (void (*)(char *, char *, uint64_t))v110;
    }
    else
    {
      v46 = (void (*)(char *, char *, uint64_t))v110;
      v110((uint64_t)v42, (uint64_t)v43, v113);
      v47 = *(int *)(v27 + 20);
      v48 = &v42[v47];
      v49 = &v43[v47];
      v50 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v50;
      v51 = *(int *)(v27 + 24);
      v52 = &v42[v51];
      v53 = &v43[v51];
      v54 = *((_QWORD *)v53 + 1);
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *((_QWORD *)v52 + 1) = v54;
      v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v42, 0, 1, v27);
      v44 = v114;
    }
    v56 = v19[7];
    v57 = &v41[v56];
    v58 = &v18[v56];
    if (v44(&v18[v56], 1, v27))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      v46(v57, v58, v113);
      v60 = *(int *)(v27 + 20);
      v61 = &v57[v60];
      v62 = &v58[v60];
      v63 = *((_QWORD *)v62 + 1);
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_QWORD *)v61 + 1) = v63;
      v64 = *(int *)(v27 + 24);
      v65 = &v57[v64];
      v66 = &v58[v64];
      v67 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = v67;
      v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68(v57, 0, 1, v27);
      v44 = v114;
    }
    v69 = v19[8];
    v70 = &v41[v69];
    v71 = &v18[v69];
    v112 = a3;
    if (v44(&v18[v69], 1, v27))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      v46(v70, v71, v113);
      v73 = *(int *)(v27 + 20);
      v74 = &v70[v73];
      v75 = &v71[v73];
      v76 = *((_QWORD *)v75 + 1);
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = v76;
      v77 = *(int *)(v27 + 24);
      v78 = &v70[v77];
      v79 = &v71[v77];
      v80 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v80;
      v81 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v81(v70, 0, 1, v27);
    }
    v82 = v19[9];
    v83 = &v41[v82];
    v84 = &v18[v82];
    v85 = *((_QWORD *)v84 + 1);
    *(_QWORD *)v83 = *(_QWORD *)v84;
    *((_QWORD *)v83 + 1) = v85;
    v86 = v19[10];
    v87 = &v41[v86];
    v88 = &v18[v86];
    v89 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    v90 = *((_QWORD *)v89 - 1);
    v91 = *(unsigned int (**)(char *, uint64_t, int *))(v90 + 48);
    swift_bridgeObjectRetain();
    if (v91(v88, 1, v89))
    {
      v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    else
    {
      v93 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v93;
      v94 = v89[6];
      v95 = &v87[v94];
      v96 = &v88[v94];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46(v95, v96, v113);
      v97 = v89[7];
      v98 = &v87[v97];
      v99 = &v88[v97];
      v100 = *((_QWORD *)v99 + 1);
      *(_QWORD *)v98 = *(_QWORD *)v99;
      *((_QWORD *)v98 + 1) = v100;
      v101 = v89[8];
      v102 = &v87[v101];
      v103 = &v88[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_WORD *)v102 + 4) = *((_WORD *)v103 + 4);
      v104 = *(void (**)(char *, _QWORD, uint64_t, int *))(v90 + 56);
      swift_bridgeObjectRetain();
      v104(v87, 0, 1, v89);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v111 + 56))(v41, 0, 1, v19);
    a3 = v112;
  }
  v105 = a3[8];
  v106 = (_QWORD *)(v115 + v105);
  v107 = (_QWORD *)(v116 + v105);
  v108 = v107[1];
  *v106 = *v107;
  v106[1] = v108;
  swift_bridgeObjectRetain();
  return v115;
}

uint64_t sub_244AB9F70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t (*v19)(uint64_t, uint64_t, int *);
  int v20;
  int v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v53)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void (*v76)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  void (*v87)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, int *);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int16 v106;
  void (*v107)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int v116;
  int v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  void (*v124)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  int v129;
  int v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  void (*v137)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  int v142;
  int v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void (*v150)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  int *v158;
  uint64_t v159;
  uint64_t (*v160)(char *, uint64_t, int *);
  int v161;
  int v162;
  uint64_t v163;
  char *v164;
  char *v165;
  void (*v166)(char *, char *, uint64_t);
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  __int16 v174;
  void (*v175)(char *, _QWORD, uint64_t, int *);
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  unsigned int (*v207)(char *, uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t (*v211)(uint64_t, uint64_t, uint64_t);
  char *v212;
  uint64_t v213;
  uint64_t v214;
  int *v215;
  int *v216;
  uint64_t v217;
  void (*v218)(char *, char *, uint64_t);
  uint64_t v219;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
  v219 = v6;
  v8(a1, a2);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (char *)(a2 + v15);
  v18 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v217 = *((_QWORD *)v18 - 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v217 + 48);
  v20 = v19(v16, 1, v18);
  v21 = v19((uint64_t)v17, 1, v18);
  if (!v20)
  {
    v218 = (void (*)(char *, char *, uint64_t))v8;
    if (v21)
    {
      sub_244A729C0(v16, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      goto LABEL_7;
    }
    v214 = a2;
    v216 = a3;
    ((void (*)(uint64_t, char *, uint64_t))v8)(v16, v17, v219);
    v32 = v18[5];
    v33 = (char *)(v16 + v32);
    v34 = &v17[v32];
    v35 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v209 = *(_QWORD *)(v35 - 8);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v209 + 48);
    v37 = v36(v33, 1, v35);
    v211 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
    v38 = v36(v34, 1, v35);
    if (v37)
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v33, v34, v219);
        v39 = *(int *)(v35 + 20);
        v40 = &v33[v39];
        v41 = &v34[v39];
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
        v42 = *(int *)(v35 + 24);
        v43 = &v33[v42];
        v44 = &v34[v42];
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
        v45 = v7;
        v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(v33, 0, 1, v35);
        v7 = v45;
        goto LABEL_30;
      }
    }
    else
    {
      if (!v38)
      {
        v218(v33, v34, v219);
        v176 = *(int *)(v35 + 20);
        v177 = &v33[v176];
        v178 = &v34[v176];
        *(_QWORD *)v177 = *(_QWORD *)v178;
        *((_QWORD *)v177 + 1) = *((_QWORD *)v178 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v179 = *(int *)(v35 + 24);
        v180 = &v33[v179];
        v181 = &v34[v179];
        *(_QWORD *)v180 = *(_QWORD *)v181;
        *((_QWORD *)v180 + 1) = *((_QWORD *)v181 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_30:
        v113 = v18[6];
        v114 = (char *)(v16 + v113);
        v115 = &v17[v113];
        v116 = v211(v16 + v113, 1, v35);
        v117 = v211((uint64_t)v115, 1, v35);
        v208 = v7;
        if (v116)
        {
          if (!v117)
          {
            (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v114, v115, v219);
            v118 = *(int *)(v35 + 20);
            v119 = &v114[v118];
            v120 = &v115[v118];
            *(_QWORD *)v119 = *(_QWORD *)v120;
            *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
            v121 = *(int *)(v35 + 24);
            v122 = &v114[v121];
            v123 = &v115[v121];
            *(_QWORD *)v122 = *(_QWORD *)v123;
            *((_QWORD *)v122 + 1) = *((_QWORD *)v123 + 1);
            v124 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v124(v114, 0, 1, v35);
            v7 = v208;
            goto LABEL_36;
          }
        }
        else
        {
          if (!v117)
          {
            v218(v114, v115, v219);
            v182 = *(int *)(v35 + 20);
            v183 = &v114[v182];
            v184 = &v115[v182];
            *(_QWORD *)v183 = *(_QWORD *)v184;
            *((_QWORD *)v183 + 1) = *((_QWORD *)v184 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v185 = *(int *)(v35 + 24);
            v186 = &v114[v185];
            v187 = &v115[v185];
            *(_QWORD *)v186 = *(_QWORD *)v187;
            *((_QWORD *)v186 + 1) = *((_QWORD *)v187 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_36:
            v126 = v18[7];
            v127 = (char *)(v16 + v126);
            v128 = &v17[v126];
            v129 = v211(v16 + v126, 1, v35);
            v130 = v211((uint64_t)v128, 1, v35);
            if (v129)
            {
              if (!v130)
              {
                (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v127, v128, v219);
                v131 = *(int *)(v35 + 20);
                v132 = &v127[v131];
                v133 = &v128[v131];
                *(_QWORD *)v132 = *(_QWORD *)v133;
                *((_QWORD *)v132 + 1) = *((_QWORD *)v133 + 1);
                v134 = *(int *)(v35 + 24);
                v135 = &v127[v134];
                v136 = &v128[v134];
                *(_QWORD *)v135 = *(_QWORD *)v136;
                *((_QWORD *)v135 + 1) = *((_QWORD *)v136 + 1);
                v137 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v137(v127, 0, 1, v35);
                v7 = v208;
                goto LABEL_42;
              }
            }
            else
            {
              if (!v130)
              {
                v218(v127, v128, v219);
                v188 = *(int *)(v35 + 20);
                v189 = &v127[v188];
                v190 = &v128[v188];
                *(_QWORD *)v189 = *(_QWORD *)v190;
                *((_QWORD *)v189 + 1) = *((_QWORD *)v190 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v191 = *(int *)(v35 + 24);
                v192 = &v127[v191];
                v193 = &v128[v191];
                *(_QWORD *)v192 = *(_QWORD *)v193;
                *((_QWORD *)v192 + 1) = *((_QWORD *)v193 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_42:
                v139 = v18[8];
                v140 = (char *)(v16 + v139);
                v141 = &v17[v139];
                v142 = v211(v16 + v139, 1, v35);
                v143 = v211((uint64_t)v141, 1, v35);
                if (v142)
                {
                  if (!v143)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v140, v141, v219);
                    v144 = *(int *)(v35 + 20);
                    v145 = &v140[v144];
                    v146 = &v141[v144];
                    *(_QWORD *)v145 = *(_QWORD *)v146;
                    *((_QWORD *)v145 + 1) = *((_QWORD *)v146 + 1);
                    v147 = *(int *)(v35 + 24);
                    v148 = &v140[v147];
                    v149 = &v141[v147];
                    *(_QWORD *)v148 = *(_QWORD *)v149;
                    *((_QWORD *)v148 + 1) = *((_QWORD *)v149 + 1);
                    v150 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v150(v140, 0, 1, v35);
LABEL_48:
                    v152 = v18[9];
                    v153 = (_QWORD *)(v16 + v152);
                    v154 = &v17[v152];
                    *v153 = *(_QWORD *)v154;
                    v153[1] = *((_QWORD *)v154 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v155 = v18[10];
                    v156 = (char *)(v16 + v155);
                    v157 = &v17[v155];
                    v158 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
                    v159 = *((_QWORD *)v158 - 1);
                    v160 = *(uint64_t (**)(char *, uint64_t, int *))(v159 + 48);
                    v161 = v160(v156, 1, v158);
                    v162 = v160(v157, 1, v158);
                    a2 = v214;
                    a3 = v216;
                    if (v161)
                    {
                      if (!v162)
                      {
                        *(_QWORD *)v156 = *(_QWORD *)v157;
                        *((_QWORD *)v156 + 1) = *((_QWORD *)v157 + 1);
                        v163 = v158[6];
                        v164 = &v156[v163];
                        v165 = &v157[v163];
                        v166 = *(void (**)(char *, char *, uint64_t))(v208 + 16);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        v167 = v165;
                        a3 = v216;
                        v166(v164, v167, v219);
                        v168 = v158[7];
                        v169 = &v156[v168];
                        v170 = &v157[v168];
                        *(_QWORD *)v169 = *(_QWORD *)v170;
                        *((_QWORD *)v169 + 1) = *((_QWORD *)v170 + 1);
                        v171 = v158[8];
                        v172 = &v156[v171];
                        v173 = &v157[v171];
                        v174 = *((_WORD *)v173 + 4);
                        *(_QWORD *)v172 = *(_QWORD *)v173;
                        *((_WORD *)v172 + 4) = v174;
                        v175 = *(void (**)(char *, _QWORD, uint64_t, int *))(v159 + 56);
                        swift_bridgeObjectRetain();
                        v175(v156, 0, 1, v158);
                        goto LABEL_26;
                      }
                    }
                    else
                    {
                      if (!v162)
                      {
                        *(_QWORD *)v156 = *(_QWORD *)v157;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        *((_QWORD *)v156 + 1) = *((_QWORD *)v157 + 1);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v218(&v156[v158[6]], &v157[v158[6]], v219);
                        v200 = v158[7];
                        v201 = &v156[v200];
                        v202 = &v157[v200];
                        *(_QWORD *)v201 = *(_QWORD *)v202;
                        *((_QWORD *)v201 + 1) = *((_QWORD *)v202 + 1);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v203 = v158[8];
                        v204 = &v156[v203];
                        v205 = &v157[v203];
                        v206 = *(_QWORD *)v205;
                        *((_WORD *)v204 + 4) = *((_WORD *)v205 + 4);
                        *(_QWORD *)v204 = v206;
                        goto LABEL_26;
                      }
                      sub_244A729C0((uint64_t)v156, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
                    }
                    v29 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998) - 8)
                                    + 64);
                    v30 = v156;
                    v31 = v157;
                    goto LABEL_8;
                  }
                }
                else
                {
                  if (!v143)
                  {
                    v218(v140, v141, v219);
                    v194 = *(int *)(v35 + 20);
                    v195 = &v140[v194];
                    v196 = &v141[v194];
                    *(_QWORD *)v195 = *(_QWORD *)v196;
                    *((_QWORD *)v195 + 1) = *((_QWORD *)v196 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v197 = *(int *)(v35 + 24);
                    v198 = &v140[v197];
                    v199 = &v141[v197];
                    *(_QWORD *)v198 = *(_QWORD *)v199;
                    *((_QWORD *)v198 + 1) = *((_QWORD *)v199 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    goto LABEL_48;
                  }
                  sub_244A729C0((uint64_t)v140, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
                }
                v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
                memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
                goto LABEL_48;
              }
              sub_244A729C0((uint64_t)v127, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
            }
            v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
            memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
            goto LABEL_42;
          }
          sub_244A729C0((uint64_t)v114, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
        }
        v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        goto LABEL_36;
      }
      sub_244A729C0((uint64_t)v33, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    }
    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    goto LABEL_30;
  }
  if (v21)
  {
LABEL_7:
    v29 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30) - 8) + 64);
    v30 = (void *)v16;
    v31 = v17;
LABEL_8:
    memcpy(v30, v31, v29);
    goto LABEL_26;
  }
  v213 = a2;
  v215 = a3;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v22(v16, v17, v219);
  v23 = v18[5];
  v24 = (char *)(v16 + v23);
  v25 = &v17[v23];
  v26 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v27 = *(_QWORD *)(v26 - 8);
  v207 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v210 = v27;
  if (v207(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v22((uint64_t)v24, v25, v219);
    v47 = *(int *)(v26 + 20);
    v48 = &v24[v47];
    v49 = &v25[v47];
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
    v50 = *(int *)(v26 + 24);
    v51 = &v24[v50];
    v52 = &v25[v50];
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
    v53 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53(v24, 0, 1, v26);
  }
  v54 = v18[6];
  v55 = (char *)(v16 + v54);
  v56 = &v17[v54];
  if (v207(&v17[v54], 1, v26))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v58 = (void (*)(char *, char *, uint64_t))v22;
  }
  else
  {
    v58 = (void (*)(char *, char *, uint64_t))v22;
    v22((uint64_t)v55, v56, v219);
    v59 = *(int *)(v26 + 20);
    v60 = &v55[v59];
    v61 = &v56[v59];
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
    v62 = *(int *)(v26 + 24);
    v63 = &v55[v62];
    v64 = &v56[v62];
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
    v65 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v210 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65(v55, 0, 1, v26);
  }
  v66 = v18[7];
  v67 = (char *)(v16 + v66);
  v68 = &v17[v66];
  if (v207(&v17[v66], 1, v26))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v58(v67, v68, v219);
    v70 = *(int *)(v26 + 20);
    v71 = &v67[v70];
    v72 = &v68[v70];
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
    v73 = *(int *)(v26 + 24);
    v74 = &v67[v73];
    v75 = &v68[v73];
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = *((_QWORD *)v75 + 1);
    v76 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v210 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76(v67, 0, 1, v26);
  }
  v77 = v18[8];
  v78 = (char *)(v16 + v77);
  v79 = &v17[v77];
  if (v207(&v17[v77], 1, v26))
  {
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    v58(v78, v79, v219);
    v81 = *(int *)(v26 + 20);
    v82 = &v78[v81];
    v83 = &v79[v81];
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = *((_QWORD *)v83 + 1);
    v84 = *(int *)(v26 + 24);
    v85 = &v78[v84];
    v86 = &v79[v84];
    *(_QWORD *)v85 = *(_QWORD *)v86;
    *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
    v87 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v210 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87(v78, 0, 1, v26);
  }
  v88 = v18[9];
  v89 = (_QWORD *)(v16 + v88);
  v90 = &v17[v88];
  *v89 = *(_QWORD *)v90;
  v89[1] = *((_QWORD *)v90 + 1);
  v91 = v18[10];
  v92 = (_QWORD *)(v16 + v91);
  v93 = &v17[v91];
  v94 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v95 = *((_QWORD *)v94 - 1);
  v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
  swift_bridgeObjectRetain();
  if (v96(v93, 1, v94))
  {
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    *v92 = *(_QWORD *)v93;
    v92[1] = *((_QWORD *)v93 + 1);
    v98 = v94[6];
    v99 = (char *)v92 + v98;
    v212 = &v93[v98];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58(v99, v212, v219);
    v100 = v94[7];
    v101 = (_QWORD *)((char *)v92 + v100);
    v102 = &v93[v100];
    *v101 = *(_QWORD *)v102;
    v101[1] = *((_QWORD *)v102 + 1);
    v103 = v94[8];
    v104 = (char *)v92 + v103;
    v105 = &v93[v103];
    v106 = *((_WORD *)v105 + 4);
    *(_QWORD *)v104 = *(_QWORD *)v105;
    *((_WORD *)v104 + 4) = v106;
    v107 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v95 + 56);
    swift_bridgeObjectRetain();
    v107(v92, 0, 1, v94);
  }
  a3 = v215;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v217 + 56))(v16, 0, 1, v18);
  a2 = v213;
LABEL_26:
  v108 = a3[8];
  v109 = (_QWORD *)(a1 + v108);
  v110 = (_QWORD *)(a2 + v108);
  *v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244ABACA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v43;
  int *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  unsigned int (*v47)(char *, uint64_t, uint64_t);

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[7];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v44 = a3;
    v45 = v13;
    v7((uint64_t)v10, (uint64_t)v11, v6);
    v15 = v12[5];
    v43 = v10;
    v16 = &v10[v15];
    v17 = &v11[v15];
    v18 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
    v19 = *(_QWORD *)(v18 - 8);
    v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v46 = (void (*)(char *, char *, uint64_t))v7;
    if (v47(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v16, (uint64_t)v17, v6);
      *(_OWORD *)&v16[*(int *)(v18 + 20)] = *(_OWORD *)&v17[*(int *)(v18 + 20)];
      *(_OWORD *)&v16[*(int *)(v18 + 24)] = *(_OWORD *)&v17[*(int *)(v18 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = v12[6];
    v22 = &v43[v21];
    v23 = &v11[v21];
    a3 = v44;
    if (v47(&v11[v21], 1, v18))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v46(v22, v23, v6);
      *(_OWORD *)&v22[*(int *)(v18 + 20)] = *(_OWORD *)&v23[*(int *)(v18 + 20)];
      *(_OWORD *)&v22[*(int *)(v18 + 24)] = *(_OWORD *)&v23[*(int *)(v18 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
    }
    v25 = v12[7];
    v26 = &v43[v25];
    v27 = &v11[v25];
    if (v47(&v11[v25], 1, v18))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v46(v26, v27, v6);
      *(_OWORD *)&v26[*(int *)(v18 + 20)] = *(_OWORD *)&v27[*(int *)(v18 + 20)];
      *(_OWORD *)&v26[*(int *)(v18 + 24)] = *(_OWORD *)&v27[*(int *)(v18 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
    }
    v29 = v12[8];
    v30 = &v43[v29];
    v31 = &v11[v29];
    if (v47(&v11[v29], 1, v18))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v46(v30, v31, v6);
      *(_OWORD *)&v30[*(int *)(v18 + 20)] = *(_OWORD *)&v31[*(int *)(v18 + 20)];
      *(_OWORD *)&v30[*(int *)(v18 + 24)] = *(_OWORD *)&v31[*(int *)(v18 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v30, 0, 1, v18);
    }
    *(_OWORD *)&v43[v12[9]] = *(_OWORD *)&v11[v12[9]];
    v33 = v12[10];
    v34 = &v43[v33];
    v35 = &v11[v33];
    v36 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    v37 = *((_QWORD *)v36 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v46(&v34[v36[6]], &v35[v36[6]], v6);
      *(_OWORD *)&v34[v36[7]] = *(_OWORD *)&v35[v36[7]];
      v39 = v36[8];
      v40 = &v34[v39];
      v41 = &v35[v39];
      *((_WORD *)v40 + 4) = *((_WORD *)v41 + 4);
      *(_QWORD *)v40 = *(_QWORD *)v41;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v45 + 56))(v43, 0, 1, v12);
  }
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_244ABB0EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t (*v23)(char *, uint64_t, int *);
  char *v24;
  int v25;
  int v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int *v101;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t, int *);
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t);
  void (*v161)(char *, char *, uint64_t);
  int *v162;
  int *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;

  v6 = sub_244AE3C0C();
  v168 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a1;
  v20 = (char *)(a1 + v18);
  v171 = a2;
  v21 = (char *)(a2 + v18);
  v22 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v166 = *((_QWORD *)v22 - 1);
  v23 = *(uint64_t (**)(char *, uint64_t, int *))(v166 + 48);
  v24 = v20;
  v25 = v23(v20, 1, v22);
  v170 = v22;
  v26 = v23(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v162 = a3;
      v27 = *(void (**)(char *, char *, uint64_t))(v168 + 32);
      v27(v24, v21, v6);
      v28 = v22[5];
      v29 = &v24[v28];
      v30 = v6;
      v31 = &v21[v28];
      v32 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v164 = v30;
      v169 = v33;
      if (v34(v31, 1, v32))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v29, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v27(v29, v31, v30);
        *(_OWORD *)&v29[*(int *)(v32 + 20)] = *(_OWORD *)&v31[*(int *)(v32 + 20)];
        *(_OWORD *)&v29[*(int *)(v32 + 24)] = *(_OWORD *)&v31[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      }
      v47 = v170[6];
      v48 = &v24[v47];
      v49 = &v21[v47];
      v38 = v171;
      v37 = v19;
      if (v34(&v21[v47], 1, v32))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v27(v48, v49, v164);
        *(_OWORD *)&v48[*(int *)(v32 + 20)] = *(_OWORD *)&v49[*(int *)(v32 + 20)];
        *(_OWORD *)&v48[*(int *)(v32 + 24)] = *(_OWORD *)&v49[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v48, 0, 1, v32);
      }
      v51 = v170[7];
      v52 = &v24[v51];
      v53 = &v21[v51];
      if (v34(&v21[v51], 1, v32))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        v27(v52, v53, v164);
        *(_OWORD *)&v52[*(int *)(v32 + 20)] = *(_OWORD *)&v53[*(int *)(v32 + 20)];
        *(_OWORD *)&v52[*(int *)(v32 + 24)] = *(_OWORD *)&v53[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v52, 0, 1, v32);
      }
      v55 = v170[8];
      v56 = &v24[v55];
      v57 = &v21[v55];
      v160 = v27;
      if (v34(&v21[v55], 1, v32))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v27(v56, v57, v164);
        *(_OWORD *)&v56[*(int *)(v32 + 20)] = *(_OWORD *)&v57[*(int *)(v32 + 20)];
        *(_OWORD *)&v56[*(int *)(v32 + 24)] = *(_OWORD *)&v57[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v56, 0, 1, v32);
      }
      *(_OWORD *)&v24[v170[9]] = *(_OWORD *)&v21[v170[9]];
      v59 = v170[10];
      v60 = &v24[v59];
      v61 = &v21[v59];
      v62 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
      v63 = *((_QWORD *)v62 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v61, 1, v62))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v60 = *(_OWORD *)v61;
        v160(&v60[v62[6]], &v61[v62[6]], v164);
        *(_OWORD *)&v60[v62[7]] = *(_OWORD *)&v61[v62[7]];
        v65 = v62[8];
        v66 = &v60[v65];
        v67 = &v61[v65];
        *((_WORD *)v66 + 4) = *((_WORD *)v67 + 4);
        *(_QWORD *)v66 = *(_QWORD *)v67;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v63 + 56))(v60, 0, 1, v62);
      }
      a3 = v162;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v166 + 56))(v24, 0, 1, v170);
      goto LABEL_25;
    }
LABEL_7:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    v37 = v19;
    v38 = v171;
    goto LABEL_25;
  }
  v161 = (void (*)(char *, char *, uint64_t))v7;
  if (v26)
  {
    sub_244A729C0((uint64_t)v20, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    goto LABEL_7;
  }
  v163 = a3;
  v165 = v6;
  v7((uint64_t)v20, (uint64_t)v21, v6);
  v39 = v22[5];
  v40 = &v20[v39];
  v167 = v21;
  v41 = &v21[v39];
  v42 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v159 = *(_QWORD *)(v42 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v159 + 48);
  v44 = v43(v40, 1, v42);
  v45 = v42;
  v46 = v43(v41, 1, v42);
  if (v44)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v40, v41, v165);
      *(_OWORD *)&v40[*(int *)(v42 + 20)] = *(_OWORD *)&v41[*(int *)(v42 + 20)];
      *(_OWORD *)&v40[*(int *)(v42 + 24)] = *(_OWORD *)&v41[*(int *)(v42 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v40, 0, 1, v42);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v46)
  {
    sub_244A729C0((uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_28:
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_29;
  }
  v161(v40, v41, v165);
  v111 = *(int *)(v42 + 20);
  v112 = &v40[v111];
  v113 = &v41[v111];
  v115 = *(_QWORD *)v113;
  v114 = *((_QWORD *)v113 + 1);
  *(_QWORD *)v112 = v115;
  *((_QWORD *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  v116 = *(int *)(v42 + 24);
  v117 = &v40[v116];
  v118 = &v41[v116];
  v120 = *(_QWORD *)v118;
  v119 = *((_QWORD *)v118 + 1);
  *(_QWORD *)v117 = v120;
  *((_QWORD *)v117 + 1) = v119;
  swift_bridgeObjectRelease();
LABEL_29:
  v37 = v19;
  v75 = v22[6];
  v76 = &v20[v75];
  v77 = &v167[v75];
  v78 = v43(&v20[v75], 1, v45);
  v79 = v43(v77, 1, v45);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v76, v77, v165);
      *(_OWORD *)&v76[*(int *)(v45 + 20)] = *(_OWORD *)&v77[*(int *)(v45 + 20)];
      *(_OWORD *)&v76[*(int *)(v45 + 24)] = *(_OWORD *)&v77[*(int *)(v45 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v76, 0, 1, v45);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v79)
  {
    sub_244A729C0((uint64_t)v76, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_34:
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_35;
  }
  v161(v76, v77, v165);
  v121 = *(int *)(v45 + 20);
  v122 = &v76[v121];
  v123 = &v77[v121];
  v125 = *(_QWORD *)v123;
  v124 = *((_QWORD *)v123 + 1);
  *(_QWORD *)v122 = v125;
  *((_QWORD *)v122 + 1) = v124;
  swift_bridgeObjectRelease();
  v126 = *(int *)(v45 + 24);
  v127 = &v76[v126];
  v128 = &v77[v126];
  v130 = *(_QWORD *)v128;
  v129 = *((_QWORD *)v128 + 1);
  *(_QWORD *)v127 = v130;
  *((_QWORD *)v127 + 1) = v129;
  swift_bridgeObjectRelease();
LABEL_35:
  v81 = v22[7];
  v82 = &v20[v81];
  v83 = &v167[v81];
  v84 = v43(&v20[v81], 1, v45);
  v85 = v43(v83, 1, v45);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v82, v83, v165);
      *(_OWORD *)&v82[*(int *)(v45 + 20)] = *(_OWORD *)&v83[*(int *)(v45 + 20)];
      *(_OWORD *)&v82[*(int *)(v45 + 24)] = *(_OWORD *)&v83[*(int *)(v45 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v82, 0, 1, v45);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v85)
  {
    sub_244A729C0((uint64_t)v82, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_40:
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_41;
  }
  v161(v82, v83, v165);
  v131 = *(int *)(v45 + 20);
  v132 = &v82[v131];
  v133 = &v83[v131];
  v135 = *(_QWORD *)v133;
  v134 = *((_QWORD *)v133 + 1);
  *(_QWORD *)v132 = v135;
  *((_QWORD *)v132 + 1) = v134;
  swift_bridgeObjectRelease();
  v136 = *(int *)(v45 + 24);
  v137 = &v82[v136];
  v138 = &v83[v136];
  v140 = *(_QWORD *)v138;
  v139 = *((_QWORD *)v138 + 1);
  *(_QWORD *)v137 = v140;
  *((_QWORD *)v137 + 1) = v139;
  swift_bridgeObjectRelease();
LABEL_41:
  v87 = v22[8];
  v88 = &v20[v87];
  v89 = &v167[v87];
  v90 = v43(&v20[v87], 1, v45);
  v91 = v43(v89, 1, v45);
  if (v90)
  {
    if (!v91)
    {
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v88, v89, v165);
      *(_OWORD *)&v88[*(int *)(v45 + 20)] = *(_OWORD *)&v89[*(int *)(v45 + 20)];
      *(_OWORD *)&v88[*(int *)(v45 + 24)] = *(_OWORD *)&v89[*(int *)(v45 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v88, 0, 1, v45);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v91)
  {
    sub_244A729C0((uint64_t)v88, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_46:
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_47;
  }
  v161(v88, v89, v165);
  v141 = *(int *)(v45 + 20);
  v142 = &v88[v141];
  v143 = &v89[v141];
  v145 = *(_QWORD *)v143;
  v144 = *((_QWORD *)v143 + 1);
  *(_QWORD *)v142 = v145;
  *((_QWORD *)v142 + 1) = v144;
  swift_bridgeObjectRelease();
  v146 = *(int *)(v45 + 24);
  v147 = &v88[v146];
  v148 = &v89[v146];
  v150 = *(_QWORD *)v148;
  v149 = *((_QWORD *)v148 + 1);
  *(_QWORD *)v147 = v150;
  *((_QWORD *)v147 + 1) = v149;
  swift_bridgeObjectRelease();
LABEL_47:
  v93 = v22[9];
  v94 = &v20[v93];
  v95 = &v167[v93];
  v97 = *(_QWORD *)v95;
  v96 = *((_QWORD *)v95 + 1);
  *(_QWORD *)v94 = v97;
  *((_QWORD *)v94 + 1) = v96;
  swift_bridgeObjectRelease();
  v98 = v22[10];
  v99 = &v20[v98];
  v100 = &v167[v98];
  v101 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v102 = *((_QWORD *)v101 - 1);
  v103 = *(uint64_t (**)(char *, uint64_t, int *))(v102 + 48);
  v104 = v103(v99, 1, v101);
  v105 = v103(v100, 1, v101);
  a3 = v163;
  if (v104)
  {
    v38 = v171;
    if (v105)
    {
      v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v99 = *(_OWORD *)v100;
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(&v99[v101[6]], &v100[v101[6]], v165);
      *(_OWORD *)&v99[v101[7]] = *(_OWORD *)&v100[v101[7]];
      v108 = v101[8];
      v109 = &v99[v108];
      v110 = &v100[v108];
      *((_WORD *)v109 + 4) = *((_WORD *)v110 + 4);
      *(_QWORD *)v109 = *(_QWORD *)v110;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v102 + 56))(v99, 0, 1, v101);
    }
  }
  else
  {
    if (v105)
    {
      sub_244A729C0((uint64_t)v99, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
      v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
      memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v99 = *(_QWORD *)v100;
      swift_bridgeObjectRelease();
      *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
      swift_bridgeObjectRelease();
      v161(&v99[v101[6]], &v100[v101[6]], v165);
      v151 = v101[7];
      v152 = &v99[v151];
      v153 = &v100[v151];
      v155 = *(_QWORD *)v153;
      v154 = *((_QWORD *)v153 + 1);
      *(_QWORD *)v152 = v155;
      *((_QWORD *)v152 + 1) = v154;
      swift_bridgeObjectRelease();
      v156 = v101[8];
      v157 = &v99[v156];
      v158 = &v100[v156];
      *(_QWORD *)v157 = *(_QWORD *)v158;
      *((_WORD *)v157 + 4) = *((_WORD *)v158 + 4);
    }
    v38 = v171;
  }
LABEL_25:
  v68 = a3[8];
  v69 = (_QWORD *)(v37 + v68);
  v70 = (uint64_t *)(v38 + v68);
  v72 = *v70;
  v71 = v70[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_244ABBBF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ABBC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v11);
  }
}

uint64_t sub_244ABBCC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ABBCCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_244AE3C0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_244ABBD78()
{
  unint64_t v0;
  unint64_t v1;

  sub_244AE3C0C();
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, &qword_2573D07A8, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_244ABBE18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a2, 1, v7))
    {
      v10 = (char *)&loc_244ABBEE4 + 4 * byte_244AE5B32[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_244ABCB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v5 = sub_244AE3C0C();
        v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
        v6(a1, v5);
        v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = a1 + *(int *)(v7 + 28);
        v9 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
        {
          v6(v8, v5);
          v10 = v8 + v9[5];
          v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
          v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
          if (!v12(v10, 1, v11))
          {
            v6(v10, v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v13 = v8 + v9[6];
          if (!v12(v13, 1, v11))
          {
            v6(v13, v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v14 = v8 + v9[7];
          if (!v12(v14, 1, v11))
          {
            v6(v14, v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v15 = v8 + v9[8];
          if (!v12(v15, 1, v11))
          {
            v6(v15, v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v16 = v8 + v9[10];
          v17 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v6(v16 + *(int *)(v17 + 24), v5);
            swift_bridgeObjectRelease();
          }
        }
        goto LABEL_30;
      case 1u:
        v18 = sub_244AE3C0C();
        v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
        v19(a1, v18);
        v20 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
        swift_bridgeObjectRelease();
        v21 = a1 + *(int *)(v20 + 24);
        v22 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
        {
          v19(v21, v18);
          swift_release();
        }
        break;
      case 2u:
        v23 = sub_244AE3C0C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
        type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
        swift_bridgeObjectRelease();
        goto LABEL_30;
      case 3u:
        v24 = sub_244AE3C0C();
        v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
        v25(a1, v24);
        v26 = a1
            + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0)
                     + 20);
        v27 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v27 - 1) + 48))(v26, 1, v27))
          break;
        v25(v26, v24);
        v28 = v26 + v27[5];
        v29 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
        v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48);
        if (!v30(v28, 1, v29))
        {
          v25(v28, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v31 = v26 + v27[6];
        if (!v30(v31, 1, v29))
        {
          v25(v31, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v32 = v26 + v27[7];
        if (!v30(v32, 1, v29))
        {
          v25(v32, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v33 = v26 + v27[8];
        if (!v30(v33, 1, v29))
        {
          v25(v33, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v34 = v26 + v27[10];
        v35 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25(v34 + *(int *)(v35 + 24), v24);
LABEL_30:
        swift_bridgeObjectRelease();
        break;
      case 4u:
        v36 = sub_244AE3C0C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(a1, v36);
        type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse(0);
        goto LABEL_30;
      default:
        break;
    }
  }
  v37 = a1 + *(int *)(a2 + 20);
  v38 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
}

char *sub_244ABD118(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_244ABD1B8 + 4 * byte_244AE5B42[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_244ABDDEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_244ABDE80 + 4 * word_244AE5B48[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v12 = (char *)&loc_244ABDFD0 + 4 * word_244AE5B52[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

char *sub_244ABF8A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a2, 1, v5))
  {
    v7 = (char *)&loc_244ABF940 + 4 * byte_244AE5B5C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_244AC036C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_244AC0400 + 4 * byte_244AE5B61[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
    v12 = (char *)&loc_244AC0518 + 4 * word_244AE5B66[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_244AC1878()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC1884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_13Tm(a1, a2, a3, &qword_2573CFF38);
}

uint64_t sub_244AC1890()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC189C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_14Tm(a1, a2, a3, a4, &qword_2573CFF38);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D1530);
}

void sub_244AC18BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_244ADAB88(a1, a2, a3, qword_2573D1540, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
}

char *sub_244AC18D0(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = &a1[v9];
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *(_QWORD *)v11 = *v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = &a1[v10];
    v15 = (char *)a2 + v10;
    v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v8(v14, v15, v7);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
      swift_retain();
      v21(v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_244AC1A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_244AE3C0C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_244AC1ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (char *)(a1 + v9);
  v14 = (char *)(a2 + v9);
  v15 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
    v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
    swift_retain();
    v19(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_244AC1BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      v8((uint64_t)v13, (uint64_t)v14, v6);
      *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_244A729C0((uint64_t)v13, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
  swift_retain();
  v20(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_244AC1D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_QWORD *)&v9[*(int *)(v11 + 20)] = *(_QWORD *)&v10[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_244AC1E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 24);
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      v8((uint64_t)v15, (uint64_t)v16, v6);
      *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
      swift_release();
      return a1;
    }
    sub_244A729C0((uint64_t)v15, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
  *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t sub_244AC1FBC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC1FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v11);
  }
}

uint64_t sub_244AC2084()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC2090(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_244AE3C0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_244AC213C()
{
  unint64_t v0;
  unint64_t v1;

  sub_244AE3C0C();
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, qword_2573D15D8, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_244AC21D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_244AC2260(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_244AC22A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_244AC2304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_244AC2370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_244AC23CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_244AC2430()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_244AC24BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244AE3C0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t *sub_244AC2544(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_244AE3C0C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_244AC25F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_244AC2648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_244AC26D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_244AC276C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_244AC27C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_244AC2844()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC2850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_244AC28CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC28D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_244AE3C0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_244AC294C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244AC29DC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_WORD *)v10 + 4) = *((_WORD *)v11 + 4);
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (char *)a1 + v16;
    v21 = (char *)a2 + v16;
    *(_DWORD *)v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_244AC2ABC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244AC2B14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a1 + v15;
  v20 = a2 + v15;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_244AC2BC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  int v20;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_WORD *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_WORD *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = (int *)(a2 + v17);
  v20 = *v19;
  *(_BYTE *)(v18 + 4) = *((_BYTE *)v19 + 4);
  *(_DWORD *)v18 = v20;
  return a1;
}

uint64_t sub_244AC2CA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  return a1;
}

uint64_t sub_244AC2D40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  return a1;
}

uint64_t sub_244AC2DFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC2E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_244AC2E94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AC2EA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244AE3C0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t sub_244AC2F1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_244AC2FA8()
{
  unint64_t result;

  result = qword_2573D17D8;
  if (!qword_2573D17D8)
  {
    result = MEMORY[0x24951E280](&unk_244AE6048, &type metadata for Apple_Cloudml_Inference_Tie_ModelConfig.LLMPreprocessing);
    atomic_store(result, (unint64_t *)&qword_2573D17D8);
  }
  return result;
}

unint64_t sub_244AC2FF0()
{
  unint64_t result;

  result = qword_2573D17E0;
  if (!qword_2573D17E0)
  {
    result = MEMORY[0x24951E280](&unk_244AE6070, &type metadata for Apple_Cloudml_Inference_Tie_ModelConfig.LLMPreprocessing);
    atomic_store(result, (unint64_t *)&qword_2573D17E0);
  }
  return result;
}

unint64_t sub_244AC3038()
{
  unint64_t result;

  result = qword_2573D17E8;
  if (!qword_2573D17E8)
  {
    result = MEMORY[0x24951E280](&unk_244AE60B0, &type metadata for Apple_Cloudml_Inference_Tie_ModelConfig.LLMPreprocessing);
    atomic_store(result, (unint64_t *)&qword_2573D17E8);
  }
  return result;
}

uint64_t sub_244AC307C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC30B0(a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo._StorageClass, (uint64_t (*)(uint64_t))sub_244AAAC80, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_244AC3190);
}

uint64_t sub_244AC30B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v14 = swift_retain();
    *(_QWORD *)(v7 + v13) = a6(v14);
    swift_release();
  }
  v15 = swift_retain();
  a7(v15, a1, a2, a3);
  return swift_release();
}

uint64_t sub_244AC3190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t (*v16)(uint64_t);
  unint64_t *v17;
  void *v18;

  result = sub_244AE3C54();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_244AC3340();
          break;
        case 2:
          sub_244AC33BC();
          break;
        case 3:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
          v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics;
          v17 = (unint64_t *)&unk_2573D19B8;
          v18 = &unk_244AE75F8;
          goto LABEL_5;
        case 4:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo;
          v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo;
          v17 = &qword_2573D1938;
          v18 = &unk_244AE7058;
          goto LABEL_5;
        case 5:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
          v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics;
          v17 = (unint64_t *)&unk_2573D1998;
          v18 = &unk_244AE7490;
          goto LABEL_5;
        case 6:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
          v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics;
          v17 = (unint64_t *)&unk_2573D1978;
          v18 = &unk_244AE7328;
LABEL_5:
          sub_244AC3438(v11, v12, v13, v14, (uint64_t)v15, v16, v17, (uint64_t)v18);
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC3340()
{
  swift_beginAccess();
  sub_244AE3CD8();
  return swift_endAccess();
}

uint64_t sub_244AC33BC()
{
  swift_beginAccess();
  sub_244AE3CD8();
  return swift_endAccess();
}

uint64_t sub_244AC3438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  swift_beginAccess();
  a6(0);
  sub_244A7DAA8(a7, a6, a8);
  sub_244AE3D20();
  return swift_endAccess();
}

uint64_t sub_244AC34FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC3520(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_244AC35B4);
}

uint64_t sub_244AC3520(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t result;

  a4(0);
  v10 = swift_retain();
  a5(v10, a1, a2, a3);
  result = swift_release();
  if (!v5)
    return sub_244AE3BF4();
  return result;
}

uint64_t sub_244AC35B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = sub_244AC3660(a1);
  if (!v4)
  {
    sub_244AC36FC(a1);
    sub_244AC3798(a1, a2, a3, a4);
    sub_244AC3924(a1, a2, a3, a4);
    sub_244AC3AB0(a1, a2, a3, a4);
    return sub_244AC3C3C(a1, a2, a3, a4);
  }
  return result;
}

uint64_t sub_244AC3660(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRetain();
    sub_244AE3DD4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244AC36FC(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 40))
  {
    swift_bridgeObjectRetain();
    sub_244AE3DD4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244AC3798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
  swift_beginAccess();
  sub_244A7284C(v12, (uint64_t)v7, &qword_2573CF9E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF9E0);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
  sub_244A7DAA8(&qword_2573D19B8, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE75F8);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
}

uint64_t sub_244AC3924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo;
  swift_beginAccess();
  sub_244A7284C(v12, (uint64_t)v7, &qword_2573CFF30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CFF30);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
  sub_244A7DAA8(&qword_2573D1938, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE7058);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
}

uint64_t sub_244AC3AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
  swift_beginAccess();
  sub_244A7284C(v12, (uint64_t)v7, &qword_2573CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF9E8);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
  sub_244A7DAA8(&qword_2573D1998, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE7490);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
}

uint64_t sub_244AC3C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
  swift_beginAccess();
  sub_244A7284C(v12, (uint64_t)v7, &qword_2573CF9C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF9C8);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
  sub_244A7DAA8(&qword_2573D1978, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE7328);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
}

uint64_t sub_244AC3DC8(uint64_t a1, uint64_t a2)
{
  return sub_244AD4050(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t (*)(uint64_t, uint64_t))sub_244AC3DF0) & 1;
}

BOOL sub_244AC3DF0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  _BOOL8 result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  int v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  int v79;
  uint64_t *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t *v91;
  char v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  v97 = *(_QWORD *)(v4 - 8);
  v98 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v94 = (uint64_t *)((char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1D18);
  MEMORY[0x24BDAC7A8](v96);
  v99 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9C8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v106 = (uint64_t *)((char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v105 = (char *)&v93 - v10;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  v102 = *(_QWORD *)(v11 - 8);
  v103 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v95 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1D20);
  MEMORY[0x24BDAC7A8](v101);
  v104 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v108 = (uint64_t)&v93 - v17;
  v113 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v111 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v100 = (uint64_t)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CF8);
  MEMORY[0x24BDAC7A8](v110);
  v114 = (uint64_t)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v107 = (uint64_t)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v112 = (uint64_t)&v93 - v23;
  v24 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v109 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1D28);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9E0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v115 = (uint64_t *)((char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v93 - v33;
  swift_beginAccess();
  v117 = a1;
  v36 = *(_QWORD *)(a1 + 16);
  v35 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v37 = a2;
  v38 = a2[3];
  if (!v35)
  {
    if (v38)
      return 0;
    goto LABEL_8;
  }
  if (!v38)
    return 0;
  if (v36 == a2[2] && v35 == v38 || (v39 = sub_244AE44DC(), result = 0, (v39 & 1) != 0))
  {
LABEL_8:
    v41 = v117;
    swift_beginAccess();
    v42 = *(_QWORD *)(v41 + 32);
    v43 = *(_QWORD *)(v41 + 40);
    swift_beginAccess();
    v44 = a2[5];
    if (v43)
    {
      if (!v44)
        return 0;
      if (v42 != a2[4] || v43 != v44)
      {
        v45 = sub_244AE44DC();
        result = 0;
        if ((v45 & 1) == 0)
          return result;
      }
    }
    else if (v44)
    {
      return 0;
    }
    v46 = v117
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    sub_244A7284C(v46, (uint64_t)v34, &qword_2573CF9E0);
    v47 = (uint64_t)a2
        + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__perfMetrics;
    swift_beginAccess();
    v48 = (uint64_t)&v29[*(int *)(v27 + 48)];
    sub_244A7284C((uint64_t)v34, (uint64_t)v29, &qword_2573CF9E0);
    sub_244A7284C(v47, v48, &qword_2573CF9E0);
    v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (v49((uint64_t)v29, 1, v24) == 1)
    {
      v50 = v117;
      swift_retain();
      swift_retain();
      sub_244A72890((uint64_t)v34, &qword_2573CF9E0);
      v51 = v49(v48, 1, v24);
      v52 = a2;
      v53 = v50;
      if (v51 == 1)
      {
        sub_244A72890((uint64_t)v29, &qword_2573CF9E0);
        v54 = (uint64_t)v116;
        goto LABEL_22;
      }
    }
    else
    {
      v55 = v115;
      sub_244A7284C((uint64_t)v29, (uint64_t)v115, &qword_2573CF9E0);
      v56 = v49(v48, 1, v24);
      v57 = v116;
      if (v56 != 1)
      {
        v60 = v109;
        sub_244A729FC(v48, (uint64_t)v109, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v53 = v117;
        swift_retain();
        swift_retain();
        v61 = sub_244AD2880(v55, v60);
        sub_244A729C0((uint64_t)v60, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        sub_244A72890((uint64_t)v34, &qword_2573CF9E0);
        v62 = (uint64_t)v55;
        v54 = (uint64_t)v57;
        sub_244A729C0(v62, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
        v52 = v37;
        sub_244A72890((uint64_t)v29, &qword_2573CF9E0);
        if ((v61 & 1) == 0)
          goto LABEL_37;
LABEL_22:
        v63 = v53
            + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo;
        swift_beginAccess();
        v64 = v112;
        sub_244A7284C(v63, v112, &qword_2573CFF30);
        v65 = (uint64_t)v52
            + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceEnvironmentInfo;
        swift_beginAccess();
        v66 = v114;
        v67 = v114 + *(int *)(v110 + 48);
        sub_244A7284C(v64, v114, &qword_2573CFF30);
        sub_244A7284C(v65, v67, &qword_2573CFF30);
        v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
        v69 = v113;
        if (v68(v66, 1, v113) == 1)
        {
          sub_244A72890(v64, &qword_2573CFF30);
          if (v68(v67, 1, v69) == 1)
          {
            sub_244A72890(v66, &qword_2573CFF30);
LABEL_29:
            v73 = v53
                + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
            swift_beginAccess();
            v74 = v108;
            sub_244A7284C(v73, v108, &qword_2573CF9E8);
            v75 = (uint64_t)v52
                + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__speculativeDecodingMetrics;
            swift_beginAccess();
            v66 = v104;
            v76 = v104 + *(int *)(v101 + 48);
            sub_244A7284C(v74, v104, &qword_2573CF9E8);
            sub_244A7284C(v75, v76, &qword_2573CF9E8);
            v77 = v103;
            v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
            if (v78(v66, 1, v103) == 1)
            {
              sub_244A72890(v74, &qword_2573CF9E8);
              v79 = v78(v76, 1, v77);
              v81 = (uint64_t)v105;
              v80 = v106;
              if (v79 == 1)
              {
                sub_244A72890(v66, &qword_2573CF9E8);
LABEL_41:
                v85 = v53
                    + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
                swift_beginAccess();
                sub_244A7284C(v85, v81, &qword_2573CF9C8);
                v86 = (uint64_t)v52
                    + OBJC_IVAR____TtCVVV15PrivateMLClient44Apple_Cloudml_Inference_Tie_GenerateResponse13FinalResponse9DebugInfoP33_CD5DC485B54DF4FF6F4BE768FEF8257713_StorageClass__inferenceMetrics;
                swift_beginAccess();
                v87 = v99;
                v88 = v99 + *(int *)(v96 + 48);
                sub_244A7284C(v81, v99, &qword_2573CF9C8);
                sub_244A7284C(v86, v88, &qword_2573CF9C8);
                v89 = v98;
                v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
                if (v90(v87, 1, v98) == 1)
                {
                  swift_release();
                  swift_release();
                  sub_244A72890(v81, &qword_2573CF9C8);
                  if (v90(v88, 1, v89) == 1)
                  {
                    sub_244A72890(v87, &qword_2573CF9C8);
                    return 1;
                  }
                  goto LABEL_46;
                }
                sub_244A7284C(v87, (uint64_t)v80, &qword_2573CF9C8);
                if (v90(v88, 1, v89) == 1)
                {
                  swift_release();
                  swift_release();
                  sub_244A72890(v81, &qword_2573CF9C8);
                  sub_244A729C0((uint64_t)v80, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
LABEL_46:
                  sub_244A72890(v87, &qword_2573D1D18);
                  return 0;
                }
                v91 = v94;
                sub_244A729FC(v88, (uint64_t)v94, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
                v92 = sub_244AD4C08(v80, v91);
                swift_release();
                swift_release();
                sub_244A729C0((uint64_t)v91, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
                sub_244A72890(v81, &qword_2573CF9C8);
                sub_244A729C0((uint64_t)v80, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
                sub_244A72890(v87, &qword_2573CF9C8);
                return (v92 & 1) != 0;
              }
              goto LABEL_34;
            }
            sub_244A7284C(v66, v54, &qword_2573CF9E8);
            v82 = v78(v76, 1, v77);
            v81 = (uint64_t)v105;
            v80 = v106;
            if (v82 == 1)
            {
              sub_244A72890(v108, &qword_2573CF9E8);
              sub_244A729C0(v54, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
LABEL_34:
              v58 = &qword_2573D1D20;
              goto LABEL_35;
            }
            v83 = v95;
            sub_244A729FC(v76, v95, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
            v84 = sub_244AD0980(v54, v83);
            sub_244A729C0(v83, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
            sub_244A72890(v108, &qword_2573CF9E8);
            sub_244A729C0(v54, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
            sub_244A72890(v66, &qword_2573CF9E8);
            if ((v84 & 1) != 0)
              goto LABEL_41;
LABEL_37:
            swift_release();
            swift_release();
            return 0;
          }
        }
        else
        {
          v70 = v107;
          sub_244A7284C(v66, v107, &qword_2573CFF30);
          if (v68(v67, 1, v69) != 1)
          {
            v71 = v100;
            sub_244A729FC(v67, v100, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
            v72 = sub_244AD4EA4(v70, v71);
            sub_244A729C0(v71, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
            sub_244A72890(v64, &qword_2573CFF30);
            sub_244A729C0(v70, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
            sub_244A72890(v66, &qword_2573CFF30);
            if ((v72 & 1) == 0)
              goto LABEL_37;
            goto LABEL_29;
          }
          sub_244A72890(v64, &qword_2573CFF30);
          sub_244A729C0(v70, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
        }
        v58 = &qword_2573D1CF8;
LABEL_35:
        v59 = v66;
        goto LABEL_36;
      }
      swift_retain();
      swift_retain();
      sub_244A72890((uint64_t)v34, &qword_2573CF9E0);
      sub_244A729C0((uint64_t)v55, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    }
    v58 = &qword_2573D1D28;
    v59 = (uint64_t)v29;
LABEL_36:
    sub_244A72890(v59, v58);
    goto LABEL_37;
  }
  return result;
}

uint64_t sub_244AC49DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_244AC49F8(a1, &qword_2573CF858, &qword_2573D04C8, a2);
}

uint64_t sub_244AC49F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X2>, _QWORD *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;

  sub_244AE3C00();
  v8 = *(int *)(a1 + 20);
  if (*a2 != -1)
    swift_once();
  *(_QWORD *)(a4 + v8) = *a3;
  return swift_retain();
}

uint64_t sub_244AC4A60(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF848, &qword_2573DAC40);
}

uint64_t sub_244AC4A80()
{
  sub_244A7DAA8(&qword_2573D1D48, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE78B8);
  return sub_244AE3C3C();
}

uint64_t sub_244AC4AD0@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF850, (uint64_t)qword_2573DAC50, a1);
}

uint64_t sub_244AC4AEC()
{
  sub_244A7DAA8(&qword_2573D19F8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE78F0);
  return sub_244AE3D50();
}

uint64_t sub_244AC4B2C()
{
  sub_244A7DAA8(&qword_2573D19F8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE78F0);
  return sub_244AE3D68();
}

uint64_t sub_244AC4B7C()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAC68 = 0xD00000000000002CLL;
  unk_2573DAC70 = 0x8000000244AE9F70;
  return result;
}

uint64_t sub_244AC4BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAC78);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAC78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A70;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "status";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "status_message";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "status_domain";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "status_code";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC4DBC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_244AE3C54();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v4 = v3;
          sub_244AC4EC8();
          goto LABEL_5;
        case 2:
        case 3:
          type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
          v4 = v3;
          sub_244AE3CD8();
          goto LABEL_5;
        case 4:
          type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
          v4 = v3;
          sub_244AE3CA8();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC4EC8()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  sub_244AD6058();
  return sub_244AE3C78();
}

uint64_t sub_244AC4F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC5000(v3);
  if (!v4)
  {
    sub_244AC50A0(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    sub_244AC511C(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse);
    sub_244AC6188(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, MEMORY[0x24BE5C2A8]);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AC5000(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20) + 9) & 1) == 0)
  {
    sub_244AD6058();
    return sub_244AE3D98();
  }
  return result;
}

uint64_t sub_244AC50A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 24) + 8))
    return sub_244AE3DD4();
  return result;
}

uint64_t sub_244AC511C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 28) + 8))
    return sub_244AE3DD4();
  return result;
}

uint64_t sub_244AC5198@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  result = sub_244AE3C00();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_WORD *)(v6 + 8) = 256;
  *(_QWORD *)v6 = 0;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  v8 = a1[8];
  v9 = (_QWORD *)(a2 + a1[7]);
  *v9 = 0;
  v9[1] = 0;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

uint64_t sub_244AC51F4(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF860, &qword_2573DAC68);
}

uint64_t sub_244AC5214()
{
  return sub_244AC4DBC();
}

uint64_t sub_244AC5228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC4F3C(a1, a2, a3);
}

uint64_t sub_244AC523C()
{
  sub_244A7DAA8(&qword_2573D1D50, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7750);
  return sub_244AE3C3C();
}

uint64_t sub_244AC528C@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF868, (uint64_t)qword_2573DAC78, a1);
}

uint64_t sub_244AC52A8()
{
  sub_244A7DAA8(&qword_2573D19D8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7788);
  return sub_244AE3D50();
}

uint64_t sub_244AC52E8()
{
  sub_244A7DAA8(&qword_2573D19D8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7788);
  return sub_244AE3D68();
}

uint64_t sub_244AC533C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAC90);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAC90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5AB0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "NOT_SET";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "OK";
  *((_QWORD *)v11 + 1) = 2;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "ERROR";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC54C8@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF870, (uint64_t)qword_2573DAC90, a1);
}

uint64_t sub_244AC54E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DACA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DACA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5AB0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "metric_name";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "metric_nanos";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "child_metrics";
  *(_QWORD *)(v12 + 8) = 13;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC5678()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_244AE3C54();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v4 = v3;
        sub_244AE3D08();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v4 = v3;
        sub_244AE3CE4();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_244AE3C54();
    }
    type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
    sub_244A7DAA8(&qword_2573D19B8, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE75F8);
    v4 = v3;
    sub_244AE3D14();
LABEL_5:
    v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_244AC5798()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_244AE3DD4(), !v1))
  {
    if (!v0[2] || (result = sub_244AE3DEC(), !v1))
    {
      if (!*(_QWORD *)(v0[3] + 16)
        || (type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0),
            sub_244A7DAA8(&qword_2573D19B8, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE75F8), result = sub_244AE3DF8(), !v1))
      {
        type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
        return sub_244AE3BF4();
      }
    }
  }
  return result;
}

uint64_t sub_244AC58CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0;
  a1[1] = 0xE000000000000000;
  v1 = MEMORY[0x24BEE4AF8];
  a1[2] = 0;
  a1[3] = v1;
  return sub_244AE3C00();
}

unint64_t sub_244AC58FC()
{
  return 0xD000000000000027;
}

uint64_t sub_244AC5918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_244AC5958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_244AC5998())()
{
  return nullsub_1;
}

uint64_t sub_244AC59AC()
{
  return sub_244AC5678();
}

uint64_t sub_244AC59C0()
{
  return sub_244AC5798();
}

uint64_t sub_244AC59D4()
{
  sub_244A7DAA8(&qword_2573D1D60, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE75C0);
  return sub_244AE3C3C();
}

uint64_t sub_244AC5A24@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF878, (uint64_t)qword_2573DACA8, a1);
}

uint64_t sub_244AC5A40()
{
  sub_244A7DAA8(&qword_2573D19B8, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE75F8);
  return sub_244AE3D50();
}

uint64_t sub_244AC5A80()
{
  sub_244A7DAA8(&qword_2573D19B8, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE75F8);
  return sub_244AE3D68();
}

uint64_t sub_244AC5AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DACC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DACC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A80;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "speculative_decoding_acceptance_rate";
  *(_QWORD *)(v7 + 8) = 36;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "draft_model_inference_call_count";
  *(_QWORD *)(v11 + 8) = 32;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "target_model_inference_call_count";
  *((_QWORD *)v13 + 1) = 33;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "draft_output_token_count";
  *((_QWORD *)v15 + 1) = 24;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "target_output_token_count";
  *((_QWORD *)v17 + 1) = 25;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "draft_model_total_inference_latency_millis";
  *((_QWORD *)v19 + 1) = 42;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "target_model_total_inference_latency_millis";
  *((_QWORD *)v21 + 1) = 43;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "draft_steps";
  *((_QWORD *)v23 + 1) = 11;
  v23[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC5D78()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_244AE3C54();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
          v4 = v3;
          sub_244AE3C9C();
          goto LABEL_8;
        case 2:
        case 3:
        case 4:
        case 5:
        case 8:
          type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
          v4 = v3;
          sub_244AE3CF0();
          goto LABEL_8;
        case 6:
        case 7:
          type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
          v4 = v3;
          sub_244AE3CFC();
LABEL_8:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC5ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC601C(v3);
  if (!v4)
  {
    sub_244AC6090(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
    sub_244AC610C(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
    sub_244AC6188(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C2F0]);
    sub_244AC6200(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
    sub_244AC6B04(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics);
    sub_244AC6B80(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, 7, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C2F8]);
    sub_244AC627C(v3);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AC601C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20) + 4) & 1) == 0)
    return sub_244AE3DB0();
  return result;
}

uint64_t sub_244AC6090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 24) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AC610C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 28) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AC6188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  unsigned int *v11;

  result = a5(0);
  v11 = (unsigned int *)(a1 + *(int *)(result + 32));
  if ((v11[1] & 1) == 0)
    return a6(*v11, 4, a3, a4);
  return result;
}

uint64_t sub_244AC6200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AC627C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AC62F4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_244AE3C00();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + v11;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a1[12];
  v15 = a2 + a1[11];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = a2 + v14;
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  return result;
}

unint64_t sub_244AC638C()
{
  return 0xD000000000000036;
}

uint64_t sub_244AC63A8()
{
  return sub_244AC5D78();
}

uint64_t sub_244AC63BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC5ECC(a1, a2, a3);
}

uint64_t sub_244AC63D0()
{
  sub_244A7DAA8(&qword_2573D1D68, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE7458);
  return sub_244AE3C3C();
}

uint64_t sub_244AC6420@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF880, (uint64_t)qword_2573DACC0, a1);
}

uint64_t sub_244AC643C()
{
  sub_244A7DAA8(&qword_2573D1998, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE7490);
  return sub_244AE3D50();
}

uint64_t sub_244AC647C()
{
  sub_244A7DAA8(&qword_2573D1998, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE7490);
  return sub_244AE3D68();
}

uint64_t sub_244AC64D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DACD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DACD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A80;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "input_tokens_count";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "output_tokens_count";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "inference_only_total_latency_millis";
  *((_QWORD *)v13 + 1) = 35;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "cd_mask_creation_total_latency_millis";
  *((_QWORD *)v15 + 1) = 37;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "metallm_total_mesh_latency_millis";
  *((_QWORD *)v17 + 1) = 33;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "metallm_total_gpu_latency_millis";
  *((_QWORD *)v19 + 1) = 32;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "token_level_inference_metrics";
  *((_QWORD *)v21 + 1) = 29;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "cd_user_facing_mask_total_latency_millis";
  *((_QWORD *)v23 + 1) = 40;
  v23[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC6778()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_244AE3C54();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
          v4 = v3;
          sub_244AE3CF0();
          goto LABEL_8;
        case 3:
        case 4:
        case 5:
        case 6:
        case 8:
          type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
          v4 = v3;
          sub_244AE3CFC();
          goto LABEL_8;
        case 7:
          type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
          sub_244A7DAA8(&qword_2573D1958, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE71C0);
          v4 = v3;
          sub_244AE3D14();
LABEL_8:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC6908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC6090(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
  if (!v4)
  {
    sub_244AC610C(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
    sub_244AC74B8(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
    sub_244AC7534(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
    sub_244AC6B04(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics);
    sub_244AC6B80(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, 6, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C2F8]);
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
      sub_244A7DAA8(&qword_2573D1958, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE71C0);
      sub_244AE3DF8();
    }
    sub_244AC6C08(v3);
    type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AC6B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 40) + 8) & 1) == 0)
    return sub_244AE3DEC();
  return result;
}

uint64_t sub_244AC6B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v13;

  result = a5(0);
  v13 = a1 + *(int *)(result + 44);
  if ((*(_BYTE *)(v13 + 8) & 1) == 0)
    return a7(*(_QWORD *)v13, a6, a3, a4);
  return result;
}

uint64_t sub_244AC6C08(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 8) & 1) == 0)
    return sub_244AE3DEC();
  return result;
}

uint64_t sub_244AC6C80@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;

  *a2 = MEMORY[0x24BEE4AF8];
  result = sub_244AE3C00();
  v5 = a1[7];
  v6 = (char *)a2 + a1[6];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = a1[9];
  v9 = (char *)a2 + a1[8];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = (char *)a2 + v8;
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = a1[11];
  v12 = (char *)a2 + a1[10];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = (char *)a2 + a1[12];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  return result;
}

unint64_t sub_244AC6D20()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_244AC6D3C()
{
  return sub_244AC6778();
}

uint64_t sub_244AC6D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC6908(a1, a2, a3);
}

uint64_t sub_244AC6D64()
{
  sub_244A7DAA8(&qword_2573D1D70, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE72F0);
  return sub_244AE3C3C();
}

uint64_t sub_244AC6DB4@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF888, (uint64_t)qword_2573DACD8, a1);
}

uint64_t sub_244AC6DD0()
{
  sub_244A7DAA8(&qword_2573D1978, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE7328);
  return sub_244AE3D50();
}

uint64_t sub_244AC6E10()
{
  sub_244A7DAA8(&qword_2573D1978, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE7328);
  return sub_244AE3D68();
}

uint64_t sub_244AC6E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DACF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DACF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5AC0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "token_index";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "is_verified_draft_token";
  *(_QWORD *)(v11 + 8) = 23;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "inference_only_latency_nanos";
  *((_QWORD *)v13 + 1) = 28;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "cd_mask_creation_latency_nanos";
  *((_QWORD *)v15 + 1) = 30;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "metallm_mesh_latency_nanos";
  *((_QWORD *)v17 + 1) = 26;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "metallm_gpu_latency_nanos";
  *((_QWORD *)v19 + 1) = 25;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "cd_user_facing_mask_latency_nanos";
  *((_QWORD *)v21 + 1) = 33;
  v21[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC70C8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_244AE3C54();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
          sub_244AE3CF0();
          break;
        case 2:
          type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
          sub_244AE3C6C();
          break;
        case 3:
        case 4:
        case 5:
        case 6:
          type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
          sub_244AE3CFC();
          break;
        case 7:
          type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
          sub_244AE3CB4();
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC7238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC735C(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
  if (!v4)
  {
    sub_244AC73D0(v3);
    sub_244AC7444(v3);
    sub_244AC74B8(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
    sub_244AC7534(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
    sub_244AC6B04(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
    sub_244AC6B80(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, 7, MEMORY[0x24BE5C2B0]);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AC735C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20) + 4) & 1) == 0)
    return sub_244AE3DE0();
  return result;
}

uint64_t sub_244AC73D0(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 24)) != 2)
    return sub_244AE3D8C();
  return result;
}

uint64_t sub_244AC7444(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 28) + 8) & 1) == 0)
    return sub_244AE3DEC();
  return result;
}

uint64_t sub_244AC74B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 32) + 8) & 1) == 0)
    return sub_244AE3DEC();
  return result;
}

uint64_t sub_244AC7534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 8) & 1) == 0)
    return sub_244AE3DEC();
  return result;
}

uint64_t sub_244AC75B4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_244AE3C00();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  *(_BYTE *)(a2 + v5) = 2;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a2 + v7;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a2 + v10;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a2 + a1[11];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  return result;
}

unint64_t sub_244AC763C()
{
  return 0xD000000000000036;
}

uint64_t sub_244AC7658()
{
  return sub_244AC70C8();
}

uint64_t sub_244AC766C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC7238(a1, a2, a3);
}

uint64_t sub_244AC7680()
{
  sub_244A7DAA8(&qword_2573D1D78, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE7188);
  return sub_244AE3C3C();
}

uint64_t sub_244AC76D0@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF890, (uint64_t)qword_2573DACF0, a1);
}

uint64_t sub_244AC76EC()
{
  sub_244A7DAA8(&qword_2573D1958, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE71C0);
  return sub_244AE3D50();
}

uint64_t sub_244AC772C()
{
  sub_244A7DAA8(&qword_2573D1958, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE71C0);
  return sub_244AE3D68();
}

uint64_t sub_244AC7780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAD08);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAD08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5AA0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "base_model";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "adaptor";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "draft_model";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "tokenizer";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "cloudos_version";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "rendered_prompt";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC79C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_244AE3C54();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_244AC7B84(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, &qword_2573D1918, (uint64_t)&unk_244AE6EF0);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_244AC7C28(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, &qword_2573D1918, (uint64_t)&unk_244AE6EF0);
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_244AC7CCC(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, &qword_2573D1918, (uint64_t)&unk_244AE6EF0);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_244AC7D70(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, &qword_2573D1918, (uint64_t)&unk_244AE6EF0);
          goto LABEL_5;
        case 5:
          type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
          v12 = v11;
          sub_244AE3CD8();
          goto LABEL_5;
        case 6:
          v12 = v11;
          sub_244AC7E14();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC7B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_244A7DAA8(a7, a6, a8);
  return sub_244AE3D20();
}

uint64_t sub_244AC7C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_244A7DAA8(a7, a6, a8);
  return sub_244AE3D20();
}

uint64_t sub_244AC7CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_244A7DAA8(a7, a6, a8);
  return sub_244AE3D20();
}

uint64_t sub_244AC7D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_244A7DAA8(a7, a6, a8);
  return sub_244AE3D20();
}

uint64_t sub_244AC7E14()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  sub_244A7DAA8(&qword_2573D18F8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6D88);
  return sub_244AE3D20();
}

uint64_t sub_244AC7EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC7F74(v3, a1, a2, a3);
  if (!v4)
  {
    sub_244AC80E8(v3, a1, a2, a3);
    sub_244AC825C(v3, a1, a2, a3);
    sub_244AC83D0(v3, a1, a2, a3);
    sub_244AC8544(v3);
    sub_244AC85B8(v3, a1, a2, a3);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AC7F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  sub_244A7284C(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_2573CF9A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF9A0);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A7DAA8(&qword_2573D1918, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EF0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
}

uint64_t sub_244AC80E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  sub_244A7284C(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_2573CF9A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF9A0);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A7DAA8(&qword_2573D1918, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EF0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
}

uint64_t sub_244AC825C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  sub_244A7284C(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_2573CF9A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF9A0);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A7DAA8(&qword_2573D1918, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EF0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
}

uint64_t sub_244AC83D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  sub_244A7284C(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_2573CF9A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF9A0);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A7DAA8(&qword_2573D1918, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EF0);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
}

uint64_t sub_244AC8544(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 36) + 8))
    return sub_244AE3DD4();
  return result;
}

uint64_t sub_244AC85B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  sub_244A7284C(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_2573CF998);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_244A72890((uint64_t)v7, &qword_2573CF998);
  sub_244A729FC((uint64_t)v7, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
  sub_244A7DAA8(&qword_2573D18F8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6D88);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
}

uint64_t sub_244AC8730@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_244AE3C00();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a2 + a1[6], 1, 1, v5);
  v6(a2 + a1[7], 1, 1, v5);
  v6(a2 + a1[8], 1, 1, v5);
  v7 = a1[10];
  v8 = (_QWORD *)(a2 + a1[9]);
  *v8 = 0;
  v8[1] = 0;
  v9 = a2 + v7;
  v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
}

unint64_t sub_244AC880C()
{
  return 0xD000000000000034;
}

uint64_t sub_244AC8828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC79C4(a1, a2, a3);
}

uint64_t sub_244AC883C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC7EA8(a1, a2, a3);
}

uint64_t sub_244AC8850()
{
  sub_244A7DAA8(&qword_2573D1D80, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE7020);
  return sub_244AE3C3C();
}

uint64_t sub_244AC88A0@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF898, (uint64_t)qword_2573DAD08, a1);
}

uint64_t sub_244AC88BC()
{
  sub_244A7DAA8(&qword_2573D1938, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE7058);
  return sub_244AE3D50();
}

uint64_t sub_244AC88FC()
{
  sub_244A7DAA8(&qword_2573D1938, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE7058);
  return sub_244AE3D68();
}

uint64_t sub_244AC894C()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAD20 = 0xD000000000000034;
  *(_QWORD *)algn_2573DAD28 = 0x8000000244AEAAB0;
  return result;
}

uint64_t sub_244AC89B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAD30);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAD30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A90;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "version";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC8B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACC8FC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
}

uint64_t sub_244AC8B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACC9C8(a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
}

uint64_t sub_244AC8B40(uint64_t a1, uint64_t a2)
{
  return sub_244AD5EA8(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo) & 1;
}

uint64_t sub_244AC8B64(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF8A0, &qword_2573DAD20);
}

uint64_t sub_244AC8B84()
{
  sub_244A7DAA8(&qword_2573D1D88, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EB8);
  return sub_244AE3C3C();
}

uint64_t sub_244AC8BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF8A8, (uint64_t)qword_2573DAD30, a1);
}

uint64_t sub_244AC8BF0()
{
  sub_244A7DAA8(&qword_2573D1918, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EF0);
  return sub_244AE3D50();
}

uint64_t sub_244AC8C30()
{
  sub_244A7DAA8(&qword_2573D1918, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EF0);
  return sub_244AE3D68();
}

uint64_t sub_244AC8C80()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAD48 = 0xD000000000000034;
  unk_2573DAD50 = 0x8000000244AEAAB0;
  return result;
}

uint64_t sub_244AC8CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAD58);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAD58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A70;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "prompt";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "source";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "token_id";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "segments";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC8EBC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_244AE3C54();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
          v4 = v3;
          sub_244AE3CD8();
          goto LABEL_5;
        case 2:
          v4 = v3;
          sub_244AC8FD0();
          goto LABEL_5;
        case 3:
          v4 = v3;
          sub_244AE3C84();
          goto LABEL_5;
        case 4:
          v4 = v3;
          sub_244AE3CC0();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC8FD0()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  sub_244AD609C();
  return sub_244AE3C78();
}

uint64_t sub_244AC9044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC511C((uint64_t)v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
  if (!v4)
  {
    sub_244AC914C((uint64_t)v3);
    if (*(_QWORD *)(*v3 + 16))
      sub_244AE3D80();
    if (*(_QWORD *)(v3[1] + 16))
      sub_244AE3DBC();
    type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244AC914C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 32) + 9) & 1) == 0)
  {
    sub_244AD609C();
    return sub_244AE3D98();
  }
  return result;
}

uint64_t sub_244AC91F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  char *v8;

  v4 = MEMORY[0x24BEE4AF8];
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = v4;
  result = sub_244AE3C00();
  v6 = *(int *)(a1 + 32);
  v7 = (_QWORD *)((char *)a2 + *(int *)(a1 + 28));
  *v7 = 0;
  v7[1] = 0;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v8 = 0;
  *((_WORD *)v8 + 4) = 256;
  return result;
}

uint64_t sub_244AC9244(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF8B0, &qword_2573DAD48);
}

uint64_t sub_244AC9264()
{
  return sub_244AC8EBC();
}

uint64_t sub_244AC9278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC9044(a1, a2, a3);
}

uint64_t sub_244AC928C()
{
  sub_244A7DAA8(&qword_2573D1D90, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6D50);
  return sub_244AE3C3C();
}

uint64_t sub_244AC92DC@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF8B8, (uint64_t)qword_2573DAD58, a1);
}

uint64_t sub_244AC92F8()
{
  sub_244A7DAA8(&qword_2573D18F8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6D88);
  return sub_244AE3D50();
}

uint64_t sub_244AC9338()
{
  sub_244A7DAA8(&qword_2573D18F8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6D88);
  return sub_244AE3D68();
}

uint64_t sub_244AC9388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAD70);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAD70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5AB0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "NOT_SET";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "CLIENT";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "SERVER";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC9514@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF8C0, (uint64_t)qword_2573DAD70, a1);
}

uint64_t sub_244AC9530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAD88);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAD88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A90;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "bundle_identifier";
  *(_QWORD *)(v7 + 8) = 17;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "feature_identifier";
  *((_QWORD *)v11 + 1) = 18;
  v11[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC9680()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_244AE3C54();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_244AE3CE4();
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244AC9710()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_244AE3DD4(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_244AE3DD4(), !v1))
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
      return sub_244AE3BF4();
    }
  }
  return result;
}

uint64_t sub_244AC97E8@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return sub_244AE3C00();
}

unint64_t sub_244AC9810()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_244AC982C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_244AC986C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_244AC98AC()
{
  return sub_244AC9680();
}

uint64_t sub_244AC98C0()
{
  return sub_244AC9710();
}

uint64_t sub_244AC98D4()
{
  sub_244A7DAA8(&qword_2573D1DA0, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6BC0);
  return sub_244AE3C3C();
}

uint64_t sub_244AC9924@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF8C8, (uint64_t)qword_2573DAD88, a1);
}

uint64_t sub_244AC9940()
{
  sub_244A7DAA8(&qword_2573D18D8, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6BF8);
  return sub_244AE3D50();
}

uint64_t sub_244AC9980()
{
  sub_244A7DAA8(&qword_2573D18D8, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6BF8);
  return sub_244AE3D68();
}

uint64_t sub_244AC99D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DADA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DADA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5AB0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "schema";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "grammar";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "partial_grammar";
  *(_QWORD *)(v12 + 8) = 15;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244AC9B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_244AE3C54();
    if (v4 || (v10 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        sub_244ACA4A8(v5, a1, a2, a3);
        break;
      case 2:
        sub_244ACA064(v5, a1, a2, a3);
        break;
      case 1:
        sub_244AC9C24(v5, a1, a2, a3);
        break;
    }
  }
  return result;
}

uint64_t sub_244AC9C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1DB0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFDF0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFDF0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1DB0);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573D1898, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE6928);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1DB0);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1DB0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1DB0);
    return sub_244A72890((uint64_t)v33, &qword_2573D1DB0);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1DB0);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFDF0);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244ACA064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1DB8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFDF0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFDF0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1DB8);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573D1878, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE67C0);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1DB8);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1DB8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1DB8);
    return sub_244A72890((uint64_t)v33, &qword_2573D1DB8);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1DB8);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFDF0);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244ACA4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1DC0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFDF0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFDF0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_244A72890((uint64_t)v24, &qword_2573D1DC0);
      sub_244A729FC((uint64_t)v17, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
      sub_244A729FC(v31, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_244A7DAA8(&qword_2573D1858, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6658);
  sub_244AE3D20();
  if (v29)
    return sub_244A72890((uint64_t)v24, &qword_2573D1DC0);
  v33 = v41;
  sub_244A7284C((uint64_t)v24, (uint64_t)v41, &qword_2573D1DC0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1DC0);
    return sub_244A72890((uint64_t)v33, &qword_2573D1DC0);
  }
  else
  {
    v34 = v40;
    sub_244A729FC((uint64_t)v33, (uint64_t)v40, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
    if (v27 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1DC0);
    v35 = v39;
    sub_244A72890(v39, &qword_2573CFDF0);
    sub_244A729FC((uint64_t)v34, v35, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_244ACA8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(v0, (uint64_t)v4, &qword_2573CFDF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_8;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_244ACABF4(v0);
    else
      sub_244ACAD94(v0);
  }
  else
  {
    sub_244ACAA58(v0);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
  if (!v1)
  {
LABEL_8:
    type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244ACAA58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFDF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFDF0);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
    sub_244A7DAA8(&qword_2573D1898, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE6928);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
  __break(1u);
  return result;
}

uint64_t sub_244ACABF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFDF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFDF0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
    sub_244A7DAA8(&qword_2573D1878, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE67C0);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
  __break(1u);
  return result;
}

uint64_t sub_244ACAD94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFDF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_244A72890((uint64_t)v4, &qword_2573CFDF0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
    sub_244A7DAA8(&qword_2573D1858, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6658);
    sub_244AE3E04();
    return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
  }
  result = sub_244A729C0((uint64_t)v4, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
  __break(1u);
  return result;
}

uint64_t sub_244ACAF34@<X0>(uint64_t a1@<X8>)
{
  return sub_244ACAF40(type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType, a1);
}

uint64_t sub_244ACAF40@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
  return sub_244AE3C00();
}

unint64_t sub_244ACAF90()
{
  return 0xD000000000000027;
}

uint64_t sub_244ACAFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244AC9B70(a1, a2, a3);
}

uint64_t sub_244ACAFC0()
{
  return sub_244ACA8EC();
}

uint64_t sub_244ACAFD4()
{
  sub_244A7DAA8(&qword_2573D1DA8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE6A58);
  return sub_244AE3C3C();
}

uint64_t sub_244ACB024@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF8D0, (uint64_t)qword_2573DADA0, a1);
}

uint64_t sub_244ACB040()
{
  sub_244A7DAA8(&qword_2573D18B8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE6A90);
  return sub_244AE3D50();
}

uint64_t sub_244ACB080()
{
  sub_244A7DAA8(&qword_2573D18B8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE6A90);
  return sub_244AE3D68();
}

uint64_t sub_244ACB0D4()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DADB8 = 0xD000000000000027;
  unk_2573DADC0 = 0x8000000244AEABE0;
  return result;
}

uint64_t sub_244ACB13C(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DADC8, (uint64_t)"schema_raw_v1", 13, MEMORY[0x24BE5C328]);
}

uint64_t sub_244ACB15C(uint64_t a1)
{
  return sub_244ACB170(a1);
}

uint64_t sub_244ACB170(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  char v6;

  v3 = v1;
  while (1)
  {
    result = sub_244AE3C54();
    if (v2 || (v6 & 1) != 0)
      break;
    if (result == 1)
      sub_244ACB650(a1, v3);
  }
  return result;
}

uint64_t sub_244ACB1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACB3E0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
}

uint64_t sub_244ACB1FC(_QWORD *a1, char *a2)
{
  return sub_244AD3114(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema) & 1;
}

uint64_t sub_244ACB21C(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF8D8, &qword_2573DADB8);
}

uint64_t sub_244ACB23C()
{
  sub_244A7DAA8(&qword_2573D1DC8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE68F0);
  return sub_244AE3C3C();
}

uint64_t sub_244ACB28C@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF8E0, (uint64_t)qword_2573DADC8, a1);
}

uint64_t sub_244ACB2A8()
{
  sub_244A7DAA8(&qword_2573D1898, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE6928);
  return sub_244AE3D50();
}

uint64_t sub_244ACB2E8()
{
  sub_244A7DAA8(&qword_2573D1898, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE6928);
  return sub_244AE3D68();
}

uint64_t sub_244ACB33C()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DADE0 = 0xD000000000000027;
  *(_QWORD *)algn_2573DADE8 = 0x8000000244AEABE0;
  return result;
}

uint64_t sub_244ACB3A4(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DADF0, (uint64_t)"grammar_raw_v1", 14, MEMORY[0x24BE5C328]);
}

uint64_t sub_244ACB3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACB3E0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
}

uint64_t sub_244ACB3E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (*(_QWORD *)(v4 + 8))
    result = sub_244AE3DD4();
  if (!v5)
  {
    a4(0);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244ACB480(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF8E8, &qword_2573DADE0);
}

uint64_t sub_244ACB4A0()
{
  sub_244A7DAA8(&qword_2573D1DD0, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE6788);
  return sub_244AE3C3C();
}

uint64_t sub_244ACB4F0@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF8F0, (uint64_t)qword_2573DADF0, a1);
}

uint64_t sub_244ACB50C()
{
  sub_244A7DAA8(&qword_2573D1878, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE67C0);
  return sub_244AE3D50();
}

uint64_t sub_244ACB54C()
{
  sub_244A7DAA8(&qword_2573D1878, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE67C0);
  return sub_244AE3D68();
}

uint64_t sub_244ACB59C(_QWORD *a1, char *a2)
{
  return sub_244AD3114(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar) & 1;
}

uint64_t sub_244ACB5BC()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAE08 = 0xD000000000000027;
  unk_2573DAE10 = 0x8000000244AEABE0;
  return result;
}

uint64_t sub_244ACB630(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DAE18, (uint64_t)"partial_grammar_raw_v1", 22, MEMORY[0x24BE5C328]);
}

uint64_t sub_244ACB650(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_244AE3CD8();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v5)
  {
    if (a2[1])
      sub_244AE3C60();
    *a2 = 0;
    a2[1] = v5;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244ACB708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACB3E0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
}

uint64_t sub_244ACB724(_QWORD *a1, char *a2)
{
  return sub_244AD3114(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar) & 1;
}

uint64_t sub_244ACB744@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  return sub_244AE3C00();
}

uint64_t sub_244ACB764(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF8F8, &qword_2573DAE08);
}

uint64_t sub_244ACB784()
{
  sub_244A7DAA8(&qword_2573D1DD8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6620);
  return sub_244AE3C3C();
}

uint64_t sub_244ACB7D4@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF900, (uint64_t)qword_2573DAE18, a1);
}

uint64_t sub_244ACB7F0()
{
  sub_244A7DAA8(&qword_2573D1858, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6658);
  return sub_244AE3D50();
}

uint64_t sub_244ACB830()
{
  sub_244A7DAA8(&qword_2573D1858, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6658);
  return sub_244AE3D68();
}

uint64_t sub_244ACB880(uint64_t a1)
{
  return sub_244ACB8A0(a1, qword_2573DAE30, (uint64_t)"prompt_template_v1", 18, MEMORY[0x24BE5C328]);
}

uint64_t sub_244ACB8A0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = sub_244AE3E34();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_244AE4EB0;
  v14 = v13 + v12 + *(int *)(v10 + 48);
  *(_QWORD *)(v13 + v12) = 1;
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = a4;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *a5;
  v16 = sub_244AE3E10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  return sub_244AE3E1C();
}

uint64_t sub_244ACB9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_244AE3C54();
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 1)
      sub_244ACBA18(v5, a1, a2, a3);
  }
  return result;
}

uint64_t sub_244ACBA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a4;
  v44 = a3;
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1DE8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - v23;
  v39 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v25((char *)&v33 - v23, 1, 1, v5);
  v36 = a1;
  sub_244A7284C(a1, (uint64_t)v12, &qword_2573CFAF0);
  v34 = v14;
  v35 = v13;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v37 == 1)
  {
    sub_244A72890((uint64_t)v12, &qword_2573CFAF0);
  }
  else
  {
    sub_244A729FC((uint64_t)v12, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
    sub_244A729FC((uint64_t)v19, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
    sub_244A72890((uint64_t)v24, &qword_2573D1DE8);
    v26 = v40;
    sub_244A729FC((uint64_t)v17, v40, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
    sub_244A729FC(v26, (uint64_t)v24, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
    v25(v24, 0, 1, v5);
  }
  v28 = (uint64_t)v41;
  v27 = v42;
  sub_244A7DAA8(&qword_2573D1818, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6388);
  sub_244AE3D20();
  if (v27)
    return sub_244A72890((uint64_t)v24, &qword_2573D1DE8);
  sub_244A7284C((uint64_t)v24, v28, &qword_2573D1DE8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v5) == 1)
  {
    sub_244A72890((uint64_t)v24, &qword_2573D1DE8);
    return sub_244A72890(v28, &qword_2573D1DE8);
  }
  else
  {
    v30 = v28;
    v31 = v38;
    sub_244A729FC(v30, v38, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
    if (v37 != 1)
      sub_244AE3C60();
    sub_244A72890((uint64_t)v24, &qword_2573D1DE8);
    v32 = v36;
    sub_244A72890(v36, &qword_2573CFAF0);
    sub_244A729FC(v31, v32, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  }
}

uint64_t sub_244ACBDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_244ACBE68(v0);
  if (!v1)
  {
    type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244ACBE68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A7284C(a1, (uint64_t)v4, &qword_2573CFAF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    return sub_244A72890((uint64_t)v4, &qword_2573CFAF0);
  sub_244A729FC((uint64_t)v4, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
  sub_244A7DAA8(&qword_2573D1818, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6388);
  sub_244AE3E04();
  return sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
}

uint64_t sub_244ACBFE0@<X0>(uint64_t a1@<X8>)
{
  return sub_244ACAF40(type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType, a1);
}

unint64_t sub_244ACBFEC()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_244ACC008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACB9A8(a1, a2, a3);
}

uint64_t sub_244ACC01C()
{
  return sub_244ACBDE8();
}

uint64_t sub_244ACC030()
{
  sub_244A7DAA8(&qword_2573D1DE0, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE64B8);
  return sub_244AE3C3C();
}

uint64_t sub_244ACC080@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF908, (uint64_t)qword_2573DAE30, a1);
}

uint64_t sub_244ACC09C()
{
  sub_244A7DAA8(&qword_2573D1838, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE64F0);
  return sub_244AE3D50();
}

uint64_t sub_244ACC0DC()
{
  sub_244A7DAA8(&qword_2573D1838, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE64F0);
  return sub_244AE3D68();
}

uint64_t sub_244ACC12C()
{
  uint64_t result;

  result = sub_244AE426C();
  qword_2573DAE48 = 0xD00000000000002ALL;
  unk_2573DAE50 = 0x8000000244AEAC70;
  return result;
}

uint64_t sub_244ACC19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAE58);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAE58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A90;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "prompt_template_id";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "prompt_template_variable_bindings";
  *((_QWORD *)v11 + 1) = 33;
  v11[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244ACC2EC()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_244AE3C54();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable(0);
        sub_244A7DAA8(&qword_2573D17F8, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6220);
        sub_244AE3D14();
      }
      else if (result == 1)
      {
        type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
        sub_244AE3CD8();
      }
      result = sub_244AE3C54();
    }
  }
  return result;
}

uint64_t sub_244ACC404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_244AC50A0(v3, a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable(0);
      sub_244A7DAA8(&qword_2573D17F8, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6220);
      sub_244AE3DF8();
    }
    type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244ACC4FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  _QWORD *v5;

  *a2 = MEMORY[0x24BEE4AF8];
  result = sub_244AE3C00();
  v5 = (_QWORD *)((char *)a2 + *(int *)(a1 + 24));
  *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t sub_244ACC540(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF910, &qword_2573DAE48);
}

uint64_t sub_244ACC560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_244ACC5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_244ACC5E0()
{
  return sub_244ACC2EC();
}

uint64_t sub_244ACC5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACC404(a1, a2, a3);
}

uint64_t sub_244ACC608()
{
  sub_244A7DAA8(&qword_2573D1DF0, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6350);
  return sub_244AE3C3C();
}

uint64_t sub_244ACC658@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF918, (uint64_t)qword_2573DAE58, a1);
}

uint64_t sub_244ACC674()
{
  sub_244A7DAA8(&qword_2573D1818, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6388);
  return sub_244AE3D50();
}

uint64_t sub_244ACC6B4()
{
  sub_244A7DAA8(&qword_2573D1818, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6388);
  return sub_244AE3D68();
}

uint64_t sub_244ACC704()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_2573CF910 != -1)
    swift_once();
  v1 = qword_2573DAE48;
  v2 = unk_2573DAE50;
  swift_bridgeObjectRetain();
  result = sub_244AE426C();
  qword_2573DAE70 = v1;
  *(_QWORD *)algn_2573DAE78 = v2;
  return result;
}

uint64_t sub_244ACC790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_244AE3E34();
  __swift_allocate_value_buffer(v0, qword_2573DAE80);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573DAE80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C18);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244AE5A90;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_244AE3E10();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_244AE3E1C();
}

uint64_t sub_244ACC8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACC8FC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
}

uint64_t sub_244ACC8FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t result;
  char v7;

  while (1)
  {
    result = sub_244AE3C54();
    if (v4 || (v7 & 1) != 0)
      break;
    if (result == 2 || result == 1)
    {
      a4(0);
      sub_244AE3CD8();
    }
    v4 = 0;
  }
  return result;
}

uint64_t sub_244ACC9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244ACC9C8(a1, a2, a3, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
}

uint64_t sub_244ACC9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = sub_244AA9B40(v4, a1, a2, a3, a4);
  if (!v5)
  {
    sub_244AC50A0(v4, a1, a2, a3, a4);
    return sub_244AE3BF4();
  }
  return result;
}

uint64_t sub_244ACCA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  result = sub_244AE3C00();
  v5 = *(int *)(a1 + 24);
  v6 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  return result;
}

uint64_t sub_244ACCA7C(uint64_t a1, uint64_t a2)
{
  return sub_244AA6B08(a1, a2, &qword_2573CF920, &qword_2573DAE70);
}

uint64_t sub_244ACCA9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_244ACCAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t sub_244ACCB0C()
{
  sub_244A7DAA8(qword_2573D1DF8, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE61E8);
  return sub_244AE3C3C();
}

uint64_t sub_244ACCB5C@<X0>(uint64_t a1@<X8>)
{
  return sub_244AA0418(&qword_2573CF928, (uint64_t)qword_2573DAE80, a1);
}

uint64_t sub_244ACCB78()
{
  sub_244A7DAA8(&qword_2573D17F8, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6220);
  return sub_244AE3D50();
}

uint64_t sub_244ACCBB8()
{
  sub_244AE4530();
  sub_244AE41F4();
  return sub_244AE4548();
}

uint64_t sub_244ACCC0C()
{
  sub_244A7DAA8(&qword_2573D17F8, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6220);
  return sub_244AE3D68();
}

uint64_t sub_244ACCC5C()
{
  sub_244AE4530();
  sub_244AE41F4();
  return sub_244AE4548();
}

uint64_t sub_244ACCCAC(uint64_t a1, uint64_t a2)
{
  return sub_244AD5EA8(a1, a2, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable) & 1;
}

uint64_t sub_244ACCCCC()
{
  return sub_244A7DAA8(&qword_2573D17F0, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6130);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D23C8);
}

uint64_t sub_244ACCD0C()
{
  return sub_244A7DAA8(&qword_2573D17F8, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6220);
}

uint64_t sub_244ACCD38()
{
  return sub_244A7DAA8(&qword_2573D1800, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6158);
}

uint64_t sub_244ACCD64()
{
  return sub_244A7DAA8(&qword_2573D1808, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable, (uint64_t)&unk_244AE6198);
}

uint64_t sub_244ACCD90()
{
  return sub_244A7DAA8(&qword_2573D1810, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6298);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D2330);
}

uint64_t sub_244ACCDD0()
{
  return sub_244A7DAA8(&qword_2573D1818, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6388);
}

uint64_t sub_244ACCDFC()
{
  return sub_244A7DAA8(&qword_2573D1820, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE62C0);
}

uint64_t sub_244ACCE28()
{
  return sub_244A7DAA8(&qword_2573D1828, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1, (uint64_t)&unk_244AE6300);
}

uint64_t sub_244ACCE54()
{
  return sub_244A7DAA8(&qword_2573D1830, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE6400);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D2298);
}

uint64_t sub_244ACCE94()
{
  return sub_244A7DAA8(&qword_2573D1838, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE64F0);
}

uint64_t sub_244ACCEC0()
{
  return sub_244A7DAA8(&qword_2573D1840, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE6428);
}

uint64_t sub_244ACCEEC()
{
  return sub_244A7DAA8(&qword_2573D1848, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate, (uint64_t)&unk_244AE6468);
}

uint64_t sub_244ACCF18()
{
  return sub_244A7DAA8(&qword_2573D1850, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6568);
}

uint64_t sub_244ACCF44()
{
  return sub_244A7DAA8(&qword_2573D1858, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6658);
}

uint64_t sub_244ACCF70()
{
  return sub_244A7DAA8(&qword_2573D1860, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE6590);
}

uint64_t sub_244ACCF9C()
{
  return sub_244A7DAA8(&qword_2573D1868, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar, (uint64_t)&unk_244AE65D0);
}

uint64_t sub_244ACCFC8()
{
  return sub_244A7DAA8(&qword_2573D1870, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE66D0);
}

uint64_t sub_244ACCFF4()
{
  return sub_244A7DAA8(&qword_2573D1878, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE67C0);
}

uint64_t sub_244ACD020()
{
  return sub_244A7DAA8(&qword_2573D1880, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE66F8);
}

uint64_t sub_244ACD04C()
{
  return sub_244A7DAA8(&qword_2573D1888, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar, (uint64_t)&unk_244AE6738);
}

uint64_t sub_244ACD078()
{
  return sub_244A7DAA8(&qword_2573D1890, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE6838);
}

uint64_t sub_244ACD0A4()
{
  return sub_244A7DAA8(&qword_2573D1898, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE6928);
}

uint64_t sub_244ACD0D0()
{
  return sub_244A7DAA8(&qword_2573D18A0, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE6860);
}

uint64_t sub_244ACD0FC()
{
  return sub_244A7DAA8(&qword_2573D18A8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema, (uint64_t)&unk_244AE68A0);
}

uint64_t sub_244ACD128()
{
  return sub_244A7DAA8(&qword_2573D18B0, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE69A0);
}

uint64_t sub_244ACD154()
{
  return sub_244A7DAA8(&qword_2573D18B8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE6A90);
}

uint64_t sub_244ACD180()
{
  return sub_244A7DAA8(&qword_2573D18C0, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE69C8);
}

uint64_t sub_244ACD1AC()
{
  return sub_244A7DAA8(&qword_2573D18C8, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints, (uint64_t)&unk_244AE6A08);
}

uint64_t sub_244ACD1D8()
{
  return sub_244A7DAA8(&qword_2573D18D0, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6B08);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D2200);
}

uint64_t sub_244ACD218()
{
  return sub_244A7DAA8(&qword_2573D18D8, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6BF8);
}

uint64_t sub_244ACD244()
{
  return sub_244A7DAA8(&qword_2573D18E0, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6B30);
}

uint64_t sub_244ACD270()
{
  return sub_244A7DAA8(&qword_2573D18E8, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata, (uint64_t)&unk_244AE6B70);
}

uint64_t sub_244ACD29C()
{
  return sub_244A7DAA8(&qword_2573D18F0, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6C98);
}

uint64_t sub_244ACD2C8()
{
  return sub_244A7DAA8(&qword_2573D18F8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6D88);
}

uint64_t sub_244ACD2F4()
{
  return sub_244A7DAA8(&qword_2573D1900, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6CC0);
}

uint64_t sub_244ACD320()
{
  return sub_244A7DAA8(&qword_2573D1908, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt, (uint64_t)&unk_244AE6D00);
}

uint64_t sub_244ACD34C()
{
  return sub_244A7DAA8(&qword_2573D1910, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6E00);
}

uint64_t sub_244ACD378()
{
  return sub_244A7DAA8(&qword_2573D1918, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6EF0);
}

uint64_t sub_244ACD3A4()
{
  return sub_244A7DAA8(&qword_2573D1920, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6E28);
}

uint64_t sub_244ACD3D0()
{
  return sub_244A7DAA8(&qword_2573D1928, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo, (uint64_t)&unk_244AE6E68);
}

uint64_t sub_244ACD3FC()
{
  return sub_244A7DAA8(&qword_2573D1930, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE6F68);
}

uint64_t sub_244ACD428()
{
  return sub_244A7DAA8(&qword_2573D1938, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE7058);
}

uint64_t sub_244ACD454()
{
  return sub_244A7DAA8(&qword_2573D1940, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE6F90);
}

uint64_t sub_244ACD480()
{
  return sub_244A7DAA8(&qword_2573D1948, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo, (uint64_t)&unk_244AE6FD0);
}

uint64_t sub_244ACD4AC()
{
  return sub_244A7DAA8(&qword_2573D1950, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE70D0);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D2460);
}

uint64_t sub_244ACD4EC()
{
  return sub_244A7DAA8(&qword_2573D1958, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE71C0);
}

uint64_t sub_244ACD518()
{
  return sub_244A7DAA8(&qword_2573D1960, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE70F8);
}

uint64_t sub_244ACD544()
{
  return sub_244A7DAA8(&qword_2573D1968, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics, (uint64_t)&unk_244AE7138);
}

uint64_t sub_244ACD570()
{
  return sub_244A7DAA8(&qword_2573D1970, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE7238);
}

uint64_t sub_244ACD59C()
{
  return sub_244A7DAA8(&qword_2573D1978, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE7328);
}

uint64_t sub_244ACD5C8()
{
  return sub_244A7DAA8(&qword_2573D1980, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE7260);
}

uint64_t sub_244ACD5F4()
{
  return sub_244A7DAA8(&qword_2573D1988, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics, (uint64_t)&unk_244AE72A0);
}

uint64_t sub_244ACD620()
{
  return sub_244A7DAA8(&qword_2573D1990, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE73A0);
}

uint64_t sub_244ACD64C()
{
  return sub_244A7DAA8(&qword_2573D1998, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE7490);
}

uint64_t sub_244ACD678()
{
  return sub_244A7DAA8(&qword_2573D19A0, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE73C8);
}

uint64_t sub_244ACD6A4()
{
  return sub_244A7DAA8(&qword_2573D19A8, type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics, (uint64_t)&unk_244AE7408);
}

uint64_t sub_244ACD6D0()
{
  return sub_244A7DAA8(&qword_2573D19B0, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE7508);
}

uint64_t sub_244ACD6FC()
{
  return sub_244A7DAA8(&qword_2573D19B8, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE75F8);
}

uint64_t sub_244ACD728()
{
  return sub_244A7DAA8(&qword_2573D19C0, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE7530);
}

uint64_t sub_244ACD754()
{
  return sub_244A7DAA8(&qword_2573D19C8, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics, (uint64_t)&unk_244AE7570);
}

uint64_t sub_244ACD780()
{
  return sub_244A7DAA8(&qword_2573D19D0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7698);
}

uint64_t sub_244ACD7AC()
{
  return sub_244A7DAA8(&qword_2573D19D8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7788);
}

uint64_t sub_244ACD7D8()
{
  return sub_244A7DAA8(&qword_2573D19E0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE76C0);
}

uint64_t sub_244ACD804()
{
  return sub_244A7DAA8(&qword_2573D19E8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse, (uint64_t)&unk_244AE7700);
}

uint64_t sub_244ACD830()
{
  return sub_244A7DAA8(&qword_2573D19F0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE7800);
}

uint64_t sub_244ACD85C()
{
  return sub_244A7DAA8(&qword_2573D19F8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE78F0);
}

uint64_t sub_244ACD888()
{
  return sub_244A7DAA8(&qword_2573D1A00, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE7828);
}

uint64_t sub_244ACD8B4()
{
  return sub_244A7DAA8(&qword_2573D1A08, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t)&unk_244AE7868);
}

uint64_t sub_244ACD8E0()
{
  return sub_244A7DAA8(&qword_2573D1A10, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7968);
}

uint64_t sub_244ACD90C()
{
  return sub_244A7DAA8(&qword_2573D1A18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7A58);
}

uint64_t sub_244ACD938()
{
  return sub_244A7DAA8(&qword_2573D1A20, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE7990);
}

uint64_t sub_244ACD964()
{
  return sub_244A7DAA8(&qword_2573D1A28, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse, (uint64_t)&unk_244AE79D0);
}

uint64_t sub_244ACD990()
{
  return sub_244A7DAA8(&qword_2573D1A30, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7AD0);
}

uint64_t sub_244ACD9BC()
{
  return sub_244A7DAA8(&qword_2573D1A38, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7BC0);
}

uint64_t sub_244ACD9E8()
{
  return sub_244A7DAA8(&qword_2573D1A40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7AF8);
}

uint64_t sub_244ACDA14()
{
  return sub_244A7DAA8(&qword_2573D1A48, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse, (uint64_t)&unk_244AE7B38);
}

uint64_t sub_244ACDA40()
{
  return sub_244A7DAA8(&qword_2573D1A50, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7C38);
}

uint64_t sub_244ACDA6C()
{
  return sub_244A7DAA8(&qword_2573D1A58, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7D28);
}

uint64_t sub_244ACDA98()
{
  return sub_244A7DAA8(&qword_2573D1A60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7C60);
}

uint64_t sub_244ACDAC4()
{
  return sub_244A7DAA8(&qword_2573D1A68, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse, (uint64_t)&unk_244AE7CA0);
}

uint64_t sub_244ACDAF0()
{
  return sub_244A7DAA8(&qword_2573D1A70, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE7DA0);
}

uint64_t sub_244ACDB1C()
{
  return sub_244A7DAA8(&qword_2573CFF60, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE8CF8);
}

uint64_t sub_244ACDB48()
{
  return sub_244A7DAA8(&qword_2573D1A78, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE7DC8);
}

uint64_t sub_244ACDB74()
{
  return sub_244A7DAA8(&qword_2573D1A80, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE7E90);
}

uint64_t sub_244ACDBA0()
{
  return sub_244A7DAA8(&qword_2573CFF40, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE8D70);
}

uint64_t sub_244ACDBCC()
{
  return sub_244A7DAA8(&qword_2573D1A88, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE7EB8);
}

uint64_t sub_244ACDBF8()
{
  return sub_244A7DAA8(&qword_2573D1A90, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE7F80);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D2170);
}

uint64_t sub_244ACDC38()
{
  return sub_244A7DAA8(&qword_2573CFB18, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE8070);
}

uint64_t sub_244ACDC64()
{
  return sub_244A7DAA8(&qword_2573D1A98, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE7FA8);
}

uint64_t sub_244ACDC90()
{
  return sub_244A7DAA8(&qword_2573D1AA0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken, (uint64_t)&unk_244AE7FE8);
}

uint64_t sub_244ACDCBC()
{
  return sub_244A7DAA8(&qword_2573D1AA8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE80E8);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D20D0);
}

uint64_t sub_244ACDCFC()
{
  return sub_244A7DAA8(&qword_2573CFAE8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE81D8);
}

uint64_t sub_244ACDD28()
{
  return sub_244A7DAA8(&qword_2573D1AB0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE8110);
}

uint64_t sub_244ACDD54()
{
  return sub_244A7DAA8(&qword_2573D1AB8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter, (uint64_t)&unk_244AE8150);
}

uint64_t sub_244ACDD80()
{
  return sub_244A7DAA8(&qword_2573D1AC0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8250);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D2018);
}

uint64_t sub_244ACDDC0()
{
  return sub_244A7DAA8(&qword_2573CFAC0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8340);
}

uint64_t sub_244ACDDEC()
{
  return sub_244A7DAA8(&qword_2573D1AC8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE8278);
}

uint64_t sub_244ACDE18()
{
  return sub_244A7DAA8(&qword_2573D1AD0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest, (uint64_t)&unk_244AE82B8);
}

uint64_t sub_244ACDE44()
{
  return sub_244A7DAA8(&qword_2573D1AD8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, (uint64_t)&unk_244AE83B8);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest(uint64_t a1)
{
  return sub_244A7DFA8(a1, (uint64_t *)&unk_2573D1F68);
}

uint64_t sub_244ACDE84()
{
  return sub_244A7DAA8(&qword_2573D1AE0, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, (uint64_t)&unk_244AE84A8);
}

uint64_t sub_244ACDEB0()
{
  return sub_244A7DAA8(&qword_2573D1AE8, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, (uint64_t)&unk_244AE83E0);
}

uint64_t sub_244ACDEDC()
{
  return sub_244A7DAA8(&qword_2573D1AF0, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest, (uint64_t)&unk_244AE8420);
}

uint64_t sub_244ACDF08()
{
  return sub_244A7DAA8(&qword_2573D1AF8, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE8520);
}

uint64_t sub_244ACDF34()
{
  return sub_244A7DAA8(&qword_2573D1B00, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE8610);
}

uint64_t sub_244ACDF60()
{
  return sub_244A7DAA8(&qword_2573D1B08, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE8548);
}

uint64_t sub_244ACDF8C()
{
  return sub_244A7DAA8(&qword_2573D1B10, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions, (uint64_t)&unk_244AE8588);
}

uint64_t sub_244ACDFB8()
{
  return sub_244A7DAA8(&qword_2573D1B18, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE86B0);
}

uint64_t sub_244ACDFE4()
{
  return sub_244A7DAA8(&qword_2573D1B20, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE87A0);
}

uint64_t sub_244ACE010()
{
  return sub_244A7DAA8(&qword_2573D1B28, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE86D8);
}

uint64_t sub_244ACE03C()
{
  return sub_244A7DAA8(&qword_2573D1B30, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t)&unk_244AE8718);
}

uint64_t sub_244ACE068()
{
  return sub_244A7DAA8(&qword_2573D1B38, type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling, (uint64_t)&unk_244AE8818);
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1ED8);
}

uint64_t sub_244ACE0A8()
{
  return sub_244A7DAA8(&qword_2573D1B40, type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling, (uint64_t)&unk_244AE8908);
}

uint64_t sub_244ACE0D4()
{
  return sub_244A7DAA8(&qword_2573D1B48, type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling, (uint64_t)&unk_244AE8840);
}

uint64_t sub_244ACE100()
{
  return sub_244A7DAA8(&qword_2573D1B50, type metadata accessor for Apple_Cloudml_Inference_Tie_ArgMaxSampling, (uint64_t)&unk_244AE8880);
}

uint64_t sub_244ACE12C()
{
  return sub_244A7DAA8(&qword_2573D1B58, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE8980);
}

uint64_t sub_244ACE158()
{
  return sub_244A7DAA8(&qword_2573D1B60, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE8A70);
}

uint64_t sub_244ACE184()
{
  return sub_244A7DAA8(&qword_2573D1B68, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE89A8);
}

uint64_t sub_244ACE1B0()
{
  return sub_244A7DAA8(&qword_2573D1B70, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling, (uint64_t)&unk_244AE89E8);
}

uint64_t sub_244ACE1DC()
{
  return sub_244A7DAA8(&qword_2573D1B78, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8AE8);
}

uint64_t sub_244ACE208()
{
  return sub_244A7DAA8(&qword_2573D1B80, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8BD8);
}

uint64_t sub_244ACE234()
{
  return sub_244A7DAA8(&qword_2573D1B88, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8B10);
}

uint64_t sub_244ACE260()
{
  return sub_244A7DAA8(&qword_2573D1B90, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling, (uint64_t)&unk_244AE8B50);
}

uint64_t sub_244ACE28C()
{
  return sub_244ACE2F8(&qword_2573D1B98, &qword_2573D1BA0);
}

uint64_t sub_244ACE2B0()
{
  return sub_244ACE2F8(&qword_2573D1BA8, &qword_2573D1BB0);
}

uint64_t sub_244ACE2D4()
{
  return sub_244ACE2F8(&qword_2573D1BB8, &qword_2573D1BC0);
}

uint64_t sub_244ACE2F8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24951E280](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244ACE338()
{
  return sub_244A7DAA8(&qword_2573D1BC8, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse, (uint64_t)&unk_244AE7E08);
}

uint64_t sub_244ACE364()
{
  return sub_244A7DAA8(&qword_2573D1BD0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse, (uint64_t)&unk_244AE7EF8);
}

uint64_t sub_244ACE390(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_244AE44DC(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_244AE44DC() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_244ACE454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_244A72964(a1 + v12, (uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
        sub_244A72964(a2 + v12, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
        v15 = sub_244AD19DC((uint64_t)v10, (uint64_t)v7);
        sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
        sub_244A729C0((uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_244ACE590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  BOOL v29;
  uint64_t v31;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      while (1)
      {
        sub_244A72964(a1 + v12, (uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
        sub_244A72964(a2 + v12, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
        v15 = *(int *)(v4 + 20);
        v16 = &v10[v15];
        v17 = *(_QWORD *)&v10[v15 + 8];
        v18 = &v7[v15];
        v19 = *((_QWORD *)v18 + 1);
        if (v17)
        {
          if (!v19
            || (*(_QWORD *)v16 == *(_QWORD *)v18 ? (v20 = v17 == v19) : (v20 = 0), !v20 && (sub_244AE44DC() & 1) == 0))
          {
LABEL_30:
            sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
            sub_244A729C0((uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
            goto LABEL_31;
          }
        }
        else if (v19)
        {
          goto LABEL_30;
        }
        v21 = *(int *)(v4 + 24);
        v22 = &v10[v21];
        v23 = *(_QWORD *)&v10[v21 + 8];
        v24 = &v7[v21];
        v25 = *((_QWORD *)v24 + 1);
        if (v23)
        {
          if (!v25)
            goto LABEL_30;
          v26 = *(_QWORD *)v22 == *(_QWORD *)v24 && v23 == v25;
          if (!v26 && (sub_244AE44DC() & 1) == 0)
            goto LABEL_30;
        }
        else if (v25)
        {
          goto LABEL_30;
        }
        sub_244AE3C0C();
        sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_244AE4200();
        sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
        sub_244A729C0((uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1.PromptTemplateVariable);
        v29 = v14-- != 0;
        if ((v27 & 1) != 0)
        {
          v12 += v13;
          if (v29)
            continue;
        }
        return v27 & 1;
      }
    }
    v27 = 1;
  }
  else
  {
LABEL_31:
    v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_244ACE7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;

  v19 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
  v4 = MEMORY[0x24BDAC7A8](v19);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v9 = (uint64_t *)((char *)&v18 - v8);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 != *(_QWORD *)(a2 + 16))
  {
LABEL_20:
    v14 = 0;
    return v14 & 1;
  }
  if (v10 && a1 != a2)
  {
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v18 = *(_QWORD *)(v7 + 72);
    v12 = v10 - 1;
    while (1)
    {
      sub_244A72964(a1 + v11, (uint64_t)v9, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
      sub_244A72964(a2 + v11, (uint64_t)v6, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
      v13 = *v9 == *v6 && v9[1] == v6[1];
      if (!v13 && (sub_244AE44DC() & 1) == 0 || v9[2] != v6[2] || (sub_244ACE7A8(v9[3], v6[3]) & 1) == 0)
        break;
      sub_244AE3C0C();
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_244AE4200();
      sub_244A729C0((uint64_t)v6, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
      sub_244A729C0((uint64_t)v9, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
      v16 = v12-- != 0;
      if ((v14 & 1) != 0)
      {
        v11 += v18;
        if (v16)
          continue;
      }
      return v14 & 1;
    }
    sub_244A729C0((uint64_t)v6, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    sub_244A729C0((uint64_t)v9, type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics);
    goto LABEL_20;
  }
  v14 = 1;
  return v14 & 1;
}

BOOL sub_244ACE994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_244ACEA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_244A72964(a1 + v12, (uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
        sub_244A72964(a2 + v12, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
        v15 = sub_244AD4984((uint64_t)v10, (uint64_t)v7);
        sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
        sub_244A729C0((uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

void sub_244ACEB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_244ACEB9C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x244ACED80);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_244ACEDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_244ACEB3C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_244ACEE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_244AE3AF8();
  v11 = result;
  if (result)
  {
    result = sub_244AE3B10();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_244AE3B04();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_244ACEB3C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_244ACEF2C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_244ACEF78()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_244ACEFAC + dword_244ACF184[v0 >> 62]))();
}

uint64_t sub_244ACEFBC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_244ACF1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t Response;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_244AE3C0C();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CE8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF38);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_244A7284C(a1, (uint64_t)&v36 - v20, &qword_2573CFF38);
  v40 = a2;
  sub_244A7284C(a2, (uint64_t)v19, &qword_2573CFF38);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_244A7284C((uint64_t)v21, (uint64_t)v12, &qword_2573CFF38);
  sub_244A7284C((uint64_t)v19, v22, &qword_2573CFF38);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_244A7284C((uint64_t)v12, (uint64_t)v16, &qword_2573CFF38);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_244A729FC(v22, v37, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      sub_244AD0048((uint64_t)v16, v24);
      v26 = v25;
      sub_244A729C0(v24, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      sub_244A72890((uint64_t)v19, &qword_2573CFF38);
      sub_244A72890((uint64_t)v21, &qword_2573CFF38);
      sub_244A729C0((uint64_t)v16, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
      sub_244A72890((uint64_t)v12, &qword_2573CFF38);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_244A72890((uint64_t)v19, &qword_2573CFF38);
    sub_244A72890((uint64_t)v21, &qword_2573CFF38);
    sub_244A729C0((uint64_t)v16, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
LABEL_6:
    sub_244A72890((uint64_t)v12, &qword_2573D1CE8);
    goto LABEL_9;
  }
  sub_244A72890((uint64_t)v19, &qword_2573CFF38);
  sub_244A72890((uint64_t)v21, &qword_2573CFF38);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_244A72890((uint64_t)v12, &qword_2573CFF38);
LABEL_8:
  Response = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(Response + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(Response + 20), v28);
  sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_244AE4200();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t sub_244ACF56C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_244AE3C0C();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v38 - v7;
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CF8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v45 = (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v38 - v20;
  v22 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0);
  v23 = *(int *)(v22 + 20);
  v39 = a1;
  sub_244A7284C(a1 + v23, (uint64_t)v21, &qword_2573CFF30);
  v24 = *(int *)(v22 + 20);
  v40 = a2;
  sub_244A7284C(a2 + v24, (uint64_t)v19, &qword_2573CFF30);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_244A7284C((uint64_t)v21, (uint64_t)v13, &qword_2573CFF30);
  sub_244A7284C((uint64_t)v19, v25, &qword_2573CFF30);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) != 1)
  {
    v27 = v45;
    sub_244A7284C((uint64_t)v13, v45, &qword_2573CFF30);
    if (v26(v25, 1, v8) != 1)
    {
      v28 = v38;
      sub_244A729FC(v25, v38, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      v29 = sub_244AD4EA4(v27, v28);
      sub_244A729C0(v28, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      sub_244A72890((uint64_t)v19, &qword_2573CFF30);
      sub_244A72890((uint64_t)v21, &qword_2573CFF30);
      sub_244A729C0(v27, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
      sub_244A72890((uint64_t)v13, &qword_2573CFF30);
      if ((v29 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v35 = 0;
      return v35 & 1;
    }
    sub_244A72890((uint64_t)v19, &qword_2573CFF30);
    sub_244A72890((uint64_t)v21, &qword_2573CFF30);
    sub_244A729C0(v27, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
LABEL_6:
    sub_244A72890((uint64_t)v13, &qword_2573D1CF8);
    goto LABEL_9;
  }
  sub_244A72890((uint64_t)v19, &qword_2573CFF30);
  sub_244A72890((uint64_t)v21, &qword_2573CFF30);
  if (v26(v25, 1, v8) != 1)
    goto LABEL_6;
  sub_244A72890((uint64_t)v13, &qword_2573CFF30);
LABEL_8:
  v31 = v43;
  v30 = v44;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v33 = v41;
  v32(v41, v39, v44);
  v34 = v42;
  v32(v42, v40, v30);
  sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v35 = sub_244AE4200();
  v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  v36(v34, v30);
  v36(v33, v30);
  return v35 & 1;
}

uint64_t sub_244ACF934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  int v37;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t);
  uint64_t v41;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v41 - v9;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  v12 = v11;
  v13 = *(int *)(v11 + 20);
  v14 = (uint64_t *)(a1 + v13);
  v15 = *(_BYTE *)(a1 + v13 + 9);
  v16 = (uint64_t *)(a2 + v13);
  v17 = *(_BYTE *)(a2 + v13 + 9);
  if ((v15 & 1) != 0)
  {
    if ((v17 & 1) == 0)
      goto LABEL_39;
  }
  else
  {
    if ((v17 & 1) != 0)
      goto LABEL_39;
    v25 = *v14;
    v26 = *v16;
    if ((v16[1] & 1) != 0)
    {
      if (v26)
      {
        if (v26 == 1)
        {
          if (v25 != 1)
            goto LABEL_39;
        }
        else if (v25 != 2)
        {
          goto LABEL_39;
        }
      }
      else if (v25)
      {
        goto LABEL_39;
      }
    }
    else if (v25 != v26)
    {
      goto LABEL_39;
    }
  }
  v18 = *(int *)(v11 + 24);
  v19 = (_QWORD *)(a1 + v18);
  v20 = *(_QWORD *)(a1 + v18 + 8);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  if (!v20)
  {
    if (v22)
      goto LABEL_39;
LABEL_16:
    v27 = *(int *)(v12 + 28);
    v28 = (_QWORD *)(a1 + v27);
    v29 = *(_QWORD *)(a1 + v27 + 8);
    v30 = (_QWORD *)(a2 + v27);
    v31 = v30[1];
    if (v29)
    {
      if (!v31)
        goto LABEL_39;
      if (*v28 != *v30 || v29 != v31)
      {
        v24 = 0;
        if ((sub_244AE44DC() & 1) == 0)
          return v24 & 1;
      }
    }
    else if (v31)
    {
      goto LABEL_39;
    }
    v33 = *(int *)(v12 + 32);
    v34 = (_DWORD *)(a1 + v33);
    v35 = *(_BYTE *)(a1 + v33 + 4);
    v36 = (_DWORD *)(a2 + v33);
    v37 = *(unsigned __int8 *)(a2 + v33 + 4);
    if ((v35 & 1) != 0)
    {
      if (v37)
      {
LABEL_41:
        v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v39(v10, a1, v4);
        v39(v8, a2, v4);
        sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v24 = sub_244AE4200();
        v40 = *(void (**)(char *, uint64_t))(v5 + 8);
        v40(v8, v4);
        v40(v10, v4);
        return v24 & 1;
      }
    }
    else
    {
      if (*v34 != *v36)
        LOBYTE(v37) = 1;
      if ((v37 & 1) == 0)
        goto LABEL_41;
    }
LABEL_39:
    v24 = 0;
    return v24 & 1;
  }
  if (!v22)
    goto LABEL_39;
  if (*v19 == *v21 && v20 == v22)
    goto LABEL_16;
  v24 = 0;
  if ((sub_244AE44DC() & 1) != 0)
    goto LABEL_16;
  return v24 & 1;
}

uint64_t sub_244ACFB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = sub_244AE3C0C();
  v54 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)&v51 - v7;
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v55 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CF8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF30);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v56 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v51 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v51 - v20;
  v22 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  v23 = v22[5];
  v57 = a1;
  v58 = a2;
  v24 = (_QWORD *)(a1 + v23);
  v25 = *(_QWORD *)(a1 + v23 + 8);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  if (!v25)
  {
    v51 = v4;
    if (v27)
      goto LABEL_29;
    goto LABEL_8;
  }
  if (!v27)
    goto LABEL_29;
  v51 = v4;
  if (*v24 == *v26 && v25 == v27 || (v28 = 0, (sub_244AE44DC() & 1) != 0))
  {
LABEL_8:
    v29 = v22[6];
    v30 = (_QWORD *)(v57 + v29);
    v31 = *(_QWORD *)(v57 + v29 + 8);
    v32 = (_QWORD *)(v58 + v29);
    v33 = v32[1];
    if (v31)
    {
      if (!v33)
        goto LABEL_29;
      if (*v30 != *v32 || v31 != v33)
      {
        v28 = 0;
        if ((sub_244AE44DC() & 1) == 0)
          return v28 & 1;
      }
    }
    else if (v33)
    {
      goto LABEL_29;
    }
    sub_244A7284C(v57 + v22[7], (uint64_t)v21, &qword_2573CFF30);
    sub_244A7284C(v58 + v22[7], (uint64_t)v19, &qword_2573CFF30);
    v34 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_244A7284C((uint64_t)v21, (uint64_t)v13, &qword_2573CFF30);
    sub_244A7284C((uint64_t)v19, v34, &qword_2573CFF30);
    v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v35((uint64_t)v13, 1, v8) == 1)
    {
      sub_244A72890((uint64_t)v19, &qword_2573CFF30);
      sub_244A72890((uint64_t)v21, &qword_2573CFF30);
      if (v35(v34, 1, v8) == 1)
      {
        sub_244A72890((uint64_t)v13, &qword_2573CFF30);
LABEL_22:
        v39 = v22[8];
        v40 = (_QWORD *)(v57 + v39);
        v41 = *(_QWORD *)(v57 + v39 + 8);
        v42 = (_QWORD *)(v58 + v39);
        v43 = v42[1];
        if (v41)
        {
          if (v43)
          {
            if (*v40 != *v42 || v41 != v43)
            {
              v28 = 0;
              if ((sub_244AE44DC() & 1) == 0)
                return v28 & 1;
            }
LABEL_31:
            v45 = v54;
            v46 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
            v47 = v51;
            v48 = v52;
            v46(v52, v57, v51);
            v49 = v53;
            v46(v53, v58, v47);
            sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v28 = sub_244AE4200();
            v50 = *(void (**)(char *, uint64_t))(v45 + 8);
            v50(v49, v47);
            v50(v48, v47);
            return v28 & 1;
          }
        }
        else if (!v43)
        {
          goto LABEL_31;
        }
LABEL_29:
        v28 = 0;
        return v28 & 1;
      }
    }
    else
    {
      v36 = v56;
      sub_244A7284C((uint64_t)v13, v56, &qword_2573CFF30);
      if (v35(v34, 1, v8) != 1)
      {
        v37 = v55;
        sub_244A729FC(v34, v55, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
        v38 = sub_244AD4EA4(v36, v37);
        sub_244A729C0(v37, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
        sub_244A72890((uint64_t)v19, &qword_2573CFF30);
        sub_244A72890((uint64_t)v21, &qword_2573CFF30);
        sub_244A729C0(v36, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
        sub_244A72890((uint64_t)v13, &qword_2573CFF30);
        if ((v38 & 1) == 0)
          goto LABEL_29;
        goto LABEL_22;
      }
      sub_244A72890((uint64_t)v19, &qword_2573CFF30);
      sub_244A72890((uint64_t)v21, &qword_2573CFF30);
      sub_244A729C0(v36, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo);
    }
    sub_244A72890((uint64_t)v13, &qword_2573D1CF8);
    goto LABEL_29;
  }
  return v28 & 1;
}

void sub_244AD0048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v23 = a2;
  v2 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceCompleteResponse(0);
  MEMORY[0x24BDAC7A8](v2);
  v21[3] = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.InferenceEnvironmentResponse(0);
  MEMORY[0x24BDAC7A8](v4);
  v21[2] = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse(0);
  MEMORY[0x24BDAC7A8](v6);
  v21[1] = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
  MEMORY[0x24BDAC7A8](v8);
  v21[0] = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse(0);
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v21 + *(int *)(v17 + 48) - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244A72964(v22, (uint64_t)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  sub_244A72964(v23, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  v20 = (char *)sub_244AD02B8 + 4 * byte_244AE5B9B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_244AD02B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_244A72964(v0, v1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_244A729C0(v1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    sub_244A72890(v0, &qword_2573D1CF0);
    v4 = 0;
  }
  else
  {
    sub_244A729FC(v3, v2, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    v4 = sub_244ACFB7C(v1, v2);
    sub_244A729C0(v2, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    sub_244A729C0(v1, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.NextTokenResponse);
    sub_244A729C0(v0, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.OneOf_ResponseType);
  }
  return v4 & 1;
}

uint64_t sub_244AD0560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_244AE3C0C();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v41 - v7;
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1D10);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF28);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v41 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse(0);
  v24 = *(int *)(v23 + 20);
  v47 = a1;
  v48 = a2;
  v25 = (_QWORD *)(a1 + v24);
  v26 = *(_QWORD *)(a1 + v24 + 8);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  if (!v26)
  {
    if (v28)
      goto LABEL_14;
    goto LABEL_8;
  }
  if (!v28)
    goto LABEL_14;
  if (*v25 == *v27 && v26 == v28 || (v29 = 0, (sub_244AE44DC() & 1) != 0))
  {
LABEL_8:
    sub_244A7284C(v47 + *(int *)(v23 + 24), (uint64_t)v22, &qword_2573CFF28);
    sub_244A7284C(v48 + *(int *)(v23 + 24), (uint64_t)v20, &qword_2573CFF28);
    v30 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_244A7284C((uint64_t)v22, (uint64_t)v13, &qword_2573CFF28);
    sub_244A7284C((uint64_t)v20, v30, &qword_2573CFF28);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v31((uint64_t)v13, 1, v8) == 1)
    {
      sub_244A72890((uint64_t)v20, &qword_2573CFF28);
      sub_244A72890((uint64_t)v22, &qword_2573CFF28);
      if (v31(v30, 1, v8) == 1)
      {
        sub_244A72890((uint64_t)v13, &qword_2573CFF28);
LABEL_17:
        v36 = v45;
        v35 = v46;
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        v38 = v43;
        v37(v43, v47, v46);
        v39 = v44;
        v37(v44, v48, v35);
        sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v29 = sub_244AE4200();
        v40 = *(void (**)(char *, uint64_t))(v36 + 8);
        v40(v39, v35);
        v40(v38, v35);
        return v29 & 1;
      }
      goto LABEL_13;
    }
    sub_244A7284C((uint64_t)v13, (uint64_t)v17, &qword_2573CFF28);
    if (v31(v30, 1, v8) == 1)
    {
      sub_244A72890((uint64_t)v20, &qword_2573CFF28);
      sub_244A72890((uint64_t)v22, &qword_2573CFF28);
      sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
LABEL_13:
      sub_244A72890((uint64_t)v13, &qword_2573D1D10);
      goto LABEL_14;
    }
    v33 = v42;
    sub_244A729FC(v30, v42, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    v34 = sub_244AD4050((uint64_t)v17, v33, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo, (uint64_t (*)(uint64_t, uint64_t))sub_244AC3DF0);
    sub_244A729C0(v33, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    sub_244A72890((uint64_t)v20, &qword_2573CFF28);
    sub_244A72890((uint64_t)v22, &qword_2573CFF28);
    sub_244A729C0((uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.FinalResponse.DebugInfo);
    sub_244A72890((uint64_t)v13, &qword_2573CFF28);
    if ((v34 & 1) != 0)
      goto LABEL_17;
LABEL_14:
    v29 = 0;
  }
  return v29 & 1;
}

uint64_t sub_244AD0980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  float *v13;
  char v14;
  float *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  _QWORD *v45;
  int v46;
  uint64_t v47;
  _DWORD *v48;
  char v49;
  _DWORD *v50;
  int v51;
  char v52;
  void (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v56 - v9;
  v11 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_SpeculativeDecodingMetrics(0);
  v12 = v11[5];
  v13 = (float *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (float *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_45;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_45;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_45;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_45;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_45;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_45;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_45;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_45;
  }
  v32 = v11[9];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_45;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_45;
  }
  v37 = v11[10];
  v38 = (_QWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 8);
  v40 = (_QWORD *)(a2 + v37);
  v41 = *(unsigned __int8 *)(a2 + v37 + 8);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      goto LABEL_45;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_45;
  }
  v42 = v11[11];
  v43 = (_QWORD *)(a1 + v42);
  v44 = *(_BYTE *)(a1 + v42 + 8);
  v45 = (_QWORD *)(a2 + v42);
  v46 = *(unsigned __int8 *)(a2 + v42 + 8);
  if ((v44 & 1) == 0)
  {
    if (*v43 != *v45)
      LOBYTE(v46) = 1;
    if ((v46 & 1) != 0)
      goto LABEL_45;
LABEL_43:
    v47 = v11[12];
    v48 = (_DWORD *)(a1 + v47);
    v49 = *(_BYTE *)(a1 + v47 + 4);
    v50 = (_DWORD *)(a2 + v47);
    v51 = *(unsigned __int8 *)(a2 + v47 + 4);
    if ((v49 & 1) != 0)
    {
      if (!v51)
        goto LABEL_45;
    }
    else
    {
      if (*v48 != *v50)
        LOBYTE(v51) = 1;
      if ((v51 & 1) != 0)
        goto LABEL_45;
    }
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v54(v10, a1, v4);
    v54(v8, a2, v4);
    sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v52 = sub_244AE4200();
    v55 = *(void (**)(char *, uint64_t))(v5 + 8);
    v55(v8, v4);
    v55(v10, v4);
    return v52 & 1;
  }
  if (v46)
    goto LABEL_43;
LABEL_45:
  v52 = 0;
  return v52 & 1;
}

uint64_t sub_244AD0C34(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_244AE44DC() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_244AE44DC() & 1) != 0))
    {
      v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
      v15 = (char *)a1 + *(int *)(v14 + 24);
      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, &a2[*(int *)(v14 + 24)], v4);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_244AE4200();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
  }
  return v12 & 1;
}

uint64_t sub_244AD0D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  int *Request;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int *v46;
  char v47;
  char v48;
  uint64_t v49;
  _QWORD **v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  int *v57;
  int *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  int v64;
  _BYTE *v65;
  _BYTE *v66;
  int v67;
  uint64_t *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  char v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _BYTE *v88;
  _BYTE *v89;
  char v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  _BYTE *v98;
  _BYTE *v99;
  char v100;
  uint64_t v101;
  void (*v102)(_BYTE *, uint64_t, uint64_t);
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  void (*v106)(_BYTE *, uint64_t);
  _BYTE v108[4];
  int v109;
  int *v110;
  uint64_t v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  _BYTE *v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;

  v120 = sub_244AE3C0C();
  v4 = *(_QWORD *)(v120 - 8);
  v5 = MEMORY[0x24BDAC7A8](v120);
  v7 = &v108[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v108[-v8];
  v128 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v117 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v114 = &v108[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CB8);
  MEMORY[0x24BDAC7A8](v116);
  v121 = &v108[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v115 = &v108[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v118 = &v108[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v119 = &v108[-v17];
  v18 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v125 = *(_QWORD *)(v18 - 8);
  v126 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v122 = &v108[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CA0);
  MEMORY[0x24BDAC7A8](v124);
  v127 = &v108[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v123 = &v108[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v129 = &v108[-v25];
  MEMORY[0x24BDAC7A8](v24);
  v130 = &v108[-v26];
  v27 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v131 = &v108[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CA8);
  MEMORY[0x24BDAC7A8](v30);
  v133 = &v108[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v132 = &v108[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = &v108[-v36];
  MEMORY[0x24BDAC7A8](v35);
  v39 = &v108[-v38];
  Request = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest(0);
  v41 = Request[7];
  v134 = a1;
  v135 = a2;
  v42 = (_QWORD *)(a1 + v41);
  v43 = *(_QWORD *)(a1 + v41 + 8);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  if (!v43)
  {
    v113 = v9;
    if (v45)
      goto LABEL_51;
    goto LABEL_8;
  }
  if (!v45)
    goto LABEL_51;
  v113 = v9;
  if (*v42 == *v44 && v43 == v45 || (v46 = Request, v47 = sub_244AE44DC(), Request = v46, v48 = 0, (v47 & 1) != 0))
  {
LABEL_8:
    v112 = v7;
    v111 = v4;
    v49 = Request[8];
    v50 = (_QWORD **)v134;
    v51 = *(_QWORD *)(v134 + v49);
    v52 = *(_QWORD *)(v134 + v49 + 8);
    v53 = (uint64_t *)(v135 + v49);
    v54 = *v53;
    v55 = v53[1];
    if (v52 >> 60 == 15)
    {
      if (v55 >> 60 == 15)
        goto LABEL_14;
    }
    else if (v55 >> 60 != 15)
    {
      v110 = Request;
      sub_244A93AB0(v51, v52);
      sub_244A93AB0(v54, v55);
      sub_244ACEF2C(v51, v52);
      v109 = v56;
      sub_244A81EAC(v54, v55);
      sub_244A81EAC(v51, v52);
      Request = v110;
      if ((v109 & 1) == 0)
        goto LABEL_51;
LABEL_14:
      v57 = Request;
      sub_244A7284C((uint64_t)v50 + Request[9], (uint64_t)v39, &qword_2573CFAD8);
      v58 = v57;
      v59 = v135;
      sub_244A7284C(v135 + v57[9], (uint64_t)v37, &qword_2573CFAD8);
      v60 = v133;
      v61 = (uint64_t)&v133[*(int *)(v30 + 48)];
      sub_244A7284C((uint64_t)v39, (uint64_t)v133, &qword_2573CFAD8);
      v62 = (uint64_t)v60;
      sub_244A7284C((uint64_t)v37, v61, &qword_2573CFAD8);
      v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      if (v63(v62, 1, v27) == 1)
      {
        sub_244A72890((uint64_t)v37, &qword_2573CFAD8);
        sub_244A72890((uint64_t)v39, &qword_2573CFAD8);
        v64 = v63(v61, 1, v27);
        v65 = v112;
        if (v64 == 1)
        {
          sub_244A72890((uint64_t)v133, &qword_2573CFAD8);
LABEL_22:
          if ((sub_244ACE390(*v50, *(_QWORD **)v59) & 1) == 0)
            goto LABEL_51;
          v74 = v58[10];
          v75 = *((unsigned __int8 *)v50 + v74);
          v76 = *(unsigned __int8 *)(v59 + v74);
          if (v75 == 2)
          {
            v77 = v128;
            v78 = v129;
            v79 = v130;
            if (v76 != 2)
              goto LABEL_51;
          }
          else
          {
            v77 = v128;
            v78 = v129;
            v79 = v130;
            if (v76 == 2 || ((((v76 & 1) == 0) ^ v75) & 1) == 0)
              goto LABEL_51;
          }
          sub_244A7284C(v134 + v58[11], (uint64_t)v79, &qword_2573CFAC8);
          sub_244A7284C(v59 + v58[11], (uint64_t)v78, &qword_2573CFAC8);
          v80 = v127;
          v81 = (uint64_t)&v127[*(int *)(v124 + 48)];
          sub_244A7284C((uint64_t)v79, (uint64_t)v127, &qword_2573CFAC8);
          v82 = (uint64_t)v80;
          sub_244A7284C((uint64_t)v78, v81, &qword_2573CFAC8);
          v83 = v126;
          v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
          if (v84(v82, 1, v126) == 1)
          {
            sub_244A72890((uint64_t)v78, &qword_2573CFAC8);
            sub_244A72890((uint64_t)v79, &qword_2573CFAC8);
            if (v84(v81, 1, v83) == 1)
            {
              sub_244A72890((uint64_t)v127, &qword_2573CFAC8);
LABEL_41:
              v91 = v134;
              if ((sub_244ACE454(*(_QWORD *)(v134 + 8), *(_QWORD *)(v59 + 8)) & 1) == 0)
                goto LABEL_51;
              v92 = v119;
              sub_244A7284C(v91 + v58[12], (uint64_t)v119, &qword_2573CFAF8);
              v93 = v118;
              sub_244A7284C(v59 + v58[12], (uint64_t)v118, &qword_2573CFAF8);
              v94 = v121;
              v95 = (uint64_t)&v121[*(int *)(v116 + 48)];
              sub_244A7284C((uint64_t)v92, (uint64_t)v121, &qword_2573CFAF8);
              v96 = v94;
              sub_244A7284C((uint64_t)v93, v95, &qword_2573CFAF8);
              v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
              if (v97((uint64_t)v96, 1, v77) == 1)
              {
                sub_244A72890((uint64_t)v93, &qword_2573CFAF8);
                v96 = v121;
                sub_244A72890((uint64_t)v92, &qword_2573CFAF8);
                if (v97(v95, 1, v77) == 1)
                {
                  sub_244A72890((uint64_t)v96, &qword_2573CFAF8);
LABEL_50:
                  v101 = v111;
                  v102 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v111 + 16);
                  v103 = v59;
                  v104 = v113;
                  v105 = v120;
                  v102(v113, v134 + v58[6], v120);
                  v102(v65, v103 + v58[6], v105);
                  sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                  v48 = sub_244AE4200();
                  v106 = *(void (**)(_BYTE *, uint64_t))(v101 + 8);
                  v106(v65, v105);
                  v106(v104, v105);
                  return v48 & 1;
                }
                goto LABEL_48;
              }
              v98 = v115;
              sub_244A7284C((uint64_t)v96, (uint64_t)v115, &qword_2573CFAF8);
              if (v97(v95, 1, v77) == 1)
              {
                sub_244A72890((uint64_t)v93, &qword_2573CFAF8);
                sub_244A72890((uint64_t)v92, &qword_2573CFAF8);
                sub_244A729C0((uint64_t)v98, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
LABEL_48:
                v68 = &qword_2573D1CB8;
                v69 = v96;
                goto LABEL_20;
              }
              v99 = v114;
              sub_244A729FC(v95, (uint64_t)v114, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
              v100 = sub_244AD1F44((uint64_t)v98, (uint64_t)v99);
              sub_244A729C0((uint64_t)v99, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
              sub_244A72890((uint64_t)v93, &qword_2573CFAF8);
              sub_244A72890((uint64_t)v92, &qword_2573CFAF8);
              sub_244A729C0((uint64_t)v98, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
              sub_244A72890((uint64_t)v96, &qword_2573CFAF8);
              if ((v100 & 1) != 0)
                goto LABEL_50;
LABEL_51:
              v48 = 0;
              return v48 & 1;
            }
            goto LABEL_33;
          }
          v85 = v123;
          sub_244A7284C(v82, (uint64_t)v123, &qword_2573CFAC8);
          if (v84(v81, 1, v83) == 1)
          {
            sub_244A72890((uint64_t)v129, &qword_2573CFAC8);
            sub_244A72890((uint64_t)v130, &qword_2573CFAC8);
            sub_244A729C0((uint64_t)v85, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
LABEL_33:
            v68 = &qword_2573D1CA0;
            v69 = v127;
            goto LABEL_20;
          }
          v86 = v81;
          v87 = v122;
          sub_244A729FC(v86, (uint64_t)v122, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
          v89 = v129;
          v88 = v130;
          if ((*v85 == *v87 && v85[1] == v87[1] || (sub_244AE44DC() & 1) != 0)
            && (v85[2] == v87[2] && v85[3] == v87[3] || (sub_244AE44DC() & 1) != 0))
          {
            sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v90 = sub_244AE4200();
            sub_244A729C0((uint64_t)v87, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
            sub_244A72890((uint64_t)v89, &qword_2573CFAC8);
            sub_244A72890((uint64_t)v88, &qword_2573CFAC8);
            sub_244A729C0((uint64_t)v85, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
            sub_244A72890((uint64_t)v127, &qword_2573CFAC8);
            if ((v90 & 1) == 0)
              goto LABEL_51;
            goto LABEL_41;
          }
          sub_244A729C0((uint64_t)v87, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
          sub_244A72890((uint64_t)v89, &qword_2573CFAC8);
          sub_244A72890((uint64_t)v88, &qword_2573CFAC8);
          sub_244A729C0((uint64_t)v85, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
          v69 = v127;
          v68 = &qword_2573CFAC8;
LABEL_20:
          sub_244A72890((uint64_t)v69, v68);
          goto LABEL_51;
        }
      }
      else
      {
        v66 = v132;
        sub_244A7284C(v62, (uint64_t)v132, &qword_2573CFAD8);
        v67 = v63(v61, 1, v27);
        v65 = v112;
        if (v67 != 1)
        {
          v70 = v61;
          v71 = (uint64_t)v66;
          v72 = v131;
          sub_244A729FC(v70, (uint64_t)v131, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
          v73 = sub_244AD4050(v71, (uint64_t)v72, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t (*)(uint64_t, uint64_t))sub_244AA1FB8);
          sub_244A729C0((uint64_t)v72, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
          sub_244A72890((uint64_t)v37, &qword_2573CFAD8);
          sub_244A72890((uint64_t)v39, &qword_2573CFAD8);
          sub_244A729C0(v71, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
          v59 = v135;
          sub_244A72890(v62, &qword_2573CFAD8);
          if ((v73 & 1) == 0)
            goto LABEL_51;
          goto LABEL_22;
        }
        sub_244A72890((uint64_t)v37, &qword_2573CFAD8);
        sub_244A72890((uint64_t)v39, &qword_2573CFAD8);
        sub_244A729C0((uint64_t)v66, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
      }
      v68 = &qword_2573D1CA8;
      v69 = v133;
      goto LABEL_20;
    }
    sub_244A93AB0(v51, v52);
    sub_244A93AB0(v54, v55);
    sub_244A81EAC(v51, v52);
    sub_244A81EAC(v54, v55);
    goto LABEL_51;
  }
  return v48 & 1;
}

uint64_t sub_244AD19DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  char v35;
  _DWORD *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v4 = sub_244AE3C0C();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v44 - v7;
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CD0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB20);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v51 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v44 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v44 - v20;
  v22 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter(0);
  v23 = *(int *)(v22 + 20);
  v48 = a1;
  sub_244A7284C(a1 + v23, (uint64_t)v21, &qword_2573CFB20);
  v24 = *(int *)(v22 + 20);
  v49 = a2;
  sub_244A7284C(a2 + v24, (uint64_t)v19, &qword_2573CFB20);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_244A7284C((uint64_t)v21, (uint64_t)v13, &qword_2573CFB20);
  sub_244A7284C((uint64_t)v19, v25, &qword_2573CFB20);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) != 1)
  {
    v27 = (uint64_t)v50;
    v28 = v51;
    sub_244A7284C((uint64_t)v13, v51, &qword_2573CFB20);
    if (v26(v25, 1, v8) != 1)
    {
      sub_244A729FC(v25, v27, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
      v31 = sub_244AD1DE0(v28, v27, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
      sub_244A729C0(v27, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
      sub_244A72890((uint64_t)v19, &qword_2573CFB20);
      sub_244A72890((uint64_t)v21, &qword_2573CFB20);
      sub_244A729C0(v28, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
      sub_244A72890((uint64_t)v13, &qword_2573CFB20);
      if ((v31 & 1) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
    sub_244A72890((uint64_t)v19, &qword_2573CFB20);
    sub_244A72890((uint64_t)v21, &qword_2573CFB20);
    sub_244A729C0(v28, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
LABEL_6:
    sub_244A72890((uint64_t)v13, &qword_2573D1CD0);
    goto LABEL_7;
  }
  sub_244A72890((uint64_t)v19, &qword_2573CFB20);
  sub_244A72890((uint64_t)v21, &qword_2573CFB20);
  if (v26(v25, 1, v8) != 1)
    goto LABEL_6;
  sub_244A72890((uint64_t)v13, &qword_2573CFB20);
LABEL_10:
  v32 = *(int *)(v22 + 24);
  v33 = v49;
  v34 = (_DWORD *)(v48 + v32);
  v35 = *(_BYTE *)(v48 + v32 + 4);
  v36 = (_DWORD *)(v49 + v32);
  v37 = *(unsigned __int8 *)(v49 + v32 + 4);
  if ((v35 & 1) != 0)
  {
    if (v37)
    {
LABEL_16:
      v39 = v46;
      v38 = v47;
      v40 = *(void (**)(char *))(v46 + 16);
      v41 = v44;
      v40(v44);
      v42 = v45;
      ((void (*)(char *, uint64_t, uint64_t))v40)(v45, v33, v38);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v29 = sub_244AE4200();
      v43 = *(void (**)(char *, uint64_t))(v39 + 8);
      v43(v42, v38);
      v43(v41, v38);
      return v29 & 1;
    }
  }
  else
  {
    if (*v34 != *v36)
      LOBYTE(v37) = 1;
    if ((v37 & 1) == 0)
      goto LABEL_16;
  }
LABEL_7:
  v29 = 0;
  return v29 & 1;
}

uint64_t sub_244AD1DE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - v11;
  v13 = *(int *)(a3(0) + 20);
  v14 = (_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  if (!v15)
  {
    if (!v17)
    {
LABEL_11:
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v20(v12, a1, v6);
      v20(v10, a2, v6);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v19 = sub_244AE4200();
      v21 = *(void (**)(char *, uint64_t))(v7 + 8);
      v21(v10, v6);
      v21(v12, v6);
      return v19 & 1;
    }
LABEL_10:
    v19 = 0;
    return v19 & 1;
  }
  if (!v17)
    goto LABEL_10;
  if (*v14 == *v16 && v15 == v17)
    goto LABEL_11;
  v19 = 0;
  if ((sub_244AE44DC() & 1) != 0)
    goto LABEL_11;
  return v19 & 1;
}

uint64_t sub_244AD1F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_244AE3C0C();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v41 - v7;
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CC0);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v43 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CC8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v41 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v41 - v24;
  v45 = a1;
  sub_244A7284C(a1, (uint64_t)&v41 - v24, &qword_2573CFAF0);
  v46 = a2;
  sub_244A7284C(a2, (uint64_t)v23, &qword_2573CFAF0);
  v26 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_244A7284C((uint64_t)v25, (uint64_t)v16, &qword_2573CFAF0);
  sub_244A7284C((uint64_t)v23, v26, &qword_2573CFAF0);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v27((uint64_t)v16, 1, v11) != 1)
  {
    sub_244A7284C((uint64_t)v16, (uint64_t)v20, &qword_2573CFAF0);
    if (v27(v26, 1, v11) != 1)
    {
      v28 = v43;
      sub_244A729FC(v26, v43, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
      v29 = v42;
      v30 = (uint64_t *)(v42 + *(int *)(v41 + 48));
      sub_244A72964((uint64_t)v20, v42, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
      sub_244A72964(v28, (uint64_t)v30, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
      v31 = v44;
      sub_244A729FC(v29, (uint64_t)v44, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
      LOBYTE(v29) = sub_244AD23F4(v31, v30);
      sub_244A729C0((uint64_t)v30, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
      sub_244A729C0((uint64_t)v31, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
      sub_244A729C0(v28, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
      sub_244A72890((uint64_t)v23, &qword_2573CFAF0);
      sub_244A72890((uint64_t)v25, &qword_2573CFAF0);
      sub_244A729C0((uint64_t)v20, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
      sub_244A72890((uint64_t)v16, &qword_2573CFAF0);
      if ((v29 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v38 = 0;
      return v38 & 1;
    }
    sub_244A72890((uint64_t)v23, &qword_2573CFAF0);
    sub_244A72890((uint64_t)v25, &qword_2573CFAF0);
    sub_244A729C0((uint64_t)v20, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
LABEL_6:
    sub_244A72890((uint64_t)v16, &qword_2573D1CC8);
    goto LABEL_9;
  }
  sub_244A72890((uint64_t)v23, &qword_2573CFAF0);
  sub_244A72890((uint64_t)v25, &qword_2573CFAF0);
  if (v27(v26, 1, v11) != 1)
    goto LABEL_6;
  sub_244A72890((uint64_t)v16, &qword_2573CFAF0);
LABEL_8:
  v32 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v34 = v49;
  v33 = v50;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  v36 = v47;
  v35(v47, v45 + *(int *)(v32 + 20), v50);
  v37 = v48;
  v35(v48, v46 + *(int *)(v32 + 20), v33);
  sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v38 = sub_244AE4200();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t sub_244AD23F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v12 = *(int *)(v11 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = *(uint64_t *)((char *)a1 + v12 + 8);
  v15 = (uint64_t *)((char *)a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_12;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_12;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_244AE44DC() & 1) != 0))
  {
LABEL_10:
    if ((sub_244ACE590(*a1, *a2) & 1) != 0)
    {
      v19 = (char *)a1 + *(int *)(v11 + 20);
      v20 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v20(v10, v19, v4);
      v20(v8, (char *)a2 + *(int *)(v11 + 20), v4);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v18 = sub_244AE4200();
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v8, v4);
      v21(v10, v4);
      return v18 & 1;
    }
LABEL_12:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_244AD2570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CC0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)&v10[*(int *)(v8 + 48)];
  sub_244A72964(a1, (uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
  sub_244A72964(a2, (uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
  sub_244A729FC((uint64_t)v10, (uint64_t)v6, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
  v12 = *(int *)(v4 + 24);
  v13 = (uint64_t *)((char *)v6 + v12);
  v14 = *(uint64_t *)((char *)v6 + v12 + 8);
  v15 = (uint64_t *)((char *)v11 + v12);
  v16 = v15[1];
  if (v14)
  {
    if (!v16)
      goto LABEL_13;
    v17 = *v13 == *v15 && v14 == v16;
    if (!v17 && (sub_244AE44DC() & 1) == 0)
      goto LABEL_13;
  }
  else if (v16)
  {
LABEL_13:
    v18 = 0;
    goto LABEL_14;
  }
  if ((sub_244ACE590(*v6, *v11) & 1) == 0)
    goto LABEL_13;
  sub_244AE3C0C();
  sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  if ((sub_244AE4200() & 1) == 0)
    goto LABEL_13;
  v18 = 1;
LABEL_14:
  sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
  sub_244A729C0((uint64_t)v6, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1);
  return v18;
}

uint64_t sub_244AD2738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _DWORD *v12;
  char v13;
  _DWORD *v14;
  int v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0) + 20);
  v12 = (_DWORD *)(a1 + v11);
  v13 = *(_BYTE *)(a1 + v11 + 4);
  v14 = (_DWORD *)(a2 + v11);
  v15 = *(unsigned __int8 *)(a2 + v11 + 4);
  if ((v13 & 1) == 0)
  {
    if (*v12 != *v14)
      LOBYTE(v15) = 1;
    if ((v15 & 1) != 0)
      goto LABEL_3;
LABEL_7:
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, a1, v4);
    v17(v8, a2, v4);
    sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = sub_244AE4200();
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
    return v16 & 1;
  }
  if (v15)
    goto LABEL_7;
LABEL_3:
  v16 = 0;
  return v16 & 1;
}

uint64_t sub_244AD2880(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_244AE44DC() & 1) != 0))
  {
    if (a1[2] == *((_QWORD *)a2 + 2) && (sub_244ACE7A8(a1[3], *((_QWORD *)a2 + 3)) & 1) != 0)
    {
      v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_PerfMetrics(0);
      v14 = (char *)a1 + *(int *)(v13 + 28);
      v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, &a2[*(int *)(v13 + 28)], v4);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_244AE4200();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_244AD29E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_244AE3C0C();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFDF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_244A7284C(a1, (uint64_t)&v35 - v20, &qword_2573CFDF0);
  v39 = a2;
  sub_244A7284C(a2, (uint64_t)v19, &qword_2573CFDF0);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_244A7284C((uint64_t)v21, (uint64_t)v12, &qword_2573CFDF0);
  sub_244A7284C((uint64_t)v19, v22, &qword_2573CFDF0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_244A7284C((uint64_t)v12, (uint64_t)v16, &qword_2573CFDF0);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_244A729FC(v22, v36, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      v25 = sub_244AD2DB0((uint64_t)v16, v24);
      sub_244A729C0(v24, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      sub_244A72890((uint64_t)v19, &qword_2573CFDF0);
      sub_244A72890((uint64_t)v21, &qword_2573CFDF0);
      sub_244A729C0((uint64_t)v16, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      sub_244A72890((uint64_t)v12, &qword_2573CFDF0);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_244A72890((uint64_t)v19, &qword_2573CFDF0);
    sub_244A72890((uint64_t)v21, &qword_2573CFDF0);
    sub_244A729C0((uint64_t)v16, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
LABEL_6:
    sub_244A72890((uint64_t)v12, &qword_2573D1C70);
    goto LABEL_9;
  }
  sub_244A72890((uint64_t)v19, &qword_2573CFDF0);
  sub_244A72890((uint64_t)v21, &qword_2573CFDF0);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_244A72890((uint64_t)v12, &qword_2573CFDF0);
LABEL_8:
  v26 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_244AE4200();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_244AD2DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t (*v26)(uint64_t);
  char v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(uint64_t);
  char *v34;
  uint64_t v35;

  v35 = a2;
  v3 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar(0);
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char **)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char **)((char *)&v34 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char **)((char *)&v34 - v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C78);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_244A72964(a1, (uint64_t)v23, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
  sub_244A72964(v35, v24, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_244A72964((uint64_t)v23, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v26 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar;
        sub_244A729FC(v24, (uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
        v27 = sub_244AD3114(v17, v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
        sub_244A729C0((uint64_t)v7, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar);
        v28 = (uint64_t)v17;
LABEL_9:
        v32 = v26;
LABEL_14:
        sub_244A729C0(v28, v32);
        sub_244A729C0((uint64_t)v23, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
        return v27 & 1;
      }
      v29 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar;
      v30 = (uint64_t)v17;
    }
    else
    {
      sub_244A72964((uint64_t)v23, (uint64_t)v14, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v26 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar;
        v31 = v34;
        sub_244A729FC(v24, (uint64_t)v34, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
        v27 = sub_244AD3114(v14, v31, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
        sub_244A729C0((uint64_t)v31, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar);
        v28 = (uint64_t)v14;
        goto LABEL_9;
      }
      v29 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar;
      v30 = (uint64_t)v14;
    }
  }
  else
  {
    sub_244A72964((uint64_t)v23, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.OneOf_ConstraintType);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_244A729FC(v24, (uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
      v27 = sub_244AD3114(v19, v10, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
      sub_244A729C0((uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema);
      v28 = (uint64_t)v19;
      v32 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema;
      goto LABEL_14;
    }
    v29 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema;
    v30 = (uint64_t)v19;
  }
  sub_244A729C0(v30, v29);
  sub_244A72890((uint64_t)v23, &qword_2573D1C78);
  v27 = 0;
  return v27 & 1;
}

uint64_t sub_244AD3114(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  v13 = a1[1];
  v14 = *((_QWORD *)a2 + 1);
  if (!v13)
  {
    if (!v14)
    {
LABEL_11:
      v17 = a3(0);
      v18 = (char *)a1 + *(int *)(v17 + 20);
      v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v19(v12, v18, v6);
      v19(v10, &a2[*(int *)(v17 + 20)], v6);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v16 = sub_244AE4200();
      v20 = *(void (**)(char *, uint64_t))(v7 + 8);
      v20(v10, v6);
      v20(v12, v6);
      return v16 & 1;
    }
LABEL_10:
    v16 = 0;
    return v16 & 1;
  }
  if (!v14)
    goto LABEL_10;
  if (*a1 == *(_QWORD *)a2 && v13 == v14)
    goto LABEL_11;
  v16 = 0;
  if ((sub_244AE44DC() & 1) != 0)
    goto LABEL_11;
  return v16 & 1;
}

uint64_t sub_244AD3278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double *v12;
  char v13;
  double *v14;
  int v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0) + 20);
  v12 = (double *)(a1 + v11);
  v13 = *(_BYTE *)(a1 + v11 + 8);
  v14 = (double *)(a2 + v11);
  v15 = *(unsigned __int8 *)(a2 + v11 + 8);
  if ((v13 & 1) == 0)
  {
    if (*v12 != *v14)
      LOBYTE(v15) = 1;
    if ((v15 & 1) != 0)
      goto LABEL_3;
LABEL_7:
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, a1, v4);
    v17(v8, a2, v4);
    sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = sub_244AE4200();
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
    return v16 & 1;
  }
  if (v15)
    goto LABEL_7;
LABEL_3:
  v16 = 0;
  return v16 & 1;
}

unint64_t sub_244AD33C0()
{
  unint64_t result;

  result = qword_2573D1C48;
  if (!qword_2573D1C48)
  {
    result = MEMORY[0x24951E280](&unk_244AE60E8, &type metadata for Apple_Cloudml_Inference_Tie_ModelConfig.LLMPreprocessing);
    atomic_store(result, (unint64_t *)&qword_2573D1C48);
  }
  return result;
}

uint64_t sub_244AD3404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int EnumCaseMultiPayload;
  uint64_t (*v24)(uint64_t);
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling(0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C68);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &v21[*(int *)(v19 + 48)];
  sub_244A72964(a1, (uint64_t)v21, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  sub_244A72964(a2, (uint64_t)v22, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_244A72964((uint64_t)v21, (uint64_t)v15, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v24 = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling;
        sub_244A729FC((uint64_t)v22, (uint64_t)v8, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
        v25 = sub_244AD3278((uint64_t)v15, (uint64_t)v8);
        sub_244A729C0((uint64_t)v8, type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling);
        v26 = (uint64_t)v15;
LABEL_9:
        sub_244A729C0(v26, v24);
        sub_244A729C0((uint64_t)v21, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
        return v25 & 1;
      }
      v29 = type metadata accessor for Apple_Cloudml_Inference_Tie_NucleusSampling;
      v30 = (uint64_t)v15;
    }
    else
    {
      sub_244A72964((uint64_t)v21, (uint64_t)v12, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v24 = type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling;
        v28 = v33;
        sub_244A729FC((uint64_t)v22, v33, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
        v25 = sub_244AD2738((uint64_t)v12, v28);
        sub_244A729C0(v28, type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling);
        v26 = (uint64_t)v12;
        goto LABEL_9;
      }
      v29 = type metadata accessor for Apple_Cloudml_Inference_Tie_TopKSampling;
      v30 = (uint64_t)v12;
    }
    sub_244A729C0(v30, v29);
LABEL_13:
    sub_244A72890((uint64_t)v21, &qword_2573D1C68);
    v25 = 0;
    return v25 & 1;
  }
  sub_244A72964((uint64_t)v21, (uint64_t)v17, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  if (swift_getEnumCaseMultiPayload())
    goto LABEL_13;
  v27 = *v17 ^ *v22;
  sub_244A729C0((uint64_t)v21, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
  v25 = v27 ^ 1;
  return v25 & 1;
}

uint64_t sub_244AD36FC(_QWORD **a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  int *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  _DWORD *v36;
  char v37;
  char *v38;
  int v39;
  uint64_t v40;
  float *v41;
  char v42;
  float *v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  char *v48;
  int v49;
  uint64_t v50;
  _DWORD *v51;
  char v52;
  char *v53;
  int v54;
  uint64_t v55;
  float *v56;
  char v57;
  float *v58;
  int v59;
  uint64_t v60;
  float *v61;
  char v62;
  float *v63;
  int v64;
  uint64_t v65;
  _QWORD *v66;
  char v67;
  char *v68;
  int v69;
  uint64_t v70;
  double *v71;
  char v72;
  double *v73;
  int v74;
  uint64_t v75;
  double *v76;
  char v77;
  double *v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  _DWORD *v82;
  char v83;
  char *v84;
  int v85;
  uint64_t v86;
  _DWORD *v87;
  char v88;
  char *v89;
  int v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  unsigned int (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t *v96;
  uint64_t v97;
  char v98;
  char v100;
  uint64_t v101;
  _DWORD *v102;
  char v103;
  char *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  char *v117;
  char *v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v4 = sub_244AE3C0C();
  v125 = *(_QWORD *)(v4 - 8);
  v126 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v124 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v123 = (char *)&v120 - v7;
  v132 = type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints(0);
  v129 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v122 = (uint64_t)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C58);
  MEMORY[0x24BDAC7A8](v128);
  v133 = (uint64_t)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB00);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v127 = (uint64_t)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v130 = (uint64_t)&v120 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v131 = (uint64_t)&v120 - v15;
  v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1C60);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAE0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v120 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v120 - v30;
  v32 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions(0);
  v33 = a2;
  v34 = v32;
  v35 = v32[7];
  v36 = (_DWORD *)((char *)a1 + v35);
  v37 = *((_BYTE *)a1 + v35 + 4);
  v38 = &v33[v35];
  v39 = v33[v35 + 4];
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_80;
  }
  else
  {
    if (*v36 != *(_DWORD *)v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_80;
  }
  v40 = v32[8];
  v41 = (float *)((char *)a1 + v40);
  v42 = *((_BYTE *)a1 + v40 + 4);
  v43 = (float *)&v33[v40];
  v44 = v33[v40 + 4];
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_80;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_80;
  }
  v45 = v32[9];
  v46 = (_DWORD *)((char *)a1 + v45);
  v47 = *((_BYTE *)a1 + v45 + 4);
  v48 = &v33[v45];
  v49 = v33[v45 + 4];
  if ((v47 & 1) != 0)
  {
    if (!v49)
      goto LABEL_80;
  }
  else
  {
    if (*v46 != *(_DWORD *)v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_80;
  }
  v50 = v32[10];
  v51 = (_DWORD *)((char *)a1 + v50);
  v52 = *((_BYTE *)a1 + v50 + 4);
  v53 = &v33[v50];
  v54 = v33[v50 + 4];
  if ((v52 & 1) != 0)
  {
    if (!v54)
      goto LABEL_80;
  }
  else
  {
    if (*v51 != *(_DWORD *)v53)
      LOBYTE(v54) = 1;
    if ((v54 & 1) != 0)
      goto LABEL_80;
  }
  v55 = v32[11];
  v56 = (float *)((char *)a1 + v55);
  v57 = *((_BYTE *)a1 + v55 + 4);
  v58 = (float *)&v33[v55];
  v59 = v33[v55 + 4];
  if ((v57 & 1) != 0)
  {
    if (!v59)
      goto LABEL_80;
  }
  else
  {
    if (*v56 != *v58)
      LOBYTE(v59) = 1;
    if ((v59 & 1) != 0)
      goto LABEL_80;
  }
  v60 = v32[12];
  v61 = (float *)((char *)a1 + v60);
  v62 = *((_BYTE *)a1 + v60 + 4);
  v63 = (float *)&v33[v60];
  v64 = v33[v60 + 4];
  if ((v62 & 1) != 0)
  {
    if (!v64)
      goto LABEL_80;
  }
  else
  {
    if (*v61 != *v63)
      LOBYTE(v64) = 1;
    if ((v64 & 1) != 0)
      goto LABEL_80;
  }
  v65 = v32[13];
  v66 = (_QWORD **)((char *)a1 + v65);
  v67 = *((_BYTE *)a1 + v65 + 8);
  v68 = &v33[v65];
  v69 = v33[v65 + 8];
  if ((v67 & 1) != 0)
  {
    if (!v69)
      goto LABEL_80;
  }
  else
  {
    if (*v66 != *(_QWORD *)v68)
      LOBYTE(v69) = 1;
    if ((v69 & 1) != 0)
      goto LABEL_80;
  }
  v70 = v32[14];
  v71 = (double *)((char *)a1 + v70);
  v72 = *((_BYTE *)a1 + v70 + 8);
  v73 = (double *)&v33[v70];
  v74 = v33[v70 + 8];
  if ((v72 & 1) != 0)
  {
    if (!v74)
      goto LABEL_80;
  }
  else
  {
    if (*v71 != *v73)
      LOBYTE(v74) = 1;
    if ((v74 & 1) != 0)
      goto LABEL_80;
  }
  v75 = v32[15];
  v76 = (double *)((char *)a1 + v75);
  v77 = *((_BYTE *)a1 + v75 + 8);
  v78 = (double *)&v33[v75];
  v79 = v33[v75 + 8];
  if ((v77 & 1) != 0)
  {
    if (!v79)
      goto LABEL_80;
  }
  else
  {
    if (*v76 != *v78)
      LOBYTE(v79) = 1;
    if ((v79 & 1) != 0)
      goto LABEL_80;
  }
  v80 = *a1;
  v121 = v33;
  if ((sub_244ACE390(v80, *(_QWORD **)v33) & 1) == 0)
    goto LABEL_80;
  v81 = v34[16];
  v82 = (_DWORD *)((char *)a1 + v81);
  v83 = *((_BYTE *)a1 + v81 + 4);
  v84 = &v121[v81];
  v85 = v121[v81 + 4];
  if ((v83 & 1) != 0)
  {
    if (!v85)
      goto LABEL_80;
  }
  else
  {
    if (*v82 != *(_DWORD *)v84)
      LOBYTE(v85) = 1;
    if ((v85 & 1) != 0)
      goto LABEL_80;
  }
  v86 = v34[17];
  v87 = (_DWORD *)((char *)a1 + v86);
  v88 = *((_BYTE *)a1 + v86 + 4);
  v89 = &v121[v86];
  v90 = v121[v86 + 4];
  if ((v88 & 1) != 0)
  {
    if (!v90)
      goto LABEL_80;
  }
  else
  {
    if (*v87 != *(_DWORD *)v89)
      LOBYTE(v90) = 1;
    if ((v90 & 1) != 0)
      goto LABEL_80;
  }
  v91 = v34[18];
  v92 = *((unsigned __int8 *)a1 + v91);
  v93 = v121[v91];
  if (v92 == 2)
  {
    if (v93 != 2)
      goto LABEL_80;
  }
  else if (v93 == 2 || ((((v93 & 1) == 0) ^ v92) & 1) == 0)
  {
    goto LABEL_80;
  }
  sub_244A7284C((uint64_t)a1 + v34[5], (uint64_t)v31, &qword_2573CFAE0);
  sub_244A7284C((uint64_t)&v121[v34[5]], (uint64_t)v29, &qword_2573CFAE0);
  v94 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_244A7284C((uint64_t)v31, (uint64_t)v22, &qword_2573CFAE0);
  v120 = v94;
  sub_244A7284C((uint64_t)v29, v94, &qword_2573CFAE0);
  v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v95((uint64_t)v22, 1, v16) != 1)
  {
    sub_244A7284C((uint64_t)v22, (uint64_t)v26, &qword_2573CFAE0);
    if (v95(v120, 1, v16) != 1)
    {
      sub_244A729FC(v120, (uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      v100 = sub_244AD3404((uint64_t)v26, (uint64_t)v19);
      sub_244A729C0((uint64_t)v19, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      sub_244A72890((uint64_t)v29, &qword_2573CFAE0);
      sub_244A72890((uint64_t)v31, &qword_2573CFAE0);
      sub_244A729C0((uint64_t)v26, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
      sub_244A72890((uint64_t)v22, &qword_2573CFAE0);
      if ((v100 & 1) == 0)
        goto LABEL_80;
      goto LABEL_83;
    }
    sub_244A72890((uint64_t)v29, &qword_2573CFAE0);
    sub_244A72890((uint64_t)v31, &qword_2573CFAE0);
    sub_244A729C0((uint64_t)v26, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig.GenerationOptions.OneOf_SamplingStrategy);
LABEL_78:
    v96 = &qword_2573D1C60;
    v97 = (uint64_t)v22;
LABEL_79:
    sub_244A72890(v97, v96);
    goto LABEL_80;
  }
  sub_244A72890((uint64_t)v29, &qword_2573CFAE0);
  sub_244A72890((uint64_t)v31, &qword_2573CFAE0);
  if (v95(v120, 1, v16) != 1)
    goto LABEL_78;
  sub_244A72890((uint64_t)v22, &qword_2573CFAE0);
LABEL_83:
  v101 = v34[19];
  v102 = (_DWORD *)((char *)a1 + v101);
  v103 = *((_BYTE *)a1 + v101 + 4);
  v104 = &v121[v101];
  v105 = v121[v101 + 4];
  if ((v103 & 1) != 0)
  {
    if (!v105)
      goto LABEL_80;
  }
  else
  {
    if (*v102 != *(_DWORD *)v104)
      LOBYTE(v105) = 1;
    if ((v105 & 1) != 0)
      goto LABEL_80;
  }
  v106 = v131;
  sub_244A7284C((uint64_t)a1 + v34[20], v131, &qword_2573CFB00);
  v107 = v130;
  sub_244A7284C((uint64_t)&v121[v34[20]], v130, &qword_2573CFB00);
  v108 = v133;
  v109 = v133 + *(int *)(v128 + 48);
  sub_244A7284C(v106, v133, &qword_2573CFB00);
  sub_244A7284C(v107, v109, &qword_2573CFB00);
  v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
  if (v110(v108, 1, v132) == 1)
  {
    sub_244A72890(v130, &qword_2573CFB00);
    sub_244A72890(v131, &qword_2573CFB00);
    if (v110(v109, 1, v132) == 1)
    {
      sub_244A72890(v133, &qword_2573CFB00);
LABEL_96:
      v115 = v125;
      v114 = v126;
      v116 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
      v117 = v123;
      v116(v123, (char *)a1 + v34[6], v126);
      v118 = v124;
      v116(v124, &v121[v34[6]], v114);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v98 = sub_244AE4200();
      v119 = *(void (**)(char *, uint64_t))(v115 + 8);
      v119(v118, v114);
      v119(v117, v114);
      return v98 & 1;
    }
    goto LABEL_94;
  }
  sub_244A7284C(v133, v127, &qword_2573CFB00);
  if (v110(v109, 1, v132) == 1)
  {
    sub_244A72890(v130, &qword_2573CFB00);
    sub_244A72890(v131, &qword_2573CFB00);
    sub_244A729C0(v127, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
LABEL_94:
    v96 = &qword_2573D1C58;
    v97 = v133;
    goto LABEL_79;
  }
  v111 = v122;
  sub_244A729FC(v109, v122, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
  v112 = v127;
  v113 = sub_244AD29E8(v127, v111);
  sub_244A729C0(v111, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
  sub_244A72890(v130, &qword_2573CFB00);
  sub_244A72890(v131, &qword_2573CFB00);
  sub_244A729C0(v112, type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints);
  sub_244A72890(v133, &qword_2573CFB00);
  if ((v113 & 1) != 0)
    goto LABEL_96;
LABEL_80:
  v98 = 0;
  return v98 & 1;
}

uint64_t sub_244AD4050(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v8 = sub_244AE3C0C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  v15 = *(int *)(a3(0) + 20);
  v16 = *(_QWORD *)(a1 + v15);
  v17 = *(_QWORD *)(a2 + v15);
  if (v16 == v17
    || (swift_retain(), swift_retain(), v18 = a4(v16, v17), swift_release(), swift_release(), (v18 & 1) != 0))
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v19(v14, a1, v8);
    v19(v12, a2, v8);
    sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v20 = sub_244AE4200();
    v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    v21(v14, v8);
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_244AD41C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  uint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  int v45;
  int v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  char v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  int *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;

  v4 = sub_244AE3C0C();
  v73 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v72 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v71 = (char *)&v65 - v7;
  v79 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v8 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v70 = (uint64_t *)((char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CA0);
  MEMORY[0x24BDAC7A8](v76);
  v80 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v75 = (uint64_t *)((char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v12);
  v77 = (uint64_t)&v65 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v78 = (uint64_t)&v65 - v16;
  v17 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v81 = (uint64_t)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1CA8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v82 = (uint64_t)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v65 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v65 - v29;
  if (!sub_244ACE994(*a1, *a2))
    goto LABEL_10;
  v66 = v8;
  v31 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceRequest(0);
  v32 = *(int *)(v31 + 24);
  v67 = a1;
  sub_244A7284C((uint64_t)a1 + v32, (uint64_t)v30, &qword_2573CFAD8);
  v68 = a2;
  v69 = (int *)v31;
  sub_244A7284C((uint64_t)a2 + *(int *)(v31 + 24), (uint64_t)v28, &qword_2573CFAD8);
  v33 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_244A7284C((uint64_t)v30, (uint64_t)v22, &qword_2573CFAD8);
  sub_244A7284C((uint64_t)v28, v33, &qword_2573CFAD8);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v34((uint64_t)v22, 1, v17) == 1)
  {
    sub_244A72890((uint64_t)v28, &qword_2573CFAD8);
    sub_244A72890((uint64_t)v30, &qword_2573CFAD8);
    if (v34(v33, 1, v17) == 1)
    {
      sub_244A72890((uint64_t)v22, &qword_2573CFAD8);
      goto LABEL_13;
    }
LABEL_7:
    v36 = &qword_2573D1CA8;
LABEL_8:
    v37 = (uint64_t)v22;
LABEL_9:
    sub_244A72890(v37, v36);
    goto LABEL_10;
  }
  v35 = v82;
  sub_244A7284C((uint64_t)v22, v82, &qword_2573CFAD8);
  if (v34(v33, 1, v17) == 1)
  {
    sub_244A72890((uint64_t)v28, &qword_2573CFAD8);
    sub_244A72890((uint64_t)v30, &qword_2573CFAD8);
    sub_244A729C0(v35, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    goto LABEL_7;
  }
  v40 = v81;
  sub_244A729FC(v33, v81, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  v41 = sub_244AD4050(v35, v40, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig, (uint64_t (*)(uint64_t, uint64_t))sub_244AA1FB8);
  sub_244A729C0(v40, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  sub_244A72890((uint64_t)v28, &qword_2573CFAD8);
  sub_244A72890((uint64_t)v30, &qword_2573CFAD8);
  sub_244A729C0(v35, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
  sub_244A72890((uint64_t)v22, &qword_2573CFAD8);
  if ((v41 & 1) == 0)
    goto LABEL_10;
LABEL_13:
  v42 = v68;
  v43 = v69[7];
  v44 = v67;
  v45 = *((unsigned __int8 *)v67 + v43);
  v46 = *((unsigned __int8 *)v68 + v43);
  if (v45 == 2)
  {
    if (v46 != 2)
      goto LABEL_10;
  }
  else if (v46 == 2 || ((((v46 & 1) == 0) ^ v45) & 1) == 0)
  {
    goto LABEL_10;
  }
  v47 = v69;
  v48 = v78;
  sub_244A7284C((uint64_t)v67 + v69[8], v78, &qword_2573CFAC8);
  v49 = v77;
  sub_244A7284C((uint64_t)v42 + v47[8], v77, &qword_2573CFAC8);
  v22 = v80;
  v50 = (uint64_t)&v80[*(int *)(v76 + 48)];
  sub_244A7284C(v48, (uint64_t)v80, &qword_2573CFAC8);
  sub_244A7284C(v49, v50, &qword_2573CFAC8);
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  v52 = v79;
  if (v51((uint64_t)v22, 1, v79) == 1)
  {
    sub_244A72890(v49, &qword_2573CFAC8);
    sub_244A72890(v48, &qword_2573CFAC8);
    if (v51(v50, 1, v52) == 1)
    {
      sub_244A72890((uint64_t)v22, &qword_2573CFAC8);
LABEL_31:
      v56 = v69;
      v57 = (uint64_t)v44 + v69[5];
      v59 = v73;
      v58 = v74;
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
      v61 = v71;
      v60(v71, v57, v74);
      v62 = (uint64_t)v42 + v56[5];
      v63 = v72;
      v60(v72, v62, v58);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v38 = sub_244AE4200();
      v64 = *(void (**)(char *, uint64_t))(v59 + 8);
      v64(v63, v58);
      v64(v61, v58);
      return v38 & 1;
    }
    goto LABEL_23;
  }
  v53 = v75;
  sub_244A7284C((uint64_t)v22, (uint64_t)v75, &qword_2573CFAC8);
  if (v51(v50, 1, v52) == 1)
  {
    sub_244A72890(v49, &qword_2573CFAC8);
    sub_244A72890(v48, &qword_2573CFAC8);
    sub_244A729C0((uint64_t)v53, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
LABEL_23:
    v36 = &qword_2573D1CA0;
    goto LABEL_8;
  }
  v54 = v70;
  sub_244A729FC(v50, (uint64_t)v70, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
  if ((*v53 != *v54 || v53[1] != v54[1]) && (sub_244AE44DC() & 1) == 0
    || (v53[2] != v54[2] || v53[3] != v54[3]) && (sub_244AE44DC() & 1) == 0)
  {
    sub_244A729C0((uint64_t)v54, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
    sub_244A72890(v49, &qword_2573CFAC8);
    sub_244A72890(v48, &qword_2573CFAC8);
    sub_244A729C0((uint64_t)v53, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
    v37 = (uint64_t)v22;
    v36 = &qword_2573CFAC8;
    goto LABEL_9;
  }
  sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v55 = sub_244AE4200();
  sub_244A729C0((uint64_t)v54, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
  sub_244A72890(v49, &qword_2573CFAC8);
  sub_244A72890(v48, &qword_2573CFAC8);
  sub_244A729C0((uint64_t)v53, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
  sub_244A72890((uint64_t)v22, &qword_2573CFAC8);
  if ((v55 & 1) != 0)
    goto LABEL_31;
LABEL_10:
  v38 = 0;
  return v38 & 1;
}

uint64_t type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(uint64_t a1)
{
  return sub_244A7DFA8(a1, qword_2573D1E70);
}

uint64_t sub_244AD4984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  _QWORD *v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  _QWORD *v38;
  int v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  _QWORD *v43;
  int v44;
  char v45;
  void (*v47)(char *, uint64_t, uint64_t);
  void (*v48)(char *, uint64_t);
  uint64_t v49;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v49 - v9;
  v11 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_TokenLevelInferenceMetrics(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_38;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_38;
  }
  v17 = v11[6];
  v18 = *(unsigned __int8 *)(a1 + v17);
  v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 2)
  {
    if (v19 != 2)
      goto LABEL_38;
  }
  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v18) & 1) == 0)
  {
    goto LABEL_38;
  }
  v20 = v11[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = *(_BYTE *)(a1 + v20 + 8);
  v23 = (_QWORD *)(a2 + v20);
  v24 = *(unsigned __int8 *)(a2 + v20 + 8);
  if ((v22 & 1) != 0)
  {
    if (!v24)
      goto LABEL_38;
  }
  else
  {
    if (*v21 != *v23)
      LOBYTE(v24) = 1;
    if ((v24 & 1) != 0)
      goto LABEL_38;
  }
  v25 = v11[8];
  v26 = (_QWORD *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 8);
  v28 = (_QWORD *)(a2 + v25);
  v29 = *(unsigned __int8 *)(a2 + v25 + 8);
  if ((v27 & 1) != 0)
  {
    if (!v29)
      goto LABEL_38;
  }
  else
  {
    if (*v26 != *v28)
      LOBYTE(v29) = 1;
    if ((v29 & 1) != 0)
      goto LABEL_38;
  }
  v30 = v11[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = *(_BYTE *)(a1 + v30 + 8);
  v33 = (_QWORD *)(a2 + v30);
  v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if ((v32 & 1) != 0)
  {
    if (!v34)
      goto LABEL_38;
  }
  else
  {
    if (*v31 != *v33)
      LOBYTE(v34) = 1;
    if ((v34 & 1) != 0)
      goto LABEL_38;
  }
  v35 = v11[10];
  v36 = (_QWORD *)(a1 + v35);
  v37 = *(_BYTE *)(a1 + v35 + 8);
  v38 = (_QWORD *)(a2 + v35);
  v39 = *(unsigned __int8 *)(a2 + v35 + 8);
  if ((v37 & 1) == 0)
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_38;
LABEL_36:
    v40 = v11[11];
    v41 = (_QWORD *)(a1 + v40);
    v42 = *(_BYTE *)(a1 + v40 + 8);
    v43 = (_QWORD *)(a2 + v40);
    v44 = *(unsigned __int8 *)(a2 + v40 + 8);
    if ((v42 & 1) != 0)
    {
      if (!v44)
        goto LABEL_38;
    }
    else
    {
      if (*v41 != *v43)
        LOBYTE(v44) = 1;
      if ((v44 & 1) != 0)
        goto LABEL_38;
    }
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v47(v10, a1, v4);
    v47(v8, a2, v4);
    sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v45 = sub_244AE4200();
    v48 = *(void (**)(char *, uint64_t))(v5 + 8);
    v48(v8, v4);
    v48(v10, v4);
    return v45 & 1;
  }
  if (v39)
    goto LABEL_36;
LABEL_38:
  v45 = 0;
  return v45 & 1;
}

uint64_t sub_244AD4C08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  _QWORD *v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  _QWORD *v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  _QWORD *v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  _QWORD *v46;
  int v47;
  char v48;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, uint64_t);
  uint64_t v53;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v53 - v9;
  v11 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceMetrics(0);
  v12 = v11;
  v13 = v11[6];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_40;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_40;
  }
  v18 = v11[7];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_40;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_40;
  }
  v23 = v11[8];
  v24 = (uint64_t *)((char *)a1 + v23);
  v25 = *((_BYTE *)a1 + v23 + 8);
  v26 = (uint64_t *)((char *)a2 + v23);
  v27 = *((unsigned __int8 *)a2 + v23 + 8);
  if ((v25 & 1) != 0)
  {
    if (!v27)
      goto LABEL_40;
  }
  else
  {
    if (*v24 != *v26)
      LOBYTE(v27) = 1;
    if ((v27 & 1) != 0)
      goto LABEL_40;
  }
  v28 = v11[9];
  v29 = (uint64_t *)((char *)a1 + v28);
  v30 = *((_BYTE *)a1 + v28 + 8);
  v31 = (uint64_t *)((char *)a2 + v28);
  v32 = *((unsigned __int8 *)a2 + v28 + 8);
  if ((v30 & 1) != 0)
  {
    if (!v32)
      goto LABEL_40;
  }
  else
  {
    if (*v29 != *v31)
      LOBYTE(v32) = 1;
    if ((v32 & 1) != 0)
      goto LABEL_40;
  }
  v33 = v11[10];
  v34 = (uint64_t *)((char *)a1 + v33);
  v35 = *((_BYTE *)a1 + v33 + 8);
  v36 = (uint64_t *)((char *)a2 + v33);
  v37 = *((unsigned __int8 *)a2 + v33 + 8);
  if ((v35 & 1) != 0)
  {
    if (!v37)
      goto LABEL_40;
  }
  else
  {
    if (*v34 != *v36)
      LOBYTE(v37) = 1;
    if ((v37 & 1) != 0)
      goto LABEL_40;
  }
  v38 = v11[11];
  v39 = (uint64_t *)((char *)a1 + v38);
  v40 = *((_BYTE *)a1 + v38 + 8);
  v41 = (uint64_t *)((char *)a2 + v38);
  v42 = *((unsigned __int8 *)a2 + v38 + 8);
  if ((v40 & 1) != 0)
  {
    if (!v42)
      goto LABEL_40;
  }
  else
  {
    if (*v39 != *v41)
      LOBYTE(v42) = 1;
    if ((v42 & 1) != 0)
      goto LABEL_40;
  }
  if ((sub_244ACEA00(*a1, *a2) & 1) != 0)
  {
    v43 = v12[12];
    v44 = (uint64_t *)((char *)a1 + v43);
    v45 = *((_BYTE *)a1 + v43 + 8);
    v46 = (uint64_t *)((char *)a2 + v43);
    v47 = *((unsigned __int8 *)a2 + v43 + 8);
    if ((v45 & 1) != 0)
    {
      if (!v47)
        goto LABEL_40;
    }
    else
    {
      if (*v44 != *v46)
        LOBYTE(v47) = 1;
      if ((v47 & 1) != 0)
        goto LABEL_40;
    }
    v50 = (char *)a1 + v12[5];
    v51 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v51(v10, v50, v4);
    v51(v8, (char *)a2 + v12[5], v4);
    sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v48 = sub_244AE4200();
    v52 = *(void (**)(char *, uint64_t))(v5 + 8);
    v52(v8, v4);
    v52(v10, v4);
    return v48 & 1;
  }
LABEL_40:
  v48 = 0;
  return v48 & 1;
}

uint64_t sub_244AD4EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v100;
  uint64_t v101;
  char v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  char *v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  v131 = sub_244AE3C0C();
  v130 = *(_QWORD *)(v131 - 8);
  v4 = MEMORY[0x24BDAC7A8](v131);
  v129 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v128 = (char *)&v126 - v6;
  v134 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v127 = (uint64_t)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1D00);
  MEMORY[0x24BDAC7A8](v132);
  v138 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF998);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v137 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v135 = (char *)&v126 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v136 = (char *)&v126 - v14;
  v15 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v151 = (uint64_t)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D1D08);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v142 = (uint64_t)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v144 = (uint64_t)&v126 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v149 = (uint64_t)&v126 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v126 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CF9A0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v139 = (uint64_t)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v140 = (uint64_t)&v126 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v141 = (uint64_t)&v126 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v143 = (uint64_t)&v126 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v146 = (uint64_t)&v126 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v147 = (uint64_t)&v126 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v145 = (uint64_t)&v126 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v148 = (uint64_t)&v126 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v153 = (uint64_t)&v126 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v126 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46);
  v51 = (char *)&v126 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v53 = (char *)&v126 - v52;
  v54 = type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo(0);
  v55 = *(int *)(v54 + 20);
  v152 = a1;
  v56 = a1 + v55;
  v57 = v54;
  sub_244A7284C(v56, (uint64_t)v53, &qword_2573CF9A0);
  v150 = (int *)v57;
  v58 = *(int *)(v57 + 20);
  v154 = a2;
  sub_244A7284C(a2 + v58, (uint64_t)v51, &qword_2573CF9A0);
  v59 = v18;
  v60 = (uint64_t)&v26[*(int *)(v18 + 48)];
  sub_244A7284C((uint64_t)v53, (uint64_t)v26, &qword_2573CF9A0);
  sub_244A7284C((uint64_t)v51, v60, &qword_2573CF9A0);
  v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v62 = v15;
  if (v61((uint64_t)v26, 1, v15) == 1)
  {
    sub_244A72890((uint64_t)v51, &qword_2573CF9A0);
    sub_244A72890((uint64_t)v53, &qword_2573CF9A0);
    if (v61(v60, 1, v15) == 1)
    {
      v63 = v61;
      sub_244A72890((uint64_t)v26, &qword_2573CF9A0);
      goto LABEL_8;
    }
LABEL_6:
    v64 = &qword_2573D1D08;
    v65 = (uint64_t)v26;
LABEL_28:
    sub_244A72890(v65, v64);
    goto LABEL_29;
  }
  sub_244A7284C((uint64_t)v26, (uint64_t)v48, &qword_2573CF9A0);
  if (v61(v60, 1, v15) == 1)
  {
    sub_244A72890((uint64_t)v51, &qword_2573CF9A0);
    sub_244A72890((uint64_t)v53, &qword_2573CF9A0);
    sub_244A729C0((uint64_t)v48, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
    goto LABEL_6;
  }
  v63 = v61;
  v66 = v151;
  sub_244A729FC(v60, v151, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  v67 = sub_244AD5EA8((uint64_t)v48, v66, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A729C0(v66, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A72890((uint64_t)v51, &qword_2573CF9A0);
  sub_244A72890((uint64_t)v53, &qword_2573CF9A0);
  sub_244A729C0((uint64_t)v48, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A72890((uint64_t)v26, &qword_2573CF9A0);
  if ((v67 & 1) == 0)
    goto LABEL_29;
LABEL_8:
  v68 = v150;
  v69 = v152;
  v70 = v153;
  sub_244A7284C(v152 + v150[6], v153, &qword_2573CF9A0);
  v71 = v154;
  v72 = v148;
  sub_244A7284C(v154 + v68[6], v148, &qword_2573CF9A0);
  v126 = v59;
  v73 = *(int *)(v59 + 48);
  v74 = v72;
  v75 = v149;
  v76 = v149 + v73;
  sub_244A7284C(v70, v149, &qword_2573CF9A0);
  sub_244A7284C(v74, v76, &qword_2573CF9A0);
  if (v63(v75, 1, v62) == 1)
  {
    v77 = v74;
    v78 = v70;
    v79 = v63;
    sub_244A72890(v77, &qword_2573CF9A0);
    sub_244A72890(v78, &qword_2573CF9A0);
    if (v63(v76, 1, v62) == 1)
    {
      sub_244A72890(v75, &qword_2573CF9A0);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v80 = v145;
  sub_244A7284C(v75, v145, &qword_2573CF9A0);
  if (v63(v76, 1, v62) == 1)
  {
    sub_244A72890(v74, &qword_2573CF9A0);
    sub_244A72890(v70, &qword_2573CF9A0);
    sub_244A729C0(v80, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_13:
    v64 = &qword_2573D1D08;
    v65 = v75;
    goto LABEL_28;
  }
  v79 = v63;
  v81 = v151;
  sub_244A729FC(v76, v151, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  v82 = sub_244AD5EA8(v80, v81, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A729C0(v81, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A72890(v74, &qword_2573CF9A0);
  sub_244A72890(v153, &qword_2573CF9A0);
  sub_244A729C0(v80, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  v71 = v154;
  sub_244A72890(v75, &qword_2573CF9A0);
  if ((v82 & 1) == 0)
    goto LABEL_29;
LABEL_15:
  v83 = v147;
  sub_244A7284C(v69 + v68[7], v147, &qword_2573CF9A0);
  v84 = v146;
  sub_244A7284C(v71 + v68[7], v146, &qword_2573CF9A0);
  v85 = v144;
  v86 = v144 + *(int *)(v126 + 48);
  sub_244A7284C(v83, v144, &qword_2573CF9A0);
  sub_244A7284C(v84, v86, &qword_2573CF9A0);
  if (v79(v85, 1, v62) == 1)
  {
    v87 = v79;
    sub_244A72890(v84, &qword_2573CF9A0);
    sub_244A72890(v83, &qword_2573CF9A0);
    if (v79(v86, 1, v62) == 1)
    {
      sub_244A72890(v85, &qword_2573CF9A0);
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  v88 = v143;
  sub_244A7284C(v85, v143, &qword_2573CF9A0);
  if (v79(v86, 1, v62) == 1)
  {
    sub_244A72890(v146, &qword_2573CF9A0);
    sub_244A72890(v147, &qword_2573CF9A0);
    sub_244A729C0(v88, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_20:
    v64 = &qword_2573D1D08;
    v65 = v85;
    goto LABEL_28;
  }
  v87 = v79;
  v89 = v71;
  v90 = v151;
  sub_244A729FC(v86, v151, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  v91 = sub_244AD5EA8(v88, v90, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A729C0(v90, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A72890(v146, &qword_2573CF9A0);
  sub_244A72890(v147, &qword_2573CF9A0);
  sub_244A729C0(v88, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  v71 = v89;
  sub_244A72890(v85, &qword_2573CF9A0);
  if ((v91 & 1) == 0)
  {
LABEL_29:
    v98 = 0;
    return v98 & 1;
  }
LABEL_22:
  v92 = v141;
  sub_244A7284C(v152 + v68[8], v141, &qword_2573CF9A0);
  v93 = v71 + v68[8];
  v94 = v140;
  sub_244A7284C(v93, v140, &qword_2573CF9A0);
  v95 = v142;
  v96 = v142 + *(int *)(v126 + 48);
  sub_244A7284C(v92, v142, &qword_2573CF9A0);
  sub_244A7284C(v94, v96, &qword_2573CF9A0);
  if (v87(v95, 1, v62) == 1)
  {
    sub_244A72890(v94, &qword_2573CF9A0);
    sub_244A72890(v92, &qword_2573CF9A0);
    if (v87(v96, 1, v62) == 1)
    {
      sub_244A72890(v95, &qword_2573CF9A0);
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  v97 = v139;
  sub_244A7284C(v95, v139, &qword_2573CF9A0);
  if (v87(v96, 1, v62) == 1)
  {
    sub_244A72890(v94, &qword_2573CF9A0);
    sub_244A72890(v92, &qword_2573CF9A0);
    sub_244A729C0(v97, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
LABEL_27:
    v64 = &qword_2573D1D08;
    v65 = v95;
    goto LABEL_28;
  }
  v100 = v94;
  v101 = v151;
  sub_244A729FC(v96, v151, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  v102 = sub_244AD5EA8(v97, v101, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A729C0(v101, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A72890(v100, &qword_2573CF9A0);
  sub_244A72890(v92, &qword_2573CF9A0);
  sub_244A729C0(v97, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.AssetInfo);
  sub_244A72890(v95, &qword_2573CF9A0);
  if ((v102 & 1) == 0)
    goto LABEL_29;
LABEL_32:
  v103 = v68;
  v104 = v68[9];
  v105 = v152;
  v106 = (_QWORD *)(v152 + v104);
  v107 = *(_QWORD *)(v152 + v104 + 8);
  v108 = v154;
  v109 = (_QWORD *)(v154 + v104);
  v110 = v109[1];
  if (!v107)
  {
    v112 = (uint64_t)v137;
    v111 = (uint64_t)v138;
    v114 = (uint64_t)v135;
    v113 = (uint64_t)v136;
    if (v110)
      goto LABEL_29;
LABEL_39:
    sub_244A7284C(v105 + v103[10], v113, &qword_2573CF998);
    sub_244A7284C(v108 + v103[10], v114, &qword_2573CF998);
    v115 = v111 + *(int *)(v132 + 48);
    sub_244A7284C(v113, v111, &qword_2573CF998);
    sub_244A7284C(v114, v115, &qword_2573CF998);
    v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
    v117 = v134;
    if (v116(v111, 1, v134) == 1)
    {
      sub_244A72890(v114, &qword_2573CF998);
      sub_244A72890(v113, &qword_2573CF998);
      if (v116(v115, 1, v117) == 1)
      {
        sub_244A72890(v111, &qword_2573CF998);
LABEL_46:
        v120 = v130;
        v121 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 16);
        v122 = v128;
        v123 = v131;
        v121(v128, v105, v131);
        v124 = v129;
        v121(v129, v154, v123);
        sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v98 = sub_244AE4200();
        v125 = *(void (**)(char *, uint64_t))(v120 + 8);
        v125(v124, v123);
        v125(v122, v123);
        return v98 & 1;
      }
    }
    else
    {
      sub_244A7284C(v111, v112, &qword_2573CF998);
      if (v116(v115, 1, v117) != 1)
      {
        v118 = v127;
        sub_244A729FC(v115, v127, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
        v119 = sub_244AD5CB4(v112, v118);
        sub_244A729C0(v118, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
        sub_244A72890(v114, &qword_2573CF998);
        sub_244A72890(v113, &qword_2573CF998);
        sub_244A729C0(v112, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
        sub_244A72890(v111, &qword_2573CF998);
        if ((v119 & 1) != 0)
          goto LABEL_46;
        goto LABEL_29;
      }
      sub_244A72890(v114, &qword_2573CF998);
      sub_244A72890(v113, &qword_2573CF998);
      sub_244A729C0(v112, type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt);
    }
    v64 = &qword_2573D1D00;
    v65 = v111;
    goto LABEL_28;
  }
  v112 = (uint64_t)v137;
  v111 = (uint64_t)v138;
  v114 = (uint64_t)v135;
  v113 = (uint64_t)v136;
  if (!v110)
    goto LABEL_29;
  if (*v106 == *v109 && v107 == v110)
    goto LABEL_39;
  v98 = 0;
  if ((sub_244AE44DC() & 1) != 0)
    goto LABEL_39;
  return v98 & 1;
}

uint64_t sub_244AD5CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;

  v4 = sub_244AE3C0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - v9;
  v11 = (int *)type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt(0);
  v12 = v11[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_27;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_27;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_244AE44DC() & 1) != 0))
  {
LABEL_10:
    v19 = v11[8];
    v20 = (uint64_t *)(a1 + v19);
    v21 = *(_BYTE *)(a1 + v19 + 9);
    v22 = (uint64_t *)(a2 + v19);
    v23 = *(_BYTE *)(a2 + v19 + 9);
    if ((v21 & 1) != 0)
    {
      if ((v23 & 1) == 0)
        goto LABEL_27;
    }
    else
    {
      if ((v23 & 1) != 0)
        goto LABEL_27;
      v24 = *v20;
      v25 = *v22;
      if ((v22[1] & 1) != 0)
      {
        if (v25)
        {
          if (v25 == 1)
          {
            if (v24 != 1)
              goto LABEL_27;
          }
          else if (v24 != 2)
          {
            goto LABEL_27;
          }
        }
        else if (v24)
        {
          goto LABEL_27;
        }
      }
      else if (v24 != v25)
      {
        goto LABEL_27;
      }
    }
    if (sub_244ACE994(*(_QWORD *)a1, *(_QWORD *)a2)
      && (sub_244ACE390(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)) & 1) != 0)
    {
      v26 = a1 + v11[6];
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v27(v10, v26, v4);
      v27(v8, a2 + v11[6], v4);
      sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v18 = sub_244AE4200();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v8, v4);
      v28(v10, v4);
      return v18 & 1;
    }
LABEL_27:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_244AD5EA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  v13 = a3(0);
  v14 = *(int *)(v13 + 20);
  v15 = (_QWORD *)(a1 + v14);
  v16 = *(_QWORD *)(a1 + v14 + 8);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  if (!v16)
  {
    if (v18)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (!v18)
    goto LABEL_19;
  v19 = *v15 == *v17 && v16 == v18;
  if (v19 || (v20 = 0, (sub_244AE44DC() & 1) != 0))
  {
LABEL_10:
    v21 = *(int *)(v13 + 24);
    v22 = (_QWORD *)(a1 + v21);
    v23 = *(_QWORD *)(a1 + v21 + 8);
    v24 = (_QWORD *)(a2 + v21);
    v25 = v24[1];
    if (v23)
    {
      if (v25)
      {
        if (*v22 != *v24 || v23 != v25)
        {
          v20 = 0;
          if ((sub_244AE44DC() & 1) == 0)
            return v20 & 1;
        }
LABEL_20:
        v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
        v27(v12, a1, v6);
        v27(v10, a2, v6);
        sub_244A7DAA8(&qword_2573D1C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v20 = sub_244AE4200();
        v28 = *(void (**)(char *, uint64_t))(v7 + 8);
        v28(v10, v6);
        v28(v12, v6);
        return v20 & 1;
      }
    }
    else if (!v25)
    {
      goto LABEL_20;
    }
LABEL_19:
    v20 = 0;
  }
  return v20 & 1;
}

unint64_t sub_244AD6058()
{
  unint64_t result;

  result = qword_2573D1D58;
  if (!qword_2573D1D58)
  {
    result = MEMORY[0x24951E280](&unk_244AE921C, &type metadata for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse.Status);
    atomic_store(result, (unint64_t *)&qword_2573D1D58);
  }
  return result;
}

unint64_t sub_244AD609C()
{
  unint64_t result;

  result = qword_2573D1D98;
  if (!qword_2573D1D98)
  {
    result = MEMORY[0x24951E280](&unk_244AE91D4, &type metadata for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source);
    atomic_store(result, (unint64_t *)&qword_2573D1D98);
  }
  return result;
}

uint64_t *sub_244AD60F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
    v8 = *(int *)(v7 + 20);
    v9 = (char *)v6 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3C0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v7 + 24);
    v14 = (uint64_t *)((char *)v6 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_244AD61BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0) + 20);
  v3 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_244AD6224(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_244AE3C0C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_244AD62C4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = *(int *)(v4 + 24);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_244AD6374(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  *(_OWORD *)((char *)a1 + *(int *)(v4 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v4 + 24));
  return a1;
}

_QWORD *sub_244AD63F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  v9 = *(int *)(v4 + 24);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244AD648C()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD64CC()
{
  type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD651C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t sub_244AD6578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244AE3C0C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_244AD65B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_244AD65F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_244AD663C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_244AD6680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_244AD66C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_244AD6710()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_244AD6760()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_244AD67C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3C0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
      swift_retain();
      v19(v14, 0, 1, v16);
    }
    v20 = a3[8];
    *((_BYTE *)v7 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v21 = (_QWORD *)((char *)v7 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = v22[1];
      *v21 = *v22;
      v21[1] = v26;
      v27 = v22[3];
      v21[2] = v22[2];
      v21[3] = v27;
      v28 = *(int *)(v23 + 24);
      v29 = (char *)v21 + v28;
      v30 = (char *)v22 + v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v29, v30, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return v7;
}

uint64_t sub_244AD69B8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_244AE3C0C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v11(v6, v5);
    swift_release();
  }
  v8 = a1 + a2[8];
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8 + *(int *)(v9 + 24), v5);
  }
  return result;
}

_QWORD *sub_244AD6AD8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
    v17 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
    swift_retain();
    v17(v12, 0, 1, v14);
  }
  v18 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v20[1];
    *v19 = *v20;
    v19[1] = v24;
    v25 = v20[3];
    v19[2] = v20[2];
    v19[3] = v25;
    v26 = *(int *)(v21 + 24);
    v27 = (char *)v19 + v26;
    v28 = (char *)v20 + v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v27, v28, v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

_QWORD *sub_244AD6CA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v35 = *(_QWORD *)(v9 - 8);
  v34 = *(void (**)(char *, char *, uint64_t))(v35 + 24);
  v34(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v11, v12, v9);
      *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
      v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
      swift_retain();
      v18(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v34(v11, v12, v9);
  *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
  swift_retain();
  swift_release();
LABEL_7:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34(&v21[*(int *)(v23 + 24)], &v22[*(int *)(v23 + 24)], v9);
      return a1;
    }
    sub_244A729C0((uint64_t)v21, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
  v28 = *(int *)(v23 + 24);
  v29 = &v21[v28];
  v30 = &v22[v28];
  v31 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(v29, v30, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

_QWORD *sub_244AD6F8C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v18 = (_OWORD *)((char *)a1 + v17);
  v19 = (_OWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = v19[1];
    *v18 = *v19;
    v18[1] = v23;
    v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

_QWORD *sub_244AD712C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v33 = *(_QWORD *)(v9 - 8);
  v32 = *(void (**)(char *, char *, uint64_t))(v33 + 40);
  v32(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v11, v12, v9);
      *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_244A729C0((uint64_t)v11, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v32(v11, v12, v9);
  *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
  swift_release();
LABEL_7:
  v19 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v30 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v30;
      swift_bridgeObjectRelease();
      v31 = *((_QWORD *)v21 + 3);
      *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
      *((_QWORD *)v20 + 3) = v31;
      swift_bridgeObjectRelease();
      v32(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v9);
      return a1;
    }
    sub_244A729C0((uint64_t)v20, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  v27 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v27;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_244AD73B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD73C0(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_244AD748C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_244AD7498(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_244AD7560()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_244AE3C0C();
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, &qword_2573D1F78, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    if (v1 <= 0x3F)
    {
      sub_244A83584(319, qword_2573D1F80, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *sub_244AD7638(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  _OWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3C0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (_QWORD *)((char *)v7 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)v7 + v14;
    v19 = (_OWORD *)((char *)a2 + v14);
    v20 = *(_QWORD *)((char *)a2 + v14 + 8);
    swift_bridgeObjectRetain();
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)v18 = *v19;
    }
    else
    {
      v21 = *(_QWORD *)v19;
      sub_244A81E68(v21, v20);
      *(_QWORD *)v18 = v21;
      *((_QWORD *)v18 + 1) = v20;
    }
    v22 = a3[9];
    v23 = (char *)v7 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v12(v23, v24, v11);
      *(_QWORD *)&v23[*(int *)(v25 + 20)] = *(_QWORD *)&v24[*(int *)(v25 + 20)];
      v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
      swift_retain();
      v28(v23, 0, 1, v25);
    }
    v59 = v12;
    v29 = a3[11];
    *((_BYTE *)v7 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v30 = (_QWORD *)((char *)v7 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    v32 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = v31[1];
      *v30 = *v31;
      v30[1] = v35;
      v36 = v31[3];
      v30[2] = v31[2];
      v30[3] = v36;
      v37 = *(int *)(v32 + 24);
      v38 = (char *)v30 + v37;
      v39 = (char *)v31 + v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59(v38, v39, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v40 = a3[12];
    v41 = (_QWORD *)((char *)v7 + v40);
    v42 = (_QWORD *)((char *)a2 + v40);
    v43 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v46 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48))(v42, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        *v41 = *v42;
        v49 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
        v50 = *(int *)(v49 + 20);
        v57 = (char *)v42 + v50;
        v58 = (char *)v41 + v50;
        swift_bridgeObjectRetain();
        v59(v58, v57, v11);
        v51 = *(int *)(v49 + 24);
        v52 = (_QWORD *)((char *)v41 + v51);
        v53 = (_QWORD *)((char *)v42 + v51);
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        v55 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56);
        swift_bridgeObjectRetain();
        v55(v41, 0, 1, v46);
      }
      v59((char *)v41 + *(int *)(v43 + 20), (char *)v42 + *(int *)(v43 + 20), v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
  }
  return v7;
}

uint64_t sub_244AD79D8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_244AE3C0C();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v17(v4, v5);
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a1 + a2[8]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_244A7D674(*v6, v7);
  v8 = a1 + a2[9];
  v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v17(v8, v5);
    swift_release();
  }
  v10 = a1 + a2[11];
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17(v10 + *(int *)(v11 + 24), v5);
  }
  v12 = a1 + a2[12];
  v13 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  if (!(_DWORD)result)
  {
    v15 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
      v17(v12 + *(int *)(v16 + 20), v5);
      swift_bridgeObjectRelease();
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v17)(v12 + *(int *)(v13 + 20), v5);
  }
  return result;
}

_QWORD *sub_244AD7BD0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  _OWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  void (*v54)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244AE3C0C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (char *)a1 + v13;
  v18 = (_OWORD *)((char *)a2 + v13);
  v19 = *(_QWORD *)((char *)a2 + v13 + 8);
  swift_bridgeObjectRetain();
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)v17 = *v18;
  }
  else
  {
    v20 = *(_QWORD *)v18;
    sub_244A81E68(v20, v19);
    *(_QWORD *)v17 = v20;
    *((_QWORD *)v17 + 1) = v19;
  }
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v11(v22, v23, v10);
    *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
    v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
    swift_retain();
    v27(v22, 0, 1, v24);
  }
  v58 = v11;
  v28 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = v30[1];
    *v29 = *v30;
    v29[1] = v34;
    v35 = v30[3];
    v29[2] = v30[2];
    v29[3] = v35;
    v36 = *(int *)(v31 + 24);
    v37 = (char *)v29 + v36;
    v38 = (char *)v30 + v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58(v37, v38, v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v39 = a3[12];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(v41, 1, v45))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      *v40 = *v41;
      v48 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
      v49 = *(int *)(v48 + 20);
      v56 = (char *)v41 + v49;
      v57 = (char *)v40 + v49;
      swift_bridgeObjectRetain();
      v58(v57, v56, v10);
      v50 = *(int *)(v48 + 24);
      v51 = (_QWORD *)((char *)v40 + v50);
      v52 = (_QWORD *)((char *)v41 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56);
      swift_bridgeObjectRetain();
      v54(v40, 0, 1, v45);
    }
    v58((char *)v40 + *(int *)(v42 + 20), (char *)v41 + *(int *)(v42 + 20), v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  return a1;
}

_QWORD *sub_244AD7F40(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  void (*v75)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v87 = *(_QWORD *)(v9 - 8);
  v85 = *(void (**)(char *, char *, uint64_t))(v87 + 24);
  v85(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *(_QWORD *)((char *)a2 + v13 + 8);
  if (*(_QWORD *)((char *)a1 + v13 + 8) >> 60 == 15)
  {
    if (v16 >> 60 != 15)
    {
      v17 = *v15;
      sub_244A81E68(*v15, v16);
      *v14 = v17;
      v14[1] = v16;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v16 >> 60 == 15)
  {
    sub_244A82C44((uint64_t)v14);
LABEL_6:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    goto LABEL_8;
  }
  v18 = *v15;
  sub_244A81E68(*v15, v16);
  v19 = *v14;
  v20 = v14[1];
  *v14 = v18;
  v14[1] = v16;
  sub_244A7D674(v19, v20);
LABEL_8:
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  v88 = v9;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v22, v23, v9);
      *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
      swift_retain();
      v29(v22, 0, 1, v24);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v28)
  {
    sub_244A729C0((uint64_t)v22, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
LABEL_13:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_14;
  }
  v85(v22, v23, v9);
  *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
  swift_retain();
  swift_release();
LABEL_14:
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v31 = a3[11];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      *v32 = *v33;
      v32[1] = v33[1];
      v32[2] = v33[2];
      v32[3] = v33[3];
      v39 = *(int *)(v34 + 24);
      v40 = (char *)v32 + v39;
      v41 = (char *)v33 + v39;
      v42 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v40, v41, v88);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v38)
  {
    sub_244A729C0((uint64_t)v32, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
LABEL_19:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_20;
  }
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[2] = v33[2];
  v32[3] = v33[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85((char *)v32 + *(int *)(v34 + 24), (char *)v33 + *(int *)(v34 + 24), v88);
LABEL_20:
  v44 = a3[12];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (!v50)
  {
    if (v51)
    {
      sub_244A729C0((uint64_t)v45, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
      goto LABEL_26;
    }
    v56 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
    v59 = v58(v45, 1, v56);
    v60 = v58(v46, 1, v56);
    if (v59)
    {
      v61 = v88;
      if (!v60)
      {
        *(_QWORD *)v45 = *(_QWORD *)v46;
        v62 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
        v63 = *(int *)(v62 + 20);
        v82 = &v46[v63];
        v83 = &v45[v63];
        v64 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
        swift_bridgeObjectRetain();
        v64(v83, v82, v88);
        v65 = *(int *)(v62 + 24);
        v66 = &v45[v65];
        v67 = &v46[v65];
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
        v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56);
        swift_bridgeObjectRetain();
        v68(v45, 0, 1, v56);
LABEL_37:
        v85(&v45[*(int *)(v47 + 20)], &v46[*(int *)(v47 + 20)], v61);
        return a1;
      }
    }
    else
    {
      v61 = v88;
      if (!v60)
      {
        *(_QWORD *)v45 = *(_QWORD *)v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v78 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
        v85(&v45[*(int *)(v78 + 20)], &v46[*(int *)(v78 + 20)], v88);
        v79 = *(int *)(v78 + 24);
        v80 = &v45[v79];
        v81 = &v46[v79];
        *(_QWORD *)v80 = *(_QWORD *)v81;
        *((_QWORD *)v80 + 1) = *((_QWORD *)v81 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      sub_244A729C0((uint64_t)v45, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
    }
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_37;
  }
  if (v51)
  {
LABEL_26:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    return a1;
  }
  v52 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v46, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(&v45[*(int *)(v47 + 20)], &v46[*(int *)(v47 + 20)], v88);
  }
  else
  {
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v69 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
    v70 = *(int *)(v69 + 20);
    v84 = &v46[v70];
    v86 = &v45[v70];
    v71 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    swift_bridgeObjectRetain();
    v71(v86, v84, v88);
    v72 = *(int *)(v69 + 24);
    v73 = &v45[v72];
    v74 = &v46[v72];
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
    v75 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56);
    swift_bridgeObjectRetain();
    v75(v45, 0, 1, v52);
    v71(&v45[*(int *)(v47 + 20)], &v46[*(int *)(v47 + 20)], v88);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  return a1;
}

_OWORD *sub_244AD85F0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[9];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v10(v13, v14, v9);
    *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v19 = (_OWORD *)((char *)a1 + v18);
  v20 = (_OWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v20[1];
    *v19 = *v20;
    v19[1] = v24;
    v10((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v25 = a3[12];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v27, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v34 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
      v10((char *)v26 + *(int *)(v34 + 20), (char *)v27 + *(int *)(v34 + 20), v9);
      *(_OWORD *)((char *)v26 + *(int *)(v34 + 24)) = *(_OWORD *)((char *)v27 + *(int *)(v34 + 24));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v31);
    }
    v10((char *)v26 + *(int *)(v28 + 20), (char *)v27 + *(int *)(v28 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

_QWORD *sub_244AD88C0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD *, uint64_t, uint64_t);
  int v36;
  int v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v71 = *(_QWORD *)(v9 - 8);
  v70 = *(void (**)(char *, char *, uint64_t))(v71 + 40);
  v70(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)((char *)a1 + v15 + 8);
  if (v18 >> 60 == 15)
    goto LABEL_4;
  v19 = *((_QWORD *)v17 + 1);
  if (v19 >> 60 == 15)
  {
    sub_244A82C44(v16);
LABEL_4:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_6;
  }
  v20 = *(_QWORD *)v16;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v19;
  sub_244A7D674(v20, v18);
LABEL_6:
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v22, v23, v9);
      *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v28)
  {
    sub_244A729C0((uint64_t)v22, type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
LABEL_11:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_12;
  }
  v70(v22, v23, v9);
  *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
  swift_release();
LABEL_12:
  v30 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      v38 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v38;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))((char *)v31 + *(int *)(v33 + 24), (char *)v32 + *(int *)(v33 + 24), v9);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v37)
  {
    sub_244A729C0((uint64_t)v31, type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
LABEL_17:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_18;
  }
  v52 = v32[1];
  *v31 = *v32;
  v31[1] = v52;
  swift_bridgeObjectRelease();
  v53 = v32[3];
  v31[2] = v32[2];
  v31[3] = v53;
  swift_bridgeObjectRelease();
  v70((char *)v31 + *(int *)(v33 + 24), (char *)v32 + *(int *)(v33 + 24), v9);
LABEL_18:
  v40 = a3[12];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (!v46)
  {
    if (v47)
    {
      sub_244A729C0((uint64_t)v41, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
      goto LABEL_24;
    }
    v54 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
    v55 = *(_QWORD *)(v54 - 8);
    v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
    v57 = v56(v41, 1, v54);
    v58 = v56(v42, 1, v54);
    if (v57)
    {
      if (!v58)
      {
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v59 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v41[*(int *)(v59 + 20)], &v42[*(int *)(v59 + 20)], v9);
        *(_OWORD *)&v41[*(int *)(v59 + 24)] = *(_OWORD *)&v42[*(int *)(v59 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v41, 0, 1, v54);
LABEL_35:
        v70(&v41[*(int *)(v43 + 20)], &v42[*(int *)(v43 + 20)], v9);
        return a1;
      }
    }
    else
    {
      if (!v58)
      {
        *(_QWORD *)v41 = *(_QWORD *)v42;
        swift_bridgeObjectRelease();
        v64 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
        v70(&v41[*(int *)(v64 + 20)], &v42[*(int *)(v64 + 20)], v9);
        v65 = *(int *)(v64 + 24);
        v66 = &v41[v65];
        v67 = &v42[v65];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        *(_QWORD *)v66 = v69;
        *((_QWORD *)v66 + 1) = v68;
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      sub_244A729C0((uint64_t)v41, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
    }
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_35;
  }
  if (v47)
  {
LABEL_24:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    return a1;
  }
  v48 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v42, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v41[*(int *)(v43 + 20)], &v42[*(int *)(v43 + 20)], v9);
  }
  else
  {
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v60 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
    v61 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
    v61(&v41[*(int *)(v60 + 20)], &v42[*(int *)(v60 + 20)], v9);
    *(_OWORD *)&v41[*(int *)(v60 + 24)] = *(_OWORD *)&v42[*(int *)(v60 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v41, 0, 1, v48);
    v61(&v41[*(int *)(v43 + 20)], &v42[*(int *)(v43 + 20)], v9);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  return a1;
}

uint64_t sub_244AD8E58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD8E64(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[11];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[12];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_244AD8F58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_244AD8F64(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAD8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAC8);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[11];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF8);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[12];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_244AD9054()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_244AE3C0C();
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, &qword_2573D1F78, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_ModelConfig);
    if (v1 <= 0x3F)
    {
      sub_244A83584(319, qword_2573D1F80, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_RequestMetadata);
      if (v2 <= 0x3F)
      {
        sub_244A83584(319, qword_2573D2028, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_244AD916C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB20);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = *(int *)(v12 + 20);
      v17 = &v10[v16];
      v18 = &v11[v16];
      v19 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
      swift_bridgeObjectRetain();
      v20(v10, 0, 1, v12);
    }
    v21 = *(int *)(a3 + 24);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
  }
  return a1;
}

uint64_t sub_244AD92B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_244AE3C0C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244AD9358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    v18(v9, 0, 1, v11);
  }
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  return a1;
}

uint64_t sub_244AD9478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  int v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v30 = a3;
  v31 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v27 = *(int *)(v12 + 20);
      v28 = &v10[v27];
      v29 = &v11[v27];
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_244A729C0((uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  v17 = *(int *)(v12 + 20);
  v18 = &v10[v17];
  v19 = &v11[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
  swift_bridgeObjectRetain();
  v20(v10, 0, 1, v12);
LABEL_7:
  v22 = *(int *)(v30 + 24);
  v23 = a1 + v22;
  v24 = (int *)(v31 + v22);
  v25 = *v24;
  *(_BYTE *)(v23 + 4) = *((_BYTE *)v24 + 4);
  *(_DWORD *)v23 = v25;
  return a1;
}

uint64_t sub_244AD9620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_244AE3C0C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_OWORD *)&v9[*(int *)(v11 + 20)] = *(_OWORD *)&v10[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  return a1;
}

uint64_t sub_244AD9734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v27 = a3;
  v28 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v22 = *(int *)(v12 + 20);
      v23 = &v10[v22];
      v24 = &v11[v22];
      v26 = *(_QWORD *)v24;
      v25 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_244A729C0((uint64_t)v10, type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFB20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  *(_OWORD *)&v10[*(int *)(v12 + 20)] = *(_OWORD *)&v11[*(int *)(v12 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(v27 + 24);
  v19 = a1 + v18;
  v20 = v28 + v18;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  return a1;
}

uint64_t sub_244AD98B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD98C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_23Tm(a1, a2, a3, &qword_2573CFB20);
}

uint64_t __swift_get_extra_inhabitant_index_23Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_244AE3C0C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v12 = a1 + *(int *)(a3 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  }
  return v11(v12, a2, v10);
}

uint64_t sub_244AD9948()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD9954(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_24Tm(a1, a2, a3, a4, &qword_2573CFB20);
}

uint64_t __swift_store_extra_inhabitant_index_24Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v10 = sub_244AE3C0C();
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    v12 = v10;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v14 = a1;
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v14 = a1 + *(int *)(a4 + 20);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  }
  return v13(v14, a2, a2, v12);
}

void sub_244AD99E8()
{
  unint64_t v0;
  unint64_t v1;

  sub_244AE3C0C();
  if (v0 <= 0x3F)
  {
    sub_244A83584(319, qword_2573D20E0, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateRequest.Delimiter.SpecialToken);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_244AD9A84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_244AD9B18(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244AD9B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_244AD9BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244AD9C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_244AD9CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244AD9D0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD9D1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244AD9D2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244AD9D98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_244AE3C0C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_244AD9E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_244AD9E9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_244AD9F24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_244AD9FC0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_244ADA01C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_244ADA098()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ADA0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_244ADA120()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ADA12C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_244AE3C0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_244ADA1A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244ADA214(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
      v12 = *(int *)(v11 + 20);
      v26 = (char *)a1 + v12;
      v13 = (char *)a2 + v12;
      v14 = sub_244AE3C0C();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v26, v13, v14);
      v16 = *(int *)(v11 + 24);
      v17 = (uint64_t *)((char *)a1 + v16);
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      v20 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v20(a1, 0, 1, v7);
    }
    v21 = *(int *)(a3 + 20);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t sub_244ADA388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0) + 20);
    v6 = sub_244AE3C0C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    swift_bridgeObjectRelease();
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *sub_244ADA43C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
    v10 = *(int *)(v9 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_244AE3C0C();
    v25 = a3;
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = *(int *)(v9 + 24);
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v19(a1, 0, 1, v6);
    a3 = v25;
  }
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *sub_244ADA588(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void (*v20)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v27 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
      v28 = *(int *)(v27 + 20);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
      v32 = *(int *)(v27 + 24);
      v33 = (_QWORD *)((char *)a1 + v32);
      v34 = (_QWORD *)((char *)a2 + v32);
      *v33 = *v34;
      v33[1] = v34[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_244AE3C0C();
  v35 = a3;
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  v17 = *(int *)(v11 + 24);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v20 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v20(a1, 0, 1, v6);
  a3 = v35;
LABEL_7:
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_QWORD *sub_244ADA788(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
    v10 = *(int *)(v9 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_244AE3C0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v9 + 24));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_244ADA8A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
      v23 = *(int *)(v22 + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_244AE3C0C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      v27 = *(int *)(v22 + 24);
      v28 = (_QWORD *)((char *)a1 + v27);
      v29 = (_QWORD *)((char *)a2 + v27);
      v31 = *v29;
      v30 = v29[1];
      *v28 = v31;
      v28[1] = v30;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_244A729C0((uint64_t)a1, type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v11 = type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.PromptTemplateV1(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)((char *)a1 + *(int *)(v11 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v11 + 24));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v17 = *(int *)(a3 + 20);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_244ADAA54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ADAA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_13Tm(a1, a2, a3, &qword_2573CFAF0);
}

uint64_t __swift_get_extra_inhabitant_index_13Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
  {
    v9 = v7;
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v11 = a1;
  }
  else
  {
    v9 = sub_244AE3C0C();
    v11 = a1 + *(int *)(a3 + 20);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  }
  return v10(v11, a2, v9);
}

uint64_t sub_244ADAAE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ADAAEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_14Tm(a1, a2, a3, a4, &qword_2573CFAF0);
}

uint64_t __swift_store_extra_inhabitant_index_14Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13 = a1;
  }
  else
  {
    v11 = sub_244AE3C0C();
    v13 = a1 + *(int *)(a4 + 20);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  }
  return v12(v13, a2, a2, v11);
}

void sub_244ADAB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_244ADAB88(a1, a2, a3, qword_2573D22A8, (void (*)(uint64_t))type metadata accessor for Apple_Cloudml_Inference_Tie_PromptTemplate.OneOf_PromptTemplateType);
}

void sub_244ADAB88(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_244A83584(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_244AE3C0C();
    if (v6 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_244ADAC14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244AE3C0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_244ADACD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_244ADAD34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_244ADADCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_244ADAE74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_244ADAEEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244AE3C0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244ADAF7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244AE3C0C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_244ADB008()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_indexTm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_244AE3C0C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_244ADB08C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244ADB10C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_244ADB1B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244ADB210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_244ADB290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244ADB338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_244ADB39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244ADB424()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_19Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_244ADB4C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_20Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244AE3C0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_244ADB54C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_244ADB5C0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244AE3C0C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v12 = a3[7];
    v13 = a3[8];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v14[8] = v15[8];
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v16 = (char *)a1 + v13;
    v17 = (char *)a2 + v13;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = a3[9];
    v19 = a3[10];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = (char *)a1 + v19;
    v23 = (char *)a2 + v19;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = a3[11];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(_QWORD *)v26;
    v25[8] = v26[8];
    *(_QWORD *)v25 = v27;
  }
  return a1;
}

uint64_t sub_244ADB6E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244AE3C0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_244ADB718(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  *(_BYTE *)(v24 + 8) = *((_BYTE *)v25 + 8);
  *(_QWORD *)v24 = v26;
  return a1;
}

uint64_t sub_244ADB810(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v10;
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v10;
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v10;
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v10;
  return a1;
}

uint64_t sub_244ADB914(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  *(_BYTE *)(v24 + 8) = *((_BYTE *)v25 + 8);
  *(_QWORD *)v24 = v26;
  return a1;
}

uint64_t sub_244ADBA0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v6 = sub_244AE3C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  *(_BYTE *)(v24 + 8) = *((_BYTE *)v25 + 8);
  *(_QWORD *)v24 = v26;
  return a1;
}

uint64_t sub_244ADBB04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ADBB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = sub_244AE3C0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_244ADBBA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244ADBBB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244AE3C0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t sub_244ADBC2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE3C0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar.OneOf_GrammarVersion()
{
  return &type metadata for Apple_Cloudml_Inference_Tie_Constraints.PartialGrammar.OneOf_GrammarVersion;
}

ValueMetadata *type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Grammar.OneOf_GrammarVersion()
{
  return &type metadata for Apple_Cloudml_Inference_Tie_Constraints.Grammar.OneOf_GrammarVersion;
}

ValueMetadata *type metadata accessor for Apple_Cloudml_Inference_Tie_Constraints.Schema.OneOf_SchemaVersion()
{
  return &type metadata for Apple_Cloudml_Inference_Tie_Constraints.Schema.OneOf_SchemaVersion;
}

uint64_t getEnumTagSinglePayload for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_244ADBD38(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_244ADBD54(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source()
{
  return &type metadata for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source;
}

ValueMetadata *type metadata accessor for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse.Status()
{
  return &type metadata for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse.Status;
}

unint64_t sub_244ADBD98()
{
  unint64_t result;

  result = qword_2573D24B0;
  if (!qword_2573D24B0)
  {
    result = MEMORY[0x24951E280](&unk_244AE8FF4, &type metadata for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse.Status);
    atomic_store(result, (unint64_t *)&qword_2573D24B0);
  }
  return result;
}

unint64_t sub_244ADBDE0()
{
  unint64_t result;

  result = qword_2573D24B8;
  if (!qword_2573D24B8)
  {
    result = MEMORY[0x24951E280](&unk_244AE9094, &type metadata for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source);
    atomic_store(result, (unint64_t *)&qword_2573D24B8);
  }
  return result;
}

unint64_t sub_244ADBE28()
{
  unint64_t result;

  result = qword_2573D24C0;
  if (!qword_2573D24C0)
  {
    result = MEMORY[0x24951E280](&unk_244AE90BC, &type metadata for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source);
    atomic_store(result, (unint64_t *)&qword_2573D24C0);
  }
  return result;
}

unint64_t sub_244ADBE70()
{
  unint64_t result;

  result = qword_2573D24C8;
  if (!qword_2573D24C8)
  {
    result = MEMORY[0x24951E280](&unk_244AE90FC, &type metadata for Apple_Cloudml_Inference_Tie_InferenceEnvironmentInfo.RenderedPrompt.Source);
    atomic_store(result, (unint64_t *)&qword_2573D24C8);
  }
  return result;
}

unint64_t sub_244ADBEB8()
{
  unint64_t result;

  result = qword_2573D24D0;
  if (!qword_2573D24D0)
  {
    result = MEMORY[0x24951E280](&unk_244AE901C, &type metadata for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse.Status);
    atomic_store(result, (unint64_t *)&qword_2573D24D0);
  }
  return result;
}

unint64_t sub_244ADBF00()
{
  unint64_t result;

  result = qword_2573D24D8;
  if (!qword_2573D24D8)
  {
    result = MEMORY[0x24951E280](&unk_244AE905C, &type metadata for Apple_Cloudml_Inference_Tie_GenerateResponse.StatusResponse.Status);
    atomic_store(result, (unint64_t *)&qword_2573D24D8);
  }
  return result;
}

uint64_t TransparencyReporterLogger.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC15PrivateMLClient26TransparencyReporterLogger_logger;
  v4 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t TransparencyReporterLogger.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15PrivateMLClient26TransparencyReporterLogger_logger;
  v4 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

void sub_244ADC038(uint64_t a1, unint64_t a2)
{
  sub_244ADC250(a1, a2, "TransparencyReporterLogger: userPrompt=%{private}s");
}

void sub_244ADC044(uint64_t a1, unint64_t a2)
{
  sub_244ADC250(a1, a2, "TransparencyReporterLogger: token=%{private}s");
}

void sub_244ADC050(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  oslog = sub_244AE4194();
  v8 = sub_244AE4350();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    sub_244A80950(a1, a2, &v12);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_244A80950(a3, a4, &v12);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_244A6B000, oslog, v8, "TransparencyReporterLogger: modelName=%{public}smodelVersion=%{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v10, -1, -1);
    MEMORY[0x24951E31C](v9, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

void sub_244ADC238(uint64_t a1, unint64_t a2)
{
  sub_244ADC250(a1, a2, "TransparencyReporterLogger: renderedPrompt=%{private}s");
}

void sub_244ADC244(uint64_t a1, unint64_t a2)
{
  sub_244ADC250(a1, a2, "TransparencyReporterLogger: promptTemplateInfo=%{private}s");
}

void sub_244ADC250(uint64_t a1, unint64_t a2, const char *a3)
{
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  swift_bridgeObjectRetain_n();
  oslog = sub_244AE4194();
  v6 = sub_244AE4350();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10 = v8;
    *(_DWORD *)v7 = 136380675;
    swift_bridgeObjectRetain();
    sub_244A80950(a1, a2, &v10);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_244A6B000, oslog, v6, a3, v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v8, -1, -1);
    MEMORY[0x24951E31C](v7, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t TransparencyReporterLogger.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15PrivateMLClient26TransparencyReporterLogger_logger;
  v2 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TransparencyReporterLogger.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15PrivateMLClient26TransparencyReporterLogger_logger;
  v2 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void sub_244ADC468(uint64_t a1, unint64_t a2)
{
  sub_244ADC038(a1, a2);
}

void sub_244ADC488(uint64_t a1, unint64_t a2)
{
  sub_244ADC044(a1, a2);
}

void sub_244ADC4A8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_244ADC050(a1, a2, a3, a4);
}

void sub_244ADC4C8(uint64_t a1, unint64_t a2)
{
  sub_244ADC238(a1, a2);
}

void sub_244ADC4E8(uint64_t a1, unint64_t a2)
{
  sub_244ADC244(a1, a2);
}

uint64_t dispatch thunk of TransparencyReporter.report(userPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TransparencyReporter.report(token:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TransparencyReporter.report(modelName:modelVersion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of TransparencyReporter.report(renderedPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of TransparencyReporter.report(promptTemplateInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_244ADC530()
{
  return type metadata accessor for TransparencyReporterLogger();
}

uint64_t type metadata accessor for TransparencyReporterLogger()
{
  uint64_t result;

  result = qword_2573D2510;
  if (!qword_2573D2510)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244ADC574()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244AE41AC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for TransparencyReporterLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransparencyReporterLogger.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of TransparencyReporterLogger.report(userPrompt:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of TransparencyReporterLogger.report(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of TransparencyReporterLogger.report(modelName:modelVersion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of TransparencyReporterLogger.report(renderedPrompt:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of TransparencyReporterLogger.report(promptTemplateInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t TransparencyReporterImpl.__allocating_init(logger:requestIdentifier:modelBundleIdentifier:onBehalfOfPID:userID:)(uint64_t a1, char *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  TransparencyReporterImpl.init(logger:requestIdentifier:modelBundleIdentifier:onBehalfOfPID:userID:)(a1, a2, a3, a4, a5, a6 | ((HIDWORD(a6) & 1) << 32));
  return v12;
}

uint64_t TransparencyReporterImpl.init(logger:requestIdentifier:modelBundleIdentifier:onBehalfOfPID:userID:)(uint64_t a1, char *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  os_log_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[2];

  v7 = v6;
  v61 = a6;
  v57 = a5;
  v63 = a3;
  v11 = sub_244AE3B4C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_244AE41AC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_244AE4140();
  v58 = *(_QWORD *)(v18 - 8);
  v59 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelVersion);
  *v21 = 0;
  v21[1] = 0xE000000000000000;
  v22 = (_QWORD *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_renderedPrompt);
  *v22 = 0;
  v22[1] = 0;
  v23 = (_QWORD *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_response);
  *v23 = 0;
  v23[1] = 0xE000000000000000;
  v56 = v15;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v66 = a1;
  v64 = v14;
  v24(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_logger, a1, v14);
  v55 = v12;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v65 = a2;
  v62 = v11;
  v25(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_requestIdentifier, (uint64_t)a2, v11);
  v26 = (_QWORD *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelName);
  *v26 = v63;
  v26[1] = a4;
  v27 = a4;
  swift_bridgeObjectRetain();
  v28 = sub_244AE41DC();
  v29 = (uint64_t *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_clientIdentifier);
  *v29 = v28;
  v29[1] = v30;
  v31 = v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_userID;
  v32 = v61;
  *(_DWORD *)v31 = v61;
  v57 = HIDWORD(v32) & 1;
  *(_BYTE *)(v31 + 4) = BYTE4(v32) & 1;
  v33 = v64;
  v24((uint64_t)v17, v66, v64);
  sub_244AE4128();
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_signPoster, v20, v59);
  v34 = v60;
  v35 = v65;
  v36 = v62;
  v25((uint64_t)v60, (uint64_t)v65, v62);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v37 = sub_244AE4194();
  v38 = sub_244AE4368();
  v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    v40 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v69[0] = v59;
    *(_DWORD *)v40 = 136315906;
    LODWORD(v58) = v39;
    sub_244A7DAA8((unint64_t *)&qword_2573CFAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v54 = v37;
    v41 = sub_244AE44C4();
    v67 = sub_244A80950(v41, v42, v69);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v43 = *(void (**)(char *, uint64_t))(v55 + 8);
    v43(v34, v36);
    *(_WORD *)(v40 + 12) = 2080;
    swift_bridgeObjectRetain();
    v67 = sub_244A80950(v63, v27, v69);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 22) = 2080;
    v44 = *(_QWORD *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_clientIdentifier + 8);
    v67 = *(_QWORD *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_clientIdentifier);
    v68 = v44;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
    v45 = sub_244AE423C();
    v67 = sub_244A80950(v45, v46, v69);
    sub_244AE43B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 32) = 2080;
    LODWORD(v67) = v32;
    BYTE4(v67) = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2610);
    v47 = sub_244AE423C();
    v67 = sub_244A80950(v47, v48, v69);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    v49 = v54;
    _os_log_impl(&dword_244A6B000, v54, (os_log_type_t)v58, "%s Initialized TransparencyReporter. modelBundleIdentifier=%s clientIdentifier=%s userID=%s", (uint8_t *)v40, 0x2Au);
    v50 = v59;
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v50, -1, -1);
    MEMORY[0x24951E31C](v40, -1, -1);

    v43(v65, v36);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v66, v64);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v51 = *(void (**)(char *, uint64_t))(v55 + 8);
    v51(v34, v36);
    v51(v35, v36);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v66, v33);
  }
  return v7;
}

uint64_t sub_244ADCBF4()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244ADCC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  _QWORD *v8;

  v7 = (_QWORD *)(v4 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelName);
  *v7 = a1;
  v7[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(v4 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelVersion);
  *v8 = a3;
  v8[1] = a4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244ADCCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_renderedPrompt);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_244ADCD0C(uint64_t a1, uint64_t a2)
{
  sub_244ADCDB0(a1, a2, 0, 0);
}

uint64_t sub_244ADCD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_renderedPrompt);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_renderedPrompt + 8);
  v3 = v0 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_response;
  swift_beginAccess();
  v5 = *(NSObject **)v3;
  v4 = *(_QWORD *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244ADCDB0(v1, v2, v5, v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_244ADCDB0(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  os_log_t v38;
  uint64_t v39;
  int v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  __int128 v47[2];
  _QWORD v48[4];

  v5 = v4;
  v10 = sub_244AE3EC4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 | a4)
  {
    sub_244AE3E40();
    sub_244A7DAA8(&qword_2573D27A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE59890], MEMORY[0x24BE59888]);
    sub_244AE3E4C();
    v42 = 0;
    v43 = v11;
    v44 = a1;
    v45 = a3;
    sub_244A7EDB8(v47, (uint64_t)v48);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v16 = sub_244AE4194();
    v17 = sub_244AE4350();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      v40 = v17;
      v41 = v16;
      v19 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      *(_QWORD *)&v47[0] = v39;
      *(_DWORD *)v19 = 136447747;
      v20 = sub_244AE3B34();
      v46 = sub_244A80950(v20, v21, (uint64_t *)v47);
      sub_244AE43B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      v23 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelName);
      v22 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelName + 8);
      swift_bridgeObjectRetain();
      v46 = sub_244A80950(v23, v22, (uint64_t *)v47);
      sub_244AE43B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2082;
      v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelVersion);
      v25 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelVersion + 8);
      swift_bridgeObjectRetain();
      v46 = sub_244A80950(v24, v25, (uint64_t *)v47);
      sub_244AE43B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 32) = 2082;
      if (*(_QWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_clientIdentifier + 8))
      {
        v26 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_clientIdentifier);
        v27 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_clientIdentifier + 8);
      }
      else
      {
        v26 = 0;
        v27 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      v46 = sub_244A80950(v26, v27, (uint64_t *)v47);
      sub_244AE43B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 42) = 2081;
      v29 = *(_BYTE *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_userID + 4);
      LODWORD(v46) = *(_DWORD *)(v5 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_userID);
      BYTE4(v46) = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2610);
      v30 = sub_244AE423C();
      v46 = sub_244A80950(v30, v31, (uint64_t *)v47);
      sub_244AE43B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 52) = 2049;
      if (a2)
      {
        v32 = sub_244AE4260();
        swift_bridgeObjectRelease();
      }
      else
      {
        v32 = 0;
      }
      v46 = v32;
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 62) = 2049;
      if (a4)
      {
        v33 = sub_244AE4260();
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = 0;
      }
      v28 = v10;
      v46 = v33;
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      v34 = v41;
      _os_log_impl(&dword_244A6B000, v41, (os_log_type_t)v40, "requestIdentifier=%{public}s modelName=%{public}s modelVersion=%{public}s clientIdentifier=%{public}s userID=%{private}s promptLen=%{private}ld responseLen=%{private}ld", (uint8_t *)v19, 0x48u);
      v35 = v39;
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v35, -1, -1);
      MEMORY[0x24951E31C](v19, -1, -1);

    }
    else
    {
      v28 = v10;
      swift_release_n();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v36 = __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    MEMORY[0x24BDAC7A8](v36);
    v37 = v44;
    *(&v39 - 6) = v5;
    *(&v39 - 5) = v37;
    v38 = v45;
    *(&v39 - 4) = a2;
    *(&v39 - 3) = (uint64_t)v38;
    *(&v39 - 2) = a4;
    sub_244AE40F8();
    sub_244AE40EC();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v28);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
  }
  else
  {
    v45 = (os_log_t)sub_244AE4194();
    v14 = sub_244AE4368();
    if (os_log_type_enabled(v45, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_244A6B000, v45, v14, "Caller failed to provide a prompt or response", v15, 2u);
      MEMORY[0x24951E31C](v15, -1, -1);
    }

  }
}

uint64_t sub_244ADD3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a5;
  v14 = sub_244AE3E7C();
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573D27A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244AE3B1C();
  v11 = sub_244AE3B28();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  sub_244AE3EB8();
  sub_244AE3B34();
  sub_244AE3E58();
  swift_bridgeObjectRetain();
  sub_244AE3EA0();
  swift_bridgeObjectRetain();
  sub_244AE3EAC();
  swift_bridgeObjectRetain();
  sub_244AE3E94();
  swift_bridgeObjectRetain();
  sub_244AE3E64();
  swift_bridgeObjectRetain();
  sub_244AE3E70();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE59D68], v14);
  return sub_244AE3E88();
}

uint64_t TransparencyReporterImpl.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_logger;
  v2 = sub_244AE41AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_signPoster;
  v4 = sub_244AE4140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_requestIdentifier;
  v6 = sub_244AE3B4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TransparencyReporterImpl.__deallocating_deinit()
{
  TransparencyReporterImpl.deinit();
  return swift_deallocClassInstance();
}

void sub_244ADD710(uint64_t a1, uint64_t a2)
{
  sub_244ADCDB0(a1, a2, 0, 0);
}

uint64_t sub_244ADD738()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_244AE426C();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244ADD7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v7 = *v4;
  v8 = (_QWORD *)(*v4 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelName);
  *v8 = a1;
  v8[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(v7 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_modelVersion);
  *v9 = a3;
  v9[1] = a4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244ADD820(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)(*v2 + OBJC_IVAR____TtC15PrivateMLClient24TransparencyReporterImpl_renderedPrompt);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244ADD85C()
{
  return type metadata accessor for TransparencyReporterImpl();
}

uint64_t type metadata accessor for TransparencyReporterImpl()
{
  uint64_t result;

  result = qword_2573D2640;
  if (!qword_2573D2640)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244ADD8A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_244AE41AC();
  if (v1 <= 0x3F)
  {
    result = sub_244AE4140();
    if (v2 <= 0x3F)
    {
      result = sub_244AE3B4C();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for TransparencyReporterImpl()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransparencyReporterImpl.__allocating_init(logger:requestIdentifier:modelBundleIdentifier:onBehalfOfPID:userID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v6 + 248))(a1, a2, a3, a4, a5, a6 | ((HIDWORD(a6) & 1) << 32));
}

uint64_t dispatch thunk of TransparencyReporterImpl.report(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of TransparencyReporterImpl.report(modelName:modelVersion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of TransparencyReporterImpl.report(renderedPrompt:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of TransparencyReporterImpl.report(userPrompt:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of TransparencyReporterImpl.report(promptTemplateInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of TransparencyReporterImpl.finish()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t sub_244ADD9D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_244ADD3FC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t static NSUserDefaults.enablePerfMetrics.getter()
{
  char v0;
  _OWORD v2[2];
  char v3;

  if (qword_2573CF960 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_2573D28C0;
  v2[1] = unk_2573D28D0;
  v3 = byte_2573D28E0;
  sub_244A7D760((uint64_t)v2);
  v0 = sub_244ADE91C();
  sub_244A7D790((uint64_t)v2);
  return v0 & 1;
}

uint64_t static NSUserDefaults.modelOptionOverride.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  char v3;

  if (qword_2573CF968 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_2573D28E8;
  v2[1] = *(_OWORD *)&qword_2573D28F8;
  v3 = byte_2573D2908;
  sub_244A7D7C0((uint64_t)v2);
  v0 = sub_244ADE3AC();
  sub_244A7D800((uint64_t)v2);
  return v0;
}

uint64_t static NSUserDefaults.enableDraftModel.getter()
{
  char v0;
  _OWORD v2[2];
  char v3;

  if (qword_2573CF978 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_2573D2938;
  v2[1] = unk_2573D2948;
  v3 = byte_2573D2958;
  sub_244A7D760((uint64_t)v2);
  v0 = sub_244ADE91C();
  sub_244A7D790((uint64_t)v2);
  return v0 & 1;
}

uint64_t static NSUserDefaults.workloadParameterModelOverride.getter()
{
  uint64_t v0;
  __int128 v2;
  _OWORD v3[2];

  if (qword_2573CF930 != -1)
    swift_once();
  swift_beginAccess();
  v2 = xmmword_2573D27B0;
  v3[0] = *(_OWORD *)&qword_2573D27C0;
  *(_OWORD *)((char *)v3 + 9) = *(_OWORD *)((char *)&qword_2573D27C8 + 1);
  sub_244A9C050((uint64_t)&v2);
  v0 = sub_244ADDE20();
  sub_244A9C090((uint64_t)&v2);
  return v0;
}

uint64_t static NSUserDefaults.workloadParameterModelAdapterOverride.getter()
{
  uint64_t v0;
  __int128 v2;
  _OWORD v3[2];

  if (qword_2573CF938 != -1)
    swift_once();
  swift_beginAccess();
  v2 = xmmword_2573D27E0;
  v3[0] = *(_OWORD *)&qword_2573D27F0;
  *(_OWORD *)((char *)v3 + 9) = *(_OWORD *)((char *)&qword_2573D27F8 + 1);
  sub_244A9C050((uint64_t)&v2);
  v0 = sub_244ADDE20();
  sub_244A9C090((uint64_t)&v2);
  return v0;
}

uint64_t static NSUserDefaults.pipelineOverride.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  char v3;

  if (qword_2573CF948 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_2573D2838;
  v2[1] = *(_OWORD *)&qword_2573D2848;
  v3 = byte_2573D2858;
  sub_244A7D7C0((uint64_t)v2);
  v0 = sub_244ADE3AC();
  sub_244A7D800((uint64_t)v2);
  return v0;
}

uint64_t static NSUserDefaults.routingLayerNameOverride.getter()
{
  uint64_t v0;
  __int128 v2;
  _OWORD v3[2];

  if (qword_2573CF958 != -1)
    swift_once();
  swift_beginAccess();
  v2 = xmmword_2573D2890;
  v3[0] = *(_OWORD *)&qword_2573D28A0;
  *(_OWORD *)((char *)v3 + 9) = *(_OWORD *)((char *)&qword_2573D28A8 + 1);
  sub_244A9C050((uint64_t)&v2);
  v0 = sub_244ADDE20();
  sub_244A9C090((uint64_t)&v2);
  return v0;
}

uint64_t sub_244ADDE20()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  _OWORD v28[2];

  v1 = (uint64_t *)v0;
  if (qword_2573CF768 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_2573CFA01 == 1 && (*(_BYTE *)(v0 + 40) & 1) == 0)
    goto LABEL_19;
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  v4 = v1[2];
  v5 = (void *)sub_244AE420C();
  v6 = objc_msgSend(v2, sel_objectForKey_, v5);

  if (!v6)
    goto LABEL_19;
  sub_244AE43C8();
  swift_unknownObjectRelease();
  sub_244AE2758(v27, v28);
  sub_244A81228((uint64_t)v28, (uint64_t)v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_2573CF990 != -1)
      swift_once();
    v15 = sub_244AE41AC();
    __swift_project_value_buffer(v15, (uint64_t)qword_2573D29B8);
    sub_244A81228((uint64_t)v28, (uint64_t)v27);
    sub_244A9C050((uint64_t)v1);
    sub_244A9C050((uint64_t)v1);
    v16 = sub_244AE4194();
    v17 = sub_244AE435C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v26 = v19;
      *(_DWORD *)v18 = 136315650;
      swift_bridgeObjectRetain();
      v24 = sub_244A80950(v4, v3, &v26);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      sub_244A9C090((uint64_t)v1);
      sub_244A9C090((uint64_t)v1);
      *(_WORD *)(v18 + 12) = 2080;
      sub_244A81228((uint64_t)v27, (uint64_t)&v24);
      v20 = sub_244AE423C();
      v24 = sub_244A80950(v20, v21, &v26);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
      *(_WORD *)(v18 + 22) = 2080;
      v24 = sub_244A80950(0xD000000000000010, 0x8000000244AEAF70, &v26);
      sub_244AE43B0();
      _os_log_impl(&dword_244A6B000, v16, v17, "Mismatched defaults type. key=%s value=%s type=%s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v19, -1, -1);
      MEMORY[0x24951E31C](v18, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
      sub_244A9C090((uint64_t)v1);
      sub_244A9C090((uint64_t)v1);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
LABEL_19:
    v7 = *v1;
    swift_bridgeObjectRetain();
    return v7;
  }
  v7 = v24;
  v8 = v25;
  if (qword_2573CF990 != -1)
    swift_once();
  v9 = sub_244AE41AC();
  __swift_project_value_buffer(v9, (uint64_t)qword_2573D29B8);
  sub_244A9C050((uint64_t)v1);
  sub_244AE2768(v24, v25);
  sub_244A9C050((uint64_t)v1);
  sub_244AE2768(v24, v25);
  v10 = sub_244AE4194();
  v11 = sub_244AE4344();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v24 = v23;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v27[0] = sub_244A80950(v4, v3, &v24);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A9C090((uint64_t)v1);
    sub_244A9C090((uint64_t)v1);
    *(_WORD *)(v12 + 12) = 2080;
    *(_QWORD *)&v27[0] = v7;
    *((_QWORD *)&v27[0] + 1) = v8;
    swift_bridgeObjectRetain();
    v13 = sub_244AE423C();
    *(_QWORD *)&v27[0] = sub_244A80950(v13, v14, &v24);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244AE277C(v7, v8);
    sub_244AE277C(v7, v8);
    _os_log_impl(&dword_244A6B000, v10, v11, "Using UserDefaults override. key=%s value=%s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v23, -1, -1);
    MEMORY[0x24951E31C](v12, -1, -1);

  }
  else
  {

    sub_244AE277C(v24, v25);
    sub_244AE277C(v24, v25);
    sub_244A9C090((uint64_t)v1);
    sub_244A9C090((uint64_t)v1);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  return v7;
}

uint64_t sub_244ADE3AC()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23[4];
  uint64_t v24;
  _OWORD v25[2];
  _OWORD v26[2];

  v1 = (uint64_t *)v0;
  if (qword_2573CF768 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_2573CFA01 == 1 && (*(_BYTE *)(v0 + 32) & 1) == 0)
    goto LABEL_19;
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v4 = v1[1];
  v5 = (void *)sub_244AE420C();
  v6 = objc_msgSend(v2, sel_objectForKey_, v5);

  if (!v6)
    goto LABEL_19;
  sub_244AE43C8();
  swift_unknownObjectRelease();
  sub_244AE2758(v25, v26);
  sub_244A81228((uint64_t)v26, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_2573CF990 != -1)
      swift_once();
    v15 = sub_244AE41AC();
    __swift_project_value_buffer(v15, (uint64_t)qword_2573D29B8);
    sub_244A81228((uint64_t)v26, (uint64_t)v25);
    sub_244A7D7C0((uint64_t)v1);
    sub_244A7D7C0((uint64_t)v1);
    v16 = sub_244AE4194();
    v17 = sub_244AE435C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136315650;
      swift_bridgeObjectRetain();
      v23[0] = sub_244A80950(v4, v3, &v24);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      sub_244A7D800((uint64_t)v1);
      sub_244A7D800((uint64_t)v1);
      *(_WORD *)(v18 + 12) = 2080;
      sub_244A81228((uint64_t)v25, (uint64_t)v23);
      v20 = sub_244AE423C();
      v23[0] = sub_244A80950(v20, v21, &v24);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      *(_WORD *)(v18 + 22) = 2080;
      v23[0] = sub_244A80950(0xD000000000000024, 0x8000000244AEAFB0, &v24);
      sub_244AE43B0();
      _os_log_impl(&dword_244A6B000, v16, v17, "Mismatched defaults type. key=%s value=%s type=%s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v19, -1, -1);
      MEMORY[0x24951E31C](v18, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      sub_244A7D800((uint64_t)v1);
      sub_244A7D800((uint64_t)v1);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
LABEL_19:
    v7 = *v1;
    swift_bridgeObjectRetain();
    return v7;
  }
  v7 = v23[0];
  if (qword_2573CF990 != -1)
    swift_once();
  v8 = sub_244AE41AC();
  __swift_project_value_buffer(v8, (uint64_t)qword_2573D29B8);
  sub_244A7D7C0((uint64_t)v1);
  sub_244AE2790(v23[0]);
  sub_244A7D7C0((uint64_t)v1);
  sub_244AE2790(v23[0]);
  v9 = sub_244AE4194();
  v10 = sub_244AE4344();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_QWORD *)&v25[0] = v12;
    *(_DWORD *)v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_244A80950(v4, v3, (uint64_t *)v25);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A7D800((uint64_t)v1);
    sub_244A7D800((uint64_t)v1);
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    v13 = sub_244AE423C();
    v23[0] = sub_244A80950(v13, v14, (uint64_t *)v25);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244AE27A0(v7);
    sub_244AE27A0(v7);
    _os_log_impl(&dword_244A6B000, v9, v10, "Using UserDefaults override. key=%s value=%s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v12, -1, -1);
    MEMORY[0x24951E31C](v11, -1, -1);

  }
  else
  {

    sub_244AE27A0(v23[0]);
    sub_244AE27A0(v23[0]);
    sub_244A7D800((uint64_t)v1);
    sub_244A7D800((uint64_t)v1);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  return v7;
}

uint64_t sub_244ADE91C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23[4];
  uint64_t v24;
  _OWORD v25[2];
  _OWORD v26[2];

  v1 = (_QWORD *)v0;
  if (qword_2573CF768 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_2573CFA01 == 1 && (*(_BYTE *)(v0 + 32) & 1) == 0)
    return *(unsigned __int8 *)v1;
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v4 = v1[1];
  v5 = (void *)sub_244AE420C();
  v6 = objc_msgSend(v2, sel_objectForKey_, v5);

  if (!v6)
    return *(unsigned __int8 *)v1;
  sub_244AE43C8();
  swift_unknownObjectRelease();
  sub_244AE2758(v25, v26);
  sub_244A81228((uint64_t)v26, (uint64_t)v25);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_2573CF990 != -1)
      swift_once();
    v15 = sub_244AE41AC();
    __swift_project_value_buffer(v15, (uint64_t)qword_2573D29B8);
    sub_244A81228((uint64_t)v26, (uint64_t)v25);
    sub_244A7D760((uint64_t)v1);
    sub_244A7D760((uint64_t)v1);
    v16 = sub_244AE4194();
    v17 = sub_244AE435C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136315650;
      swift_bridgeObjectRetain();
      v23[0] = sub_244A80950(v4, v3, &v24);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      sub_244A7D790((uint64_t)v1);
      sub_244A7D790((uint64_t)v1);
      *(_WORD *)(v18 + 12) = 2080;
      sub_244A81228((uint64_t)v25, (uint64_t)v23);
      v20 = sub_244AE423C();
      v23[0] = sub_244A80950(v20, v21, &v24);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      *(_WORD *)(v18 + 22) = 2080;
      v23[0] = sub_244A80950(1819242306, 0xE400000000000000, &v24);
      sub_244AE43B0();
      _os_log_impl(&dword_244A6B000, v16, v17, "Mismatched defaults type. key=%s value=%s type=%s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v19, -1, -1);
      MEMORY[0x24951E31C](v18, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      sub_244A7D790((uint64_t)v1);
      sub_244A7D790((uint64_t)v1);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    return *(unsigned __int8 *)v1;
  }
  if (qword_2573CF990 != -1)
    swift_once();
  v7 = v23[0] & 1;
  v8 = sub_244AE41AC();
  __swift_project_value_buffer(v8, (uint64_t)qword_2573D29B8);
  sub_244A7D760((uint64_t)v1);
  sub_244A7D760((uint64_t)v1);
  v9 = sub_244AE4194();
  v10 = sub_244AE4344();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_QWORD *)&v25[0] = v12;
    *(_DWORD *)v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_244A80950(v4, v3, (uint64_t *)v25);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A7D790((uint64_t)v1);
    sub_244A7D790((uint64_t)v1);
    *(_WORD *)(v11 + 12) = 2080;
    v13 = sub_244AE423C();
    v23[0] = sub_244A80950(v13, v14, (uint64_t *)v25);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_244A6B000, v9, v10, "Using UserDefaults override. key=%s value=%s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v12, -1, -1);
    MEMORY[0x24951E31C](v11, -1, -1);

  }
  else
  {

    sub_244A7D790((uint64_t)v1);
    sub_244A7D790((uint64_t)v1);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  return v7;
}

uint64_t sub_244ADEE30()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24[4];
  uint64_t v25;
  _OWORD v26[2];
  _OWORD v27[2];

  v1 = (uint64_t *)v0;
  if (qword_2573CF768 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_2573CFA01 == 1 && (*(_BYTE *)(v0 + 40) & 1) == 0)
    goto LABEL_19;
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  v4 = v1[2];
  v5 = (void *)sub_244AE420C();
  v6 = objc_msgSend(v2, sel_objectForKey_, v5);

  if (!v6)
    goto LABEL_19;
  sub_244AE43C8();
  swift_unknownObjectRelease();
  sub_244AE2758(v26, v27);
  sub_244A81228((uint64_t)v27, (uint64_t)v26);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_2573CF990 != -1)
      swift_once();
    v16 = sub_244AE41AC();
    __swift_project_value_buffer(v16, (uint64_t)qword_2573D29B8);
    sub_244A81228((uint64_t)v27, (uint64_t)v26);
    sub_244A9C050((uint64_t)v1);
    sub_244A9C050((uint64_t)v1);
    v17 = sub_244AE4194();
    v18 = sub_244AE435C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v25 = v20;
      *(_DWORD *)v19 = 136315650;
      swift_bridgeObjectRetain();
      v24[0] = sub_244A80950(v4, v3, &v25);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      sub_244A9C090((uint64_t)v1);
      sub_244A9C090((uint64_t)v1);
      *(_WORD *)(v19 + 12) = 2080;
      sub_244A81228((uint64_t)v26, (uint64_t)v24);
      v21 = sub_244AE423C();
      v24[0] = sub_244A80950(v21, v22, &v25);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      *(_WORD *)(v19 + 22) = 2080;
      v24[0] = sub_244A80950(0x676E69727453, 0xE600000000000000, &v25);
      sub_244AE43B0();
      _os_log_impl(&dword_244A6B000, v17, v18, "Mismatched defaults type. key=%s value=%s type=%s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v20, -1, -1);
      MEMORY[0x24951E31C](v19, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      sub_244A9C090((uint64_t)v1);
      sub_244A9C090((uint64_t)v1);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
LABEL_19:
    v7 = *v1;
    swift_bridgeObjectRetain();
    return v7;
  }
  v7 = v24[0];
  v8 = v24[1];
  if (qword_2573CF990 != -1)
    swift_once();
  v9 = sub_244AE41AC();
  __swift_project_value_buffer(v9, (uint64_t)qword_2573D29B8);
  sub_244A9C050((uint64_t)v1);
  swift_bridgeObjectRetain();
  sub_244A9C050((uint64_t)v1);
  swift_bridgeObjectRetain();
  v10 = sub_244AE4194();
  v11 = sub_244AE4344();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v24[0] = v13;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v26[0] = sub_244A80950(v4, v3, v24);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    sub_244A9C090((uint64_t)v1);
    sub_244A9C090((uint64_t)v1);
    *(_WORD *)(v12 + 12) = 2080;
    *(_QWORD *)&v26[0] = v7;
    *((_QWORD *)&v26[0] + 1) = v8;
    swift_bridgeObjectRetain();
    v14 = sub_244AE423C();
    *(_QWORD *)&v26[0] = sub_244A80950(v14, v15, v24);
    sub_244AE43B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_244A6B000, v10, v11, "Using UserDefaults override. key=%s value=%s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v13, -1, -1);
    MEMORY[0x24951E31C](v12, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    sub_244A9C090((uint64_t)v1);
    sub_244A9C090((uint64_t)v1);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  return v7;
}

void static NSUserDefaults.workloadParameterModelOverride.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF930 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D27D0;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.workloadParameterModelOverride.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x68uLL);
  *a1 = v2;
  if (qword_2573CF930 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_2573D27C0;
  *v2 = xmmword_2573D27B0;
  v2[1] = v3;
  *(_OWORD *)((char *)v2 + 25) = *(_OWORD *)((char *)&qword_2573D27C8 + 1);
  *((_QWORD *)v2 + 9) = sub_244ADDE20();
  *((_QWORD *)v2 + 10) = v4;
  return sub_244ADF500;
}

void sub_244ADF500(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 88) = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = (void *)qword_2573D27D0;
  v3[12] = v3[10];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
    v5 = sub_244AE44E8();
    v6 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
    v7 = sub_244AE44E8();
    v8 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_244ADF640()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2573D27B0 = 0uLL;
    qword_2573D27C0 = 0xD00000000000001ELL;
    qword_2573D27C8 = 0x8000000244AEAEC0;
    qword_2573D27D0 = (uint64_t)v2;
    byte_2573D27D8 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

uint64_t static NSUserDefaults.privatemlClientUserDefaults()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    return (uint64_t)v2;
  result = sub_244AE441C();
  __break(1u);
  return result;
}

id static NSUserDefaults.$workloadParameterModelOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v6;

  if (qword_2573CF930 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_2573D27C8;
  v6 = (id)qword_2573D27D0;
  v2 = qword_2573D27D0;
  v4 = byte_2573D27D8;
  *(_QWORD *)a1 = xmmword_2573D27B0;
  *(_OWORD *)(a1 + 8) = *(__int128 *)((char *)&xmmword_2573D27B0 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void static NSUserDefaults.workloadParameterModelAdapterOverride.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF938 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D2800;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.workloadParameterModelAdapterOverride.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x68uLL);
  *a1 = v2;
  if (qword_2573CF938 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_2573D27F0;
  *v2 = xmmword_2573D27E0;
  v2[1] = v3;
  *(_OWORD *)((char *)v2 + 25) = *(_OWORD *)((char *)&qword_2573D27F8 + 1);
  *((_QWORD *)v2 + 9) = sub_244ADDE20();
  *((_QWORD *)v2 + 10) = v4;
  return sub_244ADFA1C;
}

void sub_244ADFA1C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 88) = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = (void *)qword_2573D2800;
  v3[12] = v3[10];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
    v5 = sub_244AE44E8();
    v6 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
    v7 = sub_244AE44E8();
    v8 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_244ADFB5C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2573D27E0 = 0uLL;
    qword_2573D27F0 = 0xD000000000000025;
    qword_2573D27F8 = 0x8000000244AEAF40;
    qword_2573D2800 = (uint64_t)v2;
    byte_2573D2808 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$workloadParameterModelAdapterOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v6;

  if (qword_2573CF938 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_2573D27F8;
  v6 = (id)qword_2573D2800;
  v2 = qword_2573D2800;
  v4 = byte_2573D2808;
  *(_QWORD *)a1 = xmmword_2573D27E0;
  *(_OWORD *)(a1 + 8) = *(__int128 *)((char *)&xmmword_2573D27E0 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t static NSUserDefaults.enableFallBack.getter()
{
  char v0;
  _OWORD v2[2];
  char v3;

  if (qword_2573CF940 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_2573D2810;
  v2[1] = unk_2573D2820;
  v3 = byte_2573D2830;
  sub_244A7D760((uint64_t)v2);
  v0 = sub_244ADE91C();
  sub_244A7D790((uint64_t)v2);
  return v0 & 1;
}

void static NSUserDefaults.enableFallBack.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF940 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D2828;
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.enableFallBack.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  if (qword_2573CF940 != -1)
    swift_once();
  swift_beginAccess();
  v3 = unk_2573D2820;
  *v2 = xmmword_2573D2810;
  v2[1] = v3;
  *((_BYTE *)v2 + 32) = byte_2573D2830;
  *((_BYTE *)v2 + 33) = sub_244ADE91C() & 1;
  return sub_244ADFEEC;
}

void sub_244ADFEEC(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)a1;
  v4 = (void *)qword_2573D2828;
  *(_BYTE *)(*(_QWORD *)a1 + 34) = *(_BYTE *)(*(_QWORD *)a1 + 33);
  v5 = sub_244AE44E8();
  v6 = (void *)sub_244AE420C();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if ((a2 & 1) != 0)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_244ADFFA0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    LOBYTE(xmmword_2573D2810) = 0;
    *((_QWORD *)&xmmword_2573D2810 + 1) = 0x6146656C62616E65;
    unk_2573D2820 = 0xEE006B6361426C6CLL;
    qword_2573D2828 = (uint64_t)v2;
    byte_2573D2830 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$enableFallBack.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v7;

  if (qword_2573CF940 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *((_QWORD *)&xmmword_2573D2810 + 1);
  v2 = unk_2573D2820;
  v7 = (id)qword_2573D2828;
  v4 = qword_2573D2828;
  v5 = byte_2573D2830;
  *(_BYTE *)a1 = xmmword_2573D2810;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return v7;
}

void static NSUserDefaults.pipelineOverride.setter(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  if (qword_2573CF948 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_2573D2850;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
  v3 = sub_244AE44E8();
  v4 = (void *)sub_244AE420C();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, a1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.pipelineOverride.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;

  v2 = malloc(0x50uLL);
  *a1 = v2;
  if (qword_2573CF948 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_2573D2848;
  *v2 = xmmword_2573D2838;
  v2[1] = v3;
  *((_BYTE *)v2 + 32) = byte_2573D2858;
  *((_QWORD *)v2 + 8) = sub_244ADE3AC();
  return sub_244AE02A4;
}

void sub_244AE02A4(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 72) = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = (void *)qword_2573D2850;
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
    v5 = sub_244AE44E8();
    v6 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
    v7 = sub_244AE44E8();
    v8 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_244AE03E4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2573D2838 = xmmword_244AE9390;
    qword_2573D2848 = 0xE800000000000000;
    qword_2573D2850 = (uint64_t)v2;
    byte_2573D2858 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$pipelineOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v6;

  if (qword_2573CF948 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_2573D2848;
  v6 = (id)qword_2573D2850;
  v2 = qword_2573D2850;
  v4 = byte_2573D2858;
  *(_OWORD *)a1 = xmmword_2573D2838;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t static NSUserDefaults.serverScope.getter()
{
  uint64_t v0;
  __int128 v2;
  _OWORD v3[2];

  if (qword_2573CF950 != -1)
    swift_once();
  swift_beginAccess();
  v2 = xmmword_2573D2860;
  v3[0] = *(_OWORD *)&qword_2573D2870;
  *(_OWORD *)((char *)v3 + 9) = unk_2573D2879;
  sub_244A9C050((uint64_t)&v2);
  v0 = sub_244ADEE30();
  sub_244A9C090((uint64_t)&v2);
  return v0;
}

void static NSUserDefaults.serverScope.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF950 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D2880;
  swift_bridgeObjectRetain();
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.serverScope.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x68uLL);
  *a1 = v2;
  if (qword_2573CF950 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_2573D2870;
  *v2 = xmmword_2573D2860;
  v2[1] = v3;
  *(_OWORD *)((char *)v2 + 25) = unk_2573D2879;
  *((_QWORD *)v2 + 9) = sub_244ADEE30();
  *((_QWORD *)v2 + 10) = v4;
  return sub_244AE0774;
}

void sub_244AE0774(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 88) = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = (void *)qword_2573D2880;
  v3[12] = v3[10];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = sub_244AE44E8();
    v6 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    v7 = sub_244AE44E8();
    v8 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_244AE08A4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(_QWORD *)&xmmword_2573D2860 = 0;
    *((_QWORD *)&xmmword_2573D2860 + 1) = 0xE000000000000000;
    qword_2573D2870 = 0x6353726576726553;
    unk_2573D2878 = 0xEB0000000065706FLL;
    qword_2573D2880 = (uint64_t)v2;
    byte_2573D2888 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$serverScope.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v8;

  if (qword_2573CF950 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *((_QWORD *)&xmmword_2573D2860 + 1);
  v3 = qword_2573D2870;
  v4 = unk_2573D2878;
  v8 = (id)qword_2573D2880;
  v5 = qword_2573D2880;
  v6 = byte_2573D2888;
  *(_QWORD *)a1 = xmmword_2573D2860;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v8;
}

void static NSUserDefaults.routingLayerNameOverride.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF958 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D28B0;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.routingLayerNameOverride.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x68uLL);
  *a1 = v2;
  if (qword_2573CF958 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_2573D28A0;
  *v2 = xmmword_2573D2890;
  v2[1] = v3;
  *(_OWORD *)((char *)v2 + 25) = *(_OWORD *)((char *)&qword_2573D28A8 + 1);
  *((_QWORD *)v2 + 9) = sub_244ADDE20();
  *((_QWORD *)v2 + 10) = v4;
  return sub_244AE0BBC;
}

void sub_244AE0BBC(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 88) = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = (void *)qword_2573D28B0;
  v3[12] = v3[10];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
    v5 = sub_244AE44E8();
    v6 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2608);
    v7 = sub_244AE44E8();
    v8 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_244AE0CFC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2573D2890 = 0uLL;
    qword_2573D28A0 = 0xD000000000000018;
    qword_2573D28A8 = 0x8000000244AEAF20;
    qword_2573D28B0 = (uint64_t)v2;
    byte_2573D28B8 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$routingLayerNameOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v6;

  if (qword_2573CF958 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_2573D28A8;
  v6 = (id)qword_2573D28B0;
  v2 = qword_2573D28B0;
  v4 = byte_2573D28B8;
  *(_QWORD *)a1 = xmmword_2573D2890;
  *(_OWORD *)(a1 + 8) = *(__int128 *)((char *)&xmmword_2573D2890 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void static NSUserDefaults.enablePerfMetrics.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF960 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D28D8;
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.enablePerfMetrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  if (qword_2573CF960 != -1)
    swift_once();
  swift_beginAccess();
  v3 = unk_2573D28D0;
  *v2 = xmmword_2573D28C0;
  v2[1] = v3;
  *((_BYTE *)v2 + 32) = byte_2573D28E0;
  *((_BYTE *)v2 + 33) = sub_244ADE91C() & 1;
  return sub_244AE0FF0;
}

void sub_244AE0FF0(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)a1;
  v4 = (void *)qword_2573D28D8;
  *(_BYTE *)(*(_QWORD *)a1 + 34) = *(_BYTE *)(*(_QWORD *)a1 + 33);
  v5 = sub_244AE44E8();
  v6 = (void *)sub_244AE420C();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if ((a2 & 1) != 0)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_244AE10A4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    LOBYTE(xmmword_2573D28C0) = 1;
    *((_QWORD *)&xmmword_2573D28C0 + 1) = 0xD000000000000011;
    unk_2573D28D0 = 0x8000000244AEB000;
    qword_2573D28D8 = (uint64_t)v2;
    byte_2573D28E0 = 1;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$enablePerfMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v7;

  if (qword_2573CF960 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *((_QWORD *)&xmmword_2573D28C0 + 1);
  v2 = unk_2573D28D0;
  v7 = (id)qword_2573D28D8;
  v4 = qword_2573D28D8;
  v5 = byte_2573D28E0;
  *(_BYTE *)a1 = xmmword_2573D28C0;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return v7;
}

void static NSUserDefaults.modelOptionOverride.setter(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  if (qword_2573CF968 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_2573D2900;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
  v3 = sub_244AE44E8();
  v4 = (void *)sub_244AE420C();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, a1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.modelOptionOverride.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;

  v2 = malloc(0x50uLL);
  *a1 = v2;
  if (qword_2573CF968 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_2573D28F8;
  *v2 = xmmword_2573D28E8;
  v2[1] = v3;
  *((_BYTE *)v2 + 32) = byte_2573D2908;
  *((_QWORD *)v2 + 8) = sub_244ADE3AC();
  return sub_244AE1398;
}

void sub_244AE1398(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 72) = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = (void *)qword_2573D2900;
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
    v5 = sub_244AE44E8();
    v6 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
    v7 = sub_244AE44E8();
    v8 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_244AE14D8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2573D28E8 = xmmword_244AE93A0;
    qword_2573D28F8 = 0x8000000244AEAFE0;
    qword_2573D2900 = (uint64_t)v2;
    byte_2573D2908 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$modelOptionOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v6;

  if (qword_2573CF968 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_2573D28F8;
  v6 = (id)qword_2573D2900;
  v2 = qword_2573D2900;
  v4 = byte_2573D2908;
  *(_OWORD *)a1 = xmmword_2573D28E8;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t static NSUserDefaults.overrideModelCatalog.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  char v3;

  if (qword_2573CF970 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_2573D2910;
  v2[1] = *(_OWORD *)&qword_2573D2920;
  v3 = byte_2573D2930;
  sub_244A7D7C0((uint64_t)v2);
  v0 = sub_244ADE3AC();
  sub_244A7D800((uint64_t)v2);
  return v0;
}

void static NSUserDefaults.overrideModelCatalog.setter(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  if (qword_2573CF970 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_2573D2928;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
  v3 = sub_244AE44E8();
  v4 = (void *)sub_244AE420C();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, a1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.overrideModelCatalog.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;

  v2 = malloc(0x50uLL);
  *a1 = v2;
  if (qword_2573CF970 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_2573D2920;
  *v2 = xmmword_2573D2910;
  v2[1] = v3;
  *((_BYTE *)v2 + 32) = byte_2573D2930;
  *((_QWORD *)v2 + 8) = sub_244ADE3AC();
  return sub_244AE1870;
}

void sub_244AE1870(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 72) = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = (void *)qword_2573D2928;
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
    v5 = sub_244AE44E8();
    v6 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2990);
    v7 = sub_244AE44E8();
    v8 = (void *)sub_244AE420C();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_244AE19B0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2573D2910 = xmmword_244AE93B0;
    qword_2573D2920 = 0x8000000244AEAF00;
    qword_2573D2928 = (uint64_t)v2;
    byte_2573D2930 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$overrideModelCatalog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v6;

  if (qword_2573CF970 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_2573D2920;
  v6 = (id)qword_2573D2928;
  v2 = qword_2573D2928;
  v4 = byte_2573D2930;
  *(_OWORD *)a1 = xmmword_2573D2910;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void static NSUserDefaults.enableDraftModel.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF978 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D2950;
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.enableDraftModel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  if (qword_2573CF978 != -1)
    swift_once();
  swift_beginAccess();
  v3 = unk_2573D2948;
  *v2 = xmmword_2573D2938;
  v2[1] = v3;
  *((_BYTE *)v2 + 32) = byte_2573D2958;
  *((_BYTE *)v2 + 33) = sub_244ADE91C() & 1;
  return sub_244AE1CA4;
}

void sub_244AE1CA4(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)a1;
  v4 = (void *)qword_2573D2950;
  *(_BYTE *)(*(_QWORD *)a1 + 34) = *(_BYTE *)(*(_QWORD *)a1 + 33);
  v5 = sub_244AE44E8();
  v6 = (void *)sub_244AE420C();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if ((a2 & 1) != 0)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_244AE1D58()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    LOBYTE(xmmword_2573D2938) = 0;
    *((_QWORD *)&xmmword_2573D2938 + 1) = 0xD000000000000010;
    unk_2573D2948 = 0x8000000244AEAF90;
    qword_2573D2950 = (uint64_t)v2;
    byte_2573D2958 = 0;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$enableDraftModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v7;

  if (qword_2573CF978 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *((_QWORD *)&xmmword_2573D2938 + 1);
  v2 = unk_2573D2948;
  v7 = (id)qword_2573D2950;
  v4 = qword_2573D2950;
  v5 = byte_2573D2958;
  *(_BYTE *)a1 = xmmword_2573D2938;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t static NSUserDefaults.convertSchemasToGrammars.getter()
{
  char v0;
  _OWORD v2[2];
  char v3;

  if (qword_2573CF980 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_2573D2960;
  v2[1] = unk_2573D2970;
  v3 = byte_2573D2980;
  sub_244A7D760((uint64_t)v2);
  v0 = sub_244ADE91C();
  sub_244A7D790((uint64_t)v2);
  return v0 & 1;
}

void static NSUserDefaults.convertSchemasToGrammars.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_2573CF980 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_2573D2978;
  v1 = sub_244AE44E8();
  v2 = (void *)sub_244AE420C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.convertSchemasToGrammars.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  if (qword_2573CF980 != -1)
    swift_once();
  swift_beginAccess();
  v3 = unk_2573D2970;
  *v2 = xmmword_2573D2960;
  v2[1] = v3;
  *((_BYTE *)v2 + 32) = byte_2573D2980;
  *((_BYTE *)v2 + 33) = sub_244ADE91C() & 1;
  return sub_244AE20D0;
}

void sub_244AE20D0(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)a1;
  v4 = (void *)qword_2573D2978;
  *(_BYTE *)(*(_QWORD *)a1 + 34) = *(_BYTE *)(*(_QWORD *)a1 + 33);
  v5 = sub_244AE44E8();
  v6 = (void *)sub_244AE420C();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if ((a2 & 1) != 0)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_244AE2184()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    LOBYTE(xmmword_2573D2960) = 0;
    *((_QWORD *)&xmmword_2573D2960 + 1) = 0xD000000000000018;
    unk_2573D2970 = 0x8000000244AEAEE0;
    qword_2573D2978 = (uint64_t)v2;
    byte_2573D2980 = 1;
  }
  else
  {
    sub_244AE441C();
    __break(1u);
  }
}

id static NSUserDefaults.$convertSchemasToGrammars.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v7;

  if (qword_2573CF980 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *((_QWORD *)&xmmword_2573D2960 + 1);
  v2 = unk_2573D2970;
  v7 = (id)qword_2573D2978;
  v4 = qword_2573D2978;
  v5 = byte_2573D2980;
  *(_BYTE *)a1 = xmmword_2573D2960;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t static NSUserDefaults.privatemlClientUserDefaultsJSONString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD v16[2];
  unint64_t v17;

  v1 = sub_244AE4230();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_244AE3ABC();
  MEMORY[0x24BDAC7A8](v2);
  sub_244AE3AEC();
  swift_allocObject();
  sub_244AE3AE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF70);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_244AE4EB0;
  sub_244AE3AB0();
  sub_244A9C378();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573CFF80);
  sub_244A94050();
  sub_244AE43D4();
  sub_244AE3AC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D2998);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244AE4EB0;
  *(_QWORD *)(inited + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(inited + 40) = 0x8000000244AEAEC0;
  if (qword_2573CF930 != -1)
    swift_once();
  swift_beginAccess();
  v15 = xmmword_2573D27B0;
  v16[0] = *(_OWORD *)&qword_2573D27C0;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)&qword_2573D27C8 + 1);
  sub_244A9C050((uint64_t)&v15);
  v4 = sub_244ADDE20();
  v6 = v5;
  sub_244A9C090((uint64_t)&v15);
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v6;
  v17 = sub_244A83EBC(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573D29A0);
  sub_244AE25D4();
  v7 = sub_244AE3AD4();
  if (v0)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v7;
    v11 = v8;
    swift_bridgeObjectRelease();
    sub_244AE4224();
    v12 = sub_244AE4218();
    v14 = v13;
    sub_244A7D674(v10, v11);
    swift_release();
    if (v14)
      return v12;
    else
      return 0x6E776F6E6B6E75;
  }
}

unint64_t sub_244AE25D4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2573D29A8;
  if (!qword_2573D29A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2573D29A0);
    v2 = sub_244AE2640();
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x24951E280](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2573D29A8);
  }
  return result;
}

unint64_t sub_244AE2640()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2573D29B0;
  if (!qword_2573D29B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2573D2608);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x24951E280](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2573D29B0);
  }
  return result;
}

void sub_244AE269C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_244AE420C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_2573D2988 = (uint64_t)v2;
}

uint64_t static NSUserDefaults.group.getter()
{
  uint64_t v0;
  id v1;

  if (qword_2573CF988 != -1)
    swift_once();
  v0 = qword_2573D2988;
  v1 = (id)qword_2573D2988;
  return v0;
}

_OWORD *sub_244AE2758(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_244AE2768(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_244AE277C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_244AE2790(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_244AE27A0(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t UserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char v27;
  void (*v28)(char *, uint64_t);
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[4];
  char *v75;
  _OWORD v76[2];
  _OWORD v77[2];

  v3 = v2;
  v71 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_244AE43A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v65 - v9;
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v69 = (char *)&v65 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v70 = (char *)&v65 - v16;
  v17 = *(_QWORD *)(a1 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v68 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v65 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v65 - v23;
  if (qword_2573CF768 != -1)
    swift_once();
  swift_beginAccess();
  v25 = byte_2573CFA01;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v26(v24, v3, a1);
  if (v25 == 1)
  {
    v27 = v24[*(int *)(a1 + 36)];
    v28 = *(void (**)(char *, uint64_t))(v17 + 8);
    v28(v24, a1);
    if ((v27 & 1) == 0)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v71, v3, v73);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t))(v17 + 8);
    v28(v24, a1);
  }
  v67 = v28;
  v30 = *(void **)(v3 + *(int *)(a1 + 32));
  v31 = (void *)sub_244AE420C();
  v32 = objc_msgSend(v30, sel_objectForKey_, v31);

  v33 = v73;
  if (!v32)
  {
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 16);
    return v51(v71, v3, v33);
  }
  sub_244AE43C8();
  swift_unknownObjectRelease();
  sub_244AE2758(v76, v77);
  sub_244A81228((uint64_t)v77, (uint64_t)v76);
  v34 = swift_dynamicCast();
  v35 = v72;
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
  if (!v34)
  {
    v36(v10, 1, 1, v33);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if (qword_2573CF990 != -1)
      swift_once();
    v52 = sub_244AE41AC();
    __swift_project_value_buffer(v52, (uint64_t)qword_2573D29B8);
    v53 = v68;
    v26(v68, v3, a1);
    sub_244A81228((uint64_t)v77, (uint64_t)v76);
    v54 = sub_244AE4194();
    v55 = sub_244AE435C();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v70 = (char *)swift_slowAlloc();
      v75 = v70;
      *(_DWORD *)v56 = 136315650;
      v57 = (uint64_t *)&v53[*(int *)(a1 + 28)];
      v59 = *v57;
      v58 = v57[1];
      swift_bridgeObjectRetain();
      v74[0] = sub_244A80950(v59, v58, (uint64_t *)&v75);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      v67(v53, a1);
      *(_WORD *)(v56 + 12) = 2080;
      sub_244A81228((uint64_t)v76, (uint64_t)v74);
      v60 = sub_244AE423C();
      v74[0] = sub_244A80950(v60, v61, (uint64_t *)&v75);
      sub_244AE43B0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
      *(_WORD *)(v56 + 22) = 2080;
      v62 = sub_244AE4584();
      v74[0] = sub_244A80950(v62, v63, (uint64_t *)&v75);
      v33 = v73;
      sub_244AE43B0();
      v35 = v72;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244A6B000, v54, v55, "Mismatched defaults type. key=%s value=%s type=%s", (uint8_t *)v56, 0x20u);
      v64 = v70;
      swift_arrayDestroy();
      MEMORY[0x24951E31C](v64, -1, -1);
      MEMORY[0x24951E31C](v56, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
      v67(v53, a1);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    return v51(v71, v3, v33);
  }
  v36(v10, 0, 1, v33);
  v37 = v70;
  v68 = *(char **)(v35 + 32);
  ((void (*)(char *, char *, uint64_t))v68)(v70, v10, v33);
  if (qword_2573CF990 != -1)
    swift_once();
  v38 = sub_244AE41AC();
  __swift_project_value_buffer(v38, (uint64_t)qword_2573D29B8);
  v26(v22, v3, a1);
  v39 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v40 = v69;
  v39(v69, v37, v33);
  v41 = sub_244AE4194();
  v42 = sub_244AE4344();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    *(_QWORD *)&v76[0] = v65;
    *(_DWORD *)v43 = 136315394;
    v44 = (uint64_t *)&v22[*(int *)(a1 + 28)];
    v45 = *v44;
    v46 = v44[1];
    swift_bridgeObjectRetain();
    v74[0] = sub_244A80950(v45, v46, (uint64_t *)v76);
    sub_244AE43B0();
    v33 = v73;
    swift_bridgeObjectRelease();
    v67(v22, a1);
    *(_WORD *)(v43 + 12) = 2080;
    v39(v66, v40, v33);
    v47 = sub_244AE423C();
    v74[0] = sub_244A80950(v47, v48, (uint64_t *)v76);
    sub_244AE43B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v33);
    _os_log_impl(&dword_244A6B000, v41, v42, "Using UserDefaults override. key=%s value=%s", (uint8_t *)v43, 0x16u);
    v49 = v65;
    swift_arrayDestroy();
    MEMORY[0x24951E31C](v49, -1, -1);
    v50 = v43;
    v37 = v70;
    MEMORY[0x24951E31C](v50, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v40, v33);
    v67(v22, a1);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v68)(v71, v37, v33);
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_244AE3290(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

uint64_t UserDefault.init(key:defaultValue:container:customerBuildEnabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v14;
  _QWORD *v15;
  uint64_t result;

  v14 = (int *)type metadata accessor for UserDefault(0, a6, a3, a4);
  v15 = (_QWORD *)(a7 + v14[7]);
  *v15 = a1;
  v15[1] = a2;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a7, a3, a6);
  *(_QWORD *)(a7 + v14[8]) = a4;
  *(_BYTE *)(a7 + v14[9]) = a5;
  return result;
}

uint64_t UserDefault.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t sub_244AE305C()
{
  uint64_t v0;

  v0 = sub_244AE41AC();
  __swift_allocate_value_buffer(v0, qword_2573D29B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2573D29B8);
  return sub_244AE41A0();
}

uint64_t UserDefault.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

void (*UserDefault.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_244AE3174;
}

void sub_244AE3174(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_244AE3290((uint64_t)v3, v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
  }
  else
  {
    sub_244AE3290((*a1)[5], v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

Swift::Void __swiftcall UserDefault.removeObject()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(v0 + 32));
  v3 = (id)sub_244AE420C();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);

}

uint64_t sub_244AE326C(void (*a1)(void))
{
  a1();
  return sub_244AE4584();
}

void sub_244AE3290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(v2 + *(int *)(a2 + 32));
  v4 = sub_244AE44D0();
  v5 = (id)sub_244AE420C();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);
  swift_unknownObjectRelease();

}

uint64_t type metadata accessor for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault);
}

uint64_t sub_244AE3314@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefault(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return UserDefault.wrappedValue.getter(v5, a4);
}

void sub_244AE334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefault(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  sub_244AE3290(a1, v5);
}

uint64_t sub_244AE3388()
{
  return 8;
}

_QWORD *sub_244AE3394(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_244AE33A0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_244AE33A8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244AE3434(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(void **)v13;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    swift_bridgeObjectRetain();
    v15 = v14;
  }
  return v4;
}

void sub_244AE351C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

}

uint64_t sub_244AE356C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v10;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  swift_bridgeObjectRetain();
  v12 = v11;
  return a1;
}

uint64_t sub_244AE35F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v10;
  v12 = *(void **)v9;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v13 = v11;

  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_244AE3698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_244AE370C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v9;
  *(_QWORD *)v9 = *(_QWORD *)v10;

  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_244AE37A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((v7 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_244AE3830 + 4 * byte_244AE93C0[v12]))();
  }
}

void sub_244AE38C4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_244AE39E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x244AE3A60);
}

void sub_244AE39F0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x244AE39F8);
  JUMPOUT(0x244AE3A60);
}

void sub_244AE3A3C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x244AE3A60);
}

void sub_244AE3A44()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x244AE3A60);
}

uint64_t sub_244AE3A4C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x244AE3A58);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x244AE3A60);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24951E238](a1, v6, a5);
}

uint64_t sub_244AE3AA4()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_244AE3AB0()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_244AE3ABC()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_244AE3AC8()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_244AE3AD4()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_244AE3AE0()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_244AE3AEC()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_244AE3AF8()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_244AE3B04()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_244AE3B10()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_244AE3B1C()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_244AE3B28()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_244AE3B34()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_244AE3B40()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_244AE3B4C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_244AE3B58()
{
  return MEMORY[0x24BE78920]();
}

uint64_t sub_244AE3B64()
{
  return MEMORY[0x24BE78948]();
}

uint64_t sub_244AE3B70()
{
  return MEMORY[0x24BE78958]();
}

uint64_t sub_244AE3B7C()
{
  return MEMORY[0x24BE78960]();
}

uint64_t sub_244AE3B88()
{
  return MEMORY[0x24BE78970]();
}

uint64_t sub_244AE3B94()
{
  return MEMORY[0x24BE78980]();
}

uint64_t sub_244AE3BA0()
{
  return MEMORY[0x24BE78990]();
}

uint64_t sub_244AE3BAC()
{
  return MEMORY[0x24BE78998]();
}

uint64_t sub_244AE3BB8()
{
  return MEMORY[0x24BE789A8]();
}

uint64_t sub_244AE3BC4()
{
  return MEMORY[0x24BE789B8]();
}

uint64_t sub_244AE3BD0()
{
  return MEMORY[0x24BE789C8]();
}

uint64_t sub_244AE3BDC()
{
  return MEMORY[0x24BE789D0]();
}

uint64_t sub_244AE3BE8()
{
  return MEMORY[0x24BE789E0]();
}

uint64_t sub_244AE3BF4()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t sub_244AE3C00()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_244AE3C0C()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_244AE3C18()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t sub_244AE3C24()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t sub_244AE3C30()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_244AE3C3C()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_244AE3C48()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t sub_244AE3C54()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_244AE3C60()
{
  return MEMORY[0x24BE5C048]();
}

uint64_t sub_244AE3C6C()
{
  return MEMORY[0x24BE5C060]();
}

uint64_t sub_244AE3C78()
{
  return MEMORY[0x24BE5C070]();
}

uint64_t sub_244AE3C84()
{
  return MEMORY[0x24BE5C090]();
}

uint64_t sub_244AE3C90()
{
  return MEMORY[0x24BE5C0A0]();
}

uint64_t sub_244AE3C9C()
{
  return MEMORY[0x24BE5C0B0]();
}

uint64_t sub_244AE3CA8()
{
  return MEMORY[0x24BE5C0C0]();
}

uint64_t sub_244AE3CB4()
{
  return MEMORY[0x24BE5C0D0]();
}

uint64_t sub_244AE3CC0()
{
  return MEMORY[0x24BE5C0E8]();
}

uint64_t sub_244AE3CCC()
{
  return MEMORY[0x24BE5C100]();
}

uint64_t sub_244AE3CD8()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t sub_244AE3CE4()
{
  return MEMORY[0x24BE5C120]();
}

uint64_t sub_244AE3CF0()
{
  return MEMORY[0x24BE5C128]();
}

uint64_t sub_244AE3CFC()
{
  return MEMORY[0x24BE5C138]();
}

uint64_t sub_244AE3D08()
{
  return MEMORY[0x24BE5C140]();
}

uint64_t sub_244AE3D14()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t sub_244AE3D20()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_244AE3D2C()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_244AE3D38()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t sub_244AE3D44()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t sub_244AE3D50()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_244AE3D5C()
{
  return MEMORY[0x24BE5C1E0]();
}

uint64_t sub_244AE3D68()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_244AE3D74()
{
  return MEMORY[0x24BE5C1F0]();
}

uint64_t sub_244AE3D80()
{
  return MEMORY[0x24BE5C240]();
}

uint64_t sub_244AE3D8C()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t sub_244AE3D98()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t sub_244AE3DA4()
{
  return MEMORY[0x24BE5C298]();
}

uint64_t sub_244AE3DB0()
{
  return MEMORY[0x24BE5C2A0]();
}

uint64_t sub_244AE3DBC()
{
  return MEMORY[0x24BE5C2C0]();
}

uint64_t sub_244AE3DC8()
{
  return MEMORY[0x24BE5C2D8]();
}

uint64_t sub_244AE3DD4()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_244AE3DE0()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t sub_244AE3DEC()
{
  return MEMORY[0x24BE5C2F8]();
}

uint64_t sub_244AE3DF8()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t sub_244AE3E04()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_244AE3E10()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_244AE3E1C()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_244AE3E28()
{
  return MEMORY[0x24BE5C348]();
}

uint64_t sub_244AE3E34()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_244AE3E40()
{
  return MEMORY[0x24BE59890]();
}

uint64_t sub_244AE3E4C()
{
  return MEMORY[0x24BE59A88]();
}

uint64_t sub_244AE3E58()
{
  return MEMORY[0x24BE59D48]();
}

uint64_t sub_244AE3E64()
{
  return MEMORY[0x24BE59D50]();
}

uint64_t sub_244AE3E70()
{
  return MEMORY[0x24BE59D60]();
}

uint64_t sub_244AE3E7C()
{
  return MEMORY[0x24BE59D78]();
}

uint64_t sub_244AE3E88()
{
  return MEMORY[0x24BE59D80]();
}

uint64_t sub_244AE3E94()
{
  return MEMORY[0x24BE59D88]();
}

uint64_t sub_244AE3EA0()
{
  return MEMORY[0x24BE59D90]();
}

uint64_t sub_244AE3EAC()
{
  return MEMORY[0x24BE59D98]();
}

uint64_t sub_244AE3EB8()
{
  return MEMORY[0x24BE59DA0]();
}

uint64_t sub_244AE3EC4()
{
  return MEMORY[0x24BE59DB8]();
}

uint64_t sub_244AE3ED0()
{
  return MEMORY[0x24BE5A308]();
}

uint64_t sub_244AE3EDC()
{
  return MEMORY[0x24BE5A350]();
}

uint64_t sub_244AE3EE8()
{
  return MEMORY[0x24BE5A380]();
}

uint64_t sub_244AE3EF4()
{
  return MEMORY[0x24BE5A4D0]();
}

uint64_t sub_244AE3F00()
{
  return MEMORY[0x24BE5A4E8]();
}

uint64_t sub_244AE3F0C()
{
  return MEMORY[0x24BE5A510]();
}

uint64_t sub_244AE3F18()
{
  return MEMORY[0x24BE5AD68]();
}

uint64_t sub_244AE3F24()
{
  return MEMORY[0x24BE5AD70]();
}

uint64_t sub_244AE3F30()
{
  return MEMORY[0x24BE5AD78]();
}

uint64_t sub_244AE3F3C()
{
  return MEMORY[0x24BE5AD80]();
}

uint64_t sub_244AE3F48()
{
  return MEMORY[0x24BE5AD88]();
}

uint64_t sub_244AE3F54()
{
  return MEMORY[0x24BE5AD90]();
}

uint64_t sub_244AE3F60()
{
  return MEMORY[0x24BE5AD98]();
}

uint64_t sub_244AE3F6C()
{
  return MEMORY[0x24BE5ADA0]();
}

uint64_t sub_244AE3F78()
{
  return MEMORY[0x24BE5ADA8]();
}

uint64_t sub_244AE3F84()
{
  return MEMORY[0x24BE5ADB0]();
}

uint64_t sub_244AE3F90()
{
  return MEMORY[0x24BE5ADB8]();
}

uint64_t sub_244AE3F9C()
{
  return MEMORY[0x24BE5ADC0]();
}

uint64_t sub_244AE3FA8()
{
  return MEMORY[0x24BE5ADC8]();
}

uint64_t sub_244AE3FB4()
{
  return MEMORY[0x24BE5ADD0]();
}

uint64_t sub_244AE3FC0()
{
  return MEMORY[0x24BE5ADD8]();
}

uint64_t sub_244AE3FCC()
{
  return MEMORY[0x24BE5ADE0]();
}

uint64_t sub_244AE3FD8()
{
  return MEMORY[0x24BE5ADE8]();
}

uint64_t sub_244AE3FE4()
{
  return MEMORY[0x24BE5ADF0]();
}

uint64_t sub_244AE3FF0()
{
  return MEMORY[0x24BE5AE00]();
}

uint64_t sub_244AE3FFC()
{
  return MEMORY[0x24BE5AE18]();
}

uint64_t sub_244AE4008()
{
  return MEMORY[0x24BE5AE28]();
}

uint64_t sub_244AE4014()
{
  return MEMORY[0x24BE5AE30]();
}

uint64_t sub_244AE4020()
{
  return MEMORY[0x24BE5AE38]();
}

uint64_t sub_244AE402C()
{
  return MEMORY[0x24BE5AE48]();
}

uint64_t sub_244AE4038()
{
  return MEMORY[0x24BE5AE58]();
}

uint64_t sub_244AE4044()
{
  return MEMORY[0x24BE5AE68]();
}

uint64_t sub_244AE4050()
{
  return MEMORY[0x24BE5AE78]();
}

uint64_t sub_244AE405C()
{
  return MEMORY[0x24BE5AE88]();
}

uint64_t sub_244AE4068()
{
  return MEMORY[0x24BE5AEA0]();
}

uint64_t sub_244AE4074()
{
  return MEMORY[0x24BE5AEB0]();
}

uint64_t sub_244AE4080()
{
  return MEMORY[0x24BE5AEC0]();
}

uint64_t sub_244AE408C()
{
  return MEMORY[0x24BE5AED0]();
}

uint64_t sub_244AE4098()
{
  return MEMORY[0x24BE5AED8]();
}

uint64_t sub_244AE40A4()
{
  return MEMORY[0x24BE5AEE8]();
}

uint64_t sub_244AE40B0()
{
  return MEMORY[0x24BE5AF00]();
}

uint64_t sub_244AE40BC()
{
  return MEMORY[0x24BE5AF08]();
}

uint64_t sub_244AE40C8()
{
  return MEMORY[0x24BE5AF10]();
}

uint64_t sub_244AE40D4()
{
  return MEMORY[0x24BE5AF20]();
}

uint64_t sub_244AE40E0()
{
  return MEMORY[0x24BE5B128]();
}

uint64_t sub_244AE40EC()
{
  return MEMORY[0x24BE5B1B8]();
}

uint64_t sub_244AE40F8()
{
  return MEMORY[0x24BE5B1C8]();
}

uint64_t sub_244AE4104()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_244AE4110()
{
  return MEMORY[0x24BEE7748]();
}

uint64_t sub_244AE411C()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_244AE4128()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_244AE4134()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_244AE4140()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_244AE414C()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_244AE4158()
{
  return MEMORY[0x24BEE7840]();
}

uint64_t sub_244AE4164()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_244AE4170()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_244AE417C()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_244AE4188()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_244AE4194()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_244AE41A0()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_244AE41AC()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_244AE41B8()
{
  return MEMORY[0x24BE3BBF0]();
}

uint64_t sub_244AE41C4()
{
  return MEMORY[0x24BE3BBF8]();
}

uint64_t sub_244AE41D0()
{
  return MEMORY[0x24BE3BC00]();
}

uint64_t sub_244AE41DC()
{
  return MEMORY[0x24BE3BC18]();
}

uint64_t sub_244AE41E8()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_244AE41F4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_244AE4200()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_244AE420C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_244AE4218()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_244AE4224()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_244AE4230()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_244AE423C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_244AE4248()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_244AE4254()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_244AE4260()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_244AE426C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_244AE4278()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_244AE4284()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_244AE4290()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_244AE429C()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_244AE42A8()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_244AE42B4()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_244AE42C0()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_244AE42CC()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_244AE42D8()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_244AE42E4()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_244AE42F0()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_244AE42FC()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_244AE4308()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_244AE4314()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_244AE4320()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_244AE432C()
{
  return MEMORY[0x24BEE14C8]();
}

uint64_t sub_244AE4338()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_244AE4344()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_244AE4350()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_244AE435C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_244AE4368()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_244AE4374()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_244AE4380()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_244AE438C()
{
  return MEMORY[0x24BEE7958]();
}

uint64_t sub_244AE4398()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_244AE43A4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_244AE43B0()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_244AE43BC()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_244AE43C8()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_244AE43D4()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_244AE43E0()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_244AE43EC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_244AE43F8()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_244AE4404()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_244AE4410()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_244AE441C()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_244AE4428()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_244AE4434()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_244AE4440()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_244AE444C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_244AE4458()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_244AE4464()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_244AE4470()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_244AE447C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_244AE4488()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_244AE4494()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_244AE44A0()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_244AE44AC()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_244AE44B8()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_244AE44C4()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_244AE44D0()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_244AE44DC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_244AE44E8()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_244AE44F4()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_244AE4500()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_244AE450C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_244AE4518()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_244AE4524()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_244AE4530()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_244AE453C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_244AE4548()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_244AE4554()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_244AE4560()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_244AE456C()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_244AE4578()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_244AE4584()
{
  return MEMORY[0x24BEE4A98]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

