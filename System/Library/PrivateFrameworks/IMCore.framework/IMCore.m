id sub_1A1FF78FC(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)v3;
  if (a2 && !v3)
  {
    *a2 = 1;
LABEL_6:
    v5 = (void *)MEMORY[0x1E0C9AA60];
    goto LABEL_7;
  }
  if (!v3)
    goto LABEL_6;
  v7[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_7:

  return v5;
}

uint64_t sub_1A1FF7A48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_cachedChatWithGUID:", *(_QWORD *)(a1 + 40));
}

void sub_1A1FF8878()
{
  id *v0;

  objc_destroyWeak(v0);
  JUMPOUT(0x1A1FF88D4);
}

void sub_1A1FF8888()
{
  JUMPOUT(0x1A1FF88D4);
}

void sub_1A1FF908C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  objc_msgSend(a2, "appBundle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bundleIdentifier");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  v4 = v5;
  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);
    v4 = v5;
  }

}

void sub_1A1FFA91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A1FFBE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1A1FFBFB0(int a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  char v33;
  void *v34;
  char v35;
  id v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  void *v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  unsigned __int8 v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  int v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  char v109;
  char v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  const char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  void *v143;
  void *v144;
  id v145;
  uint64_t v146;
  id v147;
  void *v148;
  id v149;
  uint64_t v150;
  id v151;
  char v153;
  unsigned __int8 v154;
  void *v155;
  void *v156;
  int v157;
  uint64_t v158;
  char v159;
  _QWORD v160[5];
  objc_super v161;
  __int128 v162;
  __int128 v163;

  v3 = v2;
  if (a2)
  {
    v6 = v2;
  }
  else
  {
    v7 = qword_1EE65C0A8;
    v8 = v3;
    if (v7 != -1)
      swift_once();
    v9 = sub_1A21996F8();
    sub_1A200A4C8(v9, (uint64_t)qword_1EE6617D0);
    v10 = sub_1A21996E0();
    v11 = sub_1A21998A8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1A1FF4000, v10, v11, "state dictionary is nil when creating CloudKitSyncState", v12, 2u);
      MEMORY[0x1A8583364](v12, -1, -1);
    }

  }
  v3[OBJC_IVAR___IMCloudKitSyncState_accountEnabled] = a1 & 1;
  v13 = sub_1A2199764();
  if (a2)
  {
    *(_QWORD *)&v162 = v13;
    *((_QWORD *)&v162 + 1) = v14;
    sub_1A21999D4();
    if (*(_QWORD *)(a2 + 16) && (v15 = sub_1A1FFD960((uint64_t)v160), (v16 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v15, (uint64_t)&v162);
    }
    else
    {
      v162 = 0u;
      v163 = 0u;
    }
    sub_1A1FFDA54((uint64_t)v160);
    sub_1A1FFD920(&qword_1ECF12140);
    v17 = swift_dynamicCast();
    v18 = v158;
    if (!v17)
      v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = 0;
  }
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_accountStatus] = v18;
  v19 = sub_1A2199764();
  if (a2)
  {
    *(_QWORD *)&v162 = v19;
    *((_QWORD *)&v162 + 1) = v20;
    sub_1A21999D4();
    if (*(_QWORD *)(a2 + 16) && (v21 = sub_1A1FFD960((uint64_t)v160), (v22 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v21, (uint64_t)&v162);
    }
    else
    {
      v162 = 0u;
      v163 = 0u;
    }
    sub_1A1FFDA54((uint64_t)v160);
    sub_1A1FFD920(&qword_1ECF12140);
    v23 = swift_dynamicCast() & v158;
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = 0;
  }
  v3[OBJC_IVAR___IMCloudKitSyncState_hasExited] = v23;
  v24 = sub_1A2199764();
  v157 = a1;
  if (a2)
  {
    *(_QWORD *)&v162 = v24;
    *((_QWORD *)&v162 + 1) = v25;
    sub_1A21999D4();
    if (*(_QWORD *)(a2 + 16) && (v26 = sub_1A1FFD960((uint64_t)v160), (v27 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v26, (uint64_t)&v162);
    }
    else
    {
      v162 = 0u;
      v163 = 0u;
    }
    sub_1A1FFDA54((uint64_t)v160);
    sub_1A1FFD920(&qword_1ECF12140);
    sub_1A1FFD920(&qword_1EE65C0C8);
    if (swift_dynamicCast())
      v28 = (void *)v158;
    else
      v28 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v28 = 0;
  }
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState__exitDate] = v28;
  v29 = sub_1A2199764();
  if (!a2)
  {
    v43 = v28;
    swift_bridgeObjectRelease();
    v34 = 0;
    *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastSyncDate] = 0;
    v162 = 0u;
    v163 = 0u;
LABEL_51:
    sub_1A200F818((uint64_t)&v162, &qword_1ECF12140);
    goto LABEL_52;
  }
  *(_QWORD *)&v162 = v29;
  *((_QWORD *)&v162 + 1) = v30;
  v31 = v28;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v32 = sub_1A1FFD960((uint64_t)v160), (v33 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v32, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  sub_1A1FFD920(&qword_1EE65C0C8);
  if (swift_dynamicCast())
    v34 = (void *)v158;
  else
    v34 = 0;
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastSyncDate] = v34;
  v158 = sub_1A2199764();
  v159 = v35;
  v36 = v34;
  swift_bridgeObjectRetain();
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v37 = sub_1A1FFD960((uint64_t)v160), (v38 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v37, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A1FFDA54((uint64_t)v160);
  if (!*((_QWORD *)&v163 + 1))
    goto LABEL_51;
  sub_1A1FFD920((uint64_t *)&unk_1EE65C2F0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v39 = v160[0];
    *(_QWORD *)&v162 = sub_1A2199764();
    *((_QWORD *)&v162 + 1) = v40;
    swift_bridgeObjectRetain();
    sub_1A21999D4();
    v155 = v34;
    if (*(_QWORD *)(v39 + 16) && (v41 = sub_1A1FFD960((uint64_t)v160), (v42 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(v39 + 56) + 32 * v41, (uint64_t)&v162);
    }
    else
    {
      v162 = 0u;
      v163 = 0u;
    }
    sub_1A1FFDA54((uint64_t)v160);
    sub_1A1FFD920(&qword_1ECF12140);
    sub_1A1FFD920(&qword_1EE65C0C0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if ((v159 & 1) == 0)
      {
        v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), sel_initWithTimeIntervalSince1970_, *(double *)&v158);
LABEL_60:
        *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullSyncDate] = v47;
        *(_QWORD *)&v162 = sub_1A2199764();
        *((_QWORD *)&v162 + 1) = v48;
        swift_bridgeObjectRetain();
        sub_1A21999D4();
        if (*(_QWORD *)(v39 + 16) && (v49 = sub_1A1FFD960((uint64_t)v160), (v50 & 1) != 0))
        {
          sub_1A1FFDAC4(*(_QWORD *)(v39 + 56) + 32 * v49, (uint64_t)&v162);
        }
        else
        {
          v162 = 0u;
          v163 = 0u;
        }
        sub_1A1FFDA54((uint64_t)v160);
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          if ((v159 & 1) == 0)
          {
            v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), sel_initWithTimeIntervalSince1970_, *(double *)&v158);
LABEL_69:
            *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullPartialSyncDate] = v51;
            *(_QWORD *)&v162 = sub_1A2199764();
            *((_QWORD *)&v162 + 1) = v52;
            swift_bridgeObjectRetain();
            sub_1A21999D4();
            if (*(_QWORD *)(v39 + 16) && (v53 = sub_1A1FFD960((uint64_t)v160), (v54 & 1) != 0))
            {
              sub_1A1FFDAC4(*(_QWORD *)(v39 + 56) + 32 * v53, (uint64_t)&v162);
            }
            else
            {
              v162 = 0u;
              v163 = 0u;
            }
            sub_1A1FFDA54((uint64_t)v160);
            sub_1A1FFD920(&qword_1EE65C0D0);
            if (swift_dynamicCast())
            {
              v55 = (void *)v158;
            }
            else
            {
              v55 = 0;
              v158 = 1;
            }
            swift_bridgeObjectRelease();
            *(_QWORD *)&v162 = sub_1A2199764();
            *((_QWORD *)&v162 + 1) = v56;
            sub_1A21999D4();
            if (*(_QWORD *)(v39 + 16) && (v57 = sub_1A1FFD960((uint64_t)v160), (v58 & 1) != 0))
            {
              sub_1A1FFDAC4(*(_QWORD *)(v39 + 56) + 32 * v57, (uint64_t)&v162);
            }
            else
            {
              v162 = 0u;
              v163 = 0u;
            }
            sub_1A1FFDA54((uint64_t)v160);
            if (swift_dynamicCast())
            {
              v59 = (void *)v158;
              swift_bridgeObjectRelease();
              if (v55)
              {

                if (!v158)
                {
                  v60 = 1;
LABEL_88:
                  v3[OBJC_IVAR___IMCloudKitSyncState__isBetweenInitialAndFullSync] = v60;
                  v44 = sub_1A2199764();
                  v34 = v155;
                  goto LABEL_89;
                }
              }
            }
            else
            {
              v60 = 1;
              v158 = 1;
              swift_bridgeObjectRelease();
              if (v55)
              {
LABEL_87:

                goto LABEL_88;
              }
              v59 = 0;
            }
            v60 = 0;
            v55 = v59;
            goto LABEL_87;
          }
        }
        else
        {
          v158 = 0;
          swift_bridgeObjectRelease();
        }
        v51 = 0;
        goto LABEL_69;
      }
    }
    else
    {
      v158 = 0;
      v159 = 0;
      swift_bridgeObjectRelease();
    }
    v47 = 0;
    goto LABEL_60;
  }
LABEL_52:
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullSyncDate] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullPartialSyncDate] = 0;
  v3[OBJC_IVAR___IMCloudKitSyncState__isBetweenInitialAndFullSync] = 0;
  v44 = sub_1A2199764();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    v46 = 0;
    goto LABEL_94;
  }
LABEL_89:
  *(_QWORD *)&v162 = v44;
  *((_QWORD *)&v162 + 1) = v45;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v61 = sub_1A1FFD960((uint64_t)v160), (v62 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v61, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v46 = swift_dynamicCast() & v158;
LABEL_94:
  v3[OBJC_IVAR___IMCloudKitSyncState_isDisablingDevices] = v46;
  v63 = sub_1A2199764();
  if (!a2)
  {
    swift_bridgeObjectRelease();
LABEL_103:
    v67 = 0;
    goto LABEL_104;
  }
  *(_QWORD *)&v162 = v63;
  *((_QWORD *)&v162 + 1) = v64;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v65 = sub_1A1FFD960((uint64_t)v160), (v66 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v65, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_103;
  v67 = v158;
  if (v158 < 0)
  {
LABEL_207:
    sub_1A2199A64();
    __break(1u);
    goto LABEL_208;
  }
LABEL_104:
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerSyncState] = v67;
  v68 = sub_1A2199764();
  if (a2)
  {
    *(_QWORD *)&v162 = v68;
    *((_QWORD *)&v162 + 1) = v69;
    sub_1A21999D4();
    if (*(_QWORD *)(a2 + 16) && (v70 = sub_1A1FFD960((uint64_t)v160), (v71 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v70, (uint64_t)&v162);
    }
    else
    {
      v162 = 0u;
      v163 = 0u;
    }
    sub_1A1FFDA54((uint64_t)v160);
    sub_1A1FFD920(&qword_1ECF12140);
    v72 = swift_dynamicCast();
    v73 = v158;
    if (!v72)
      v73 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v73 = 0;
  }
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerRecordType] = v73;
  v74 = sub_1A2199764();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerSyncType] = 0;
    if ((v46 & 1) == 0)
    {
      sub_1A2199764();
      swift_bridgeObjectRelease();
      v83 = 0;
      goto LABEL_131;
    }
LABEL_125:
    v83 = 2;
    goto LABEL_131;
  }
  *(_QWORD *)&v162 = v74;
  *((_QWORD *)&v162 + 1) = v75;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v76 = sub_1A1FFD960((uint64_t)v160), (v77 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v76, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v78 = swift_dynamicCast();
  v79 = v158;
  if (!v78)
    v79 = 0;
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerSyncType] = v79;
  if ((v46 & 1) != 0)
    goto LABEL_125;
  *(_QWORD *)&v162 = sub_1A2199764();
  *((_QWORD *)&v162 + 1) = v80;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v81 = sub_1A1FFD960((uint64_t)v160), (v82 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v81, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v84 = swift_dynamicCast();
  v83 = v158;
  if (!v84)
    v83 = 0;
LABEL_131:
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_changingEnabledState] = v83;
  v85 = sub_1A2199764();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    sub_1A2199764();
    swift_bridgeObjectRelease();
    sub_1A2199764();
    swift_bridgeObjectRelease();
    sub_1A2199764();
    swift_bridgeObjectRelease();
    sub_1A2199764();
    swift_bridgeObjectRelease();
    sub_1A2199764();
    swift_bridgeObjectRelease();
    LOBYTE(v103) = 0;
    v108 = 0;
    v110 = v157;
    goto LABEL_162;
  }
  *(_QWORD *)&v162 = v85;
  *((_QWORD *)&v162 + 1) = v86;
  sub_1A21999D4();
  v156 = v34;
  if (*(_QWORD *)(a2 + 16) && (v87 = sub_1A1FFD960((uint64_t)v160), (v88 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v87, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v89 = swift_dynamicCast();
  *(_QWORD *)&v162 = sub_1A2199764();
  *((_QWORD *)&v162 + 1) = v90;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v91 = sub_1A1FFD960((uint64_t)v160), (v92 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v91, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v93 = swift_dynamicCast();
  *(_QWORD *)&v162 = sub_1A2199764();
  *((_QWORD *)&v162 + 1) = v94;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v95 = sub_1A1FFD960((uint64_t)v160), (v96 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v95, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v154 = swift_dynamicCast();
  *(_QWORD *)&v162 = sub_1A2199764();
  *((_QWORD *)&v162 + 1) = v97;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v98 = sub_1A1FFD960((uint64_t)v160), (v99 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v98, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v153 = swift_dynamicCast();
  *(_QWORD *)&v162 = sub_1A2199764();
  *((_QWORD *)&v162 + 1) = v100;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v101 = sub_1A1FFD960((uint64_t)v160), (v102 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v101, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  v103 = (v89 & v158);
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v104 = swift_dynamicCast();
  *(_QWORD *)&v162 = sub_1A2199764();
  *((_QWORD *)&v162 + 1) = v105;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v106 = sub_1A1FFD960((uint64_t)v160), (v107 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v106, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  v108 = v93 & v158;
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  v109 = swift_dynamicCast();
  v110 = v157;
  if ((v157 & v103 & 1) == 0)
  {
    v34 = v156;
LABEL_162:
    v3[OBJC_IVAR___IMCloudKitSyncState_syncState] = 1;
    if ((v110 & 1) != 0)
      goto LABEL_163;
LABEL_183:
    if (qword_1EE65C0A8 != -1)
      swift_once();
    v123 = sub_1A21996F8();
    sub_1A200A4C8(v123, (uint64_t)qword_1EE6617D0);
    v118 = sub_1A21996E0();
    v119 = sub_1A21998A8();
    if (!os_log_type_enabled(v118, v119))
      goto LABEL_188;
    v120 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v120 = 0;
    v121 = "Account not enabled or not eligible for truth zone, setting sync status to stopped";
LABEL_187:
    _os_log_impl(&dword_1A1FF4000, v118, v119, v121, v120, 2u);
    MEMORY[0x1A8583364](v120, -1, -1);
LABEL_188:

    goto LABEL_189;
  }
  if ((v93 & v158) == 0)
  {
    v3[OBJC_IVAR___IMCloudKitSyncState_syncState] = 2;
    v34 = v156;
    if ((v157 & 1) != 0)
      goto LABEL_170;
    goto LABEL_183;
  }
  if ((v154 & v158) != 0)
  {
    v111 = OBJC_IVAR___IMCloudKitSyncState_syncState;
    v112 = 4;
  }
  else
  {
    v111 = OBJC_IVAR___IMCloudKitSyncState_syncState;
    if (((v153 & v158) | (v104 & v158) | (v109 & v158)) == 1)
      v112 = 5;
    else
      v112 = 3;
  }
  v3[v111] = v112;
  v108 = 1;
  LOBYTE(v103) = 1;
  v34 = v156;
  if ((v157 & 1) == 0)
    goto LABEL_183;
LABEL_163:
  if ((v103 & 1) == 0)
    goto LABEL_183;
  if ((v108 & 1) == 0)
  {
LABEL_170:
    if (qword_1EE65C0A8 != -1)
      swift_once();
    v117 = sub_1A21996F8();
    sub_1A200A4C8(v117, (uint64_t)qword_1EE6617D0);
    v118 = sub_1A21996E0();
    v119 = sub_1A21998A8();
    if (!os_log_type_enabled(v118, v119))
      goto LABEL_188;
    v120 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v120 = 0;
    v121 = "Syncing disabled, setting sync status to stopped";
    goto LABEL_187;
  }
  v113 = sub_1A2199764();
  if (!a2)
  {
    swift_bridgeObjectRelease();
LABEL_189:
    v122 = 0;
    goto LABEL_190;
  }
  *(_QWORD *)&v162 = v113;
  *((_QWORD *)&v162 + 1) = v114;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v115 = sub_1A1FFD960((uint64_t)v160), (v116 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v115, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_189;
  v122 = v158;
  if (v158 < 0)
    goto LABEL_207;
LABEL_190:
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncStatus] = v122;
  v124 = sub_1A2199764();
  if (!a2)
  {
    swift_bridgeObjectRelease();
LABEL_199:
    v128 = 0;
    goto LABEL_200;
  }
  *(_QWORD *)&v162 = v124;
  *((_QWORD *)&v162 + 1) = v125;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v126 = sub_1A1FFD960((uint64_t)v160), (v127 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v126, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_199;
  v128 = v158;
  if (v158 < 0)
    goto LABEL_207;
LABEL_200:
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncJobState] = v128;
  v129 = sub_1A2199764();
  if (a2)
  {
    *(_QWORD *)&v162 = v129;
    *((_QWORD *)&v162 + 1) = v130;
    sub_1A21999D4();
    if (*(_QWORD *)(a2 + 16) && (v131 = sub_1A1FFD960((uint64_t)v160), (v132 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v131, (uint64_t)&v162);
    }
    else
    {
      v162 = 0u;
      v163 = 0u;
    }
    sub_1A1FFDA54((uint64_t)v160);
    sub_1A1FFD920(&qword_1ECF12140);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_209;
    v133 = v158;
    if ((v158 & 0x8000000000000000) == 0)
      goto LABEL_210;
    goto LABEL_207;
  }
LABEL_208:
  swift_bridgeObjectRelease();
LABEL_209:
  v133 = 0;
LABEL_210:
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncType] = v133;
  v134 = sub_1A2199764();
  if (a2)
  {
    *(_QWORD *)&v162 = v134;
    *((_QWORD *)&v162 + 1) = v135;
    sub_1A21999D4();
    if (*(_QWORD *)(a2 + 16) && (v136 = sub_1A1FFD960((uint64_t)v160), (v137 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v136, (uint64_t)&v162);
    }
    else
    {
      v162 = 0u;
      v163 = 0u;
    }
    sub_1A1FFDA54((uint64_t)v160);
    sub_1A1FFD920(&qword_1ECF12140);
    v138 = swift_dynamicCast() & v158;
  }
  else
  {
    swift_bridgeObjectRelease();
    v138 = 0;
  }
  v3[OBJC_IVAR___IMCloudKitSyncState_hasAvailableRecordsToDownload] = v138;
  v139 = sub_1A2199764();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_errors] = 0;
    v162 = 0u;
    v163 = 0u;
    sub_1A200F818((uint64_t)&v162, &qword_1ECF12140);
    *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_statistics] = 0;
    v162 = 0u;
    v163 = 0u;
LABEL_235:
    sub_1A200F818((uint64_t)&v162, &qword_1ECF12140);
    goto LABEL_236;
  }
  *(_QWORD *)&v162 = v139;
  *((_QWORD *)&v162 + 1) = v140;
  sub_1A21999D4();
  if (*(_QWORD *)(a2 + 16) && (v141 = sub_1A1FFD960((uint64_t)v160), (v142 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v141, (uint64_t)&v162);
  }
  else
  {
    v162 = 0u;
    v163 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v160);
  sub_1A1FFD920(&qword_1ECF12140);
  sub_1A1FFD920(&qword_1EE65C0B8);
  if ((swift_dynamicCast() & 1) != 0 && v158)
  {
    v143 = (void *)objc_opt_self();
    sub_1A1FFD920(&qword_1EE65C0B0);
    v144 = (void *)sub_1A21997C4();
    sub_1A200E824(v158);
    v145 = objc_msgSend(v143, sel_errorArrayFromSerializedErrorArray_im_, v144);

    sub_1A1FFD920((uint64_t *)&unk_1EE65C0D8);
    v146 = sub_1A21997D0();

    *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_errors] = v146;
  }
  else
  {
    *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_errors] = 0;
  }
  sub_1A2199764();
  swift_bridgeObjectRetain();
  sub_1A21999D4();
  sub_1A200E834((uint64_t)v160, a2, &v162);
  swift_bridgeObjectRelease();
  sub_1A1FFDA54((uint64_t)v160);
  if (*((_QWORD *)&v163 + 1))
  {
    sub_1A1FFD920((uint64_t *)&unk_1EE65C2F0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v147 = objc_allocWithZone((Class)IMCloudKitSyncStatistics);
      v148 = (void *)sub_1A2199740();
      swift_bridgeObjectRelease();
      v149 = objc_msgSend(v147, sel_initWithStatisticsDictionary_, v148);

      *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_statistics] = v149;
      goto LABEL_232;
    }
  }
  else
  {
    sub_1A200F818((uint64_t)&v162, &qword_1ECF12140);
  }
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_statistics] = 0;
LABEL_232:
  sub_1A2199764();
  sub_1A21999D4();
  sub_1A200E834((uint64_t)v160, a2, &v162);
  swift_bridgeObjectRelease();
  sub_1A1FFDA54((uint64_t)v160);
  if (!*((_QWORD *)&v163 + 1))
    goto LABEL_235;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_236:
    v150 = 0;
    goto LABEL_237;
  }
  v150 = v160[0];
LABEL_237:
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncState_lastDownloadProgress] = v150;

  v161.receiver = v3;
  v161.super_class = (Class)IMCloudKitSyncState;
  v151 = objc_msgSendSuper2(&v161, sel_init);

  return v151;
}

uint64_t sub_1A1FFD920(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A85832BC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1A1FFD960(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A21999BC();
  return sub_1A1FFD990(a1, v2);
}

unint64_t sub_1A1FFD990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1A1FFDA88(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1A8581C24](v9, a1);
      sub_1A1FFDA54((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A1FFDA54(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1A1FFDA88(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1A1FFDAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_1A1FFE338(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  int v4;
  void *v5;

  v2 = a2;
  objc_msgSend(v2, "lastPathComponent");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hasSuffix:", CFSTR(".bundle"));

  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithURL:", v2);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

uint64_t sub_1A1FFE42C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

id sub_1A1FFE434(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  objc_msgSend(a1, "context");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "message");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v4)
    {
      objc_msgSend(v3, "senderHandle");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "otherHandle");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      +[IMMessage messageFromIMMessageItem:sender:subject:](IMMessage, "messageFromIMMessageItem:sender:subject:", a1, v5, v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setMessage:", v7);

    }
    objc_msgSend(v3, "message");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v8, "setSortID:", objc_msgSend(a1, "sortID"));

  return v8;
}

void sub_1A1FFE530(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "map");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 40));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_1A1FFE590(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "ID");
}

uint64_t sub_1A1FFE598(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "displayNameForChat:", *(_QWORD *)(a1 + 32));
}

void sub_1A1FFE760(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 64);
  if (!v2)
  {
    objc_msgSend(MEMORY[0x1E0D397A8], "sharedInstance");
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 64);
    *(_QWORD *)(v4 + 64) = v3;

    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 64);
  }
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v2);
}

void sub_1A1FFE7D4(void *a1, void *a2, int a3)
{
  NSObject *v4;
  __CFString *v5;
  NSObject *v6;
  int v7;
  const __CFString *v8;
  const __CFString *v9;
  void *v10;
  char v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  __CFString *v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  BOOL v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  int v30;
  void *v31;
  NSObject *v32;
  id v33;
  __CFDictionary *v34;
  void *v35;
  char v36;
  void *v37;
  void *v38;
  _BOOL4 v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t j;
  void *v44;
  char v45;
  NSObject *v46;
  NSObject *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  int v52;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  id obj;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *context;
  void *v64;
  void *v65;
  void *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  id v72;
  char v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint8_t buf[4];
  const __CFString *v79;
  __int16 v80;
  const __CFString *v81;
  _BYTE v82[128];
  void *v83;
  _BYTE v84[128];
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v54 = a2;
  v66 = a1;
  if (a1)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v54, "count"));
        v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v79 = v5;
        _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Total number of IMChats we expect to create %@", buf, 0xCu);

      }
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        v7 = objc_msgSend(v66, "isFirstLoad");
        v8 = CFSTR("NO");
        if (v7)
          v9 = CFSTR("YES");
        else
          v9 = CFSTR("NO");
        if (a3)
          v8 = CFSTR("YES");
        *(_DWORD *)buf = 138412546;
        v79 = v9;
        v80 = 2112;
        v81 = v8;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "First Load: %@, Full Reload: %@", buf, 0x16u);
      }

    }
    if (a3)
      objc_msgSend(v66, "_resetChatRegistry");
    v52 = objc_msgSend(v66, "isFirstLoad");
    v57 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    objc_msgSend(v66, "contactStore");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isBatchFetchingForLaunchCompleted");

    if ((v11 & 1) != 0)
    {
      v56 = 0;
    }
    else if ((unint64_t)objc_msgSend(v54, "count") > 0x18)
    {
      v56 = 25;
    }
    else
    {
      v56 = objc_msgSend(v54, "count");
    }
    v55 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v76 = 0u;
    v77 = 0u;
    v74 = 0u;
    v75 = 0u;
    obj = v54;
    v61 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v74, v84, 16);
    if (v61)
    {
      v60 = *(_QWORD *)v75;
      do
      {
        for (i = 0; i != v61; ++i)
        {
          if (*(_QWORD *)v75 != v60)
            objc_enumerationMutation(obj);
          v13 = *(void **)(*((_QWORD *)&v74 + 1) + 8 * i);
          context = (void *)MEMORY[0x1A8582D94]();
          objc_msgSend(v13, "first");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "second");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v73 = 0;
          if (objc_msgSend(v14, "count"))
          {
            objc_msgSend(v14, "firstObject");
            v16 = (__CFString *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v66, "_lastMessageItemForChatDictionary:", v16);
            v64 = (void *)objc_claimAutoreleasedReturnValue();
            if (v73)
            {
              v62 = 0;
              goto LABEL_30;
            }
            if (v64)
            {
              v83 = v64;
              objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v83, 1);
              v58 = (void *)objc_claimAutoreleasedReturnValue();
              v18 = v58;
            }
            else
            {
              v18 = 0;
            }
            v72 = 0;
            sub_1A2000CE4(v66, v16, v18, 1, &v73, &v72);
            v65 = (void *)objc_claimAutoreleasedReturnValue();
            v62 = v72;
            if (v64)

            if (v65)
            {
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v65, "isFiltered"));
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v55, "objectForKeyedSubscript:", v19);
              v20 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v65, "lastFinishedMessageDate");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              v22 = objc_msgSend(v21, "compare:", v20);
              -[__CFString objectForKey:](v16, "objectForKey:", CFSTR("unreadCount"));
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              v24 = objc_msgSend(v23, "unsignedIntegerValue");

              v25 = v22 == -1 || v20 == 0;
              if (v25 && !v24)
              {
                objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v65, "isFiltered"));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v55, "setObject:forKeyedSubscript:", v21, v26);

              }
              v17 = 0;
            }
            else
            {
LABEL_30:
              v65 = 0;
              v17 = 1;
            }
            v71 = 0;
            objc_msgSend(v64, "service");
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            +[IMService iMessageService](IMServiceImpl, "iMessageService");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v28, "internalName");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            v30 = objc_msgSend(v27, "isEqualToIgnoringCase:", v29);

            if (v30)
            {
              +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "_setChatHasCommunicatedOveriMessage:", v65);

              v71 = 1;
            }
            if ((v17 & 1) != 0)
            {
              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v32 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)buf = 138412290;
                  v79 = v16;
                  _os_log_impl(&dword_1A1FF4000, v32, OS_LOG_TYPE_INFO, "*********** Error creating chat with %@", buf, 0xCu);
                }

              }
            }
            else
            {
              objc_msgSend(v57, "addObject:", v65);
              objc_msgSend(v65, "setPersonCentricID:", v15);
              v33 = v65;
              objc_msgSend(v66, "chatPersonIDToChatMap");
              v34 = (__CFDictionary *)objc_claimAutoreleasedReturnValue();
              CFDictionarySetValue(v34, v15, v33);

              objc_msgSend(v33, "_setJoinState:", objc_msgSend(v66, "_winningJoinStateForExistingChat:incomingDictionary:", v33, v16));
              objc_msgSend(v66, "_registerChatDictionary:forChat:isIncoming:newGUID:shouldPostNotification:", v16, v33, 0, v62, 0);
              objc_msgSend(v66, "_updateInfo:forGUID:updatingUnreadCount:shouldPostNotifications:", v16, v62, 1, 0);
              objc_msgSend(v66, "updateChatDictionaryArray:createdChat:joinstate:setHasCommunicatedOveriMessage:", v14, v33, objc_msgSend(v33, "joinState"), &v71);
            }
            objc_msgSend(v66, "contactStore");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = objc_msgSend(v35, "isBatchFetchingForLaunchCompleted");

            if ((v36 & 1) == 0)
            {
              +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v37, "cachedChats");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              v39 = objc_msgSend(v38, "count") == v56;

              if (v39)
                objc_msgSend(v66, "_fetchInitialBatchOfContactsOnLaunch");
            }

          }
          objc_autoreleasePoolPop(context);
        }
        v61 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v74, v84, 16);
      }
      while (v61);
    }

    objc_msgSend(v66, "setFilterCategoryToEarliestInitiallyFetchedLastMessageDate:", v55);
    objc_msgSend(v66, "_resetChatReconstructionGroupMaps");
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v40 = v57;
    v41 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v67, v82, 16);
    if (v41)
    {
      v42 = *(_QWORD *)v68;
      do
      {
        for (j = 0; j != v41; ++j)
        {
          if (*(_QWORD *)v68 != v42)
            objc_enumerationMutation(v40);
          objc_msgSend(v66, "_updateUnreadCountForChat:", *(_QWORD *)(*((_QWORD *)&v67 + 1) + 8 * j));
        }
        v41 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v67, v82, 16);
      }
      while (v41);
    }

    objc_msgSend(v66, "setLoading:", 0);
    objc_msgSend(v66, "setFirstLoad:", 0);
    objc_msgSend(v66, "contactStore");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = objc_msgSend(v44, "isBatchFetchingForLaunchCompleted");

    if ((v45 & 1) == 0)
      objc_msgSend(v66, "_batchFetchRemainingContactsOnLaunch");
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v46, OS_LOG_TYPE_INFO, "Done restoring chats", buf, 2u);
      }

    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v47 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v47, OS_LOG_TYPE_INFO, "** Posting did load notification", buf, 2u);
      }

    }
    if ((v52 & a3 & 1) != 0)
    {
      v48 = 0;
    }
    else
    {
      v49 = (void *)MEMORY[0x1E0C99E08];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", 1);
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v49, "dictionaryWithObjectsAndKeys:", v50, CFSTR("__kIMChatRegistryDidLoadIsRefreshKey"), 0);
      v48 = (void *)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v51, "__mainThreadPostNotificationName:object:userInfo:", CFSTR("__kIMChatRegistryDidLoadNotification"), v66, v48);

  }
}

void sub_1A1FFF0F8(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A1FFE944);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A1FFF150(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A1FFE8A8);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A1FFF814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1A200077C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2000740);
  }
  _Unwind_Resume(a1);
}

id sub_1A2000CE4(void *a1, void *a2, void *a3, int a4, _BYTE *a5, _QWORD *a6)
{
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  uint8_t buf[4];
  uint64_t v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  void *v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v10 = a2;
  v40 = a3;
  if (a1)
  {
    objc_msgSend(a1, "_participantsForChatDictionary:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)objc_msgSend(v11, "count") < 2)
    {
      v12 = 0;
    }
    else
    {
      objc_msgSend(a1, "_sortedParticipantIDHashForParticipants:", v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(a1, "_cachedChatForChatDictionary:participants:participantHash:", v10, v11, v12);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("isFiltered"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("mergedPinningIdentifiers"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("hasHadSuccessfulQuery"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      if (v14)
        objc_msgSend(v13, "setIsFiltered:", objc_msgSend(v14, "integerValue"));
      if (objc_msgSend(v15, "count"))
      {
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setMergedPinningIdentifiers:", v17);

      }
      if (v16)
        objc_msgSend(v13, "setHasHadSuccessfulQuery:", objc_msgSend(v16, "BOOLValue"));
      objc_msgSend(v13, "_setJoinState:", objc_msgSend(a1, "_winningJoinStateForExistingChat:incomingDictionary:", v13, v10));
      if (a5)
        *a5 = 0;

    }
    else if (a4)
    {
      +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("accountID"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "accountForUniqueID:", v19);
      v39 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("style"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      LOBYTE(v18) = objc_msgSend(v20, "intValue");

      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("groupID"));
      v21 = (id)objc_claimAutoreleasedReturnValue();
      v13 = -[IMChat _initWithDictionaryRepresentation:items:participantsHint:accountHint:]([IMChat alloc], "_initWithDictionaryRepresentation:items:participantsHint:accountHint:", v10, v40, v11, v39);
      if (v18 == 43)
      {
        if (v21 || (v21 = v12, objc_msgSend(v13, "setGroupID:", v21), v21))
        {
          objc_msgSend(a1, "groupIDToChatMap");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "setObject:forKeyedSubscript:", v13, v21);

        }
        objc_msgSend(a1, "_addChat:participantSet:", v13, v12);
        objc_msgSend(v13, "personCentricID");
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        if (v23)
        {
          objc_msgSend(a1, "chatPersonIDToChatMap");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "personCentricID");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "objectForKeyedSubscript:", v25);
          v26 = (void *)objc_claimAutoreleasedReturnValue();

          if (v26 && IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v27 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(v13, "personCentricID");
              v28 = objc_claimAutoreleasedReturnValue();
              objc_msgSend(v13, "guid");
              v36 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(a1, "chatPersonIDToChatMap");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v13, "personCentricID");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v38, "objectForKeyedSubscript:", v37);
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v29, "guid");
              *(_DWORD *)buf = 138412802;
              v35 = (void *)v28;
              v43 = v28;
              v44 = 2112;
              v45 = v36;
              v46 = 2112;
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              v47 = v30;
              _os_log_impl(&dword_1A1FF4000, v27, OS_LOG_TYPE_INFO, "Person centric (%@) collision for chats %@ and %@", buf, 0x20u);

            }
          }
          objc_msgSend(a1, "chatPersonIDToChatMap");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "personCentricID");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v31, "setObject:forKeyedSubscript:", v13, v32);

        }
        if (IMAdditionalChatRegistryLoggingEnabled() && IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v33 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v43 = (uint64_t)v12;
            _os_log_impl(&dword_1A1FF4000, v33, OS_LOG_TYPE_INFO, "Did not find an existing chat so creating a new one with participatIDHash %@", buf, 0xCu);
          }

        }
      }
      if (a5)
        *a5 = 1;

    }
    else
    {
      v13 = 0;
      if (a5)
        *a5 = 0;
    }
    if (a6)
    {
      objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("guid"));
      *a6 = (id)objc_claimAutoreleasedReturnValue();
    }

  }
  else
  {
    v13 = 0;
  }

  return v13;
}

void sub_1A2002404(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20022BCLL);
  }
  _Unwind_Resume(a1);
}

id sub_1A2002E44(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v20;
  NSObject *v21;
  void *v22;
  char v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  id v29;
  __int16 v30;
  void *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a4;
  objc_msgSend(a3, "_stripFZIDPrefix");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v9 || (objc_msgSend(v7, "accountForUniqueID:", v9), (v11 = (id)objc_claimAutoreleasedReturnValue()) == 0))
  {
    v23 = 0;
    sub_1A2008180(v7, v8, v10, &v23);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if (v23)
    {
      v11 = v12;
LABEL_14:

      goto LABEL_15;
    }
    sub_1A2007D7C(v7, v8, v10, &v23);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v14;
    if (v23)
    {
      v11 = v14;
LABEL_13:

      goto LABEL_14;
    }
    sub_1A2008730(v7, v8, v10, &v23);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v16;
    if (!v23)
    {
      if (v13)
      {
        v18 = v13;
        goto LABEL_11;
      }
      if (!v16)
      {
        objc_msgSend(v7, "accountsForService:", v8);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v20, "count"))
        {
          objc_msgSend(v20, "__imFirstObject");
          v11 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(v7, "accounts");
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138413058;
              v25 = v8;
              v26 = 2112;
              v27 = v10;
              v28 = 2112;
              v29 = v9;
              v30 = 2112;
              v31 = v22;
              _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Couldn't find any account for service: %@, login: %@, guid: %@, accounts: %@", buf, 0x2Au);

            }
          }
          v11 = 0;
        }

        goto LABEL_12;
      }
    }
    v18 = v16;
LABEL_11:
    v11 = v18;
LABEL_12:

    goto LABEL_13;
  }
LABEL_15:

  return v11;
}

void sub_1A2003114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A2003760(_Unwind_Exception *exc_buf, int a2)
{
  void *v2;

  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A2003720);
  }
  objc_sync_exit(v2);
  _Unwind_Resume(exc_buf);
}

id sub_1A2003934()
{
  if (qword_1ECF12480 != -1)
    dispatch_once(&qword_1ECF12480, &unk_1E471DE18);
  return (id)qword_1ECF12488;
}

void sub_1A20049FC(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20048E8);
  }
  _Unwind_Resume(a1);
}

void *_CreateIMMessageFromIMMessageItemDictionary(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;

  v5 = a1;
  v6 = a2;
  if (v6 && objc_msgSend(v5, "count"))
  {
    objc_msgSend(v5, "objectForKey:", CFSTR("type"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "longLongValue");

    v9 = (void *)objc_msgSend(objc_alloc((Class)objc_msgSend(MEMORY[0x1E0D398B8], "classForMessageItemDictionary:", v5)), "initWithDictionary:", v5);
    v10 = v9;
    if (!v8)
    {
      objc_msgSend(v5, "objectForKey:", CFSTR("flags"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "unsignedLongLongValue");

      objc_msgSend(v5, "objectForKey:", CFSTR("senderInfo"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "objectForKey:", *MEMORY[0x1E0D36D90]);
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v5, "objectForKey:", CFSTR("handle"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      if ((v14 & 4) == 0)
      {
        objc_msgSend(v6, "imHandleWithID:alreadyCanonical:", v11, a3);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "loginIMHandle");
        v18 = objc_claimAutoreleasedReturnValue();
LABEL_17:
        v22 = (void *)v18;
        goto LABEL_18;
      }
      objc_msgSend(v6, "loginIMHandle");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = v6;
      v20 = v16;
      v21 = a3;
LABEL_16:
      objc_msgSend(v19, "imHandleWithID:alreadyCanonical:", v20, v21);
      v18 = objc_claimAutoreleasedReturnValue();
      goto LABEL_17;
    }
    objc_msgSend(v9, "sender");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8 == 6)
      objc_msgSend(v5, "objectForKey:", CFSTR("handle"));
    else
      objc_msgSend(v10, "otherHandle");
    v12 = objc_claimAutoreleasedReturnValue();
    v16 = (void *)v12;
    if (v11)
    {
      objc_msgSend(v6, "imHandleWithID:alreadyCanonical:", v11, 1);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if (v16)
      {
LABEL_12:
        v19 = v6;
        v20 = v16;
        v21 = 1;
        goto LABEL_16;
      }
    }
    else
    {
      v17 = 0;
      if (v12)
        goto LABEL_12;
    }
    v22 = 0;
LABEL_18:
    objc_msgSend(v10, "_updateContextWithSenderHandle:otherHandle:", v17, v22);

    goto LABEL_19;
  }
  v10 = 0;
LABEL_19:

  return v10;
}

IMDowntimeController *IMSharedDowntimeController()
{
  return +[IMDowntimeController sharedInstance](IMDowntimeController, "sharedInstance");
}

void sub_1A2004DDC(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a4;
  v7 = a3;
  v8 = objc_alloc_init((Class)objc_msgSend((id)objc_opt_class(), "contextClass"));
  objc_msgSend(v8, "setSenderHandle:", v7);

  objc_msgSend(v8, "setOtherHandle:", v6);
  objc_msgSend(a1, "setContext:", v8);

}

id sub_1A2005E08(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(a1, "context");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "senderHandle");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void sub_1A2006E68(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *exc_buf)
{
  _Unwind_Exception *v11;

  if (a2 == 1)
  {

    objc_end_catch();
    JUMPOUT(0x1A2006C60);
  }
  _Unwind_Resume(v11);
}

void sub_1A2006E90(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *exc_buf)
{
  _Unwind_Exception *v11;

  if (a2 == 1)
  {

    objc_end_catch();
    JUMPOUT(0x1A20069A8);
  }
  _Unwind_Resume(v11);
}

void sub_1A2007B98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A2007BC0()
{
  return objc_opt_class();
}

id sub_1A2007D7C(void *a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  uint64_t v20;
  id v21;
  _BYTE *v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  objc_msgSend(v7, "operationalAccountsForService:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "count"))
  {
    if (objc_msgSend(v9, "length"))
    {
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v11 = v10;
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v27;
        v24 = v8;
        v25 = v7;
        v23 = a4;
        while (2)
        {
          for (i = 0; i != v13; ++i)
          {
            if (*(_QWORD *)v27 != v14)
              objc_enumerationMutation(v11);
            v16 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
            objc_msgSend(v16, "strippedLogin");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v17, "isEqualToIgnoringCase:", v9))
            {

LABEL_17:
              if (v23)
                *v23 = 1;
              v21 = v16;

              v8 = v24;
              v7 = v25;
              goto LABEL_20;
            }
            objc_msgSend(v16, "aliases");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            v19 = objc_msgSend(v18, "containsObject:", v9);

            if (v19)
              goto LABEL_17;
          }
          v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
          v8 = v24;
          v7 = v25;
          a4 = v23;
          if (v13)
            continue;
          break;
        }
      }

      sub_1A2007D7C(v7, v8, 0, a4);
      v20 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v10, "__imFirstObject");
      v20 = objc_claimAutoreleasedReturnValue();
    }
    v21 = (id)v20;
  }
  else
  {
    v21 = 0;
  }
LABEL_20:

  return v21;
}

id sub_1A2008180(void *a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  uint64_t v20;
  id v21;
  _BYTE *v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  objc_msgSend(v7, "connectedAccountsForService:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "count"))
  {
    if (objc_msgSend(v9, "length"))
    {
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v11 = v10;
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v27;
        v24 = v8;
        v25 = v7;
        v23 = a4;
        while (2)
        {
          for (i = 0; i != v13; ++i)
          {
            if (*(_QWORD *)v27 != v14)
              objc_enumerationMutation(v11);
            v16 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
            objc_msgSend(v16, "strippedLogin");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v17, "isEqualToIgnoringCase:", v9))
            {

LABEL_17:
              if (v23)
                *v23 = 1;
              v21 = v16;

              v8 = v24;
              v7 = v25;
              goto LABEL_20;
            }
            objc_msgSend(v16, "aliases");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            v19 = objc_msgSend(v18, "containsObject:", v9);

            if (v19)
              goto LABEL_17;
          }
          v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
          v8 = v24;
          v7 = v25;
          a4 = v23;
          if (v13)
            continue;
          break;
        }
      }

      sub_1A2008180(v7, v8, 0, a4);
      v20 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v10, "__imFirstObject");
      v20 = objc_claimAutoreleasedReturnValue();
    }
    v21 = (id)v20;
  }
  else
  {
    v21 = 0;
  }
LABEL_20:

  return v21;
}

void sub_1A20086E8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2008694);
  }
  _Unwind_Resume(a1);
}

id sub_1A2008730(void *a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  uint64_t v20;
  id v21;
  _BYTE *v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  objc_msgSend(v7, "activeAccountsForService:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "count"))
  {
    if (objc_msgSend(v9, "length"))
    {
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v11 = v10;
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v27;
        v24 = v8;
        v25 = v7;
        v23 = a4;
        while (2)
        {
          for (i = 0; i != v13; ++i)
          {
            if (*(_QWORD *)v27 != v14)
              objc_enumerationMutation(v11);
            v16 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
            objc_msgSend(v16, "strippedLogin");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v17, "isEqualToIgnoringCase:", v9))
            {

LABEL_17:
              if (v23)
                *v23 = 1;
              v21 = v16;

              v8 = v24;
              v7 = v25;
              goto LABEL_20;
            }
            objc_msgSend(v16, "aliases");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            v19 = objc_msgSend(v18, "containsObject:", v9);

            if (v19)
              goto LABEL_17;
          }
          v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
          v8 = v24;
          v7 = v25;
          a4 = v23;
          if (v13)
            continue;
          break;
        }
      }

      sub_1A2008730(v7, v8, 0, a4);
      v20 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v10, "__imFirstObject");
      v20 = objc_claimAutoreleasedReturnValue();
    }
    v21 = (id)v20;
  }
  else
  {
    v21 = 0;
  }
LABEL_20:

  return v21;
}

uint64_t sub_1A2008930(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "context");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "invitation");

  return v2;
}

id _IMBestAccountForIMItem(void *a1, void *a2, void *a3, void *a4, _QWORD *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _UNKNOWN **v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  objc_msgSend(v9, "accountID");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = &off_1E471A000;
  if (!v13
    || (+[IMAccountController sharedInstance](IMAccountController, "sharedInstance"),
        v15 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v15, "accountForUniqueID:", v13),
        v16 = (id)objc_claimAutoreleasedReturnValue(),
        v15,
        !v16))
  {
    objc_msgSend(v9, "service");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "service");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if (v19 == v18)
    {
      if (a5)
        *a5 = objc_retainAutorelease(v12);
      v16 = v12;
    }
    else
    {
      +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "bestAccountForService:", v18);
      v16 = (id)objc_claimAutoreleasedReturnValue();

      if (a5)
      {
        v16 = objc_retainAutorelease(v16);
        *a5 = v16;
      }
      v14 = &off_1E471A000;
    }

    if (!v16)
    {
      objc_msgSend(v10, "account");
      v16 = (id)objc_claimAutoreleasedReturnValue();
      if (!v16)
      {
        objc_msgSend(v14[55], "sharedInstance");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "accountForUniqueID:", v11);
        v16 = (id)objc_claimAutoreleasedReturnValue();

        if (!v16)
        {
          objc_msgSend(v14[55], "sharedInstance");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "bestAccountForService:", 0);
          v16 = (id)objc_claimAutoreleasedReturnValue();

        }
      }
    }
  }

  return v16;
}

uint64_t _CreateIMMessageFromIMItem(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;

  v5 = a1;
  v6 = a2;
  v7 = v6;
  v8 = 0;
  if (v5 && v6)
  {
    if (!objc_msgSend(v5, "type"))
    {
      if ((objc_msgSend(v5, "isFromMe") & 1) != 0)
      {
        objc_msgSend(v7, "loginIMHandle");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "handle");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "imHandleWithID:alreadyCanonical:", v11, a3);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        objc_msgSend(v5, "sender");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "imHandleWithID:alreadyCanonical:", v15, a3);
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v7, "loginIMHandle");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v5, "_updateContextWithSenderHandle:otherHandle:", v9, v12);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v16 = v5;
        if ((objc_msgSend(v16, "hasUnseenMention") & 1) == 0)
        {
          objc_msgSend(v16, "message");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "setHasMention:", 0);

        }
      }
      objc_msgSend(v5, "message");
      v8 = objc_claimAutoreleasedReturnValue();
      goto LABEL_21;
    }
    objc_msgSend(v5, "sender");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v5, "type") == 6)
      objc_msgSend(v5, "handle");
    else
      objc_msgSend(v5, "otherHandle");
    v10 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)v10;
    if (v9)
    {
      objc_msgSend(v7, "imHandleWithID:alreadyCanonical:", v9, 1);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (v12)
      {
LABEL_11:
        objc_msgSend(v7, "imHandleWithID:alreadyCanonical:", v12, 1);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_14:
        objc_msgSend(v5, "_updateContextWithSenderHandle:otherHandle:", v13, v14);

        v8 = 0;
LABEL_21:

        goto LABEL_22;
      }
    }
    else
    {
      v13 = 0;
      if (v10)
        goto LABEL_11;
    }
    v14 = 0;
    goto LABEL_14;
  }
LABEL_22:

  return v8;
}

uint64_t IMCoreSimulatedEnvironmentEnabled()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(MEMORY[0x1E0CB3898], "processInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "environment");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "valueForKey:", CFSTR("IMCoreSimulatedEnvironmentEnabled"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLValue");

  return v3;
}

uint64_t ___IMIsIdentifierInPluginCapableClient(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v9[19];

  v9[18] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  IMBundleIdentifiersShowingMessagesTranscript();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(v2, "mutableCopy");

  v9[0] = CFSTR("com.apple.iChat");
  v9[1] = CFSTR("com.apple.springboard");
  v9[2] = CFSTR("com.apple.messages.AssistantExtension");
  v9[3] = CFSTR("com.apple.MobileSMS.MessagesAssistantExtension");
  v4 = *MEMORY[0x1E0D37580];
  v9[4] = CFSTR("com.apple.PassKit.PassKitIntentsExtension");
  v9[5] = v4;
  v9[6] = *MEMORY[0x1E0D375A0];
  v9[7] = CFSTR("com.apple.iMessageAppsBrowserTest");
  v9[8] = CFSTR("com.apple.CameraEffectsDemo");
  v9[9] = CFSTR("com.apple.MobileSMS.iMessageAppsHost");
  v5 = *MEMORY[0x1E0D374D0];
  v9[10] = *MEMORY[0x1E0D39620];
  v9[11] = v5;
  v9[12] = CFSTR("com.apple.Safari.SandboxBroker");
  v9[13] = CFSTR("com.apple.siri");
  v9[14] = CFSTR("com.apple.imtranscoding.IMTranscoderAgent");
  v9[15] = CFSTR("com.apple.TapToRadar");
  v9[16] = CFSTR("com.apple.ActivityMonitorApp");
  v9[17] = CFSTR("com.apple.Sharing.AirDropUI");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 18);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addObjectsFromArray:", v6);

  objc_msgSend(v3, "addObjectsFromArray:", &unk_1E475EF40);
  v7 = objc_msgSend(v3, "containsObject:", v1);

  return v7;
}

uint64_t __IMIsIdentifierInPluginCapableClient(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD block[4];
  id v7;

  v1 = a1;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A200AA14;
  block[3] = &unk_1E471E348;
  v7 = v1;
  v2 = qword_1ECF122E8;
  v3 = v1;
  if (v2 != -1)
    dispatch_once(&qword_1ECF122E8, block);
  v4 = byte_1ECF122E0;

  return v4;
}

uint64_t _IMIsRunningInCameraClient()
{
  if (qword_1ECF122A8 != -1)
    dispatch_once(&qword_1ECF122A8, &unk_1E4722090);
  return byte_1EE65EAB8;
}

void sub_1A20099B4(uint64_t a1, void *a2)
{
  void *v3;
  int v4;
  BOOL v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v21 = a2;
  objc_msgSend(v21, "identifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "addObject:", v3);
  v4 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "containsObject:", v3);
  if (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3))
    v5 = v4 == 0;
  else
    v5 = 0;
  if (v5)
    goto LABEL_12;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40))
  {
    v6 = objc_alloc_init(MEMORY[0x1E0D36AE8]);
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40))
  {
    objc_msgSend((id)objc_opt_class(), "balloonProviderBundlePathURL");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB34D0]), "initWithURL:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40));
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

  }
  objc_msgSend(*(id *)(a1 + 40), "_insertPluginForExtension:balloonProviderBundle:precachedBalloonAppExtensions:timingCollection:", v21, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "removeObject:", v3);
  if (!v15)
  {
LABEL_12:
    objc_msgSend(*(id *)(a1 + 40), "model");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "pluginsMap");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = *(void **)(a1 + 56);
    objc_msgSend(v21, "identifier");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "objectForKeyedSubscript:", v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "pluginForIdentifier:", v20);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

  }
  if (objc_msgSend(v15, "isEnabled"))
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 24);
  if (objc_msgSend(v15, "isStickerPackOnly"))
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 24);

}

uint64_t IMIsOscarEnabled()
{
  uint64_t v0;
  void *v1;
  void *v3;
  uint64_t v4;

  v0 = qword_1ECF11F10;
  if (qword_1ECF11F10 == -1)
  {
    +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    qword_1ECF11F10 = objc_msgSend(v1, "activeAccountsAreEligibleForiMessageJunk");

    objc_msgSend(MEMORY[0x1E0D397F8], "setSupportsiMessageJunk:", qword_1ECF11F10 == 1);
    v0 = qword_1ECF11F10;
  }
  if (v0 == 1)
    return 1;
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "filterediMessageChatsExist");

  return v4;
}

id IMHashOfHashesForStringArray(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  objc_msgSend(a1, "sortedArrayUsingComparator:", &unk_1E4721C90);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_opt_new();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%tu;"),
          objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * i), "hash"));
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "appendString:", v8);

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%tu"), objc_msgSend(v2, "hash"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

uint64_t sub_1A200A348()
{
  return swift_release();
}

uint64_t sub_1A200A350()
{
  return swift_release();
}

uint64_t sub_1A200A358()
{
  return swift_release();
}

uint64_t sub_1A200A360()
{
  return swift_release();
}

uint64_t sub_1A200A368()
{
  return swift_release();
}

uint64_t sub_1A200A370()
{
  return swift_release();
}

uint64_t sub_1A200A378()
{
  return swift_release();
}

uint64_t sub_1A200A380()
{
  return swift_release();
}

uint64_t sub_1A200A38C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A200A39C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A200A3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A200A3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A200A3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A200A3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A200A3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A200A3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

id sub_1A200A40C(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  if (objc_msgSend(v1, "supportsCrossAccountIDSMessaging"))
  {
    objc_msgSend(v1, "idsServiceNames");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "firstObject");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v3 = 0;
  }

  return v3;
}

id sub_1A200A46C()
{
  id v0;

  if (+[IMDowntimeController isContactLimitsFeatureEnabled](IMDowntimeController, "isContactLimitsFeatureEnabled"))
  {
    if (qword_1EE65F3D0 != -1)
      dispatch_once(&qword_1EE65F3D0, &unk_1E471D8B8);
    v0 = (id)qword_1EE65F3C8;
  }
  else
  {
    v0 = 0;
  }
  return v0;
}

uint64_t sub_1A200A4C8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *sub_1A200A4E0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1A200A504(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A85832C8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A200A548(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *sub_1A200A568(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1A200A5A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void (*v5)(void *);
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void (*v11)(void *);
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void (*v17)(void *);
  NSObject *v18;
  int v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  qword_1EE65F3A8 = MEMORY[0x1A858292C](CFSTR("STConversation"), CFSTR("ScreenTimeCore"));
  v0 = MEMORY[0x1A858292C](CFSTR("STConversationContext"), CFSTR("ScreenTimeCore"));
  qword_1EE65F3B0 = v0;
  if (qword_1EE65F3A8)
  {
    if (v0)
      goto LABEL_18;
    goto LABEL_11;
  }
  v1 = (void *)MEMORY[0x1E0CB3940];
  v2 = IMFileLocationTrimFileName();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", &stru_1E4725068);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringWithFormat:", CFSTR("Unexpected nil '%@' in %s at %s:%d. %@"), CFSTR("IMSTConversationClass"), "STConversation *_createSTConversation(void)_block_invoke", v2, 242, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void (*)(void *))IMGetAssertionFailureHandler();
  if (v5)
  {
    v5(v4);
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v4;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
    }

  }
  if (!qword_1EE65F3B0)
  {
LABEL_11:
    v7 = (void *)MEMORY[0x1E0CB3940];
    v8 = IMFileLocationTrimFileName();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", &stru_1E4725068);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "stringWithFormat:", CFSTR("Unexpected nil '%@' in %s at %s:%d. %@"), CFSTR("IMSTConversationContextClass"), "STConversation *_createSTConversation(void)_block_invoke", v8, 243, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    v11 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v11)
    {
      v11(v10);
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v24 = v10;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }

    }
  }
LABEL_18:
  qword_1EE65F3B8 = MEMORY[0x1A8582938]("STManagementStateStateDidChange", CFSTR("ScreenTimeCore"));
  if (!qword_1EE65F3B8)
  {
    v13 = (void *)MEMORY[0x1E0CB3940];
    v14 = IMFileLocationTrimFileName();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", &stru_1E4725068);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringWithFormat:", CFSTR("Unexpected nil '%@' in %s at %s:%d. %@"), CFSTR("IMSTManagementStateStateDidChangeNotificationName"), "STConversation *_createSTConversation(void)_block_invoke", v14, 245, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v17)
    {
      v17(v16);
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v24 = v16;
        _os_log_impl(&dword_1A1FF4000, v18, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }

    }
  }
  v19 = IMIsRunningInMessages();
  v20 = objc_alloc((Class)qword_1EE65F3A8);
  if (v19)
    v21 = objc_msgSend(v20, "initWithBundleIdentifier:", CFSTR("com.apple.MobileSMS"));
  else
    v21 = objc_msgSend(v20, "initSynchronouslyWithBundleIdentifier:", CFSTR("com.apple.MobileSMS"));
  v22 = (void *)qword_1EE65F3C8;
  qword_1EE65F3C8 = v21;

}

uint64_t sub_1A200A9E8()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("LSPlugInKitProxy"), CFSTR("CoreServices"));
  qword_1ECF122F0 = result;
  return result;
}

uint64_t sub_1A200AA14(uint64_t a1)
{
  uint64_t result;

  result = ___IMIsIdentifierInPluginCapableClient(*(void **)(a1 + 32));
  byte_1ECF122E0 = result;
  return result;
}

void sub_1A200AA34()
{
  void *v0;
  char v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "bundleIdentifier");
  v2 = (id)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0D36C08]) & 1) != 0
    || (objc_msgSend(v2, "isEqualToString:", CFSTR("com.apple.MobileSMS")) & 1) != 0
    || (objc_msgSend(v2, "isEqualToString:", CFSTR("com.apple.iChat")) & 1) != 0)
  {
    v1 = 1;
  }
  else
  {
    v1 = objc_msgSend(v2, "isEqualToString:", CFSTR("com.apple.systemuiserver"));
  }
  byte_1EE65F3C0 = v1;

}

void sub_1A200AADC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD v4[7];

  v4[6] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0D375A0];
  v4[0] = *MEMORY[0x1E0D37580];
  v4[1] = v0;
  v4[2] = CFSTR("com.apple.InCallService");
  v4[3] = CFSTR("com.apple.iMessageAppsBrowserTest");
  v4[4] = CFSTR("com.apple.CameraEffectsDemo");
  v4[5] = CFSTR("com.apple.facetime");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v4, 6);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  byte_1EE65EAB8 = objc_msgSend(v1, "containsObject:", v3);

}

uint64_t sub_1A200ABD0()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("SGSuggestionsService"), CFSTR("CoreSuggestions"));
  qword_1EE65F2E8 = result;
  return result;
}

void sub_1A200ABFC(uint64_t a1)
{

}

void sub_1A200AC04(uint64_t a1)
{

}

void sub_1A200AC0C(uint64_t a1)
{

}

void sub_1A200AC14(uint64_t a1)
{

}

void sub_1A200AC1C(uint64_t a1)
{

}

void sub_1A200AC24(uint64_t a1)
{

}

void sub_1A200AC2C(uint64_t a1)
{

}

void sub_1A200AC34(uint64_t a1)
{

}

void sub_1A200AC3C(uint64_t a1)
{

}

void sub_1A200AC44(uint64_t a1)
{

}

void sub_1A200AC4C(uint64_t a1)
{

}

void sub_1A200AC54(uint64_t a1)
{

}

void sub_1A200AC5C(uint64_t a1)
{

}

void sub_1A200AC64(uint64_t a1)
{

}

void sub_1A200AC6C(uint64_t a1)
{

}

void sub_1A200AC74(uint64_t a1)
{

}

void sub_1A200AC7C(uint64_t a1)
{

}

void sub_1A200AC84(uint64_t a1)
{

}

void sub_1A200AC8C(uint64_t a1)
{

}

void sub_1A200AC94(uint64_t a1)
{

}

void sub_1A200AC9C(uint64_t a1)
{

}

void sub_1A200ACA4(uint64_t a1)
{

}

void sub_1A200ACAC(uint64_t a1)
{

}

void sub_1A200ACB4(uint64_t a1)
{

}

void sub_1A200ACBC(uint64_t a1)
{

}

void sub_1A200ACC4(uint64_t a1)
{

}

void sub_1A200ACCC(uint64_t a1)
{

}

void sub_1A200ACD4(uint64_t a1)
{

}

void sub_1A200ACDC(uint64_t a1)
{

}

void sub_1A200ACE4(uint64_t a1)
{

}

void sub_1A200ACEC(uint64_t a1)
{

}

void sub_1A200ACF4(uint64_t a1)
{

}

void sub_1A200ACFC(uint64_t a1)
{

}

void sub_1A200AD04(uint64_t a1)
{

}

void sub_1A200AD0C(uint64_t a1)
{

}

uint64_t sub_1A200AD14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD54(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD64(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD74(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD84(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AD94(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200ADA4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200ADB4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200ADC4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200ADD4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200ADE4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200ADF4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE04(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE54(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE64(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE74(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE84(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AE94(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AEA4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AEB4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AEC4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AED4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AEE4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AEF4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AF04(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AF14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AF24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A200AF34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1A200AF44(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5) + 16))(*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5));
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_1A200B038(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectForKey:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 16);
  v5 = *(_QWORD *)(a1 + 48);
  if (v5)
  {
    objc_msgSend(*(id *)(v3 + 16), "setObject:forKey:", v5, *(_QWORD *)(a1 + 40));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKey:", v6, *(_QWORD *)(a1 + 40));

  }
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1A200AF44;
  v9[3] = &unk_1E471E7C8;
  v10 = v2;
  v7 = *(NSObject **)(a1 + 56);
  v11 = *(id *)(a1 + 48);
  v8 = v2;
  dispatch_async(v7, v9);

}

void sub_1A200B130(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD block[4];
  id v19;
  id v20;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 40);
  if (v3)
  {
    objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(void **)(v5 + 16);
    if (v4)
    {
      objc_msgSend(*(id *)(v5 + 16), "setObject:forKey:", v4, *(_QWORD *)(a1 + 40));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setObject:forKey:", v9, *(_QWORD *)(a1 + 40));

    }
    v10 = *(NSObject **)(a1 + 48);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A2047600;
    block[3] = &unk_1E471E8B8;
    v11 = *(id *)(a1 + 64);
    v19 = v4;
    v20 = v11;
    v12 = v4;
    dispatch_async(v10, block);

  }
  else
  {
    objc_msgSend(*(id *)(v2 + 32), "objectForKey:", *(_QWORD *)(a1 + 40));
    v17 = (id)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(*(id *)(a1 + 64), "copy");
    if (v17)
    {
      v8 = _Block_copy(v7);
      objc_msgSend(v17, "addObject:", v8);

    }
    else
    {
      v13 = *(void **)(*(_QWORD *)(a1 + 32) + 32);
      v14 = (void *)MEMORY[0x1E0C99DE8];
      v15 = _Block_copy(v7);
      objc_msgSend(v14, "arrayWithObject:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "setObject:forKey:", v16, *(_QWORD *)(a1 + 40));

      objc_msgSend(*(id *)(a1 + 32), "_startRequestForDisplayName:messageUID:queue:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 48));
    }

  }
}

void sub_1A200B2E8(uint64_t a1, uint64_t a2, void *a3)
{
  char isKindOfClass;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  id v10;

  v10 = a3;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v10;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v10, "extension");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      objc_msgSend(v6, "extensionPointIdentifier");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "isEqualToString:", *(_QWORD *)(a1 + 32));

      if ((v9 & 1) == 0)
        objc_msgSend(*(id *)(a1 + 40), "addObject:", v7);
    }

    v5 = v10;
  }

}

void sub_1A200B388()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0D36AE8]);
  v1 = (void *)qword_1ECF12488;
  qword_1ECF12488 = (uint64_t)v0;

}

void sub_1A200B3B0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  id WeakRetained;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  objc_msgSend(*(id *)(a1 + 32), "stopTimingForKey:", *(_QWORD *)(a1 + 40));
  if (v6)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v8 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)buf = 138412546;
        v21 = v8;
        v22 = 2112;
        v23 = v6;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "IMBalloonPluginManager encountered error discovering extensions (%@): %@", buf, 0x16u);
      }

    }
  }
  else
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    objc_msgSend((id)objc_opt_class(), "precacheBalloonAppExtensionsForExtensions:", v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = sub_1A20987D8;
    v13[3] = &unk_1E47204C8;
    v14 = *(id *)(a1 + 48);
    v15 = v5;
    v16 = *(id *)(a1 + 32);
    objc_copyWeak(&v19, (id *)(a1 + 64));
    v11 = *(_QWORD *)(a1 + 56);
    v17 = v10;
    v18 = v11;
    v12 = v10;
    dispatch_async(MEMORY[0x1E0C80D38], v13);

    objc_destroyWeak(&v19);
  }

}

void sub_1A200B5AC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  const __CFString *v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  const __CFString *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "policyCache");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "chatForConversationContext:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = objc_msgSend(*(id *)(a1 + 40), "allowedByScreenTime");
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v6 = CFSTR("NO");
        if ((_DWORD)v4)
          v6 = CFSTR("YES");
        v9 = 138412546;
        v10 = v3;
        v11 = 2112;
        v12 = v6;
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Updating chat %@ because Comm Limit policy changed to allowed = %@", (uint8_t *)&v9, 0x16u);
      }

    }
    objc_msgSend(v3, "setAllowedByScreenTime:", v4);
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 40), "allowedByContactsHandle");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138412290;
      v10 = v8;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Could not find chat for conversation context with allowed by contacts handle: %@. unregistering for Communication Limit tracking for that chat identifier.", (uint8_t *)&v9, 0xCu);

    }
  }

}

void sub_1A200B774(uint64_t a1)
{
  NSObject *v2;
  _QWORD block[5];
  uint8_t buf[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "TUConversationManager registered", buf, 2u);
    }

  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A20F0CFC;
  block[3] = &unk_1E471E348;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async(MEMORY[0x1E0C80D38], block);
}

void sub_1A200B848(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  int v12;
  id v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = (void *)a1[4];
      v12 = 138412546;
      v13 = v8;
      v14 = 2112;
      v15 = v5;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "displayName %@ names %@", (uint8_t *)&v12, 0x16u);
    }

  }
  if (v6 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v12 = 138412290;
      v13 = v6;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Error getting names for phone number: %@", (uint8_t *)&v12, 0xCu);
    }

  }
  v10 = (void *)a1[5];
  objc_msgSend(v5, "firstObject");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "_startRequestForDisplayNameCallbackWithSuggestedName:displayName:queue:", v11, a1[4], a1[6]);

}

uint64_t sub_1A200B9F4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "value");
}

void sub_1A200B9FC(uint64_t a1)
{
  IMSWHighlightCenterController *v1;
  void *v2;

  v1 = -[IMSWHighlightCenterController initWithAppIdentifier:]([IMSWHighlightCenterController alloc], "initWithAppIdentifier:", *(_QWORD *)(a1 + 32));
  v2 = (void *)qword_1EE65EB48;
  qword_1EE65EB48 = (uint64_t)v1;

}

uint64_t sub_1A200BA38(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "addObject:", *(_QWORD *)(a1 + 40));
}

void sub_1A200BA44(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  uint64_t v7;
  __CFRunLoop *Main;
  uint64_t v9;
  NSObject *v10;
  _QWORD v11[5];
  id v12;
  _QWORD block[4];
  id v14;
  uint64_t v15;
  id v16;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    if (v3)
    {
      objc_msgSend(WeakRetained, "setSuggestedName:", v3);
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64))
      {
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = sub_1A2047610;
        block[3] = &unk_1E471EC20;
        objc_copyWeak(&v16, (id *)(a1 + 40));
        v6 = v5;
        v7 = *(_QWORD *)(a1 + 32);
        v14 = v6;
        v15 = v7;
        *(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) = CFRunLoopObserverCreateWithHandler(0, 0x20uLL, 0, 0, block);
        Main = CFRunLoopGetMain();
        CFRunLoopAddObserver(Main, *(CFRunLoopObserverRef *)(*(_QWORD *)(a1 + 32) + 64), (CFRunLoopMode)*MEMORY[0x1E0C9B280]);

        objc_destroyWeak(&v16);
      }
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 32);
      v10 = *(NSObject **)(v9 + 24);
      v11[0] = MEMORY[0x1E0C809B0];
      v11[1] = 3221225472;
      v11[2] = sub_1A200BA38;
      v11[3] = &unk_1E471E7C8;
      v11[4] = v9;
      v12 = WeakRetained;
      dispatch_async(v10, v11);

    }
  }

}

void sub_1A200BBA8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A200BBC0(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  id v13;
  char v14;

  v14 = 0;
  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (id)objc_msgSend(WeakRetained, "immediateNameWithNeedsSuggestedNameFetch:useSuggestedName:", &v14, 1);

  if (v14)
  {
    v5 = *(void **)(a1 + 32);
    v6 = objc_loadWeakRetained(v2);
    objc_msgSend(v6, "displayID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_loadWeakRetained(v2);
    objc_msgSend(v8, "ID");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = MEMORY[0x1E0C80D38];
    v11 = MEMORY[0x1E0C80D38];
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = sub_1A200BA44;
    v12[3] = &unk_1E471EC48;
    objc_copyWeak(&v13, v2);
    v12[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "fetchSuggestedRealNameForDisplayName:messageUID:queue:block:", v7, v9, v10, v12);

    objc_destroyWeak(&v13);
  }
}

void sub_1A200BCFC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A200BD10(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    *(_BYTE *)(*(_QWORD *)(result + 32) + 12) = 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = 1;
  }
  return result;
}

id sub_1A200BD34(uint64_t a1)
{
  void *v1;
  NSObject *v2;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_cachedChatWithIdentifier:", *(_QWORD *)(a1 + 40));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v4 = 138412290;
      v5 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Returning cached chat %@", (uint8_t *)&v4, 0xCu);
    }

  }
  return v1;
}

void sub_1A200BE10(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "map");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_1A200BE50(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  void *v6;
  double v7;
  double v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;

  v15 = a2;
  v5 = *(void **)(a1 + 32);
  objc_msgSend(a3, "startDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "timeIntervalSinceDate:", v6);
  v8 = v7;

  if (v8 > 10.0)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v10 = *(void **)(v9 + 40);
    if (v10)
    {
      v11 = v10;
      v12 = *(void **)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v11;
    }
    else
    {
      v13 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v12 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;
    }

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v15);
  }

}

void sub_1A200BF1C(uint64_t a1, uint64_t a2, void *a3)
{
  char isKindOfClass;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a3;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v11;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v11, "proxy");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "bundleIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "length") && objc_msgSend(v7, "length"))
    {
      v9 = *(void **)(a1 + 32);
      objc_msgSend(v11, "identifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKey:", v10, v7);

    }
    v5 = v11;
  }

}

void sub_1A200BFE8(uint64_t a1)
{
  void *v2;
  void *v3;
  id obj;

  obj = *(id *)(a1 + 32);
  objc_sync_enter(obj);
  if (!qword_1EE65F348)
  {
    v2 = *(void **)(a1 + 32);
    objc_msgSend(v2, "_createSingleton__im");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "__setSingleton__im:", v3);

  }
  objc_sync_exit(obj);

}

void sub_1A200C058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1A200C06C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "bundleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    if (!IMOSLoggingEnabled())
      goto LABEL_24;
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v3, "bundlePath");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = 138412290;
      v22 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Skipping bundle with missing identifier at path:%@", (uint8_t *)&v21, 0xCu);

    }
    goto LABEL_6;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "_shouldSkipUpdatingPluginBundleIdentifier:", v4))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v3, "bundlePath");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138412546;
        v22 = v4;
        v23 = 2112;
        v24 = v6;
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Skipping bundle with identifier:%@ at path:%@", (uint8_t *)&v21, 0x16u);

      }
LABEL_6:

    }
  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addObject:", v4);
    v8 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "containsObject:", v4);
    if (objc_msgSend(*(id *)(a1 + 40), "containsObject:", v4) && !v8)
      goto LABEL_18;
    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40))
    {
      objc_msgSend((id)objc_opt_class(), "balloonProviderBundlePathURL");
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v11 = *(void **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v9;

      v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB34D0]), "initWithURL:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40));
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

    }
    objc_msgSend(*(id *)(a1 + 32), "_insertPluginForAppBundle:balloonProviderBundle:", v3, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "removeObject:", v4);
    if (!v15)
    {
LABEL_18:
      objc_msgSend(*(id *)(a1 + 32), "model");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "pluginsMap");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = *(void **)(a1 + 48);
      objc_msgSend(v3, "bundleIdentifier");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "objectForKeyedSubscript:", v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "pluginForIdentifier:", v20);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

    }
    if (objc_msgSend(v15, "isEnabled"))
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24);
    if (objc_msgSend(v15, "isStickerPackOnly"))
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24);

  }
LABEL_24:

}

void sub_1A200C38C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A200C34CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A200C3B0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "map");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v4, "copy");
  v3 = v2;
  if (!v2)
  {
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v3);
  if (!v2)

}

void sub_1A200C434()
{
  IMPinnedConversationsController *v0;
  void *v1;

  v0 = objc_alloc_init(IMPinnedConversationsController);
  v1 = (void *)qword_1ECF12570;
  qword_1ECF12570 = (uint64_t)v0;

}

void sub_1A200C45C(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 32))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        v4 = *(_QWORD *)(a1 + 32);
        v3 = *(void **)(a1 + 40);
        v9 = 138412546;
        v10 = v3;
        v11 = 2112;
        v12 = v4;
        _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "error retrieving application policy for bundle identifier:%@ - %@", (uint8_t *)&v9, 0x16u);
      }

    }
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 48), "bundleIDPolicyMap");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "addEntriesFromDictionary:", *(_QWORD *)(a1 + 56));

    objc_msgSend(*(id *)(a1 + 56), "allKeys");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v9 = 138412290;
        v10 = v6;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Successfully fetched App Downtime Polcies for app bundles with  identifiers: %@", (uint8_t *)&v9, 0xCu);
      }

    }
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "postNotificationName:object:userInfo:", CFSTR("com.apple.messages.IMDowntimeStateChangedForBundleID"), 0, 0);

  }
}

void sub_1A200C630()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.Messages", "iMessageCloudKitEvents");
  v1 = (void *)qword_1ECF123F0;
  qword_1ECF123F0 = (uint64_t)v0;

}

void sub_1A200C660(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  v5 = a3;
  v6 = a2;
  objc_msgSend(v4, "map");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setObject:forKey:", v5, v6);

}

uint64_t sub_1A200C6C8(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A200C660;
  v3[3] = &unk_1E471F690;
  v1 = *(void **)(a1 + 32);
  v3[4] = *(_QWORD *)(a1 + 40);
  return objc_msgSend(v1, "enumerateKeysAndObjectsUsingBlock:", v3);
}

void sub_1A200C720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "map");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "allKeys");
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1A200C774(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithObjects:", CFSTR("com.apple.ExtensionTester.NullMessagesAppExtension"), CFSTR("com.apple.hellbender.messagesextension"), CFSTR("com.apple.PPTPong.MessagesExtension"), CFSTR("com.apple.PPTTimeLabel.MessagesExtension"), 0);
  if (_IMIsRunningInCameraClient())
    objc_msgSend(v4, "addObject:", *MEMORY[0x1E0D374D0]);
  if (objc_msgSend(*(id *)(a1 + 32), "_shouldAddSafetyMonitorToBlockList"))
    objc_msgSend(v4, "addObject:", *MEMORY[0x1E0D37500]);
  if (objc_msgSend(*(id *)(a1 + 32), "_shouldAddFindMyToBlockList"))
    objc_msgSend(v4, "addObject:", *MEMORY[0x1E0D37508]);
  if (objc_msgSend(*(id *)(a1 + 32), "_shouldAddGenPlaygroundToBlockList"))
    objc_msgSend(v4, "addObject:", *MEMORY[0x1E0D375B0]);
  v2 = objc_msgSend(v4, "copy");
  v3 = (void *)qword_1ECF122A0;
  qword_1ECF122A0 = v2;

}

uint64_t sub_1A200C86C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_postNotification:", *(_QWORD *)(a1 + 40));
}

void sub_1A200C878()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.Messages", "IMBalloonPluginManager");
  v1 = (void *)qword_1ECF122B8;
  qword_1ECF122B8 = (uint64_t)v0;

}

void sub_1A200C8A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "map");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "allValues");
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1A200C8FC()
{
  IMChatHistoryController *v0;
  void *v1;

  v0 = objc_alloc_init(IMChatHistoryController);
  v1 = (void *)qword_1ECF12620;
  qword_1ECF12620 = (uint64_t)v0;

}

void sub_1A200C924()
{
  IMBalloonPluginManager *v0;
  void *v1;

  v0 = objc_alloc_init(IMBalloonPluginManager);
  v1 = (void *)qword_1ECF12318;
  qword_1ECF12318 = (uint64_t)v0;

}

void sub_1A200C94C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

id sub_1A200C95C()
{
  id v0;

  v0 = (id)objc_msgSend(MEMORY[0x1E0D20C00], "sharedInstance");
  return (id)objc_msgSend(MEMORY[0x1E0D20BF8], "sharedInstance");
}

void sub_1A200C994(uint64_t a1)
{
  void **v2;
  void *v3;
  void **v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  if (qword_1ECF12470 != -1)
    dispatch_once(&qword_1ECF12470, &unk_1E471EE70);
  if (!qword_1ECF12460)
  {
    v2 = (void **)MEMORY[0x1A8582938]("FaceTimeDeviceRegistrationCapabilityChangedNotification", CFSTR("FTServices"));
    if (v2)
      v3 = *v2;
    else
      v3 = 0;
    objc_storeStrong((id *)&qword_1ECF12460, v3);
  }
  if (!qword_1ECF12458)
  {
    v4 = (void **)MEMORY[0x1A8582938]("FTCTRegistrationStatusChangedNotification", CFSTR("FTServices"));
    if (v4)
      v5 = *v4;
    else
      v5 = 0;
    objc_storeStrong((id *)&qword_1ECF12458, v5);
  }
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), sel__registrationStatusChanged_, qword_1ECF12460, 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), sel__registrationStatusChanged_, qword_1ECF12458, 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), sel__registrationStatusChanged_, CFSTR("NotificationActiveAccountChanged"), 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), sel__registrationStatusChanged_, CFSTR("__kIMAccountRegistrationStatusChangedNotification"), 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), sel__registrationStatusChanged_, CFSTR("__kIMAccountAliasesChangedNotification"), 0);

}

void sub_1A200CB4C()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("FTNotificationQueue", 0);
  v1 = (void *)qword_1ECF12468;
  qword_1ECF12468 = (uint64_t)v0;

}

void sub_1A200CB78()
{
  uint64_t v0;
  void *v1;

  if ((sub_1A200DA5C() & 1) != 0 || IMIsRunningInUnitTesting())
  {
    v0 = objc_opt_new();
    v1 = (void *)qword_1EE65F350;
    qword_1EE65F350 = v0;

  }
}

void sub_1A200CBBC()
{
  IMParentalControls *v0;
  void *v1;

  v0 = objc_alloc_init(IMParentalControls);
  v1 = (void *)qword_1ECF124B0;
  qword_1ECF124B0 = (uint64_t)v0;

}

void sub_1A200CBE8()
{
  IMDowntimeController *v0;
  void *v1;

  v0 = objc_alloc_init(IMDowntimeController);
  v1 = (void *)qword_1ECF12610;
  qword_1ECF12610 = (uint64_t)v0;

}

void sub_1A200CC10()
{
  IMDaemonController *v0;
  void *v1;

  v0 = objc_alloc_init(IMDaemonController);
  v1 = (void *)qword_1ECF12430;
  qword_1ECF12430 = (uint64_t)v0;

}

void sub_1A200CC38()
{
  int v0;
  __objc2_class **v1;
  id v2;
  void *v3;

  v0 = IMCoreSimulatedEnvironmentEnabled();
  v1 = off_1E471A918;
  if (!v0)
    v1 = &off_1E471A1B8;
  v2 = objc_alloc_init(*v1);
  v3 = (void *)qword_1ECF12578;
  qword_1ECF12578 = (uint64_t)v2;

}

void sub_1A200CC78()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObserver:selector:name:object:", qword_1ECF125F8, sel__handleAddContactChangeHistoryEvent_, *MEMORY[0x1E0D376B0], 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObserver:selector:name:object:", qword_1ECF125F8, sel__handleDeleteContactChangeHistoryEvent_, *MEMORY[0x1E0D376C8], 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObserver:selector:name:object:", qword_1ECF125F8, sel__handleUpdateContactChangeHistoryEvent_, *MEMORY[0x1E0D376E0], 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addObserver:selector:name:object:", qword_1ECF125F8, sel__handleDropEverythingChangeHistoryEvent, *MEMORY[0x1E0D376D0], 0);

}

void sub_1A200CD78()
{
  IMHandleRegistrar *v0;
  void *v1;

  v0 = objc_alloc_init(IMHandleRegistrar);
  v1 = (void *)qword_1ECF125F8;
  qword_1ECF125F8 = (uint64_t)v0;

}

void sub_1A200CDA4()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.Messages", "ChatItemUpdater");
  v1 = (void *)qword_1EE65F3A0;
  qword_1EE65F3A0 = (uint64_t)v0;

}

void sub_1A200CDD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0D397A8], "sharedInstance");
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v2;

}

void sub_1A200CE0C(uint64_t a1)
{
  void *v2;
  void *v3;
  id obj;

  obj = *(id *)(a1 + 32);
  objc_sync_enter(obj);
  if (!qword_1ECF12408)
  {
    v2 = *(void **)(a1 + 32);
    objc_msgSend(v2, "_createSingleton__im");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "__setSingleton__im:", v3);

  }
  objc_sync_exit(obj);

}

void sub_1A200CE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1A200CE90()
{
  id v0;
  uint64_t v1;
  void *v2;

  v0 = objc_alloc(MEMORY[0x1E0D34358]);
  v1 = objc_msgSend(v0, "initWithService:", *MEMORY[0x1E0D34240]);
  v2 = (void *)qword_1ECF12300;
  qword_1ECF12300 = v1;

}

void sub_1A200CEC8()
{
  id v0;
  void *v1;
  NSObject *v2;

  if (IMIsRunningInIMDPersistenceAgent())
  {
    IMLogHandleForCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
      sub_1A2197B5C(v2);

    abort();
  }
  v0 = -[IMChatRegistry initAsListener:]([IMChatRegistry alloc], "initAsListener:", 1);
  v1 = (void *)qword_1ECF123D0;
  qword_1ECF123D0 = (uint64_t)v0;

}

void sub_1A200CF38(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "fetchScreenTimeAppPolicy");

}

void sub_1A200CF64(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setAppPolicyMonitor:", *(_QWORD *)(a1 + 32));

}

void sub_1A200CFA0(id *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;

  v2 = objc_alloc(MEMORY[0x1E0D1D1D8]);
  v3 = MEMORY[0x1E0C809B0];
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1A20E3FC8;
  v9[3] = &unk_1E471E460;
  a1 += 4;
  objc_copyWeak(&v10, a1);
  v4 = (void *)objc_msgSend(v2, "initWithPolicyChangeHandler:", v9);
  block[0] = v3;
  block[1] = 3221225472;
  block[2] = sub_1A200CF64;
  block[3] = &unk_1E471EA98;
  objc_copyWeak(&v8, a1);
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&v10);
}

void sub_1A200D0A0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A200D0B4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  objc_msgSend((id)objc_opt_class(), "fetchEmergencyNumbersSetWithProviderManager:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A200A46C();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 24);
  *(_QWORD *)(v4 + 24) = v2;
  v9 = v2;

  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(v6 + 16);
  *(_QWORD *)(v6 + 16) = v3;
  v8 = v3;

  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
}

void sub_1A200D158()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.Messages", "IMCloudKitHooks");
  v1 = (void *)qword_1ECF12400;
  qword_1ECF12400 = (uint64_t)v0;

}

void sub_1A200D188(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  void *v4;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "listener");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setupComplete:info:", 1, v3);

}

void sub_1A200D1E4(uint64_t a1, uint64_t a2, void *a3)
{
  id *v3;
  void (**v4)(id, void *);
  void *v5;
  id *WeakRetained;

  v3 = (id *)(a1 + 32);
  v4 = a3;
  WeakRetained = (id *)objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained[9], "remoteObjectProxy");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v4[2](v4, v5);

}

void sub_1A200D248()
{
  void *v0;
  int v1;
  void *v2;
  id v3;

  +[IMDaemonController sharedController](IMDaemonController, "sharedController");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isConnected");

  if (v1)
  {
    +[IMDaemonController sharedController](IMDaemonController, "sharedController");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "remoteDaemon");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "broadcastCloudKitStateAfterFetchingAccountStatus");

  }
}

void sub_1A200D2D0()
{
  void *v0;

  v0 = (void *)qword_1ECF122D8;
  qword_1ECF122D8 = (uint64_t)&unk_1E475EC88;

}

void sub_1A200D2E8(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  _QWORD v13[6];
  char v14;
  __int128 buf;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v9 = v8;
  if (a2)
  {
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("recoverableMessagesMetadata"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v16 = 0x2020000000;
    v17 = 0;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = sub_1A2076940;
    v13[3] = &unk_1E471FCB8;
    v14 = *(_BYTE *)(a1 + 48);
    v13[4] = *(_QWORD *)(a1 + 32);
    v13[5] = &buf;
    objc_msgSend(v10, "enumerateKeysAndObjectsUsingBlock:", v13);
    _Block_object_dispose(&buf, 8);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v7;
      _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to retrieve recoverable message count: %@", (uint8_t *)&buf, 0xCu);
    }

  }
  v12 = *(_QWORD *)(a1 + 40);
  if (v12)
    (*(void (**)(void))(v12 + 16))();

}

void sub_1A200D49C(uint64_t a1, void *a2)
{
  int v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "daemonController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v2)
    objc_msgSend(v5, "synchronousReplyingRemoteDaemon");
  else
    objc_msgSend(v5, "replyingRemoteDaemon");
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "loadRecoverableMessagesMetadataWithQueryID:", v4);
}

uint64_t sub_1A200D518(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "initializeContext:participantIDsHash:trackingChat:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

uint64_t sub_1A200D528(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void (*v11)(void *);
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void (*v17)(void *);
  NSObject *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  BOOL v25;
  uint64_t v26;
  _BYTE *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  id v31;
  int8x16_t v33;
  _QWORD block[4];
  id v35;
  id v36;
  int8x16_t v37;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint8_t v46[128];
  uint8_t buf[4];
  void *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!v5)
  {
    v43 = xmmword_1E4721AD8;
    v44 = *(_OWORD *)off_1E4721AE8;
    v45 = 446;
    v7 = (void *)MEMORY[0x1E0CB3940];
    v8 = IMFileLocationTrimFileName();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", &stru_1E4725068);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "stringWithFormat:", CFSTR("Unexpected nil '%@' in %s at %s:%d. %@"), CFSTR("emergencyNumbers"), "-[IMDowntimeController _allowedToShowConversationWithHandleIDs:sync:context:participantIDsHash:trackingChat:]_block_invoke", v8, 446, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    v11 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v11)
    {
      v11(v10);
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v48 = v10;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }

    }
  }
  if (!v6)
  {
    v43 = xmmword_1E4721B00;
    v44 = *(_OWORD *)off_1E4721B10;
    v45 = 447;
    v13 = (void *)MEMORY[0x1E0CB3940];
    v14 = IMFileLocationTrimFileName();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", &stru_1E4725068);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringWithFormat:", CFSTR("Unexpected nil '%@' in %s at %s:%d. %@"), CFSTR("conversation"), "-[IMDowntimeController _allowedToShowConversationWithHandleIDs:sync:context:participantIDsHash:trackingChat:]_block_invoke", v14, 447, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v17)
    {
      v17(v16);
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v48 = v16;
        _os_log_impl(&dword_1A1FF4000, v18, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }

    }
  }
  v41 = 0u;
  v42 = 0u;
  v39 = 0u;
  v40 = 0u;
  v19 = *(id *)(a1 + 32);
  v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v39, v46, 16);
  if (v20)
  {
    v21 = *(_QWORD *)v40;
LABEL_19:
    v22 = 0;
    while (1)
    {
      if (*(_QWORD *)v40 != v21)
        objc_enumerationMutation(v19);
      if (v5 && (objc_msgSend(v5, "containsObject:", *(_QWORD *)(*((_QWORD *)&v39 + 1) + 8 * v22)) & 1) != 0)
        goto LABEL_36;
      if (v20 == ++v22)
      {
        v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v39, v46, 16);
        if (v20)
          goto LABEL_19;
        break;
      }
    }
  }

  if (*(_QWORD *)(a1 + 40))
  {
    objc_msgSend(*(id *)(a1 + 48), "policyCache");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "contextForParticipantIDsHash:", *(_QWORD *)(a1 + 40));
    v19 = (id)objc_claimAutoreleasedReturnValue();

    if (!v19
      || (objc_msgSend(MEMORY[0x1E0C99E38], "null"),
          v24 = (id)objc_claimAutoreleasedReturnValue(),
          v25 = v19 == v24,
          v24,
          v25))
    {
      v27 = *(_BYTE **)(a1 + 48);
      if (v27[12])
        objc_msgSend(v27, "_doRegisterForScreenTimeNotifications");
      if (!*(_BYTE *)(a1 + 80))
      {
        objc_msgSend(*(id *)(a1 + 48), "policyCache");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "addSentinelContextForParticipantIDsHash:", *(_QWORD *)(a1 + 40));

        objc_msgSend(*(id *)(a1 + 48), "screenTimeDispatchQueue");
        v30 = objc_claimAutoreleasedReturnValue();
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = sub_1A20E407C;
        block[3] = &unk_1E4721330;
        v35 = v6;
        v36 = *(id *)(a1 + 32);
        v33 = *(int8x16_t *)(a1 + 40);
        v31 = (id)v33.i64[0];
        v37 = vextq_s8(v33, v33, 8uLL);
        v38 = *(id *)(a1 + 56);
        dispatch_async(v30, block);

LABEL_36:
        v26 = 1;
        goto LABEL_37;
      }
      objc_msgSend(v6, "allowableByContactsHandles:", *(_QWORD *)(a1 + 32));
      v28 = (void *)objc_claimAutoreleasedReturnValue();

      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v28);
      objc_msgSend(*(id *)(a1 + 48), "initializeContext:participantIDsHash:trackingChat:", v28, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56));
      v26 = objc_msgSend(v28, "allowedByScreenTime");
      v19 = v28;
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v19);
      v26 = objc_msgSend(v19, "allowedByScreenTime");
    }
LABEL_37:

    goto LABEL_38;
  }
  v26 = 1;
LABEL_38:

  return v26;
}

uint64_t sub_1A200DA5C()
{
  if (qword_1ECF12330 != -1)
    dispatch_once(&qword_1ECF12330, &unk_1E471D998);
  return byte_1EE65F3C0;
}

uint64_t sub_1A200DA9C()
{
  void *v0;
  void *v1;
  uint64_t v2;

  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "bundleIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((__IMIsIdentifierInPluginCapableClient(v1) & 1) != 0)
    v2 = 1;
  else
    v2 = IMIsRunningInUnitTesting();

  return v2;
}

_OWORD *sub_1A200DB00(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A200DB10(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A200DB18(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A200DB18(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  sub_1A200A4E0(a1, a1[3]);
  v3 = sub_1A2199B3C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, v3);
  return swift_unknownObjectRelease();
}

unint64_t sub_1A200DB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A2199B84();
  sub_1A219977C();
  v4 = sub_1A2199B9C();
  return sub_1A200DBC4(a1, a2, v4);
}

unint64_t sub_1A200DBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A2199B48() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A2199B48() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1A200DCA4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A2199974();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A21873D0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A2199A28();
  if (!v8)
  {
    sub_1A2199A64();
    __break(1u);
LABEL_17:
    result = sub_1A2199AA0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

id sub_1A200DE7C()
{
  void *v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1A200E9B8(MEMORY[0x1E0DEE9D8]);
  v4 = sub_1A200E9C4(v2);
  sub_1A1FFD920(&qword_1EE65C2A8);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 40) = 0;
  *(_WORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = v3;
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)&v1[OBJC_IVAR___IMKeyTransparencyController_state] = v5;
  sub_1A2199764();
  v6 = objc_allocWithZone(MEMORY[0x1E0DC0948]);
  v7 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithApplication_, v7);

  *(_QWORD *)&v1[OBJC_IVAR___IMKeyTransparencyController_verifier] = v8;
  v15.receiver = v1;
  v15.super_class = (Class)IMKeyTransparencyController;
  v9 = objc_msgSendSuper2(&v15, sel_init);
  v10 = (void *)objc_opt_self();
  v11 = v9;
  v12 = objc_msgSend(v10, sel_sharedController);
  v13 = objc_msgSend(v12, sel_listener);

  objc_msgSend(v13, sel_addHandler_, v11);
  return v11;
}

id sub_1A200DFF8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)IMKeyTransparencyController), sel_init);
  qword_1EE65C348 = (uint64_t)result;
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

void sub_1A200E078(char a1)
{
  id v2;
  __CFString *v3;
  uint64_t inited;
  uint64_t v5;
  void *v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v3 = IMKeyTransparencySelfOptInStateChangedNotification;
  sub_1A1FFD920(&qword_1EE65C3D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A21AF1B0;
  *(_QWORD *)(inited + 32) = sub_1A2199764();
  *(_QWORD *)(inited + 40) = v5;
  *(_BYTE *)(inited + 48) = a1;
  sub_1A200E9D0(inited);
  v6 = (void *)sub_1A2199740();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_postNotificationName_object_, v3, v6);

}

void sub_1A200E1D0(uint64_t a1)
{
  void *v1;
  void *v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unsigned __int8 v14;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;

  v2 = v1;
  v13 = sub_1A2199764();
  sub_1A21999D4();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1A1FFD960((uint64_t)v15), (v5 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_1A1FFDA54((uint64_t)v15);
  if (*((_QWORD *)&v17 + 1))
  {
    sub_1A1FFD920((uint64_t *)&unk_1EE65C2F0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = v13;
      v14 = sub_1A2199764();
      sub_1A21999D4();
      if (*(_QWORD *)(v6 + 16) && (v7 = sub_1A1FFD960((uint64_t)v15), (v8 & 1) != 0))
      {
        sub_1A1FFDAC4(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v16);
      }
      else
      {
        v16 = 0u;
        v17 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1A1FFDA54((uint64_t)v15);
      if (*((_QWORD *)&v17 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
          objc_msgSend(v2, sel_keyTransparencyOptInStateChanged_, v14);
      }
      else
      {
        sub_1A2173D58((uint64_t)&v16);
      }
      return;
    }
  }
  else
  {
    sub_1A2173D58((uint64_t)&v16);
  }
  if (qword_1EE65C430 != -1)
    swift_once();
  v9 = sub_1A21996F8();
  sub_1A200A4C8(v9, (uint64_t)qword_1EE65C410);
  v10 = sub_1A21996E0();
  v11 = sub_1A21998A8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1A1FF4000, v10, v11, "Received setup info but it did not contain KT info", v12, 2u);
    MEMORY[0x1A8583364](v12, -1, -1);
  }

}

void sub_1A200E454(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;

  v3 = a1 & 1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___IMKeyTransparencyController_state);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 40));
  v5 = *(unsigned __int8 *)(v4 + 17);
  *(_BYTE *)(v4 + 17) = a1;
  v6 = *(_BYTE *)(v4 + 16) ^ 1;
  *(_BYTE *)(v4 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 40));
  swift_release();
  if (v5 != v3 || (v6 & 1) != 0)
  {
    if (qword_1EE65C430 != -1)
      swift_once();
    v7 = sub_1A21996F8();
    sub_1A200A4C8(v7, (uint64_t)qword_1EE65C410);
    v8 = sub_1A21996E0();
    v9 = sub_1A219989C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      *(_DWORD *)v10 = 67174913;
      sub_1A2199968();
      *(_WORD *)(v10 + 8) = 1026;
      swift_beginAccess();
      sub_1A2199968();
      _os_log_impl(&dword_1A1FF4000, v8, v9, "Key transparency opt-in state changed to %{BOOL,private}d. Initial load? %{BOOL,public}d", (uint8_t *)v10, 0xEu);
      MEMORY[0x1A8583364](v10, -1, -1);
    }

    sub_1A200E078(a1 & 1);
  }
}

void sub_1A200E600(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1A200E71C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1A200E600(a1, qword_1EE65C330);
}

void sub_1A200E768()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_1A2199740();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

void sub_1A200E7C4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, id);
  id v6;

  v5 = *(void (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, v6);
  swift_release();

}

uint64_t sub_1A200E824(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

double sub_1A200E834@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_1A1FFD960(a1), (v6 & 1) != 0))
  {
    sub_1A1FFDAC4(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_1A200E884(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A1FFD920((uint64_t *)&unk_1EE65C3B0);
  v2 = sub_1A2199A94();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A217FC74(v6, (uint64_t)&v15, (uint64_t *)&unk_1EE65C308);
    v7 = v15;
    v8 = v16;
    result = sub_1A200DB60(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1A200DB00(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A200E9B8(uint64_t a1)
{
  return sub_1A217BFAC(a1, &qword_1EE65C3A0);
}

unint64_t sub_1A200E9C4(uint64_t a1)
{
  return sub_1A217BFAC(a1, &qword_1EE65C398);
}

unint64_t sub_1A200E9D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A1FFD920(&qword_1EE65C390);
  v2 = (_QWORD *)sub_1A2199A94();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1A200DB60(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A200EAE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A200EB00(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1A200EB2C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1A200EB3C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1A200EB4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t DaemonConnection.connect(capabilities:context:contextChanged:)(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  uint64_t v7;
  id v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_BYTE *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = v3;
  swift_bridgeObjectRetain();
  v8 = v3;
  sub_1A21996BC();
  return swift_release();
}

id sub_1A200EE74(void *a1)
{
  id v1;
  id v3;

  v1 = a1;
  sub_1A1FFD920(&qword_1ECF121E0);
  sub_1A21996B0();

  return v3;
}

uint64_t DaemonConnection.onSetupComplete.setter(uint64_t a1)
{
  sub_1A21996B0();
  return sub_1A200EB3C(a1);
}

Swift::Void __swiftcall DaemonConnection.waitForSetup()()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  const char *v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  char isEscapingClosureAtFileLocation;
  char v25;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_isMainThread);
  if ((_DWORD)v3)
  {
    swift_beginAccess();
    sub_1A1FFD920((uint64_t *)&unk_1ECF12158);
    sub_1A2199674();
    v3 = (id)swift_endAccess();
    if (v25 == 1)
    {
      if (qword_1ECF121D0 != -1)
        swift_once();
      v4 = sub_1A21996F8();
      sub_1A200A4C8(v4, (uint64_t)qword_1ECF12660);
      v5 = sub_1A21996E0();
      v6 = sub_1A2199890();
      if (!os_log_type_enabled(v5, v6))
        goto LABEL_16;
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      v8 = "Already invoking setup on this thread, not blocking";
LABEL_15:
      _os_log_impl(&dword_1A1FF4000, v5, v6, v8, v7, 2u);
      MEMORY[0x1A8583364](v7, -1, -1);
LABEL_16:

      return;
    }
  }
  MEMORY[0x1E0C80A78](v3);
  sub_1A21996B0();
  sub_1A1FFD920((uint64_t *)&unk_1ECF121C0);
  sub_1A21996B0();
  v9 = (void (*)(uint64_t))aBlock[0];
  if (aBlock[0])
  {
    if (objc_msgSend(v2, sel_isMainThread))
    {
      if (qword_1ECF121D0 != -1)
        swift_once();
      v10 = sub_1A21996F8();
      sub_1A200A4C8(v10, (uint64_t)qword_1ECF12660);
      v11 = sub_1A21996E0();
      v12 = sub_1A2199890();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1A1FF4000, v11, v12, "Starting to handle setup message", v13, 2u);
        MEMORY[0x1A8583364](v13, -1, -1);
      }

      swift_beginAccess();
      sub_1A1FFD920((uint64_t *)&unk_1ECF12158);
      sub_1A2199680();
      v14 = swift_endAccess();
      v9(v14);
      sub_1A200EB3C((uint64_t)v9);
      swift_beginAccess();
      sub_1A2199680();
      swift_endAccess();
      sub_1A21996B0();
      v5 = sub_1A21996E0();
      v6 = sub_1A2199890();
      if (!os_log_type_enabled(v5, v6))
        goto LABEL_16;
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      v8 = "Finished handling setup message";
      goto LABEL_15;
    }
    sub_1A200EB3C(aBlock[0]);
    if (qword_1ECF121D0 != -1)
      swift_once();
    v15 = sub_1A21996F8();
    sub_1A200A4C8(v15, (uint64_t)qword_1ECF12660);
    v16 = sub_1A21996E0();
    v17 = sub_1A2199890();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1A1FF4000, v16, v17, "Caller needs main queue to wait for setup", v18, 2u);
      MEMORY[0x1A8583364](v18, -1, -1);
    }

    sub_1A200E71C(0, (unint64_t *)&qword_1ECF121E8);
    v19 = sub_1A2199920();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v1;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_1A2172F28;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = (uint64_t)sub_1A200EAE0;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A200EB4C;
    aBlock[3] = (uint64_t)&unk_1E471DF18;
    v22 = _Block_copy(aBlock);
    v23 = v1;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v22);

    _Block_release(v22);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1A200F61C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1A21996F8();
  sub_1A200A568(v3, a2);
  sub_1A200A4C8(v3, (uint64_t)a2);
  sub_1A21996D4();
  return sub_1A21996EC();
}

uint64_t sub_1A200F680(uint64_t a1)
{
  return sub_1A200F61C(a1, qword_1ECF12660);
}

uint64_t sub_1A200F6A4(uint64_t a1)
{
  return sub_1A200F61C(a1, qword_1EE6617D0);
}

uint64_t sub_1A200F6C8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A200DCA4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A1FFDAC4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A1FFDAC4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1A200A548((uint64_t)v12);
  return v7;
}

uint64_t sub_1A200F798(uint64_t a1, uint64_t a2, void *aBlock)
{
  void (*v4)(uint64_t, uint64_t (*)(_QWORD *), uint64_t);
  void *v5;
  uint64_t v6;

  v4 = *(void (**)(uint64_t, uint64_t (*)(_QWORD *), uint64_t))(a1 + 32);
  v5 = _Block_copy(aBlock);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_retain();
  v4(a2, sub_1A200DB10, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_1A200F818(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1A1FFD920(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1A2011E3C()
{
  JUMPOUT(0x1A2011E4CLL);
}

void sub_1A2012A20(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *exc_buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2012710);
  }
  JUMPOUT(0x1A2012A18);
}

void sub_1A20133F8(_Unwind_Exception *exc_buf, int a2)
{
  void *v2;

  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A20131F0);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A2014070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2014150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2014230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2016BB8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2016870);
  }
  _Unwind_Resume(a1);
}

void sub_1A20176F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A2019694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1A20197FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2019E64(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A2019CA4);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A201A8FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A201ADA8(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  id *v24;

  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A201AD1CLL);
  }
  objc_destroyWeak(v24);
  objc_destroyWeak(location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(exc_buf);
}

void sub_1A201BCDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A201CC40(_Unwind_Exception *a1, int a2)
{
  int v2;

  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2)
      JUMPOUT(0x1A201CBD0);
    JUMPOUT(0x1A201CB7CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A201D77C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A201D740);
  }
  _Unwind_Resume(a1);
}

void sub_1A201DC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A201DD24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13, __int128 a14)
{
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  void *v18;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v14, "name");
        v16 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "reason");
        v17 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "userInfo");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(a9) = 138413314;
        *(_QWORD *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(_QWORD *)((char *)&a9 + 14) = v16;
        a12 = 2112;
        a13 = (uint64_t)v17;
        LOWORD(a14) = 2112;
        *(_QWORD *)((char *)&a14 + 2) = v18;
        WORD5(a14) = 2080;
        *(_QWORD *)((char *)&a14 + 12) = "-[IMChatRegistry(Blackhole_Internal) _updateBlackholedChatsExist:]";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A201DCF0);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A20209C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A2022958(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A2024558(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 buf, int a14, __int16 a15, __int16 a16, id a17, __int128 a18)
{
  id v18;
  NSObject *v19;
  id v20;
  id v21;
  void *v22;

  if (a2 == 1)
  {
    v18 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v18, "name");
        v20 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "reason");
        v21 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "userInfo");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v18;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v20;
        a16 = 2112;
        a17 = v21;
        LOWORD(a18) = 2112;
        *(_QWORD *)((char *)&a18 + 2) = v22;
        WORD5(a18) = 2080;
        *(_QWORD *)((char *)&a18 + 12) = "-[IMAccount updateCapabilities:]";
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A202451CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A2024930(_Unwind_Exception *exc_buf, int a2)
{
  int v2;

  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A20248E4);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A20252FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 buf, int a14, __int16 a15, __int16 a16, uint64_t a17, __int128 a18)
{
  id v18;
  NSObject *v19;
  id v20;
  void *v21;
  id v22;

  if (a2 == 1)
  {
    v18 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v18, "name");
        v22 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "reason");
        v20 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "userInfo");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v18;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v22;
        a16 = 2112;
        a17 = (uint64_t)v20;
        LOWORD(a18) = 2112;
        *(_QWORD *)((char *)&a18 + 2) = v21;
        WORD5(a18) = 2080;
        *(_QWORD *)((char *)&a18 + 12) = "-[IMAccount setCurrentAccountStatus:]";
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A2025200);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A20267E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, uint64_t a10, __int16 a11, uint64_t a12, __int16 a13, uint64_t a14, __int16 a15, uint64_t a16, __int16 a17, uint64_t a18)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A2026678);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A2026C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 buf, int a20,__int16 a21,__int16 a22,uint64_t a23,__int128 a24)
{
  id v24;
  NSObject *v25;
  id v26;
  void *v27;
  id v28;

  if (a2 == 1)
  {
    v24 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v24, "name");
        v28 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "reason");
        v26 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "userInfo");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v24;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v28;
        a22 = 2112;
        a23 = (uint64_t)v26;
        LOWORD(a24) = 2112;
        *(_QWORD *)((char *)&a24 + 2) = v27;
        WORD5(a24) = 2080;
        *(_QWORD *)((char *)&a24 + 12) = "-[IMAccount _updateProfileInfo:]";
        _os_log_impl(&dword_1A1FF4000, v25, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A2026AFCLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A20270DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13, __int128 a14)
{
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  void *v18;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v14, "name");
        v16 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "reason");
        v17 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "userInfo");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(a9) = 138413314;
        *(_QWORD *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(_QWORD *)((char *)&a9 + 14) = v16;
        a12 = 2112;
        a13 = (uint64_t)v17;
        LOWORD(a14) = 2112;
        *(_QWORD *)((char *)&a14 + 2) = v18;
        WORD5(a14) = 2080;
        *(_QWORD *)((char *)&a14 + 12) = "-[IMAccount _updateDisplayName:]";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A20270D0);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A2028290(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 buf,int a24,__int16 a25,__int16 a26,id a27,__int128 a28)
{
  id v28;
  NSObject *v29;
  id v30;
  id v31;
  id v32;

  if (a2 == 1)
  {
    v28 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v28, "name");
        v30 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "reason");
        v31 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "userInfo");
        v32 = (id)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v28;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v30;
        a26 = 2112;
        a27 = v31;
        LOWORD(a28) = 2112;
        *(_QWORD *)((char *)&a28 + 2) = v32;
        WORD5(a28) = 2080;
        *(_QWORD *)((char *)&a28 + 12) = "-[IMAccount _loadFromDictionary:force:]";
        _os_log_impl(&dword_1A1FF4000, v29, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A2027618);
  }
  _Unwind_Resume(a1);
}

void sub_1A20283B0(void *exc_buf, int a2)
{
  int v2;

  if (a2 == v2)
  {

    objc_end_catch();
    JUMPOUT(0x1A2028394);
  }
  objc_end_catch();
  JUMPOUT(0x1A20283E4);
}

const __CFString *sub_1A20295FC(int a1)
{
  const __CFString *v1;

  v1 = CFSTR("Unknown");
  if (a1 == 1)
    v1 = CFSTR("Downgraded");
  if (a1 == 2)
    return CFSTR("Upgraded");
  else
    return v1;
}

id sub_1A2029BD8(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(a2, "ID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_stripFZIDPrefix");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IMChatCanonicalIDSIDsForAddress();
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void IMChatCalculateServiceForSendingWithKTData(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, unsigned __int8 a7, unsigned __int8 a8, void *a9, void *a10)
{
  IMChatCalculateServiceForSendingNewComposeMaybeForceWithKTData(a1, a2, a3, a4, a5, 0, 0, 0, a7, a8, a9, a10);
}

void sub_1A2029C64(uint64_t a1, void *a2, int a3, void *a4, void *a5, void *a6, uint64_t a7, int a8)
{
  NSObject *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  const __CFString *v20;
  void *v21;
  char v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  __CFString *v28;
  __CFString *v29;
  BOOL v30;
  NSObject *v31;
  NSObject *v32;
  const __CFString *v33;
  void *v34;
  NSObject *v35;
  const __CFString *v36;
  NSObject *v37;
  const __CFString *v38;
  void *v39;
  char v40;
  void *v41;
  char v42;
  NSObject *v43;
  const __CFString *v44;
  void *v45;
  NSObject *v46;
  const __CFString *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t i;
  __CFString *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  NSObject *v61;
  NSObject *v62;
  NSObject *v63;
  NSObject *v64;
  const __CFString *v65;
  void *v66;
  void *v67;
  NSObject *v68;
  void *v69;
  uint64_t v70;
  __CFString *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  __CFString *v76;
  id v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint8_t buf[4];
  const __CFString *v83;
  __int16 v84;
  void *v85;
  __int16 v86;
  uint64_t v87;
  _BYTE v88[128];
  uint64_t v89;

  v89 = *MEMORY[0x1E0C80C00];
  v73 = a2;
  v74 = a4;
  v77 = a5;
  v75 = a6;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Received kt data in serviceForSending", buf, 2u);
    }

  }
  if (!objc_msgSend(v77, "count") && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Received no kt data in serviceForSending", buf, 2u);
    }

  }
  +[IMKeyTransparencyController sharedController](IMKeyTransparencyController, "sharedController");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setKTVerifierResultsFromIDSInfoResultsDictionary:", v77);

  +[IMKeyTransparencyController sharedController](IMKeyTransparencyController, "sharedController");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setKTVerifierResultsFromIDSInfoResultsDictionary:", v75);

  objc_msgSend(*(id *)(a1 + 32), "account");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "service");
  v76 = (__CFString *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(*(id *)(a1 + 32), "suppressAccountRetargetingForNamedGroupConversation"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        v20 = *(const __CFString **)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v83 = v20;
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "(-refreshServiceForSending) bailing, don't downgrade named iMessage group chat: %@", buf, 0xCu);
      }

    }
    +[IMService iMessageService](IMServiceImpl, "iMessageService");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = -[__CFString isEqual:](v76, "isEqual:", v21);

    if ((v22 & 1) == 0)
    {
      v23 = *(void **)(a1 + 32);
      +[IMService iMessageService](IMServiceImpl, "iMessageService");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "_targetToService:newComposition:", v24, 0);

    }
    goto LABEL_108;
  }
  if (objc_msgSend(MEMORY[0x1E0D39AF8], "isInternationalSpamFilteringEnabled"))
  {
    objc_msgSend(*(id *)(a1 + 32), "valueForChatProperty:", CFSTR("smsHandshakeState"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = v25;
    if (a8 == 5 && (int)objc_msgSend(v25, "intValue") <= 0)
    {
      objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "trackSpamEvent:", 2);

      objc_msgSend(*(id *)(a1 + 32), "setValue:forChatProperty:", &unk_1E475EC58, CFSTR("smsHandshakeState"));
    }

  }
  +[IMService iMessageService](IMServiceImpl, "iMessageService");
  v28 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (v76 == v28)
  {

  }
  else
  {
    +[IMService smsService](IMServiceImpl, "smsService");
    v29 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v30 = v76 == v29;

    if (!v30)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v31 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v83 = v76;
          _os_log_impl(&dword_1A1FF4000, v31, OS_LOG_TYPE_INFO, "(-refreshServiceForSending) bailing, current account once we got the IDS callback service isn't useful: %@", buf, 0xCu);
        }

      }
      goto LABEL_108;
    }
  }
  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "setHasHadSuccessfulQuery:", 1);
  if (objc_msgSend(*(id *)(a1 + 32), "isDowngraded"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v32 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        v33 = CFSTR("NO");
        v34 = *(void **)(a1 + 32);
        if (a3)
          v33 = CFSTR("YES");
        *(_DWORD *)buf = 138412546;
        v83 = v33;
        v84 = 2112;
        v85 = v34;
        _os_log_impl(&dword_1A1FF4000, v32, OS_LOG_TYPE_INFO, "Chat is downgraded, overriding IDS: allAddressesiMessageCapable(%@), chat: %@", buf, 0x16u);
      }

    }
    a3 = 0;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "shouldForceToSMS"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        v36 = CFSTR("NO");
        if (a3)
          v36 = CFSTR("YES");
        *(_DWORD *)buf = 138412290;
        v83 = v36;
        _os_log_impl(&dword_1A1FF4000, v35, OS_LOG_TYPE_INFO, "Forcing SMS: allAddressesiMessageCapable(%@)", buf, 0xCu);
      }

    }
    a3 = 0;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "forceMMS"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v37 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
      {
        v38 = CFSTR("NO");
        if (a3)
          v38 = CFSTR("YES");
        *(_DWORD *)buf = 138412290;
        v83 = v38;
        _os_log_impl(&dword_1A1FF4000, v37, OS_LOG_TYPE_INFO, "Forcing MMS: allAddressesiMessageCapable(%@)", buf, 0xCu);
      }

    }
    a3 = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "account");
  v71 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (!a3)
  {
    +[IMService smsService](IMServiceImpl, "smsService");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    if ((-[__CFString isEqual:](v76, "isEqual:", v41) & 1) != 0)
    {
      v42 = -[__CFString _isUsableForSending](v71, "_isUsableForSending");

      if ((v42 & 1) != 0)
        goto LABEL_61;
    }
    else
    {

    }
    v80 = 0u;
    v81 = 0u;
    v78 = 0u;
    v79 = 0u;
    objc_msgSend(*(id *)(a1 + 32), "participants", v71, v73);
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v78, v88, 16);
    if (v51)
    {
      v52 = *(_QWORD *)v79;
      v53 = *MEMORY[0x1E0D39C40];
      while (2)
      {
        for (i = 0; i != v51; ++i)
        {
          if (*(_QWORD *)v79 != v52)
            objc_enumerationMutation(v50);
          v55 = *(__CFString **)(*((_QWORD *)&v78 + 1) + 8 * i);
          v56 = (void *)MEMORY[0x1E0D39AF8];
          -[__CFString ID](v55, "ID");
          v57 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v56, "mapID:usingKey:", v57, v53);
          v58 = (void *)objc_claimAutoreleasedReturnValue();

          if (IMStringIsEmail())
          {
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v62 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v62, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v83 = v55;
                _os_log_impl(&dword_1A1FF4000, v62, OS_LOG_TYPE_INFO, "%@ was an email, so not retargeting", buf, 0xCu);
              }

            }
            goto LABEL_94;
          }

        }
        v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v78, v88, 16);
        if (v51)
          continue;
        break;
      }
    }

    v59 = (void *)MEMORY[0x1E0D39AF8];
    objc_msgSend(*(id *)(a1 + 32), "lastAddressedHandleID");
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v59, "mapID:usingKey:", v60, *MEMORY[0x1E0D39C48]);
    v50 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v50)
    {
      -[__CFString displayName](v71, "displayName");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
    }
    if (IMStringIsEmail())
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v61 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v61, OS_LOG_TYPE_INFO, "my caller id was an email, so not retargeting", buf, 2u);
        }

      }
LABEL_94:

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v63 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v63, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v63, OS_LOG_TYPE_INFO, "refresh, current service was iMessage, and a recipient/me was an email, so not retargeting", buf, 2u);
        }

      }
    }
    else
    {

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v64 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
        {
          v65 = *(const __CFString **)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          v83 = v65;
          _os_log_impl(&dword_1A1FF4000, v64, OS_LOG_TYPE_INFO, "refresh, will retarget chat to SMS/MMS: %@", buf, 0xCu);
        }

      }
      v66 = *(void **)(a1 + 32);
      +[IMService smsService](IMServiceImpl, "smsService");
      v67 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v66, "_targetToService:newComposition:", v67, 0);

    }
    goto LABEL_103;
  }
  +[IMService iMessageService](IMServiceImpl, "iMessageService");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  if ((-[__CFString isEqual:](v76, "isEqual:", v39) & 1) != 0)
  {
    v40 = -[__CFString _isUsableForSending](v71, "_isUsableForSending");

    if ((v40 & 1) == 0)
      goto LABEL_68;
LABEL_61:
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
      {
        v44 = CFSTR("NO");
        v45 = *(void **)(a1 + 32);
        if (a3)
          v44 = CFSTR("YES");
        *(_DWORD *)buf = 138412546;
        v83 = v44;
        v84 = 2112;
        v85 = v45;
        _os_log_impl(&dword_1A1FF4000, v43, OS_LOG_TYPE_INFO, "Nothing to do, were on the service we wanted: allAddressesiMessageCapable(%@): chat: %@", buf, 0x16u);
      }

    }
    goto LABEL_103;
  }

LABEL_68:
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v46 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
    {
      v47 = *(const __CFString **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v83 = v47;
      _os_log_impl(&dword_1A1FF4000, v46, OS_LOG_TYPE_INFO, "Targeting to iMessage because we weren't iMessage before: %@", buf, 0xCu);
    }

  }
  v48 = *(void **)(a1 + 32);
  +[IMService iMessageService](IMServiceImpl, "iMessageService", v71, v73);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "_targetToService:newComposition:", v49, 0);

LABEL_103:
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMEventCategory();
    v68 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v68, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "account");
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      v70 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412802;
      v83 = v71;
      v84 = 2112;
      v85 = v69;
      v86 = 2112;
      v87 = v70;
      _os_log_impl(&dword_1A1FF4000, v68, OS_LOG_TYPE_INFO, "(-refreshServiceForSending) Old account: %@, new account: %@, chat: %@", buf, 0x20u);

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "setHasRefreshedServiceForSending:", 1, v71);
  objc_msgSend(*(id *)(a1 + 32), "_updateHybridGroupStateWithPerParticipantIDSStatus:", v74);

LABEL_108:
}

void IMChatCalculateServiceForSendingNewComposeMaybeForceWithKTData(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, char a7, uint64_t a8, unsigned __int8 a9, unsigned __int8 a10, void *a11, void *a12)
{
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  int v26;
  void *v27;
  int v28;
  NSObject *v29;
  const __CFString *v30;
  const __CFString *v31;
  _BOOL8 v32;
  void *v33;
  uint64_t v34;
  int v35;
  NSObject *v36;
  const __CFString *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  NSObject *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  NSObject *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  NSObject *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  BOOL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  _QWORD v77[4];
  id v78;
  id v79;
  id v80;
  id v81;
  _BYTE *v82;
  _QWORD v83[4];
  id v84;
  uint8_t v85[16];
  _QWORD aBlock[4];
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  _BYTE *v93;
  BOOL v94;
  char v95;
  BOOL v96;
  id v97;
  _QWORD v98[4];
  id v99;
  _BYTE buf[24];
  char v101;
  uint64_t v102;

  v102 = *MEMORY[0x1E0C80C00];
  v72 = a1;
  v74 = a2;
  v71 = a3;
  v19 = a4;
  v76 = a5;
  v73 = a11;
  v75 = a12;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(a2) = objc_msgSend(v20, "isServiceForSendingRefactorEnabled");

  if ((_DWORD)a2)
  {
    v21 = objc_alloc_init(MEMORY[0x1E0D39A30]);
    objc_msgSend(v74, "chatIdentifier");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setChatIdentifier:", v22);

    objc_msgSend(v21, "setChatStyle:", objc_msgSend(v74, "chatStyle"));
    objc_msgSend(v19, "_stripFZIDPrefix");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setSenderLastAddressedHandle:", v23);

    objc_msgSend(v21, "setSenderLastAddressedSIMID:", v76);
    objc_msgSend(v21, "setForceMMS:", a6);
    objc_msgSend(v21, "setShouldForceServerStatusRefresh:", a8);
    objc_msgSend(v21, "setConversationWasDowngraded:", a9);
    objc_msgSend(v21, "setHasConversationHistory:", a10);
    objc_msgSend(v73, "internalName");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setLastUsedServiceName:", v24);

    +[IMServiceReachabilityController sharedController](IMServiceReachabilityController, "sharedController");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v98[0] = MEMORY[0x1E0C809B0];
    v98[1] = 3221225472;
    v98[2] = sub_1A202C600;
    v98[3] = &unk_1E471E210;
    v99 = v75;
    objc_msgSend(v25, "calculateServiceForSendingToHandles:withContext:completionBlock:", v72, v21, v98);

    goto LABEL_28;
  }
  v26 = IMSMSFallbackEnabled();
  +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = objc_msgSend(v27, "networkDataAvailable");

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      v30 = CFSTR("NO");
      if (v26)
        v31 = CFSTR("YES");
      else
        v31 = CFSTR("NO");
      if (v28)
        v30 = CFSTR("YES");
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v31;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v30;
      _os_log_impl(&dword_1A1FF4000, v29, OS_LOG_TYPE_INFO, "isSMSFallBackEnabled %@, Network data available: %@", buf, 0x16u);
    }

  }
  v32 = +[IMServiceImpl smsEnabled](IMServiceImpl, "smsEnabled");
  v70 = +[IMServiceImpl mmsEnabledforPhoneNumber:simID:](IMServiceImpl, "mmsEnabledforPhoneNumber:simID:", v19, v76);
  if (!(v28 | v26 ^ 1)
    || !+[IMServiceImpl iMessageEnabledForSenderLastAddressedHandle:simID:previousService:](IMServiceImpl, "iMessageEnabledForSenderLastAddressedHandle:simID:previousService:", v19, v76, v73))
  {
    v35 = 0;
LABEL_20:
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
      {
        v37 = CFSTR("NO");
        if (v35)
          v37 = CFSTR("YES");
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v37;
        _os_log_impl(&dword_1A1FF4000, v36, OS_LOG_TYPE_INFO, "IMChatCalculateServiceForSending iMessage not available (%@) or no addresses, bailing", buf, 0xCu);
      }

    }
    if (v75)
    {
      +[IMService smsService](IMServiceImpl, "smsService");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *, _QWORD, void *, void *, void *, uint64_t, _QWORD))v75 + 2))(v75, v38, 0, v39, v40, v41, 1, 0);

    }
    goto LABEL_28;
  }
  if (!objc_msgSend(v72, "count"))
  {
    v35 = 1;
    goto LABEL_20;
  }
  if (objc_msgSend(MEMORY[0x1E0D39AF8], "isInternationalSpamFilteringEnabled")
    && objc_msgSend(v72, "count") == 1)
  {
    v97 = v19;
    IMChatGetHandleForNilSender(&v97, v76);
    v69 = v97;

    objc_msgSend(v72, "firstObject");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    if ((a9 & 1) != 0)
    {
      v34 = 1;
    }
    else
    {
      objc_msgSend(v73, "name");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend(v42, "isEqualToString:", *MEMORY[0x1E0D38F58]);

    }
    if (objc_msgSend(MEMORY[0x1E0D39AF8], "shouldDowngradeToRecipient:fromSender:ifCapableOfSMS:withConversationDowngradeState:andConversationHistoryState:", v33, v69, v32, v34, a10))
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v43 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v43, OS_LOG_TYPE_INFO, "Detected spam-filtered recipient and sender combination; downgrading conversation",
            buf,
            2u);
        }

      }
      if (v75)
      {
        +[IMService smsService](IMServiceImpl, "smsService");
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *, _QWORD, void *, void *, void *, uint64_t, uint64_t))v75 + 2))(v75, v44, 0, v45, v46, v47, 1, 5);

      }
      v19 = v69;
      goto LABEL_28;
    }

    v19 = v69;
  }
  if ((_DWORD)a6)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v48 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v48, OS_LOG_TYPE_INFO, "IMChatCalculateServiceForSending forcing MMS", buf, 2u);
      }

    }
    if (v75)
    {
      +[IMService smsService](IMServiceImpl, "smsService");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *, _QWORD, void *, void *, void *, uint64_t, _QWORD))v75 + 2))(v75, v49, 0, v50, v51, v52, 1, 0);

    }
  }
  else
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x2020000000;
    v101 = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = sub_1A202C91C;
    aBlock[3] = &unk_1E471E288;
    v53 = v72;
    v87 = v53;
    v54 = v71;
    v88 = v54;
    v89 = v73;
    v93 = buf;
    v94 = v32;
    v92 = v75;
    v95 = a7;
    v96 = v70;
    v19 = v19;
    v90 = v19;
    v91 = v76;
    v55 = _Block_copy(aBlock);
    v56 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithArray:", v53);
    v57 = v56;
    if (v54)
      objc_msgSend(v56, "addObject:", v54);
    if ((_DWORD)a8)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMEventCategory();
        v58 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v58, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v85 = 0;
          _os_log_impl(&dword_1A1FF4000, v58, OS_LOG_TYPE_INFO, "NewCompose: Last sent message was not delivered, force ID status refresh with the server", v85, 2u);
        }

      }
      objc_msgSend(MEMORY[0x1E0D34D80], "refreshIDInfo");
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v59, "setForceRefresh:", 1);
      v60 = (void *)MEMORY[0x1E0D39880];
      IMServiceNameForCanonicalIDSAddresses();
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      v62 = MEMORY[0x1E0C80D38];
      v63 = MEMORY[0x1E0C80D38];
      v83[0] = MEMORY[0x1E0C809B0];
      v83[1] = 3221225472;
      v83[2] = sub_1A202D84C;
      v83[3] = &unk_1E471E2B0;
      v84 = v55;
      objc_msgSend(v60, "idInfoForDestinations:service:fromID:infoTypes:options:listenerID:queue:completionBlock:", v57, v61, v19, 2, v59, CFSTR("__kIMChatServiceForSendingIDSQueryControllerListenerID"), v62, v83);

    }
    else
    {
      v64 = (void *)MEMORY[0x1E0D39880];
      IMServiceNameForCanonicalIDSAddresses();
      v65 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D34D80], "currentIDInfo");
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      v67 = MEMORY[0x1E0C80D38];
      v68 = MEMORY[0x1E0C80D38];
      v77[0] = MEMORY[0x1E0C809B0];
      v77[1] = 3221225472;
      v77[2] = sub_1A202DA44;
      v77[3] = &unk_1E471E2D8;
      v81 = v55;
      v82 = buf;
      v78 = v57;
      v79 = v53;
      v80 = v19;
      objc_msgSend(v64, "idInfoForDestinations:service:fromID:infoTypes:options:listenerID:queue:completionBlock:", v78, v65, v80, 2, v66, CFSTR("__kIMChatServiceForSendingIDSQueryControllerListenerID"), v67, v77);

      v59 = v81;
    }

    _Block_object_dispose(buf, 8);
  }
LABEL_28:

}

uint64_t _IMChatServiceForSendingAvailabilityErrorFromReachabilityResults(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v1 = a1;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = 0;
    v16 = 0;
    v6 = 0;
    v7 = *(_QWORD *)v18;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v18 != v7)
          objc_enumerationMutation(v1);
        v9 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
        if (objc_msgSend(v9, "error") == 1)
          ++v4;
        if (objc_msgSend(v9, "error") == 3)
        {
          ++v5;
          objc_msgSend(v9, "service");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = v1;
          v12 = objc_msgSend(v10, "isEqualToString:", *MEMORY[0x1E0D38F68]);

          v16 |= v12;
          v1 = v11;
        }
        v13 = objc_msgSend(v9, "error");
        if (objc_msgSend(v9, "error") == 5)
        {

          v14 = 5;
          goto LABEL_24;
        }
        v6 |= v13 == 6;
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      if (v3)
        continue;
      break;
    }

    if (v4 && v4 == objc_msgSend(v1, "count"))
    {
      v14 = 1;
      goto LABEL_24;
    }
    if ((v16 & 1) != 0)
      goto LABEL_21;
  }
  else
  {

    v5 = 0;
    v6 = 0;
  }
  if (v5 == objc_msgSend(v1, "count") - 1)
  {
    v14 = 2;
    goto LABEL_24;
  }
LABEL_21:
  if ((v6 & 1) != 0)
    v14 = 3;
  else
    v14 = 0;
LABEL_24:

  return v14;
}

void sub_1A202C600(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;

  v10 = a2;
  objc_msgSend(v10, "bestResult");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(v10, "bestResult");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "service");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[IMService serviceWithName:](IMService, "serviceWithName:", v5);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v10, "resultsByAccountID");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "allValues");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    _IMChatServiceForSendingAvailabilityErrorFromReachabilityResults(v5);
  }

  v6 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(v10, "resultsForServiceName:", *MEMORY[0x1E0D38F68]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "firstObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    objc_msgSend(v8, "ktData");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = sub_1A202C7BC;
    v11[3] = &unk_1E471E1E8;
    v12 = v6;
    objc_msgSend(v9, "enumerateKeysAndObjectsUsingBlock:", v11);

    objc_msgSend(v8, "didCheckServer");
    objc_msgSend(v8, "allAreReachable");

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1A202C7BC(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;

  v5 = (void *)MEMORY[0x1E0CB37E8];
  v6 = a2;
  objc_msgSend(v5, "numberWithInteger:", objc_msgSend(a3, "status"));
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v7, v6);

}

void IMChatGetHandleForNilSender(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = a2;
  if (!*a1)
  {
    v11 = v3;
    +[IMService iMessageService](IMServiceImpl, "iMessageService");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    IMPreferredAccountForService(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "displayName");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    *a1 = v6;

    v3 = v11;
    if (!v6)
    {
      v7 = objc_msgSend(v11, "length");
      v3 = v11;
      if (v7)
      {
        v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D34358]), "initWithService:", CFSTR("com.apple.madrid"));
        objc_msgSend(v8, "accountMatchingSimIdentifier:", v11);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "aliasStrings");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "firstObject");
        *a1 = (id)objc_claimAutoreleasedReturnValue();

        v3 = v11;
      }
    }
  }

}

uint64_t sub_1A202C91C(uint64_t a1, void *a2, unsigned int a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  const __CFString *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  char v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  const __CFString *v29;
  char v30;
  NSObject *v31;
  uint64_t v32;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  uint64_t v38;
  void *v39;
  NSObject *v40;
  const __CFString *v41;
  uint64_t v42;
  _QWORD *v43;
  unsigned int v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  __CFString *v50;
  uint64_t v51;
  _QWORD block[4];
  id v53;
  id v54;
  id v55;
  id v56;
  char v57;
  char v58;
  _QWORD v59[4];
  id v60;
  id v61;
  id v62;
  id v63;
  char v64;
  _QWORD v65[4];
  id v66;
  id v67;
  id v68;
  id v69;
  char v70;
  _QWORD v71[4];
  id v72;
  id v73;
  id v74;
  id v75;
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint8_t buf[4];
  const __CFString *v82;
  __int16 v83;
  void *v84;
  __int16 v85;
  uint64_t v86;
  _BYTE v87[128];
  uint64_t v88;
  _QWORD v89[4];

  v89[1] = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = v5;
  v51 = a1;
  v45 = a3;
  if (v5 && objc_msgSend(v5, "count"))
  {
    v7 = 1;
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "IDS cache did not return any results", buf, 2u);
    }

    v7 = 0;
    a1 = v51;
  }
  else
  {
    v7 = 0;
  }
  v50 = (__CFString *)objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  v48 = (void *)objc_opt_new();
  v47 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithDictionary:", v6);
  if (*(_QWORD *)(v51 + 40))
  {
    objc_msgSend(v6, "objectForKey:");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)v9;
    if (v9)
    {
      v88 = *(_QWORD *)(v51 + 40);
      v89[0] = v9;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v89, &v88, 1);
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v47, "removeObjectForKey:", *(_QWORD *)(v51 + 40));
    }
    else
    {
      v46 = 0;
    }

  }
  else
  {
    v46 = 0;
  }
  if (objc_msgSend(v47, "count"))
  {
    v11 = v47;

    if (*(_QWORD *)(v51 + 40))
      -[__CFString removeObject:](v50, "removeObject:");
    v12 = v11;
  }
  else
  {
    v12 = v6;
  }
  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  v49 = v12;
  objc_msgSend(v12, "allKeys");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v77, v87, 16);
  if (v14)
  {
    v15 = *(_QWORD *)v78;
    while (2)
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v78 != v15)
          objc_enumerationMutation(v13);
        v17 = *(const __CFString **)(*((_QWORD *)&v77 + 1) + 8 * i);
        -[__CFString removeObject:](v50, "removeObject:", v17);
        objc_msgSend(v49, "objectForKey:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = objc_msgSend(v18, "status");
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v48, "setObject:forKeyedSubscript:", v20, v17);

        if (v19)
        {
          if (v19 == 2)
          {
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v25 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v82 = v17;
                _os_log_impl(&dword_1A1FF4000, v25, OS_LOG_TYPE_INFO, "Destination is invalid: %@", buf, 0xCu);
              }

            }
LABEL_48:

            v7 = 0;
            goto LABEL_49;
          }
          if ((v7 & 1) == 0)
            goto LABEL_48;
        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v82 = v17;
              _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Destination is unknown: %@", buf, 0xCu);
            }

          }
          v22 = *(void **)(v51 + 48);
          if (!v22)
            goto LABEL_48;
          +[IMService iMessageService](IMServiceImpl, "iMessageService");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v24 = objc_msgSend(v22, "isEqual:", v23);

          if ((v24 & 1) == 0)
          {
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v26 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_1A1FF4000, v26, OS_LOG_TYPE_INFO, "Previous service was not imessage, saying we aren't iMessage capable", buf, 2u);
              }

            }
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v51 + 80) + 8) + 24) = 1;
            goto LABEL_48;
          }
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v51 + 80) + 8) + 24) = 1;
          if ((v7 & 1) == 0)
            goto LABEL_48;
        }

        v7 = 1;
      }
      v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v77, v87, 16);
      if (v14)
        continue;
      break;
    }
  }
LABEL_49:

  if (-[__CFString count](v50, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v82 = v50;
        _os_log_impl(&dword_1A1FF4000, v27, OS_LOG_TYPE_INFO, "IDS didn't give us back all the results we asked about: %@", buf, 0xCu);
      }

    }
    v7 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      v29 = CFSTR("NO");
      if ((_DWORD)v7)
        v29 = CFSTR("YES");
      *(_DWORD *)buf = 138412546;
      v82 = v29;
      v83 = 2112;
      v84 = v49;
      _os_log_impl(&dword_1A1FF4000, v28, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@): ", buf, 0x16u);
    }

  }
  if (*(_QWORD *)(v51 + 48))
    v30 = 1;
  else
    v30 = v7;
  if ((v30 & 1) == 0)
  {
    if (*(_BYTE *)(v51 + 88))
    {
      if (!*(_BYTE *)(v51 + 89) || *(_BYTE *)(v51 + 90))
        goto LABEL_65;
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v31 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412802;
          v82 = CFSTR("NO");
          v83 = 2112;
          v84 = v48;
          v85 = 2048;
          v86 = 3;
          _os_log_impl(&dword_1A1FF4000, v31, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): Not all iMessageable, email recipients, no MMS", buf, 0x20u);
        }

      }
      if (*(_QWORD *)(v51 + 72))
      {
        if ((objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread") & 1) != 0)
        {
          v32 = *(_QWORD *)(v51 + 72);
          +[IMService smsService](IMServiceImpl, "smsService");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          (*(void (**)(uint64_t, void *, _QWORD, void *, void *, void *, _QWORD, uint64_t))(v32 + 16))(v32, v33, 0, v48, v49, v46, v45, 3);
          goto LABEL_111;
        }
        v65[0] = MEMORY[0x1E0C809B0];
        v65[1] = 3221225472;
        v65[2] = sub_1A202D70C;
        v65[3] = &unk_1E471E238;
        v43 = v65;
        v69 = *(id *)(v51 + 72);
        v66 = v48;
        v67 = v49;
        v68 = v46;
        v70 = v45;
        dispatch_async(MEMORY[0x1E0C80D38], v65);

        goto LABEL_113;
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v34 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412802;
          v82 = CFSTR("NO");
          v83 = 2112;
          v84 = v48;
          v85 = 2048;
          v86 = 2;
          _os_log_impl(&dword_1A1FF4000, v34, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): No iMessage, no SMS, !allAddressesiMessageCapable", buf, 0x20u);
        }

      }
      if (*(_QWORD *)(v51 + 72))
      {
        if ((objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread") & 1) != 0)
        {
          v35 = *(_QWORD *)(v51 + 72);
          +[IMService smsService](IMServiceImpl, "smsService");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          (*(void (**)(uint64_t, void *, _QWORD, void *, void *, void *, _QWORD, uint64_t))(v35 + 16))(v35, v33, 0, v48, v49, v46, v45, 2);
          goto LABEL_111;
        }
        v71[0] = MEMORY[0x1E0C809B0];
        v71[1] = 3221225472;
        v71[2] = sub_1A202D6A8;
        v71[3] = &unk_1E471E238;
        v43 = v71;
        v75 = *(id *)(v51 + 72);
        v72 = v48;
        v73 = v49;
        v74 = v46;
        v76 = v45;
        dispatch_async(MEMORY[0x1E0C80D38], v71);

LABEL_113:
        v7 = 0;
        goto LABEL_114;
      }
    }
    v7 = 0;
    goto LABEL_116;
  }
LABEL_65:
  if ((unint64_t)objc_msgSend(*(id *)(v51 + 32), "count") >= 2)
  {
    if ((v7 & 1) != 0)
      +[IMService iMessageService](IMServiceImpl, "iMessageService");
    else
      +[IMService smsService](IMServiceImpl, "smsService");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = objc_msgSend(v33, "maxChatParticipantsForHandle:simID:", *(_QWORD *)(v51 + 56), *(_QWORD *)(v51 + 64));
    if (objc_msgSend(*(id *)(v51 + 32), "count") > v36)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v37 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412802;
          v82 = CFSTR("NO");
          v83 = 2112;
          v84 = v48;
          v85 = 2048;
          v86 = 1;
          _os_log_impl(&dword_1A1FF4000, v37, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): Too many recipients", buf, 0x20u);
        }

      }
      if (*(_QWORD *)(v51 + 72))
      {
        if ((objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread") & 1) != 0)
        {
          v38 = *(_QWORD *)(v51 + 72);
          +[IMService smsService](IMServiceImpl, "smsService");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          (*(void (**)(uint64_t, void *, _QWORD, void *, void *, void *, _QWORD, uint64_t))(v38 + 16))(v38, v39, 0, v48, v49, v46, v45, 1);
        }
        else
        {
          v59[0] = MEMORY[0x1E0C809B0];
          v59[1] = 3221225472;
          v59[2] = sub_1A202D770;
          v59[3] = &unk_1E471E238;
          v63 = *(id *)(v51 + 72);
          v60 = v48;
          v61 = v49;
          v62 = v46;
          v64 = v45;
          dispatch_async(MEMORY[0x1E0C80D38], v59);

          v39 = v63;
        }

      }
      goto LABEL_111;
    }

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v40 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
    {
      v41 = CFSTR("NO");
      if ((_DWORD)v7)
        v41 = CFSTR("YES");
      *(_DWORD *)buf = 138412546;
      v82 = v41;
      v83 = 2112;
      v84 = v48;
      _os_log_impl(&dword_1A1FF4000, v40, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@): Last chance to choose service", buf, 0x16u);
    }

  }
  if (*(_QWORD *)(v51 + 72))
  {
    if ((objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread") & 1) != 0)
    {
      v42 = *(_QWORD *)(v51 + 72);
      if ((v7 & 1) != 0)
      {
        +[IMService iMessageService](IMServiceImpl, "iMessageService");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, void *, uint64_t, void *, void *, void *, _QWORD, _QWORD))(v42 + 16))(v42, v33, 1, v48, v49, v46, v45, 0);
        v7 = 1;
LABEL_115:

        goto LABEL_116;
      }
      +[IMService smsService](IMServiceImpl, "smsService");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *, _QWORD, void *, void *, void *, _QWORD, _QWORD))(v42 + 16))(v42, v33, 0, v48, v49, v46, v45, 0);
LABEL_111:
      v7 = 0;
      goto LABEL_115;
    }
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A202D7D4;
    block[3] = &unk_1E471E260;
    v43 = block;
    v56 = *(id *)(v51 + 72);
    v57 = v7;
    v53 = v48;
    v54 = v49;
    v55 = v46;
    v58 = v45;
    dispatch_async(MEMORY[0x1E0C80D38], block);

LABEL_114:
    v33 = (void *)v43[7];
    goto LABEL_115;
  }
LABEL_116:

  return v7;
}

void sub_1A202D6A8(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 56);
  +[IMService smsService](IMServiceImpl, "smsService");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(v2 + 16))(v2, v3, 0, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 64), 2);

}

void sub_1A202D70C(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 56);
  +[IMService smsService](IMServiceImpl, "smsService");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(v2 + 16))(v2, v3, 0, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 64), 3);

}

void sub_1A202D770(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 56);
  +[IMService smsService](IMServiceImpl, "smsService");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(v2 + 16))(v2, v3, 0, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 64), 1);

}

void sub_1A202D7D4(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 64))
    +[IMService iMessageService](IMServiceImpl, "iMessageService");
  else
    +[IMService smsService](IMServiceImpl, "smsService");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t))(v1 + 16))(v1);

}

void sub_1A202D84C(uint64_t a1, void *a2, void *a3)
{
  __CFString *v5;
  __CFString *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  int v10;
  const __CFString *v11;
  int v12;
  const __CFString *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v7 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v7)
    {
      OSLogHandleForIMEventCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v12 = 138412290;
        v13 = v6;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Error with IDSIDQueryController query: %@", (uint8_t *)&v12, 0xCu);
      }
LABEL_15:

    }
  }
  else
  {
    if (v7)
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v12 = 138412290;
        v13 = v5;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "IDS force refresh server status complete: %@", (uint8_t *)&v12, 0xCu);
      }

    }
    v10 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v11 = CFSTR("NO");
        if (v10)
          v11 = CFSTR("YES");
        v12 = 138412290;
        v13 = v11;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Finished evaluating based on force refresh: allAddressesiMessageCapable(%@)", (uint8_t *)&v12, 0xCu);
      }
      goto LABEL_15;
    }
  }

}

void sub_1A202DA44(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  int v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  _QWORD v15[4];
  id v16;
  uint8_t buf[4];
  id v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v7 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      v18 = v5;
      v19 = 2112;
      v20 = v6;
      _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Finished calculating cached values: %@, error: %@", buf, 0x16u);
    }

  }
  if (v7 && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "NewCompose: Cache said we were capable of iMessage, not querying", buf, 2u);
      }

    }
  }
  else
  {
    v9 = (void *)MEMORY[0x1E0D39880];
    v10 = *(_QWORD *)(a1 + 32);
    IMServiceNameForCanonicalIDSAddresses();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = *(_QWORD *)(a1 + 48);
    objc_msgSend(MEMORY[0x1E0D34D80], "refreshIDInfo");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = sub_1A202DCA0;
    v15[3] = &unk_1E471E2B0;
    v16 = *(id *)(a1 + 56);
    objc_msgSend(v9, "idInfoForDestinations:service:fromID:infoTypes:options:listenerID:queue:completionBlock:", v10, v11, v12, 2, v13, CFSTR("__kIMChatServiceForSendingIDSQueryControllerListenerID"), MEMORY[0x1E0C80D38], v15);

  }
}

void sub_1A202DCA0(uint64_t a1, void *a2, void *a3)
{
  __CFString *v5;
  id v6;
  NSObject *v7;
  int v8;
  NSObject *v9;
  const __CFString *v10;
  int v11;
  const __CFString *v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v11 = 138412546;
      v12 = v5;
      v13 = 2112;
      v14 = v6;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "IDS refresh server status complete: %@, error: %@", (uint8_t *)&v11, 0x16u);
    }

  }
  v8 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = CFSTR("NO");
      if (v8)
        v10 = CFSTR("YES");
      v11 = 138412290;
      v12 = v10;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Finished evaluating based on refresh: allAddressesiMessageCapable(%@)", (uint8_t *)&v11, 0xCu);
    }

  }
}

void IMChatCalculateServiceForSendingNewComposeMaybeForce(void *a1, void *a2, void *a3, void *a4, uint64_t a5, char a6, unsigned int a7, unsigned __int8 a8, unsigned __int8 a9, void *a10, void *a11)
{
  id v18;
  id v19;
  _QWORD v21[4];
  id v22;

  v18 = a11;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = sub_1A202DF20;
  v21[3] = &unk_1E471E300;
  v22 = v18;
  v19 = v18;
  IMChatCalculateServiceForSendingNewComposeMaybeForceWithKTData(a1, a2, a3, a3, a4, a5, a6, a7, a8, a9, a10, v21);

}

void sub_1A202DF20(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  id v10;
  id v11;
  id v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  id v17;

  v17 = a2;
  v10 = a4;
  v11 = a5;
  v12 = a6;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isServiceForSendingRefactorEnabled");

  if ((v14 & 1) == 0)
  {
    +[IMKeyTransparencyController sharedController](IMKeyTransparencyController, "sharedController");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setKTVerifierResultsFromIDSInfoResultsDictionary:", v11);

    +[IMKeyTransparencyController sharedController](IMKeyTransparencyController, "sharedController");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setKTVerifierResultsFromIDSInfoResultsDictionary:", v12);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1A202E02C()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0D36A50], "sharedInstance");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  byte_1EE65F390 = objc_msgSend(v0, "isInternalInstall");

}

uint64_t sub_1A202E19C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1A202E244()
{
  if (qword_1EE65F3E8 != -1)
    dispatch_once(&qword_1EE65F3E8, &unk_1E471D3D8);
  return (id)qword_1EE65F3E0;
}

void sub_1A202E284()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB38E8], "regularExpressionWithPattern:options:error:", CFSTR("\\$\\(([^\\$]|\\$[^\\(])*?\\)"), 0, 0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1EE65F3E0;
  qword_1EE65F3E0 = v0;

}

id sub_1A202E2C0(void *a1)
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0CB3940], "__im_handleIdentifierRegex");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "matchesInString:options:range:", a1, 0, 0, objc_msgSend(a1, "length"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "__imArrayByApplyingBlock:", &unk_1E471E3B0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

uint64_t sub_1A202E33C(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (void *)MEMORY[0x1E0CB3B18];
  v3 = objc_msgSend(a2, "range");
  return objc_msgSend(v2, "valueWithRange:", v3, v4);
}

id sub_1A202E370(void *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0CB3940], "__im_handleIdentifierRegex");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "firstMatchInString:options:range:", a1, 0, 0, objc_msgSend(a1, "length"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3 && !objc_msgSend(v3, "range") && v4 == objc_msgSend(a1, "length"))
  {
    objc_msgSend(a1, "substringWithRange:", 2, objc_msgSend(a1, "length") - 3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id sub_1A202E428(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3940], "__im_handleIdentifierRegex");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "matchesInString:options:range:", a1, 0, 0, objc_msgSend(a1, "length"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v16;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v16 != v8)
          objc_enumerationMutation(v5);
        v10 = objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v9), "range", (_QWORD)v15);
        objc_msgSend(a1, "substringWithRange:", v10, v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "addObject:", v12);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v7);
  }

  v13 = (void *)objc_msgSend(v4, "copy");
  return v13;
}

id sub_1A202E5AC(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD v10[4];
  id v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD v15[5];
  __CFString *v16;

  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3032000000;
  v15[3] = sub_1A200AD14;
  v15[4] = sub_1A200ABFC;
  v16 = &stru_1E4725068;
  v6 = objc_msgSend(a1, "length");
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = sub_1A202E6CC;
  v10[3] = &unk_1E471E3D8;
  v13 = v15;
  v14 = a3;
  v7 = v5;
  v11 = v7;
  v12 = a1;
  objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:", 0, v6, 2, v10);
  v8 = v7;

  _Block_object_dispose(v15, 8);
  return v8;
}

void sub_1A202E6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A202E6CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = a2;
  v7 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "lengthOfBytesUsingEncoding:", 4);
  if ((unint64_t)(objc_msgSend(v13, "lengthOfBytesUsingEncoding:", 4) + v7) > *(_QWORD *)(a1 + 56))
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = &stru_1E4725068;

  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "stringByAppendingString:", v13);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

  if (a3 + a4 >= (unint64_t)objc_msgSend(*(id *)(a1 + 40), "length"))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));

}

void sub_1A202E8BC()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create("com.apple.messages.pinning-ubiquity", v2);
  v1 = (void *)qword_1EE65F1D8;
  qword_1EE65F1D8 = (uint64_t)v0;

}

void sub_1A202E9B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A2030484()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create("com.apple.messages.pinning-sync", v2);
  v1 = (void *)qword_1EE65F3F0;
  qword_1EE65F3F0 = (uint64_t)v0;

}

void sub_1A2030738(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A2030754(uint64_t a1, void *a2, uint64_t a3)
{
  char *v5;
  NSObject *v6;
  NSObject *v7;
  id *v8;
  id WeakRetained;
  id v10;
  _QWORD block[4];
  id v12;
  uint8_t buf[4];
  const char *v14;
  __int16 v15;
  char *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  if (a3 == 2)
  {
    if (!IMOSLoggingEnabled())
      goto LABEL_19;
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      v14 = "-[IMPinnedConversationsController synchronizeLocalDataStore]_block_invoke_2";
      v15 = 2112;
      v16 = v5;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "%s Determined that the local store already has a more up-to-date pin config. localPinConfig: %@", buf, 0x16u);
    }
    goto LABEL_7;
  }
  if (a3 == 1)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v5;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Syncing pin config from NSUbiquitousKeyValueStore to local store %@", buf, 0xCu);
      }

    }
    v8 = (id *)(a1 + 32);
    WeakRetained = objc_loadWeakRetained(v8);
    objc_msgSend(WeakRetained, "_updateLocalStoreWithPinConfiguration:", v5);

    if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread"))
    {
      v10 = objc_loadWeakRetained(v8);
      objc_msgSend(v10, "fetchPinnedConversationIdentifiersFromLocalStore");

    }
    else
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = sub_1A20309CC;
      block[3] = &unk_1E471E460;
      objc_copyWeak(&v12, v8);
      dispatch_async(MEMORY[0x1E0C80D38], block);
      objc_destroyWeak(&v12);
    }
  }
  else if (!a3 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Not synchronizing data stores because we could not determine which store has the more recent change.", buf, 2u);
    }
LABEL_7:

  }
LABEL_19:

}

void sub_1A20309CC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "fetchPinnedConversationIdentifiersFromLocalStore");

}

void sub_1A2030BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A2030BC0(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  int v4;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  id v8;
  void *v9;
  int v10;
  id v11;
  __int16 v12;
  uint8_t buf[2];
  __int16 v14;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "dataStore");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "synchronize");

  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v14 = 0;
        v6 = "Ubiquitous data store synchronization completed successfully.";
        v7 = (uint8_t *)&v14;
LABEL_12:
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, v6, v7, 2u);
        goto LABEL_13;
      }
      goto LABEL_13;
    }
  }
  else
  {
    v8 = objc_loadWeakRetained(v1);
    objc_msgSend(v8, "dataStore");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = IMOSLoggingEnabled();
    if (v9)
    {
      if (v10)
      {
        OSLogHandleForIMFoundationCategory();
        v5 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          v12 = 0;
          v6 = "Ubiquitous data store synchronization failed for an unknown reason.";
          v7 = (uint8_t *)&v12;
          goto LABEL_12;
        }
LABEL_13:

      }
    }
    else if (v10)
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v6 = "Ubiquitous data store synchronization failed because the store was nil.";
        v7 = buf;
        goto LABEL_12;
      }
      goto LABEL_13;
    }
  }
  v11 = objc_loadWeakRetained(v1);
  objc_msgSend(v11, "setNumberOfPendingForceSyncs:", objc_msgSend(v11, "numberOfPendingForceSyncs") - 1);

}

void sub_1A2030D34(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2030D00);
  }
  _Unwind_Resume(a1);
}

void sub_1A20311E4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2030FF8);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A203124C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "synchronizeLocalDataStore");
}

void sub_1A20313B0(uint64_t a1, char a2)
{
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  if ((a2 & 1) == 0 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = *(_QWORD *)(a1 + 32);
      v5 = 138412290;
      v6 = v4;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Did not update ubiquitous store for pin config when updating the stores %@", (uint8_t *)&v5, 0xCu);
    }

  }
}

void sub_1A2031650(uint64_t a1, void *a2)
{
  char *v3;
  id WeakRetained;
  int v5;
  id v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  const char *v10;
  NSObject *v11;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  int v19;
  const char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = objc_msgSend(WeakRetained, "shouldWriteProposedPinConfiguration:toUbiquitousStoreWithExistingPinConfiguration:", *(_QWORD *)(a1 + 32), v3);

  if (v5
    && (v6 = objc_loadWeakRetained((id *)(a1 + 48)),
        v7 = objc_msgSend(v6, "shouldUpdateExistingPinConfig:withProposedPinConfig:", v3, *(_QWORD *)(a1 + 32)),
        v6,
        v7))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v19 = 138412290;
        v20 = v3;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Saving new pin configuration to ubiquitous store. Old: %@ ", (uint8_t *)&v19, 0xCu);
      }

    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = *(const char **)(a1 + 32);
        v19 = 138412290;
        v20 = v10;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Saving new pin configuration to ubiquitous store. New: %@", (uint8_t *)&v19, 0xCu);
      }

    }
    if ((IMIsRunningInUnitTesting() & 1) != 0)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          v19 = 136315138;
          v20 = "-[IMPinnedConversationsController _updateUbiquitousStoreWithPinConfiguration:completion:]_block_invoke";
          _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "%s Didn't actually update ubiquitous store because we're running a unit test.", (uint8_t *)&v19, 0xCu);
        }

      }
    }
    else
    {
      v15 = objc_loadWeakRetained((id *)(a1 + 48));
      objc_msgSend(v15, "dataStore");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "setDictionary:forKey:", *(_QWORD *)(a1 + 32), CFSTR("pD"));

      v17 = objc_loadWeakRetained((id *)(a1 + 48));
      objc_msgSend(v17, "forceSynchronizeUbiquitousStore");

    }
    v14 = 1;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        v13 = *(const char **)(a1 + 32);
        v19 = 138412290;
        v20 = v13;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "shouldUpdate == NO. Not saving new pin configuration to ubiquitous store: %@", (uint8_t *)&v19, 0xCu);
      }

    }
    v14 = 0;
  }
  v18 = *(_QWORD *)(a1 + 40);
  if (v18)
    (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v18, v14);

}

void sub_1A203229C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20321C0);
  }
  _Unwind_Resume(a1);
}

void sub_1A2032AC0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20329E4);
  }
  _Unwind_Resume(a1);
}

void sub_1A2032BD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1A2032BEC(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(_QWORD);
  _QWORD block[4];
  void (**v10)(_QWORD);
  _QWORD aBlock[4];
  id v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t);
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v14 = 0;
  v15 = &v14;
  v16 = 0x3032000000;
  v17 = sub_1A200AD24;
  v18 = sub_1A200AC04;
  v19 = 0;
  v2 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v2, "dataStore");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_ubiquitousPinConfigurationInStore:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v19 = v4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = v15[5];
      *(_DWORD *)buf = 138412290;
      v21 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Got PinConfigurationInStore: %@", buf, 0xCu);
    }

  }
  v7 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A2032E34;
  aBlock[3] = &unk_1E471E500;
  v12 = *(id *)(a1 + 32);
  v13 = &v14;
  v8 = (void (**)(_QWORD))_Block_copy(aBlock);
  if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread"))
  {
    v8[2](v8);
  }
  else
  {
    block[0] = v7;
    block[1] = 3221225472;
    block[2] = sub_1A2032E58;
    block[3] = &unk_1E471E528;
    v10 = v8;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
  _Block_object_dispose(&v14, 8);

}

uint64_t sub_1A2032E34(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  return result;
}

uint64_t sub_1A2032E58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1A2032EDC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void (**v11)(_QWORD);
  _QWORD v12[4];
  void (**v13)(_QWORD);
  _QWORD aBlock[4];
  id v15;
  _BYTE *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE buf[24];
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_locallyStoredPinConfiguration");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      *(_QWORD *)&buf[4] = "-[IMPinnedConversationsController fetchMostUpToDatePinConfiguration:]_block_invoke";
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v3;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "%s ubiquitousPinConfig {%@}", buf, 0x16u);
    }

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      *(_QWORD *)&buf[4] = "-[IMPinnedConversationsController fetchMostUpToDatePinConfiguration:]_block_invoke";
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v4;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "%s localPinConfig {%@}", buf, 0x16u);
    }

  }
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v23 = sub_1A200AD24;
  v24 = sub_1A200AC04;
  v25 = 0;
  objc_msgSend(*(id *)(a1 + 32), "mostUpToDatePinConfigurationByComparingPinConfiguration:toOtherPinConfiguration:", v4, v3);
  v25 = (id)objc_claimAutoreleasedReturnValue();
  v18 = 0;
  v19 = &v18;
  v20 = 0x2020000000;
  v21 = 0;
  if (objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "isEqualToDictionary:", v4))
  {
    v7 = v19;
    v8 = 2;
LABEL_13:
    v7[3] = v8;
    goto LABEL_15;
  }
  v9 = objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "isEqualToDictionary:", v3);
  v7 = v19;
  if (v9)
  {
    v8 = 1;
    goto LABEL_13;
  }
  v19[3] = 0;
LABEL_15:
  v10 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A203323C;
  aBlock[3] = &unk_1E471E578;
  v15 = *(id *)(a1 + 40);
  v16 = buf;
  v17 = &v18;
  v11 = (void (**)(_QWORD))_Block_copy(aBlock);
  if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread"))
  {
    v11[2](v11);
  }
  else
  {
    v12[0] = v10;
    v12[1] = 3221225472;
    v12[2] = sub_1A2033268;
    v12[3] = &unk_1E471E528;
    v13 = v11;
    dispatch_async(MEMORY[0x1E0C80D38], v12);

  }
  _Block_object_dispose(&v18, 8);
  _Block_object_dispose(buf, 8);

}

uint64_t sub_1A203323C(_QWORD *a1)
{
  uint64_t result;

  result = a1[4];
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40), *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24));
  return result;
}

uint64_t sub_1A2033268(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1A20335B0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_1A20335DC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1A2033940(uint64_t a1)
{
  NSObject *v2;

  IMLogHandleForCategory();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
    sub_1A219602C(a1, v2);

}

void sub_1A20342FC(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v17;

  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A20342C8);
  }
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v17 - 48), 8);
  _Unwind_Resume(exc_buf);
}

uint64_t sub_1A2034340(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;
  uint64_t v5;

  result = objc_msgSend(a3, "integerValue");
  if (result == 1)
    v5 = *(_QWORD *)(a1 + 32);
  else
    v5 = *(_QWORD *)(a1 + 40);
  ++*(_QWORD *)(*(_QWORD *)(v5 + 8) + 24);
  return result;
}

BOOL IMPersonStatusIsOnline(unint64_t a1)
{
  return a1 > 1;
}

void *IMPersonStatusComparator()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend((id)qword_1EE65C4C8, "copy");
  v1 = (void *)qword_1EE65C4C8;
  qword_1EE65C4C8 = v0;

  return _Block_copy((const void *)qword_1EE65C4C8);
}

uint64_t sub_1A203537C(uint64_t a1, void *a2, void *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;

  v4 = a3;
  v5 = objc_msgSend(a2, "status");
  v6 = objc_msgSend(v4, "status");

  v7 = qword_1A21AE400[v5];
  v8 = qword_1A21AE400[v6];
  v9 = v7 == v8;
  v10 = v7 <= v8;
  v11 = 1;
  if (v10)
    v11 = -1;
  if (v9)
    return 0;
  else
    return v11;
}

NSComparisonResult IMComparePersonStatus(IMPersonStatus status, IMPersonStatus compareTo)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  NSComparisonResult v6;

  v2 = qword_1A21AE400[status];
  v3 = qword_1A21AE400[compareTo];
  v4 = v2 == v3;
  v5 = v2 <= v3;
  v6 = NSOrderedDescending;
  if (v5)
    v6 = NSOrderedAscending;
  if (v4)
    return 0;
  else
    return v6;
}

void *IMPersonStatusReverseComparator()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend((id)qword_1EE65C4D0, "copy");
  v1 = (void *)qword_1EE65C4D0;
  qword_1EE65C4D0 = v0;

  return _Block_copy((const void *)qword_1EE65C4D0);
}

uint64_t sub_1A2035440(uint64_t a1, void *a2, void *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a3;
  v5 = objc_msgSend(a2, "status");
  v6 = objc_msgSend(v4, "status");
  v7 = qword_1A21AE400[v5];
  v8 = qword_1A21AE400[v6];
  v9 = 1;
  if (v7 <= v8)
    v9 = -1;
  if (v7 == v8)
    v9 = 0;
  if (v9 == -1)
    v9 = 1;
  if (v7 > v8)
    v10 = -1;
  else
    v10 = v9;

  return v10;
}

id sub_1A2035C2C(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a2, "ID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IMChatCanonicalIDSIDsForAddress();
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1A2035C68(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t buf[4];
  id v26;
  __int16 v27;
  uint64_t v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v3 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  objc_msgSend(v2, "allKeys");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v22 != v6)
          objc_enumerationMutation(v4);
        v8 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
        objc_msgSend(v2, "objectForKeyedSubscript:", v8);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "integerValue");

        if (v10 == 1)
        {
          v11 = (void *)MEMORY[0x1E0DBD2F8];
          objc_msgSend(v8, "_stripFZIDPrefix");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "normalizedHandleWithDestinationID:", v12);
          v13 = (void *)objc_claimAutoreleasedReturnValue();

          if (v13)
          {
            v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DBD2A0]), "initWithHandle:", v13);
            objc_msgSend(v3, "addObject:", v14);

          }
        }
        else if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412546;
            v26 = v8;
            v27 = 2048;
            v28 = v10;
            _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Destination not registered for Group FaceTime: %@ (%ld)", buf, 0x16u);
          }

        }
      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    }
    while (v5);
  }

  if (objc_msgSend(v3, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        v17 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        v26 = v3;
        v27 = 2112;
        v28 = v17;
        _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "Adding member to Group FaceTime: %@ in conversaton %@", buf, 0x16u);
      }

    }
    +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "conversationManager");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "addRemoteMembers:toConversation:", v3, *(_QWORD *)(a1 + 32));

  }
}

void sub_1A2036680(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A203664CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A20371F0(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A20370ECLL);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A203724C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "checkForAllowedByScreenTime");

}

uint64_t sub_1A2039A10(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleIncomingItem:updateRecipient:suppressNotification:updateReplyCounts:", *(_QWORD *)(a1 + 40), 0, 0, 0);
}

void sub_1A203AA64()
{
  JUMPOUT(0x1A203AA6CLL);
}

id sub_1A203B5FC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t j;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v18;
  uint64_t v19;
  uint8_t buf[16];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "activeAccounts");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v4 = v3;
  v19 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
  if (v19)
  {
    v5 = *(_QWORD *)v26;
    v18 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v19; ++i)
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v4);
        v7 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        v21 = 0u;
        v22 = 0u;
        v23 = 0u;
        v24 = 0u;
        objc_msgSend(v7, "aliases", v18);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
        if (v9)
        {
          v10 = *(_QWORD *)v22;
          while (2)
          {
            for (j = 0; j != v9; ++j)
            {
              if (*(_QWORD *)v22 != v10)
                objc_enumerationMutation(v8);
              v12 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * j);
              if ((MEMORY[0x1A858280C](v12) & 1) != 0)
              {
                IMCanonicalizeFormattedString();
                v13 = (id)objc_claimAutoreleasedReturnValue();
              }
              else
              {
                v13 = v12;
              }
              v14 = v13;
              objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v13);
              v15 = (void *)objc_claimAutoreleasedReturnValue();

              if (v15)
              {

                goto LABEL_25;
              }
            }
            v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
            if (v9)
              continue;
            break;
          }
        }

        v5 = v18;
      }
      v19 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
      v5 = v18;
    }
    while (v19);
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "Unable to find handle in the token dictionary", buf, 2u);
    }

  }
  v15 = 0;
LABEL_25:

  return v15;
}

BOOL sub_1A203C834(IMBalloonPluginDataSource *self, SEL a2)
{
  return self->_showingLatestMessageAsBreadcrumb;
}

void sub_1A203C92C()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", &unk_1E475EE68);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1EE65F408;
  qword_1EE65F408 = v0;

}

void sub_1A203CB08(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v4 = a3;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A203CBB0;
  v8[3] = &unk_1E471E840;
  v9 = v5;
  v10 = v4;
  v6 = v4;
  v7 = v5;
  objc_msgSend(a1, "fetchRecentStickersWithCompletion:", v8);

}

void sub_1A203CBB0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD block[4];
  id v6;
  id v7;
  id v8;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A203CC54;
  block[3] = &unk_1E471E818;
  v6 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = *(id *)(a1 + 40);
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

uint64_t sub_1A203CC54(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", *(_QWORD *)(a1 + 40));
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_1A203CC88(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  double v15;
  double v16;

  v8 = a5;
  v9 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_1A203CD4C;
  v12[3] = &unk_1E471E8E0;
  v15 = a2;
  v16 = a3;
  v13 = v9;
  v14 = v8;
  v10 = v8;
  v11 = v9;
  objc_msgSend(a1, "fetchRecentItemsForDomain:completion:", CFSTR("com.apple.Handwriting.HandwritingProvider"), v12);

}

void sub_1A203CD4C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  IMPluginPayload *v11;
  void *v12;
  void *v13;
  void *v14;
  id obj;
  _QWORD block[4];
  id v17;
  id v18;
  _QWORD v19[5];
  id v20;
  NSObject *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = dispatch_group_create();
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  obj = v3;
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v23;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v23 != v7)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * v8);
        v10 = (void *)MEMORY[0x1A8582D94]();
        v11 = objc_alloc_init(IMPluginPayload);
        objc_msgSend(v9, "payloadData");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        -[IMPluginPayload setData:](v11, "setData:", v12);

        -[IMPluginPayload setPluginBundleID:](v11, "setPluginBundleID:", CFSTR("com.apple.Handwriting.HandwritingProvider"));
        +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "dataSourceForPluginPayload:", v11);
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        dispatch_group_enter(v4);
        v19[0] = MEMORY[0x1E0C809B0];
        v19[1] = 3221225472;
        v19[2] = sub_1A203CFBC;
        v19[3] = &unk_1E471E890;
        v19[4] = v9;
        v20 = *(id *)(a1 + 32);
        v21 = v4;
        objc_msgSend(v14, "thumbnailURLWithSize:completion:", v19, *(double *)(a1 + 48), *(double *)(a1 + 56));

        objc_autoreleasePoolPop(v10);
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v6);
  }

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A203D09C;
  block[3] = &unk_1E471E8B8;
  v18 = *(id *)(a1 + 40);
  v17 = *(id *)(a1 + 32);
  dispatch_group_notify(v4, MEMORY[0x1E0C80D38], block);

}

void sub_1A203CFBC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  id v10;
  id v11;

  v3 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A203D064;
  v7[3] = &unk_1E471E868;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = *(id *)(a1 + 48);
  v6 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v7);

}

void sub_1A203D064(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(*(id *)(a1 + 40), "setFileURL:");
    objc_msgSend(*(id *)(a1 + 48), "addObject:", *(_QWORD *)(a1 + 40));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

uint64_t sub_1A203D09C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1A203D0AC(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  id v13;
  _QWORD v14[4];
  id v15;
  _QWORD *v16;
  _QWORD v17[4];
  NSObject *v18;
  _QWORD *v19;
  _QWORD v20[4];
  NSObject *v21;
  _QWORD *v22;
  _QWORD v23[5];
  id v24;

  v8 = a5;
  v23[0] = 0;
  v23[1] = v23;
  v23[2] = 0x3032000000;
  v23[3] = sub_1A200AD34;
  v23[4] = sub_1A200AC0C;
  v24 = 0;
  v24 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  v10 = MEMORY[0x1E0C809B0];
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_1A203D264;
  v20[3] = &unk_1E471E908;
  v22 = v23;
  v11 = v9;
  v21 = v11;
  objc_msgSend(a1, "loadRecentHandwritingsWithThumbnailSize:completion:", v20, a2, a3);
  dispatch_group_enter(v11);
  v17[0] = v10;
  v17[1] = 3221225472;
  v17[2] = sub_1A203D298;
  v17[3] = &unk_1E471E908;
  v19 = v23;
  v12 = v11;
  v18 = v12;
  objc_msgSend(a1, "loadRecentStickers:", v17);
  v14[0] = v10;
  v14[1] = 3221225472;
  v14[2] = sub_1A203D2CC;
  v14[3] = &unk_1E471E500;
  v15 = v8;
  v16 = v23;
  v13 = v8;
  dispatch_group_notify(v12, MEMORY[0x1E0C80D38], v14);

  _Block_object_dispose(v23, 8);
}

void sub_1A203D24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1A203D264(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObjectsFromArray:", a2);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1A203D298(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObjectsFromArray:", a2);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_1A203D2CC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

id IMAttributedStringByRemovingTrackingInformation(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v7;

  v1 = a1;
  if (!objc_msgSend(v1, "length"))
    goto LABEL_7;
  if (qword_1EE65EAD8 != -1)
    dispatch_once(&qword_1EE65EAD8, &unk_1E471D478);
  if (byte_1EE65EB30)
  {
    objc_msgSend(v1, "_wp_stringByRemovingTrackingInformationFromURLs");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v2, "isEqual:", v1))
    {
      v3 = v1;
    }
    else
    {
      v7 = 0;
      sub_1A203D3DC(v2, &v7);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v7;
      v3 = (id)objc_msgSend(v2, "mutableCopy");
      sub_1A203D568(v3, v4, v5);

    }
  }
  else
  {
LABEL_7:
    v3 = v1;
  }

  return v3;
}

id sub_1A203D3DC(void *a1, _QWORD *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD v8[6];
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t);
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v3 = a1;
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = sub_1A200AD44;
  v19 = sub_1A200AC14;
  v20 = 0;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v20 = (id)objc_claimAutoreleasedReturnValue();
  v9 = 0;
  v10 = &v9;
  v11 = 0x3032000000;
  v12 = sub_1A200AD44;
  v13 = sub_1A200AC14;
  v14 = 0;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v14 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "length");
  v5 = *MEMORY[0x1E0D365F0];
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A203D8CC;
  v8[3] = &unk_1E471E948;
  v8[4] = &v15;
  v8[5] = &v9;
  objc_msgSend(v3, "enumerateAttribute:inRange:options:usingBlock:", v5, 0, v4, 0, v8);
  if (a2)
    *a2 = objc_retainAutorelease((id)v16[5]);
  v6 = (id)v10[5];
  _Block_object_dispose(&v9, 8);

  _Block_object_dispose(&v15, 8);
  return v6;
}

void sub_1A203D53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A203D568(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id obj;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v6, "count"))
  {
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v18 = v7;
    obj = v7;
    v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    if (v8)
    {
      v9 = v8;
      v10 = 0;
      v11 = *(_QWORD *)v21;
      v12 = *MEMORY[0x1E0D365F0];
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v21 != v11)
            objc_enumerationMutation(obj);
          v14 = objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * v13), "rangeValue", v18);
          v16 = v15;
          objc_msgSend(v5, "removeAttribute:range:", v12, v14, v15);
          objc_msgSend(v6, "objectAtIndexedSubscript:", v10 + v13);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "addAttribute:value:range:", v12, v17, v14, v16);

          ++v13;
        }
        while (v9 != v13);
        v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
        v10 += v13;
      }
      while (v9);
    }

    v7 = v18;
  }

}

void IMRemoveTrackingInformationFromMutableAttributedString(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    if (qword_1EE65EAD8 != -1)
      dispatch_once(&qword_1EE65EAD8, &unk_1E471D478);
    if (byte_1EE65EB30)
    {
      objc_msgSend(v1, "_wp_removeTrackingInformationFromURLs");
      v4 = 0;
      sub_1A203D3DC(v1, &v4);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v4;
      sub_1A203D568(v1, v2, v3);

    }
  }

}

uint64_t sub_1A203D7B8()
{
  uint64_t result;

  result = sub_1A203D7D4();
  byte_1EE65EB30 = result;
  return result;
}

uint64_t sub_1A203D7D4()
{
  void *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  if (!qword_1EE65EAC0)
  {
    v2 = xmmword_1E471E928;
    v3 = 0;
    qword_1EE65EAC0 = _sl_dlopen();
  }
  if (!qword_1EE65EAC0)
    return 0;
  v1 = 0;
  return objc_msgSend(MEMORY[0x1E0CB3940], "instancesRespondToSelector:", sel__wp_stringByRemovingTrackingInformationFromURLs);
}

void sub_1A203D8CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_msgSend(v10, "_wp_urlByRemovingTrackingInformation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7 && (objc_msgSend(v10, "isEqual:", v7) & 1) == 0)
  {
    v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", a3, a4);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "addObject:", v9);

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v7);
  }

}

uint64_t sub_1A203E254(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "supportsCapability:", *(_QWORD *)(a1 + 32));
}

uint64_t sub_1A203FD90()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("IDSServerBag"), CFSTR("IDSFoundation"));
  qword_1EE65F360 = result;
  return result;
}

BOOL sub_1A20404C8(IMServiceImpl *self, SEL a2)
{
  return self->_isDiscontinued;
}

id IMCoreMomentShareURLForMessage(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "fileTransferGUIDs");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v21;
    v8 = *MEMORY[0x1E0D37F38];
    while (2)
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v21 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(v3, "transferForGUID:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v9), (_QWORD)v20);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "attributionInfo");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "objectForKeyedSubscript:", v8);
        v12 = objc_claimAutoreleasedReturnValue();
        if (v12)
        {
          v14 = (void *)v12;
          objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v12);
          v13 = (void *)objc_claimAutoreleasedReturnValue();

          goto LABEL_11;
        }

        ++v9;
      }
      while (v6 != v9);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (v6)
        continue;
      break;
    }
  }
  v13 = 0;
LABEL_11:

  if (!v13)
  {
    objc_msgSend(v1, "balloonBundleID");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "text");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "payloadData");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v24[0] = 0;
    objc_msgSend(MEMORY[0x1E0D39960], "photoShareURLFromPluginBundleID:contentString:payload:shouldAccept:", v15, v16, v17, v24);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v18;
    if (!v24[0])
    {

      v13 = 0;
    }

  }
  return v13;
}

uint64_t sub_1A2041C30(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  if (v3 | v4)
  {
    v6 = 0;
    if (v3 && v4)
      v6 = objc_msgSend((id)v3, "isEqualToAttributedString:", v4);
  }
  else
  {
    v6 = 1;
  }

  return v6;
}

uint64_t sub_1A2041C9C(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  if (v3 | v4)
  {
    v6 = 0;
    if (v3 && v4)
      v6 = objc_msgSend((id)v3, "isEqual:", v4);
  }
  else
  {
    v6 = 1;
  }

  return v6;
}

uint64_t sub_1A2041D08(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  if (v3 | v4)
  {
    v6 = 0;
    if (v3 && v4)
      v6 = objc_msgSend((id)v3, "isEqualToString:", v4);
  }
  else
  {
    v6 = 1;
  }

  return v6;
}

uint64_t sub_1A2041D74(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  if (v3 | v4)
  {
    v6 = 0;
    if (v3 && v4)
      v6 = objc_msgSend((id)v3, "isEqualToDictionary:", v4);
  }
  else
  {
    v6 = 1;
  }

  return v6;
}

uint64_t sub_1A2041DE0(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  if (v3 | v4)
  {
    v6 = 0;
    if (v3 && v4)
      v6 = objc_msgSend((id)v3, "isEqualToArray:", v4);
  }
  else
  {
    v6 = 1;
  }

  return v6;
}

id sub_1A204319C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t);
  id v12;

  v2 = objc_msgSend(a1, "length");
  v7 = 0;
  v8 = &v7;
  v9 = 0x3032000000;
  v10 = sub_1A200AD54;
  v11 = sub_1A200AC1C;
  v12 = 0;
  v3 = *MEMORY[0x1E0D365F0];
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A2043284;
  v6[3] = &unk_1E471E9C8;
  v6[4] = &v7;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v3, 0, v2, 0, v6);
  v4 = (id)v8[5];
  _Block_object_dispose(&v7, 8);

  return v4;
}

void sub_1A204326C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2043284(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v8;
  id v9;

  v8 = a2;
  if (v8)
  {
    v9 = v8;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    v8 = v9;
    *a5 = 1;
  }

}

id IMWatermarkMessageIDCache()
{
  if (qword_1ECF12348 != -1)
    dispatch_once(&qword_1ECF12348, &unk_1E471D4B8);
  return (id)qword_1ECF12350;
}

void sub_1A2043324()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v1 = (void *)qword_1ECF12350;
  qword_1ECF12350 = (uint64_t)v0;

}

id sub_1A204334C()
{
  if (qword_1ECF12338 != -1)
    dispatch_once(&qword_1ECF12338, &unk_1E471B900);
  return (id)qword_1ECF12340;
}

void sub_1A204338C()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v1 = (void *)qword_1ECF12340;
  qword_1ECF12340 = (uint64_t)v0;

}

void sub_1A20433F8()
{
  void *v0;

  v0 = (void *)qword_1EE65F428;
  qword_1EE65F428 = (uint64_t)&unk_1E471DCB8;

}

uint64_t sub_1A2043410(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v4 = a2;
  v5 = a3;
  if ((objc_msgSend(v4, "_hasJustSentAMessage") & 1) != 0 || objc_msgSend(v5, "_hasJustSentAMessage"))
  {
    objc_msgSend(v4, "watermarkDate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v6)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v5, "watermarkDate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v7)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v8 = objc_msgSend(v7, "compare:", v6);

  }
  else
  {
    v8 = objc_msgSend(v4, "compareChatByDate:", v5);
  }

  return v8;
}

uint64_t sub_1A2043E70()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("NPSManager"), CFSTR("NanoPreferencesSync"));
  qword_1EE65F438 = result;
  return result;
}

uint64_t sub_1A2043F24()
{
  uint64_t result;

  result = IMGetDomainBoolForKey();
  byte_1EE6617C8 = result;
  return result;
}

uint64_t sub_1A2043FE0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "verifyFiltering");
}

void sub_1A2043FE8(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Daemon launch detected while process was running", v4, 2u);
    }

  }
  objc_msgSend(v2, "_reconnectIfNeeded");

}

uint64_t sub_1A20441C4(uint64_t a1)
{
  NSObject *v2;
  uint64_t result;
  uint8_t v4[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Calling client completion handler after completing connection and setup", v4, 2u);
    }

  }
  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1A20447E0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_invalidateMultiplexedConnectionWithUniqueID:", *(_QWORD *)(a1 + 32));

}

void sub_1A204481C(uint64_t a1)
{
  NSObject *v2;
  _QWORD block[4];
  id v4;

  dispatch_get_global_queue(21, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A20448B4;
  block[3] = &unk_1E471E460;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_async(v2, block);

  objc_destroyWeak(&v4);
}

void sub_1A20448B4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_capabilitiesDidChange");

}

void sub_1A2045324()
{
  IMBalloonPluginAttributionController *v0;
  void *v1;

  v0 = objc_alloc_init(IMBalloonPluginAttributionController);
  v1 = (void *)qword_1ECF125E8;
  qword_1ECF125E8 = (uint64_t)v0;

}

id sub_1A2045564()
{
  if (qword_1EE65F318 != -1)
    dispatch_once(&qword_1EE65F318, &unk_1E471DE78);
  return (id)qword_1EE65C290;
}

uint64_t sub_1A20457B8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "containsString:", *MEMORY[0x1E0D37600]) ^ 1;
}

void sub_1A20457E0(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v27;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v27 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * v7);
        objc_msgSend(*(id *)(a1 + 40), "bundleIDsDisplayingAttribution");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "objectForKey:", v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "BOOLValue");

        if (v11)
        {
          objc_msgSend(*(id *)(a1 + 40), "bundleIDsDisplayingAttribution");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "removeObjectForKey:", v8);

          objc_msgSend(v2, "addObject:", v8);
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
    }
    while (v5);
  }

  if (objc_msgSend(v2, "count"))
  {
    v24 = 0u;
    v25 = 0u;
    v22 = 0u;
    v23 = 0u;
    v13 = v2;
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v23;
      do
      {
        v17 = 0;
        do
        {
          if (*(_QWORD *)v23 != v16)
            objc_enumerationMutation(v13);
          v18 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v17);
          objc_msgSend(*(id *)(a1 + 40), "expiredBundleIDToTimestampMap", (_QWORD)v22);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 40), "_currentTimestamp");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "setObject:forKey:", v20, v18);

          ++v17;
        }
        while (v15 != v17);
        v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
      }
      while (v15);
    }

    objc_msgSend(*(id *)(a1 + 40), "_purgeLeastRecentlySeenAppBundleIDsIfNecessary");
    objc_msgSend(*(id *)(a1 + 40), "_saveToFile");
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "__mainThreadPostNotificationName:object:", CFSTR("__kIMBalloonPluginAttributionChangedNotification"), 0);

  }
}

uint64_t sub_1A2045FA8(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "expiredBundleIDToTimestampMap");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "objectForKey:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "doubleValue");
  v11 = v10;

  objc_msgSend(*(id *)(a1 + 32), "expiredBundleIDToTimestampMap");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", v6);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "doubleValue");
  v15 = v14;

  v16 = -1;
  if (v11 >= v15)
    v16 = 1;
  if (v11 == v15)
    return 0;
  else
    return v16;
}

id sub_1A20462DC(uint64_t a1, void *a2)
{
  id v2;
  void *v3;

  v2 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v2, "identifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void sub_1A20463A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;

  objc_msgSend((id)qword_1EE65C290, "stringByAppendingPathComponent:", CFSTR("/"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1EE65C290;
  qword_1EE65C290 = v0;

  objc_msgSend((id)qword_1EE65C290, "stringByAppendingPathComponent:", CFSTR("var"));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)qword_1EE65C290;
  qword_1EE65C290 = v2;

  objc_msgSend((id)qword_1EE65C290, "stringByAppendingPathComponent:", CFSTR("mobile"));
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1EE65C290;
  qword_1EE65C290 = v4;

  objc_msgSend((id)qword_1EE65C290, "stringByAppendingPathComponent:", CFSTR("Library"));
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)qword_1EE65C290;
  qword_1EE65C290 = v6;

  objc_msgSend((id)qword_1EE65C290, "stringByAppendingPathComponent:", CFSTR("SMS"));
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = (void *)qword_1EE65C290;
  qword_1EE65C290 = v8;

  objc_msgSend((id)qword_1EE65C290, "stringByAppendingPathComponent:", CFSTR("AppAttributionRecord.plist"));
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = (void *)qword_1EE65C290;
  qword_1EE65C290 = v10;

}

uint64_t IMRichLinkUtilitiesHasKnownSchemesForRichLinkURL(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  uint64_t v14;
  uint64_t j;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "scheme");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "length"))
  {
    objc_msgSend(v3, "host");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "length");

    if (v7)
    {
      objc_msgSend(v3, "scheme");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = 0u;
      v22 = 0u;
      v23 = 0u;
      v24 = 0u;
      v9 = objc_msgSend(&unk_1E475EE80, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v22;
        while (2)
        {
          for (i = 0; i != v10; ++i)
          {
            if (*(_QWORD *)v22 != v11)
              objc_enumerationMutation(&unk_1E475EE80);
            if (!objc_msgSend(v8, "compare:options:", *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * i), 3))
            {
              v7 = 1;
              goto LABEL_24;
            }
          }
          v10 = objc_msgSend(&unk_1E475EE80, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
          if (v10)
            continue;
          break;
        }
      }
      v19 = 0u;
      v20 = 0u;
      v17 = 0u;
      v18 = 0u;
      v13 = v4;
      v7 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
      if (v7)
      {
        v14 = *(_QWORD *)v18;
        while (2)
        {
          for (j = 0; j != v7; ++j)
          {
            if (*(_QWORD *)v18 != v14)
              objc_enumerationMutation(v13);
            if (!objc_msgSend(v8, "compare:options:", *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * j), 3, (_QWORD)v17))
            {
              v7 = 1;
              goto LABEL_23;
            }
          }
          v7 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
          if (v7)
            continue;
          break;
        }
      }
LABEL_23:

LABEL_24:
    }
  }
  else
  {

    v7 = 0;
  }

  return v7;
}

uint64_t IMRichLinkUtilitiesIsSupportedRichLinkURL(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = a1;
  if ((IMRichLinkUtilitiesHasKnownSchemesForRichLinkURL(v3, a2) & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "dataSourceClassForBundleID:", *MEMORY[0x1E0D375F8]);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v4 = objc_msgSend(v6, "supportsURL:", v3);
  }

  return v4;
}

id IMRichLinkUtilitiesDetermineRichLinksInMessage(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t j;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v36;
  id v37;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[4];
  id v48;
  id v49;
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "length");
  objc_msgSend(v3, "string");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v8 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v47[0] = MEMORY[0x1E0C809B0];
  v47[1] = 3221225472;
  v47[2] = sub_1A2046CD0;
  v47[3] = &unk_1E471EB30;
  v9 = v4;
  v48 = v9;
  v10 = v8;
  v49 = v10;
  objc_msgSend(v3, "enumerateAttributesInRange:options:usingBlock:", 0, v5, 0, v47);
  if (objc_msgSend(v10, "count"))
  {
    v36 = v5;
    v37 = v3;
    v38 = v9;
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    v11 = v10;
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
    if (v12)
    {
      v13 = v12;
      v14 = 0;
      v15 = *(_QWORD *)v44;
      while (2)
      {
        for (i = 0; i != v13; ++i)
        {
          if (*(_QWORD *)v44 != v15)
            objc_enumerationMutation(v11);
          v17 = objc_msgSend(*(id *)(*((_QWORD *)&v43 + 1) + 8 * i), "rangeValue");
          v19 = v18;
          if ((sub_1A2046DCC(v6, v14, v17 - v14) & 1) == 0)
          {

            v20 = v36;
            goto LABEL_22;
          }
          v14 = v17 + v19;
        }
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
        if (v13)
          continue;
        break;
      }
    }
    else
    {
      v14 = 0;
    }

    v20 = v36;
    if (sub_1A2046DCC(v6, v14, v36 - v14))
    {
      v41 = 0u;
      v42 = 0u;
      v39 = 0u;
      v40 = 0u;
      v21 = v11;
      v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
      v9 = v38;
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)v40;
        do
        {
          for (j = 0; j != v23; ++j)
          {
            if (*(_QWORD *)v40 != v24)
              objc_enumerationMutation(v21);
            v26 = objc_msgSend(*(id *)(*((_QWORD *)&v39 + 1) + 8 * j), "rangeValue");
            objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", v26, v27);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v7, "addObject:", v28);

          }
          v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
        }
        while (v23);
      }
      v3 = v37;
      goto LABEL_31;
    }
LABEL_22:
    v3 = v37;
    v9 = v38;
    if (objc_msgSend(v11, "count") == 1)
    {
      objc_msgSend(v11, "firstObject");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = objc_msgSend(v29, "rangeValue");
      v32 = v31;

      v33 = v6;
      v21 = v33;
      if (!v32)
      {
LABEL_31:

        goto LABEL_32;
      }
      if (objc_msgSend(v33, "rangeOfString:options:range:", CFSTR("http://"), 9, v30, v32) == 0x7FFFFFFFFFFFFFFFLL)
      {
        v34 = objc_msgSend(v21, "rangeOfString:options:range:", CFSTR("https://"), 9, v30, v32);

        v9 = v38;
        if (v34 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_32;
      }
      else
      {

        v9 = v38;
      }
      if ((sub_1A2046DCC(v21, 0, v30) & 1) != 0 || sub_1A2046DCC(v21, v30 + v32, v20 - (v30 + v32)))
      {
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", v30, v32);
        v21 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "addObject:", v21);
        goto LABEL_31;
      }
    }
  }
LABEL_32:

  return v7;
}

void sub_1A2046CD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  objc_msgSend(v13, "objectForKeyedSubscript:", *MEMORY[0x1E0D365F0]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(v13, "objectForKeyedSubscript:", *MEMORY[0x1E0D393F0]);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v8)
    {
      objc_msgSend(v13, "objectForKeyedSubscript:", *MEMORY[0x1E0D381A0]);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = v9;
      if (!v9 || objc_msgSend(v9, "BOOLValue"))
      {
        if (IMRichLinkUtilitiesIsSupportedRichLinkURL(v7, *(void **)(a1 + 32)))
        {
          v11 = *(void **)(a1 + 40);
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", a3, a4);
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "addObject:", v12);

        }
      }

    }
  }

}

uint64_t sub_1A2046DCC(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _BOOL8 v7;

  if (!a3)
    return 1;
  objc_msgSend(a1, "substringWithRange:", a2, a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceAndNewlineCharacterSet");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "invertedSet");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "rangeOfCharacterFromSet:", v5);
  v7 = v6 == 0;

  return v7;
}

void IMRichLinkUtilitiesEnumerateRichLinksInAttributedString(void *a1, char a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[4];
  id v22;
  _QWORD v23[4];
  id v24;
  id v25;

  v5 = a1;
  v6 = a3;
  v19 = v5;
  v7 = v19;
  if ((a2 & 1) == 0)
  {
    v7 = v19;
    if (objc_msgSend(MEMORY[0x1E0D397F8], "supportsDataDetectors"))
    {
      v7 = (void *)objc_msgSend(v19, "mutableCopy");
      objc_msgSend(v19, "string");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringGUID");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      IMDDScanAttributedStringWithContext();

    }
  }
  v11 = objc_msgSend(v7, "length", v19);
  v12 = (void *)objc_msgSend(v7, "mutableCopy");
  IMRichLinkUtilitiesDetermineRichLinksInMessage(v7, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = *MEMORY[0x1E0D365F0];
  v15 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = sub_1A2047044;
  v23[3] = &unk_1E471EB58;
  v24 = v13;
  v25 = v12;
  v16 = v12;
  v17 = v13;
  objc_msgSend(v7, "enumerateAttribute:inRange:options:usingBlock:", v14, 0, v11, 0, v23);
  v21[0] = v15;
  v21[1] = 3221225472;
  v21[2] = sub_1A20470F0;
  v21[3] = &unk_1E471EB80;
  v22 = v6;
  v18 = v6;
  objc_msgSend(v16, "enumerateAttribute:inRange:options:usingBlock:", v14, 0, v11, 0, v21);

}

void sub_1A2047044(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v7 = a2;
  if (v7)
  {
    v8 = *(void **)(a1 + 32);
    v11 = v7;
    objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", a3, a4);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "member:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = v11;
    if (!v10)
    {
      objc_msgSend(*(id *)(a1 + 40), "removeAttribute:range:", *MEMORY[0x1E0D365F0], a3, a4);
      v7 = v11;
    }
  }

}

uint64_t sub_1A20470F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

BOOL IMIsInternationalFilteringAccount()
{
  uint64_t v0;
  void *v1;

  v0 = qword_1EE65C2B0;
  if (qword_1EE65C2B0 == -1)
  {
    +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    qword_1EE65C2B0 = objc_msgSend(v1, "activeAccountsAreEligibleForInternationalFiltering");

    v0 = qword_1EE65C2B0;
  }
  return v0 == 1;
}

void IMResetInternationalFilterEligibilityState()
{
  qword_1EE65C2B0 = -1;
}

uint64_t IMKeyTransparencyStatusFromKTUIStatus(uint64_t a1, int a2)
{
  uint64_t result;
  NSObject *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  result = 11;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0;
      break;
    case 2:
      result = 1;
      break;
    case 3:
      result = 2;
      break;
    case 4:
      result = 3;
      break;
    case 5:
      v6 = a2 == 0;
      v7 = 13;
      v8 = 4;
      goto LABEL_14;
    case 6:
    case 12:
      result = a1;
      break;
    case 7:
    case 13:
      result = 5;
      break;
    case 8:
      result = 7;
      break;
    case 9:
      v6 = a2 == 0;
      v7 = 14;
      v8 = 8;
LABEL_14:
      if (v6)
        result = v7;
      else
        result = v8;
      break;
    case 10:
      result = 9;
      break;
    case 11:
      result = 10;
      break;
    default:
      IMLogHandleForCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1A21962A0(a1, v5);

      result = 11;
      break;
  }
  return result;
}

void sub_1A2047244(uint64_t a1, void *a2)
{
  _QWORD *v3;
  NSObject *v4;
  _QWORD block[4];
  _QWORD *v6;

  if (objc_msgSend(a2, "count"))
  {
    v3 = *(_QWORD **)(a1 + 32);
    v4 = v3[3];
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A20472C4;
    block[3] = &unk_1E471E348;
    v6 = v3;
    dispatch_async(v4, block);

  }
}

void sub_1A20472C4(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "allObjects");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "removeAllObjects");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeAllObjects");
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v3 = v2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(a1 + 32), "scheduleFetchIfNecessaryForHandle:", *(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * v7++), (_QWORD)v8);
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

uint64_t sub_1A20474C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeAllObjects");
}

uint64_t sub_1A2047554(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeAllObjects");
}

uint64_t sub_1A2047588(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1A2047598(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;

  v3 = *(id *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (v3 == v5)
    v4 = 0;
  else
    v4 = *(_QWORD *)(a1 + 32);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v2, v4);

}

uint64_t sub_1A2047600(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1A2047610(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[2];
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v7[0] = *MEMORY[0x1E0D37400];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "ID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[1] = *MEMORY[0x1E0D373F0];
  v8[0] = v3;
  v8[1] = *MEMORY[0x1E0D373F8];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, v7, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "__mainThreadPostNotificationName:object:userInfo:", *MEMORY[0x1E0D37408], *(_QWORD *)(a1 + 32), v4);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "__mainThreadPostNotificationName:object:userInfo:", *MEMORY[0x1E0D373D0], *(_QWORD *)(a1 + 32), v4);

  CFRelease(*(CFTypeRef *)(*(_QWORD *)(a1 + 40) + 64));
  *(_QWORD *)(*(_QWORD *)(a1 + 40) + 64) = 0;

}

uint64_t sub_1A20477C8(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;

  v4 = a2;
  v5 = a3;
  objc_msgSend(v4, "contact");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "recordId");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "numericValue");
  objc_msgSend(v5, "contact");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "recordId");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "numericValue");

  if (v8 >= v11)
  {
    objc_msgSend(v4, "contact");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "recordId");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "numericValue");
    objc_msgSend(v5, "contact");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "recordId");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v15 > objc_msgSend(v17, "numericValue");

  }
  else
  {
    v12 = -1;
  }

  return v12;
}

void sub_1A204826C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13, __int128 a14)
{
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  void *v18;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v14, "name");
        v16 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "reason");
        v17 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "userInfo");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(a9) = 138413314;
        *(_QWORD *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(_QWORD *)((char *)&a9 + 14) = v16;
        a12 = 2112;
        a13 = (uint64_t)v17;
        LOWORD(a14) = 2112;
        *(_QWORD *)((char *)&a14 + 2) = v18;
        WORD5(a14) = 2080;
        *(_QWORD *)((char *)&a14 + 12) = "-[IMAccount _updateMyStatus:message:]";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A2048230);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A2049158(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5)
{
  id v8;
  id v9;
  NSObject *v10;
  const __CFString *v11;
  void *v12;
  int v13;
  id v14;
  __int16 v15;
  id v16;
  __int16 v17;
  const __CFString *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  objc_msgSend(MEMORY[0x1E0D36AA8], "registration");
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    if (a5)
      v11 = CFSTR("YES");
    else
      v11 = CFSTR("NO");
    IMGetEnvironmentName();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138413058;
    v14 = v8;
    v15 = 2112;
    v16 = v9;
    v17 = 2112;
    v18 = v11;
    v19 = 2112;
    v20 = v12;
    _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_DEFAULT, "Successfully updated password for account (%@:%@): %@  (Environment: %@)", (uint8_t *)&v13, 0x2Au);

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_1A2049790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20497AC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  const __CFString *v14;
  uint64_t v15;
  void *v16;
  int v17;
  id v18;
  __int16 v19;
  id v20;
  __int16 v21;
  const __CFString *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a7;
  objc_msgSend(MEMORY[0x1E0D36AA8], "registration");
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    v14 = CFSTR("YES");
    v17 = 138412802;
    v18 = v10;
    v19 = 2112;
    if (!v12)
      v14 = CFSTR("NO");
    v20 = v11;
    v21 = 2112;
    v22 = v14;
    _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_DEFAULT, "Successfully read temporary password for account (%@:%@): %@", (uint8_t *)&v17, 0x20u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v16 = *(void **)(v15 + 40);
  *(_QWORD *)(v15 + 40) = v12;

}

void sub_1A20499E0(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5)
{
  id v8;
  id v9;
  NSObject *v10;
  const __CFString *v11;
  int v12;
  id v13;
  __int16 v14;
  id v15;
  __int16 v16;
  const __CFString *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  objc_msgSend(MEMORY[0x1E0D36AA8], "registration");
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = CFSTR("NO");
    v12 = 138412802;
    v13 = v8;
    v14 = 2112;
    if (a5)
      v11 = CFSTR("YES");
    v15 = v9;
    v16 = 2112;
    v17 = v11;
    _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_DEFAULT, "Successfully updated temporary password for account (%@:%@): %@", (uint8_t *)&v12, 0x20u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1A2049DC4(_Unwind_Exception *exc_buf, int a2)
{
  int v2;

  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A2049D78);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A204AA14(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 buf, int a18, __int16 a19, __int16 a20,id a21,__int128 a22)
{
  id v22;
  NSObject *v23;
  id v24;
  id v25;
  void *v26;

  if (a2 == 1)
  {
    v22 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v22, "name");
        v24 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "reason");
        v25 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "userInfo");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v22;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v24;
        a20 = 2112;
        a21 = v25;
        LOWORD(a22) = 2112;
        *(_QWORD *)((char *)&a22 + 2) = v26;
        WORD5(a22) = 2080;
        *(_QWORD *)((char *)&a22 + 12) = "-[IMAccount setCachedAllowList:]";
        _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A204A9D0);
  }
  _Unwind_Resume(a1);
}

void sub_1A204ACF8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 buf, int a18, __int16 a19, __int16 a20,id a21,__int128 a22)
{
  id v22;
  NSObject *v23;
  id v24;
  id v25;
  void *v26;

  if (a2 == 1)
  {
    v22 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v22, "name");
        v24 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "reason");
        v25 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "userInfo");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v22;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v24;
        a20 = 2112;
        a21 = v25;
        LOWORD(a22) = 2112;
        *(_QWORD *)((char *)&a22 + 2) = v26;
        WORD5(a22) = 2080;
        *(_QWORD *)((char *)&a22 + 12) = "-[IMAccount setCachedBlockList:]";
        _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A204ACB4);
  }
  _Unwind_Resume(a1);
}

void sub_1A204AF14(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf, int a12, __int16 a13, __int16 a14, id a15, __int128 a16)
{
  id v16;
  NSObject *v17;
  id v18;
  id v19;
  void *v20;

  if (a2 == 1)
  {
    v16 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v16, "name");
        v18 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "reason");
        v19 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "userInfo");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v16;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v18;
        a14 = 2112;
        a15 = v19;
        LOWORD(a16) = 2112;
        *(_QWORD *)((char *)&a16 + 2) = v20;
        WORD5(a16) = 2080;
        *(_QWORD *)((char *)&a16 + 12) = "-[IMAccount setCachedBlockingMode:]";
        _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A204AE80);
  }
  _Unwind_Resume(a1);
}

void sub_1A204B134(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf, int a12, __int16 a13, __int16 a14, id a15, __int128 a16)
{
  id v16;
  NSObject *v17;
  id v18;
  id v19;
  void *v20;

  if (a2 == 1)
  {
    v16 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v16, "name");
        v18 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "reason");
        v19 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "userInfo");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v16;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v18;
        a14 = 2112;
        a15 = v19;
        LOWORD(a16) = 2112;
        *(_QWORD *)((char *)&a16 + 2) = v20;
        WORD5(a16) = 2080;
        *(_QWORD *)((char *)&a16 + 12) = "-[IMAccount setCachedBlockIdleStatus:]";
        _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A204B0A0);
  }
  _Unwind_Resume(a1);
}

void sub_1A204E460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int buf,int a40,int a41,__int16 a42,int a43,__int16 a44,__int16 a45,uint64_t a46,__int16 a47,int a48,__int16 a49,__int16 a50,__int16 a51)
{
  uint64_t v51;
  id v52;
  NSObject *v53;
  id v54;
  id v55;
  void *v56;

  if (a2 == 1)
  {
    v52 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v53 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v52, "name");
        v54 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v52, "reason");
        v55 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v52, "userInfo");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        buf = 138413314;
        *(_QWORD *)(v51 + 4) = v52;
        a42 = 2112;
        *(_QWORD *)(v51 + 14) = v54;
        a45 = 2112;
        a46 = (uint64_t)v55;
        a47 = 2112;
        *(_QWORD *)(v51 + 34) = v56;
        a50 = 2080;
        *(_QWORD *)(v51 + 44) = "-[IMAccount setBuddyProperties:buddyPictures:]";
        _os_log_impl(&dword_1A1FF4000, v53, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A204E400);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A204EC04(_Unwind_Exception *exc_buf, int a2)
{
  int v2;

  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A204EBB8);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A204F500(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int buf,int a48,int a49,__int16 a50,int a51,__int16 a52,__int16 a53,uint64_t a54,__int16 a55,int a56,__int16 a57,__int16 a58,__int16 a59)
{
  uint64_t v59;
  id v60;
  NSObject *v61;
  id v62;
  id v63;
  void *v64;

  if (a2 == 1)
  {
    v60 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v61 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v60, "name");
        v62 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v60, "reason");
        v63 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v60, "userInfo");
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        buf = 138413314;
        *(_QWORD *)(v59 + 4) = v60;
        a50 = 2112;
        *(_QWORD *)(v59 + 14) = v62;
        a53 = 2112;
        a54 = (uint64_t)v63;
        a55 = 2112;
        *(_QWORD *)(v59 + 34) = v64;
        a58 = 2080;
        *(_QWORD *)(v59 + 44) = "-[IMAccount groupsChanged:error:]";
        _os_log_impl(&dword_1A1FF4000, v61, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A204F480);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A2050FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2050FD8(uint64_t a1, int a2, int a3, int a4, int a5, int a6, id obj)
{
  id v9;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
  v9 = obj;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

uint64_t sub_1A2051460()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("FTDeviceSupport"), CFSTR("FTServices"));
  qword_1ECF12320 = result;
  return result;
}

id sub_1A2051EB8(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "typeForAlias:", v3) == *(_QWORD *)(a1 + 40))
    v4 = v3;
  else
    v4 = 0;

  return v4;
}

id sub_1A2052334(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;
  id v9;

  objc_msgSend(a2, "lowercaseString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D20BF8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v4, "supportsSMS") & 1) != 0)
  {

  }
  else
  {
    v5 = objc_msgSend(v3, "isEqualToIgnoringCase:", *MEMORY[0x1E0D35208]);

    if ((v5 & 1) != 0)
      goto LABEL_8;
  }
  if (MEMORY[0x1A858280C](v3))
  {
    IMCanonicalizeFormattedString();
    v6 = objc_claimAutoreleasedReturnValue();

    v3 = (void *)v6;
  }
  if (objc_msgSend(v3, "length"))
  {
    objc_msgSend(*(id *)(a1 + 32), "aliases");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "containsObject:", v3);

    if ((v8 & 1) == 0)
    {
      v9 = v3;
      v3 = v9;
      goto LABEL_10;
    }
  }
LABEL_8:
  v9 = 0;
LABEL_10:

  return v9;
}

id sub_1A2052420(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  objc_msgSend(a2, "trimmedString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "lowercaseString");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", v4) & 1) != 0)
    v5 = 0;
  else
    v5 = v4;

  return v5;
}

id sub_1A2052904(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;

  v2 = a2;
  if (MEMORY[0x1A858280C]())
  {
    IMCanonicalizeFormattedString();
    v3 = objc_claimAutoreleasedReturnValue();

    v2 = (id)v3;
  }
  return v2;
}

id sub_1A205294C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = a2;
  objc_msgSend(v3, "objectForKey:", *MEMORY[0x1E0D36E60]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (MEMORY[0x1A858280C]())
  {
    IMCanonicalizeFormattedString();
    v5 = objc_claimAutoreleasedReturnValue();

    v4 = (void *)v5;
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", v4) & 1) != 0)
    v6 = 0;
  else
    v6 = v3;

  return v6;
}

id sub_1A2052BDC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  objc_msgSend(a2, "lowercaseString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v2, "length") || IMStringIsEmail() && (IMAreEmailsLogicallyTheSame() & 1) != 0)
    v3 = 0;
  else
    v3 = v2;

  return v3;
}

id sub_1A2052EAC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  objc_msgSend(a2, "lowercaseString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "length"))
    v3 = v2;
  else
    v3 = 0;

  return v3;
}

void sub_1A20531DC()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:", *MEMORY[0x1E0D36EB0], CFSTR("AccountSignedOut"), *MEMORY[0x1E0D36FA0], *MEMORY[0x1E0D36F98], *MEMORY[0x1E0D36F90], *MEMORY[0x1E0D36F88], *MEMORY[0x1E0D36FD8], *MEMORY[0x1E0D36E98], *MEMORY[0x1E0D36E88], *MEMORY[0x1E0D36FB8], *MEMORY[0x1E0D36FB0], *MEMORY[0x1E0D36EF0], *MEMORY[0x1E0D36F10], *MEMORY[0x1E0D36F18], *MEMORY[0x1E0D36FC0], *MEMORY[0x1E0D36FE8], *MEMORY[0x1E0D36F78],
    *MEMORY[0x1E0D36EE0],
    *MEMORY[0x1E0D36FA8],
    *MEMORY[0x1E0D36FC8],
    *MEMORY[0x1E0D36FD0],
    *MEMORY[0x1E0D36F38],
    *MEMORY[0x1E0D36F40],
    *MEMORY[0x1E0D36F48],
    *MEMORY[0x1E0D36F50],
    0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1EE65F448;
  qword_1EE65F448 = v0;

}

void sub_1A20559C0(void *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A2055760);
  }
  JUMPOUT(0x1A20559B8);
}

void sub_1A2056944(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,__int128 buf,int a22,__int16 a23,__int16 a24,id a25,__int128 a26)
{
  id v26;
  NSObject *v27;
  id v28;
  void *v29;
  id v30;

  if (a2 == 1)
  {
    v26 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v26, "name");
        v30 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "reason");
        v28 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "userInfo");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v26;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v30;
        a24 = 2112;
        a25 = v28;
        LOWORD(a26) = 2112;
        *(_QWORD *)((char *)&a26 + 2) = v29;
        WORD5(a26) = 2080;
        *(_QWORD *)((char *)&a26 + 12) = "-[_IMLegacyDaemonListener pinCodeAlertCompleted:deviceName:deviceType:phoneNumb"
                                         "er:responseFromDevice:wasCancelled:]";
        _os_log_impl(&dword_1A1FF4000, v27, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A20568F0);
  }
  _Unwind_Resume(a1);
}

void sub_1A2058584(void *exc_buf, int a2)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a2 == 1)
  {
    v3 = objc_begin_catch(exc_buf);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v3, "name");
        v5 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "reason");
        v6 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "userInfo");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)(v2 - 160) = 138413314;
        v8 = v2 - 160;
        *(_QWORD *)(v8 + 4) = v3;
        *(_WORD *)(v2 - 148) = 2112;
        *(_QWORD *)(v8 + 14) = v5;
        *(_WORD *)(v2 - 138) = 2112;
        *(_QWORD *)(v2 - 136) = v6;
        *(_WORD *)(v2 - 128) = 2112;
        *(_QWORD *)(v8 + 34) = v7;
        *(_WORD *)(v2 - 118) = 2080;
        *(_QWORD *)(v8 + 44) = "-[_IMLegacyDaemonListener account:postedError:]";
        _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)(v2 - 160), 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A2058384);
  }
  JUMPOUT(0x1A205857CLL);
}

void sub_1A20586A4(_Unwind_Exception *exc_buf, int a2)
{
  int v2;

  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A2058688);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A20591BC()
{
  JUMPOUT(0x1A20591C4);
}

void sub_1A20599A8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A205993CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A205A304(uint64_t a1, void *a2, void *a3)
{
  objc_class *v5;
  id v6;
  id v7;
  id v8;

  v5 = (objc_class *)MEMORY[0x1E0D39980];
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_msgSend([v5 alloc], "initWithDictionaryRepresentation:", v6);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v8, v7);
}

void sub_1A205A37C(uint64_t a1, void *a2, void *a3)
{
  objc_class *v5;
  id v6;
  id v7;
  id v8;

  v5 = (objc_class *)MEMORY[0x1E0D39980];
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_msgSend([v5 alloc], "initWithDictionaryRepresentation:", v6);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v8, v7);
}

void sub_1A205A3F4(uint64_t a1, void *a2, void *a3)
{
  objc_class *v5;
  id v6;
  id v7;
  id v8;

  v5 = (objc_class *)MEMORY[0x1E0D39980];
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_msgSend([v5 alloc], "initWithDictionaryRepresentation:", v6);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v8, v7);
}

id sub_1A205AA6C(void *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  objc_msgSend(a1, "remoteMembers", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * i), "handle");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "value");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        if (v9)
        {
          objc_msgSend(v2, "addObject:", v9);
        }
        else
        {
          objc_msgSend(v8, "value");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v2, "addObject:", v10);

        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

  return v2;
}

void sub_1A205B154(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "cloudKitEventNotificationManager:syncStateDidChange:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1A205B30C(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "cloudKitHooks");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "broadcastCloudKitState");

}

void sub_1A205B33C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;

  v5 = *(void **)(a1 + 32);
  objc_msgSend(a4, "userInfo");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "syncStateWithDictionary:", v6);
  v8 = (id)objc_claimAutoreleasedReturnValue();

  v7 = *(_QWORD *)(a1 + 40);
  if (v7)
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v8);

}

void sub_1A205B470(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  void *v7;
  uint8_t v8[16];

  v4 = a2;
  v5 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Fetching latest ramp state", v8, 2u);
    }

  }
  objc_msgSend(v4, "cloudKitHooks");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchLatestRampState");

}

void sub_1A205B538(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint8_t v14[16];

  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Fetched latest ramp state", v14, 2u);
    }

  }
  objc_msgSend(v9, "userInfo");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKey:", CFSTR("IMCloudKitRampStateKey"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = *(_QWORD *)(a1 + 32);
  if (v13)
    (*(void (**)(uint64_t, void *))(v13 + 16))(v13, v12);

}

void sub_1A205B7BC(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "cloudKitHooks");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "broadcastCloudKitStateAfterClearingErrors");

}

void sub_1A205B7EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;

  v5 = *(void **)(a1 + 32);
  objc_msgSend(a4, "userInfo");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "syncStateWithDictionary:", v6);
  v8 = (id)objc_claimAutoreleasedReturnValue();

  v7 = *(_QWORD *)(a1 + 40);
  if (v7)
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v8);

}

void sub_1A205B9C4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  char v19;
  uint8_t buf[4];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a3;
  v8 = a4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v8, "userInfo");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v21 = v10;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "setEnabledDidReturned with response: %@", buf, 0xCu);

    }
  }
  if (objc_msgSend(v8, "didSucceed"))
  {
    objc_msgSend(v8, "userInfo");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("ResultSuccess"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "BOOLValue");

  }
  else
  {
    v13 = 0;
  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = sub_1A205BB90;
  v16[3] = &unk_1E471F160;
  v19 = v13;
  v17 = v6;
  v18 = v8;
  v14 = v8;
  v15 = v6;
  objc_msgSend(v15, "visitEventHandlers:", v16);

}

void sub_1A205BB90(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v3 = *(unsigned __int8 *)(a1 + 48);
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "error");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cloudKitEventNotificationManager:didChangeEnabled:error:", v4, v3, v5);

  }
}

void sub_1A205BC04(uint64_t a1, void *a2)
{
  id v3;

  objc_msgSend(a2, "cloudKitHooks");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setEnabled:", *(unsigned __int8 *)(a1 + 32));

}

void sub_1A205BDC4(uint64_t a1, void *a2)
{
  id v3;

  objc_msgSend(a2, "cloudKitHooks");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setEnabled:", *(unsigned __int8 *)(a1 + 32));

}

void sub_1A205BE04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;

  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    v5 = a4;
    v6 = objc_msgSend(v5, "didSucceed");
    objc_msgSend(v5, "error");
    v7 = (id)objc_claimAutoreleasedReturnValue();

    (*(void (**)(uint64_t, uint64_t, id))(v4 + 16))(v4, v6, v7);
  }
}

void sub_1A205C244(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  char v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  char v18;
  uint8_t buf[4];
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a3;
  v8 = a4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v8;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "tryToDisableAllDeviceReturned with response: %@", buf, 0xCu);
    }

  }
  if (objc_msgSend(v8, "didSucceed"))
  {
    objc_msgSend(v8, "userInfo");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("ResultSuccess"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "BOOLValue");

  }
  else
  {
    v12 = 0;
  }
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = sub_1A205C3F8;
  v15[3] = &unk_1E471F160;
  v18 = v12;
  v16 = v6;
  v17 = v8;
  v13 = v8;
  v14 = v6;
  objc_msgSend(v14, "visitEventHandlers:", v15);

}

void sub_1A205C3F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v3 = *(unsigned __int8 *)(a1 + 48);
    v4 = *(_QWORD *)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "error");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cloudKitEventNotificationManager:didDisableAllDevices:error:", v4, v3, v5);

  }
}

void sub_1A205C46C(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "cloudKitHooks");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "tryToDisableAllDevices");

}

void sub_1A205C584(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  int v10;
  char v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  char v25;
  uint8_t buf[4];
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a3;
  v8 = a4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v27 = v8;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Did check if additional storage is required with response: %@", buf, 0xCu);
    }

  }
  v10 = objc_msgSend(v8, "didSucceed");
  v11 = v10;
  if (v10)
  {
    objc_msgSend(v8, "userInfo");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("ResultAdditionalStorageRequired"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "longLongValue");

    objc_msgSend(v8, "userInfo");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("ResultiCloudAccountId"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_1A205C790;
  v20[3] = &unk_1E471F1E8;
  v25 = v11;
  v21 = v6;
  v22 = v16;
  v23 = v8;
  v24 = v14;
  v17 = v8;
  v18 = v16;
  v19 = v6;
  objc_msgSend(v19, "visitEventHandlers:", v20);

}

void sub_1A205C790(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v3 = *(unsigned __int8 *)(a1 + 64);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(_QWORD *)(a1 + 56);
    objc_msgSend(*(id *)(a1 + 48), "error");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "cloudKitEventNotificationManager:didPerformAdditionalStorageRequiredCheck:additionalStorageRequired:forAccountId:error:", v4, v3, v6, v5, v7);

  }
}

void sub_1A205C818(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "cloudKitHooks");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "performAdditionalStorageRequiredCheck");

}

void sub_1A205C950(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  void *v6;
  NSObject *v7;
  IMCloudKitSyncStatistics *v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;

  v5 = a4;
  if (objc_msgSend(v5, "didSucceed"))
  {
    objc_msgSend(v5, "userInfo");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKey:", CFSTR("IMCloudKitSyncStatisticsKey"));
    v7 = objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      v8 = -[IMCloudKitSyncStatistics initWithStatisticsDictionary:]([IMCloudKitSyncStatistics alloc], "initWithStatisticsDictionary:", v7);
      objc_msgSend(*(id *)(a1 + 32), "logHandle");
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
        sub_1A2196460(v8, v9);
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "logHandle");
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1A2196424(v9);
      v8 = 0;
    }

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "logHandle");
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1A21964E4(v5, v7);
    v8 = 0;
  }

  v10 = *(_QWORD *)(a1 + 40);
  if (v10)
  {
    objc_msgSend(v5, "error");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, IMCloudKitSyncStatistics *, void *))(v10 + 16))(v10, v8, v11);

  }
}

void sub_1A205CAA0(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "cloudKitHooks");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fetchSyncStateStatistics");

}

void sub_1A205CB74(_QWORD *a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "cloudKitEventNotificationManager:didFetchSyncStatistics:error:", a1[4], a1[5], a1[6]);

}

uint64_t sub_1A205CC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "_sendSyncStatisticsToEventHandlers:error:", a2, a3);
}

void sub_1A205CC9C(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v4 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_sendSyncStatisticsToEventHandlers:error:");
  v3 = *(_QWORD *)(a1 + 40);
  if (v3)
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);

}

uint64_t sub_1A205CDB8(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t result;

  result = objc_opt_respondsToSelector();
  if ((result & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
  return result;
}

void sub_1A205D084(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "cloudKitEventNotificationManager:syncProgressDidUpdate:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1A205D360(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  IMCloudKitSyncStatistics *v13;
  void *v14;
  IMCloudKitSyncState *v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  uint8_t buf[4];
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a3;
  v8 = a4;
  objc_msgSend(v8, "userInfo");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v9;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Fetched sync state debugging info: %@", buf, 0xCu);
    }

  }
  v11 = (void *)objc_msgSend(v9, "mutableCopy");
  objc_msgSend(v9, "objectForKey:", CFSTR("sync-statistics-from-database"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    v13 = -[IMCloudKitSyncStatistics initWithStatisticsDictionary:]([IMCloudKitSyncStatistics alloc], "initWithStatisticsDictionary:", v12);
    objc_msgSend(v11, "setObject:forKey:", v13, CFSTR("sync-statistics"));

  }
  objc_msgSend(v9, "objectForKey:", CFSTR("sync-state-user-defaults"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    v15 = -[IMCloudKitSyncState initWithAccountEnabled:stateDictionary:]([IMCloudKitSyncState alloc], "initWithAccountEnabled:stateDictionary:", objc_msgSend(v6, "accountHasiMessageEnabled"), v14);
    objc_msgSend(v11, "setObject:forKey:", v15, CFSTR("sync-state"));

  }
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = sub_1A205D5A0;
  v18[3] = &unk_1E471F2D0;
  v19 = v6;
  v20 = v11;
  v16 = v11;
  v17 = v6;
  objc_msgSend(v17, "visitEventHandlers:", v18);

}

void sub_1A205D5A0(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "cloudKitEventNotificationManager:didFetchSyncDebuggingInfo:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1A205D5EC(uint64_t a1, void *a2)
{
  id v3;

  objc_msgSend(a2, "cloudKitHooks");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fetchCloudKitSyncStateDebuggingInfo:", *(_QWORD *)(a1 + 32));

}

void sub_1A205D6E4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_1A205D700(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

uint64_t sub_1A205D794(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2;
  v5 = a3;
  objc_msgSend(v4, "time");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "time");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "compare:", v7);

  if (!v8)
  {
    v9 = objc_msgSend(v4, "messageID");
    if (v9 >= objc_msgSend(v5, "messageID"))
    {
      v10 = objc_msgSend(v4, "messageID");
      v8 = v10 > objc_msgSend(v5, "messageID");
    }
    else
    {
      v8 = -1;
    }
  }

  return v8;
}

void sub_1A205E6DC()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  if (!qword_1EE65F308)
  {
    v0 = (void *)MEMORY[0x1E0CB3500];
    objc_msgSend((id)*MEMORY[0x1E0D362F8], "stringByAppendingString:", *MEMORY[0x1E0D36318]);
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "characterSetWithCharactersInString:", v3);
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)qword_1EE65F308;
    qword_1EE65F308 = v1;

  }
}

uint64_t sub_1A205EB2C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendFormat:", CFSTR("%@\n"), a2);
}

uint64_t sub_1A205F07C(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v4;
}

uint64_t sub_1A205F140(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;

  objc_msgSend(a2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "supportsCapability:", *(_QWORD *)(a1 + 32));
  return v5;
}

id sub_1A205F1C4(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AD74;
  v8 = sub_1A200AC2C;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A205F28C;
  v3[3] = &unk_1E471F390;
  v3[4] = &v4;
  objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:", 0, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A205F274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A205F28C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  if (!objc_msgSend(v7, "type"))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

id sub_1A205F2F0(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AD74;
  v8 = sub_1A200AC2C;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A205F3B8;
  v3[3] = &unk_1E471F390;
  v3[4] = &v4;
  objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:", 2, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A205F3A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A205F3B8(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  if (!objc_msgSend(v7, "type"))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_1A205F714()
{
  id v0;

  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_agentDidLaunchNotification:", 0);

}

uint64_t sub_1A205F944(uint64_t a1, void *a2)
{
  void (**v2)(_QWORD);

  v2 = a2;
  os_unfair_recursive_lock_lock_with_options();
  v2[2](v2);

  return os_unfair_recursive_lock_unlock();
}

void sub_1A205F988(char a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  id v15;
  void *v16;
  int v17;
  id *v18;
  void (**v19)(_QWORD);
  void *v20;
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  _QWORD v30[5];
  id v31;

  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  objc_msgSend(MEMORY[0x1E0D36A50], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isNonUIInstall");

  if (!v17)
  {
    if ((a1 & 1) != 0 || (_IMDaemonIsRunning() & 1) != 0)
    {
      v21[0] = MEMORY[0x1E0C809B0];
      v21[1] = 3221225472;
      v21[2] = sub_1A205FBAC;
      v21[3] = &unk_1E471F438;
      v18 = &v22;
      v22 = v11;
      v23 = v12;
      v24 = v13;
      v25 = v15;
      v19 = (void (**)(_QWORD))_Block_copy(v21);
      v20 = v19;
      if (v14)
        dispatch_async(v14, v19);
      else
        v19[2](v19);

      goto LABEL_12;
    }
    v26 = MEMORY[0x1E0C809B0];
    v27 = 3221225472;
    v28 = sub_1A205FB90;
    v29 = &unk_1E471E528;
    v18 = (id *)v30;
    v30[0] = v15;
LABEL_11:
    im_dispatch_after();
LABEL_12:

    goto LABEL_13;
  }
  if (v15)
  {
    v30[1] = MEMORY[0x1E0C809B0];
    v30[2] = 3221225472;
    v30[3] = sub_1A205FB7C;
    v30[4] = &unk_1E471E528;
    v18 = &v31;
    v31 = v15;
    goto LABEL_11;
  }
LABEL_13:

}

uint64_t sub_1A205FB7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1A205FB90(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, 0);
  return result;
}

void sub_1A205FBAC(uint64_t a1)
{
  void (*IMDaemonRequestConnectionWithSync)(uint64_t, uint64_t, void *, uint64_t, _QWORD *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[4];
  id v8;

  IMDaemonRequestConnectionWithSync = (void (*)(uint64_t, uint64_t, void *, uint64_t, _QWORD *))IMSharedHelperGet_IMDaemonRequestConnectionWithSync();
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 48), "connection");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A205FC6C;
  v7[3] = &unk_1E471F410;
  v8 = *(id *)(a1 + 56);
  IMDaemonRequestConnectionWithSync(v3, v4, v6, 1, v7);
  if (v5)

}

void sub_1A205FC6C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  if (v5)
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D36AB0]), "initWithConnection:protocol:alreadyConfigured:forceSecureCoding:", v5, &unk_1EE6B41A8, 1, 1);
  else
    v7 = 0;
  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(MEMORY[0x1E0CB3978], "mainThread");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = sub_1A205FDA0;
    v9[3] = &unk_1E471F3E8;
    v12 = *(id *)(a1 + 32);
    v10 = v7;
    v11 = v6;
    objc_msgSend(v8, "__im_performBlock:modes:", v9, *MEMORY[0x1E0D36798]);

  }
}

uint64_t sub_1A205FDA0(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A20605B0(uint64_t a1)
{
  char v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD v9[5];
  id v10;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  IMTimingStartTimingForKey();
  v2 = *(_BYTE *)(a1 + 64);
  objc_msgSend(*(id *)(a1 + 32), "listenerID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(v6 + 160);
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1A20606A4;
  v9[3] = &unk_1E471F460;
  v9[4] = v6;
  v10 = v4;
  sub_1A205F988(v2, v3, v7, v5, v8, v9);

}

void sub_1A20606A4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[5];
  _QWORD v27[5];
  _QWORD v28[5];
  id v29;
  _QWORD block[5];
  _QWORD v31[5];
  id v32;
  uint8_t buf[4];
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  IMTimingStopTimingForKey();
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) = 0;
  objc_msgSend(*(id *)(a1 + 32), "_remoteObjectCleanup");
  v7 = *(_QWORD *)(a1 + 32);
  v8 = MEMORY[0x1E0C809B0];
  v9 = v7 + 144;
  v31[0] = MEMORY[0x1E0C809B0];
  v31[1] = 3221225472;
  v31[2] = sub_1A2060A5C;
  v31[3] = &unk_1E471E7C8;
  v31[4] = v7;
  v10 = v5;
  v32 = v10;
  sub_1A205F944(v9, v31);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(NSObject **)(v11 + 152);
  block[0] = v8;
  block[1] = 3221225472;
  block[2] = sub_1A2060A68;
  block[3] = &unk_1E471E348;
  block[4] = v11;
  dispatch_sync(v12, block);
  objc_msgSend(*(id *)(a1 + 32), "_localObjectCleanup");
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(NSObject **)(v13 + 152);
  v28[0] = v8;
  v28[1] = 3221225472;
  v28[2] = sub_1A2060ABC;
  v28[3] = &unk_1E471E7C8;
  v28[4] = v13;
  v15 = v10;
  v29 = v15;
  dispatch_sync(v14, v28);
  if (objc_msgSend(*(id *)(a1 + 32), "remoteObjectExists"))
  {
    v16 = *(_QWORD *)(a1 + 32);
    v27[0] = v8;
    v27[1] = 3221225472;
    v27[2] = sub_1A2060BAC;
    v27[3] = &unk_1E471E348;
    v27[4] = v16;
    sub_1A205F944(v16 + 144, v27);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_INFO, "Connection to daemon established", buf, 2u);
      }

    }
    v18 = *(_QWORD *)(a1 + 32);
    v26[0] = v8;
    v26[1] = 3221225472;
    v26[2] = sub_1A2060C9C;
    v26[3] = &unk_1E471E348;
    v26[4] = v18;
    sub_1A205F944(v18 + 144, v26);
    v19 = *(_QWORD *)(a1 + 32);
    v20 = *(NSObject **)(v19 + 152);
    v25[0] = v8;
    v25[1] = 3221225472;
    v25[2] = sub_1A2060CF8;
    v25[3] = &unk_1E471E348;
    v25[4] = v19;
    dispatch_sync(v20, v25);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "setupComplete:info:", 1, v6);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(*(id *)(a1 + 32), "listenerID");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v34 = v22;
        _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "  Failed to build remote object for listener: %@", buf, 0xCu);

      }
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "Failed to launch and connect to daemon", buf, 2u);
      }

    }
    objc_msgSend(*(id *)(a1 + 32), "_localObjectCleanup");
  }
  v24 = *(_QWORD *)(a1 + 40);
  if (v24)
    (*(void (**)(void))(v24 + 16))();

}

void sub_1A2060A5C(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 96), *(id *)(a1 + 40));
}

void sub_1A2060A68(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "removeObserver:name:object:", *(_QWORD *)(a1 + 32), *MEMORY[0x1E0D365F8], *(_QWORD *)(*(_QWORD *)(a1 + 32) + 112));

}

void sub_1A2060ABC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  v2 = objc_alloc(MEMORY[0x1E0D36A48]);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32);
  objc_msgSend(*(id *)(a1 + 40), "connection");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v2, "initWithTarget:connection:protocol:forceSecureCoding:", v3, v4, &unk_1EE6B4318, 1);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(v6 + 112);
  *(_QWORD *)(v6 + 112) = v5;

  v8 = *(void **)(*(_QWORD *)(a1 + 32) + 112);
  v10[0] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAllowlistedClasses:", v9);

}

void sub_1A2060BAC(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
      v4 = 138412290;
      v5 = v3;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "  Built object: %@", (uint8_t *)&v4, 0xCu);
    }

  }
}

void sub_1A2060C9C(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), sel_remoteObjectDiedNotification_, *MEMORY[0x1E0D36788], *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96));

}

void sub_1A2060CF8(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), sel_localObjectDiedNotification_, *MEMORY[0x1E0D365F8], *(_QWORD *)(*(_QWORD *)(a1 + 32) + 112));

}

uint64_t sub_1A2060D54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1A2060D60(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  objc_msgSend(MEMORY[0x1E0CB3978], "mainThread");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A2060DD8;
  v3[3] = &unk_1E471E348;
  v3[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "__im_performBlock:", v3);

}

id sub_1A2060DD8(uint64_t a1)
{
  id result;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  result = (id)objc_msgSend(*(id *)(a1 + 32), "capabilities");
  if ((*MEMORY[0x1E0D36D18] & result) == 0)
  {
    v2 = +[IMHandleRegistrar sharedInstance](IMHandleRegistrar, "sharedInstance");
    v3 = +[IMParentalControls standardControls](IMParentalControls, "standardControls");
    v4 = (id)objc_msgSend(MEMORY[0x1E0D36AD0], "sharedInstance");
    v5 = (id)objc_msgSend(MEMORY[0x1E0D20C00], "sharedInstance");
    v6 = (id)objc_msgSend(MEMORY[0x1E0D20BF8], "sharedInstance");
    v7 = (id)objc_msgSend(MEMORY[0x1E0D34E78], "sharedInstanceForBagType:", 1);
    return sub_1A20F1964();
  }
  return result;
}

void sub_1A2060F38()
{
  NSObject *v0;
  uint8_t v1[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v0 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v1 = 0;
      _os_log_impl(&dword_1A1FF4000, v0, OS_LOG_TYPE_INFO, "Flushed send queue", v1, 2u);
    }

  }
}

void sub_1A2061238(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 buf, int a16, __int16 a17, __int16 a18, id a19, __int128 a20)
{
  id v20;
  NSObject *v21;
  id v22;
  id v23;
  void *v24;

  if (a2 == 1)
  {
    v20 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v20, "name");
        v22 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "reason");
        v23 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "userInfo");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v20;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v22;
        a18 = 2112;
        a19 = v23;
        LOWORD(a20) = 2112;
        *(_QWORD *)((char *)&a20 + 2) = v24;
        WORD5(a20) = 2080;
        *(_QWORD *)((char *)&a20 + 12) = "-[_IMLegacyDaemonController _disconnectFromDaemonWithForce:]";
        _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A20611A0);
  }
  _Unwind_Resume(a1);
}

void sub_1A206138C(uint64_t a1)
{
  id *v2;
  void *v3;
  NSObject *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  id WeakRetained;
  char v17;
  id v18;
  id v19;
  char v20;
  id v21;
  void *v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t buf[56];
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "listener");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_setHidingDisconnect:", 0);

  if ((objc_msgSend(*v2, "isConnected") & 1) != 0 || (objc_msgSend(*(id *)(a1 + 32), "isConnecting") & 1) != 0)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "We're still connected, hiding the disconnect!", buf, 2u);
      }

    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "We're still not connected, kicking off disconnect notification", buf, 2u);
      }

    }
    v6 = (void *)MEMORY[0x1E0C99D80];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "dictionaryWithObjectsAndKeys:", v7, *MEMORY[0x1E0D36DF8], &stru_1E4725068, *MEMORY[0x1E0D36E00], 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "accountsForService:", 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    if (v11)
    {
      v12 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v25 != v12)
            objc_enumerationMutation(v10);
          objc_msgSend(*(id *)(*((_QWORD *)&v24 + 1) + 8 * i), "setCurrentAccountStatus:", v8);
        }
        v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
      }
      while (v11);
    }

    objc_msgSend(*(id *)(a1 + 32), "listener");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "allServices");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "makeObjectsPerformSelector:", sel_disconnect);

    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 88));
    v17 = objc_opt_respondsToSelector();

    if ((v17 & 1) != 0)
    {
      v18 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 88));
      objc_msgSend(v18, "performSelector:withObject:", sel_daemonControllerDidDisconnect, 0);

    }
    v19 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 88));
    v20 = objc_opt_respondsToSelector();

    if ((v20 & 1) != 0)
    {
      v21 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 88));
      objc_msgSend(v21, "performSelector:withObject:", sel_daemonConnectionLost, 0);

    }
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "__mainThreadPostNotificationName:object:", CFSTR("__kIMDaemonConnectionLostNotification"), 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "__mainThreadPostNotificationName:object:", CFSTR("__kIMDaemonDidDisconnectNotification"), 0);

    if (qword_1EE65EA90 != -1)
      dispatch_once(&qword_1EE65EA90, &unk_1E471F4A8);
    if (byte_1EE65F459)
      im_dispatch_after();

  }
}

void sub_1A2061934()
{
  id v0;

  IMGetMainBundleIdentifier();
  v0 = (id)objc_claimAutoreleasedReturnValue();
  byte_1EE65F459 = objc_msgSend(v0, "isEqualToIgnoringCase:", *MEMORY[0x1E0D36FF8]);

}

uint64_t sub_1A2061974(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "connectToDaemon");
}

void sub_1A2061C70(uint64_t a1)
{
  uint64_t v2;
  id WeakRetained;
  char v4;
  NSObject *v5;
  id v6;
  uint8_t buf[16];

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 168), "lock");
  v2 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v2 + 13))
  {
    *(_BYTE *)(v2 + 13) = 0;
    dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 192));
    v2 = *(_QWORD *)(a1 + 32);
  }
  objc_msgSend(*(id *)(v2 + 168), "unlock");
  if (objc_msgSend(*(id *)(a1 + 32), "remoteObjectExists"))
  {
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 88));
    v4 = objc_opt_respondsToSelector();

    if ((v4 & 1) != 0)
    {
      v6 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 88));
      objc_msgSend(v6, "performSelector:withObject:", sel_daemonControllerDidConnect, 0);

    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Tried to connect to daemon but we got no remote object ... handling as if the remote object died.", buf, 2u);
      }

    }
    objc_msgSend(*(id *)(a1 + 32), "remoteObjectDiedNotification:", 0);
  }
}

void sub_1A20621CC(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A2062174);
  }
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(exc_buf);
}

uint64_t sub_1A206222C(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "count");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result != 0;
  return result;
}

void sub_1A2062340(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 104))
  {
    v2 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(void **)(v3 + 104);
    *(_QWORD *)(v3 + 104) = v2;

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 40);
      _IMStringFromFZListenerCapabilities();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138412546;
      v11 = v6;
      v12 = 2112;
      v13 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Adding listener with ID: %@    capabilities: %@", (uint8_t *)&v10, 0x16u);

    }
  }
  v8 = *(void **)(*(_QWORD *)(a1 + 32) + 104);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *(unsigned int *)(a1 + 48));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forKey:", v9, *(_QWORD *)(a1 + 40));

}

void sub_1A2062544(_QWORD *a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1[4] + 104), "objectForKey:", a1[5]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = v2 != 0;

}

void sub_1A2062670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2062688(_QWORD *a1)
{
  void *v2;
  int v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1[4] + 104), "objectForKey:", a1[5]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v3 = IMOSLoggingEnabled();
  if (v2)
  {
    if (v3)
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        v5 = a1[5];
        objc_msgSend(*(id *)(a1[4] + 104), "objectForKey:", v5);
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "unsignedIntValue");
        _IMStringFromFZListenerCapabilities();
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = 138412546;
        v11 = v5;
        v12 = 2112;
        v13 = v7;
        _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Removing listener with ID: %@    capabilities: %@", (uint8_t *)&v10, 0x16u);

      }
    }
    objc_msgSend(*(id *)(a1[4] + 104), "removeObjectForKey:", a1[5]);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  }
  else if (v3)
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = a1[5];
      v10 = 138412290;
      v11 = v9;
      _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Tried to remove non existent listener with ID: %@", (uint8_t *)&v10, 0xCu);
    }

  }
}

void sub_1A206294C(_QWORD *a1)
{
  id v2;

  objc_msgSend(*(id *)(a1[4] + 104), "objectForKey:", a1[5]);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend(v2, "unsignedIntValue");

}

void sub_1A2062B48(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 104);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *(unsigned int *)(a1 + 48));
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v3, *(_QWORD *)(a1 + 40));

}

void sub_1A2062DE0()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v8[0] = CFSTR("QbQzuIbef01P4JeoL9EmKg");
  v8[1] = CFSTR("NUYAz1eq3Flzt7ZQxXC/ng");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v0 = (void *)MGCopyMultipleAnswers();
  objc_msgSend(v0, "objectForKey:", CFSTR("QbQzuIbef01P4JeoL9EmKg"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "doubleValue");
  v3 = v2 * 10.0;
  objc_msgSend(v0, "objectForKey:", CFSTR("NUYAz1eq3Flzt7ZQxXC/ng"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "doubleValue");
  v6 = v3 * v5;

  v7 = fmin(v6 + -0.5, 10.0);
  if (v7 <= 0.0)
    v7 = 10.0;
  qword_1ECF12070 = *(_QWORD *)&v7;

}

void sub_1A206371C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_alloc_init(MEMORY[0x1E0CB3740]);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 184);
  *(_QWORD *)(v3 + 184) = v2;

}

void sub_1A2063838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A2063850(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "isValid");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1A2063924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A206393C(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "isValid");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1A2063A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A2063A18(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 96) != 0;
  return result;
}

uint64_t sub_1A2063AD8(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 112) != 0;
  return result;
}

void sub_1A2063B4C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "setTarget:", 0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "invalidate");
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 112);
  *(_QWORD *)(v2 + 112) = 0;

}

void sub_1A2063BE8(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "invalidate");
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 96);
  *(_QWORD *)(v2 + 96) = 0;

}

uint64_t sub_1A2063CD4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  _QWORD v5[5];

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "count");
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(void **)(*(_QWORD *)(a1 + 32) + 104);
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = sub_1A2063D48;
    v5[3] = &unk_1E471F5B0;
    v5[4] = v3;
    return objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", v5);
  }
  return result;
}

void sub_1A2063D48(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  int v7;
  NSObject *v8;
  void *v9;
  int v10;
  id v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v7 = objc_msgSend(v6, "unsignedIntValue");
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      _IMStringFromFZListenerCapabilities();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138412546;
      v11 = v5;
      v12 = 2112;
      v13 = v9;
      _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, " => Reading listener: %@    capabilities: %@", (uint8_t *)&v10, 0x16u);

    }
  }
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) |= v7;

}

uint64_t sub_1A20640FC(uint64_t a1)
{
  NSObject *v2;
  uint64_t result;
  uint8_t v4[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, " ... disconnection from agent (local) being handled by main thread", v4, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "_disconnectFromDaemonWithForce:", 1);
  result = objc_msgSend(*(id *)(a1 + 32), "_connectToDaemonWithLaunch:capabilities:", 1, 0);
  byte_1EE65EA98 = 0;
  return result;
}

void sub_1A20642BC(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  _BYTE *v4;
  int v5;
  NSObject *v6;
  uint8_t buf[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, " ... disconnection from agent (remote) being handled by main thread", buf, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "_disconnectFromDaemonWithForce:", 1);
  objc_msgSend(MEMORY[0x1E0D36AD0], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "systemIsShuttingDown") & 1) != 0)
    goto LABEL_16;
  v4 = *(_BYTE **)(a1 + 32);
  if (v4[14])
  {
    if ((objc_msgSend(v4, "_blocksConnectionAtResume") & 1) != 0)
    {
LABEL_16:

      goto LABEL_17;
    }
    v4 = *(_BYTE **)(a1 + 32);
  }
  if (!objc_msgSend(v4, "_autoReconnect"))
    goto LABEL_16;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 11);

  if (!v5)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Will auto reconnect...", buf, 2u);
      }

    }
    im_dispatch_after();
  }
LABEL_17:
  byte_1EE65EA98 = 0;
}

uint64_t sub_1A2064464(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, " ...auto reconnecting", v4, 2u);
    }

  }
  return objc_msgSend(*(id *)(a1 + 32), "connectToDaemon");
}

void sub_1A2064960(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  id v9;
  __int16 v10;

  objc_msgSend(MEMORY[0x1E0CB3978], "currentThread");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "threadDictionary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("com.apple.IMDaemonControllerForwardingMessageKey"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 32), CFSTR("com.apple.IMDaemonControllerForwardingMessageKey"));
  if (objc_msgSend(*(id *)(a1 + 32), "connectToDaemon"))
  {
    v8[0] = MEMORY[0x1E0C809B0];
    v8[2] = sub_1A2064A60;
    v8[3] = &unk_1E471F600;
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(void **)(a1 + 40);
    v7 = v5 + 144;
    v8[1] = 3221225472;
    v8[4] = v5;
    v10 = *(_WORD *)(a1 + 48);
    v9 = v6;
    sub_1A205F944(v7, v8);

  }
  objc_msgSend(v3, "setObject:forKeyedSubscript:", v4, CFSTR("com.apple.IMDaemonControllerForwardingMessageKey"));

}

void sub_1A2064A60(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;

  v5 = *(id *)(*(_QWORD *)(a1 + 32) + 96);
  v2 = objc_alloc_init(MEMORY[0x1E0D36A60]);
  if ((objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    if (*(_BYTE *)(a1 + 48))
    {
      objc_msgSend(v2, "setSync:", 1);
    }
    else if (*(_BYTE *)(a1 + 49))
    {
      objc_msgSend(v2, "setNeedReply:", 1);
    }
  }
  objc_msgSend(MEMORY[0x1E0D36AB8], "defaultBroadcaster");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "broadcastProxyForTarget:messageContext:protocol:", v5, v2, &unk_1EE6B41A8);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    objc_msgSend(*(id *)(a1 + 40), "invokeWithTarget:", v4);

}

void sub_1A206527C(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "map");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

}

void sub_1A2065354(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * v6);
        objc_msgSend(*(id *)(a1 + 40), "map", (_QWORD)v9);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "removeObjectForKey:", v7);

        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v4);
  }

}

void sub_1A2065504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A206551C(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "map");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "count");

}

void sub_1A2065A68(_Unwind_Exception *a1, int a2)
{
  uint64_t v2;

  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2)
      JUMPOUT(0x1A2065A0CLL);
    JUMPOUT(0x1A20659F8);
  }
  _Unwind_Resume(a1);
}

void sub_1A2065FBC(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2065F3CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A2066628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13, __int128 a14)
{
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  void *v18;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v14, "name");
        v16 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "reason");
        v17 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "userInfo");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(a9) = 138413314;
        *(_QWORD *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(_QWORD *)((char *)&a9 + 14) = v16;
        a12 = 2112;
        a13 = (uint64_t)v17;
        LOWORD(a14) = 2112;
        *(_QWORD *)((char *)&a14 + 2) = v18;
        WORD5(a14) = 2080;
        *(_QWORD *)((char *)&a14 + 12) = "-[IMAccountController accountLoginComplete:]";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A20665ECLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A206695C(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "supportsCapability:", *(_QWORD *)(a1 + 32));

  return v4;
}

uint64_t sub_1A2066A24(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "accountActive:", v3))
  {
    objc_msgSend(v3, "service");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "supportsCapability:", *(_QWORD *)(a1 + 40));

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

uint64_t sub_1A2066AD0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isConnected");
}

void sub_1A2066C34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A2066DBC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1A2067498(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13, __int128 a14)
{
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  void *v18;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(exc_buf);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v14, "name");
        v16 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "reason");
        v17 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "userInfo");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(a9) = 138413314;
        *(_QWORD *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(_QWORD *)((char *)&a9 + 14) = v16;
        a12 = 2112;
        a13 = (uint64_t)v17;
        LOWORD(a14) = 2112;
        *(_QWORD *)((char *)&a14 + 2) = v18;
        WORD5(a14) = 2080;
        *(_QWORD *)((char *)&a14 + 12) = "-[IMAccountController deleteAccount:locally:]";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A20672C0);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A20675B0(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, uint64_t a10, __int16 a11, uint64_t a12, __int16 a13, uint64_t a14, __int16 a15, uint64_t a16, __int16 a17, uint64_t a18)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A2067594);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A206772C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A206908C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2068FA0);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1A206A0C4(id a1, uint64_t a2, void *a3)
{
  id v4;
  _BOOL8 v5;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t j;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSObject *v24;
  id obj;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  _BYTE v41[128];
  uint8_t v42[128];
  uint8_t buf[4];
  id v44;
  __int16 v45;
  id v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (a1 == v4 || (objc_msgSend(a1, "isEqualToArray:", v4) & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    v7 = objc_msgSend(a1, "count");
    if (v7 == objc_msgSend(v4, "count"))
    {
      v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithArray:", a1);
      v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithArray:", v4);
      v10 = objc_msgSend(v8, "count");
      if (v10 == objc_msgSend(v9, "count"))
      {
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v11 = a1;
        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v36, v42, 16);
        if (v12)
        {
          v13 = *(_QWORD *)v37;
          do
          {
            for (i = 0; i != v12; ++i)
            {
              if (*(_QWORD *)v37 != v13)
                objc_enumerationMutation(v11);
              v15 = *(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * i);
              if (objc_msgSend(v9, "containsObject:", v15))
              {
                objc_msgSend(v9, "removeObject:", v15);
                objc_msgSend(v8, "removeObject:", v15);
              }
            }
            v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v36, v42, 16);
          }
          while (v12);
        }

        if (objc_msgSend(v8, "count"))
        {
          v34 = 0u;
          v35 = 0u;
          v32 = 0u;
          v33 = 0u;
          objc_msgSend(v8, "allObjects");
          obj = (id)objc_claimAutoreleasedReturnValue();
          v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v41, 16);
          if (v27)
          {
            v26 = *(_QWORD *)v33;
            while (2)
            {
              for (j = 0; j != v27; ++j)
              {
                if (*(_QWORD *)v33 != v26)
                  objc_enumerationMutation(obj);
                v17 = *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * j);
                v28 = 0u;
                v29 = 0u;
                v30 = 0u;
                v31 = 0u;
                v18 = v9;
                v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v28, v40, 16);
                if (!v19)
                {
LABEL_41:

LABEL_42:
                  goto LABEL_43;
                }
                v20 = *(_QWORD *)v29;
LABEL_24:
                v21 = 0;
                while (1)
                {
                  if (*(_QWORD *)v29 != v20)
                    objc_enumerationMutation(v18);
                  v22 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * v21);
                  if ((objc_msgSend(v22, "_isChatSiblingOf:", v17) & 1) != 0)
                    break;
                  if (v19 == ++v21)
                  {
                    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v28, v40, 16);
                    if (v19)
                      goto LABEL_24;
                    goto LABEL_41;
                  }
                }
                v23 = v22;

                if (!v23)
                  goto LABEL_42;
                objc_msgSend(v18, "removeObject:", v23);
                objc_msgSend(v8, "removeObject:", v17);

              }
              v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v41, 16);
              if (v27)
                continue;
              break;
            }
          }

        }
        v5 = objc_msgSend(v8, "count") == 0;
      }
      else
      {
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v24 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412546;
            v44 = a1;
            v45 = 2112;
            v46 = v4;
            _os_log_impl(&dword_1A1FF4000, v24, OS_LOG_TYPE_INFO, "IMHandle+Utilities: equivalentToRecipients - self or recipient array has duplicate values! self: %@; recipients: %@",
              buf,
              0x16u);
          }

        }
LABEL_43:
        v5 = 0;
      }

    }
    else
    {
      v5 = 0;
    }
  }

  return v5;
}

void sub_1A206A4E8()
{
  IMNicknameController *v0;
  void *v1;

  v0 = objc_alloc_init(IMNicknameController);
  v1 = (void *)qword_1ECF125F0;
  qword_1ECF125F0 = (uint64_t)v0;

}

void sub_1A206C798(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A206C760);
  }
  _Unwind_Resume(a1);
}

void sub_1A206CA68(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A206CA30);
  }
  _Unwind_Resume(a1);
}

void sub_1A206D158(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD block[4];
  id v8;
  uint64_t v9;
  id v10;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A206D1F0;
  block[3] = &unk_1E471F3E8;
  v4 = *(id *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 32);
  v8 = v3;
  v9 = v5;
  v10 = v4;
  v6 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

uint64_t sub_1A206D1F0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  return objc_msgSend(*(id *)(a1 + 40), "updatePersonalNickname:", *(_QWORD *)(a1 + 32));
}

void sub_1A206EDA8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[5];
  id v6;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A206EE28;
  v5[3] = &unk_1E471E7C8;
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

}

uint64_t sub_1A206EE28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updatePersonalNickname:", *(_QWORD *)(a1 + 40));
}

void sub_1A206EE34(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  uint64_t v18;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = sub_1A206EF00;
  v14[3] = &unk_1E471E868;
  v15 = v7;
  v16 = v8;
  v10 = *(_QWORD *)(a1 + 32);
  v17 = v9;
  v18 = v10;
  v11 = v9;
  v12 = v8;
  v13 = v7;
  dispatch_async(MEMORY[0x1E0C80D38], v14);

}

void sub_1A206EF00(id *a1)
{
  NSObject *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  _QWORD v20[4];
  id v21;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = a1[4];
      *(_DWORD *)buf = 138412290;
      v25 = v3;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Got back pending nicknames %@", buf, 0xCu);
    }

  }
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(a1[4], "count"));
  v5 = a1[4];
  v6 = MEMORY[0x1E0C809B0];
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = sub_1A206F234;
  v22[3] = &unk_1E471F038;
  v7 = v4;
  v23 = v7;
  objc_msgSend(v5, "enumerateKeysAndObjectsUsingBlock:", v22);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = a1[5];
      *(_DWORD *)buf = 138412290;
      v25 = v9;
      _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Got back handled nicknames %@", buf, 0xCu);
    }

  }
  v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(a1[5], "count"));
  v11 = a1[5];
  v20[0] = v6;
  v20[1] = 3221225472;
  v20[2] = sub_1A206F2AC;
  v20[3] = &unk_1E471F038;
  v12 = v10;
  v21 = v12;
  objc_msgSend(v11, "enumerateKeysAndObjectsUsingBlock:", v20);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v14 = a1[6];
      *(_DWORD *)buf = 138412290;
      v25 = v14;
      _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Got back archived nicknames %@", buf, 0xCu);
    }

  }
  v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(a1[6], "count"));
  v16 = a1[6];
  v18[0] = v6;
  v18[1] = 3221225472;
  v18[2] = sub_1A206F324;
  v18[3] = &unk_1E471F038;
  v19 = v15;
  v17 = v15;
  objc_msgSend(v16, "enumerateKeysAndObjectsUsingBlock:", v18);
  objc_msgSend(a1[7], "updatePendingNicknames:handledNicknames:archivedNicknames:", v7, v12, v17);

}

void sub_1A206F234(uint64_t a1, void *a2, void *a3)
{
  objc_class *v5;
  id v6;
  id v7;
  id v8;

  v5 = (objc_class *)MEMORY[0x1E0D39980];
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_msgSend([v5 alloc], "initWithDictionaryRepresentation:", v6);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v8, v7);
}

void sub_1A206F2AC(uint64_t a1, void *a2, void *a3)
{
  objc_class *v5;
  id v6;
  id v7;
  id v8;

  v5 = (objc_class *)MEMORY[0x1E0D39980];
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_msgSend([v5 alloc], "initWithDictionaryRepresentation:", v6);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v8, v7);
}

void sub_1A206F324(uint64_t a1, void *a2, void *a3)
{
  objc_class *v5;
  id v6;
  id v7;
  id v8;

  v5 = (objc_class *)MEMORY[0x1E0D39980];
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_msgSend([v5 alloc], "initWithDictionaryRepresentation:", v6);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v8, v7);
}

void sub_1A206F39C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD block[5];
  id v10;
  id v11;

  v5 = a2;
  v6 = a3;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A206F448;
  block[3] = &unk_1E471F668;
  block[4] = *(_QWORD *)(a1 + 32);
  v10 = v5;
  v11 = v6;
  v7 = v6;
  v8 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

uint64_t sub_1A206F448(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateSharingAllowList:denyList:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1A206F458(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[5];
  id v6;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A206F4D8;
  v5[3] = &unk_1E471E7C8;
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

}

uint64_t sub_1A206F4D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateTransitionedNicknameHandles:", *(_QWORD *)(a1 + 40));
}

void sub_1A206F4E4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[5];
  id v6;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A206F564;
  v5[3] = &unk_1E471E7C8;
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

}

uint64_t sub_1A206F564(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateIsActiveList:", *(_QWORD *)(a1 + 40));
}

void sub_1A206F570(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[5];
  id v6;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A206F5F0;
  v5[3] = &unk_1E471E7C8;
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

}

uint64_t sub_1A206F5F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateIsIgnoredList:", *(_QWORD *)(a1 + 40));
}

void sub_1A2071A14(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20718E4);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A2071B48(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(result + 32) == a3)
    return objc_msgSend(*(id *)(result + 40), "addObject:", a2);
  return result;
}

void sub_1A2071B64(uint64_t a1, void *a2)
{
  id v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[4];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if ((objc_msgSend(*(id *)(a1 + 32), "im_isWellFormedChatGUID") & 1) != 0)
  {
    v4 = (_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 40), "daemonController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "synchronousRemoteDaemon");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(a1 + 32);
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = sub_1A2071CF8;
    v10[3] = &unk_1E471F8D0;
    v10[4] = *v4;
    v11 = v3;
    objc_msgSend(v6, "loadChatWithGUID:reply:", v7, v10);

  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v9 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v13 = v9;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Not looking up existing chat due to malformed guid: %@", buf, 0xCu);
      }

    }
    objc_msgSend(*(id *)(a1 + 40), "loadedChats:queryID:", MEMORY[0x1E0C9AA60], v3);
  }

}

uint64_t sub_1A2071CF8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadedChats:queryID:", a2, *(_QWORD *)(a1 + 40));
}

id sub_1A2071EC8(uint64_t a1, _BYTE *a2)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v5 = *(id *)(a1 + 32);
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v18;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v18 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(a1 + 40), "_cachedChatWithGUID:", *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * i));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "guid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v4, "containsObject:", v11);

        if ((v12 & 1) == 0)
        {
          if (v10)
          {
            objc_msgSend(v10, "guid");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v4, "addObject:", v13);

            objc_msgSend(v3, "addObject:", v10);
          }
          else if (a2)
          {
            *a2 = 1;
          }
        }

      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v7);
  }

  v14 = (void *)objc_msgSend(v3, "copy");
  return v14;
}

void sub_1A2072084(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  _QWORD v15[5];
  id v16;
  _QWORD v17[4];
  id v18;

  v5 = a2;
  v6 = a3;
  v7 = MEMORY[0x1E0C809B0];
  v8 = *(void **)(a1 + 32);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = sub_1A20721BC;
  v17[3] = &unk_1E471F948;
  v18 = v6;
  v9 = v6;
  objc_msgSend(v8, "__imArrayByFilteringWithBlock:", v17);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "_chatPredicateForGUIDs:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "daemonController");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "synchronousRemoteDaemon");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v7;
  v15[1] = 3221225472;
  v15[2] = sub_1A20721DC;
  v15[3] = &unk_1E471F8D0;
  v15[4] = *(_QWORD *)(a1 + 40);
  v16 = v5;
  v14 = v5;
  objc_msgSend(v13, "loadChatsFilteredUsingPredicate:reply:", v11, v15);

}

uint64_t sub_1A20721BC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

uint64_t sub_1A20721DC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadedChats:queryID:", a2, *(_QWORD *)(a1 + 40));
}

uint64_t sub_1A207223C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@"), *MEMORY[0x1E0D37778], a2);
}

uint64_t sub_1A2072610(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__cachedChatWithHandles_allowAlternativeService_groupID_displayName_joinedChatsOnly_);
}

void sub_1A2072628(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  const __CFString *v7;
  const __CFString *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  const __CFString *v24;
  __int16 v25;
  const __CFString *v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = CFSTR("YES");
      if (*(_BYTE *)(a1 + 64))
        v8 = CFSTR("YES");
      else
        v8 = CFSTR("NO");
      if (!*(_BYTE *)(a1 + 65))
        v7 = CFSTR("NO");
      v9 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138413314;
      v20 = v5;
      v21 = 2112;
      v22 = v6;
      v23 = 2112;
      v24 = v8;
      v25 = 2112;
      v26 = v7;
      v27 = 2112;
      v28 = v9;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Cache miss looking up chat with groupID: %@ displayName: %@ joinedChatsOnly: %@ allowAlternativeService: %@ handles: %@", buf, 0x34u);
    }

  }
  objc_msgSend(*(id *)(a1 + 48), "__imArrayByApplyingBlock:", &unk_1E471DDF8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (_QWORD *)(a1 + 56);
  objc_msgSend(*(id *)(a1 + 56), "daemonController");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "synchronousRemoteDaemon");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = sub_1A2072820;
  v17[3] = &unk_1E471F8D0;
  v17[4] = *v11;
  v18 = v3;
  v16 = v3;
  objc_msgSend(v13, "loadChatsWithHandleIDs:groupID:displayName:style:reply:", v10, v15, v14, 43, v17);

}

uint64_t sub_1A2072818(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "ID");
}

uint64_t sub_1A2072820(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadedChats:queryID:", a2, *(_QWORD *)(a1 + 40));
}

void sub_1A2072830(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  id v12;
  uint8_t buf[4];
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v14 = v5;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Cache miss looking up chat with identifier: %@ ", buf, 0xCu);
    }

  }
  v6 = (_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 40), "daemonController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "synchronousRemoteDaemon");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = *(_QWORD *)(a1 + 32);
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A20729A0;
  v11[3] = &unk_1E471F8D0;
  v11[4] = *v6;
  v12 = v3;
  v10 = v3;
  objc_msgSend(v8, "loadChatsWithIdentifier:reply:", v9, v11);

}

uint64_t sub_1A20729A0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadedChats:queryID:", a2, *(_QWORD *)(a1 + 40));
}

uint64_t sub_1A2072A94(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_cachedChatWithGroupID:", *(_QWORD *)(a1 + 40));
}

void sub_1A2072AA0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  id v9;

  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "daemonController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "synchronousRemoteDaemon");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A2072B58;
  v8[3] = &unk_1E471F8D0;
  v6 = *(_QWORD *)(a1 + 40);
  v8[4] = *(_QWORD *)(a1 + 32);
  v9 = v3;
  v7 = v3;
  objc_msgSend(v5, "loadChatsWithGroupID:reply:", v6, v8);

}

uint64_t sub_1A2072B58(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadedChats:queryID:", a2, *(_QWORD *)(a1 + 40));
}

uint64_t sub_1A2072C90(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__cachedChatWithDisplayName_);
}

void sub_1A2072C9C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[5];
  id v9;

  v3 = a2;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@"), *MEMORY[0x1E0D37760], *(_QWORD *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "daemonController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "synchronousRemoteDaemon");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A2072D88;
  v8[3] = &unk_1E471F8D0;
  v8[4] = *(_QWORD *)(a1 + 40);
  v9 = v3;
  v7 = v3;
  objc_msgSend(v6, "loadChatsFilteredUsingPredicate:reply:", v4, v8);

}

uint64_t sub_1A2072D88(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadedChats:queryID:", a2, *(_QWORD *)(a1 + 40));
}

void sub_1A20730F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "_processLoadedChatDictionaries:", a2);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "firstObject");
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

uint64_t sub_1A207323C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_cachedChatWithPersonID:", *(_QWORD *)(a1 + 40));
}

void sub_1A2073248(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[5];
  id v9;

  v3 = a2;
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@ OR %K = %@"), *MEMORY[0x1E0D37730], *(_QWORD *)(a1 + 32), *MEMORY[0x1E0D37780], *(_QWORD *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "daemonController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "synchronousRemoteDaemon");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A2073344;
  v8[3] = &unk_1E471F8D0;
  v8[4] = *(_QWORD *)(a1 + 40);
  v9 = v3;
  v7 = v3;
  objc_msgSend(v6, "loadChatsFilteredUsingPredicate:reply:", v4, v8);

}

uint64_t sub_1A2073344(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadedChats:queryID:", a2, *(_QWORD *)(a1 + 40));
}

void sub_1A20737FC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t k;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t m;
  void *v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t i;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t j;
  void *v54;
  void *v55;
  id v56;
  NSObject *v57;
  id v58;
  id v59;
  uint64_t v60;
  void *v61;
  id obj;
  id obja;
  uint64_t v64;
  void *v65;
  void *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _BYTE v83[128];
  _BYTE v84[128];
  uint8_t v85[128];
  uint8_t buf[4];
  id v87;
  _BYTE v88[128];
  uint64_t v89;

  v89 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v58 = a3;
  v59 = a4;
  v60 = a1;
  v66 = v7;
  if (objc_msgSend(v7, "count"))
  {
    v8 = objc_msgSend(v7, "count");
    if (v8 == objc_msgSend(*(id *)(a1 + 32), "count"))
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a4);
      if (*(_QWORD *)(a1 + 48))
      {
        objc_msgSend(v7, "allValues");
        **(_QWORD **)(a1 + 48) = (id)objc_claimAutoreleasedReturnValue();
      }
    }
    else
    {
      v65 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
      obja = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
      v29 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
      v71 = 0u;
      v72 = 0u;
      v73 = 0u;
      v74 = 0u;
      v30 = *(id *)(a1 + 32);
      v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v71, v84, 16);
      if (v31)
      {
        v32 = *(_QWORD *)v72;
        do
        {
          for (i = 0; i != v31; ++i)
          {
            if (*(_QWORD *)v72 != v32)
              objc_enumerationMutation(v30);
            v34 = *(void **)(*((_QWORD *)&v71 + 1) + 8 * i);
            objc_msgSend(v34, "identifier");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v66, "objectForKey:", v35);
            v36 = (void *)objc_claimAutoreleasedReturnValue();

            if (v36)
            {
              objc_msgSend(v29, "addObject:", v36);
              objc_msgSend(v36, "ID");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v65, "addObject:", v37);
            }
            else
            {
              objc_msgSend(MEMORY[0x1E0D397A8], "IDsFromCNContact:", v34);
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              v38 = (void *)_IDSCopyOrderedAliasStrings();
              objc_msgSend(v38, "firstObject");
              v39 = (void *)objc_claimAutoreleasedReturnValue();

              if (v39)
              {
                objc_msgSend(v65, "addObject:", v39);
                objc_msgSend(obja, "addObject:", v39);
              }
              else if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v40 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)buf = 138412290;
                  v87 = v34;
                  _os_log_impl(&dword_1A1FF4000, v40, OS_LOG_TYPE_INFO, "Failed to find best address for contact %@", buf, 0xCu);
                }

              }
            }

          }
          v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v71, v84, 16);
        }
        while (v31);
      }

      IMFindExistingChatForAddresses(v65, 0, objc_msgSend(v65, "count") != 0, 1);
      v41 = objc_claimAutoreleasedReturnValue();
      v42 = *(_QWORD *)(*(_QWORD *)(v60 + 40) + 8);
      v43 = *(void **)(v42 + 40);
      *(_QWORD *)(v42 + 40) = v41;

      if (*(_QWORD *)(v60 + 48))
      {
        if (objc_msgSend(obja, "count"))
        {
          +[IMService iMessageService](IMServiceImpl, "iMessageService");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v65, 1, v44);
          v45 = (void *)objc_claimAutoreleasedReturnValue();

          if ((objc_msgSend(v45, "_isUsableForSending") & 1) == 0)
          {
            +[IMService smsService](IMServiceImpl, "smsService");
            v46 = (void *)objc_claimAutoreleasedReturnValue();
            if (v46)
            {
              +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
              v47 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v47, "accountsForService:", v46);
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v48, "__imFirstObject");
              v49 = objc_claimAutoreleasedReturnValue();

              v45 = (void *)v49;
            }

          }
          v69 = 0u;
          v70 = 0u;
          v67 = 0u;
          v68 = 0u;
          v50 = obja;
          v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v67, v83, 16);
          if (v51)
          {
            v52 = *(_QWORD *)v68;
            do
            {
              for (j = 0; j != v51; ++j)
              {
                if (*(_QWORD *)v68 != v52)
                  objc_enumerationMutation(v50);
                IMStripFormattingFromAddress();
                v54 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v45, "imHandleWithID:", v54);
                v55 = (void *)objc_claimAutoreleasedReturnValue();

                if (v55)
                  objc_msgSend(v29, "addObject:", v55);

              }
              v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v67, v83, 16);
            }
            while (v51);
          }

        }
        v56 = objc_retainAutorelease(v29);
        **(_QWORD **)(v60 + 48) = v56;
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v57 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v57, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v87 = v56;
            _os_log_impl(&dword_1A1FF4000, v57, OS_LOG_TYPE_INFO, "best handles: %@", buf, 0xCu);
          }

        }
      }

    }
    goto LABEL_81;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "IMHandle bestHandlesForContacts returned nil", buf, 2u);
    }

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v81 = 0u;
  v82 = 0u;
  v79 = 0u;
  v80 = 0u;
  obj = *(id *)(a1 + 32);
  v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v79, v88, 16);
  if (v10)
  {
    v64 = *(_QWORD *)v80;
    do
    {
      for (k = 0; k != v10; ++k)
      {
        if (*(_QWORD *)v80 != v64)
          objc_enumerationMutation(obj);
        objc_msgSend(MEMORY[0x1E0D397A8], "IDsFromCNContact:", *(_QWORD *)(*((_QWORD *)&v79 + 1) + 8 * k));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        +[IMService iMessageService](IMServiceImpl, "iMessageService");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v12, 0, v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        if ((objc_msgSend(v14, "_isUsableForSending") & 1) != 0)
        {
          v15 = v14;
        }
        else
        {
          +[IMService smsService](IMServiceImpl, "smsService");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          if (v16)
          {
            +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "accountsForService:", v16);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "__imFirstObject");
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v19 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v87 = v15;
                _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "preferredAccount isn't usable for sending, falling back to smsAccount: %@", buf, 0xCu);
              }

            }
          }
          else
          {
            v15 = v14;
          }

        }
        v77 = 0u;
        v78 = 0u;
        v75 = 0u;
        v76 = 0u;
        v20 = v12;
        v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v75, v85, 16);
        v22 = v20;
        if (!v21)
          goto LABEL_34;
        v22 = 0;
        v23 = *(_QWORD *)v76;
        do
        {
          for (m = 0; m != v21; ++m)
          {
            if (*(_QWORD *)v76 != v23)
              objc_enumerationMutation(v20);
            IMStripFormattingFromAddress();
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "imHandleWithID:", v25);
            v26 = (void *)objc_claimAutoreleasedReturnValue();

            if (objc_msgSend(v26, "isBetterThanIMHandle:nonPhoneNumbersPreferred:", v22, 0))
            {
              v27 = v26;

              v22 = v27;
            }

          }
          v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v75, v85, 16);
        }
        while (v21);

        if (v22)
        {
          objc_msgSend(v61, "addObject:", v22);
LABEL_34:

        }
      }
      v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v79, v88, 16);
    }
    while (v10);
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v87 = v61;
      _os_log_impl(&dword_1A1FF4000, v28, OS_LOG_TYPE_INFO, "Best handles: %@", buf, 0xCu);
    }

  }
  if (*(_QWORD *)(v60 + 48))
    **(_QWORD **)(v60 + 48) = objc_retainAutorelease(v61);

LABEL_81:
}

void sub_1A207428C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void (**v6)(_QWORD);
  void *v7;
  _QWORD v8[4];
  void (**v9)(_QWORD);
  _QWORD aBlock[5];
  id v11;
  id v12;

  v3 = a2;
  v4 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A2074388;
  aBlock[3] = &unk_1E471E818;
  aBlock[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  v11 = v5;
  v12 = *(id *)(a1 + 40);
  v6 = (void (**)(_QWORD))_Block_copy(aBlock);
  v7 = v6;
  if (*(_BYTE *)(a1 + 48))
  {
    v6[2](v6);
  }
  else
  {
    v8[0] = v4;
    v8[1] = 3221225472;
    v8[2] = sub_1A20743F0;
    v8[3] = &unk_1E471E528;
    v9 = v6;
    dispatch_async(MEMORY[0x1E0C80D38], v8);

  }
}

void sub_1A2074388(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "_earliestLastMessageDateFromChatDictionaries:", *(_QWORD *)(a1 + 40));
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "_processLoadedChatDictionaries:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

}

uint64_t sub_1A20743F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1A2074594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1A20745BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;

  objc_msgSend(*(id *)(a1 + 32), "_lastMessageDateForQueryFromChatDictionary:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v4 = *(void **)(v3 + 40);
    v9 = v2;
    if (v4)
    {
      objc_msgSend(v4, "earlierDate:", v2);
      v5 = objc_claimAutoreleasedReturnValue();
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v7 = *(void **)(v6 + 40);
      *(_QWORD *)(v6 + 40) = v5;
    }
    else
    {
      v8 = v2;
      v7 = *(void **)(v3 + 40);
      *(_QWORD *)(v3 + 40) = v8;
    }

    v2 = v9;
  }

}

void sub_1A2074CA8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD block[5];
  id v8;
  id v9;

  v3 = a2;
  v4 = v3;
  if (*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 32), "_processLoadedChatDictionaries:", v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 40);
    if (v6)
      (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v5);

  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A2074D80;
    block[3] = &unk_1E471E818;
    block[4] = *(_QWORD *)(a1 + 32);
    v8 = v3;
    v9 = *(id *)(a1 + 40);
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

void sub_1A2074D80(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(*(id *)(a1 + 32), "_processLoadedChatDictionaries:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1 + 48);
  if (v3)
  {
    v4 = v2;
    (*(void (**)(void))(v3 + 16))();
    v2 = v4;
  }

}

void sub_1A2074F0C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "guid");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

void sub_1A2074F50(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A2074FCC;
  v6[3] = &unk_1E471FAA8;
  v7 = v3;
  v5 = v3;
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v6);

}

void sub_1A2074FCC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v3, "guid");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", v5);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setEarliestCachedMessageDate:", v4);

}

uint64_t sub_1A2075284(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1A2075290(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "guid");
}

void sub_1A2075298(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Processing chat cache miss.", v5, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "setProcessingChatCacheMiss:", 1);
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

}

void sub_1A2075358(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  if (a2)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        v13 = *(_QWORD *)(a1 + 32);
        v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        v18 = 138412546;
        v19 = v13;
        v20 = 2112;
        v21 = v14;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Chat cache miss complete with key: %@ results %@", (uint8_t *)&v18, 0x16u);
      }

    }
    v15 = *(void **)(a1 + 40);
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("chats"));
    v16 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_validateChatQueryResults:matchCurrentCacheResults:", v16, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  }
  else
  {
    IMLogHandleForCategory();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_1A21966F8((uint64_t)v7, v16);
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      LOWORD(v18) = 0;
      _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_INFO, "Ended processing chat cache miss.", (uint8_t *)&v18, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "setProcessingChatCacheMiss:", 0);

}

void sub_1A2075CCC()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v0 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v1 = (void *)qword_1EE65F460;
  qword_1EE65F460 = (uint64_t)v0;

  +[IMService iMessageService](IMServiceImpl, "iMessageService");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = (void *)qword_1EE65F460;
    +[IMService iMessageService](IMServiceImpl, "iMessageService");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "addObject:", v4);

  }
  +[IMService smsService](IMServiceImpl, "smsService");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    v6 = (void *)qword_1EE65F460;
    +[IMService smsService](IMServiceImpl, "smsService");
    v7 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObject:", v7);

  }
}

void sub_1A2075EF4(uint64_t a1, void *a2)
{
  int v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(unsigned __int8 *)(a1 + 56);
  v4 = *(void **)(a1 + 32);
  v5 = a2;
  objc_msgSend(v4, "daemonController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v3)
    objc_msgSend(v6, "synchronousReplyingRemoteDaemon");
  else
    objc_msgSend(v6, "replyingRemoteDaemon");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "moveMessagesWithGUIDsToRecentlyDeleted:deleteDate:queryID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v5);
}

void sub_1A2075F78(uint64_t a1, char a2, void *a3, void *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  if ((a2 & 1) == 0 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = objc_msgSend(*(id *)(a1 + 32), "count");
      v11 = *(_QWORD *)(a1 + 32);
      v12 = *(_QWORD *)(a1 + 40);
      v14 = 134218754;
      v15 = v10;
      v16 = 2112;
      v17 = v11;
      v18 = 2112;
      v19 = v12;
      v20 = 2112;
      v21 = v7;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to move %lu message GUIDs [%@] to recently deleted at time:%@ gave error: %@", (uint8_t *)&v14, 0x2Au);
    }

  }
  v13 = *(_QWORD *)(a1 + 48);
  if (v13)
    (*(void (**)(void))(v13 + 16))();

}

void sub_1A2076260(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v5 = a2;
  objc_msgSend(v3, "allGUIDsForChat:", v5);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObjectsFromArray:", v4);

  objc_msgSend(v5, "clear");
}

void sub_1A20762BC(uint64_t a1, void *a2)
{
  int v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(unsigned __int8 *)(a1 + 56);
  v4 = *(void **)(a1 + 32);
  v5 = a2;
  objc_msgSend(v4, "daemonController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v3)
    objc_msgSend(v6, "synchronousReplyingRemoteDaemon");
  else
    objc_msgSend(v6, "replyingRemoteDaemon");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "moveMessagesInChatsWithGUIDsToRecentlyDeleted:deleteDate:queryID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v5);
}

void sub_1A2076340(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  id v16;
  uint8_t buf[4];
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  if (a2)
  {
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = sub_1A20764D0;
    v15[3] = &unk_1E471FAA8;
    v9 = *(void **)(a1 + 32);
    v16 = *(id *)(a1 + 40);
    objc_msgSend(v9, "enumerateObjectsUsingBlock:", v15);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v11 = objc_msgSend(*(id *)(a1 + 32), "count");
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 134218754;
      v18 = v11;
      v19 = 2112;
      v20 = v12;
      v21 = 2112;
      v22 = v13;
      v23 = 2112;
      v24 = v7;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to move messages from %lu chats GUIDs [%@] to recently deleted at time:%@ gave error: %@", buf, 0x2Au);
    }

  }
  v14 = *(_QWORD *)(a1 + 48);
  if (v14)
    (*(void (**)(void))(v14 + 16))();

}

void sub_1A20764D0(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v4 = a2;
  objc_msgSend(v4, "setRecoverableMessagesCount:", 1);
  objc_msgSend(v4, "setEarliestRecoverableMessageDeletionDate:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v4, "setLatestRecoverableMessageDeletionDate:", *(_QWORD *)(a1 + 32));
  v3 = (id)objc_msgSend(v4, "loadMessagesBeforeDate:limit:loadImmediately:", 0, objc_msgSend(v4, "numberOfMessagesToKeepLoaded"), 0);

}

void sub_1A20766DC(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "allGUIDsForChat:", a2);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObjectsFromArray:", v3);

}

void sub_1A2076720(uint64_t a1, void *a2)
{
  int v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = *(void **)(a1 + 32);
  v5 = a2;
  objc_msgSend(v4, "daemonController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v3)
    objc_msgSend(v6, "synchronousReplyingRemoteDaemon");
  else
    objc_msgSend(v6, "replyingRemoteDaemon");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "recoverMessagesWithChatGUIDs:queryID:", *(_QWORD *)(a1 + 40), v5);
}

void sub_1A20767A4(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "enumerateObjectsUsingBlock:", &unk_1E471FC68);
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = *(_QWORD *)(a1 + 40);
      v12 = 138412546;
      v13 = v10;
      v14 = 2112;
      v15 = v7;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to recover messages for chatGUIDs: [%@] with error: %@", (uint8_t *)&v12, 0x16u);
    }

  }
  v11 = *(_QWORD *)(a1 + 48);
  if (v11)
    (*(void (**)(void))(v11 + 16))();

}

void sub_1A20768CC(uint64_t a1, void *a2)
{
  id v2;
  id v3;

  v3 = a2;
  objc_msgSend(v3, "setRecoverableMessagesCount:", 0);
  objc_msgSend(v3, "setUnreadRecoverableMessagesCount:", 0);
  objc_msgSend(v3, "setEarliestRecoverableMessageDeletionDate:", 0);
  objc_msgSend(v3, "setLatestRecoverableMessageDeletionDate:", 0);
  v2 = (id)objc_msgSend(v3, "loadMessagesBeforeDate:limit:loadImmediately:", 0, objc_msgSend(v3, "numberOfMessagesToKeepLoaded"), 0);

}

void sub_1A2076940(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;

  v18 = a2;
  v5 = a3;
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("recoverableMessagesCount"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "unsignedLongValue");
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("unreadRecoverableMessagesCount"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "unsignedLongValue");

  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("earliestDeleteDateInterval"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "unsignedLongLongValue");
  objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("latestDeleteDateInterval"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = objc_msgSend(v13, "unsignedLongLongValue");
  objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (*(_BYTE *)(a1 + 48) || !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    objc_msgSend(*(id *)(a1 + 32), "existingChatWithGUID:", v18);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_cachedChatWithGUID:", v18);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v17 = v16;
  objc_msgSend(v16, "setRecoverableMessagesCount:", v7);
  objc_msgSend(v17, "setUnreadRecoverableMessagesCount:", v9);
  objc_msgSend(v17, "setEarliestRecoverableMessageDeletionDate:", v12);
  objc_msgSend(v17, "setLatestRecoverableMessageDeletionDate:", v15);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;

}

void sub_1A2076C64(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "allGUIDsForChat:", a2);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObjectsFromArray:", v3);

}

void sub_1A2076CA8(uint64_t a1, void *a2)
{
  int v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = *(void **)(a1 + 32);
  v5 = a2;
  objc_msgSend(v4, "daemonController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v3)
    objc_msgSend(v6, "synchronousReplyingRemoteDaemon");
  else
    objc_msgSend(v6, "replyingRemoteDaemon");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:queryID:", *(_QWORD *)(a1 + 40), v5);
}

void sub_1A2076D2C(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "enumerateObjectsUsingBlock:", &unk_1E471B860);
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = objc_msgSend(*(id *)(a1 + 32), "count");
      v11 = *(_QWORD *)(a1 + 32);
      v13 = 134218498;
      v14 = v10;
      v15 = 2112;
      v16 = v11;
      v17 = 2112;
      v18 = v7;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to permanently delete recoverable messages from %lu chats GUIDs [%@] gave error: %@", (uint8_t *)&v13, 0x20u);
    }

  }
  v12 = *(_QWORD *)(a1 + 40);
  if (v12)
    (*(void (**)(void))(v12 + 16))();

}

void sub_1A2076E68(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  objc_msgSend(v2, "setRecoverableMessagesCount:", 0);
  objc_msgSend(v2, "setEarliestRecoverableMessageDeletionDate:", 0);
  objc_msgSend(v2, "setLatestRecoverableMessageDeletionDate:", 0);

}

BOOL sub_1A20770A8(uint64_t a1, void *a2, _QWORD *a3, _QWORD *a4, _BYTE *a5, uint64_t a6, _QWORD *a7, _QWORD *a8)
{
  id v13;
  void *v14;
  void *v15;
  void *v16;

  v13 = a2;
  +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "transferForGUID:", v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v15)
  {
    objc_msgSend(v15, "localURL");
    *a3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "type");
    *a4 = (id)objc_claimAutoreleasedReturnValue();
    *a5 = objc_msgSend(v15, "isSticker");
    if (a7)
    {
      objc_msgSend(v15, "adaptiveImageGlyphContentDescription");
      *a7 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a8)
    {
      objc_msgSend(v15, "attributionInfo");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "objectForKeyedSubscript:", *MEMORY[0x1E0D37F10]);
      *a8 = (id)objc_claimAutoreleasedReturnValue();

    }
  }

  return v15 != 0;
}

BOOL sub_1A2077240(uint64_t a1, void *a2, _QWORD *a3, _QWORD *a4, _BYTE *a5, uint64_t a6, _QWORD *a7, _QWORD *a8)
{
  id v13;
  void *v14;
  void *v15;
  void *v16;

  v13 = a2;
  +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "transferForGUID:", v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v15)
  {
    if (a3)
    {
      objc_msgSend(v15, "localURL");
      *a3 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a4)
    {
      objc_msgSend(v15, "type");
      *a4 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a5)
      *a5 = objc_msgSend(v15, "isSticker");
    if (a7)
    {
      objc_msgSend(v15, "adaptiveImageGlyphContentDescription");
      *a7 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a8)
    {
      objc_msgSend(v15, "attributionInfo");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "objectForKeyedSubscript:", *MEMORY[0x1E0D37F10]);
      *a8 = (id)objc_claimAutoreleasedReturnValue();

    }
  }

  return v15 != 0;
}

id sub_1A207735C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v15;

  v7 = a6;
  v8 = objc_msgSend(a1, "associatedMessageType") & 0xFFFFFFFFFFFFFFF8;
  if (v8 == 3000 || v8 == 2000)
  {
    v9 = (void *)MEMORY[0x1E0D39918];
    objc_msgSend(a1, "sender");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "displayNameForAddress:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v11 = 0;
  }
  v15 = v7;
  v12 = v7;
  IMSharedMessageSummaryCreate();
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

uint64_t sub_1A2077458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  if (a7)
    *a7 = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1A2077478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v7;
  void *v8;
  id v10;

  v10 = a7;
  v7 = v10;
  IMSharedMessageSummaryCreate();
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

uint64_t sub_1A2077514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  if (a7)
    *a7 = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1A2077534(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v3 = a3;
  +[IMService iMessageService](IMServiceImpl, "iMessageService");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  IMPreferredSendingAccountForAddressWithFallbackService(v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v5, "_isUsableForSending") & 1) == 0)
  {
    +[IMService smsService](IMServiceImpl, "smsService");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "accountsForService:", v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "__imFirstObject");
      v9 = objc_claimAutoreleasedReturnValue();

      v5 = (void *)v9;
    }

  }
  return v5;
}

id sub_1A2077600(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = a3;
  if (v4 && (objc_msgSend(a1, "bestAccountForAddress:", v4), (v5 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    v6 = (void *)v5;
    IMStripFormattingFromAddress();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "imHandleWithID:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

BOOL sub_1A2077684(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  _BOOL8 v6;

  objc_msgSend(a1, "handleForAddress:");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  v6 = v4 && (objc_msgSend(v4, "isLoginIMHandle") & 1) != 0 || a3 == 0;

  return v6;
}

id sub_1A20776D4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a3;
  objc_msgSend(a1, "handleForAddress:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "_displayNameWithAbbreviation");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v7)
    {
      v9 = v7;

      v4 = v9;
    }

  }
  return v4;
}

uint64_t sub_1A2077844()
{
  uint64_t result;

  result = _IMWillLog();
  if ((_DWORD)result)
    return _IMAlwaysLog();
  return result;
}

void sub_1A2077930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2077948(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_1A207B010(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "length");

  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 40), "transferForGUID:", v12);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)MEMORY[0x1E0C99E98];
    v9 = *(void **)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "fileURLWithPath:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "registerGUID:forNewOutgoingTransferWithLocalURL:", v12, v11);

    objc_msgSend(v7, "_setTransferState:", 5);
  }

}

uint64_t sub_1A207B9A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a2 + 16))(a2, 1, *(_QWORD *)(a1 + 32));
}

uint64_t sub_1A207BACC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, 0, 0);
}

uint64_t sub_1A207BD30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 16))(a2, 1, 0, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0);
}

uint64_t sub_1A207BD4C(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 16))(a2, 1, a1[4], 0, a1[5], a1[6], 0);
}

uint64_t sub_1A207BFB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 16))(a2, 0, *(_QWORD *)(a1 + 32), 0, 0, *(_QWORD *)(a1 + 40));
}

uint64_t sub_1A207BFCC(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 16))(a2, 0, a1[4], a1[5], 0, 0, a1[6]);
}

uint64_t sub_1A207C130(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a2 + 16))(a2, 1, 0);
}

uint64_t sub_1A207C308(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, 0, *(_QWORD *)(a1 + 32));
}

uint64_t sub_1A207CE88(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "enumerateObjectsUsingBlock:", &unk_1E471BC20);
}

uint64_t sub_1A207CE98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, 0, 0);
}

void sub_1A207D0C0(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD v4[4];
  id v5;

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = sub_1A207D12C;
  v4[3] = &unk_1E471FF60;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v4);

}

uint64_t sub_1A207D12C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 16))(a2, 0, 0, 0, 0, *(_QWORD *)(a1 + 32));
}

void sub_1A207D14C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v5 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A207D1E8;
  v7[3] = &unk_1E471FFB0;
  v8 = v5;
  v9 = *(id *)(a1 + 32);
  v6 = v5;
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v7);

}

uint64_t sub_1A207D1E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 16))(a2, 0, *(_QWORD *)(a1 + 32), 0, 0, 0, *(_QWORD *)(a1 + 40));
}

void sub_1A207E2EC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  objc_class *v8;
  void *v9;
  void *v10;
  objc_class *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  Class (*v16)(uint64_t);
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v19 = 0;
    v20 = &v19;
    v21 = 0x2050000000;
    v7 = (void *)qword_1EE65F478;
    v22 = qword_1EE65F478;
    if (!qword_1EE65F478)
    {
      v14 = MEMORY[0x1E0C809B0];
      v15 = 3221225472;
      v16 = sub_1A207E768;
      v17 = &unk_1E4720028;
      v18 = &v19;
      sub_1A207E768((uint64_t)&v14);
      v7 = (void *)v20[3];
    }
    v8 = objc_retainAutorelease(v7);
    _Block_object_dispose(&v19, 8);
    v9 = (void *)objc_msgSend([v8 alloc], "initWithPhotoKitMomentShare:", v5);
    v19 = 0;
    v20 = &v19;
    v21 = 0x2050000000;
    v10 = (void *)qword_1EE65F488;
    v22 = qword_1EE65F488;
    if (!qword_1EE65F488)
    {
      v14 = MEMORY[0x1E0C809B0];
      v15 = 3221225472;
      v16 = sub_1A207E860;
      v17 = &unk_1E4720028;
      v18 = &v19;
      sub_1A207E860((uint64_t)&v14);
      v10 = (void *)v20[3];
    }
    v11 = objc_retainAutorelease(v10);
    _Block_object_dispose(&v19, 8);
    v12 = (void *)objc_msgSend([v11 alloc], "initWithMomentShareStatus:presentationStyle:", v9, 3);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setObject:forKeyedSubscript:", v12, *(_QWORD *)(a1 + 40));
    objc_msgSend(v12, "registerChangeObserver:context:", *(_QWORD *)(a1 + 32), qword_1EE65C918);
    objc_msgSend(*(id *)(a1 + 32), "delegate");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "momentSharePresentationCacheDidChange:", *(_QWORD *)(a1 + 32));

  }
}

void sub_1A207E4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A207E650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A207E668(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3))
  {
    v4 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
    v7 = 0;
    objc_msgSend(v4, "momentShareForURLString:error:", v3, &v7);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v7;
    if (!v5)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "setObject:forKeyedSubscript:", 0, v3);
    }

  }
}

Class sub_1A207E768(uint64_t a1)
{
  Class result;

  sub_1A207E7BC();
  result = objc_getClass("PXPhotoKitMomentShareStatus");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_1A219676C();
  qword_1EE65F478 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A207E7BC()
{
  void *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = 0;
  if (!qword_1EE65F480)
  {
    v1 = xmmword_1E4720048;
    v2 = 0;
    qword_1EE65F480 = _sl_dlopen();
  }
  if (!qword_1EE65F480)
    sub_1A21967E4(&v0);
}

Class sub_1A207E860(uint64_t a1)
{
  Class result;

  sub_1A207E7BC();
  result = objc_getClass("PXMomentShareStatusPresentation");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_1A2196860();
  qword_1EE65F488 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A207EFD4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A207EEF4);
  }
  _Unwind_Resume(a1);
}

void sub_1A2080308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2080320(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  char isKindOfClass;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v8 = v12;
  if ((isKindOfClass & 1) != 0)
  {
    v9 = v12;
    v10 = *(void **)(a1 + 32);
    objc_msgSend(v9, "guid");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v10) = objc_msgSend(v10, "isEqualToString:", v11);

    if ((_DWORD)v10)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }

    v8 = v12;
  }

}

uint64_t sub_1A2080580(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleIncomingItem:", *(_QWORD *)(a1 + 40));
}

uint64_t IMTranscriptChatItemEqual(void *a1, void *a2)
{
  id *v3;
  id *v4;
  objc_class *Class;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  if (v3 == v4)
  {
    v6 = 1;
  }
  else
  {
    Class = object_getClass(v3);
    if (Class == object_getClass(v4))
      v6 = objc_msgSend(v3[5], "isEqualToString:", v4[5]);
    else
      v6 = 0;
  }

  return v6;
}

void sub_1A20848C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A20848E8(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _BOOL4 v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;

  v8 = a3 == a1[9] && a4 == a1[10];
  v9 = objc_msgSend(a2, "integerValue");
  v10 = (void *)a1[4];
  if (v8)
  {
    v11 = v10;
  }
  else
  {
    objc_msgSend(v10, "attributedSubstringFromRange:", a3, a4);
    v11 = (id)objc_claimAutoreleasedReturnValue();
  }
  v19 = v11;
  LOBYTE(v18) = 0;
  v12 = -[IMTextMessagePartChatItem _initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:]([IMDetonatedMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:", a1[5], v11, v9, a3, a4, a1[6], v18);
  v13 = v12;
  if (v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[7] + 8) + 40), v12);
  }
  else if (v12)
  {
    v14 = *(void **)(*(_QWORD *)(a1[8] + 8) + 40);
    if (!v14)
    {
      v15 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v16 = *(_QWORD *)(a1[8] + 8);
      v17 = *(void **)(v16 + 40);
      *(_QWORD *)(v16 + 40) = v15;

      v14 = *(void **)(*(_QWORD *)(a1[8] + 8) + 40);
    }
    objc_msgSend(v14, "addObject:", v13);
  }

}

void sub_1A2085C70(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose(&STACK[0x250], 8);
  _Block_object_dispose(&STACK[0x280], 8);
  _Unwind_Resume(a1);
}

void sub_1A2085D98(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = objc_msgSend(a2, "rangeValue");
  v5 = v4;
  if (v3 + v4 <= (unint64_t)objc_msgSend(*(id *)(a1 + 32), "length"))
  {
    objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", v3, v5);
    v7 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 48), "_isAllowlistedURL:", v6))
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;

  }
}

void sub_1A2085E54(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  BOOL v7;
  int v8;
  void *v9;
  _BOOL4 v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  int v16;
  void *v17;
  uint64_t v18;
  int v19;
  int v20;
  void *v21;
  void *v22;
  int v23;
  int v24;
  NSObject *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  int v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  BOOL IsPermanent;
  __objc2_class **v42;
  void *v43;
  char v44;
  char v45;
  char v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  int v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  _BOOL4 v63;
  void *v64;
  uint64_t v65;
  void *v66;
  int v67;
  void *v68;
  void *v69;
  void *v70;
  int v71;
  int v72;
  int v73;
  void *v74;
  void *v75;
  void *v76;
  NSObject *v77;
  uint64_t v78;
  void *v79;
  int IsAudio;
  void *v81;
  void *v82;
  void *v83;
  BOOL v84;
  uint64_t v85;
  void *v86;
  id v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  int v91;
  int v92;
  IMPluginPayload *v93;
  void *v94;
  void *v95;
  IMTranscriptPluginChatItem *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  id v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  unsigned int v105;
  int v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  id v111;
  NSObject *v112;
  NSObject *v113;
  _QWORD v114[4];
  id v115;
  id v116;
  id v117;
  id v118;
  uint64_t *v119;
  uint64_t *v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t (*v136)(uint64_t, uint64_t);
  void (*v137)(uint64_t);
  id v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t (*v142)(uint64_t, uint64_t);
  void (*v143)(uint64_t);
  id v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  char v148;
  id v149;
  uint64_t v150;
  unint64_t v151;
  _BYTE buf[24];
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v5 = a3;
  v156 = *MEMORY[0x1E0C80C00];
  v111 = a2;
  v7 = *(_QWORD *)(a1 + 96) == a3 && *(_QWORD *)(a1 + 104) == a4;
  v8 = v7;
  v106 = v8;
  v9 = *(void **)(a1 + 32);
  v109 = a4;
  if (v7)
  {
    v107 = v9;
  }
  else
  {
    sub_1A2086D7C(v9, v5, a4);
    v107 = (id)objc_claimAutoreleasedReturnValue();
    v5 = a3;
  }
  v150 = 0;
  v151 = 0;
  objc_msgSend(*(id *)(a1 + 32), "attribute:atIndex:effectiveRange:", *MEMORY[0x1E0D36430], v5, &v150);
  v113 = objc_claimAutoreleasedReturnValue();
  if (!v113)
  {
    v112 = 0;
    v113 = 0;
    goto LABEL_26;
  }
  v10 = a4 > v151;
  +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "transferForGUID:", v113);
  v112 = objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    if (!v112)
    {
      IMLogHandleForCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1A2196980();

      v12 = v113;
      v112 = 0;
      v113 = 0;
      goto LABEL_25;
    }
    if (!-[NSObject isAdaptiveImageGlyph](v112, "isAdaptiveImageGlyph"))
    {
      IMLogHandleForCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1A21969AC();
      goto LABEL_25;
    }
  }
  else
  {
    if (!v112)
    {
      IMLogHandleForCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1A21969D8();
      goto LABEL_24;
    }
    if (!-[NSObject isAdaptiveImageGlyph](v112, "isAdaptiveImageGlyph"))
      goto LABEL_26;
  }

  v113 = 0;
  v12 = v112;
LABEL_24:
  v112 = 0;
LABEL_25:

LABEL_26:
  v108 = objc_msgSend(v111, "integerValue");
  objc_msgSend(*(id *)(a1 + 40), "balloonBundleID");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = *MEMORY[0x1E0D375F8];
  v16 = objc_msgSend(v14, "isEqualToString:", *MEMORY[0x1E0D375F8]);

  objc_msgSend(*(id *)(a1 + 40), "balloonBundleID");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = *MEMORY[0x1E0D37620];
  v19 = objc_msgSend(v17, "containsString:", *MEMORY[0x1E0D37620]);

  v20 = objc_msgSend(*(id *)(a1 + 48), "containsIndex:", v108);
  objc_msgSend(*(id *)(a1 + 32), "string");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "substringWithRange:", a3, v109);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "isEqualToString:", *MEMORY[0x1E0D37890]);

  if (objc_msgSend(*(id *)(a1 + 40), "scheduleType") == 2)
    v24 = 0;
  else
    v24 = v20;
  if (v24 == 1)
  {
    IMLogHandleForCategory();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      sub_1A2196954();
    goto LABEL_60;
  }
  if (v23)
  {
    objc_msgSend(*(id *)(a1 + 32), "attributesAtIndex:effectiveRange:", a3, 0);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 112), "suggestedRepliesMessagePartChatItemForMessageItem:attributes:", *(_QWORD *)(a1 + 40), v26);
    v27 = (id)objc_claimAutoreleasedReturnValue();

    goto LABEL_39;
  }
  if (*(_BYTE *)(a1 + 136) || *(_BYTE *)(a1 + 137))
  {
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    if (*(_BYTE *)(v28 + 24))
    {
LABEL_38:
      v27 = 0;
      goto LABEL_39;
    }
    *(_BYTE *)(v28 + 24) = 1;
    if (*(_BYTE *)(a1 + 137))
    {
      v33 = -[IMAttachmentMessagePartChatItem _initWithItem:text:index:messagePartRange:transferGUID:chatContext:]([IMUnavailableMomentShareMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:transferGUID:chatContext:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, 0, *(_QWORD *)(a1 + 56));
LABEL_53:
      v27 = v33;
      goto LABEL_39;
    }
    objc_msgSend(*(id *)(a1 + 40), "message");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    IMCoreMomentShareURLForMessage(v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();

    if (v36)
    {
      objc_msgSend(v36, "absoluteString");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      +[IMMomentShareCache sharedInstance](IMMomentShareCache, "sharedInstance");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v149 = 0;
      objc_msgSend(v38, "momentShareForURLString:error:", v37, &v149);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      v40 = v149;

      if (v39)
      {

      }
      else
      {
        IsPermanent = IMMomentShareCacheErrorIsPermanent(v40);

        if (IsPermanent)
        {
          v42 = off_1E471A418;
LABEL_70:
          v27 = (id)objc_msgSend(objc_alloc(*v42), "_initWithItem:text:index:messagePartRange:transferGUID:chatContext:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, 0, *(_QWORD *)(a1 + 56));

          goto LABEL_39;
        }
      }
    }
    v42 = off_1E471A728;
    goto LABEL_70;
  }
  if (!v113)
  {
LABEL_72:
    v105 = objc_msgSend(*(id *)(a1 + 40), "isFromMe");
    if (*(_QWORD *)(a1 + 120) <= *(_QWORD *)(a1 + 128) && (v45 = *(_BYTE *)(a1 + 139)) != 0)
    {
      v46 = 1;
      if (objc_msgSend(*(id *)(a1 + 40), "hasDataDetectorResults"))
      {
        v145 = 0;
        v146 = &v145;
        v147 = 0x2020000000;
        v148 = 1;
        *(_QWORD *)buf = 0;
        *(_QWORD *)&buf[8] = buf;
        *(_QWORD *)&buf[16] = 0x3010000000;
        v154 = 0;
        v155 = 0;
        v153 = "";
        v139 = 0;
        v140 = &v139;
        v141 = 0x3032000000;
        v142 = sub_1A200ADD4;
        v143 = sub_1A200AC5C;
        v144 = 0;
        v133 = 0;
        v134 = &v133;
        v135 = 0x3032000000;
        v136 = sub_1A200ADD4;
        v137 = sub_1A200AC5C;
        v138 = 0;
        v47 = *(void **)(a1 + 32);
        v48 = *MEMORY[0x1E0D365F0];
        v114[0] = MEMORY[0x1E0C809B0];
        v114[1] = 3221225472;
        v114[2] = sub_1A2086E0C;
        v114[3] = &unk_1E47200E0;
        v119 = &v145;
        v124 = a3;
        v125 = v109;
        v49 = v47;
        v50 = *(_QWORD *)(a1 + 112);
        v115 = v49;
        v126 = v50;
        v116 = *(id *)(a1 + 40);
        v128 = *(_BYTE *)(a1 + 140);
        v51 = *(id *)(a1 + 64);
        v129 = *(_BYTE *)(a1 + 141);
        v130 = v105;
        v117 = v51;
        v127 = v108;
        v131 = *(_BYTE *)(a1 + 142);
        v52 = *(id *)(a1 + 56);
        v132 = v45;
        v118 = v52;
        v120 = &v139;
        v121 = buf;
        v122 = *(_QWORD *)(a1 + 88);
        v123 = &v133;
        objc_msgSend(v49, "enumerateAttribute:inRange:options:usingBlock:", v48, a3, v109, 0, v114);
        if (*((_BYTE *)v146 + 24))
        {
          objc_msgSend((id)v134[5], "scheme");
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v53, "lowercaseString");
          v54 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v54, "trimmedString");
          v55 = (void *)objc_claimAutoreleasedReturnValue();
          v56 = objc_msgSend(v55, "isEqualToString:", CFSTR("http"));

          objc_msgSend(*(id *)(a1 + 40), "body");
          v57 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v57, "string");
          v58 = (void *)objc_claimAutoreleasedReturnValue();
          LODWORD(v53) = objc_msgSend(v58, "im_matchesSOSMapURL");

          objc_msgSend(MEMORY[0x1E0D398E0], "locationInfoFromURL:", v134[5]);
          v59 = (void *)objc_claimAutoreleasedReturnValue();
          v60 = v59;
          if ((v53 | v56) == 1
            && (objc_msgSend(v59, "location"), (v61 = (void *)objc_claimAutoreleasedReturnValue()) != 0)
            && (objc_msgSend(v60, "address"),
                v62 = (void *)objc_claimAutoreleasedReturnValue(),
                v63 = v62 == 0,
                v62,
                v61,
                v63))
          {
            v27 = -[IMMessagePartChatItem _initWithItem:text:index:messagePartRange:visibleAssociatedMessageChatItems:]([IMTranscriptLocationChatItem alloc], "_initWithItem:text:index:messagePartRange:visibleAssociatedMessageChatItems:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, 0);
            objc_msgSend(v27, "setLocationInfo:", v60);
          }
          else
          {
            v64 = *(void **)(a1 + 112);
            v65 = v134[5];
            objc_msgSend(*(id *)(a1 + 40), "sender");
            v66 = (void *)objc_claimAutoreleasedReturnValue();
            v67 = objc_msgSend(v64, "_supportsRichLinkURL:forSender:isAllowlistedRichLinkSender:", v65, v66, *(unsigned __int8 *)(a1 + 140));

            v68 = *(void **)(a1 + 64);
            objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", a3, v109);
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v68, "member:", v69);
            v70 = (void *)objc_claimAutoreleasedReturnValue();

            LODWORD(v69) = objc_msgSend(*(id *)(a1 + 40), "_isSenderUnknown");
            v71 = objc_msgSend(*(id *)(a1 + 56), "hasResponded");
            if ((_DWORD)v69)
            {
              v72 = v105;
              if (*(_BYTE *)(a1 + 141))
                v72 = 1;
              v73 = v72 | v71;
            }
            else
            {
              v73 = 1;
            }
            v91 = objc_msgSend(*(id *)(a1 + 112), "_isAllowlistedURL:", v134[5]);
            if (v70)
              v92 = v67;
            else
              v92 = 0;
            if (v92 == 1 && v73 | v91)
            {
              v93 = objc_alloc_init(IMPluginPayload);
              objc_msgSend(*(id *)(a1 + 40), "guid");
              v94 = (void *)objc_claimAutoreleasedReturnValue();
              -[IMPluginPayload setMessageGUID:](v93, "setMessageGUID:", v94);

              -[IMPluginPayload setPluginBundleID:](v93, "setPluginBundleID:", v15);
              -[IMPluginPayload setUrl:](v93, "setUrl:", v134[5]);
              objc_msgSend(*(id *)(a1 + 40), "fileTransferGUIDs");
              v95 = (void *)objc_claimAutoreleasedReturnValue();
              -[IMPluginPayload addAttachmentsFromFileTransferGUIDs:](v93, "addAttachmentsFromFileTransferGUIDs:", v95);

              v96 = [IMTranscriptPluginChatItem alloc];
              if (*(_BYTE *)(a1 + 142))
              {
                v97 = 1;
              }
              else if (*(_BYTE *)(a1 + 141))
              {
                v97 = 1;
              }
              else
              {
                v97 = v105;
              }
              v27 = -[IMTranscriptPluginChatItem _initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:](v96, "_initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:", *(_QWORD *)(a1 + 40), v93, v108, a3, v109, v97);
              objc_msgSend(v27, "setAllowlistedRichLinkSender:", *(unsigned __int8 *)(a1 + 140));
              objc_msgSend(v27, "setChipListFromText:", *(_QWORD *)(a1 + 32));
            }
            else
            {
              objc_msgSend(*(id *)(a1 + 40), "guid");
              v98 = (void *)objc_claimAutoreleasedReturnValue();
              +[IMMessagePartChatItem chatItemGUIDForMessageGUID:partIndex:](IMMessagePartChatItem, "chatItemGUIDForMessageGUID:partIndex:", v98, v108);
              v93 = (IMPluginPayload *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(*(id *)(a1 + 56), "showingEditHistoryForChatItemGUIDs");
              v99 = (void *)objc_claimAutoreleasedReturnValue();
              LOBYTE(v98) = objc_msgSend(v99, "containsObject:", v93);

              LOBYTE(v104) = (_BYTE)v98;
              v27 = -[IMTextMessagePartChatItem _initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:]([IMTextMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, 0, v104);
              objc_msgSend(v27, "setChipListFromText:", *(_QWORD *)(a1 + 32));
            }

          }
        }
        else
        {
          v85 = v140[5];
          if (!v85)
          {
            v27 = 0;
LABEL_125:

            _Block_object_dispose(&v133, 8);
            _Block_object_dispose(&v139, 8);

            _Block_object_dispose(buf, 8);
            _Block_object_dispose(&v145, 8);
            goto LABEL_39;
          }
          v86 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
          if (!v86)
          {
            v87 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
            v88 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
            v89 = *(void **)(v88 + 40);
            *(_QWORD *)(v88 + 40) = v87;

            v86 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
            v85 = v140[5];
          }
          objc_msgSend(v86, "addObject:", v85);
          v27 = 0;
          v90 = *(_QWORD *)&buf[8];
          *(_QWORD *)(*(_QWORD *)&buf[8] + 32) = 0;
          *(_QWORD *)(v90 + 40) = 0;
          v60 = (void *)v140[5];
          v140[5] = 0;
        }

        goto LABEL_125;
      }
    }
    else
    {
      v46 = 0;
    }
    objc_msgSend(*(id *)(a1 + 40), "guid");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    +[IMMessagePartChatItem chatItemGUIDForMessageGUID:partIndex:](IMMessagePartChatItem, "chatItemGUIDForMessageGUID:partIndex:", v74, v108);
    v75 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 56), "showingEditHistoryForChatItemGUIDs");
    v76 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v74) = objc_msgSend(v76, "containsObject:", v75);

    BYTE1(v104) = (_BYTE)v74;
    LOBYTE(v104) = v46;
    v27 = -[IMTextMessagePartChatItem _initWithItem:text:index:messagePartRange:subject:shouldDisplayLink:isShowingEditHistory:]([IMTextMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:subject:shouldDisplayLink:isShowingEditHistory:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, 0, v104);
    objc_msgSend(v27, "setChipListFromText:", *(_QWORD *)(a1 + 32));

    goto LABEL_39;
  }
  if (*(_BYTE *)(a1 + 138))
    v34 = 0;
  else
    v34 = v16;
  if (((v34 | v19) & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "balloonBundleID");
    v25 = objc_claimAutoreleasedReturnValue();
    if (-[NSObject isEqualToString:](v25, "isEqualToString:", v15))
    {
LABEL_60:

      goto LABEL_38;
    }
    objc_msgSend(*(id *)(a1 + 40), "balloonBundleID");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = objc_msgSend(v43, "containsString:", v18);

    if ((v44 & 1) != 0)
      goto LABEL_38;
    goto LABEL_72;
  }
  if (!v112)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v77 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
      {
        v78 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v113;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v78;
        _os_log_impl(&dword_1A1FF4000, v77, OS_LOG_TYPE_INFO, "Couldn't associate fileTransfer with guid: %@ for message: %@", buf, 0x16u);
      }

    }
    v33 = -[IMAttachmentMessagePartChatItem _initWithItem:text:index:messagePartRange:transferGUID:chatContext:]([IMErrorMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:transferGUID:chatContext:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, v113, *(_QWORD *)(a1 + 56));
    goto LABEL_53;
  }
  if (-[NSObject transferState](v112, "transferState") == 8)
  {
    LOBYTE(v104) = 0;
    v33 = -[IMTextMessagePartChatItem _initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:]([IMDetonatedMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, 0, v104);
    goto LABEL_53;
  }
  if (objc_msgSend(*(id *)(a1 + 40), "isAudioMessage")
    && (-[NSObject type](v112, "type"),
        v79 = (void *)objc_claimAutoreleasedReturnValue(),
        IsAudio = IMUTTypeIsAudio(),
        v79,
        IsAudio))
  {
    v81 = (void *)objc_msgSend(*(id *)(a1 + 112), "_newAudioMessagePartsForMessageItem:text:chatContext:retractedPartIndexes:singlePart:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 48), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
    if (objc_msgSend(v81, "count") == 1)
    {
      objc_msgSend(v81, "firstObject");
      v27 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v100 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
      if (!v100)
      {
        v101 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
        v102 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
        v103 = *(void **)(v102 + 40);
        *(_QWORD *)(v102 + 40) = v101;

        v100 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
      }
      objc_msgSend(v100, "addObjectsFromArray:", v81);
      v27 = 0;
    }
  }
  else
  {
    if (objc_msgSend(*(id *)(a1 + 40), "isExpirable"))
    {
      v33 = -[IMAttachmentMessagePartChatItem _initWithItem:text:index:messagePartRange:transferGUID:chatContext:]([IMExpirableMessageChatItem alloc], "_initWithItem:text:index:messagePartRange:transferGUID:chatContext:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, v113, *(_QWORD *)(a1 + 56));
      goto LABEL_53;
    }
    if (*(_BYTE *)(a1 + 138))
    {
      -[NSObject attributionInfo](v112, "attributionInfo");
      v82 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v82, "objectForKey:", *MEMORY[0x1E0D37F40]);
      v83 = (void *)objc_claimAutoreleasedReturnValue();
      v84 = v83 == 0;

      if (v84)
        goto LABEL_38;
    }
    objc_msgSend(*(id *)(a1 + 32), "attribute:atIndex:effectiveRange:", *MEMORY[0x1E0D362E0], a3, 0);
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v81, "BOOLValue"))
    {
      v27 = -[IMAttachmentMessagePartChatItem _initWithItem:text:index:messagePartRange:transferGUID:chatContext:]([IMAnimatedEmojiMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:transferGUID:chatContext:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, v113, *(_QWORD *)(a1 + 56));
    }
    else
    {
      v27 = -[IMAttachmentMessagePartChatItem _initWithItem:text:index:messagePartRange:transferGUID:chatContext:]([IMAttachmentMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:transferGUID:chatContext:", *(_QWORD *)(a1 + 40), v107, v108, a3, v109, v113, *(_QWORD *)(a1 + 56));
      objc_msgSend(v27, "setChipListFromText:", *(_QWORD *)(a1 + 32));
    }
  }

LABEL_39:
  if (v106)
  {
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "count") && v27)
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "addObject:", v27);
    else
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), v27);
  }
  else if (v27)
  {
    v29 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
    if (!v29)
    {
      v30 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v31 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
      v32 = *(void **)(v31 + 40);
      *(_QWORD *)(v31 + 40) = v30;

      v29 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
    }
    objc_msgSend(v29, "addObject:", v27);
  }

}

void sub_1A2086CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  uint64_t v42;

  _Block_object_dispose(&a36, 8);
  _Block_object_dispose(&a42, 8);
  _Block_object_dispose((const void *)(v42 - 160), 8);
  _Block_object_dispose((const void *)(v42 - 216), 8);
  _Unwind_Resume(a1);
}

id sub_1A2086D7C(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  int v7;
  void *v8;

  v5 = a1;
  _IMDDResultAttributeName();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v5, "attribute:existsInRange:", v6, a2, a3);

  if (v7)
    objc_msgSend(v5, "dd_attributedSubstringFromRange:", a2, a3);
  else
    objc_msgSend(v5, "attributedSubstringFromRange:", a2, a3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_1A2086E0C(uint64_t a1, void *a2, NSUInteger a3, NSUInteger a4, _BYTE *a5)
{
  BOOL v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  IMPluginPayload *v31;
  void *v32;
  IMTranscriptPluginChatItem *v33;
  _BOOL8 v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  IMTextMessagePartChatItem *v46;
  NSRange *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  char v52;
  id v53;
  uint64_t v54;
  void *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  NSRange v60;

  v59 = a2;
  v11 = a3 == *(_QWORD *)(a1 + 104) && a4 == *(_QWORD *)(a1 + 112);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v11;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
  {
    sub_1A2086D7C(*(void **)(a1 + 32), a3, a4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = *(void **)(a1 + 32);
    _IMDDResultAttributeName();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v13) = objc_msgSend(v13, "attribute:existsInRange:", v14, a3, a4);

    if ((v13 & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 32), "attributedSubstringFromRange:", a3, a4);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "trimmedString");
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v16, "string");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v59 && objc_msgSend(v17, "characterAtIndex:", 0) == 46)
      {
        if ((unint64_t)objc_msgSend(v17, "length") < 2)
        {
          v19 = 0;
        }
        else
        {
          objc_msgSend(v16, "attributedSubstringFromRange:", 1, objc_msgSend(v16, "length") - 1);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "trimmedString");
          v19 = objc_claimAutoreleasedReturnValue();

          v16 = v18;
        }

        v16 = (void *)v19;
      }

      v12 = v16;
    }
    objc_msgSend(v12, "string");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceAndNewlineCharacterSet");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "stringByTrimmingCharactersInSet:", v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v22, "length");

    if (!v23)
      goto LABEL_37;
    v24 = *(void **)(a1 + 120);
    objc_msgSend(*(id *)(a1 + 40), "sender");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v24, "_supportsRichLinkURL:forSender:isAllowlistedRichLinkSender:", v59, v25, *(unsigned __int8 *)(a1 + 136)))
    {
      v26 = *(void **)(a1 + 48);
      objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", a3, a4);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "member:", v27);
      v28 = objc_claimAutoreleasedReturnValue();
      if (v28)
      {
        v29 = (void *)v28;
        if (!objc_msgSend(*(id *)(a1 + 40), "_isSenderUnknown") || *(_BYTE *)(a1 + 137))
        {

          goto LABEL_23;
        }
        v56 = *(unsigned __int8 *)(a1 + 138);

        if (v56)
        {
LABEL_23:
          objc_msgSend(*(id *)(a1 + 120), "_guidForMessage:url:", *(_QWORD *)(a1 + 40), v59);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          v31 = objc_alloc_init(IMPluginPayload);
          -[IMPluginPayload setMessageGUID:](v31, "setMessageGUID:", v30);
          -[IMPluginPayload setPluginBundleID:](v31, "setPluginBundleID:", *MEMORY[0x1E0D375F8]);
          -[IMPluginPayload setUrl:](v31, "setUrl:", v59);
          objc_msgSend(*(id *)(a1 + 40), "fileTransferGUIDs");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          -[IMPluginPayload addAttachmentsFromFileTransferGUIDs:](v31, "addAttachmentsFromFileTransferGUIDs:", v32);

          v33 = [IMTranscriptPluginChatItem alloc];
          v34 = *(_BYTE *)(a1 + 139) || *(_BYTE *)(a1 + 137) || *(_BYTE *)(a1 + 138) != 0;
          v35 = -[IMTranscriptPluginChatItem _initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:](v33, "_initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:", *(_QWORD *)(a1 + 40), v31, *(_QWORD *)(a1 + 128), a3, a4, v34);
          objc_msgSend(v35, "setAllowlistedRichLinkSender:", *(unsigned __int8 *)(a1 + 136));

          v36 = *(_QWORD *)(a1 + 88);
          if (!*(_QWORD *)(*(_QWORD *)(v36 + 8) + 40))
          {
            v37 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
            v38 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
            v39 = *(void **)(v38 + 40);
            *(_QWORD *)(v38 + 40) = v37;

            v36 = *(_QWORD *)(a1 + 88);
          }
          if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40))
          {
            objc_msgSend(*(id *)(*(_QWORD *)(v36 + 8) + 40), "addObject:");
            v40 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
            *(_QWORD *)(v40 + 32) = 0;
            *(_QWORD *)(v40 + 40) = 0;
            v41 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
            v42 = *(void **)(v41 + 40);
            *(_QWORD *)(v41 + 40) = 0;

            v36 = *(_QWORD *)(a1 + 88);
          }
          objc_msgSend(*(id *)(*(_QWORD *)(v36 + 8) + 40), "addObject:", v35);
          goto LABEL_36;
        }
LABEL_33:
        objc_msgSend(*(id *)(a1 + 40), "guid");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        +[IMMessagePartChatItem chatItemGUIDForMessageGUID:partIndex:](IMMessagePartChatItem, "chatItemGUIDForMessageGUID:partIndex:", v43, *(_QWORD *)(a1 + 128));
        v44 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(*(id *)(a1 + 56), "showingEditHistoryForChatItemGUIDs");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v43) = objc_msgSend(v45, "containsObject:", v44);

        v46 = [IMTextMessagePartChatItem alloc];
        BYTE1(v57) = (_BYTE)v43;
        LOBYTE(v57) = *(_BYTE *)(a1 + 140);
        v35 = -[IMTextMessagePartChatItem _initWithItem:text:index:messagePartRange:subject:shouldDisplayLink:isShowingEditHistory:](v46, "_initWithItem:text:index:messagePartRange:subject:shouldDisplayLink:isShowingEditHistory:", *(_QWORD *)(a1 + 40), v12, *(_QWORD *)(a1 + 128), a3, a4, 0, v57);
        objc_msgSend(v35, "setChipListFromText:", *(_QWORD *)(a1 + 32));

        v47 = *(NSRange **)(*(_QWORD *)(a1 + 80) + 8);
        if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40))
        {
          v60.location = a3;
          v60.length = a4;
          *(NSRange *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 32) = NSUnionRange(v47[2], v60);
          sub_1A2086D7C(*(void **)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 40), "guid");
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          +[IMMessagePartChatItem chatItemGUIDForMessageGUID:partIndex:](IMMessagePartChatItem, "chatItemGUIDForMessageGUID:partIndex:", v49, *(_QWORD *)(a1 + 128));
          v50 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(*(id *)(a1 + 56), "showingEditHistoryForChatItemGUIDs");
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          v52 = objc_msgSend(v51, "containsObject:", v50);

          LOBYTE(v58) = v52;
          v53 = -[IMTextMessagePartChatItem _initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:]([IMTextMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:subject:isShowingEditHistory:", *(_QWORD *)(a1 + 40), v48, *(_QWORD *)(a1 + 128), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), 0, v58);
          v54 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
          v55 = *(void **)(v54 + 40);
          *(_QWORD *)(v54 + 40) = v53;

          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "setChipListFromText:", *(_QWORD *)(a1 + 32));
        }
        else
        {
          v47[2].location = a3;
          v47[2].length = a4;
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v35);
        }
LABEL_36:

LABEL_37:
        goto LABEL_38;
      }

    }
    goto LABEL_33;
  }
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40), a2);
  *a5 = 1;
LABEL_38:

}

void sub_1A2087580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20875A4(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  char v12;
  IMSuggestedActionsMessagePartChatItem *v13;
  void *v14;
  void *v15;
  IMSuggestedActionsMessagePartChatItem *v16;
  IMRichActionFooterChatItem *v17;
  void *v18;
  id v19;
  id v20;

  v20 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v20;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = v20;
    objc_msgSend(v7, "suggestedActionsList");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "count");

    if (v9)
    {
      v10 = a3 + 1;
      if ((objc_msgSend(v7, "supportsSuggestedActionsMenu") & 1) == 0)
      {
        if (v10 >= objc_msgSend(*(id *)(a1 + 32), "count")
          || (objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v10),
              v11 = (void *)objc_claimAutoreleasedReturnValue(),
              objc_opt_class(),
              v12 = objc_opt_isKindOfClass(),
              v11,
              (v12 & 1) == 0))
        {
          v13 = [IMSuggestedActionsMessagePartChatItem alloc];
          objc_msgSend(v7, "messageItem");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "suggestedActionsList");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = -[IMSuggestedActionsMessagePartChatItem initWithItem:suggestedActionsList:](v13, "initWithItem:suggestedActionsList:", v14, v15);

          objc_msgSend(*(id *)(a1 + 40), "addObject:", v16);
          objc_msgSend(*(id *)(a1 + 48), "addIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) + v10);
          ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);

        }
      }
      v17 = [IMRichActionFooterChatItem alloc];
      objc_msgSend(v7, "messageItem");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = -[IMRichActionFooterChatItem _initWithItem:](v17, "_initWithItem:", v18);

      objc_msgSend(*(id *)(a1 + 40), "addObject:", v19);
      objc_msgSend(*(id *)(a1 + 48), "addIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) + v10);
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);

    }
    v6 = v20;
  }

}

void sub_1A20882E8(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  _QWORD v7[6];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend(*(id *)(a1 + 32), "_senderHandle");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[IMMessageRetractionChatItem _initWithItem:partIndex:isFailedRetraction:retractionUnsupportedByHandles:sender:isFromMe:]([IMMessageRetractionChatItem alloc], "_initWithItem:partIndex:isFailedRetraction:retractionUnsupportedByHandles:sender:isFromMe:", *(_QWORD *)(a1 + 32), a2, objc_msgSend(*(id *)(a1 + 40), "containsIndex:", a2), *(_QWORD *)(a1 + 48), v4, objc_msgSend(*(id *)(a1 + 32), "isFromMe"));
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  v6 = *(void **)(a1 + 56);
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A208840C;
  v7[3] = &unk_1E4720158;
  v7[4] = &v8;
  v7[5] = a2;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v7);
  objc_msgSend(*(id *)(a1 + 64), "insertObject:atIndex:", v5, v9[3]);
  _Block_object_dispose(&v8, 8);

}

void sub_1A20883F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A208840C(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v5;
  id v6;

  v6 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5 = objc_msgSend(v6, "index");
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_8;
    v5 = objc_msgSend(v6, "partIndex");
  }
  if (v5 != 0x7FFFFFFFFFFFFFFFLL && v5 < *(_QWORD *)(a1 + 40))
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a3 + 1;
LABEL_8:

}

void sub_1A2088748(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

id sub_1A2088760(_QWORD *a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSUInteger v9;
  NSUInteger v10;
  uint64_t i;
  void *v12;
  void *v13;
  uint64_t location;
  NSUInteger length;
  NSRange v16;
  NSRange v17;
  uint64_t v18;
  id v19;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;
  NSRange v28;

  v27 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v2, "count"));
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v5)
  {
    v6 = v5;
    v7 = 0;
    v8 = *(_QWORD *)v23;
    v9 = -1;
    v10 = -1;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v23 != v8)
          objc_enumerationMutation(v4);
        v12 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * i);
        objc_msgSend(v12, "transferGUID");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (v13)
          objc_msgSend(v3, "addObject:", v13);
        location = objc_msgSend(v12, "messagePartRange");
        v16.location = location;
        v16.length = length;
        if (v9 != -1)
        {
          v28.location = v9;
          v28.length = v10;
          v17 = NSUnionRange(v28, v16);
          length = v17.length;
          location = v17.location;
        }
        v9 = location;
        v10 = length;
        v18 = objc_msgSend(v12, "index");
        if (v18 > v7)
          v7 = v18;

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v6);
  }
  else
  {
    v7 = 0;
    v9 = -1;
    v10 = -1;
  }

  v19 = -[IMAggregateAttachmentMessagePartChatItem _initWithItem:text:index:messagePartRange:transferGUIDs:chatContext:]([IMAggregateAttachmentMessagePartChatItem alloc], "_initWithItem:text:index:messagePartRange:transferGUIDs:chatContext:", a1[4], 0, v7, v9, v10, v3, a1[5]);
  objc_msgSend(v19, "setChipListFromText:", a1[6]);
  objc_msgSend(v19, "setAggregateAttachmentParts:", v4);

  return v19;
}

void sub_1A2088960(uint64_t a1)
{
  unint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  IMOrganicAttachmentMessagePartChatItem *v10;
  id v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "count");
  if (v2 <= +[IMMessagePartChatItem _attachmentStackAggregationThreshold](IMMessagePartChatItem, "_attachmentStackAggregationThreshold"))
  {
    if ((unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "count") < 2)
    {
      objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
      goto LABEL_14;
    }
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v4 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v15;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v15 != v7)
            objc_enumerationMutation(v4);
          v9 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v8);
          v10 = [IMOrganicAttachmentMessagePartChatItem alloc];
          v11 = -[IMOrganicAttachmentMessagePartChatItem _initWithAttachmentMessagePartChatItem:](v10, "_initWithAttachmentMessagePartChatItem:", v9, (_QWORD)v14);
          objc_msgSend(*(id *)(a1 + 32), "addObject:", v11);

          ++v8;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v6);
    }

    objc_msgSend(*(id *)(a1 + 32), "lastObject");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setChipListFromText:", *(_QWORD *)(a1 + 40));
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);
  }

LABEL_14:
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = 0;

}

void sub_1A2088B34(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  int v8;
  void *v9;
  int IsSupportedAnimatedImage;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char isKindOfClass;
  void **v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;

  v24 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v3 = v24;
    +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "transferGUID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "transferForGUID:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    LODWORD(v4) = objc_msgSend(v6, "existsAtLocalPath");
    v7 = objc_msgSend(v6, "commSafetySensitive");
    v8 = 0;
    if ((_DWORD)v4 && !v7)
    {
      objc_msgSend(v6, "type");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      IsSupportedAnimatedImage = IMUTTypeIsSupportedAnimatedImage();

      if (IsSupportedAnimatedImage)
      {
        objc_msgSend(v6, "localURL");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = IMFileURLIsActuallyAnimated() ^ 1;

      }
      else
      {
        v8 = 1;
      }
    }

  }
  else
  {
    v8 = 0;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && v8)
  {
    v12 = v24;
    +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "transferGUID");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "transferForGUID:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v15, "filename");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    IMUTITypeForFilename();
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v15, "isFromMomentShare"))
    {
      IMUTITypeIsSupportedByPhotos();
    }
    else
    {
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((IMUTITypeIsSupportedByPhotos() & 1) == 0 && (isKindOfClass & 1) == 0)
      {
        v19 = (void **)(a1 + 32);
        goto LABEL_19;
      }
    }
    v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    if (v20)
    {
LABEL_20:
      objc_msgSend(v20, "addObject:", v12);

      goto LABEL_21;
    }
    v21 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v23 = *(void **)(v22 + 40);
    *(_QWORD *)(v22 + 40) = v21;

    v19 = (void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
LABEL_19:
    v20 = *v19;
    goto LABEL_20;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v24);
LABEL_21:

}

void *sub_1A208902C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("UTTypeConformsTo", CFSTR("CoreServices"));
  off_1EE65F490 = result;
  return result;
}

id sub_1A20893B8(uint64_t a1, void *a2, void *a3, char a4, void *a5)
{
  id v8;
  void *v9;
  void *v10;
  void *IMMessageFromIMItem;
  IMMessage *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  IMMessage *v20;
  void *v21;
  id v23;
  id v24;
  void *v25;
  char v26;
  void *v27;

  v24 = a5;
  v23 = a3;
  v8 = a2;
  objc_msgSend(v8, "account");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  _IMBestAccountForIMItem(v8, 0, v9, 0, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v25 = v10;
  IMMessageFromIMItem = (void *)_CreateIMMessageFromIMItem(v8, v10, 1);

  v12 = [IMMessage alloc];
  objc_msgSend(IMMessageFromIMItem, "sender");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(IMMessageFromIMItem, "time");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = a4;
  if ((a4 & 1) != 0)
  {
    v27 = 0;
  }
  else
  {
    objc_msgSend(IMMessageFromIMItem, "messageSubject");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v15 = objc_msgSend(IMMessageFromIMItem, "flags");
  objc_msgSend(IMMessageFromIMItem, "error");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(IMMessageFromIMItem, "guid");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(IMMessageFromIMItem, "subject");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(IMMessageFromIMItem, "threadIdentifier");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = -[IMMessage initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:threadIdentifier:](v12, "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:threadIdentifier:", v13, v14, v23, v27, v24, v15, v16, v17, v18, v19);

  if ((v26 & 1) == 0)
  -[IMMessage _imMessageItem](v20, "_imMessageItem");
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  return v21;
}

void sub_1A2089A58(uint64_t a1, void *a2)
{
  objc_class *v3;
  id v4;
  void *v5;
  id v6;

  v3 = (objc_class *)MEMORY[0x1E0D39760];
  v4 = a2;
  v6 = (id)objc_msgSend([v3 alloc], "initWithDictionary:", v4);

  objc_msgSend(v6, "suggestedActions");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setSuggestedActionsList:", v5);

}

void sub_1A208A244()
{
  id v0;

  if (IMIsRunningInUnitTesting())
  {
    byte_1EE65F4A8 = 1;
  }
  else
  {
    objc_msgSend((id)MEMORY[0x1A858292C](CFSTR("AFPreferences"), CFSTR("AssistantServices")), "sharedPreferences");
    v0 = (id)objc_claimAutoreleasedReturnValue();
    byte_1EE65F4A8 = objc_msgSend(v0, "assistantIsEnabled");

  }
}

id IMCreateThreadIdentifierForMessagePartChatItem(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v1 = a1;
  objc_msgSend(v1, "message");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v1, "index");
  v5 = objc_msgSend(v1, "originalMessagePartRange");
  v7 = v6;

  IMCreateThreadIdentifier(v3, v4, v5, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id IMCreateThreadIdentifier(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v7;
  id v8;
  void *v9;

  v7 = (objc_class *)MEMORY[0x1E0CB3940];
  v8 = a1;
  v9 = (void *)objc_msgSend([v7 alloc], "initWithFormat:", CFSTR("r:%lu:%lu:%lu:%@"), a2, a3, a4, v8);

  return v9;
}

id IMCreateThreadIdentifierForRetractedMessagePartChatItem(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  objc_msgSend(v1, "messageGUID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v1, "partIndex");

  IMCreateThreadIdentifier(v2, v3, 0x7FFFFFFFFFFFFFFFLL, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1A208ABC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A208ABEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a5 = 1;
  return result;
}

uint64_t sub_1A208AC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a5 = 1;
  return result;
}

id sub_1A20926D0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;

  v4 = a3;
  objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A2092790;
  v11[3] = &unk_1E4720310;
  v12 = v4;
  v6 = v5;
  v13 = v6;
  v7 = v4;
  objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:", 2, v11);
  v8 = v13;
  v9 = v6;

  return v9;
}

void sub_1A2092790(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v9, "message");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(void **)(a1 + 32);

    if (v7 == v8)
      objc_msgSend(*(id *)(a1 + 40), "addIndex:", a3);
  }
  else if (objc_msgSend(*(id *)(a1 + 40), "count"))
  {
    *a4 = 1;
  }

}

id sub_1A2092830(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;

  v4 = a3;
  objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A20928F0;
  v11[3] = &unk_1E4720310;
  v12 = v4;
  v6 = v5;
  v13 = v6;
  v7 = v4;
  objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:", 2, v11);
  v8 = v13;
  v9 = v6;

  return v9;
}

void sub_1A20928F0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_msgSend(v9, "_item");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(*(id *)(a1 + 40), "addIndex:", a3);
  }
  else if (objc_msgSend(*(id *)(a1 + 40), "count"))
  {
    *a4 = 1;
  }

}

void sub_1A2094318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2094330(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  id v7;

  v7 = a3;
  if (IMMessagePartDescriptionGetMessagePartIndex() == *(_QWORD *)(a1 + 40))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a3);
    *a4 = 1;
  }

}

void sub_1A2094838(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t sub_1A2095138(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  void *v10;
  uint64_t v11;

  v8 = a3;
  v9 = a4;
  if (objc_msgSend(v9, "checkResourceIsReachableAndReturnError:", a5)
    && !objc_msgSend(a1, "removeItemAtURL:error:", v9, a5))
  {
    v11 = 0;
  }
  else
  {
    v10 = (void *)MEMORY[0x1A8582A4C](v8);
    if (v10)
    {
      objc_msgSend(v8, "startAccessingSecurityScopedResource");
      v11 = objc_msgSend(a1, "copyItemAtURL:toURL:error:", v8, v9, a5);
      objc_msgSend(v8, "stopAccessingSecurityScopedResource");
    }
    else
    {
      v11 = objc_msgSend(a1, "copyItemAtURL:toURL:error:", v8, v9, a5);
    }

  }
  return v11;
}

void sub_1A2095870(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2095778);
  }
  _Unwind_Resume(a1);
}

void sub_1A2096970(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  uint8_t v5[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "clearing in memory salt cache due to dispatch notification", v5, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "model");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setPluginIDToMetadataCache:", v4);

}

void sub_1A20987D8(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id WeakRetained;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint8_t buf[4];
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = objc_msgSend(*(id *)(a1 + 40), "count");
      *(_DWORD *)buf = 138412546;
      v11 = v3;
      v12 = 2048;
      v13 = v4;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Matching extensions (%@): %lu", buf, 0x16u);
    }

  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("loadAppExtensionForProxies_%@"), *(_QWORD *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 48), "startTimingForKey:", v5);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  objc_msgSend(WeakRetained, "_updatePluginsForExtensions:extensionPoint:precachedBalloonAppExtensions:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));

  objc_msgSend(*(id *)(a1 + 48), "stopTimingForKey:", v5);
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "postNotificationName:object:", CFSTR("__kIMBalloonPluginExtensionsLoaded"), *(_QWORD *)(a1 + 64));

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412290;
      v11 = v9;
      _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "3rd party app discovery time: %@", buf, 0xCu);
    }

  }
}

void sub_1A2098FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2098FC8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  int v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "length"))
  {
    objc_msgSend(*(id *)(a1 + 40), "model");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pluginsMap");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "pluginForIdentifier:", v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v4);
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          v9 = 138412290;
          v10 = v7;
          _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Removing plugin: %@", (uint8_t *)&v9, 0xCu);
        }

      }
    }

  }
}

uint64_t sub_1A209966C(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  int v8;
  id v9;
  __int16 v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v8 = 138412546;
      v9 = v4;
      v10 = 2112;
      v11 = v5;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Couldn't enumerate %@: %@", (uint8_t *)&v8, 0x16u);
    }

  }
  return 1;
}

id IMSPISimulateMessages(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[5];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;

  v3 = a1;
  +[IMDaemonController sharedController](IMDaemonController, "sharedController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "multiplexedConnectionWithLabel:capabilities:context:", CFSTR("IMCoreSPI_HasActiveAlias"), 8708, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "waitForSetup");
  objc_msgSend(v3, "arrayByApplyingSelector:", sel__createSimulatedMessage);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = sub_1A200ADF4;
  v16 = sub_1A200AC6C;
  v17 = 0;
  objc_msgSend(v5, "synchronousRemoteProxy");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A209A820;
  v11[3] = &unk_1E4720638;
  v11[4] = &v12;
  objc_msgSend(v7, "simulateMessages:completion:", v6, v11);

  objc_msgSend(v5, "invalidate");
  if (a2 && (v8 = (void *)v13[5]) != 0)
  {
    v9 = 0;
    *a2 = objc_retainAutorelease(v8);
  }
  else
  {
    objc_msgSend(v6, "arrayByApplyingSelector:", sel_guid);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
  }
  _Block_object_dispose(&v12, 8);

  return v9;
}

void sub_1A209A808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A209A820(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void IMResetJunkiMessageFilteringState()
{
  qword_1ECF11F10 = -1;
}

unint64_t FZPersonStatusFromIMPersonStatus(unint64_t result)
{
  if (result >= 6)
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("IMServiceImpl: Unknown IMPersonStatus %d"), result);
    return 0;
  }
  return result;
}

uint64_t IMPersonStatusFromFZPersonStatus(uint64_t result)
{
  if (result < 6)
    return result;
  objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("IMServiceImpl: Unknown FZPersonStatus %d"), result);
  return 0;
}

void sub_1A209A938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[5];

  v4[4] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0C967E0];
  v4[0] = *MEMORY[0x1E0C967D8];
  v4[1] = v0;
  v1 = *MEMORY[0x1E0C967E8];
  v4[2] = *MEMORY[0x1E0C967D0];
  v4[3] = v1;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v4, 4);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)qword_1EE65EA78;
  qword_1EE65EA78 = v2;

}

void sub_1A209BD3C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained && objc_msgSend(v3, "length"))
  {
    objc_msgSend(WeakRetained, "setSuggestedName:", v3);
    v5 = *(_QWORD *)(a1 + 32);
    v9 = *MEMORY[0x1E0D37400];
    v10[0] = v5;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v10, &v9, 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "postNotificationName:object:userInfo:", *MEMORY[0x1E0D37408], *(_QWORD *)(a1 + 40), v6);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "postNotificationName:object:userInfo:", *MEMORY[0x1E0D373D0], *(_QWORD *)(a1 + 40), v6);

  }
}

void sub_1A209CAAC(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  int v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "setCachedDisplayNameWithAbbreviation:", 0);

  v4 = objc_loadWeakRetained(v2);
  v5 = objc_msgSend(v4, "isBusiness");

  v6 = objc_loadWeakRetained(v2);
  v7 = v6;
  if (v5)
  {
    v8 = (void *)MEMORY[0x1E0D396F8];
    objc_msgSend(*(id *)(a1 + 32), "ID");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "placeholderNameForBrandURI:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setCachedName:", v10);

  }
  else
  {
    objc_msgSend(v6, "setCachedName:", 0);
  }

  +[IMHandleRegistrar sharedInstance](IMHandleRegistrar, "sharedInstance");
  v12 = (id)objc_claimAutoreleasedReturnValue();
  v11 = objc_loadWeakRetained(v2);
  objc_msgSend(v12, "addHandleToCNIDMap:CNContact:", v11, *(_QWORD *)(a1 + 40));

}

void sub_1A209FBDC(uint64_t a1, int a2, int a3, int a4, void *a5)
{
  id v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  int v20;
  void *v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  int v25;
  __int16 v26;
  int v27;
  __int16 v28;
  int v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v9 = a5;
  if (v9)
  {
    IMLogHandleForCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1A2196C64((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(a1 + 40);
      v20 = 138413314;
      v21 = v18;
      v22 = 2112;
      v23 = v19;
      v24 = 1024;
      v25 = a2;
      v26 = 1024;
      v27 = a3;
      v28 = 1024;
      v29 = a4;
      _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_DEBUG, "Completed request to share off grid mode with handle %@ from handle %@. didAttemptInvitation: %{BOOL}d wasAlreadyInvited: %{BOOL}d didShareHandle: %{BOOL}d", (uint8_t *)&v20, 0x28u);

    }
  }

}

void sub_1A20A0100(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, void *a6)
{
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  int v22;
  void *v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v11 = a6;
  if (v11)
  {
    IMLogHandleForCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1A2196CCC((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = *(_QWORD *)(a1 + 40);
      v22 = 138413570;
      v23 = v20;
      v24 = 2112;
      v25 = v21;
      v26 = 2048;
      v27 = a2;
      v28 = 2048;
      v29 = a3;
      v30 = 2048;
      v31 = a4;
      v32 = 2048;
      v33 = a5;
      _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_DEBUG, "Completed request to share availbaility with handle %@ from handle %@. didAttemptInvitation: %ld wasAlreadyInvited: %ld canShareHandle: %ld didShareHandle: %ld", (uint8_t *)&v22, 0x3Eu);

    }
  }

}

void sub_1A20A17F0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  int v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v10;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Error getting brand for business with brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
  }
  else
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        v12 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v12;
        _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_DEBUG, "Successfully fetched business info for business with brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
    objc_msgSend(WeakRetained, "_fetchedBrand:withBrandURI:", v5, *(_QWORD *)(a1 + 32));
  }

}

void sub_1A20A1A5C(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    +[IMChorosMonitor sharedInstance](IMChorosMonitor, "sharedInstance");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "ID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "roadsideBusinessIDForChatIdentifier:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (v4)
      objc_msgSend(v5, "_fetchBrandInfoForBrandWithURI:forType:", v4, 1);

    WeakRetained = v5;
  }

}

void sub_1A20A1EAC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  int v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v10;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Error getting square logo data for business with brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
  }
  else
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        v12 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v12;
        _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_DEBUG, "Successfully fetched logo image data for brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
    objc_msgSend(WeakRetained, "setBrandSquareLogoImageData:", v5);
  }
  objc_msgSend(WeakRetained, "_postOnScreenChangedNotificationForBrandProperty:", *MEMORY[0x1E0D373E0]);

}

void sub_1A20A2050(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  int v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v10;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Error getting square logo data for business with brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
  }
  else
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        v12 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v12;
        _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_DEBUG, "Successfully fetched square logo image data for business with brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
    objc_msgSend(WeakRetained, "setBrandSquareLogoImageData:", v5);
  }
  objc_msgSend(WeakRetained, "_postOnScreenChangedNotificationForBrandProperty:", *MEMORY[0x1E0D373E0]);

}

void sub_1A20A21F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  int v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v10;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Error getting wide logo image data for business with brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
  }
  else
  {
    if (v8)
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        v12 = *(_QWORD *)(a1 + 32);
        v13 = 138412290;
        v14 = v12;
        _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_DEBUG, "Successfully fetched wide logo image data for business with brandURI: %@", (uint8_t *)&v13, 0xCu);
      }

    }
    objc_msgSend(WeakRetained, "setBrandWideLogoImageData:", v5);
  }
  objc_msgSend(WeakRetained, "_postOnScreenChangedNotificationForBrandProperty:", *MEMORY[0x1E0D373E8]);

}

void sub_1A20A2E48(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1A20A2F68(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)MEMORY[0x1E0CB35C8];
  v4 = a2;
  objc_msgSend(v3, "errorWithDomain:code:userInfo:", CFSTR("com.apple.Messages.IMDaemonQueryErrorDomain"), 1, 0);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "failQuery:error:", v4, v5);

}

void sub_1A20A4368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A20A56A8()
{
  IMPhotoLibraryPersistenceManager *v0;
  void *v1;
  NSObject *v2;
  uint8_t v3[16];

  if (IMIsRunningInPhotosPersistenceDependentClient())
  {
    v0 = objc_alloc_init(IMPhotoLibraryPersistenceManager);
    v1 = (void *)qword_1ECF12550;
    qword_1ECF12550 = (uint64_t)v0;

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Not allowing IMPhotoLibraryPersistenceManager to be created.", v3, 2u);
    }

  }
}

void sub_1A20A5864()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_queue_attr_make_with_qos_class(MEMORY[0x1E0C80D50], QOS_CLASS_DEFAULT, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create("com.apple.messages.IMPhotoLibraryPersistenceManager", v2);
  v1 = (void *)qword_1EE65EB08;
  qword_1EE65EB08 = (uint64_t)v0;

}

void sub_1A20A58FC()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create("com.apple.messages.IMPhotoLibraryPersistenceManagerInternalQueue", v2);
  v1 = (void *)qword_1EE65EAB0;
  qword_1EE65EAB0 = (uint64_t)v0;

}

void sub_1A20A5B34(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  if (IMFileTransferGUIDIsTemporary())
  {
    objc_msgSend(*(id *)(a1 + 32), "messageParts");
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v5 = (id)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v14;
      while (2)
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v14 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
          objc_msgSend(v10, "transferGUID", (_QWORD)v13);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v11, "isEqualToString:", v3))
          {
            objc_msgSend(v10, "messagePartIndex");

            goto LABEL_12;
          }

        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
        if (v7)
          continue;
        break;
      }
    }
LABEL_12:

    objc_msgSend(*(id *)(a1 + 32), "guid");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    IMFileTransferGUIDForAttachmentMessagePartAtMessageGUIDAndMessagePartIndex();
    v4 = (void *)objc_claimAutoreleasedReturnValue();

  }
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v4, (_QWORD)v13);

}

void sub_1A20A64F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = 138412290;
      v8 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Finished fetching identifiers that weren't cached. Notifying listeners. identifiersNeedingFetch: %@", (uint8_t *)&v7, 0xCu);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "_notifyListeners");

}

void sub_1A20A6720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A20A6C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  uint64_t v49;
  uint64_t v50;

  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&v49, 8);
  _Block_object_dispose(&v50, 8);
  JUMPOUT(0x1A20A6C78);
}

void sub_1A20A6C1C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  objc_sync_exit(v0);
  _Block_object_dispose(&v1, 8);
  _Block_object_dispose(&v2, 8);
  JUMPOUT(0x1A20A6C78);
}

id sub_1A20A6C80()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1EE65EB38;
  v7 = qword_1EE65EB38;
  if (!qword_1EE65EB38)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = sub_1A20A7A30;
    v3[3] = &unk_1E4720028;
    v3[4] = &v4;
    sub_1A20A7A30((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A20A6D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20A6D38(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  BOOL v16;
  _BOOL8 v17;
  id v18;
  void *v19;
  void *v20;
  id obj;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_openPhotoLibraryIfNecessary");
  objc_msgSend(sub_1A20A6FEC(), "sharedPhotoLibrary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "librarySpecificFetchOptions");
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v22, "setIncludeTrashedAssets:", 0);
  objc_msgSend(v22, "setIncludeHiddenAssets:", 1);
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  obj = *(id *)(a1 + 40);
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v24 != v4)
          objc_enumerationMutation(obj);
        v6 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * i);
        v7 = sub_1A20A6C80();
        v27 = v6;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v27, 1);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "fetchAssetsWithSyndicationIdentifiers:options:includeRejected:", v8, v22, 1);
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        v10 = objc_msgSend(v9, "count");
        if (v10)
          ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
        objc_msgSend(v9, "firstObject");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "uuid");
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
        v15 = *(_QWORD *)(v13 + 40);
        v14 = (id *)(v13 + 40);
        if (v15)
          v16 = 1;
        else
          v16 = v12 == 0;
        if (!v16)
          objc_storeStrong(v14, v12);
        v17 = v10 != 0;
        v18 = *(id *)(a1 + 32);
        objc_sync_enter(v18);
        v19 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v17);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "setObject:forKey:", v20, v6);

        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "setObject:forKey:", v9, v6);
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "removeObject:", v6);
        if (v12)
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setObject:forKey:", v12, v6);
        objc_sync_exit(v18);

      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
    }
    while (v3);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1A20A6FD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1A20A6FEC()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1EE65F1E0;
  v7 = qword_1EE65F1E0;
  if (!qword_1EE65F1E0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = sub_1A20A7B28;
    v3[3] = &unk_1E4720028;
    v3[4] = &v4;
    sub_1A20A7B28((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A20A708C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_1A20A70A4(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(result[5] + 8) + 24) += *(_QWORD *)(*(_QWORD *)(result[6] + 8) + 24);
  v1 = result[4];
  if (v1)
    return (_QWORD *)(*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(result[4], *(_QWORD *)(*(_QWORD *)(result[5] + 8) + 24), *(_QWORD *)(*(_QWORD *)(result[7] + 8) + 40));
  return result;
}

void sub_1A20A7534(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint8_t v4[16];

  objc_msgSend(*(id *)(a1 + 32), "_openPhotoLibraryIfNecessary");
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Registering IMPhotoLibraryPersistenceManager as a sharedPhotoLibrary change observer", v4, 2u);
    }

  }
  objc_msgSend(sub_1A20A6FEC(), "sharedPhotoLibrary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "registerChangeObserver:", *(_QWORD *)(a1 + 32));

}

uint64_t sub_1A20A75E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_openPhotoLibraryIfNecessary");
}

uint64_t sub_1A20A766C(uint64_t a1)
{
  NSObject *v2;
  uint64_t result;
  uint8_t v4[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Received photoLibraryDidChange: notification", v4, 2u);
    }

  }
  result = objc_msgSend(*(id *)(a1 + 32), "_invalidateCacheDueToChanges:", *(_QWORD *)(a1 + 40));
  if ((_DWORD)result)
  {
    objc_msgSend(MEMORY[0x1E0DE7910], "cancelPreviousPerformRequestsWithTarget:selector:object:", *(_QWORD *)(a1 + 32), sel__notifyListeners, 0);
    return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:afterDelay:", sel__notifyListeners, 0, 0.25);
  }
  return result;
}

Class sub_1A20A7A30(uint64_t a1)
{
  Class result;

  sub_1A20A7A84();
  result = objc_getClass("PHAsset");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_1A2196E50();
  qword_1EE65EB38 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A20A7A84()
{
  void *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = 0;
  if (!qword_1EE65F1F0)
  {
    v1 = xmmword_1E4720958;
    v2 = 0;
    qword_1EE65F1F0 = _sl_dlopen();
  }
  if (!qword_1EE65F1F0)
    sub_1A2196EC8(&v0);
}

Class sub_1A20A7B28(uint64_t a1)
{
  Class result;

  sub_1A20A7A84();
  result = objc_getClass("PHPhotoLibrary");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_1A2196F44();
  qword_1EE65F1E0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A20A7BBC()
{
  IMLocationManagerUtils *v0;
  void *v1;

  v0 = objc_alloc_init(IMLocationManagerUtils);
  v1 = (void *)qword_1ECF12600;
  qword_1ECF12600 = (uint64_t)v0;

}

void sub_1A20A7EDC(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint64_t v4;
  uint8_t v5[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Authorized to send out location.", v5, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "setCurrentLocationGUID:", *(_QWORD *)(a1 + 40));
  +[IMMessage locatingMessageWithGuid:error:](IMMessage, "locatingMessageWithGuid:error:", *(_QWORD *)(a1 + 40), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(*(id *)(a1 + 48), "length"))
    objc_msgSend(v3, "setSourceApplicationID:", *(_QWORD *)(a1 + 48));
  sub_1A20A7FE0(*(void **)(a1 + 32), v3);
  objc_msgSend(*(id *)(a1 + 32), "_sendMessage:adjustingSender:shouldQueue:", v3, 1, 1);
  v4 = *(_QWORD *)(a1 + 56);
  if (v4)
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v3);

}

void sub_1A20A7FE0(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *IMMessageFromIMItem;
  id v19;

  v19 = a1;
  v3 = a2;
  objc_msgSend(v19, "inlineReplyController");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    objc_msgSend(v19, "inlineReplyController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "threadIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      objc_msgSend(v19, "inlineReplyController");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "threadIdentifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setThreadIdentifier:", v9);

    }
  }
  objc_msgSend(v19, "inlineReplyController");
  v10 = objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v11 = (void *)v10;
    objc_msgSend(v19, "inlineReplyController");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "threadOriginator");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      objc_msgSend(v19, "inlineReplyController");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "threadOriginator");
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v15, "account");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      _IMBestAccountForIMItem(v15, 0, v16, 0, 0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      IMMessageFromIMItem = (void *)_CreateIMMessageFromIMItem(v15, v17, 1);
      objc_msgSend(v3, "setThreadOriginator:", IMMessageFromIMItem);

    }
  }

}

void sub_1A20A8154(uint64_t a1, void *a2, void *a3)
{
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _BOOL4 v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  id v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v25 = a2;
  v26 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v36 = v26;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Update current location complete with error: %@", buf, 0xCu);
    }

  }
  if (!v26)
  {
    objc_msgSend(*(id *)(a1 + 32), "account");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "service");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    +[IMService iMessageService](IMServiceImpl, "iMessageService");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 32), "lastAddressedHandleID");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "lastAddressedSIMID");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = +[IMServiceImpl mmsEnabledforPhoneNumber:simID:](IMServiceImpl, "mmsEnabledforPhoneNumber:simID:", v12, v13);

    if (v10 == v11 || v14)
    {
      if (v10 == v11)
        v15 = 1;
      else
        v15 = 3;
      +[IMMessage messageWithLocation:flags:error:guid:](IMMessage, "messageWithLocation:flags:error:guid:", v25, 5, 0, *(_QWORD *)(a1 + 40));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      +[IMMessage textMessageWithLocation:flags:error:guid:](IMMessage, "textMessageWithLocation:flags:error:guid:", v25, 5, 0, *(_QWORD *)(a1 + 40));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 2;
    }
    v33 = *MEMORY[0x1E0D38618];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = v16;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "trackEvent:withDictionary:", *MEMORY[0x1E0D38610], v8);

    if (objc_msgSend(*(id *)(a1 + 48), "length"))
      objc_msgSend(v5, "setSourceApplicationID:", *(_QWORD *)(a1 + 48));
    objc_msgSend(*(id *)(a1 + 32), "account");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    objc_msgSend(v5, "fileTransferGUIDs");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
    if (v20)
    {
      v21 = *(_QWORD *)v29;
      do
      {
        for (i = 0; i != v20; ++i)
        {
          if (*(_QWORD *)v29 != v21)
            objc_enumerationMutation(v19);
          v23 = *(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * i);
          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "assignTransfer:toMessage:account:", v23, v5, v18);

        }
        v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
      }
      while (v20);
    }

    sub_1A20A7FE0(*(void **)(a1 + 32), v5);
    objc_msgSend(*(id *)(a1 + 32), "_sendMessage:adjustingSender:shouldQueue:", v5, 1, 1);

    goto LABEL_24;
  }
  if (objc_msgSend(v26, "code") != 42)
  {
    +[IMMessage locatingMessageWithGuid:error:](IMMessage, "locatingMessageWithGuid:error:", *(_QWORD *)(a1 + 40), v26);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "account");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "loginIMHandle");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "_updateSender:", v7);

    objc_msgSend(v5, "_imMessageItem");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "_handleIncomingItem:", v8);
LABEL_24:

  }
  objc_msgSend(*(id *)(a1 + 32), "setCurrentLocationGUID:", 0);

}

void sub_1A20A8898(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  int v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("guid"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("size"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "unsignedLongLongValue");

  objc_msgSend(*(id *)(a1 + 32), "existingChatWithGUID:", v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "chatIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    v12 = (void *)MEMORY[0x1E0CB37E8];
    if (v10)
      v6 += objc_msgSend(v10, "unsignedLongLongValue");
    objc_msgSend(v12, "numberWithUnsignedLongLong:", v6);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v13, v9);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      v15 = 138412290;
      v16 = v4;
      _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Did not find chat for guid: %@", (uint8_t *)&v15, 0xCu);
    }

  }
}

uint64_t sub_1A20A8A4C(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "compare:", a2);
}

void sub_1A20A8A58(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  v3 = (void *)MEMORY[0x1A8582D94]();
  objc_msgSend(*(id *)(a1 + 32), "existingChatWithChatIdentifier:", v7);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", v7);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "unsignedLongLongValue");
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

  objc_autoreleasePoolPop(v3);
}

void sub_1A20AB028()
{
  uint64_t v0;
  void *v1;

  v0 = objc_opt_new();
  v1 = (void *)qword_1EE65F508;
  qword_1EE65F508 = v0;

}

void sub_1A20AB0B4(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  void *v5;
  int v6;
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  id v11;

  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "hasListenerForID:", CFSTR("__k_IMSPIListenerID"));

  if ((_DWORD)a1)
  {
    +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4;
    if ((v3 & 1) != 0)
    {
      v6 = objc_msgSend(v4, "capabilitiesForListenerID:", CFSTR("__k_IMSPIListenerID"));

      v7 = v6 | a1;
      if (v6 == (_DWORD)v7)
      {
        if (_IMWillLog())
          _IMAlwaysLog();
        goto LABEL_13;
      }
      +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "setCapabilities:forListenerID:", v7, CFSTR("__k_IMSPIListenerID"));

      if ((v10 & 1) == 0)
        goto LABEL_12;
    }
    else
    {
      v8 = objc_msgSend(v4, "addListenerID:capabilities:", CFSTR("__k_IMSPIListenerID"), a1);

      if ((v8 & 1) == 0)
LABEL_12:
        _IMWarn();
    }
LABEL_13:
    +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "blockUntilConnected");
    goto LABEL_14;
  }
  if (v3)
  {
    +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "removeListenerID:", CFSTR("__k_IMSPIListenerID"));
LABEL_14:

  }
}

void sub_1A20AB348(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void (**v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  void *v11;
  id v12;
  id v13;

  v3 = a1;
  v4 = a2;
  v8 = MEMORY[0x1E0C809B0];
  v9 = 3221225472;
  v10 = sub_1A20AB41C;
  v11 = &unk_1E471E7C8;
  v5 = v4;
  v12 = v5;
  v6 = v3;
  v13 = v6;
  v7 = (void (**)(_QWORD))_Block_copy(&v8);
  if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread", v8, v9, v10, v11))
    v7[2](v7);
  else
    dispatch_sync(MEMORY[0x1E0C80D38], v7);

}

uint64_t sub_1A20AB41C(uint64_t a1)
{
  if (_IMWillLog())
    _IMAlwaysLog();
  return objc_msgSend(MEMORY[0x1E0DE7910], "cancelPreviousPerformRequestsWithTarget:selector:object:", *(_QWORD *)(a1 + 40), sel_clearChatCap, 0);
}

void sub_1A20AB488()
{
  id v0;

  +[_IMSPIConnectionController sharedController](_IMSPIConnectionController, "sharedController");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  sub_1A20AB348(v0, CFSTR("_IMSetChatCapTimer"));
  objc_msgSend(v0, "setChatCap");

}

void sub_1A20AB4CC()
{
  id v0;

  +[_IMSPIConnectionController sharedController](_IMSPIConnectionController, "sharedController");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  sub_1A20AB348(v0, CFSTR("_IMSetChatSendCapTimer"));
  objc_msgSend(v0, "setChatSendCap");

}

void sub_1A20AB510()
{
  id v0;

  +[_IMSPIConnectionController sharedController](_IMSPIConnectionController, "sharedController");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  sub_1A20AB348(v0, CFSTR("_IMSetChatSendCapTimerWithAttachments"));
  objc_msgSend(v0, "setChatSendCapWithAttachments");

}

void sub_1A20AB554()
{
  if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread"))
    sub_1A20AB58C();
  else
    dispatch_async(MEMORY[0x1E0C80D38], &unk_1E471C390);
}

void sub_1A20AB58C()
{
  id v0;

  +[_IMSPIConnectionController sharedController](_IMSPIConnectionController, "sharedController");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DE7910], "cancelPreviousPerformRequestsWithTarget:selector:object:", v0, sel_clearChatCap, 0);
  objc_msgSend(v0, "performSelector:withObject:afterDelay:", sel_clearChatCap, 0, 10.0);

}

void sub_1A20AB8C0(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_bestSendingHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        v4 = *(_QWORD *)(a1 + 40);
        v5 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)buf = 138412802;
        v17 = v4;
        v18 = 2112;
        v19 = v5;
        v20 = 2112;
        v21 = v2;
        _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Sending notice %@ to %@ from %@", buf, 0x20u);
      }

    }
    objc_msgSend(*(id *)(a1 + 32), "daemonConnection");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "remoteProxy");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(void **)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 48);
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = sub_1A20ABAE4;
    v11[3] = &unk_1E4720A30;
    v12 = v8;
    v13 = *(id *)(a1 + 48);
    v14 = v2;
    v15 = *(id *)(a1 + 56);
    objc_msgSend(v7, "sendNotice:toHandles:fromHandle:reply:", v12, v9, v14, v11);

  }
  else
  {
    IMLogHandleForCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1A2196FBC();

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

uint64_t sub_1A20ABAE4(_QWORD *a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = a1[4];
      v4 = a1[5];
      v5 = a1[6];
      v7 = 138412802;
      v8 = v3;
      v9 = 2112;
      v10 = v4;
      v11 = 2112;
      v12 = v5;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Completed sending notice %@ to %@ from %@", (uint8_t *)&v7, 0x20u);
    }

  }
  return (*(uint64_t (**)(void))(a1[7] + 16))();
}

void sub_1A20ABD88(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_bestSendingHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        v4 = *(_QWORD *)(a1 + 40);
        v5 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)buf = 138412802;
        v17 = v4;
        v18 = 2112;
        v19 = v5;
        v20 = 2112;
        v21 = v2;
        _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Finished connecting. Sending clear notice %@ to %@ from %@", buf, 0x20u);
      }

    }
    objc_msgSend(*(id *)(a1 + 32), "daemonConnection");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "remoteProxy");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(void **)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 48);
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = sub_1A20ABFA4;
    v11[3] = &unk_1E4720A30;
    v12 = v8;
    v13 = *(id *)(a1 + 48);
    v14 = v2;
    v15 = *(id *)(a1 + 56);
    objc_msgSend(v7, "sendClearNotice:toHandles:reply:", v12, v9, v11);

  }
  else
  {
    IMLogHandleForCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1A2197024();

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

uint64_t sub_1A20ABFA4(_QWORD *a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = a1[4];
      v4 = a1[5];
      v5 = a1[6];
      v7 = 138412802;
      v8 = v3;
      v9 = 2112;
      v10 = v4;
      v11 = 2112;
      v12 = v5;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Completed sending clear notice %@ to %@ from %@", (uint8_t *)&v7, 0x20u);
    }

  }
  return (*(uint64_t (**)(void))(a1[7] + 16))();
}

void sub_1A20AC370()
{
  IMChorosMonitor *v0;
  void *v1;

  v0 = objc_alloc_init(IMChorosMonitor);
  v1 = (void *)qword_1ECF12608;
  qword_1ECF12608 = (uint64_t)v0;

}

void sub_1A20ACBE8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint8_t v7[16];

  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Completed request to open Stewie SOS application", v7, 2u);
    }

  }
  if (v3)
  {
    IMLogHandleForCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1A21970EC(v3, v5);

  }
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v3);

}

void sub_1A20ACF78(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void (*v5)(void);
  uint64_t v6;

  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2197240();

    v5 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
  {
    v5 = *(void (**)(void))(v6 + 16);
LABEL_7:
    v5();
  }

}

void sub_1A20AD8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[14];

  v8[13] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0D39470];
  v8[0] = *MEMORY[0x1E0D39460];
  v8[1] = v0;
  v1 = *MEMORY[0x1E0D39480];
  v8[2] = *MEMORY[0x1E0D39498];
  v8[3] = v1;
  v2 = *MEMORY[0x1E0D39468];
  v8[4] = *MEMORY[0x1E0D394B0];
  v8[5] = v2;
  v3 = *MEMORY[0x1E0D39478];
  v8[6] = *MEMORY[0x1E0D394A8];
  v8[7] = v3;
  v4 = *MEMORY[0x1E0D394B8];
  v8[8] = *MEMORY[0x1E0D394C0];
  v8[9] = v4;
  v5 = *MEMORY[0x1E0D39488];
  v8[10] = *MEMORY[0x1E0D394A0];
  v8[11] = v5;
  v8[12] = *MEMORY[0x1E0D39490];
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 13);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)qword_1EE65F510;
  qword_1EE65F510 = v6;

}

void sub_1A20ADB20()
{
  uint64_t v0;
  const __CFString *v1;
  uint64_t v2;
  const __CFString *v3;
  uint64_t v4;
  const __CFString *v5;
  uint64_t v6;
  const __CFString *v7;
  uint64_t v8;
  const __CFString *v9;
  uint64_t v10;
  const __CFString *v11;
  uint64_t v12;
  const __CFString *v13;
  uint64_t v14;
  void *v15;
  const __CFString *v16;
  uint64_t v17;
  void *v18;
  const __CFString *v19;
  uint64_t v20;
  void *v21;
  const __CFString *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  const __CFString *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  const __CFString *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  const __CFString *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  _QWORD v54[13];
  _QWORD v55[15];

  v55[13] = *MEMORY[0x1E0C80C00];
  v54[0] = *MEMORY[0x1E0D39460];
  sub_1A20F1964();
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "localizedStringForKey:value:table:", CFSTR("Balloons"), CFSTR("Balloons"), CFSTR("IMCoreLocalizable"));
  v0 = objc_claimAutoreleasedReturnValue();
  v52 = (void *)v0;
  if (v0)
    v1 = (const __CFString *)v0;
  else
    v1 = CFSTR("Balloons");
  v55[0] = v1;
  v54[1] = *MEMORY[0x1E0D39470];
  sub_1A20F1964();
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "localizedStringForKey:value:table:", CFSTR("Confetti"), CFSTR("Confetti"), CFSTR("IMCoreLocalizable"));
  v2 = objc_claimAutoreleasedReturnValue();
  v50 = (void *)v2;
  if (v2)
    v3 = (const __CFString *)v2;
  else
    v3 = CFSTR("Confetti");
  v55[1] = v3;
  v54[2] = *MEMORY[0x1E0D39498];
  sub_1A20F1964();
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "localizedStringForKey:value:table:", CFSTR("Lasers"), CFSTR("Lasers"), CFSTR("IMCoreLocalizable"));
  v4 = objc_claimAutoreleasedReturnValue();
  v48 = (void *)v4;
  if (v4)
    v5 = (const __CFString *)v4;
  else
    v5 = CFSTR("Lasers");
  v55[2] = v5;
  v54[3] = *MEMORY[0x1E0D39480];
  sub_1A20F1964();
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "localizedStringForKey:value:table:", CFSTR("Fireworks"), CFSTR("Fireworks"), CFSTR("IMCoreLocalizable"));
  v6 = objc_claimAutoreleasedReturnValue();
  v46 = (void *)v6;
  if (v6)
    v7 = (const __CFString *)v6;
  else
    v7 = CFSTR("Fireworks");
  v55[3] = v7;
  v54[4] = *MEMORY[0x1E0D394B0];
  sub_1A20F1964();
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "localizedStringForKey:value:table:", CFSTR("Fireworks"), CFSTR("Fireworks"), CFSTR("IMCoreLocalizable"));
  v8 = objc_claimAutoreleasedReturnValue();
  v44 = (void *)v8;
  if (v8)
    v9 = (const __CFString *)v8;
  else
    v9 = CFSTR("Fireworks");
  v55[4] = v9;
  v54[5] = *MEMORY[0x1E0D39468];
  sub_1A20F1964();
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "localizedStringForKey:value:table:", CFSTR("Celebration"), CFSTR("Celebration"), CFSTR("IMCoreLocalizable"));
  v10 = objc_claimAutoreleasedReturnValue();
  v42 = (void *)v10;
  if (v10)
    v11 = (const __CFString *)v10;
  else
    v11 = CFSTR("Celebration");
  v55[5] = v11;
  v54[6] = *MEMORY[0x1E0D394A8];
  sub_1A20F1964();
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "localizedStringForKey:value:table:", CFSTR("Sent With Love"), CFSTR("Sent With Love"), CFSTR("IMCoreLocalizable"));
  v12 = objc_claimAutoreleasedReturnValue();
  v40 = (void *)v12;
  if (v12)
    v13 = (const __CFString *)v12;
  else
    v13 = CFSTR("Sent With Love");
  v55[6] = v13;
  v54[7] = *MEMORY[0x1E0D39478];
  sub_1A20F1964();
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "localizedStringForKey:value:table:", CFSTR("Echo"), CFSTR("Echo"), CFSTR("IMCoreLocalizable"));
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = (void *)v14;
  if (v14)
    v16 = (const __CFString *)v14;
  else
    v16 = CFSTR("Echo");
  v55[7] = v16;
  v54[8] = *MEMORY[0x1E0D394C0];
  sub_1A20F1964();
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "localizedStringForKey:value:table:", CFSTR("Spotlight"), CFSTR("Spotlight"), CFSTR("IMCoreLocalizable"));
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = (void *)v17;
  if (v17)
    v19 = (const __CFString *)v17;
  else
    v19 = CFSTR("Spotlight");
  v55[8] = v19;
  v54[9] = *MEMORY[0x1E0D394B8];
  sub_1A20F1964();
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "localizedStringForKey:value:table:", CFSTR("Slam Effect"), CFSTR("Slam Effect"), CFSTR("IMCoreLocalizable"));
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = (void *)v20;
  if (v20)
    v22 = (const __CFString *)v20;
  else
    v22 = CFSTR("Slam Effect");
  v55[9] = v22;
  v54[10] = *MEMORY[0x1E0D394A0];
  sub_1A20F1964();
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("Loud Effect"), CFSTR("Loud Effect"), CFSTR("IMCoreLocalizable"));
  v24 = objc_claimAutoreleasedReturnValue();
  v25 = (void *)v24;
  if (v24)
    v26 = (const __CFString *)v24;
  else
    v26 = CFSTR("Loud Effect");
  v55[10] = v26;
  v54[11] = *MEMORY[0x1E0D39488];
  sub_1A20F1964();
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "localizedStringForKey:value:table:", CFSTR("Gentle Effect"), CFSTR("Gentle Effect"), CFSTR("IMCoreLocalizable"));
  v28 = objc_claimAutoreleasedReturnValue();
  v29 = (void *)v28;
  if (v28)
    v30 = (const __CFString *)v28;
  else
    v30 = CFSTR("Gentle Effect");
  v55[11] = v30;
  v54[12] = *MEMORY[0x1E0D39490];
  sub_1A20F1964();
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "localizedStringForKey:value:table:", CFSTR("Invisible Ink"), CFSTR("Invisible Ink"), CFSTR("IMCoreLocalizable"));
  v32 = objc_claimAutoreleasedReturnValue();
  v33 = (void *)v32;
  if (v32)
    v34 = (const __CFString *)v32;
  else
    v34 = CFSTR("Invisible Ink");
  v55[12] = v34;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v55, v54, 13);
  v35 = objc_claimAutoreleasedReturnValue();
  v36 = (void *)qword_1EE65F520;
  qword_1EE65F520 = v35;

}

void sub_1A20AE04C()
{
  uint64_t v0;
  const __CFString *v1;
  uint64_t v2;
  const __CFString *v3;
  uint64_t v4;
  const __CFString *v5;
  uint64_t v6;
  const __CFString *v7;
  uint64_t v8;
  const __CFString *v9;
  uint64_t v10;
  const __CFString *v11;
  uint64_t v12;
  void *v13;
  const __CFString *v14;
  uint64_t v15;
  void *v16;
  const __CFString *v17;
  uint64_t v18;
  void *v19;
  const __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const __CFString *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  const __CFString *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  const __CFString *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  _QWORD v50[12];
  _QWORD v51[14];

  v51[12] = *MEMORY[0x1E0C80C00];
  v50[0] = *MEMORY[0x1E0D39460];
  sub_1A20F1964();
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "localizedStringForKey:value:table:", CFSTR("Replay Balloons"), CFSTR("Replay Balloons"), CFSTR("IMCoreLocalizable"));
  v0 = objc_claimAutoreleasedReturnValue();
  v48 = (void *)v0;
  if (v0)
    v1 = (const __CFString *)v0;
  else
    v1 = CFSTR("Replay Balloons");
  v51[0] = v1;
  v50[1] = *MEMORY[0x1E0D39470];
  sub_1A20F1964();
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "localizedStringForKey:value:table:", CFSTR("Replay Confetti"), CFSTR("Replay Confetti"), CFSTR("IMCoreLocalizable"));
  v2 = objc_claimAutoreleasedReturnValue();
  v46 = (void *)v2;
  if (v2)
    v3 = (const __CFString *)v2;
  else
    v3 = CFSTR("Replay Confetti");
  v51[1] = v3;
  v50[2] = *MEMORY[0x1E0D39498];
  sub_1A20F1964();
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "localizedStringForKey:value:table:", CFSTR("Replay Lasers"), CFSTR("Replay Lasers"), CFSTR("IMCoreLocalizable"));
  v4 = objc_claimAutoreleasedReturnValue();
  v44 = (void *)v4;
  if (v4)
    v5 = (const __CFString *)v4;
  else
    v5 = CFSTR("Replay Lasers");
  v51[2] = v5;
  v50[3] = *MEMORY[0x1E0D39480];
  sub_1A20F1964();
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "localizedStringForKey:value:table:", CFSTR("Replay Fireworks"), CFSTR("Replay Fireworks"), CFSTR("IMCoreLocalizable"));
  v6 = objc_claimAutoreleasedReturnValue();
  v42 = (void *)v6;
  if (v6)
    v7 = (const __CFString *)v6;
  else
    v7 = CFSTR("Replay Fireworks");
  v51[3] = v7;
  v50[4] = *MEMORY[0x1E0D394B0];
  sub_1A20F1964();
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "localizedStringForKey:value:table:", CFSTR("Replay Shooting Star"), CFSTR("Replay Shooting Star"), CFSTR("IMCoreLocalizable"));
  v8 = objc_claimAutoreleasedReturnValue();
  v40 = (void *)v8;
  if (v8)
    v9 = (const __CFString *)v8;
  else
    v9 = CFSTR("Replay Shooting Star");
  v51[4] = v9;
  v50[5] = *MEMORY[0x1E0D39468];
  sub_1A20F1964();
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "localizedStringForKey:value:table:", CFSTR("Replay Celebration"), CFSTR("Replay Celebration"), CFSTR("IMCoreLocalizable"));
  v10 = objc_claimAutoreleasedReturnValue();
  v38 = (void *)v10;
  if (v10)
    v11 = (const __CFString *)v10;
  else
    v11 = CFSTR("Replay Celebration");
  v51[5] = v11;
  v50[6] = *MEMORY[0x1E0D394A8];
  sub_1A20F1964();
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "localizedStringForKey:value:table:", CFSTR("Replay Sent With Love"), CFSTR("Replay Sent With Love"), CFSTR("IMCoreLocalizable"));
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)v12;
  if (v12)
    v14 = (const __CFString *)v12;
  else
    v14 = CFSTR("Replay Sent With Love");
  v51[6] = v14;
  v50[7] = *MEMORY[0x1E0D39478];
  sub_1A20F1964();
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "localizedStringForKey:value:table:", CFSTR("Replay Echo"), CFSTR("Replay Echo"), CFSTR("IMCoreLocalizable"));
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = (void *)v15;
  if (v15)
    v17 = (const __CFString *)v15;
  else
    v17 = CFSTR("Replay Echo");
  v51[7] = v17;
  v50[8] = *MEMORY[0x1E0D394C0];
  sub_1A20F1964();
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "localizedStringForKey:value:table:", CFSTR("Replay Spotlight"), CFSTR("Replay Spotlight"), CFSTR("IMCoreLocalizable"));
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = (void *)v18;
  if (v18)
    v20 = (const __CFString *)v18;
  else
    v20 = CFSTR("Replay Spotlight");
  v51[8] = v20;
  v50[9] = *MEMORY[0x1E0D394B8];
  sub_1A20F1964();
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("Replay Slam Effect"), CFSTR("Replay Slam Effect"), CFSTR("IMCoreLocalizable"));
  v22 = objc_claimAutoreleasedReturnValue();
  v23 = (void *)v22;
  if (v22)
    v24 = (const __CFString *)v22;
  else
    v24 = CFSTR("Replay Slam Effect");
  v51[9] = v24;
  v50[10] = *MEMORY[0x1E0D394A0];
  sub_1A20F1964();
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("Replay Loud Effect"), CFSTR("Replay Loud Effect"), CFSTR("IMCoreLocalizable"));
  v26 = objc_claimAutoreleasedReturnValue();
  v27 = (void *)v26;
  if (v26)
    v28 = (const __CFString *)v26;
  else
    v28 = CFSTR("Replay Loud Effect");
  v51[10] = v28;
  v50[11] = *MEMORY[0x1E0D39488];
  sub_1A20F1964();
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "localizedStringForKey:value:table:", CFSTR("Replay Gentle Effect"), CFSTR("Replay Gentle Effect"), CFSTR("IMCoreLocalizable"));
  v30 = objc_claimAutoreleasedReturnValue();
  v31 = (void *)v30;
  if (v30)
    v32 = (const __CFString *)v30;
  else
    v32 = CFSTR("Replay Gentle Effect");
  v51[11] = v32;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v51, v50, 12);
  v33 = objc_claimAutoreleasedReturnValue();
  v34 = (void *)qword_1EE65F530;
  qword_1EE65F530 = v33;

}

void sub_1A20AE528()
{
  uint64_t v0;
  const __CFString *v1;
  uint64_t v2;
  const __CFString *v3;
  uint64_t v4;
  const __CFString *v5;
  uint64_t v6;
  const __CFString *v7;
  uint64_t v8;
  const __CFString *v9;
  uint64_t v10;
  const __CFString *v11;
  uint64_t v12;
  const __CFString *v13;
  uint64_t v14;
  void *v15;
  const __CFString *v16;
  uint64_t v17;
  void *v18;
  const __CFString *v19;
  uint64_t v20;
  void *v21;
  const __CFString *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  const __CFString *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  const __CFString *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  const __CFString *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  _QWORD v54[13];
  _QWORD v55[15];

  v55[13] = *MEMORY[0x1E0C80C00];
  v54[0] = *MEMORY[0x1E0D39460];
  sub_1A20F1964();
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "localizedStringForKey:value:table:", CFSTR("SEND WITH BALLOONS"), CFSTR("SEND WITH BALLOONS"), CFSTR("IMCoreLocalizable"));
  v0 = objc_claimAutoreleasedReturnValue();
  v52 = (void *)v0;
  if (v0)
    v1 = (const __CFString *)v0;
  else
    v1 = CFSTR("SEND WITH BALLOONS");
  v55[0] = v1;
  v54[1] = *MEMORY[0x1E0D39470];
  sub_1A20F1964();
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "localizedStringForKey:value:table:", CFSTR("SEND WITH CONFETTI"), CFSTR("SEND WITH CONFETTI"), CFSTR("IMCoreLocalizable"));
  v2 = objc_claimAutoreleasedReturnValue();
  v50 = (void *)v2;
  if (v2)
    v3 = (const __CFString *)v2;
  else
    v3 = CFSTR("SEND WITH CONFETTI");
  v55[1] = v3;
  v54[2] = *MEMORY[0x1E0D39498];
  sub_1A20F1964();
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "localizedStringForKey:value:table:", CFSTR("SEND WITH LASERS"), CFSTR("SEND WITH LASERS"), CFSTR("IMCoreLocalizable"));
  v4 = objc_claimAutoreleasedReturnValue();
  v48 = (void *)v4;
  if (v4)
    v5 = (const __CFString *)v4;
  else
    v5 = CFSTR("SEND WITH LASERS");
  v55[2] = v5;
  v54[3] = *MEMORY[0x1E0D39480];
  sub_1A20F1964();
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "localizedStringForKey:value:table:", CFSTR("SEND WITH FIREWORKS"), CFSTR("SEND WITH FIREWORKS"), CFSTR("IMCoreLocalizable"));
  v6 = objc_claimAutoreleasedReturnValue();
  v46 = (void *)v6;
  if (v6)
    v7 = (const __CFString *)v6;
  else
    v7 = CFSTR("SEND WITH FIREWORKS");
  v55[3] = v7;
  v54[4] = *MEMORY[0x1E0D394B0];
  sub_1A20F1964();
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "localizedStringForKey:value:table:", CFSTR("SEND WITH SHOOTING STAR"), CFSTR("SEND WITH SHOOTING STAR"), CFSTR("IMCoreLocalizable"));
  v8 = objc_claimAutoreleasedReturnValue();
  v44 = (void *)v8;
  if (v8)
    v9 = (const __CFString *)v8;
  else
    v9 = CFSTR("SEND WITH SHOOTING STAR");
  v55[4] = v9;
  v54[5] = *MEMORY[0x1E0D39468];
  sub_1A20F1964();
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "localizedStringForKey:value:table:", CFSTR("SEND WITH CELEBRATION"), CFSTR("SEND WITH CELEBRATION"), CFSTR("IMCoreLocalizable"));
  v10 = objc_claimAutoreleasedReturnValue();
  v42 = (void *)v10;
  if (v10)
    v11 = (const __CFString *)v10;
  else
    v11 = CFSTR("SEND WITH CELEBRATION");
  v55[5] = v11;
  v54[6] = *MEMORY[0x1E0D394A8];
  sub_1A20F1964();
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "localizedStringForKey:value:table:", CFSTR("SEND WITH LOVE"), CFSTR("SEND WITH LOVE"), CFSTR("IMCoreLocalizable"));
  v12 = objc_claimAutoreleasedReturnValue();
  v40 = (void *)v12;
  if (v12)
    v13 = (const __CFString *)v12;
  else
    v13 = CFSTR("SEND WITH LOVE");
  v55[6] = v13;
  v54[7] = *MEMORY[0x1E0D39478];
  sub_1A20F1964();
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "localizedStringForKey:value:table:", CFSTR("SEND WITH ECHO"), CFSTR("SEND WITH ECHO"), CFSTR("IMCoreLocalizable"));
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = (void *)v14;
  if (v14)
    v16 = (const __CFString *)v14;
  else
    v16 = CFSTR("SEND WITH ECHO");
  v55[7] = v16;
  v54[8] = *MEMORY[0x1E0D394C0];
  sub_1A20F1964();
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "localizedStringForKey:value:table:", CFSTR("SEND WITH SPOTLIGHT"), CFSTR("SEND WITH SPOTLIGHT"), CFSTR("IMCoreLocalizable"));
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = (void *)v17;
  if (v17)
    v19 = (const __CFString *)v17;
  else
    v19 = CFSTR("SEND WITH SPOTLIGHT");
  v55[8] = v19;
  v54[9] = *MEMORY[0x1E0D394B8];
  sub_1A20F1964();
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "localizedStringForKey:value:table:", CFSTR("SLAM"), CFSTR("SLAM"), CFSTR("IMCoreLocalizable"));
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = (void *)v20;
  if (v20)
    v22 = (const __CFString *)v20;
  else
    v22 = CFSTR("SLAM");
  v55[9] = v22;
  v54[10] = *MEMORY[0x1E0D394A0];
  sub_1A20F1964();
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("LOUD"), CFSTR("LOUD"), CFSTR("IMCoreLocalizable"));
  v24 = objc_claimAutoreleasedReturnValue();
  v25 = (void *)v24;
  if (v24)
    v26 = (const __CFString *)v24;
  else
    v26 = CFSTR("LOUD");
  v55[10] = v26;
  v54[11] = *MEMORY[0x1E0D39488];
  sub_1A20F1964();
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "localizedStringForKey:value:table:", CFSTR("GENTLE"), CFSTR("GENTLE"), CFSTR("IMCoreLocalizable"));
  v28 = objc_claimAutoreleasedReturnValue();
  v29 = (void *)v28;
  if (v28)
    v30 = (const __CFString *)v28;
  else
    v30 = CFSTR("GENTLE");
  v55[11] = v30;
  v54[12] = *MEMORY[0x1E0D39490];
  sub_1A20F1964();
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "localizedStringForKey:value:table:", CFSTR("INVISIBLE INK"), CFSTR("INVISIBLE INK"), CFSTR("IMCoreLocalizable"));
  v32 = objc_claimAutoreleasedReturnValue();
  v33 = (void *)v32;
  if (v32)
    v34 = (const __CFString *)v32;
  else
    v34 = CFSTR("INVISIBLE INK");
  v55[12] = v34;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v55, v54, 13);
  v35 = objc_claimAutoreleasedReturnValue();
  v36 = (void *)qword_1EE65F540;
  qword_1EE65F540 = v35;

}

void sub_1A20AFD78()
{
  IMSimulatedDaemonController *v0;
  void *v1;

  v0 = objc_alloc_init(IMSimulatedDaemonController);
  v1 = (void *)qword_1ECF12580;
  qword_1ECF12580 = (uint64_t)v0;

}

void sub_1A20AFE0C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  IMSimulatedAccount *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  IMSimulatedAccount *v13;
  void *v14;
  void *v15;
  IMSimulatedChat *v16;
  void *v17;
  IMSimulatedChat *v18;
  void *v19;
  IMSimulatedChat *v20;
  void *v21;
  IMSimulatedChat *v22;
  void *v23;
  IMSimulatedChat *v24;
  void *v25;
  IMSimulatedChat *v26;
  void *v27;
  IMSimulatedChat *v28;
  void *v29;
  IMSimulatedChat *v30;
  void *v31;
  IMSimulatedChat *v32;
  void *v33;
  IMSimulatedChat *v34;
  IMSimulatedChat *v35;
  void *v36;
  IMSimulatedChat *v37;
  IMSimulatedChat *v38;
  IMSimulatedChat *v39;
  void *v40;
  void *v41;
  objc_class *v42;
  objc_method *ClassMethod;
  objc_class *v44;
  objc_method *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  IMSimulatedChat *v57;
  IMSimulatedChat *v58;
  IMSimulatedChat *v59;
  IMSimulatedAccount *v60;
  IMSimulatedAccount *v61;
  void *v62;
  void *v63;
  void *v64;
  IMSimulatedChat *v65;
  IMSimulatedChat *v66;
  IMSimulatedChat *v67;
  IMSimulatedChat *v68;
  IMSimulatedChat *v69;
  IMSimulatedChat *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  const __CFString *v75;
  void *v76;
  _BYTE v77[128];
  _QWORD v78[10];
  _QWORD v79[2];
  _QWORD v80[2];
  _QWORD v81[2];
  _QWORD v82[2];
  const __CFString *v83;
  const __CFString *v84;
  const __CFString *v85;
  const __CFString *v86;
  const __CFString *v87;
  const __CFString *v88;
  IMSimulatedAccount *v89;
  _QWORD v90[2];
  _QWORD v91[2];
  _QWORD v92[3];
  _QWORD v93[3];
  _QWORD v94[3];

  v94[1] = *MEMORY[0x1E0C80C00];
  v2 = (_QWORD *)MEMORY[0x1E0D38F68];
  +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", *MEMORY[0x1E0D38F68]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[IMAccount initWithService:]([IMSimulatedAccount alloc], "initWithService:", v3);
  -[IMAccount imHandleWithID:alreadyCanonical:](v4, "imHandleWithID:alreadyCanonical:", CFSTR("+15557654321"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[IMSimulatedAccount setLoginHandle:](v4, "setLoginHandle:", v5);

  +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v94[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v94, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setSimulatedAccounts:forServiceNamed:", v7, *v2);

  v8 = *MEMORY[0x1E0D36208];
  v92[0] = *MEMORY[0x1E0D36200];
  v92[1] = v8;
  v93[0] = &unk_1E475EEC8;
  v93[1] = MEMORY[0x1E0C9AAB0];
  v92[2] = *MEMORY[0x1E0D38F78];
  v9 = *MEMORY[0x1E0D38E40];
  v90[0] = *MEMORY[0x1E0D38DE8];
  v90[1] = v9;
  v91[0] = MEMORY[0x1E0C9AAB0];
  v91[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v91, v90, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v93[2] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v93, v92, 3);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v64 = v3;
  objc_msgSend(v3, "setServiceProperties:", v11);

  v12 = (_QWORD *)MEMORY[0x1E0D38F58];
  +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", *MEMORY[0x1E0D38F58]);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = -[IMAccount initWithService:]([IMSimulatedAccount alloc], "initWithService:", v62);
  -[IMAccount imHandleWithID:alreadyCanonical:](v13, "imHandleWithID:alreadyCanonical:", CFSTR("+15557654321"), 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[IMSimulatedAccount setLoginHandle:](v13, "setLoginHandle:", v14);

  v89 = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v89, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v63 = v6;
  objc_msgSend(v6, "setSimulatedAccounts:forServiceNamed:", v15, *v12);

  v16 = [IMSimulatedChat alloc];
  v88 = CFSTR("+15555648583");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v88, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v69 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v16, "initWithIncomingIDs:messageIDOffset:account:", v17, 100000, v4);

  v18 = [IMSimulatedChat alloc];
  v87 = CFSTR("+18885551212");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v87, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v68 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v18, "initWithIncomingIDs:messageIDOffset:account:", v19, 1, v4);

  v20 = [IMSimulatedChat alloc];
  v86 = CFSTR("john-appleseed@mac.com");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v86, 1);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v66 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v20, "initWithIncomingIDs:messageIDOffset:account:", v21, 300000, v4);

  v22 = [IMSimulatedChat alloc];
  v85 = CFSTR("kate-bell@mac.com");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v85, 1);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v70 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v22, "initWithIncomingIDs:messageIDOffset:account:", v23, 200001, v4);

  v24 = [IMSimulatedChat alloc];
  v84 = CFSTR("+18885551213");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v84, 1);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v24, "initWithIncomingIDs:messageIDOffset:account:", v25, 400001, v13);

  v26 = [IMSimulatedChat alloc];
  v83 = CFSTR("+18885551214");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v83, 1);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v58 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v26, "initWithIncomingIDs:messageIDOffset:account:", v27, 500001, v13);

  v28 = [IMSimulatedChat alloc];
  v82[0] = CFSTR("john-appleseed@mac.com");
  v82[1] = CFSTR("kate-bell@mac.com");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v82, 2);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v28, "initWithIncomingIDs:messageIDOffset:account:", v29, 500000, v4);

  v30 = [IMSimulatedChat alloc];
  v81[0] = CFSTR("+15555648583");
  v81[1] = CFSTR("kate-bell@mac.com");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v81, 2);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v60 = v4;
  v65 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v30, "initWithIncomingIDs:messageIDOffset:account:", v31, 400001, v4);

  v32 = [IMSimulatedChat alloc];
  v80[0] = CFSTR("+15555648583");
  v80[1] = CFSTR("+18885551212");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v80, 2);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v32, "initWithIncomingIDs:messageIDOffset:account:", v33, 700000, v13);

  v35 = [IMSimulatedChat alloc];
  v79[0] = CFSTR("+18885551212");
  v79[1] = CFSTR("+18885551213");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v79, 2);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v61 = v13;
  v37 = -[IMSimulatedChat initWithIncomingIDs:messageIDOffset:account:](v35, "initWithIncomingIDs:messageIDOffset:account:", v36, 600001, v13);

  -[IMSimulatedChat setDelegate:](v69, "setDelegate:", v68);
  -[IMSimulatedChat setDelegate:](v68, "setDelegate:", v69);
  -[IMSimulatedChat setDelegate:](v66, "setDelegate:", v70);
  -[IMSimulatedChat setDelegate:](v70, "setDelegate:", v66);
  -[IMSimulatedChat setDelegate:](v67, "setDelegate:", v58);
  -[IMSimulatedChat setDelegate:](v58, "setDelegate:", v67);
  v38 = v57;
  -[IMSimulatedChat setDelegate:](v57, "setDelegate:", v65);
  -[IMSimulatedChat setDelegate:](v65, "setDelegate:", v57);
  -[IMSimulatedChat setDelegate:](v34, "setDelegate:", v37);
  -[IMSimulatedChat setDelegate:](v37, "setDelegate:", v34);
  v78[0] = v69;
  v78[1] = v68;
  v78[2] = v66;
  v78[3] = v70;
  v78[4] = v67;
  v78[5] = v58;
  v78[6] = v57;
  v78[7] = v65;
  v59 = v34;
  v78[8] = v34;
  v78[9] = v37;
  v39 = v37;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v78, 10);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "_setSimulatedChats:", v40);

  v42 = (objc_class *)objc_opt_class();
  ClassMethod = class_getClassMethod(v42, sel_sharedInstance);
  v44 = (objc_class *)objc_opt_class();
  v45 = class_getClassMethod(v44, sel_sharedInstance);
  method_exchangeImplementations(ClassMethod, v45);
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v40, "count"));
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v71 = 0u;
  v72 = 0u;
  v73 = 0u;
  v74 = 0u;
  v47 = v40;
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v71, v77, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v72;
    do
    {
      for (i = 0; i != v49; ++i)
      {
        if (*(_QWORD *)v72 != v50)
          objc_enumerationMutation(v47);
        objc_msgSend(*(id *)(a1 + 32), "dictionaryForChat:", *(_QWORD *)(*((_QWORD *)&v71 + 1) + 8 * i), v57);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v46, "addObject:", v52);

      }
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v71, v77, 16);
    }
    while (v49);
  }

  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "listener");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v75 = CFSTR("chats");
  v76 = v46;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v76, &v75, 1);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "setupComplete:info:", 1, v55);

  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v56, "setListeners:", v47);

}

uint64_t sub_1A20B0A9C()
{
  return objc_opt_class();
}

uint64_t sub_1A20B0AA8()
{
  return 0;
}

IMAccountController *sub_1A20B0AB0()
{
  return +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
}

id sub_1A20B0ABC()
{
  return +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:");
}

void sub_1A20B0AC8(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;

  objc_msgSend(a1, "service");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_serviceWithInternalName:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(a1, "_accountController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "accountID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bestAccountForService:login:guid:", v3, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    if (objc_msgSend(a1, "isFromMe"))
    {
      objc_msgSend(v7, "loginIMHandle");
      v17 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(a1, "handle");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v8, "length"))
      {
        objc_msgSend(a1, "handle");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "imHandleWithID:alreadyCanonical:", v9, 1);
        v10 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v10 = 0;
      }

    }
    else
    {
      objc_msgSend(a1, "sender");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v12, "length"))
      {
        objc_msgSend(a1, "sender");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "imHandleWithID:alreadyCanonical:", v13, 1);
        v17 = (id)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v17 = 0;
      }

      objc_msgSend(v7, "loginIMHandle");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v11 = v17;
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  v18 = v11;
  objc_msgSend(v11, "service");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "internalName");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "service");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "isEqualToString:", v16);

  objc_msgSend(a1, "_updateContextWithSenderHandle:otherHandle:", v18, v10);
}

id sub_1A20B0CC8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v4 = a3;
  objc_msgSend(a1, "service");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_serviceWithInternalName:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(a1, "_accountController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "account");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "accountID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "bestAccountForService:login:guid:", v6, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "imHandleWithID:alreadyCanonical:", v4, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id sub_1A20B0DA4(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(a1, "context");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "otherHandle");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

uint64_t sub_1A20B0DF0()
{
  return 0;
}

uint64_t sub_1A20B0DF8(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "message");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isSenderUnknown");

  return v2;
}

void *sub_1A20B0E2C(void *a1)
{
  uint64_t v2;
  void *v3;

  v2 = objc_msgSend(a1, "messageID");
  v3 = (void *)objc_msgSend(a1, "copy");
  objc_msgSend(v3, "_setMessageID:", v2);
  return v3;
}

void sub_1A20B1970(uint64_t a1, void *a2)
{
  id v3;
  __CFDictionary *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v3 = a2;
  v4 = (__CFDictionary *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", 4);
  objc_msgSend(v3, "guid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    CFDictionarySetValue(v4, CFSTR("messageGUID"), v5);
  }
  else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
  {
    sub_1A2197440();
  }

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v3, "sortID"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    CFDictionarySetValue(v4, CFSTR("sortID"), v6);
  }
  else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
  {
    sub_1A21973C0();
  }

  v7 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(v3, "time");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "timeIntervalSinceReferenceDate");
  objc_msgSend(v7, "numberWithDouble:");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    CFDictionarySetValue(v4, CFSTR("date"), v9);
  }
  else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
  {
    sub_1A2197340();
  }

  objc_msgSend(v3, "replyToGUID");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
    CFDictionarySetValue(v4, CFSTR("replyToGUID"), v10);

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v3, "body");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "string");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (v12)
      CFDictionarySetValue(v4, CFSTR("messageText"), v12);

    objc_msgSend(v3, "fileTransferGUIDs");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
      CFDictionarySetValue(v4, CFSTR("transferGUIDS"), v13);

  }
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);

}

void sub_1A20B2790(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint8_t v6[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "IMCoreAutomationPerformOperationWithDictionary method call not on main queue, calling dispatch_sync", v6, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "callIMCoreMethodWithDictionary:", *(_QWORD *)(a1 + 40));
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

uint64_t sub_1A20B3A40(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(*(id *)(a1 + 32), "transferForGUID:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isAdaptiveImageGlyph");

  return v3;
}

id sub_1A20B423C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v3 = a3;
  v4 = (void *)objc_msgSend(v3, "mutableCopy");
  if (!v4)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  if (v3)
  {
    objc_msgSend(v3, "__im_associatedMessageSummary");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)objc_msgSend(v5, "length") >= 0x33)
    {
      objc_msgSend(v5, "substringToIndex:", objc_msgSend(v5, "rangeOfComposedCharacterSequenceAtIndex:", 50));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "stringByAppendingString:", CFSTR("…"));
      v7 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(v4, "setObject:forKeyedSubscript:", v7, *MEMORY[0x1E0D383C0]);
      v5 = (void *)v7;
    }
    v8 = *MEMORY[0x1E0D38338];
    objc_msgSend(v3, "__imami_attributedStringForKey:", *MEMORY[0x1E0D38338]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)objc_msgSend(v9, "length") >= 0x33)
    {
      objc_msgSend(v9, "string");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "rangeOfComposedCharacterSequenceAtIndex:", 50);

      objc_msgSend(v9, "attributedSubstringFromRange:", 0, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)objc_msgSend(v12, "mutableCopy");
      v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:", CFSTR("…"));
      objc_msgSend(v13, "appendAttributedString:", v14);
      v15 = (void *)objc_msgSend(v13, "copy");
      objc_msgSend(v4, "__imami_setAttributedString:forKey:", v15, v8);

    }
  }

  return v4;
}

void sub_1A20B4658()
{
  void *v0;
  void *v1;
  uint64_t v2;
  _QWORD v3[2];

  v3[1] = *MEMORY[0x1E0C80C00];
  +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", *MEMORY[0x1E0D38F68]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = *MEMORY[0x1E0D36200];
  v3[0] = &unk_1E475EEE0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v3, &v2, 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setServiceProperties:", v1);

}

id sub_1A20B4F64(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, int a6)
{
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;

  v10 = a1;
  v82 = a4;
  v81 = a5;
  objc_msgSend(v10, "guid");
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  if (a6)
  {
    sub_1A20B668C(v93);
    v11 = objc_claimAutoreleasedReturnValue();

    v93 = (void *)v11;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v10, "associatedMessageGUID");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if (a6)
    {
      sub_1A20B668C(v12);
      v14 = objc_claimAutoreleasedReturnValue();

      v13 = (void *)v14;
    }
    v58 = objc_alloc(MEMORY[0x1E0D396C8]);
    objc_msgSend(v10, "senderInfo");
    v73 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v71 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v69 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "subject");
    v63 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "body");
    v61 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "bodyData");
    v67 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "fileTransferGUIDs");
    v65 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "account");
    v92 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "accountID");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "service");
    v90 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handle");
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "roomName");
    v88 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "unformattedID");
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "countryCode");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    v56 = objc_msgSend(v10, "expireState");
    objc_msgSend(v10, "balloonBundleID");
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "payloadData");
    v15 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "expressiveSendStyleID");
    v16 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "timeExpressiveSendPlayed");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v84 = objc_msgSend(v10, "associatedMessageType");
    v79 = objc_msgSend(v10, "associatedMessageRange");
    v19 = v18;
    objc_msgSend(v10, "biaReferenceID");
    v20 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "messageSummaryInfo");
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v10, "partCount");
    objc_msgSend(v10, "threadIdentifier");
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    v54 = v22;
    v75 = (void *)v21;
    v53 = v21;
    v76 = (void *)v20;
    v52 = v20;
    v49 = v79;
    v23 = (void *)v71;
    v46 = v84;
    v85 = v13;
    v45 = v13;
    LODWORD(v44) = 0;
    v78 = (void *)v16;
    v42 = v16;
    v80 = (void *)v15;
    v40 = v15;
    v39 = a3;
    v24 = (void *)v65;
    v25 = (void *)v67;
    v26 = (void *)v61;
    v27 = (void *)v73;
    v28 = (void *)v69;
    v29 = (void *)v63;
    v30 = objc_msgSend(v58, "initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:errorType:associatedMessageGUID:associatedMessageType:associatedMessageRange:bizIntent:locale:biaReferenceID:messageSummaryInfo:partCount:threadIdentifier:", v61, v67, 0, v65, a2, v93, v39, v92, v91, v90, v89, v88, v87, v86,
            v56,
            v83,
            v40,
            v42,
            v17,
            v44,
            v45,
            v46,
            v49,
            v19,
            0,
            0,
            v52,
            v53,
            v54,
            v60);
  }
  else
  {
    v59 = objc_alloc(MEMORY[0x1E0D39918]);
    objc_msgSend(v10, "senderInfo");
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v74 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v72 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "subject");
    v70 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "body");
    v57 = a3;
    v64 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "bodyData");
    v62 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "fileTransferGUIDs");
    v68 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "account");
    v66 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "accountID");
    v92 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "service");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handle");
    v90 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "roomName");
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "unformattedID");
    v88 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "countryCode");
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    v55 = objc_msgSend(v10, "expireState");
    objc_msgSend(v10, "balloonBundleID");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "payloadData");
    v31 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "expressiveSendStyleID");
    v32 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "timeExpressiveSendPlayed");
    v33 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "biaReferenceID");
    v34 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "threadIdentifier");
    v35 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "syndicationRanges");
    v36 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "syncedSyndicationRanges");
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)v72;
    v75 = (void *)v36;
    v51 = v36;
    v76 = (void *)v35;
    v50 = v35;
    LODWORD(v48) = 0;
    v47 = v34;
    v78 = (void *)v33;
    v43 = v33;
    v17 = (void *)v34;
    v80 = (void *)v32;
    v83 = (void *)v31;
    v41 = v31;
    v24 = (void *)v66;
    v25 = (void *)v68;
    v26 = (void *)v62;
    v29 = (void *)v64;
    v27 = (void *)v74;
    v28 = (void *)v70;
    v30 = objc_msgSend(v59, "initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:biaReferenceID:errorType:threadIdentifier:syndicationRanges:syncedSyndicationRanges:partCount:dateEdited:scheduleType:scheduleState:", v85, v64, v62, 0, v68, a2, v93, v57, v66, v92, v91, v90, v89, v88,
            v87,
            v55,
            v86,
            v41,
            v32,
            v43,
            0,
            0,
            v47,
            v48,
            v50,
            v51,
            v60,
            objc_msgSend(v10, "partCount"),
            0,
            objc_msgSend(v10, "scheduleType"),
            objc_msgSend(v10, "scheduleState"));
  }
  v37 = (void *)v30;

  objc_msgSend(v37, "_updateContextWithSenderHandle:otherHandle:", v82, v81);
  return v37;
}

void sub_1A20B5610(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "guid");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "simulateMessageDeliveryForGUID:", v2);

}

id sub_1A20B668C(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v18;

  v1 = a1;
  v2 = objc_msgSend(v1, "rangeOfString:", CFSTR(":"));
  v4 = v3;
  v5 = objc_msgSend(v1, "rangeOfString:", CFSTR("/"));
  if (v4)
    v7 = v2;
  else
    v7 = -1;
  if (v6)
    v8 = v5;
  else
    v8 = -1;
  if (v7 <= v8)
    v7 = v8;
  v9 = v7 + 1;
  objc_msgSend(v1, "substringToIndex:", v7 + 1);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "substringFromIndex:", v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = v10;
  if (qword_1EE65F570 != -1)
    dispatch_once(&qword_1EE65F570, &unk_1E471C1F0);
  objc_msgSend((id)qword_1EE65F560, "objectForKeyedSubscript:", v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    v14 = (void *)qword_1EE65F560;
  }
  else
  {
    objc_msgSend((id)qword_1EE65F568, "objectForKeyedSubscript:", v11);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v15)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringGUID");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend((id)qword_1EE65F560, "setObject:forKeyedSubscript:", v18, v11);
      objc_msgSend((id)qword_1EE65F568, "setObject:forKeyedSubscript:", v11, v18);
      objc_msgSend(v12, "stringByAppendingString:", v18);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_16;
    }
    v14 = (void *)qword_1EE65F568;
  }
  objc_msgSend(v14, "objectForKeyedSubscript:", v11);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_16:

  return v16;
}

void sub_1A20B6814()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1EE65F560;
  qword_1EE65F560 = v0;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)qword_1EE65F568;
  qword_1EE65F568 = v2;

}

id sub_1A20B6D64(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  id v6;
  uint64_t v7;
  id v9;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && (objc_msgSend(v3, "guid"),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        v5 = objc_msgSend(v4, "containsString:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48)),
        v4,
        v5))
  {
    v6 = v3;
    if (objc_msgSend(v6, "originalMessagePartRange") == *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56)
      && v7 == *(_QWORD *)(*(_QWORD *)(a1 + 32) + 64))
    {
      v9 = v6;
    }
    else
    {
      v9 = 0;
    }

  }
  else
  {
    v9 = v3;
  }

  return v9;
}

void *sub_1A20B6FFC()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDChatRecordCopyAllChats", CFSTR("IMDPersistence"));
  off_1EE65F578 = result;
  return result;
}

void *sub_1A20B73D8()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServices", CFSTR("IMDPersistence"));
  off_1EE65F588 = result;
  return result;
}

void *sub_1A20B7404()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("_IMDAttachmentRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F598 = result;
  return result;
}

uint64_t sub_1A20B8864(uint64_t a1)
{
  unint64_t v2;

  v2 = objc_msgSend(*(id *)(a1 + 32), "progressCount");
  if (v2 >= objc_msgSend(*(id *)(a1 + 32), "maxProgressCount"))
    return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_finishTest);
  objc_msgSend(*(id *)(a1 + 32), "setProgressCount:", objc_msgSend(*(id *)(a1 + 32), "progressCount") + 1);
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_sendSyncStateChangedEvent);
}

uint64_t sub_1A20B8D80(int a1)
{
  if ((a1 + 1) > 6)
    return 1;
  else
    return qword_1A21AE550[a1 + 1];
}

void sub_1A20B9000()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0D397E8], "sharedInstance");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  byte_1EE65F388 = objc_msgSend(v0, "getBoolFromDomain:forKey:", *MEMORY[0x1E0D38C48], *MEMORY[0x1E0D38C50]);

}

void sub_1A20BA4D8(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[6];
  _BYTE buf[24];
  int v16;
  __int16 v17;
  int v18;
  __int16 v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 40), "count"));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = *(_QWORD *)(a1 + 56);
      v6 = *(unsigned __int8 *)(a1 + 64);
      v7 = *(unsigned __int8 *)(a1 + 65);
      *(_DWORD *)buf = 138413314;
      *(_QWORD *)&buf[4] = v3;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v4;
      *(_WORD *)&buf[22] = 1024;
      v16 = v5;
      v17 = 1024;
      v18 = v6;
      v19 = 1024;
      v20 = v7;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "updating/acting on query ID: %@  insertHistoricalMessages: %@, limit = %d hasMoreMessagesBefore: %d hasMoreMessagesAfter: %d", buf, 0x28u);

    }
  }
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(void **)(v8 + 400);
  if (v9)
  {
    v10 = objc_msgSend(v9, "isEqualToString:", *(_QWORD *)(a1 + 32));
    v8 = *(_QWORD *)(a1 + 48);
    if (v10)
    {
      v11 = *(void **)(v8 + 400);
      *(_QWORD *)(v8 + 400) = 0;

      objc_msgSend(*(id *)(a1 + 48), "_removeAllItems");
      v8 = *(_QWORD *)(a1 + 48);
    }
  }
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x2020000000;
  LOBYTE(v16) = *(_BYTE *)(v8 + 67);
  v12 = *(void **)(a1 + 40);
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = sub_1A20BA704;
  v14[3] = &unk_1E4720068;
  v14[4] = v8;
  v14[5] = buf;
  objc_msgSend(v12, "enumerateObjectsWithOptions:usingBlock:", 2, v14);
  objc_msgSend(*(id *)(a1 + 48), "_archivedItemsToReplace:isReplacingItems:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 66));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 48), "_replaceAndSortItemsWithUnsortedItems:", v13);

  _Block_object_dispose(buf, 8);
}

void sub_1A20BA6C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A20BA5BCLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A20BA704(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  uint64_t v13;
  IMPluginPayload *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  int v25;
  void *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_msgSend(v3, "type");
  if (v4 == 4)
    objc_msgSend(*(id *)(a1 + 32), "_configureLocationShareItem:", v3);
  objc_msgSend(v3, "message");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "momentSharePresentationCache");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "registerMomentShareItemForMessage:", v5);

  objc_msgSend(v3, "service");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[IMService iMessageService](IMServiceImpl, "iMessageService");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "internalName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v7, "isEqualToIgnoringCase:", v9);

  if (v10)
  {
    objc_msgSend(*(id *)(a1 + 32), "chatRegistry");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_setChatHasCommunicatedOveriMessage:", *(_QWORD *)(a1 + 32));

  }
  if (objc_msgSend(v3, "isBreadcrumb"))
  {
    objc_msgSend(v3, "consumedSessionPayloads");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "count");

    if (v13)
    {
      v14 = -[IMPluginPayload initWithMessageItem:]([IMPluginPayload alloc], "initWithMessageItem:", v3);
      +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = (id)objc_msgSend(v15, "dataSourceForPluginPayload:", v14);

    }
  }
  if (!v4
    && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24)
    && !objc_msgSend(v3, "errorCode"))
  {
    if (objc_msgSend(*(id *)(a1 + 32), "chatStyle") == 45)
    {
      objc_msgSend(v3, "_senderHandle");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v3, "isFromMe"))
      {
        objc_msgSend(v3, "_otherHandle");
        v18 = objc_claimAutoreleasedReturnValue();

        v17 = (void *)v18;
      }
      if (!v17)
        goto LABEL_27;
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(*(id *)(a1 + 32), "recipient");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = 138412546;
          v26 = v20;
          v27 = 2112;
          v28 = v17;
          _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Fixing recipient based on last message old recipient: (%@), messageAccount: (%@)", (uint8_t *)&v25, 0x16u);

        }
      }
      objc_msgSend(*(id *)(a1 + 32), "setRecipient:", v17);
    }
    else
    {
      +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "accountID");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "accountForUniqueID:", v22);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v17)
      {
LABEL_27:

        goto LABEL_28;
      }
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          v24 = *(void **)(*(_QWORD *)(a1 + 32) + 112);
          v25 = 138412546;
          v26 = v24;
          v27 = 2112;
          v28 = v17;
          _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "fixing up chat account based on last message: oldAccount: (%@), messageAccount: (%@)", (uint8_t *)&v25, 0x16u);
        }

      }
      objc_msgSend(*(id *)(a1 + 32), "_setAccount:locally:", v17, 1);
    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    goto LABEL_27;
  }
LABEL_28:

}

uint64_t sub_1A20BAE34(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "canDelete");
}

uint64_t sub_1A20BAE48(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v2 = a2;
  objc_msgSend(v2, "_parentItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "type") || !objc_msgSend(v2, "canReply"))
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend(v3, "message");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isFromMe") ^ 1;

  }
  return v5;
}

uint64_t sub_1A20BAF1C(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v2, "_item");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "isFromMe") ^ 1;

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_1A20BB4C0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_clearHistory:beforeGUID:afterGUID:queryID:", *(_QWORD *)(a1 + 32), 0, 0, v4);

}

void sub_1A20BB6DC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_markAsSpam:queryID:isJunkReportedToCarrier:", *(_QWORD *)(a1 + 32), v4, *(unsigned __int8 *)(a1 + 40));

}

void sub_1A20BBE30(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20BBDF0);
  }
  _Unwind_Resume(a1);
}

void sub_1A20BC424()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.MobileSMS.particiants_queue", 0);
  v1 = (void *)qword_1EE65F5A8;
  qword_1EE65F5A8 = (uint64_t)v0;

}

void sub_1A20BD058(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_items");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(v2, "copy");

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v15;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v10 = v9;
          objc_msgSend(v10, "message", (_QWORD)v14);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v11, "hasDataDetectorResults");

          if (v12)
          {
            v13 = objc_msgSend(v10, "_copy");

            objc_msgSend(*(id *)(a1 + 32), "_handleItem:", v13);
            v10 = (id)v13;
          }

        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v6);
  }

}

void sub_1A20BDEAC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_markAsSpam:queryID:autoReport:isJunkReportedToCarrier:reportReason:", *(_QWORD *)(a1 + 32), v4, 0, 0, *(_QWORD *)(a1 + 40));

}

uint64_t sub_1A20BE3BC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeAllItems");
}

void sub_1A20BEEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int buf, uint64_t a12)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A20BED80);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1A20BF0B8()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("PKPeerPaymentMessageTypeFromDataURL", CFSTR("PassKitCore"));
  off_1EE65F5B8 = result;
  return result;
}

void sub_1A20C10E8(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

uint64_t sub_1A20C113C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1A20C1CD4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "displayID");
}

uint64_t sub_1A20C3034(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleIncomingItem:", *(_QWORD *)(a1 + 40));
}

void sub_1A20C30C0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_loadUncachedAttachmentsCount:queryID:loadImmediately:", *(_QWORD *)(a1 + 32), v4, 1);

}

void sub_1A20C3264(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_loadAttachments:queryID:loadImmediately:", *(_QWORD *)(a1 + 32), v4, 1);

}

uint64_t sub_1A20C3598(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "ID");
}

void sub_1A20C35A0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  v2 = *(void **)(a1 + 32);
  v7[0] = *(_QWORD *)(a1 + 40);
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_updateRepliesIfNecessaryWithRemovedItems:threadIdentifiersOfRemovedParts:", v3, 0);

  objc_msgSend(*(id *)(a1 + 32), "_removeItem:", *(_QWORD *)(a1 + 40));
  v4 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "guid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", *(_QWORD *)(a1 + 48));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "cancelScheduledMessageWithGUID:destinations:cancelType:", v5, v6, *(_QWORD *)(a1 + 56));

}

void sub_1A20C39D0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v7 = (void *)objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6), "_copy", (_QWORD)v8);
        objc_msgSend(*(id *)(a1 + 40), "editScheduledMessageItem:scheduleType:deliveryTime:", v7, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 48));

        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

void sub_1A20C3F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20C3F20(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  char isKindOfClass;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;

  v14 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v8 = v14;
  if ((isKindOfClass & 1) != 0)
  {
    v9 = v14;
    if (objc_msgSend(v9, "scheduleType") == 2)
    {
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "time");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "time");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v10, "compareDate:toDate:toUnitGranularity:", v11, v12, 128);

      if (v13)
      {
LABEL_6:

        v8 = v14;
        goto LABEL_7;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    }
    *a4 = 1;
    goto LABEL_6;
  }
LABEL_7:

}

void sub_1A20C4EB4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20C4E60);
  }
  _Unwind_Resume(a1);
}

void sub_1A20C5408(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20C5390);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A20C61B4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "ID");
}

void sub_1A20C7030(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v7 = (void *)objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6), "_copy", (_QWORD)v8);
        objc_msgSend(v7, "setSatelliteMessageRetry:", 1);
        objc_msgSend(v7, "setIsPendingSatelliteSend:", 0);
        objc_msgSend(v7, "_refreshContextWithAccountHandles");
        objc_msgSend(a1[5], "_handleItem:", v7);
        objc_msgSend(a1[6], "addObject:", v7);

        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

void sub_1A20C74EC(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20C7430);
  }
  _Unwind_Resume(a1);
}

void sub_1A20C7EF8(uint64_t a1)
{
  int v2;
  NSObject *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  const __CFString *v7;
  _QWORD *v8;
  int v9;
  IMMessage *v10;
  NSObject *v11;
  NSObject *v12;
  const __CFString *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  const __CFString *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(*(id *)(a1 + 32), "_shouldSendCancelTypingIndicator");
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = *(_QWORD **)(a1 + 32);
      v5 = (void *)v4[36];
      objc_msgSend(v4, "latestTypingIndicatorTimeInterval");
      v7 = CFSTR("NO");
      *(_DWORD *)buf = 138412802;
      v20 = v5;
      if (v2)
        v7 = CFSTR("YES");
      v21 = 2048;
      v22 = v6;
      v23 = 2112;
      v24 = v7;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "In cancel typing indicator block. _typingGUID %@ _latestTypingIndicatorInterval %f, shouldSendCancelTypingIndicator %@", buf, 0x20u);
    }

  }
  v8 = *(_QWORD **)(a1 + 32);
  if (v8[36])
    v9 = v2;
  else
    v9 = 0;
  if (v9 == 1)
  {
    if (objc_msgSend(v8, "_chatStyleSupportsTypingAndCancelTypingIndicators"))
    {
      v10 = -[IMMessage initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:threadIdentifier:]([IMMessage alloc], "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:threadIdentifier:", 0, 0, 0, 0, 0, objc_msgSend(*(id *)(a1 + 32), "_flagsForCancelTypingIndicatorMessage"), 0, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 288), 0, 0);
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v20 = v10;
          _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, " => Sending cancel typing message: %@", buf, 0xCu);
        }

      }
      objc_msgSend(*(id *)(a1 + 32), "_sendMessage:adjustingSender:shouldQueue:", v10, 1, 0);

    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, " => Not sending cancel typing message, the chat style does not support it", buf, 2u);
      }

    }
    v16 = *(_QWORD *)(a1 + 32);
    v15 = a1 + 32;
    v17 = *(void **)(v16 + 288);
    *(_QWORD *)(v16 + 288) = 0;

    v18 = *(void **)(*(_QWORD *)v15 + 248);
    *(_QWORD *)(*(_QWORD *)v15 + 248) = 0;

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      v13 = CFSTR("NO");
      if (v2)
        v13 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v20 = (void *)v13;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "*** We tried to send a cancel typing indicator, but already had no guid set. shouldSendCancelTypingIndicator set to %@", buf, 0xCu);
    }

  }
}

void sub_1A20C8D24(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        v7 = *(id *)(*((_QWORD *)&v9 + 1) + 8 * v6);
        v8 = (void *)objc_msgSend(v7, "_copyWithFlags:", objc_msgSend(v7, "flags", (_QWORD)v9) | 0x2000);

        objc_msgSend(*(id *)(a1 + 40), "_handleItem:", v8);
        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v4);
  }

}

uint64_t sub_1A20C8EE0(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_replaceItemWhenReplied_);
}

void sub_1A20C9954()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[49];

  v9[48] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0C99E60];
  v9[0] = CFSTR("SkipAutoJoin");
  v9[1] = CFSTR("ignoreAlertsFlag");
  v9[2] = CFSTR("com.apple.iChat.LastArchivedMessageDate");
  v9[3] = CFSTR("com.apple.iChat.LastArchivedMessageID");
  v9[4] = CFSTR("CKChatConversationKeyboardKey");
  v9[5] = CFSTR("CKChatWatermarkMessageID");
  v9[6] = CFSTR("CKChatWatermarkTime");
  v9[7] = CFSTR("IMChatWatermarkMessageID");
  v9[8] = CFSTR("IMChatWatermarkDate");
  v9[9] = CFSTR("CKChatLastCanceledMessageTime");
  v9[10] = CFSTR("CKChatConsecutiveCanceledMessageCount");
  v9[11] = CFSTR("CKChatConsecutiveManuallyCanceledMessageCount");
  v9[12] = CFSTR("CKChatPreviousAccountsDictionaryKey");
  v9[13] = CFSTR("com.apple.iChat.UnreadMessagesKey");
  v9[14] = CFSTR("CKChatUnmuteTime");
  v9[15] = CFSTR("LastCanceledMessageTime");
  v9[16] = CFSTR("ConsecutiveCanceledMessageCount");
  v9[17] = CFSTR("ConsecutiveManuallyCanceledMessageCount");
  v1 = *MEMORY[0x1E0D37840];
  v9[18] = *MEMORY[0x1E0D37770];
  v9[19] = v1;
  v9[20] = CFSTR("hasBeenAutoSpamReported");
  v9[21] = CFSTR("wasAutoDetectedForSpam");
  v9[22] = CFSTR("wasDetectedAsSMSSpam");
  v9[23] = CFSTR("SMSCategory");
  v9[24] = CFSTR("SMSSubCategory");
  v9[25] = CFSTR("wasDetectedAsiMessageSpam");
  v9[26] = CFSTR("smsSpamExtensionName");
  v9[27] = CFSTR("numberOfTimesRespondedtoThread");
  v9[28] = CFSTR("hasViewedPotentialSpamChat");
  v9[29] = CFSTR("lastTUConversationCreatedDate");
  v9[30] = CFSTR("lastScheduledMessageCreatedDate");
  v9[31] = CFSTR("shouldForceToSMS");
  v9[32] = *MEMORY[0x1E0D37800];
  v9[33] = CFSTR("smsHandshakeState");
  v9[34] = CFSTR("messageHandshakeState");
  v9[35] = CFSTR("lastBlackholeReceiptPromptDate");
  v2 = *MEMORY[0x1E0D37728];
  v9[36] = CFSTR("restoredFromBlackhole");
  v9[37] = v2;
  v3 = *MEMORY[0x1E0D377B0];
  v9[38] = *MEMORY[0x1E0D37808];
  v9[39] = v3;
  v9[40] = *MEMORY[0x1E0D37720];
  v9[41] = CFSTR("emergencyTranscriptSharingState");
  v9[42] = *MEMORY[0x1E0D37768];
  v9[43] = CFSTR("prefersTextResponseToIncomingAudioMessages");
  v4 = *MEMORY[0x1E0D377D0];
  v9[44] = CFSTR("showAudioButtonInEntryView");
  v9[45] = v4;
  v5 = *MEMORY[0x1E0D37740];
  v9[46] = *MEMORY[0x1E0D377E8];
  v9[47] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 48);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v6);
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = (void *)qword_1ECF12378;
  qword_1ECF12378 = v7;

}

void sub_1A20CCD4C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  char v5;
  int v6;
  NSObject *v7;
  NSObject *v8;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "participants");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "containsObject:", v3);

  v6 = IMOSLoggingEnabled();
  if ((v5 & 1) != 0)
  {
    if (v6)
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v9 = 138412290;
        v10 = v3;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "  * Need to invite: %@", (uint8_t *)&v9, 0xCu);
      }

    }
  }
  else
  {
    if (v6)
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v9 = 138412290;
        v10 = v3;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "  * No need to invite: %@   - already in chat", (uint8_t *)&v9, 0xCu);
      }

    }
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v3);
  }

}

void sub_1A20CD318(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20CD270);
  }
  _Unwind_Resume(a1);
}

void sub_1A20CD6E4(uint64_t a1, void *a2)
{
  void *v3;
  char v4;
  id v5;

  v5 = a2;
  objc_msgSend(*(id *)(a1 + 32), "participants");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "containsObject:", v5);

  if ((v4 & 1) == 0)
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v5);

}

void sub_1A20CE2A8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20CE274);
  }
  _Unwind_Resume(a1);
}

void sub_1A20CE578(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A20CE594(uint64_t a1, char a2)
{
  NSObject *WeakRetained;
  NSObject *v3;
  NSObject *v4;
  uint8_t v5[16];
  uint8_t v6[16];
  uint8_t buf[16];

  if ((a2 & 1) != 0)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if ((-[NSObject containsMessageFromContactOrMe](WeakRetained, "containsMessageFromContactOrMe") & 1) != 0)
    {
      -[NSObject lastAddressedHandleID](WeakRetained, "lastAddressedHandleID");
      v3 = objc_claimAutoreleasedReturnValue();
      if (-[NSObject length](v3, "length"))
      {
        -[NSObject recipient](WeakRetained, "recipient");
        v4 = objc_claimAutoreleasedReturnValue();
        -[NSObject autoInviteToViewAvailabilityIfNeededFromHandleID:](v4, "autoInviteToViewAvailabilityIfNeededFromHandleID:", v3);
      }
      else
      {
        if (!IMOSLoggingEnabled())
          goto LABEL_15;
        OSLogHandleForIMFoundationCategory();
        v4 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v5 = 0;
          _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Not sharing availability in chat with no lastAddressedHandleID", v5, 2u);
        }
      }

LABEL_15:
      goto LABEL_16;
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Not sharing availability in chat with non contact that I have not participated in", v6, 2u);
      }
      goto LABEL_15;
    }
  }
  else
  {
    if (!IMOSLoggingEnabled())
      return;
    OSLogHandleForIMFoundationCategory();
    WeakRetained = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, WeakRetained, OS_LOG_TYPE_INFO, "Not auto inviting, chat is not eligible for sharing focus status", buf, 2u);
    }
  }
LABEL_16:

}

void sub_1A20CE910(uint64_t a1, char a2)
{
  _QWORD v3[4];
  id v4;
  char v5;

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20CE988;
  v3[3] = &unk_1E4721270;
  v4 = *(id *)(a1 + 32);
  v5 = a2;
  dispatch_async(MEMORY[0x1E0C80D38], v3);

}

uint64_t sub_1A20CE988(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t sub_1A20CE99C(uint64_t a1, char a2)
{
  NSObject *v3;
  uint8_t v5[16];

  if ((a2 & 1) == 0 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Not able to share focus status from this device because the Focus setting Share Across Devices is disabled for this device.", v5, 2u);
    }

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1A20CEE30(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20CEE14);
  }
  _Unwind_Resume(a1);
}

void sub_1A20D02C0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20D01E0);
  }
  _Unwind_Resume(a1);
}

void sub_1A20D07CC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;

  v2 = MEMORY[0x1E0C809B0];
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A20D089C;
  v6[3] = &unk_1E47212E0;
  v3 = *(void **)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v6);
  v5[0] = v2;
  v5[1] = 3221225472;
  v5[2] = sub_1A20D0A24;
  v5[3] = &unk_1E4721308;
  v4 = *(void **)(a1 + 56);
  v5[4] = *(_QWORD *)(a1 + 64);
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v5);

}

void sub_1A20D089C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __CFArray *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  id v16;

  v16 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v16;
  else
    v3 = 0;
  v4 = v3;
  if (v4 && *(id *)(a1 + 32) != v16)
  {
    objc_msgSend(v4, "threadOriginator");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5
      && (objc_msgSend(v5, "guid"),
          v7 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(*(id *)(a1 + 40), "guid"),
          v8 = (void *)objc_claimAutoreleasedReturnValue(),
          v9 = objc_msgSend(v7, "isEqualToString:", v8),
          v8,
          v7,
          v9))
    {
      v10 = (void *)objc_msgSend(v4, "_copy");
      objc_msgSend(v10, "setThreadOriginator:", *(_QWORD *)(a1 + 40));
      if (!v10)
        goto LABEL_16;
      v11 = *(__CFArray **)(a1 + 48);
      if (!v11)
        goto LABEL_16;
    }
    else
    {
      if (v4 == *(id *)(a1 + 40))
        goto LABEL_17;
      objc_msgSend(v4, "guid");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 40), "guid");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v12, "isEqualToString:", v13);

      if (!v14)
        goto LABEL_17;
      v10 = (void *)objc_msgSend(v4, "_copy");
      objc_msgSend(*(id *)(a1 + 40), "replyCountsByPart");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setReplyCountsByPart:", v15);

      v11 = *(__CFArray **)(a1 + 48);
      if (!v11 || !v10)
      {
LABEL_16:

LABEL_17:
        goto LABEL_18;
      }
    }
    CFArrayAppendValue(v11, v10);
    goto LABEL_16;
  }
LABEL_18:

}

void sub_1A20D0A24(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "_handleItem:forChatStyle:updateReplyCounts:", v3, objc_msgSend(v2, "chatStyle"), 0);

}

void sub_1A20D0F3C(id *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  __CFArray *v19;
  void *v20;
  __CFArray *v21;
  void *v22;
  void *v23;
  __CFArray *v24;
  __CFArray *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t j;
  void *v30;
  void *v31;
  void *v32;
  CFMutableArrayRef theArray;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  objc_msgSend(a1[4], "_items");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
  if (v3)
  {
    v4 = v3;
    theArray = 0;
    v5 = *(_QWORD *)v39;
    v31 = v2;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v39 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * i);
        objc_msgSend(v7, "guid");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0
          && (objc_msgSend(a1[5], "containsObject:", v8) & 1) == 0
          && (objc_msgSend(a1[6], "containsObject:", v8) & 1) == 0)
        {
          v9 = v7;
          objc_msgSend(v9, "threadOriginator");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "threadIdentifier");
          v11 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "guid");
          v12 = objc_claimAutoreleasedReturnValue();
          v13 = (void *)v12;
          v32 = (void *)v11;
          if (v11 && v12)
          {
            objc_msgSend(a1[7], "objectForKey:", v12);
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            if (v14)
            {
              v15 = objc_msgSend(v9, "_copy");
              v16 = v10;
              v17 = (void *)v15;
              v30 = v16;
              v18 = (void *)objc_msgSend(v16, "_copy");
              objc_msgSend(v18, "setReplyCountsByPart:", v14);
              objc_msgSend(v17, "setThreadOriginator:", v18);
              v19 = theArray;
              if (!theArray)
                v19 = (__CFArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
              theArray = v19;
              if (v19 && v17)
                CFArrayAppendValue(v19, v17);

              v10 = v30;
            }
            if ((objc_msgSend(a1[8], "containsObject:", v32) & 1) != 0
              || objc_msgSend(a1[6], "containsObject:", v13))
            {
              v20 = (void *)objc_msgSend(v9, "_copy");
              objc_msgSend(v20, "setThreadOriginator:", 0);
              v21 = theArray;
              if (!theArray)
                v21 = (__CFArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
              theArray = v21;
              if (v20 && v21)
                CFArrayAppendValue(v21, v20);

            }
          }
          objc_msgSend(a1[7], "objectForKey:", v8);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          if (v22)
          {
            v23 = (void *)objc_msgSend(v9, "_copy");
            objc_msgSend(v23, "setReplyCountsByPart:", v22);
            v24 = theArray;
            if (!theArray)
              v24 = (__CFArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
            theArray = v24;
            if (v23 && v24)
              CFArrayAppendValue(v24, v23);

          }
          v2 = v31;
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    }
    while (v4);
  }
  else
  {
    theArray = 0;
  }

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v25 = theArray;
  v26 = -[__CFArray countByEnumeratingWithState:objects:count:](v25, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
  if (v26)
  {
    v27 = v26;
    v28 = *(_QWORD *)v35;
    do
    {
      for (j = 0; j != v27; ++j)
      {
        if (*(_QWORD *)v35 != v28)
          objc_enumerationMutation(v25);
        objc_msgSend(a1[4], "_handleItem:", *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * j));
      }
      v27 = -[__CFArray countByEnumeratingWithState:objects:count:](v25, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
    }
    while (v27);
  }

}

void sub_1A20D1624()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create("com.apple.Messages.IMChatKeyTransparency", v2);
  v1 = (void *)qword_1EE65EB20;
  qword_1EE65EB20 = (uint64_t)v0;

}

void sub_1A20D1890(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v10 = 0;
  objc_msgSend(v2, "markFailureSeenForResults:error:", v3, &v10);
  v4 = v10;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A20D1950;
  v6[3] = &unk_1E471F668;
  v7 = v4;
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 32);
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

}

void sub_1A20D1950(uint64_t a1)
{
  id *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  id obj;
  uint64_t v24;
  void *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  void *v32;
  __int16 v33;
  uint64_t v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 32))
  {
    v1 = (id *)(a1 + 40);
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 40), "count"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    obj = *v1;
    v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
    if (v2)
    {
      v24 = *(_QWORD *)v28;
      do
      {
        v3 = 0;
        do
        {
          if (*(_QWORD *)v28 != v24)
            objc_enumerationMutation(obj);
          v4 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * v3);
          +[IMKeyTransparencyController sharedController](IMKeyTransparencyController, "sharedController");
          v5 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "ID");
          v6 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "_stripFZIDPrefix");
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "idsIDInfoResultForHandleID:", v7);
          v8 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v8, "uri");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          v10 = (void *)MEMORY[0x1E0DC0958];
          objc_msgSend(*(id *)(a1 + 48), "applicationIdentifier");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "addApplicationPrefixForIdentifier:uri:", v11, v9);
          v12 = (void *)objc_claimAutoreleasedReturnValue();

          +[IMKeyTransparencyController sharedController](IMKeyTransparencyController, "sharedController");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "ID");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "_stripFZIDPrefix");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "ktVerifierResultForHandleID:", v15);
          v16 = (void *)objc_claimAutoreleasedReturnValue();

          v17 = (void *)MEMORY[0x1E0CB3940];
          objc_msgSend(v4, "name");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "stringWithFormat:", CFSTR("(name:%@, uri:%@, uiStatus:%lu)"), v18, v12, objc_msgSend(v16, "uiStatus"));
          v19 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v26, "addObject:", v19);
          ++v3;
        }
        while (v2 != v3);
        v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
      }
      while (v2);
    }

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v26, "componentsJoinedByString:", CFSTR("; "));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        v32 = v21;
        v33 = 2112;
        v34 = v22;
        _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "IMChat_KT There was an error marking KT failure as seen for participants [%@] with error: %@", buf, 0x16u);

      }
    }

  }
}

NSArray *__cdecl sub_1A20D2D08(IMChat *self, SEL a2)
{
  return self->_replySuggestions;
}

uint64_t sub_1A20D3E0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1A20D3F90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

void sub_1A20D4198(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  LOBYTE(v5) = *(_BYTE *)(a1 + 64);
  objc_msgSend(v6, "_chat_loadHistory:limit:beforeGUID:afterGUID:threadIdentifier:queryID:synchronous:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40), 0, 0, v4, v5, *(_QWORD *)(a1 + 48));

}

uint64_t sub_1A20D4224(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

void sub_1A20D451C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20D44CCLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A20D4550(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint8_t buf[4];
  id v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 64);
      v7 = *(_QWORD *)(a1 + 72);
      *(_DWORD *)buf = 138413058;
      v11 = v3;
      v12 = 2112;
      v13 = v5;
      v14 = 2048;
      v15 = v6;
      v16 = 2048;
      v17 = v7;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Completing queryID: %@, loadMessagesBeforeAndAfterGUID: %@ numberOfMessagesBeforeGUID: %lu numberOfMessagesAfterGUID: %lu", buf, 0x2Au);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "chatRegistry");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v9) = *(_BYTE *)(a1 + 80);
  objc_msgSend(v8, "_chat_loadPagedHistory:numberOfMessagesBefore:numberOfMessagesAfter:messageGUID:threadIdentifier:queryID:synchronous:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), v3, v9, *(_QWORD *)(a1 + 56));

}

void sub_1A20D4690(uint64_t a1, int a2, void *a3)
{
  id v4;
  NSObject *v5;
  _DWORD v6[2];
  __int16 v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6[0] = 67109378;
      v6[1] = a2;
      v7 = 2112;
      v8 = v4;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "loadMessagesBeforeAndAfterGUID completion with success: %d error: %@", (uint8_t *)v6, 0x12u);
    }

  }
}

void sub_1A20D49A0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  uint8_t buf[4];
  id v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      v16 = v3;
      v17 = 2112;
      v18 = v5;
      v19 = 2112;
      v20 = v6;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Executing queryID: %@, fetchMessageHistoryForDateInterval: %@ chatGUIDs: %@", buf, 0x20u);
    }

  }
  objc_msgSend(*(id *)(a1 + 48), "chatRegistry");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(void **)(a1 + 32);
  v10 = *(unsigned __int8 *)(a1 + 64);
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A20D4B5C;
  v11[3] = &unk_1E4721488;
  v12 = v9;
  v13 = *(id *)(a1 + 40);
  v14 = *(id *)(a1 + 56);
  objc_msgSend(v7, "_chat_fetchHistorySummary:dateInterval:synchronous:queryID:completion:", v8, v12, v10, v3, v11);

}

void sub_1A20D4B5C(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  id v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = a1[4];
      v9 = a1[5];
      v10 = 138412802;
      v11 = v5;
      v12 = 2112;
      v13 = v8;
      v14 = 2112;
      v15 = v9;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Finished queryID: %@, fetchMessageHistoryForDateInterval: %@ chatGUIDs: %@", (uint8_t *)&v10, 0x20u);
    }

  }
  (*(void (**)(void))(a1[6] + 16))();

}

void sub_1A20D4C74(_QWORD *a1, char a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((a2 & 1) != 0)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        v7 = a1[4];
        v8 = a1[5];
        v10 = 138412802;
        v11 = v7;
        v12 = 2112;
        v13 = v8;
        v14 = 2112;
        v15 = v5;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Query completed for fetchMessageHistoryForDateInterval: %@ chatGUIDs: %@, error: %@", (uint8_t *)&v10, 0x20u);
      }

    }
  }
  else
  {
    IMLogHandleForCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1A2197910();

    (*(void (**)(void))(a1[6] + 16))();
  }

}

void sub_1A20D4F8C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  uint8_t buf[4];
  id v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v15 = v3;
      v16 = 2112;
      v17 = v5;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Executing queryID: %@, fetchOldestMessageDate chatGUID: %@", buf, 0x16u);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "chatRegistry");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(unsigned __int8 *)(a1 + 56);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = sub_1A20D5130;
  v10[3] = &unk_1E4721500;
  v11 = v3;
  v12 = *(id *)(a1 + 32);
  v13 = *(id *)(a1 + 48);
  v9 = v3;
  objc_msgSend(v6, "_chat_fetchOldestMessageDateForChat:synchronous:queryID:completion:", v7, v8, v9, v10);

}

void sub_1A20D5130(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = a1[4];
      v9 = a1[5];
      v10 = 138412546;
      v11 = v8;
      v12 = 2112;
      v13 = v9;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Finished queryID: %@, fetchOldestMessageDate chatGUID: %@", (uint8_t *)&v10, 0x16u);
    }

  }
  (*(void (**)(void))(a1[6] + 16))();

}

void sub_1A20D5240(uint64_t a1, char a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if ((a2 & 1) != 0)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        v7 = *(_QWORD *)(a1 + 32);
        v9 = 138412546;
        v10 = v7;
        v11 = 2112;
        v12 = v5;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Query completed for fetchOldestMessageDate chatGUID: %@, error: %@", (uint8_t *)&v9, 0x16u);
      }

    }
  }
  else
  {
    IMLogHandleForCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1A2197990();

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_1A20D54D0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_loadFrequentReplies:limit:queryID:loadImmediately:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v4, *(unsigned __int8 *)(a1 + 48));

}

void sub_1A20D56AC(uint64_t a1, void *a2)
{
  id v4;
  id v5;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 400), a2);
  v4 = a2;
  objc_msgSend(*(id *)(a1 + 32), "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_loadUnreadMessages:limit:fallbackGUID:queryID:loadImmediately:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40), v4, 1);

}

void sub_1A20D58DC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_loadAttachments:queryID:loadImmediately:", *(_QWORD *)(a1 + 32), v4, 0);

}

void sub_1A20D593C(uint64_t a1, int a2, void *a3)
{
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v11 = a3;
  v5 = *(id *)(*(_QWORD *)(a1 + 32) + 336);
  objc_msgSend(*(id *)(a1 + 32), "_setAttachments:", 0);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    v7 = v11;
    if (a2)
    {
      v8 = 1;
      v9 = v5;
      v7 = 0;
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, id, id))(v6 + 16))(v6, v8, v9, v7);
  }
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "__mainThreadPostNotificationName:object:userInfo:", CFSTR("__kIMChatDidFetchAttachmentsNotification"), *(_QWORD *)(a1 + 32), 0);

}

void sub_1A20D5A78(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_isDownloadingPurgedAssetsForChat:queryID:loadImmediately:", *(_QWORD *)(a1 + 32), v4, 1);

}

void sub_1A20D5B88(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "chatRegistry");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_chat_isDownloadingPurgedAssetsForChat:queryID:loadImmediately:", *(_QWORD *)(a1 + 32), v4, 0);

}

uint64_t sub_1A20D5BE8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 56));
}

void sub_1A20D61B8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_msgSend(v7, "transferGUID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3))
  {
    objc_msgSend(*(id *)(a1 + 32), "removeObject:", v3);
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v7);
  }
  else if (IMFileTransferGUIDIsTemporary())
  {
    objc_msgSend(v7, "messageItem");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "guid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "index");
    IMFileTransferGUIDForAttachmentMessagePartAtMessageGUIDAndMessagePartIndex();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v6))
    {
      objc_msgSend(*(id *)(a1 + 32), "removeObject:", v6);
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v7);
    }

  }
}

id _IMStringFromIMChatParticipantState(__int16 a1)
{
  id v2;
  void *v3;

  v2 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  v3 = v2;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v2, "appendString:", CFSTR("Not Yet Invited"));
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (objc_msgSend(v3, "length"))
    objc_msgSend(v3, "appendString:", CFSTR(", "));
  objc_msgSend(v3, "appendString:", CFSTR("Invite Failed"));
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_15:
  if (objc_msgSend(v3, "length"))
    objc_msgSend(v3, "appendString:", CFSTR(", "));
  objc_msgSend(v3, "appendString:", CFSTR("Deciding"));
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_18:
  if (objc_msgSend(v3, "length"))
    objc_msgSend(v3, "appendString:", CFSTR(", "));
  objc_msgSend(v3, "appendString:", CFSTR("Declined"));
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_21:
  if (objc_msgSend(v3, "length"))
    objc_msgSend(v3, "appendString:", CFSTR(", "));
  objc_msgSend(v3, "appendString:", CFSTR("Joined"));
  if ((a1 & 0x20) == 0)
  {
LABEL_7:
    if ((a1 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_24:
  if (objc_msgSend(v3, "length"))
    objc_msgSend(v3, "appendString:", CFSTR(", "));
  objc_msgSend(v3, "appendString:", CFSTR("Left"));
  if ((a1 & 0x40) == 0)
  {
LABEL_8:
    if ((a1 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_30;
  }
LABEL_27:
  if (objc_msgSend(v3, "length"))
    objc_msgSend(v3, "appendString:", CFSTR(", "));
  objc_msgSend(v3, "appendString:", CFSTR("Kicked"));
  if ((a1 & 0x80) == 0)
  {
LABEL_9:
    if ((a1 & 0x100) == 0)
      return v3;
    goto LABEL_33;
  }
LABEL_30:
  if (objc_msgSend(v3, "length"))
    objc_msgSend(v3, "appendString:", CFSTR(", "));
  objc_msgSend(v3, "appendString:", CFSTR("Banned"));
  if ((a1 & 0x100) != 0)
  {
LABEL_33:
    if (objc_msgSend(v3, "length"))
      objc_msgSend(v3, "appendString:", CFSTR(", "));
    objc_msgSend(v3, "appendString:", CFSTR("Removing"));
  }
  return v3;
}

const __CFString *_IMStringFromIMChatJoinState(unint64_t a1)
{
  if (a1 > 4)
    return CFSTR("Unknown");
  else
    return off_1E4721718[a1];
}

uint64_t sub_1A20D7E60(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_setTimeAdded:", *(_QWORD *)(a1 + 32));
}

void sub_1A20D88A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  id v13;
  void *v14;
  char v15;
  int v16;
  int v17;
  NSObject *v18;
  char isKindOfClass;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  void *v23;
  char v24;
  NSObject *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  NSObject *v31;
  NSObject *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  BOOL v38;
  NSObject *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t j;
  void *v48;
  void *v49;
  void *v50;
  int v51;
  void *v52;
  void *v53;
  id v54;
  _BYTE *v55;
  id v56;
  id v57;
  id v58;
  id obj;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _QWORD v73[4];
  id v74;
  id v75;
  id v76;
  id v77;
  uint8_t v78;
  _BYTE v79[7];
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint8_t v88[128];
  uint8_t buf[4];
  uint64_t v90;
  _BYTE v91[128];
  _BYTE v92[128];
  uint64_t v93;

  v93 = *MEMORY[0x1E0C80C00];
  v1 = a1 + 32;
  objc_msgSend(*(id *)(a1 + 32), "_getDeleteChatItemMap:", *(_QWORD *)(a1 + 40));
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)v1, "_getMessageChatItemMap:withDeleteMap:andAllChatItems:", *(_QWORD *)(v1 + 8), v62, *(_QWORD *)(a1 + 48));
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v58 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v57 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v56 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v84 = 0u;
  v85 = 0u;
  v86 = 0u;
  v87 = 0u;
  objc_msgSend(v62, "allKeys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v63 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v84, v92, 16);
  if (v63)
  {
    v55 = v79;
    v60 = *(_QWORD *)v85;
    do
    {
      v2 = 0;
      do
      {
        if (*(_QWORD *)v85 != v60)
        {
          v3 = v2;
          objc_enumerationMutation(obj);
          v2 = v3;
        }
        v65 = v2;
        v4 = *(void **)(*((_QWORD *)&v84 + 1) + 8 * v2);
        objc_msgSend(v62, "objectsForKey:", v4, v55);
        v66 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v66, "lastObject");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "_parentItem");
        v68 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v61, "objectsForKey:", v4);
        v67 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v67, "count") == 1)
        {
          objc_msgSend(v67, "firstObject");
          v6 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v7 = v6;
            v80 = 0u;
            v81 = 0u;
            v82 = 0u;
            v83 = 0u;
            v8 = v66;
            v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v80, v91, 16);
            if (v9)
            {
              v10 = *(_QWORD *)v81;
              while (2)
              {
                for (i = 0; i != v9; ++i)
                {
                  if (*(_QWORD *)v81 != v10)
                    objc_enumerationMutation(v8);
                  v12 = *(void **)(*((_QWORD *)&v80 + 1) + 8 * i);
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) != 0)
                  {
                    v13 = v12;
                    objc_msgSend(v7, "aggregateAttachmentParts");
                    v14 = (void *)objc_claimAutoreleasedReturnValue();
                    v15 = objc_msgSend(v14, "containsObject:", v13);

                    if ((v15 & 1) != 0)
                      continue;
                  }
                  IMLogHandleForCategory();
                  v18 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
                    sub_1A2197AAC(&v78, v55, v18);

                  v16 = 0;
                  goto LABEL_24;
                }
                v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v80, v91, 16);
                v16 = 1;
                if (v9)
                  continue;
                break;
              }
            }
            else
            {
              v16 = 1;
            }
LABEL_24:

          }
          else
          {
            v16 = 0;
          }

          v17 = v16 != 0;
        }
        else
        {
          v17 = 0;
        }
        objc_opt_class();
        isKindOfClass = objc_opt_isKindOfClass();
        v20 = objc_msgSend(v67, "count");
        if ((v20 == objc_msgSend(v66, "count")) & ~v17 | isKindOfClass & 1)
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v90 = (uint64_t)v4;
              _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Request to delete entire chatItem for message (guid: %@). Adding messageGUID for deletion.", buf, 0xCu);
            }

          }
          objc_msgSend(v68, "guid");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v58, "addObject:", v22);

          objc_msgSend(v57, "addObject:", v68);
        }
        else
        {
          objc_msgSend(MEMORY[0x1E0D397E8], "sharedInstance");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v24 = objc_msgSend(v23, "getBoolFromDomain:forKey:defaultValue:", CFSTR("com.apple.MobileSMS"), CFSTR("SuppressDeleteParts"), 0);

          if ((v24 & 1) == 0)
          {
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v25 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_1A1FF4000, v25, OS_LOG_TYPE_INFO, "Request to delete subset of chatItems from message. Update message.", buf, 2u);
              }

            }
            v26 = *(_QWORD *)(a1 + 40);
            v27 = *(void **)(*(_QWORD *)(a1 + 32) + 368);
            v76 = 0;
            v77 = 0;
            objc_msgSend(v27, "_itemWithChatItemsDeleted:fromItem:indexesOfItemsDeleted:indexToRangeMapOfItemsDeleted:", v26, v68, &v77, &v76);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            v29 = v77;
            v30 = v76;
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v31 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v90 = (uint64_t)v28;
                _os_log_impl(&dword_1A1FF4000, v31, OS_LOG_TYPE_INFO, "New item after removing parts: %@", buf, 0xCu);
              }

            }
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v32 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v90 = (uint64_t)v30;
                _os_log_impl(&dword_1A1FF4000, v32, OS_LOG_TYPE_INFO, "DELETING PARTS index:range map: %@", buf, 0xCu);
              }

            }
            objc_msgSend(v28, "message");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            v34 = *(void **)(a1 + 32);
            objc_msgSend(MEMORY[0x1E0C99D68], "now");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v34, "updateMessage:withIndexesOfDeletedItems:withIndexToRangeMapOfDeletedItems:deleteDate:", v33, v29, v30, v35);

            objc_msgSend(*(id *)(a1 + 32), "_handleItem:", v28);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v36 = v68;
              objc_msgSend(v36, "replyCountsByPart");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              v38 = objc_msgSend(v37, "count") == 0;

              if (!v38)
              {
                v73[0] = MEMORY[0x1E0C809B0];
                v73[1] = 3221225472;
                v73[2] = sub_1A20D9284;
                v73[3] = &unk_1E4721640;
                v74 = v36;
                v75 = v56;
                objc_msgSend(v30, "enumerateKeysAndObjectsUsingBlock:", v73);

              }
            }

          }
        }

        v2 = v65 + 1;
      }
      while (v65 + 1 != v63);
      v63 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v84, v92, 16);
    }
    while (v63);
  }

  objc_msgSend(*(id *)(a1 + 32), "_updateRepliesIfNecessaryWithRemovedItems:threadIdentifiersOfRemovedParts:", v57, v56);
  if (objc_msgSend(v58, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v39 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
      {
        v40 = objc_msgSend(v58, "count");
        *(_DWORD *)buf = 134217984;
        v90 = v40;
        _os_log_impl(&dword_1A1FF4000, v39, OS_LOG_TYPE_INFO, "Recently Deleted | Will move %lu messageGUIDs to recently deleted", buf, 0xCu);
      }

    }
    +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "moveMessagesWithGUIDsToRecentlyDeleted:deleteDate:synchronously:completionHandler:", v58, v42, 0, &unk_1E4721660);

    v43 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v44 = v57;
    v45 = objc_msgSend(v44, "countByEnumeratingWithState:objects:count:", &v69, v88, 16);
    if (v45)
    {
      v46 = *(_QWORD *)v70;
      do
      {
        for (j = 0; j != v45; ++j)
        {
          if (*(_QWORD *)v70 != v46)
            objc_enumerationMutation(v44);
          v48 = *(void **)(*((_QWORD *)&v69 + 1) + 8 * j);
          objc_msgSend(v48, "balloonBundleID");
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          IMBalloonExtensionIDWithSuffix();
          v50 = (void *)objc_claimAutoreleasedReturnValue();
          v51 = objc_msgSend(v49, "isEqualToString:", v50);

          if (v51)
            objc_msgSend(v43, "addObject:", v48);
          objc_msgSend(*(id *)(a1 + 32), "_removeItem:", v48);
        }
        v45 = objc_msgSend(v44, "countByEnumeratingWithState:objects:count:", &v69, v88, 16);
      }
      while (v45);
    }

    objc_msgSend(MEMORY[0x1E0D39A00], "sharedCoordinator");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    v53 = (void *)objc_msgSend(v43, "copy");
    objc_msgSend(v52, "informOfDeletedMessagesWithMessages:", v53);

  }
  v54 = (id)objc_msgSend(*(id *)(a1 + 32), "loadMessagesBeforeDate:limit:loadImmediately:", 0, objc_msgSend(*(id *)(a1 + 32), "numberOfMessagesToKeepLoaded"), 0);

}

void sub_1A20D9284(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *ThreadIdentifierWithOriginatorGUID;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v10);
        objc_msgSend(*(id *)(a1 + 32), "guid");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "integerValue");
        objc_msgSend(v11, "rangeValue");
        ThreadIdentifierWithOriginatorGUID = (void *)IMMessageCreateThreadIdentifierWithOriginatorGUID();

        if (ThreadIdentifierWithOriginatorGUID)
          objc_msgSend(*(id *)(a1 + 40), "addObject:", ThreadIdentifierWithOriginatorGUID);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

}

void sub_1A20D93E0()
{
  id v0;

  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "updateRecoverableMessagesMetadataSynchronously:completionHandler:", 0, 0);

}

id sub_1A20D9554(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id obj;
  uint8_t buf[16];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_updateRepliesIfNecessaryWithRemovedItems:threadIdentifiersOfRemovedParts:", *(_QWORD *)(a1 + 40), 0);
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  obj = *(id *)(a1 + 40);
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v15;
    do
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v15 != v3)
          objc_enumerationMutation(obj);
        v5 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v4);
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v6 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Request to delete message item for message.", buf, 2u);
          }

        }
        objc_msgSend(*(id *)(a1 + 32), "daemonController");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "guid");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = v8;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v18, 1);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringGUID");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "deleteMessageWithGUIDs:queryID:", v9, v10);

        objc_msgSend(*(id *)(a1 + 32), "_removeItem:", v5);
        ++v4;
      }
      while (v2 != v4);
      v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
    }
    while (v2);
  }

  return (id)objc_msgSend(*(id *)(a1 + 32), "loadMessagesBeforeDate:limit:loadImmediately:", 0, objc_msgSend(*(id *)(a1 + 32), "numberOfMessagesToKeepLoaded"), 0);
}

void sub_1A20D990C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_msgSend(*(id *)(a1 + 32), "_copy");
  objc_msgSend(v2, "setExpireState:", 3);
  objc_msgSend(*(id *)(a1 + 40), "_handleItem:", v2);

}

void sub_1A20D9AD4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_msgSend(*(id *)(a1 + 32), "_copy");
  objc_msgSend(v2, "setFlags:", objc_msgSend(v2, "flags") | 0x800000000);
  objc_msgSend(*(id *)(a1 + 40), "_handleItem:", v2);

}

void sub_1A20D9BB4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_msgSend(*(id *)(a1 + 32), "copyWithFlags:", objc_msgSend(*(id *)(a1 + 32), "flags"));
  objc_msgSend(v2, "_setMessageID:", objc_msgSend(*(id *)(a1 + 32), "messageID"));
  objc_msgSend(v2, "setSelectedRichCardIndex:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "_handleItem:keepExistingIndex:", v2, 1);

}

void sub_1A20D9DF4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;

  v4 = (id)objc_msgSend(*(id *)(a1 + 32), "_copyWithFlags:", objc_msgSend(*(id *)(a1 + 32), "flags") | 0x400000);
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setTimePlayed:", v2);

  if (objc_msgSend(*(id *)(a1 + 32), "isExpirable"))
  {
    if (IMMessageItemShouldAutomaticallySave())
      v3 = 3;
    else
      v3 = 1;
    objc_msgSend(v4, "setExpireState:", v3);
  }
  objc_msgSend(*(id *)(a1 + 40), "_handleItem:", v4);

}

void sub_1A20DA028(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_msgSend(*(id *)(a1 + 32), "_copyWithFlags:", objc_msgSend(*(id *)(a1 + 32), "flags"));
  v2 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setTimeExpressiveSendPlayed:", v3);

  objc_msgSend(*(id *)(a1 + 40), "_handleItem:", v4);
}

void sub_1A20DACE4(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * i);
        objc_msgSend(v7, "_item", (_QWORD)v15);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "_item");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = (void *)objc_msgSend(v8, "_copyWithFlags:", objc_msgSend(v9, "flags"));

        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v10, "setNeedsReloadForTransferStatusChangeWithType:", 0);
        objc_msgSend(a1[5], "_handleItem:", v10);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v4);
  }

  v11 = a1[6];
  if (v11)
  {
    objc_msgSend(v11, "_item");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1[6], "_item");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v12, "_copyWithFlags:", objc_msgSend(v13, "flags"));

    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v14, "setNeedsReloadForTransferStatusChangeWithType:", 0);
    objc_msgSend(a1[5], "_handleItem:", v14, (_QWORD)v15);

  }
}

void sub_1A20DB7FC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "_items");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(v2, "copy");

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v10 = v9;
          if (objc_msgSend(v10, "actionable", (_QWORD)v12))
          {
            v11 = (void *)objc_msgSend(v10, "copy");
            objc_msgSend(v11, "setActionable:", 0);
            objc_msgSend(*(id *)(a1 + 32), "_handleItem:", v11);

          }
        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

}

void sub_1A20DBC88(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;

  objc_msgSend(a1, "context");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setInvitation:", a3);

}

uint64_t sub_1A20DBCC4(void *a1)
{
  return objc_msgSend(a1, "_copyWithFlags:", objc_msgSend(a1, "flags"));
}

void *sub_1A20DBCEC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;

  v5 = objc_msgSend(a1, "messageID");
  v6 = (void *)objc_msgSend(a1, "copyWithFlags:", a3);
  objc_msgSend(v6, "_setMessageID:", v5);
  return v6;
}

void sub_1A20DBE14(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "synchronousReplyingRemoteDaemon");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_automation_markMessagesAsRead:messageGUID:forChatGUID:fromMe:queryID:", *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 49), v3);

}

void sub_1A20DBF2C()
{
  id v0;
  uint64_t v1;
  void *v2;

  v0 = objc_alloc(MEMORY[0x1E0D39B10]);
  v1 = objc_msgSend(v0, "initWithTitle:maximumNumberOfTrackedObjects:queue:", CFSTR("IMChat-RecentlyUpdated"), 3, MEMORY[0x1E0C80D38]);
  v2 = (void *)qword_1ECF12380;
  qword_1ECF12380 = v1;

}

void sub_1A20DC360(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  objc_class *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  objc_class *v12;
  void *v13;
  void *v14;
  id v15;

  v15 = a2;
  objc_msgSend(v15, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "guid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4 && (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v4) & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (void *)MEMORY[0x1E0CB3940];
    v7 = (objc_class *)objc_opt_class();
    NSStringFromClass(v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringWithFormat:", CFSTR("c:%@: %@"), v8, v4);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "addObject:", v9);

  }
  if ((unint64_t)objc_msgSend(*(id *)(a1 + 48), "count") <= 0x63)
  {
    v10 = *(void **)(a1 + 48);
    v11 = (void *)MEMORY[0x1E0CB3940];
    v12 = (objc_class *)objc_opt_class();
    NSStringFromClass(v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringWithFormat:", CFSTR("c:%@: %@"), v13, v4);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "addObject:", v14);

  }
}

void sub_1A20DC670(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id sub_1A20DC900(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AE44;
  v8 = sub_1A200AC94;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20DC9C8;
  v3[3] = &unk_1E4721748;
  v3[4] = &v4;
  objc_msgSend(a1, "__enumerateItemsWithOptions:usingBlock:", 0, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A20DC9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20DC9C8(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = a2;
  if (!objc_msgSend(v8, "type"))
  {
    objc_msgSend(v8, "message");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    *a3 = 1;
  }

}

id sub_1A20DCA2C(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AE44;
  v8 = sub_1A200AC94;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20DCAF4;
  v3[3] = &unk_1E4721748;
  v3[4] = &v4;
  objc_msgSend(a1, "__enumerateItemsWithOptions:usingBlock:", 2, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A20DCADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20DCAF4(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = a2;
  if (!objc_msgSend(v8, "type"))
  {
    objc_msgSend(v8, "message");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    *a3 = 1;
  }

}

id sub_1A20DCB58(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AE44;
  v8 = sub_1A200AC94;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20DCC20;
  v3[3] = &unk_1E4721748;
  v3[4] = &v4;
  objc_msgSend(a1, "__enumerateItemsWithOptions:usingBlock:", 2, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A20DCC08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20DCC20(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = objc_msgSend(v8, "type");
  v6 = v8;
  if (!v5)
  {
    objc_msgSend(v8, "message");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v7, "isTypingMessage") & 1) == 0 && (objc_msgSend(v7, "isSuggestedActionResponse") & 1) == 0)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v7);
      *a3 = 1;
    }

    v6 = v8;
  }

}

id sub_1A20DCCAC(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AE44;
  v8 = sub_1A200AC94;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20DCD74;
  v3[3] = &unk_1E4721748;
  v3[4] = &v4;
  objc_msgSend(a1, "__enumerateItemsWithOptions:usingBlock:", 2, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A20DCD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20DCD74(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = objc_msgSend(v8, "type");
  v6 = v8;
  if (!v5)
  {
    objc_msgSend(v8, "message");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v7, "isFromMe") & 1) == 0)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v7);
      *a3 = 1;
    }

    v6 = v8;
  }

}

id sub_1A20DCDF4(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AE44;
  v8 = sub_1A200AC94;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20DCEBC;
  v3[3] = &unk_1E4721748;
  v3[4] = &v4;
  objc_msgSend(a1, "__enumerateItemsWithOptions:usingBlock:", 2, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A20DCEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20DCEBC(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = objc_msgSend(v8, "type");
  v6 = v8;
  if (!v5)
  {
    objc_msgSend(v8, "message");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v7, "isFromMe") & 1) == 0 && (objc_msgSend(v7, "isTypingMessage") & 1) == 0)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v7);
      *a3 = 1;
    }

    v6 = v8;
  }

}

void sub_1A20DCF48(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;

  v6 = a4;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A20DCFD0;
  v8[3] = &unk_1E4721770;
  v9 = v6;
  v7 = v6;
  objc_msgSend(a1, "__enumerateItemsWithOptions:usingBlock:", a3, v8);

}

void sub_1A20DCFD0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  id v7;

  v7 = a2;
  if (!objc_msgSend(v7, "type"))
  {
    v5 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v7, "message");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(v5, v6, a3);

  }
}

id sub_1A20DD040(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "__imItems");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "__imArrayByApplyingBlock:", &unk_1E471D878);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id sub_1A20DD080(uint64_t a1, void *a2)
{
  id v2;
  id v3;

  v2 = a2;
  if (objc_msgSend(v2, "type"))
    v3 = 0;
  else
    v3 = v2;

  return v3;
}

id sub_1A20DD0C0(void *a1)
{
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1A200AE44;
  v8 = sub_1A200AC94;
  v9 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20DD188;
  v3[3] = &unk_1E4721748;
  v3[4] = &v4;
  objc_msgSend(a1, "__enumerateItemsWithOptions:usingBlock:", 2, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A20DD170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20DD188(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;

  v6 = a2;
  if (!objc_msgSend(v6, "type"))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a3 = 1;
  }

}

void sub_1A20DD1EC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  unint64_t v7;
  id v8;
  _QWORD v9[4];
  id v10;
  _QWORD *v11;
  _QWORD v12[5];
  id v13;

  v6 = a4;
  v12[0] = 0;
  v12[1] = v12;
  v12[2] = 0x3032000000;
  v12[3] = sub_1A200AE44;
  v12[4] = sub_1A200AC94;
  v13 = 0;
  v7 = a3 & 0xFFFFFFFFFFFFFFFELL;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1A20DD2D4;
  v9[3] = &unk_1E4721798;
  v11 = v12;
  v8 = v6;
  v10 = v8;
  objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:", v7, v9);

  _Block_object_dispose(v12, 8);
}

void sub_1A20DD2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20DD2D4(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;

  objc_msgSend(a2, "_parentItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  if (v3 != v6)
  {
    v7 = v3;
    objc_storeStrong(v5, v3);
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    v3 = v7;
  }

}

id sub_1A20DD340(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  BOOL v11;
  id v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(a1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v3 = a1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * i), "_parentItem", (_QWORD)v14);
        v9 = objc_claimAutoreleasedReturnValue();
        v10 = (void *)v9;
        if (v9)
          v11 = v9 == (_QWORD)v6;
        else
          v11 = 1;
        if (!v11)
        {
          objc_msgSend(v2, "addObject:", v9);
          v12 = v10;

          v6 = v12;
        }

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v5);
  }
  else
  {
    v6 = 0;
  }

  return v2;
}

id IMEmotePrefixes()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)qword_1EE65F5C8;
  if (!qword_1EE65F5C8)
  {
    v1 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99D20]), "initWithObjects:", CFSTR("/me"), CFSTR("/emote"), CFSTR("/em"), 0);
    v2 = (void *)qword_1EE65F5C8;
    qword_1EE65F5C8 = v1;

    v0 = (void *)qword_1EE65F5C8;
  }
  return v0;
}

uint64_t sub_1A20DE884(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  if (a2)
  {
    *(_QWORD *)(*(_QWORD *)(result + 32) + 72) |= 0x20000000uLL;
    *a5 = 1;
  }
  return result;
}

uint64_t IMMessageCompare(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  objc_class *Class;
  uint64_t v8;
  __CFString *v9;
  const __CFString *v10;
  CFComparisonResult v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  CFRange v18;

  v5 = a1;
  v6 = a2;
  if (v5 == v6)
  {
    v8 = 0;
  }
  else
  {
    Class = object_getClass(v5);
    if (Class == object_getClass(v6))
    {
      if (a3 == 2)
      {
        v12 = v6[8];
        v13 = v5[8];
        v14 = v12 == v13;
        v15 = v12 < v13;
        v16 = -1;
        if (!v15)
          v16 = 1;
        if (v14)
          v8 = 0;
        else
          v8 = v16;
      }
      else
      {
        if (a3 == 1)
        {
          v9 = (__CFString *)v5[7];
          v10 = (const __CFString *)v6[7];
          v18.length = -[__CFString length](v9, "length");
          v18.location = 0;
          v11 = CFStringCompareWithOptionsAndLocale(v9, v10, v18, 1uLL, 0);
        }
        else
        {
          v11 = objc_msgSend((id)v5[5], "compare:", v6[5]);
        }
        v8 = v11;
      }
    }
    else
    {
      v8 = -1;
    }
  }

  return v8;
}

void sub_1A20E1338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A20E0F6CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A20E13EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  NSObject *v13;
  IMPluginPayload *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  IMMessage *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  int v60;
  IMMessage *v61;
  void *v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  _QWORD v70[4];
  id v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint8_t v78[16];
  _QWORD v79[6];
  uint8_t v80[128];
  __int128 buf;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t);
  void (*v84)(uint64_t);
  id v85;
  uint64_t v86;

  v86 = *MEMORY[0x1E0C80C00];
  v67 = a2;
  v68 = a1;
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "attributedSubstringFromRange:", a3, a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "trimmedString");
  v65 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v68 + 48) + 8) + 40), "attributedSubstringFromRange:", a3, a4);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v66, "trimmedString");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v67)
  {
LABEL_17:
    v63 = 0;
    v64 = 0;
    goto LABEL_18;
  }
  +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)*MEMORY[0x1E0D375F8];
  v11 = (void *)objc_msgSend(v9, "dataSourceClassForBundleID:", *MEMORY[0x1E0D375F8]);

  LODWORD(v9) = objc_msgSend(v11, "supportsURL:", v67);
  v12 = IMOSLoggingEnabled();
  if (!(_DWORD)v9)
  {
    if (v12)
    {
      OSLogHandleForIMFoundationCategory();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v11;
        _os_log_impl(&dword_1A1FF4000, v25, OS_LOG_TYPE_INFO, "%@ did not support URL", (uint8_t *)&buf, 0xCu);
      }

    }
    goto LABEL_17;
  }
  if (v12)
  {
    OSLogHandleForIMFoundationCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Initializing rich link", (uint8_t *)&buf, 2u);
    }

  }
  v14 = objc_alloc_init(IMPluginPayload);
  -[IMPluginPayload setMessageGUID:](v14, "setMessageGUID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v68 + 56) + 8) + 40));
  -[IMPluginPayload setPluginBundleID:](v14, "setPluginBundleID:", v10);
  -[IMPluginPayload setUrl:](v14, "setUrl:", v67);
  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v68 + 48) + 8) + 40), "length") == a4)
  {
    objc_msgSend(*(id *)(v68 + 32), "payloadData");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v79[5] = 0;
    IMSharedHelperPayloadFromCombinedPluginPayloadData();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 0;
    -[IMPluginPayload setData:](v14, "setData:", v16);

    -[IMPluginPayload setAttachments:](v14, "setAttachments:", v17);
  }
  +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "dataSourceForPluginPayload:", v14);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v19, "payloadWillEnterShelf");
  objc_msgSend(v19, "payloadWillSendFromShelf");
  objc_msgSend(v19, "messagePayloadDataForSending");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v64 = v10;
  objc_msgSend(v19, "setPayloadInShelf:", 0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v68 + 64) + 8) + 24))
  {
    objc_msgSend(*(id *)(v68 + 32), "messageSubject");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "length") == 0;

    if (!v21)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v68 + 72) + 8) + 24) = 1;
      objc_msgSend(MEMORY[0x1E0CB3940], "stringGUID");
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = *(_QWORD *)(*(_QWORD *)(v68 + 56) + 8);
      v24 = *(void **)(v23 + 40);
      *(_QWORD *)(v23 + 40) = v22;

    }
  }

LABEL_18:
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v82 = 0x3032000000;
  v83 = sub_1A200AE54;
  v84 = sub_1A200AC9C;
  v85 = 0;
  v26 = objc_msgSend(v65, "length");
  v27 = *MEMORY[0x1E0D36430];
  v79[0] = MEMORY[0x1E0C809B0];
  v79[1] = 3221225472;
  v79[2] = sub_1A20E1CC8;
  v79[3] = &unk_1E47217F0;
  v79[4] = &buf;
  objc_msgSend(v65, "enumerateAttribute:inRange:options:usingBlock:", v27, 0, v26, 0, v79);
  if (objc_msgSend(v8, "length"))
  {
    objc_msgSend(v66, "string");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "string");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = objc_msgSend(v28, "rangeOfString:", v29);

  }
  else
  {
    v30 = 0;
  }
  v31 = v30 + a3;
  if (v30 + a3 < 1)
  {
    v69 = v8;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v32 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v78 = 0;
        _os_log_impl(&dword_1A1FF4000, v32, OS_LOG_TYPE_INFO, "Shifting DD attributed results by a non-zero offset.", v78, 2u);
      }

    }
    v69 = (void *)objc_msgSend(v8, "mutableCopy");
    v76 = 0u;
    v77 = 0u;
    v74 = 0u;
    v75 = 0u;
    +[IMDDController allSupportedDDAttributesKeys](IMDDController, "allSupportedDDAttributesKeys");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v74, v80, 16);
    if (v34)
    {
      v35 = *(_QWORD *)v75;
      do
      {
        for (i = 0; i != v34; ++i)
        {
          if (*(_QWORD *)v75 != v35)
            objc_enumerationMutation(v33);
          v37 = *(_QWORD *)(*((_QWORD *)&v74 + 1) + 8 * i);
          v38 = objc_msgSend(v8, "length");
          v70[0] = MEMORY[0x1E0C809B0];
          v70[1] = 3221225472;
          v70[2] = sub_1A20E1D44;
          v70[3] = &unk_1E4721818;
          v73 = v31;
          v71 = v69;
          v72 = v37;
          objc_msgSend(v8, "enumerateAttribute:inRange:options:usingBlock:", v37, 0, v38, 0, v70);

        }
        v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v74, v80, 16);
      }
      while (v34);
    }

  }
  v61 = [IMMessage alloc];
  objc_msgSend(*(id *)(v68 + 32), "sender");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(v68 + 32), "time");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v68 + 64) + 8) + 24)
    && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v68 + 72) + 8) + 24))
  {
    objc_msgSend(*(id *)(v68 + 32), "messageSubject");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v60 = 1;
  }
  else
  {
    v60 = 0;
    v40 = 0;
  }
  v41 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  v42 = objc_msgSend(*(id *)(v68 + 32), "flags");
  v43 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v68 + 56) + 8) + 40);
  objc_msgSend(*(id *)(v68 + 32), "subject");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(v68 + 32), "expressiveSendStyleID");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(v68 + 32), "threadIdentifier");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = -[IMMessage initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:scheduleType:scheduleState:](v61, "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:scheduleType:scheduleState:", v62, v39, v69, v40, v41, v42, 0, v43, v44, v64, v63, v45, v46, objc_msgSend(*(id *)(v68 + 32), "scheduleType"), objc_msgSend(*(id *)(v68 + 32), "scheduleState"));

  if (v60)
  objc_msgSend(*(id *)(v68 + 32), "associatedBalloonBundleID");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  -[IMMessage setAssociatedBalloonBundleID:](v47, "setAssociatedBalloonBundleID:", v48);

  objc_msgSend(*(id *)(v68 + 32), "sourceApplicationID");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  -[IMMessage setSourceApplicationID:](v47, "setSourceApplicationID:", v49);

  v50 = v68;
  -[IMMessage setShouldNotifyOnSend:](v47, "setShouldNotifyOnSend:", objc_msgSend(*(id *)(v68 + 32), "shouldNotifyOnSend"));
  if (-[IMMessage isReply](v47, "isReply"))
  {
    objc_msgSend(*(id *)(v68 + 32), "threadOriginator");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    -[IMMessage setThreadOriginator:](v47, "setThreadOriginator:", v51);

    v50 = v68;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringGUID");
  v52 = objc_claimAutoreleasedReturnValue();
  v53 = *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8);
  v54 = *(void **)(v53 + 40);
  *(_QWORD *)(v53 + 40) = v52;

  v55 = v68;
  v56 = *(void **)(*(_QWORD *)(*(_QWORD *)(v68 + 80) + 8) + 40);
  if (!v56)
  {
    v57 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v58 = *(_QWORD *)(*(_QWORD *)(v68 + 80) + 8);
    v59 = *(void **)(v58 + 40);
    *(_QWORD *)(v58 + 40) = v57;

    v56 = *(void **)(*(_QWORD *)(*(_QWORD *)(v68 + 80) + 8) + 40);
    v55 = v68;
  }
  objc_msgSend(v56, "addObject:", v47);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v55 + 64) + 8) + 24) = 0;

  _Block_object_dispose(&buf, 8);
}

void sub_1A20E1CC8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = a2;
  if (v3)
  {
    v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v8 = v3;
    if (!v4)
    {
      v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
      v7 = *(void **)(v6 + 40);
      *(_QWORD *)(v6 + 40) = v5;

      v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    }
    objc_msgSend(v4, "addObject:", v8);
    v3 = v8;
  }

}

void sub_1A20E1D44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  id v9;

  v7 = a2;
  if (v7)
  {
    v8 = v7;
    IMOffsetSerializedDDScannerResult(v7, -*(_QWORD *)(a1 + 48));
    v9 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 32), "removeAttribute:range:", *(_QWORD *)(a1 + 40), a3, a4);
    objc_msgSend(*(id *)(a1 + 32), "addAttribute:value:range:", *(_QWORD *)(a1 + 40), v9, a3, a4);

  }
}

uint64_t sub_1A20E221C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

void *sub_1A20E2EFC()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("MarcoLoggingStringForMessageData", CFSTR("Marco"));
  off_1EE65F320 = result;
  return result;
}

const __CFString *_NSStringFromIMMessageError(unint64_t a1)
{
  if (a1 > 0x2B)
    return CFSTR("Undefined Error");
  else
    return *(&off_1E4721888 + a1);
}

void sub_1A20E3CB4()
{
  id v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = objc_alloc(MEMORY[0x1E0CB3778]);
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObject:forKey:", &unk_1E475ECB8, *MEMORY[0x1E0D366B8]);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (id)objc_msgSend(v0, "initWithString:attributes:", CFSTR(" "), v1);

  objc_msgSend(v4, "attributesAtIndex:effectiveRange:", 0, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)qword_1EE65F5D0;
  qword_1EE65F5D0 = v2;

}

void sub_1A20E3FC8(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A20E4040;
  block[3] = &unk_1E471E460;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v2);
}

void sub_1A20E4040(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "fetchScreenTimeAppPolicy");

}

void sub_1A20E407C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  _QWORD v5[5];
  id v6;
  id v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "allowableByContactsHandles:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A200D518;
  v5[3] = &unk_1E471E868;
  v3 = *(void **)(a1 + 56);
  v5[4] = *(_QWORD *)(a1 + 48);
  v6 = v2;
  v7 = v3;
  v8 = *(id *)(a1 + 64);
  v4 = v2;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

}

void sub_1A20E4134(uint64_t a1)
{
  id v2;
  _QWORD v3[5];
  id v4;

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_1A20E41AC;
  v3[3] = &unk_1E471E8B8;
  v2 = *(id *)(a1 + 40);
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = v2;
  dispatch_async(MEMORY[0x1E0C80D38], v3);

}

void sub_1A20E41AC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "emergencyNumbers");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "STConversation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void *))(v2 + 16))(v2, v4, v3);

}

void sub_1A20E44BC()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "postNotificationName:object:userInfo:", CFSTR("com.apple.messages.IMDowntimeStateChangedNotification"), 0, 0);

}

void sub_1A20E45F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t v14;
  id v15;

  v5 = a2;
  v6 = a3;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A200C45C;
  v11[3] = &unk_1E471E868;
  v12 = v6;
  v7 = *(id *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v13 = v7;
  v14 = v8;
  v15 = v5;
  v9 = v5;
  v10 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], v11);

}

void sub_1A20E497C()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.Messages", "chatregistry.performance");
  v1 = (void *)qword_1EE65EA70;
  qword_1EE65EA70 = (uint64_t)v0;

}

BOOL sub_1A20E53F8(uint64_t a1, uint64_t a2)
{
  void *v2;
  _BOOL8 v3;

  objc_msgSend(*(id *)(a1 + 32), "existingChatWithChatIdentifier:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

void sub_1A20E5690(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  __CFDictionary *v6;
  void *v7;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v4 = v3;
    v5 = v4;
    if (v4)
    {
      v6 = *(__CFDictionary **)(*(_QWORD *)(a1 + 32) + 184);
      objc_msgSend(v4, "guid");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      CFDictionarySetValue(v6, v7, v5);

    }
    else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    {
      sub_1A2197CF8();
    }

  }
}

uint64_t IMRunAllCloudKitEventNotificationManagerTests()
{
  return MEMORY[0x1E0DE7D20](IMCloudKitEventNotificationRuntimeTestSuite, sel_runTestsIfNeeded);
}

void sub_1A20E7634(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t buf[4];
  uint64_t v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v12 = v5;
      v13 = 2112;
      v14 = v3;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "EXTENSION INTERRUPTION BLOCK CALLED extensionIdentifier: %@, requestIdentifier: %@", buf, 0x16u);
    }

  }
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(a1 + 32);
  v9 = *MEMORY[0x1E0D37E80];
  v10 = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v10, &v9, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "__mainThreadPostNotificationName:object:userInfo:", *MEMORY[0x1E0D37E88], 0, v8);

}

void sub_1A20E7880()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  IMBalloonExtensionIDWithSuffix();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v0;
  v4[0] = &unk_1E475ECE8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, &v3, 1);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)qword_1EE65F5E0;
  qword_1EE65F5E0 = v1;

}

void sub_1A20E7AFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[2];
  _QWORD v4[3];

  v4[2] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0D37560];
  v3[0] = *MEMORY[0x1E0D375E0];
  v3[1] = v0;
  v4[0] = &unk_1E475EF88;
  v4[1] = &unk_1E475EF98;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, v3, 2);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)qword_1EE65F5F0;
  qword_1EE65F5F0 = v1;

}

void sub_1A20E7BDC()
{
  uint64_t v0;
  void *v1;

  IMSharedHelperStickerAppsTemporarilyDisplayedInSendMenu();
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1EE65F600;
  qword_1EE65F600 = v0;

  if (!qword_1EE65F600)
  {
    qword_1EE65F600 = (uint64_t)&unk_1E475EF10;

  }
}

void sub_1A20E7C6C()
{
  void *v0;

  v0 = (void *)qword_1EE65F610;
  qword_1EE65F610 = (uint64_t)&unk_1E475EF28;

}

void sub_1A20E88EC()
{
  IMHandleStatusManager *v0;
  void *v1;

  v0 = objc_alloc_init(IMHandleStatusManager);
  v1 = (void *)qword_1ECF12558;
  qword_1ECF12558 = (uint64_t)v0;

}

void sub_1A20E9480(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint8_t buf[4];
  void *v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "subscriptionIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v12 = v4;
      v13 = 2112;
      v14 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Retaining transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }

  }
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A20E95E8;
  v8[3] = &unk_1E4721EC8;
  v9 = v4;
  v10 = *(id *)(a1 + 32);
  v7 = v4;
  objc_msgSend(v3, "retainTransientSubscriptionAssertionWithCompletion:", v8);

}

void sub_1A20E95E8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2197D8C();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = *(_QWORD *)(a1 + 40);
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Successfully retained transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }

  }
}

void sub_1A20E9710(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  int v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4)
      goto LABEL_20;
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v13;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v15, 0xCu);

    }
LABEL_19:

    goto LABEL_20;
  }
  if (v4)
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v15 = 138412290;
      v16 = v3;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "StatusKit subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v15, 0xCu);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "observers");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "ID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = IMOSLoggingEnabled();
  if (!v8)
  {
    if (!v9)
      goto LABEL_20;
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v14;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "No valid observers for handle %@, not retaining transient subscription assertion", (uint8_t *)&v15, 0xCu);

    }
    goto LABEL_19;
  }
  if (v9)
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v11;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, retaining assertion", (uint8_t *)&v15, 0xCu);

    }
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_20:

}

void sub_1A20E9998(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20E9960);
  }
  _Unwind_Resume(a1);
}

void sub_1A20E9D00(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint8_t buf[4];
  void *v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "subscriptionIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v12 = v4;
      v13 = 2112;
      v14 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Releasing transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }

  }
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A20E9E64;
  v8[3] = &unk_1E4721EC8;
  v9 = *(id *)(a1 + 32);
  v10 = v4;
  v7 = v4;
  objc_msgSend(v3, "releaseTransientSubscriptionAssertionWithCompletion:", v8);

}

void sub_1A20E9E64(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2197DF4();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Successfully released transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }

  }
}

void sub_1A20E9F8C(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  int v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4)
      goto LABEL_20;
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v13;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v15, 0xCu);

    }
LABEL_19:

    goto LABEL_20;
  }
  if (v4)
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v15 = 138412290;
      v16 = v3;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "StatusKit subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v15, 0xCu);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "observers");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "ID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = IMOSLoggingEnabled();
  if (!v8)
  {
    if (!v9)
      goto LABEL_20;
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v14;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "No valid observers for handle %@, not retaining transient subscription assertion", (uint8_t *)&v15, 0xCu);

    }
    goto LABEL_19;
  }
  if (v9)
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v11;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, retaining assertion", (uint8_t *)&v15, 0xCu);

    }
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_20:

}

void sub_1A20EA214(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20EA1DCLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A20EA528(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint8_t buf[4];
  void *v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "subscriptionIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v12 = v4;
      v13 = 2112;
      v14 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Retaining transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }

  }
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A20EA690;
  v8[3] = &unk_1E4721EC8;
  v9 = v4;
  v10 = *(id *)(a1 + 32);
  v7 = v4;
  objc_msgSend(v3, "retainTransientSubscriptionAssertionWithCompletion:", v8);

}

void sub_1A20EA690(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2197D8C();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = *(_QWORD *)(a1 + 40);
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Successfully retained transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }

  }
}

void sub_1A20EA7B8(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  int v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4)
      goto LABEL_20;
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v13;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v15, 0xCu);

    }
LABEL_19:

    goto LABEL_20;
  }
  if (v4)
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v15 = 138412290;
      v16 = v3;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "StatusKit Subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v15, 0xCu);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "observers");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "ID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = IMOSLoggingEnabled();
  if (!v8)
  {
    if (!v9)
      goto LABEL_20;
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v14;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "No valid observers for handle %@, not retaining transient subscription assertion", (uint8_t *)&v15, 0xCu);

    }
    goto LABEL_19;
  }
  if (v9)
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v11;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, retaining assertion", (uint8_t *)&v15, 0xCu);

    }
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_20:

}

void sub_1A20EAA40(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20EAA08);
  }
  _Unwind_Resume(a1);
}

void sub_1A20EAD54(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint8_t buf[4];
  void *v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "subscriptionIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v12 = v4;
      v13 = 2112;
      v14 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Releasing transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }

  }
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A20EAEB8;
  v8[3] = &unk_1E4721EC8;
  v9 = *(id *)(a1 + 32);
  v10 = v4;
  v7 = v4;
  objc_msgSend(v3, "releaseTransientSubscriptionAssertionWithCompletion:", v8);

}

void sub_1A20EAEB8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2197DF4();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Successfully released transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }

  }
}

void sub_1A20EAFE0(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  NSObject *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  int v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4)
      goto LABEL_20;
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "ID");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v12;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v15, 0xCu);

    }
    goto LABEL_10;
  }
  if (v4)
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v15 = 138412290;
      v16 = v3;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "StatusKit Subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v15, 0xCu);
    }

  }
  objc_msgSend(*(id *)(a1 + 40), "observers");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "ID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = IMOSLoggingEnabled();
  if (v8)
  {
    if (v9)
    {
      OSLogHandleForIMFoundationCategory();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(*(id *)(a1 + 32), "ID");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = 138412290;
        v16 = v11;
        _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, not releasing transient subscription assertion", (uint8_t *)&v15, 0xCu);

      }
LABEL_10:

    }
  }
  else
  {
    if (v9)
    {
      OSLogHandleForIMFoundationCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(*(id *)(a1 + 32), "ID");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = 138412290;
        v16 = v14;
        _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "No valid observers for handle %@, releasing transient subscription assertion", (uint8_t *)&v15, 0xCu);

      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
LABEL_20:

}

void sub_1A20EB268(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20EB220);
  }
  _Unwind_Resume(a1);
}

void sub_1A20EB424(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void sub_1A20EB580(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "daemonController");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "invokeWithTarget:", v2);

}

void sub_1A20EC5E8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setObject:forKeyedSubscript:", v5, CFSTR("filePath"));
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setObject:forKeyedSubscript:", v6, CFSTR("success"));

  v7 = IMOSLoggingEnabled();
  if ((_DWORD)a2)
  {
    if (v7)
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v10 = 138412290;
        v11 = v5;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Successfully fetched high res image, filename is %@", (uint8_t *)&v10, 0xCu);
      }

    }
  }
  else
  {
    if (v7)
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = 138412290;
        v11 = v5;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Error: failed to fetch high res image, filename is %@", (uint8_t *)&v10, 0xCu);
      }

    }
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setObject:forKeyedSubscript:", CFSTR("Failed to fetch high res image"), CFSTR("error"));
  }

}

void *sub_1A20ED62C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessageForGUID", CFSTR("IMDPersistence"));
  off_1EE65F620 = result;
  return result;
}

void *sub_1A20ED658()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F630 = result;
  return result;
}

id _IMBestAccountForIMMessageItemDictionary(void *a1, void *a2, void *a3, void *a4, _QWORD *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _UNKNOWN **v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  objc_msgSend(v9, "objectForKey:", CFSTR("accountID"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = &off_1E471A000;
  if (!v13
    || (+[IMAccountController sharedInstance](IMAccountController, "sharedInstance"),
        v15 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v15, "accountForUniqueID:", v13),
        v16 = (id)objc_claimAutoreleasedReturnValue(),
        v15,
        !v16))
  {
    objc_msgSend(v9, "objectForKey:", CFSTR("service"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "service");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if (v19 == v18)
    {
      if (a5)
        *a5 = objc_retainAutorelease(v12);
      v16 = v12;
    }
    else
    {
      +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "bestAccountForService:", v18);
      v16 = (id)objc_claimAutoreleasedReturnValue();

      if (a5)
      {
        v16 = objc_retainAutorelease(v16);
        *a5 = v16;
      }
      v14 = &off_1E471A000;
    }

    if (!v16)
    {
      objc_msgSend(v10, "account");
      v16 = (id)objc_claimAutoreleasedReturnValue();
      if (!v16)
      {
        objc_msgSend(v14[55], "sharedInstance");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "accountForUniqueID:", v11);
        v16 = (id)objc_claimAutoreleasedReturnValue();

        if (!v16)
        {
          objc_msgSend(v14[55], "sharedInstance");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "bestAccountForService:", 0);
          v16 = (id)objc_claimAutoreleasedReturnValue();

        }
      }
    }
  }

  return v16;
}

void _IMCheckMessageForDDResults(void *a1)
{
  void *v1;
  int v2;
  int v3;
  void *v4;
  id v5;

  v5 = a1;
  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "capabilities");
  v3 = *MEMORY[0x1E0D36CD0] & v2;

  if (v3
    && (objc_msgSend(v5, "isTypingMessage") & 1) == 0
    && (objc_msgSend(v5, "wasDataDetected") & 1) == 0
    && objc_msgSend(v5, "messageID"))
  {
    +[IMDDController sharedInstance](IMDDController, "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "scanMessage:completionBlock:", v5, &unk_1E471D958);

  }
}

void sub_1A20EDF48(uint64_t a1, int a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  id v11;

  v4 = a3;
  if (a2)
  {
    v11 = v4;
    objc_msgSend(v4, "sender");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "account");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "service");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "supportsDatabaseStorage");

    v4 = v11;
    if (v8)
    {
      +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "_imMessageItem");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "updateMessage:", v10);

      v4 = v11;
    }
  }

}

void sub_1A20EE97C(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "remoteProxy");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "requestOneTimeCodeStatus");

}

id sub_1A20EFA54(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v18 = v4;
  objc_msgSend(v4, "participants");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v21;
    v10 = MEMORY[0x1E0C9AA60];
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v21 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * v11), "ID");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "imHandleWithID:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v13, "cnContactWithKeys:", v10);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        if (v14 && objc_msgSend(v3, "containsObject:", v14))
        {
          objc_msgSend(v14, "identifier");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "setObject:forKeyedSubscript:", v13, v15);

        }
        ++v11;
      }
      while (v8 != v11);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v8);
  }

  v16 = (void *)objc_msgSend(v19, "copy");
  return v16;
}

BOOL sub_1A20EFC30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;

  v4 = objc_msgSend(a3, "count");
  return v4 == objc_msgSend(*(id *)(a1 + 32), "count");
}

id sub_1A20EFC68(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id obj;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  obj = v1;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * v6);
        +[IMHandleRegistrar sharedInstance](IMHandleRegistrar, "sharedInstance");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "identifier");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "handlesForCNIdentifier:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "allObjects");
        v11 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v11, "__imArrayByApplyingBlock:", &unk_1E471DDB8);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObjectsFromArray:", v12);

        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v4);
  }

  v13 = (void *)objc_msgSend(v2, "copy");
  return v13;
}

id sub_1A20EFE10(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id obj;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  obj = v1;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * v6);
        +[IMHandleRegistrar sharedInstance](IMHandleRegistrar, "sharedInstance");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "identifier");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "handlesForCNIdentifier:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "allObjects");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "identifier");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "setObject:forKeyedSubscript:", v11, v12);

        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v4);
  }

  v13 = (void *)objc_msgSend(v2, "copy");
  return v13;
}

void sub_1A20EFFB0(void *a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  void (**v8)(id, _QWORD);

  v8 = a3;
  v5 = (void *)MEMORY[0x1E0D39880];
  v6 = a2;
  objc_msgSend(a1, "allObjects");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v5) = objc_msgSend(v5, "refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:", v7, v6, CFSTR("+[IMHandle bestHandlesForCNContacts:]"), MEMORY[0x1E0C80D38], v8);

  if ((v5 & 1) == 0)
    v8[2](v8, 0);

}

void sub_1A20F0050(uint64_t a1, void *a2)
{
  id v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  char v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = *(_BYTE *)(a1 + 64) == 0;
  v5 = *(void **)(a1 + 32);
  +[IMService iMessageService](IMService, "iMessageService");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    sub_1A20F035C(v5, v3, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v7, "count"))
    {
      objc_msgSend(*(id *)(a1 + 40), "anyObject");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "identifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "objectForKeyedSubscript:", v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "account");
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          v22 = v7;
          v23 = 2112;
          v24 = v11;
          _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 4: Found \"best\" iMessage handles for all recipients: %@ for account: %@", buf, 0x16u);
        }

      }
      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();

      goto LABEL_15;
    }
LABEL_14:

    v14 = *(void **)(a1 + 48);
    v15 = (void *)*MEMORY[0x1E0D34230];
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = sub_1A20F07DC;
    v16[3] = &unk_1E4722008;
    v20 = *(_BYTE *)(a1 + 64);
    v17 = *(id *)(a1 + 32);
    v18 = *(id *)(a1 + 40);
    v19 = *(id *)(a1 + 56);
    sub_1A20EFFB0(v14, v15, v16);

    v7 = v17;
    goto LABEL_15;
  }
  sub_1A20F052C(v5, v3, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v7, "count"))
    goto LABEL_14;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v7;
      _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 4: Found \"valid\" iMessage handles for all recipients: %@", buf, 0xCu);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_15:

}

id sub_1A20F035C(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v7, "isEnabled"))
  {
    v20 = v6;
    v21 = v5;
    sub_1A20F052C(v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v10 = v8;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v23;
      while (2)
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v23 != v13)
            objc_enumerationMutation(v10);
          v15 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * i);
          objc_msgSend(v10, "objectForKeyedSubscript:", v15, v20, v21, (_QWORD)v22);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          if (!objc_msgSend(v16, "count"))
          {

            v18 = 0;
            goto LABEL_13;
          }
          +[IMHandle bestIMHandleInArray:](IMHandle, "bestIMHandleInArray:", v16);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "setObject:forKeyedSubscript:", v17, v15);

        }
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
        if (v12)
          continue;
        break;
      }
    }

    v18 = v9;
LABEL_13:

    v6 = v20;
    v5 = v21;
  }
  else
  {
    v18 = 0;
  }

  return v18;
}

id sub_1A20F052C(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id obj;
  uint64_t v29;
  uint64_t v30;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v7, "isEnabled"))
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v31 = (id)objc_claimAutoreleasedReturnValue();
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v25 = v5;
    obj = v5;
    v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
    if (v27)
    {
      v26 = *(_QWORD *)v37;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v37 != v26)
            objc_enumerationMutation(obj);
          v29 = v8;
          v9 = *(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * v8);
          objc_msgSend(obj, "objectForKeyedSubscript:", v9);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0C99DE8], "array");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v30 = v9;
          objc_msgSend(v31, "setObject:forKeyedSubscript:", v11, v9);

          v34 = 0u;
          v35 = 0u;
          v32 = 0u;
          v33 = 0u;
          v12 = v10;
          v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
          if (v13)
          {
            v14 = v13;
            v15 = *(_QWORD *)v33;
            do
            {
              for (i = 0; i != v14; ++i)
              {
                if (*(_QWORD *)v33 != v15)
                  objc_enumerationMutation(v12);
                v17 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * i);
                objc_msgSend(v17, "service");
                v18 = (id)objc_claimAutoreleasedReturnValue();

                if (v18 == v7)
                {
                  objc_msgSend(v17, "ID");
                  v19 = (void *)objc_claimAutoreleasedReturnValue();
                  IMChatCanonicalIDSIDsForAddress();
                  v20 = (void *)objc_claimAutoreleasedReturnValue();

                  objc_msgSend(v6, "objectForKeyedSubscript:", v20);
                  v21 = (void *)objc_claimAutoreleasedReturnValue();
                  v22 = objc_msgSend(v21, "integerValue");

                  if (v22 != 2)
                  {
                    objc_msgSend(v31, "objectForKeyedSubscript:", v30);
                    v23 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v23, "addObject:", v17);

                  }
                }
              }
              v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
            }
            while (v14);
          }

          v8 = v29 + 1;
        }
        while (v29 + 1 != v27);
        v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
      }
      while (v27);
    }

    v5 = v25;
  }
  else
  {
    v31 = 0;
  }

  return v31;
}

void sub_1A20F07DC(uint64_t a1, void *a2)
{
  id v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = *(_BYTE *)(a1 + 56) == 0;
  v5 = *(void **)(a1 + 32);
  +[IMService smsService](IMService, "smsService");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    sub_1A20F035C(v5, v3, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v7, "count"))
    {
      objc_msgSend(*(id *)(a1 + 40), "anyObject");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "identifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "objectForKeyedSubscript:", v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "account");
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          v15 = 138412546;
          v16 = v7;
          v17 = 2112;
          v18 = v11;
          _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 5: Found \"best\" SMS handles for all recipients: %@ for account: %@", (uint8_t *)&v15, 0x16u);
        }

      }
      (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

      goto LABEL_19;
    }
    goto LABEL_14;
  }
  sub_1A20F052C(v5, v3, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v7, "count"))
  {
LABEL_14:

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        LOWORD(v15) = 0;
        _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "[handlesForContacts] Failed to find handles for contacts", (uint8_t *)&v15, 2u);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    goto LABEL_19;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v15 = 138412290;
      v16 = v7;
      _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 5: Found \"valid\" SMS handles for all recipients: %@", (uint8_t *)&v15, 0xCu);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

LABEL_19:
}

uint64_t sub_1A20F0AD0(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "account");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isOperational");

  return v3;
}

uint64_t sub_1A20F0B08(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v4 = a3;
  objc_msgSend(a2, "lastFinishedMessageDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "lastFinishedMessageDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "compare:", v6);
  return v7;
}

uint64_t sub_1A20F0B74(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v5 = a3;
  v6 = a2;
  +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "accountForUniqueID:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "accountForUniqueID:", v5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = *(void **)(a1 + 32);
  objc_msgSend(v8, "service");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "name");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKeyedSubscript:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = *(void **)(a1 + 32);
  objc_msgSend(v10, "service");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "name");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "objectForKeyedSubscript:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v14)
    v14 = &unk_1E475ED30;
  if (!v18)
    v18 = &unk_1E475ED30;
  v19 = objc_msgSend(v14, "compare:", v18);

  return v19;
}

id sub_1A20F0CC0(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a2, "ID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IMChatCanonicalIDSIDsForAddress();
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1A20F0CFC(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint8_t buf[8];
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = (_QWORD *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "conversationManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addDelegate:queue:", *v2, MEMORY[0x1E0C80D38]);

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Posting TUConversations loaded notification for all active conversation we have", buf, 2u);
    }

  }
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  objc_msgSend(*(id *)(a1 + 32), "conversationManager", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "activeConversations");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v10, v15, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v11;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(a1 + 32), "_postMultiWayStateChangedNotification:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * v9++));
      }
      while (v7 != v9);
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v10, v15, 16);
    }
    while (v7);
  }

}

uint64_t sub_1A20F18A8()
{
  if (qword_1ECF12360 != -1)
    dispatch_once(&qword_1ECF12360, &unk_1E4722070);
  return byte_1EE65EA80;
}

void sub_1A20F18E8()
{
  void *v0;
  char v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "bundleIdentifier");
  v2 = (id)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v2, "isEqualToString:", CFSTR("com.apple.MobileSMS.MessagesAssistantExtension")) & 1) != 0)
    v1 = 1;
  else
    v1 = objc_msgSend(v2, "isEqualToString:", CFSTR("com.apple.messages.AssistantExtension"));
  byte_1EE65EA80 = v1;

}

id sub_1A20F1964()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)qword_1ECF123A0;
  if (!qword_1ECF123A0)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)qword_1ECF123A0;
    qword_1ECF123A0 = v1;

    v0 = (void *)qword_1ECF123A0;
  }
  return v0;
}

id IMCopyGUIDForChatOnAccount(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v24;
  id v25;
  id obj;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "internalName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "chatStyle") == 45)
    goto LABEL_17;
  v24 = v4;
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = v3;
  objc_msgSend(v6, "allGUIDsForChat:", v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  obj = v7;
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
  if (v8)
  {
    v9 = v8;
    v10 = 0;
    v11 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v28 != v11)
          objc_enumerationMutation(obj);
        v13 = *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * i);
        IMComponentsFromChatGUID();
        v14 = 0;
        if (objc_msgSend(v14, "isEqualToIgnoringCase:", v5))
        {
          +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "existingChatWithGUID:", v13);
          v16 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v10
            || (objc_msgSend(v16, "lastFinishedMessageDate"),
                v17 = (void *)objc_claimAutoreleasedReturnValue(),
                objc_msgSend(v10, "lastFinishedMessageDate"),
                v18 = (void *)objc_claimAutoreleasedReturnValue(),
                v19 = objc_msgSend(v17, "compare:", v18),
                v18,
                v17,
                v19 == 1))
          {
            v20 = v16;

            v10 = v20;
          }

        }
      }
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    }
    while (v9);
  }
  else
  {
    v10 = 0;
  }

  objc_msgSend(v10, "guid");
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = v24;
  v3 = v25;
  if (!v21)
  {
LABEL_17:
    objc_msgSend(v3, "chatIdentifier");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "chatStyle");
    v21 = (void *)IMCopyGUIDForChat();

  }
  return v21;
}

id IMFormattedDisplayStringForIDInAddressBook(void *a1, _QWORD *a2)
{
  return IMFormattedDisplayStringForIDWithCountryCodeInAddressBook(a1, 0, a2);
}

id IMFormattedDisplayStringForIDWithCountryCodeInAddressBook(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a1;
  v6 = a2;
  if (!objc_msgSend(v5, "length"))
    goto LABEL_7;
  objc_msgSend(MEMORY[0x1E0D397A8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchCNContactForHandleWithID:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D397A8], "displayNameForContact:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v9, "length"))
  {

LABEL_7:
    IMFormattedDisplayStringForIDWithCountryCode();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_8;
  }
  if (a3)
    *a3 = 1;

LABEL_8:
  return v9;
}

id IMFormattedDisplayStringForIDWithAccountInAddressBook(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v5 = a2;
  v6 = a1;
  if (objc_msgSend(v5, "length"))
  {
    +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "accountForUniqueID:", v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v8, "countryCode");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  IMFormattedDisplayStringForIDWithCountryCodeInAddressBook(v6, v9, a3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

id IMUnformattedDisplayStringForIDInAddressBook(void *a1, _QWORD *a2)
{
  return IMUnformattedDisplayStringForIDWithCountryCodeInAddressBook(a1, 0, a2);
}

id IMUnformattedDisplayStringForIDWithCountryCodeInAddressBook(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a1;
  v6 = a2;
  if (!objc_msgSend(v5, "length"))
    goto LABEL_7;
  objc_msgSend(MEMORY[0x1E0D397A8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fetchCNContactForHandleWithID:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D397A8], "displayNameForContact:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v9, "length"))
  {

LABEL_7:
    IMUnformattedDisplayStringForIDWithCountryCode();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_8;
  }
  if (a3)
    *a3 = 1;

LABEL_8:
  return v9;
}

id IMUnformattedDisplayStringForIDWithAccountInAddressBook(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v5 = a2;
  v6 = a1;
  if (objc_msgSend(v5, "length"))
  {
    +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "accountForUniqueID:", v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v8, "countryCode");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  IMUnformattedDisplayStringForIDWithCountryCodeInAddressBook(v6, v9, a3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

void sub_1A20F1F58(void *a1)
{
  void *v1;
  NSObject *v2;
  void *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "IMCoreSetupTimingCollection");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMEventCategory();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        v4 = 138412290;
        v5 = qword_1ECF12488;
        _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "IMCore setup timing: %@", (uint8_t *)&v4, 0xCu);
      }

    }
    v3 = (void *)qword_1ECF12488;
    qword_1ECF12488 = 0;

  }
}

id IMCoreLocalizedString(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = a1;
  sub_1A20F1964();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", v4, v3, CFSTR("IMCoreLocalizable"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void IMIndexesFromOrderedCollectionDifference(void *a1, _QWORD *a2, _QWORD *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "insertions");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "removals");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "hasChanges"))
  {
    v22 = a3;
    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    v10 = v8;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v28;
      do
      {
        v14 = 0;
        do
        {
          if (*(_QWORD *)v28 != v13)
            objc_enumerationMutation(v10);
          objc_msgSend(v6, "addIndex:", objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v14++), "index"));
        }
        while (v12 != v14);
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
      }
      while (v12);
    }

    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    v15 = v9;
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v24;
      do
      {
        v19 = 0;
        do
        {
          if (*(_QWORD *)v24 != v18)
            objc_enumerationMutation(v15);
          objc_msgSend(v7, "addIndex:", objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * v19++), "index"));
        }
        while (v17 != v19);
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
      }
      while (v17);
    }

    a3 = v22;
  }
  v20 = objc_retainAutorelease(v6);
  *a2 = v20;
  v21 = objc_retainAutorelease(v7);
  *a3 = v21;

}

uint64_t IMIsEnrolledInContactKeyVerification()
{
  void *v0;
  uint64_t v1;

  +[IMKeyTransparencyController sharedController](IMKeyTransparencyController, "sharedController");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "selfOptedIn");

  return v1;
}

float IMSendProgressProgressForSatellite(void *a1, unint64_t *a2, unint64_t *a3, double *a4, double a5)
{
  id v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  double v13;
  double v14;
  float v15;
  unint64_t v16;
  double v17;
  double v19;
  double v20;
  double v21;
  _QWORD v22[9];
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  v9 = a1;
  v39 = 0;
  v40 = &v39;
  v41 = 0x2020000000;
  v42 = 0;
  v35 = 0;
  v36 = &v35;
  v37 = 0x2020000000;
  v38 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x2020000000;
  v34 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x2020000000;
  v30 = 0;
  v23 = 0;
  v24 = (double *)&v23;
  v25 = 0x2020000000;
  v26 = 0;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = sub_1A20F2C64;
  v22[3] = &unk_1E47220B8;
  v22[4] = &v23;
  v22[5] = &v39;
  v22[6] = &v35;
  v22[7] = &v31;
  v22[8] = &v27;
  objc_msgSend(v9, "enumerateKeysAndObjectsUsingBlock:", v22);
  v10 = v36[3] + v40[3];
  v11 = v28[3] + v32[3] + v10;
  if (v28[3] + v32[3])
  {
    v12 = v24[3];
    v13 = v12 / a5;
    if (v12 / a5 > 0.5)
    {
      if (v13 <= 1.0)
      {
        v19 = (v12 - a5 * 0.5) * 0.3 / (a5 * 0.5) + 0.5;
      }
      else
      {
        v14 = v12 - a5;
        if (v14 <= 30.0)
        {
          v20 = 0.8;
          v21 = 0.00333333333;
        }
        else if (v14 <= 60.0)
        {
          v14 = v14 + -30.0;
          v20 = 0.9;
          v21 = 0.00166666667;
        }
        else
        {
          if (v14 > 105.0)
          {
            v15 = 0.98;
            if (!a2)
              goto LABEL_19;
            goto LABEL_15;
          }
          v14 = v14 + -60.0;
          v20 = 0.95;
          v21 = 0.000666666667;
        }
        v19 = v20 + v14 * v21;
      }
      v15 = v19;
      if (!a2)
        goto LABEL_19;
      goto LABEL_15;
    }
    v15 = v13;
    if (!a2)
      goto LABEL_19;
LABEL_15:
    if (v11 >= v10 + 1)
      v16 = v10 + 1;
    else
      v16 = v11;
    *a2 = v16;
    goto LABEL_19;
  }
  if (v11)
    v15 = 1.0;
  else
    v15 = 0.0;
  v11 = 0;
  if (a2)
    goto LABEL_15;
LABEL_19:
  if (a3)
    *a3 = v11;
  if (a4)
  {
    v17 = v24[3];
    if (v17 > 0.0)
      *a4 = v17;
  }
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&v39, 8);

  return v15;
}

void sub_1A20F2C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Block_object_dispose((const void *)(v27 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1A20F2C64(_QWORD *a1, uint64_t a2, void *a3)
{
  char isKindOfClass;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  void *v14;
  char v15;
  id v16;

  v16 = a3;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v16;
  if ((isKindOfClass & 1) != 0)
  {
    v6 = v16;
    objc_msgSend(v6, "clientSendTime");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
      objc_msgSend(v6, "clientSendTime");
    else
      objc_msgSend(v6, "time");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "timeIntervalSinceNow");
    v10 = fabs(v9);
    v11 = *(_QWORD *)(a1[4] + 8);
    v12 = *(double *)(v11 + 24);
    if (v12 == 0.0)
    {
      *(double *)(v11 + 24) = v10;
      v11 = *(_QWORD *)(a1[4] + 8);
      v12 = *(double *)(v11 + 24);
    }
    if (v10 <= v12)
      *(double *)(v11 + 24) = v10;
    if (objc_msgSend(v6, "isSent") && (objc_msgSend(v6, "isLocatingMessage") & 1) == 0)
    {
      v13 = a1[5];
    }
    else if (objc_msgSend(v6, "errorCode"))
    {
      v13 = a1[6];
    }
    else
    {
      objc_msgSend(v6, "fileTransferGUIDs");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v14, "count"))
      {

      }
      else
      {
        v15 = objc_msgSend(v6, "isLocatingMessage");

        if ((v15 & 1) == 0)
        {
          v13 = a1[8];
          goto LABEL_18;
        }
      }
      v13 = a1[7];
    }
LABEL_18:
    ++*(_QWORD *)(*(_QWORD *)(v13 + 8) + 24);

    v5 = v16;
  }

}

void sub_1A20F2F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20F2F5C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v5, "payloadData");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += objc_msgSend(v4, "length");

  }
}

void sub_1A20F3434(_Unwind_Exception *a1, int a2)
{
  uint64_t v2;

  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2)
      JUMPOUT(0x1A20F33CCLL);
    JUMPOUT(0x1A20F33B8);
  }
  _Unwind_Resume(a1);
}

void sub_1A20F45D0(_Unwind_Exception *a1, int a2)
{
  uint64_t v2;

  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2)
      JUMPOUT(0x1A20F4568);
    JUMPOUT(0x1A20F4554);
  }
  _Unwind_Resume(a1);
}

void sub_1A20F5538(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A20F5500);
  }
  _Unwind_Resume(a1);
}

void sub_1A20F5A7C(_Unwind_Exception *a1, int a2)
{
  uint64_t v2;

  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2)
      JUMPOUT(0x1A20F5A1CLL);
    JUMPOUT(0x1A20F5A08);
  }
  _Unwind_Resume(a1);
}

void sub_1A20F5AF8()
{
  uint64_t v0;
  void *v1;

  v0 = objc_opt_new();
  v1 = (void *)qword_1EE65F358;
  qword_1EE65F358 = v0;

}

void sub_1A20F5C98(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD block[5];
  id v7;
  id v8;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A20F5D30;
  block[3] = &unk_1E471F3E8;
  v4 = *(id *)(a1 + 40);
  v7 = v3;
  v8 = v4;
  block[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

void sub_1A20F5D30(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "_urlFromAddressList:", *(_QWORD *)(a1 + 40));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

void sub_1A20F5D7C(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "_urlFromAddressList:", 0);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

void sub_1A20F6058(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (_IMWillLog())
  {
    v18 = v3;
    v19 = *(_QWORD *)(a1 + 32);
    _IMAlwaysLog();
  }
  if (objc_msgSend(v3, "count", v18, v19))
  {
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v4 = v3;
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v21;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v21 != v7)
            objc_enumerationMutation(v4);
          objc_msgSend(v4, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * i));
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          v10 = *(void **)(a1 + 40);
          objc_msgSend(v9, "ID");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "addObject:", v11);

        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      }
      while (v6);
    }
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "contact");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "phoneNumbers");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "firstObject");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "value");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "stringValue");
    v4 = (id)objc_claimAutoreleasedReturnValue();

    v16 = *(void **)(a1 + 40);
    if (v4)
    {
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "appleID");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "addObject:", v17);

    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

uint64_t sub_1A20F625C(uint64_t a1)
{
  if (_IMWillLog())
    _IMAlwaysLog();
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_1A20F6478()
{
  IMIDStatusController *v0;
  void *v1;

  v0 = objc_alloc_init(IMIDStatusController);
  v1 = (void *)qword_1ECF12618;
  qword_1ECF12618 = (uint64_t)v0;

}

void sub_1A20F65CC(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  void *v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint8_t v32[128];
  uint8_t buf[4];
  id v34;
  __int16 v35;
  void *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v2 = *(id *)(a1 + 32);
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  +[IMServiceImpl allServices](IMServiceImpl, "allServices");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v28, buf, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v29;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v29 != v5)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * i);
        objc_msgSend(v7, "idsServiceNames");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "containsObject:", v2);

        if ((v9 & 1) != 0)
        {
          v23 = v7;

          goto LABEL_12;
        }
      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v28, buf, 16);
      if (v4)
        continue;
      break;
    }
  }

  if (objc_msgSend(v2, "isEqualToIgnoringCase:", *MEMORY[0x1E0D38F68])
    || objc_msgSend(v2, "isEqualToIgnoringCase:", CFSTR("Messenger"))
    || objc_msgSend(v2, "isEqualToIgnoringCase:", CFSTR("Madrid")))
  {
    +[IMService iMessageService](IMServiceImpl, "iMessageService");
    v23 = (id)objc_claimAutoreleasedReturnValue();
  }
  else if (objc_msgSend(v2, "isEqualToIgnoringCase:", *MEMORY[0x1E0D38F40])
         || objc_msgSend(v2, "isEqualToIgnoringCase:", CFSTR("Venice")))
  {
    +[IMService facetimeService](IMServiceImpl, "facetimeService");
    v23 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v23 = 0;
  }
LABEL_12:

  objc_msgSend(*(id *)(a1 + 40), "_stripFZIDPrefix");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v34 = v23;
      v35 = 2112;
      v36 = v12;
      _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "Found IMService %@ for service with name: %@", buf, 0x16u);
    }

  }
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "activeAccountsForService:", v23);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
  if (v15)
  {
    v16 = *(_QWORD *)v25;
    do
    {
      for (j = 0; j != v15; ++j)
      {
        if (*(_QWORD *)v25 != v16)
          objc_enumerationMutation(v14);
        v18 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * j);
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v19 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v34 = v18;
            _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "   Found account: %@", buf, 0xCu);
          }

        }
        objc_msgSend(v18, "existingIMHandleWithID:", v10);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v21 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
          {
            v22 = *(void **)(a1 + 40);
            *(_DWORD *)buf = 138412802;
            v34 = v22;
            v35 = 2112;
            v36 = v10;
            v37 = 2112;
            v38 = v20;
            _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "   URI: %@   ID: %@   Existing handle: %@", buf, 0x20u);
          }

        }
        if (v20)
          objc_msgSend(v20, "_setIDStatus:", *(_QWORD *)(a1 + 48));

      }
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
    }
    while (v15);
  }

}

id sub_1A20F6E18(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "idsServiceNames");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "firstObject");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1A20F6E50()
{
  dispatch_semaphore_t v0;
  void *v1;

  v0 = dispatch_semaphore_create(0);
  v1 = (void *)qword_1EE65F640;
  qword_1EE65F640 = (uint64_t)v0;

}

intptr_t sub_1A20F6E74(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  return dispatch_semaphore_signal((dispatch_semaphore_t)qword_1EE65F640);
}

uint64_t sub_1A20F7444(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMEventCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v7 = 138412546;
      v8 = v5;
      v9 = 1024;
      v10 = a2;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Received query result for ID: %@  %d", (uint8_t *)&v7, 0x12u);
    }

  }
  return objc_msgSend(*(id *)(a1 + 40), "_processIDStatusResponseForURI:resultStatus:forService:", *(_QWORD *)(a1 + 32), a2, *(_QWORD *)(a1 + 48));
}

id sub_1A20F7B34(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v3, "count"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v14;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v5);
        +[IMFindMyHandle handleWithFMFHandle:](IMFindMyHandle, "handleWithFMFHandle:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v9), (_QWORD)v13);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "addObject:", v10);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v7);
  }

  v11 = (void *)objc_msgSend(v4, "copy");
  return v11;
}

id sub_1A20F7C80(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v3, "count"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v14;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v5);
        +[IMFindMyHandle handleWithFMLHandle:](IMFindMyHandle, "handleWithFMLHandle:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v9), (_QWORD)v13);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "addObject:", v10);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v7);
  }

  v11 = (void *)objc_msgSend(v4, "copy");
  return v11;
}

id sub_1A20F7DCC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v3, "count"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v17;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v17 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * v9);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(v10, "handle", (_QWORD)v16);
          v11 = (void *)objc_claimAutoreleasedReturnValue();

          if (v11)
          {
            objc_msgSend(v10, "handle");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            +[IMFindMyHandle handleWithFMLHandle:](IMFindMyHandle, "handleWithFMLHandle:", v12);
            v13 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v4, "addObject:", v13);
          }
        }
        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v7);
  }

  v14 = (void *)objc_msgSend(v4, "copy");
  return v14;
}

id sub_1A20F7F6C(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithCapacity:", objc_msgSend(a1, "count"));
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v3 = a1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * v7);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v8, "fmfHandle", (_QWORD)v13);
          v9 = (void *)objc_claimAutoreleasedReturnValue();

          if (v9)
          {
            objc_msgSend(v8, "fmfHandle");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v2, "addObject:", v10);

          }
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v5);
  }

  v11 = (void *)objc_msgSend(v2, "copy");
  return v11;
}

id sub_1A20F80F0(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithCapacity:", objc_msgSend(a1, "count"));
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v3 = a1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * v7);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v8, "fmlHandle", (_QWORD)v13);
          v9 = (void *)objc_claimAutoreleasedReturnValue();

          if (v9)
          {
            objc_msgSend(v8, "fmlHandle");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v2, "addObject:", v10);

          }
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v5);
  }

  v11 = (void *)objc_msgSend(v2, "copy");
  return v11;
}

IMMutableChatContext *sub_1A20FA798(void *a1, void *a2)
{
  id v3;
  id v4;
  IMMutableChatContext *v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = a1;
  v4 = a2;
  v5 = objc_alloc_init(IMMutableChatContext);
  v6 = sub_1A2110BD4(v3, v4);

  -[IMMutableChatContext setSpam:](v5, "setSpam:", v6);
  if ((objc_msgSend(v3, "isMapKitBusinessChat") & 1) != 0)
  {
    v7 = 3;
  }
  else if (objc_msgSend(v3, "isSMS"))
  {
    v7 = 1;
  }
  else
  {
    v7 = 2;
  }
  if (objc_msgSend(v3, "isStewieChat"))
    v7 = 4;
  if (objc_msgSend(v3, "isStewieSharingChat"))
    v8 = 5;
  else
    v8 = v7;
  -[IMMutableChatContext setServiceType:](v5, "setServiceType:", v8);
  -[IMMutableChatContext setFilterCategory:](v5, "setFilterCategory:", objc_msgSend(v3, "isFiltered"));
  -[IMMutableChatContext setSendersUnknown:](v5, "setSendersUnknown:", objc_msgSend(v3, "hasKnownParticipantsCache") ^ 1);
  -[IMMutableChatContext setResponded:](v5, "setResponded:", objc_msgSend(v3, "repliedToChat"));
  objc_msgSend(v3, "conversation");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "UUID");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[IMMutableChatContext setActiveTelephonyConversationUUID:](v5, "setActiveTelephonyConversationUUID:", v10);

  objc_msgSend(v3, "showingEditHistoryForChatItemGUIDs");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[IMMutableChatContext setShowingEditHistoryForChatItemGUIDs:](v5, "setShowingEditHistoryForChatItemGUIDs:", v11);

  -[IMMutableChatContext setIsChatBot:](v5, "setIsChatBot:", objc_msgSend(v3, "isChatBot"));
  return v5;
}

uint64_t sub_1A20FA900(void *a1, void *a2, void *a3, int a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  int v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v22;
  int v23;
  void *v24;
  uint64_t v25;
  int v26;
  void *v27;
  void *v28;
  int v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isTranscriptSharingEnabled");

  if (v11 && objc_msgSend(v7, "isStewieSharingChat"))
  {
    v12 = v8;
    v13 = v9;
    if (v12)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        if (!v13)
        {
          v20 = 1;
          goto LABEL_16;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v12, "sender");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "sender");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v14, "isEqualToString:", v15))
          {
            objc_msgSend(v12, "messageSummaryInfo");
            v16 = (void *)objc_claimAutoreleasedReturnValue();

            v17 = (_QWORD *)MEMORY[0x1E0D383D0];
            if (v16)
            {
              objc_msgSend(v12, "messageSummaryInfo");
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v18, "_numberForKey:", *v17);
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              v34 = (int)objc_msgSend(v19, "intValue");

            }
            else
            {
              v34 = 0;
            }
            objc_msgSend(v13, "messageSummaryInfo");
            v30 = (void *)objc_claimAutoreleasedReturnValue();

            if (v30)
            {
              objc_msgSend(v13, "messageSummaryInfo");
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "_numberForKey:", *v17);
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              v33 = (int)objc_msgSend(v32, "intValue");

            }
            else
            {
              v33 = 0;
            }
            v20 = v34 != v33;
          }
          else
          {
            v20 = 1;
          }

          goto LABEL_16;
        }
      }
    }
    v20 = 0;
LABEL_16:

LABEL_17:
    goto LABEL_18;
  }
  if (a4 != 45
    && objc_msgSend(v8, "_hasMessageChatItem")
    && !sub_1A20FAC64(v8)
    && (objc_msgSend(v8, "isFromMe") & 1) == 0)
  {
    objc_msgSend(v8, "sender");
    v12 = (id)objc_claimAutoreleasedReturnValue();
    if (!v12
      || (objc_msgSend(v9, "sender"),
          v22 = (void *)objc_claimAutoreleasedReturnValue(),
          v23 = objc_msgSend(v12, "isEqualToString:", v22),
          v22,
          v23))
    {
      if (!sub_1A20FAC64(v9))
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0
          || (objc_msgSend(v8, "replyCountsByPart"),
              v24 = (void *)objc_claimAutoreleasedReturnValue(),
              v25 = objc_msgSend(v24, "count"),
              v24,
              !v25))
        {
          v26 = objc_msgSend(v8, "isReply");
          if (v26 == objc_msgSend(v9, "isReply"))
          {
            if (objc_msgSend(v8, "isReply") && objc_msgSend(v9, "isReply"))
            {
              objc_msgSend(v8, "threadIdentifier");
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v9, "threadIdentifier");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              v29 = objc_msgSend(v27, "isEqualToString:", v28);

              v20 = v29 ^ 1u;
              goto LABEL_17;
            }
            if (objc_msgSend(v9, "_hasMessageChatItem") && !sub_1A20FB910(v8, v9))
            {
              v20 = sub_1A20FBA50(v8, v9);
              goto LABEL_17;
            }
          }
        }
      }
    }
    v20 = 1;
    goto LABEL_17;
  }
  v20 = 0;
LABEL_18:

  return v20;
}

BOOL sub_1A20FAC64(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  _BOOL8 v5;
  void *v6;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = v1;
    objc_msgSend(v2, "retractedPartIndexes");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v3, "count"))
    {
      objc_msgSend(v2, "body");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v4, "__im_countMessageParts"))
      {
        v5 = 0;
      }
      else
      {
        objc_msgSend(v2, "subject");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v5 = objc_msgSend(v6, "length") == 0;

      }
    }
    else
    {
      v5 = 0;
    }

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1A20FAF48(uint64_t a1, void *a2)
{
  void *v3;
  __CFArray *v4;
  BOOL v5;
  id value;

  value = a2;
  objc_msgSend(*(id *)(a1 + 32), "_replyCountChatItemForChatItem:parentItem:threadOriginatorMessageItem:", value, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(__CFArray **)(a1 + 56);
  if (value && v4)
  {
    CFArrayAppendValue(v4, value);
    v4 = *(__CFArray **)(a1 + 56);
  }
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
    CFArrayAppendValue(v4, v3);

}

void sub_1A20FB560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A20FB578(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v7;

  v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v7, "integerValue");
    *a5 = 1;
  }

}

BOOL sub_1A20FB910(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _BOOL8 v9;
  void *v10;
  void *v11;
  double v12;

  v3 = a1;
  v4 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_12;
  if (objc_msgSend(v3, "changeType"))
    goto LABEL_12;
  objc_msgSend(v3, "_senderHandle");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "ID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "_otherHandle");
  v7 = objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v7, "ID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  LOBYTE(v7) = objc_msgSend(v6, "isEqualToString:", v8);
  if ((v7 & 1) != 0)
  {
    v9 = 0;
  }
  else
  {
LABEL_12:
    if (v4 && objc_msgSend(v3, "_hasMessageChatItem"))
    {
      objc_msgSend(v3, "time");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "time");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "timeIntervalSinceDate:", v11);
      v9 = fabs(v12) >= 3600.0;

    }
    else
    {
      v9 = 1;
    }
  }

  return v9;
}

BOOL sub_1A20FBA50(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  _BOOL8 v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char isKindOfClass;
  void *v17;
  char v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  char v24;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "_service");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_service");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isPriusEnabled");

  if (!v8
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    +[IMService rcsService](IMService, "rcsService");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5 == v10)
    {
      +[IMService smsService](IMService, "smsService");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6 == v11)
      {
        objc_opt_class();
        isKindOfClass = objc_opt_isKindOfClass();

        v17 = v3;
        if ((isKindOfClass & 1) != 0)
          goto LABEL_20;
        goto LABEL_9;
      }

      v10 = v5;
    }

LABEL_9:
    +[IMService rcsService](IMService, "rcsService");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6 != v12)
    {
LABEL_12:

LABEL_13:
      v14 = 0;
      goto LABEL_14;
    }
    +[IMService smsService](IMService, "smsService");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5 != v13)
    {

      v12 = v6;
      goto LABEL_12;
    }
    objc_opt_class();
    v18 = objc_opt_isKindOfClass();

    v17 = v4;
    if ((v18 & 1) == 0)
      goto LABEL_13;
LABEL_20:
    v19 = v17;
    v14 = v19;
    if (v19)
    {
      if ((objc_msgSend(v19, "isDelivered") & 1) == 0)
      {
        +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        +[IMService rcsService](IMService, "rcsService");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "bestAccountForService:", v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "destinationCallerID");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = objc_msgSend(v22, "handleSupportsNetworkFallback:", v23);

        if ((v24 & 1) != 0)
        {
          v9 = 0;
          goto LABEL_15;
        }
      }
    }
LABEL_14:
    v9 = v5 != v6;
LABEL_15:

    goto LABEL_16;
  }
  v9 = 0;
LABEL_16:

  return v9;
}

BOOL sub_1A20FBD2C(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _BOOL8 v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  NSObject *v26;
  const __CFString *v27;
  NSObject *v28;
  id obj;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD v34[4];
  id v35;
  uint8_t v36[4];
  const __CFString *v37;
  uint8_t buf[4];
  uint64_t v39;
  __int16 v40;
  id v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v3, "cachedShouldShowReportSpam"))
  {
    v7 = v3;
    v8 = v4;
    objc_msgSend(v8, "__imArrayByFilteringWithBlock:", &unk_1E4722728);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v9, "count"))
      goto LABEL_17;
    objc_msgSend(v9, "firstObject");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isFromMe");

    if ((v11 & 1) != 0
      || (objc_msgSend(v7, "shouldBeAllowListed") & 1) != 0
      || (objc_msgSend(v7, "isOscarChat") & 1) != 0
      || (objc_msgSend(v7, "isRecovered") & 1) != 0
      || objc_msgSend(v7, "isFiltered") == 2 && (IMIsOscarEnabled() & 1) != 0)
    {
      goto LABEL_17;
    }
    if ((objc_msgSend(v7, "isStewieChat") & 1) != 0 || (objc_msgSend(v7, "isStewieSharingChat") & 1) != 0)
      goto LABEL_17;
    if (objc_msgSend(v7, "isBusinessChat"))
    {
      if (!objc_msgSend(v7, "containsActiveBIASession")
        || (objc_msgSend(v7, "hasSentMessageToBusiness") & 1) != 0)
      {
        objc_msgSend(v7, "account");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "service");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        +[IMService rcsService](IMService, "rcsService");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        if (v17 != v18 || !objc_msgSend(v7, "isChatBot"))
        {

          goto LABEL_18;
        }
        objc_msgSend(v7, "lastSentMessage");
        v19 = (void *)objc_claimAutoreleasedReturnValue();

        if (v19)
        {
LABEL_18:
          v12 = 1;
          goto LABEL_19;
        }
LABEL_76:
        v12 = 2;
LABEL_19:
        objc_msgSend(v7, "setCachedShouldShowReportSpam:", v12);
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
          {
            v14 = objc_msgSend(v7, "cachedShouldShowSpam");
            *(_DWORD *)buf = 134218242;
            v39 = v14;
            v40 = 2112;
            v41 = v7;
            _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Updated cachedShouldShowReportSpam to %ld for %@", buf, 0x16u);
          }

        }
        goto LABEL_23;
      }
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "Chat containsActiveBIASession, showing Report Junk", v36, 2u);
        }

      }
LABEL_75:

      goto LABEL_76;
    }
    if (objc_msgSend(v7, "isSMS"))
    {
      if (IMSMSReportSpamExtensionAvailable())
      {
        if ((sub_1A21109F4(v7) & 1) == 0)
          goto LABEL_17;
      }
      else if (!sub_1A211B448(v7))
      {
        goto LABEL_17;
      }
    }
    if ((objc_msgSend(v7, "hasKnownParticipants") & 1) == 0)
    {
      if ((objc_msgSend(v7, "hasSurfRequest") & 1) == 0)
      {
        v34[0] = MEMORY[0x1E0C809B0];
        v34[1] = 3221225472;
        v34[2] = sub_1A211B4C0;
        v34[3] = &unk_1E4721308;
        v35 = v7;
        objc_msgSend(v9, "enumerateObjectsUsingBlock:", v34);

      }
      v32 = 0u;
      v33 = 0u;
      v30 = 0u;
      v31 = 0u;
      obj = v9;
      v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, buf, 16);
      if (v21)
      {
        v22 = 0;
        v23 = *(_QWORD *)v31;
        while (2)
        {
          for (i = 0; i != v21; ++i)
          {
            if (*(_QWORD *)v31 != v23)
              objc_enumerationMutation(obj);
            v25 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v25, "isFromMe"))
            {
              if (v22 > 1)
              {
                LODWORD(v21) = 1;
                goto LABEL_58;
              }
              ++v22;
            }
          }
          v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, buf, 16);
          if (v21)
            continue;
          break;
        }
      }
LABEL_58:

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v26 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          v27 = CFSTR("NO");
          if ((_DWORD)v21)
            v27 = CFSTR("YES");
          *(_DWORD *)v36 = 138412290;
          v37 = v27;
          _os_log_impl(&dword_1A1FF4000, v26, OS_LOG_TYPE_INFO, "Has more than 3 replies? : %@", v36, 0xCu);
        }

      }
      if ((_DWORD)v21)
      {
        if (objc_msgSend(v7, "hasSurfRequest"))
        {
          if (!IMOSLoggingEnabled())
            goto LABEL_75;
          OSLogHandleForIMFoundationCategory();
          v28 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)v36 = 0;
            _os_log_impl(&dword_1A1FF4000, v28, OS_LOG_TYPE_INFO, "Chat has surf request, showing Report Junk", v36, 2u);
          }
LABEL_74:

          goto LABEL_75;
        }
      }
      else if ((objc_msgSend(v7, "shouldBeAllowListed") & 1) == 0)
      {
        if (!IMOSLoggingEnabled())
          goto LABEL_75;
        OSLogHandleForIMFoundationCategory();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_1A1FF4000, v28, OS_LOG_TYPE_INFO, "By default, showing Report Junk", v36, 2u);
        }
        goto LABEL_74;
      }
    }
LABEL_17:

    goto LABEL_18;
  }
  if (objc_msgSend(v3, "cachedShouldShowReportSpam") != 2)
  {
LABEL_23:
    v6 = objc_msgSend(v3, "cachedShouldShowReportSpam") == 2;
    goto LABEL_24;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Showing report spam, cached value", buf, 2u);
    }

  }
  v6 = 1;
LABEL_24:

  return v6;
}

id sub_1A20FD024(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  BOOL v22;
  int v23;
  BOOL v24;
  int v25;
  uint64_t i;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v34;
  int v35;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[128];
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if ((objc_msgSend(v3, "isReplyContextPreview") & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend(v3, "guid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    IMAssociatedMessageDecodeGUID();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "objectsForKey:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      v38 = v7;
      v39 = v6;
      v40 = v4;
      v9 = objc_msgSend(v3, "index");
      v10 = objc_msgSend(v3, "messagePartRange");
      v12 = v11;
      v41 = v3;
      v13 = objc_msgSend(v3, "originalMessagePartRange");
      v15 = v14;
      v48 = 0u;
      v49 = 0u;
      v50 = 0u;
      v51 = 0u;
      v37 = v8;
      v16 = v8;
      v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v48, v52, 16);
      if (v17)
      {
        v18 = v17;
        v19 = v15;
        v20 = 0;
        v21 = *(_QWORD *)v49;
        v46 = v12;
        v47 = v10;
        if (v10)
          v22 = 0;
        else
          v22 = v12 == 0x7FFFFFFFFFFFFFFFLL;
        v23 = v22;
        v44 = v19;
        v45 = v13;
        if (v13)
          v24 = 0;
        else
          v24 = v19 == 0x7FFFFFFFFFFFFFFFLL;
        v25 = v24;
        v42 = v25;
        v43 = v23;
        do
        {
          for (i = 0; i != v18; ++i)
          {
            if (*(_QWORD *)v49 != v21)
              objc_enumerationMutation(v16);
            v27 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * i);
            objc_msgSend(v27, "associatedMessageGUID", v37);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            v29 = IMAssociatedMessageDecodePartIndex();
            v30 = objc_msgSend(v27, "associatedMessageRange");
            if (v29 != 0x7FFFFFFFFFFFFFFFLL && v29 == v9)
              goto LABEL_37;
            if (v31)
            {
              if (v30 == v47 && v31 == v46)
                goto LABEL_37;
              v34 = v30 == v45 && v31 == v44;
              v35 = v43;
              if (v34)
                v35 = 1;
              if ((v35 | v42) == 1)
              {
LABEL_37:
                if (!v20)
                  v20 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
                objc_msgSend(v20, "addObject:", v27);
              }
            }

          }
          v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v48, v52, 16);
        }
        while (v18);
      }
      else
      {
        v20 = 0;
      }

      v5 = (void *)objc_msgSend(v20, "copy");
      v4 = v40;
      v3 = v41;
      v7 = v38;
      v6 = v39;
      v8 = v37;
    }
    else
    {
      v5 = 0;
    }

  }
  return v5;
}

id sub_1A20FD2AC(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  uint64_t v16;
  id v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v4 = v1;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v20;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v20 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v10 = v9;
          objc_msgSend(v10, "tapback");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v11, "isRemoved");

          if ((v12 & 1) == 0)
          {
            objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            v14 = objc_msgSend(v13, "isEmojiTapbacksEnabled");

            if ((v14 & 1) != 0
              || (objc_msgSend(v10, "tapback"),
                  v15 = (void *)objc_claimAutoreleasedReturnValue(),
                  v16 = objc_msgSend(v15, "associatedMessageType"),
                  v15,
                  (unint64_t)(v16 - 3000) < 6)
              || (unint64_t)(v16 - 2000) <= 5)
            {
              objc_msgSend(v3, "addObject:", v10, (_QWORD)v19);
            }
          }

        }
        else
        {
          objc_msgSend(v2, "addObject:", v9, (_QWORD)v19);
        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v6);
  }

  if (objc_msgSend(v3, "count"))
  {
    v17 = -[IMAggregateAcknowledgmentChatItem _initWithAcknowledgments:]([IMAggregateAcknowledgmentChatItem alloc], "_initWithAcknowledgments:", v3);
    objc_msgSend(v2, "addObject:", v17);

  }
  return v2;
}

#error "1A20FD4DC: too big function (funcsize=0)"

void sub_1A210E64C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x9C0], 8);
  _Block_object_dispose(&STACK[0x9E0], 8);
  _Block_object_dispose(&STACK[0xA00], 8);
  _Block_object_dispose(&STACK[0xA20], 8);
  _Block_object_dispose(&STACK[0xA40], 8);
  _Block_object_dispose(&STACK[0xA60], 8);
  _Block_object_dispose(&STACK[0xA80], 8);
  _Block_object_dispose(&STACK[0xAA0], 8);
  _Block_object_dispose(&STACK[0xAC0], 8);
  _Block_object_dispose(&STACK[0xAE0], 8);
  _Block_object_dispose(&STACK[0xB00], 8);
  _Block_object_dispose(&STACK[0xB20], 8);
  _Block_object_dispose(&STACK[0xB40], 8);
  _Block_object_dispose(&STACK[0xB60], 8);
  _Block_object_dispose(&STACK[0xB80], 8);
  _Block_object_dispose(&STACK[0xBA0], 8);
  _Block_object_dispose(&STACK[0xBC0], 8);
  _Block_object_dispose(&STACK[0xBE0], 8);
  _Block_object_dispose(&STACK[0xC00], 8);
  _Block_object_dispose(&STACK[0xC20], 8);
  _Block_object_dispose(&STACK[0xC40], 8);
  _Block_object_dispose(&STACK[0xC60], 8);
  _Block_object_dispose(&STACK[0xC80], 8);
  _Block_object_dispose(&STACK[0xCA0], 8);
  _Block_object_dispose(&STACK[0xCC0], 8);
  _Block_object_dispose(&STACK[0xCE0], 8);
  _Block_object_dispose(&STACK[0xD00], 8);
  _Block_object_dispose(&STACK[0xD20], 8);
  _Block_object_dispose(&STACK[0xD40], 8);
  _Block_object_dispose(&STACK[0xD60], 8);
  _Block_object_dispose(&STACK[0xD80], 8);
  _Block_object_dispose(&STACK[0xDA0], 8);
  _Block_object_dispose(&STACK[0xDC0], 8);
  _Block_object_dispose(&STACK[0xDE0], 8);
  _Block_object_dispose(&STACK[0xE00], 8);
  _Block_object_dispose(&STACK[0xE20], 8);
  _Block_object_dispose(&STACK[0xE40], 8);
  _Block_object_dispose(&STACK[0xE60], 8);
  _Block_object_dispose(&STACK[0xE80], 8);
  _Block_object_dispose(&STACK[0xFE0], 8);
  _Block_object_dispose(&STACK[0x10D0], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A210EABC(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD v8[4];
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = a2;
  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v14 = 0x7FFFFFFFFFFFFFFFLL;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A211AE7C;
  v8[3] = &unk_1E4720068;
  v5 = v4;
  v9 = v5;
  v10 = &v11;
  objc_msgSend(v3, "enumerateObjectsWithOptions:usingBlock:", 2, v8);
  v6 = v12[3];

  _Block_object_dispose(&v11, 8);
  return v6;
}

void sub_1A210EB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A210EB98(_QWORD *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;

  v4 = a3;
  v5 = (void *)a1[4];
  v16 = v4;
  objc_msgSend(v4, "guid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {

  }
  else
  {
    v8 = *(void **)(a1[5] + 16);
    objc_msgSend(v16, "originalMessageGUID");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = sub_1A210EABC(v8, v9);

    if (v10 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v11 = *(void **)(*(_QWORD *)(a1[6] + 8) + 40);
      v12 = v16;
      if (!v11)
      {
        v13 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
        v14 = *(_QWORD *)(a1[6] + 8);
        v15 = *(void **)(v14 + 40);
        *(_QWORD *)(v14 + 40) = v13;

        v12 = v16;
        v11 = *(void **)(*(_QWORD *)(a1[6] + 8) + 40);
      }
      objc_msgSend(v11, "addObject:", v12);
    }
  }

}

uint64_t sub_1A210EC84(uint64_t a1, void *a2, void *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3;
  v5 = objc_msgSend(a2, "messageID");
  v6 = objc_msgSend(v4, "messageID");

  if (v5 > v6)
    return 1;
  else
    return -1;
}

void sub_1A210ECD8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  id WeakRetained;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  int v41;
  id v42;
  _BOOL4 v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  int v54;
  void *v55;
  double v56;
  double v57;
  _BOOL4 v58;
  double v59;
  void *v60;
  int v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  id v66;

  v66 = a2;
  v5 = objc_opt_class();
  v6 = (void *)v5;
  if (v5 == *(_QWORD *)(a1 + 344))
  {
    v8 = *(_QWORD *)(a1 + 64);
LABEL_65:
    *(_QWORD *)(*(_QWORD *)(v8 + 8) + 24) = a3;
    goto LABEL_66;
  }
  if (v5 == *(_QWORD *)(a1 + 352))
  {
LABEL_28:
    v8 = *(_QWORD *)(a1 + 72);
    goto LABEL_65;
  }
  if (v5 == *(_QWORD *)(a1 + 360))
  {
    v8 = *(_QWORD *)(a1 + 80);
    goto LABEL_65;
  }
  if (v5 == *(_QWORD *)(a1 + 368))
  {
    switch(objc_msgSend(v66, "statusType"))
    {
      case 0:
        goto LABEL_63;
      case 1:
      case 22:
      case 25:
      case 29:
        v9 = *(_QWORD *)(a1 + 112);
        goto LABEL_62;
      case 2:
        v9 = *(_QWORD *)(a1 + 120);
        goto LABEL_62;
      case 3:
        v9 = *(_QWORD *)(a1 + 128);
        goto LABEL_62;
      case 4:
      case 21:
      case 24:
        v9 = *(_QWORD *)(a1 + 104);
        goto LABEL_62;
      case 5:
        v9 = *(_QWORD *)(a1 + 96);
        goto LABEL_62;
      case 6:
        v9 = *(_QWORD *)(a1 + 88);
        goto LABEL_62;
      case 10:
        v9 = *(_QWORD *)(a1 + 136);
        goto LABEL_62;
      case 11:
        v9 = *(_QWORD *)(a1 + 144);
        goto LABEL_62;
      case 33:
        objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v30 = objc_msgSend(v29, "isCarrierPigeonEnabled");

        if (!v30)
          goto LABEL_63;
        v9 = *(_QWORD *)(a1 + 152);
LABEL_62:
        *(_QWORD *)(*(_QWORD *)(v9 + 8) + 24) = a3;
LABEL_63:
        if (objc_msgSend(v66, "expireStatusType") != 1)
          goto LABEL_66;
        v8 = *(_QWORD *)(a1 + 168);
        break;
      default:
        objc_msgSend(v66, "_item");
        v26 = objc_claimAutoreleasedReturnValue();
        v27 = *(_QWORD *)(*(_QWORD *)(a1 + 160) + 8);
        v28 = *(void **)(v27 + 40);
        *(_QWORD *)(v27 + 40) = v26;

        goto LABEL_63;
    }
    goto LABEL_65;
  }
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
  if (!objc_msgSend(WeakRetained, "hasKnownParticipantsCache") || v6 != *(void **)(a1 + 376))
  {

    goto LABEL_8;
  }
  v10 = objc_msgSend(v66, "isFromMe");

  if ((v10 & 1) == 0)
  {
    v11 = v66;
    +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "transferGUID");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "transferForGUID:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "attributionInfo");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "objectForKeyedSubscript:", *MEMORY[0x1E0D37F60]);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v16;
    if (v16 && !objc_msgSend(v16, "BOOLValue"))
      goto LABEL_94;
    if ((objc_msgSend(v11, "isPlayed") & 1) != 0)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8);
      v20 = *(_QWORD *)(v18 + 24);
      v19 = (_QWORD *)(v18 + 24);
      if (v20 != 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_94;
    }
    else
    {
      v48 = *(_QWORD *)(*(_QWORD *)(a1 + 176) + 8);
      if (*(_QWORD *)(v48 + 24) == 0x7FFFFFFFFFFFFFFFLL)
        *(_QWORD *)(v48 + 24) = a3 + 1;
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 184) + 8) + 24);
      v49 = *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8);
      v50 = *(_QWORD *)(v49 + 24);
      v19 = (_QWORD *)(v49 + 24);
      if (v50 != 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_94;
    }
    *v19 = a3 + 1;
LABEL_94:

    goto LABEL_95;
  }
LABEL_8:
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 224) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 232) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 240) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 248) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    || !objc_msgSend(v6, "isSubclassOfClass:", *(_QWORD *)(a1 + 384))
    || (objc_msgSend(v66, "isReplyContextPreview") & 1) != 0
    || (objc_msgSend(v66, "isEditedMessageHistory") & 1) != 0)
  {
    if (v6 == *(void **)(a1 + 392))
    {
      v8 = *(_QWORD *)(a1 + 272);
      goto LABEL_65;
    }
    if (v6 == *(void **)(a1 + 400))
    {
      v8 = *(_QWORD *)(a1 + 280);
      goto LABEL_65;
    }
    if (v6 == *(void **)(a1 + 408))
    {
      v8 = *(_QWORD *)(a1 + 288);
      goto LABEL_65;
    }
    if (v6 == *(void **)(a1 + 416))
    {
      v8 = *(_QWORD *)(a1 + 296);
      goto LABEL_65;
    }
    if (v6 == *(void **)(a1 + 424))
    {
      v8 = *(_QWORD *)(a1 + 304);
      goto LABEL_65;
    }
    if (v6 == *(void **)(a1 + 432))
    {
      v8 = *(_QWORD *)(a1 + 312);
      goto LABEL_65;
    }
    if (v6 == *(void **)(a1 + 440))
    {
      v8 = *(_QWORD *)(a1 + 320);
      goto LABEL_65;
    }
    if (v6 != *(void **)(a1 + 352))
    {
      if (v6 != *(void **)(a1 + 448))
        goto LABEL_66;
      v8 = *(_QWORD *)(a1 + 328);
      goto LABEL_65;
    }
    goto LABEL_28;
  }
  objc_msgSend(v66, "_item");
  v11 = (id)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v11, "isFromMe") || v11 == *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 160) + 8) + 40))
  {
    if ((objc_msgSend(v11, "isFromMe") & 1) == 0 && (objc_msgSend(v11, "isAutoReply") & 1) == 0)
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 256) + 8) + 24) = 1;
    goto LABEL_96;
  }
  v21 = *(void **)(a1 + 40);
  objc_msgSend(v11, "guid");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v21, "countForKey:", v22))
  {

    goto LABEL_100;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 232) + 8) + 24);

  if (v23 != 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_100:
    if (objc_msgSend(v11, "isPlayed"))
    {
      if (objc_msgSend(v11, "isExpirable"))
      {
        v51 = *(_QWORD *)(*(_QWORD *)(a1 + 224) + 8);
        if (*(_QWORD *)(v51 + 24) == 0x7FFFFFFFFFFFFFFFLL)
        {
          *(_QWORD *)(v51 + 24) = a3 + 1;
          goto LABEL_123;
        }
      }
    }
    if (objc_msgSend(v11, "isRead"))
    {
      if ((objc_msgSend(v11, "isExpirable") & 1) == 0
        && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL)
      {
        objc_msgSend(v11, "service");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        +[IMService serviceWithName:](IMService, "serviceWithName:", v52);
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        v54 = objc_msgSend(v53, "supportsCapability:", *MEMORY[0x1E0D38E70]);

        if (v54)
        {
          v24 = a3 + 1;
          v25 = *(_QWORD *)(a1 + 216);
          goto LABEL_47;
        }
      }
    }
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
      || *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 240) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
      || *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 248) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL)
    {
      goto LABEL_123;
    }
    objc_msgSend(v11, "time");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "timeIntervalSinceNow");
    v57 = v56;

    v58 = objc_msgSend(v11, "scheduleType") == 2 && objc_msgSend(v11, "scheduleState") == 2;
    if (objc_msgSend(v11, "didNotifyRecipient"))
    {
LABEL_116:
      v24 = a3 + 1;
      v25 = *(_QWORD *)(a1 + 248);
      goto LABEL_47;
    }
    v59 = fabs(v57);
    if (!*(_BYTE *)(a1 + 464)
      || !objc_msgSend(v11, "wasDeliveredQuietly")
      || v59 > 86400.0
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 256) + 8) + 24))
    {
      if (!objc_msgSend(v11, "isDelivered")
        || ((objc_msgSend(v11, "isPendingSatelliteSend") | v58) & 1) != 0)
      {
        goto LABEL_123;
      }
      if (!*(_BYTE *)(a1 + 464)
        || v59 > 86400.0
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 256) + 8) + 24)
        || (v64 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8)),
            v65 = sub_1A210F664(v11, v64, *(void **)(a1 + 48)),
            v64,
            !v65))
      {
        v24 = a3 + 1;
        v25 = *(_QWORD *)(a1 + 208);
        goto LABEL_47;
      }
      if (v65 == 2)
        goto LABEL_116;
      if (v65 != 1)
        goto LABEL_123;
    }
    v24 = a3 + 1;
    v25 = *(_QWORD *)(a1 + 240);
    goto LABEL_47;
  }
  v24 = a3 + 1;
  v25 = *(_QWORD *)(a1 + 232);
LABEL_47:
  *(_QWORD *)(*(_QWORD *)(v25 + 8) + 24) = v24;
LABEL_123:
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v61 = objc_msgSend(v60, "isCarrierPigeonEnabled");

  if (!v61)
    goto LABEL_96;
  v62 = *(void **)(a1 + 32);
  objc_msgSend(v62, "chat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v62, "_shouldAppendSentViaSatelliteForChat:message:", v14, v11))
  {
    v63 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 264) + 8) + 24);

    if (v63 == 0x7FFFFFFFFFFFFFFFLL)
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 264) + 8) + 24) = a3 + 1;
    goto LABEL_96;
  }
LABEL_95:

LABEL_96:
LABEL_66:
  if (v6 == *(void **)(a1 + 456))
  {
    v31 = objc_msgSend(v66, "playbackType");
    v32 = v66;
    if (v31)
    {
      objc_msgSend(v66, "type");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 56), "objectForKey:", v33);
      v34 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v34)
      {
        v35 = *(void **)(a1 + 56);
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "setObject:forKey:", v36, v33);

      }
      v32 = v66;
    }
    objc_msgSend(v32, "setLastChatItemOfPluginType:", 0);
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v66, "setChatInScrutinyMode:", *(unsigned __int8 *)(a1 + 465));
  if (objc_msgSend(v6, "isSubclassOfClass:", *(_QWORD *)(a1 + 384)))
  {
    objc_msgSend(v66, "_item");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "chat");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v38, "account");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "service");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v40, "supportsCapability:", *MEMORY[0x1E0D38E90]))
    {
      v41 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 336) + 8) + 24);

      if (v41)
      {
        v42 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
        v43 = +[IMCarrierReportJunkHelper isReportJunkServiceAllowedForMessageItem:junkChatStyle:](IMCarrierReportJunkHelper, "isReportJunkServiceAllowedForMessageItem:junkChatStyle:", v37, objc_msgSend(v42, "chatStyle"));

        v44 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
        if (objc_msgSend(v44, "cachedShouldShowReportSpam") == 1 && v43)
        {

        }
        else
        {
          v45 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
          if (objc_msgSend(v45, "cachedShouldShowReportSpam") != 2)
            LOBYTE(v43) = 1;

          if (v43)
            goto LABEL_85;
        }
        v46 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
        objc_msgSend(v46, "invalidateSpamIndicatorCachedValues");

LABEL_85:
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 336) + 8) + 24) = 0;
      }
    }
    else
    {

    }
    if (objc_msgSend(v37, "isFromMe"))
    {
      v47 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
      objc_msgSend(v47, "invalidateSpamIndicatorCachedValuesIfNeeded");

    }
  }

}

uint64_t sub_1A210F664(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  id v16;
  void *v17;
  NSObject *v18;
  BOOL v19;
  int v20;
  NSObject *v21;
  NSObject *v22;
  uint8_t v24[16];
  _QWORD v25[5];
  id v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  _BYTE buf[24];
  void *v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "time");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "availabilityStatusPublishedDate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    objc_msgSend(v8, "timeIntervalSince1970");
    v11 = v10;
    objc_msgSend(v9, "timeIntervalSince1970");
    if (v11 < v12)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          *(_QWORD *)&buf[4] = v8;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v9;
          _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Message from time %@ is older than status from time %@. Not inferring a delivery type, as we likely have out of date status data.", buf, 0x16u);
        }

      }
      v14 = 0;
      goto LABEL_32;
    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Status published date is not available (likely cache miss), assuming our status information is up to date", buf, 2u);
    }

  }
  v16 = v7;
  v27 = 0;
  v28 = &v27;
  v29 = 0x2020000000;
  v30 = 0;
  v25[0] = 0;
  v25[1] = v25;
  v25[2] = 0x3032000000;
  v25[3] = sub_1A200AE94;
  v25[4] = sub_1A200ACBC;
  v26 = 0;
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "dateByAddingTimeInterval:", -480.0);
  v26 = (id)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)buf = MEMORY[0x1E0C809B0];
  *(_QWORD *)&buf[8] = 3221225472;
  *(_QWORD *)&buf[16] = sub_1A211AF60;
  v32 = &unk_1E47226E8;
  v33 = v25;
  v34 = &v27;
  v35 = 0x407E000000000000;
  objc_msgSend(v16, "enumerateObjectsWithOptions:usingBlock:", 2, buf);
  if (*((_BYTE *)v28 + 24))
  {
    if (!IMOSLoggingEnabled())
      goto LABEL_21;
    OSLogHandleForIMFoundationCategory();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1A1FF4000, v18, OS_LOG_TYPE_INFO, "Inferring that we are in the urgent message grace period.", v24, 2u);
    }
  }
  else
  {
    if (!IMOSLoggingEnabled())
      goto LABEL_21;
    OSLogHandleForIMFoundationCategory();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1A1FF4000, v18, OS_LOG_TYPE_INFO, "Inferring that we are NOT in the urgent message grace period.", v24, 2u);
    }
  }

LABEL_21:
  v19 = *((_BYTE *)v28 + 24) == 0;
  _Block_object_dispose(v25, 8);

  _Block_object_dispose(&v27, 8);
  v20 = IMOSLoggingEnabled();
  if (v19)
  {
    if (v20)
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "We are not in an active grace period, inferring this recent message will be delivered quietly, pending receipt", buf, 2u);
      }

    }
    v14 = 1;
  }
  else
  {
    if (v20)
    {
      OSLogHandleForIMFoundationCategory();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Recipient is unavailable, and we are in an active grace period, inferring sent message will notify recipient, pending receipt", buf, 2u);
      }

    }
    v14 = 2;
  }
LABEL_32:

  return v14;
}

void sub_1A210FB3C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4;
  id v5;

  v4 = objc_msgSend(a3, "unsignedIntegerValue");
  if (v4 < objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v4);
    v5 = (id)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v5, "setLastChatItemOfPluginType:", 1);

  }
}

id sub_1A210FBBC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = -[IMLoadMoreChatItem _initWithItem:]([IMLoadMoreChatItem alloc], "_initWithItem:", v3);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id sub_1A210FC44(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = -[IMBlackholeChatItem _initWithItem:]([IMBlackholeChatItem alloc], "_initWithItem:", 0);
  objc_msgSend(*(id *)(a1 + 32), "chatItemForIMChatItem:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

uint64_t sub_1A210FC94(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__updateOrRemoveiMessageLiteSentItemMovingFromOldIndex_chatItems_);
}

uint64_t sub_1A210FCAC(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__newiMessageLiteSentItemWithStatusType_atIndex_chatItems_);
}

uint64_t sub_1A210FCC8(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__updateOrRemoveDeliveredStatusItemMovingFromOldIndex_chatItems_);
}

id sub_1A210FCE0(uint64_t a1)
{
  return (id)objc_msgSend(*(id *)(a1 + 32), "_newDeliveredChatItemWithStatusType:atIndex:chatItems:", 1, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(a1 + 40));
}

uint64_t sub_1A210FD0C(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__updateOrRemoveDeliveredStatusItemMovingFromOldIndex_chatItems_);
}

id sub_1A210FD24(uint64_t a1)
{
  return (id)objc_msgSend(*(id *)(a1 + 32), "_newDeliveredChatItemWithStatusType:atIndex:chatItems:", 2, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(a1 + 40));
}

uint64_t sub_1A210FD50(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__updateOrRemoveDeliveredStatusItemMovingFromOldIndex_chatItems_);
}

id sub_1A210FD68(uint64_t a1)
{
  return (id)objc_msgSend(*(id *)(a1 + 32), "_newDeliveredChatItemWithStatusType:atIndex:chatItems:", 3, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(a1 + 40));
}

id sub_1A210FD94(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  double v5;
  uint64_t v6;
  void *v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = v3;
  if (objc_msgSend(v4, "expireState") == 1)
  {
    if ((objc_msgSend(v4, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v5 >= 3.0))
      v6 = 3;
    else
      v6 = 2;

    v8 = -[IMMessageStatusChatItem _initWithItem:expireStatusType:count:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:expireStatusType:count:statusItemSequenceNumber:", v4, v6, 0, 0);
    objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {

    v7 = 0;
    v8 = v4;
  }

  return v7;
}

id sub_1A210FE8C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  id v11;
  void *v12;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "timeRead");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "time");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "laterDate:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = v3;
  v8 = objc_msgSend(v7, "expireState");
  if (v8 == 1)
  {
    if ((objc_msgSend(v7, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v9 >= 3.0))
      v10 = 3;
    else
      v10 = 2;
  }
  else
  {
    v10 = 0;
  }

  v11 = -[IMMessageStatusChatItem _initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:", v7, 4, v6, 0, v10, 0);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8 == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), v12);

    v12 = 0;
  }

  return v12;
}

id sub_1A210FFFC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  double v5;
  uint64_t v6;
  void *v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = v3;
  if (objc_msgSend(v4, "expireState") == 1)
  {
    if ((objc_msgSend(v4, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v5 >= 3.0))
      v6 = 3;
    else
      v6 = 2;

    v8 = -[IMMessageStatusChatItem _initWithItem:expireStatusType:count:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:expireStatusType:count:statusItemSequenceNumber:", v4, v6, 0, 0);
    objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {

    v7 = 0;
    v8 = v4;
  }

  return v7;
}

id sub_1A21100F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  id v11;
  void *v12;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "timePlayed");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "time");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "laterDate:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = v3;
  v8 = objc_msgSend(v7, "expireState");
  if (v8 == 1)
  {
    if ((objc_msgSend(v7, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v9 >= 3.0))
      v10 = 3;
    else
      v10 = 2;
  }
  else
  {
    v10 = 0;
  }

  v11 = -[IMMessageStatusChatItem _initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:", v7, 5, v6, 0, v10, 0);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8 == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), v12);

    v12 = 0;
  }

  return v12;
}

id sub_1A2110264(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  double v5;
  uint64_t v6;
  void *v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = v3;
  if (objc_msgSend(v4, "expireState") == 1)
  {
    if ((objc_msgSend(v4, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v5 >= 3.0))
      v6 = 3;
    else
      v6 = 2;

    v8 = -[IMMessageStatusChatItem _initWithItem:expireStatusType:count:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:expireStatusType:count:statusItemSequenceNumber:", v4, v6, 0, 0);
    objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {

    v7 = 0;
    v8 = v4;
  }

  return v7;
}

id sub_1A211035C(uint64_t a1)
{
  void *v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  void *v15;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = *(unsigned __int8 *)(a1 + 64);
  v5 = *(void **)(a1 + 40);
  objc_msgSend(v3, "guid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4 == 45)
  {
    objc_msgSend(v5, "peekObjectForKey:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "time");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = 0;
  }
  else
  {
    v9 = objc_msgSend(v5, "countForKey:", v6);
    v8 = 0;
  }

  v10 = v3;
  v11 = objc_msgSend(v10, "expireState");
  if (v11 == 1)
  {
    if ((objc_msgSend(v10, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v12 >= 3.0))
      v13 = 3;
    else
      v13 = 2;
  }
  else
  {
    v13 = 0;
  }

  v14 = -[IMMessageStatusChatItem _initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:", v10, 6, v8, v9, v13, 0);
  objc_msgSend(*(id *)(a1 + 48), "chatItemForIMChatItem:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11 == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24), v15);

    v15 = 0;
  }

  return v15;
}

id sub_1A21104EC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "expireStatusType") == 1)
  {
    objc_msgSend(v2, "_item");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = -[IMMessageStatusChatItem _initWithItem:expireStatusType:count:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:expireStatusType:count:statusItemSequenceNumber:", v3, 1, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24), 0);
    objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id sub_1A21105A0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = -[IMMessageStatusChatItem _initWithItem:statusType:time:count:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:statusType:time:count:statusItemSequenceNumber:", v3, 10, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id sub_1A211063C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "statusType") == 10)
  {
    objc_msgSend(v2, "_item");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = -[IMMessageStatusChatItem _initWithItem:statusType:time:count:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:statusType:time:count:statusItemSequenceNumber:", v3, 10, 0, 0, 0);
    objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id sub_1A21106EC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (*(_BYTE *)(a1 + 64))
    v4 = 10;
  else
    v4 = 0;
  v5 = -[IMMessageStatusChatItem _initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:", v3, v4, 0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24), 1, 0);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (*(_BYTE *)(a1 + 64))
  {
    objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), v6);

    v6 = 0;
  }

  return v6;
}

id sub_1A21107CC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  double v5;
  uint64_t v6;
  void *v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = v3;
  if (objc_msgSend(v4, "expireState") == 1)
  {
    if ((objc_msgSend(v4, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v5 >= 3.0))
      v6 = 3;
    else
      v6 = 2;

    v8 = -[IMMessageStatusChatItem _initWithItem:expireStatusType:count:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:expireStatusType:count:statusItemSequenceNumber:", v4, v6, 0, 0);
    objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {

    v7 = 0;
    v8 = v4;
  }

  return v7;
}

id sub_1A21108C4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  id v8;
  void *v9;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = v3;
  v5 = objc_msgSend(v4, "expireState");
  if (v5 == 1)
  {
    if ((objc_msgSend(v4, "isFromMe") & 1) != 0 || (IMMessageItemTimeIntervalSinceStartedExpiring(), v6 >= 3.0))
      v7 = 3;
    else
      v7 = 2;
  }
  else
  {
    v7 = 0;
  }

  v8 = -[IMMessageStatusChatItem _initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:]([IMMessageStatusChatItem alloc], "_initWithItem:statusType:time:count:expireStatusType:statusItemSequenceNumber:", v4, 11, 0, 0, v7, 0);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5 == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), v9);

    v9 = 0;
  }

  return v9;
}

uint64_t sub_1A21109F4(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t ShouldShowReportMessagesForItems;
  void *v6;

  v1 = a1;
  objc_msgSend(v1, "account");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[IMService smsService](IMService, "smsService");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3 == v4)
  {
    objc_msgSend(v1, "_items");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    ShouldShowReportMessagesForItems = IMSSMSReportSpamShouldShowReportMessagesForItems();

  }
  else
  {
    ShouldShowReportMessagesForItems = 0;
  }

  return ShouldShowReportMessagesForItems;
}

id sub_1A2110A90(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;
  void *v5;
  uint64_t v6;
  id v7;
  _BOOL8 v8;
  id v9;
  _BOOL8 v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  objc_msgSend(WeakRetained, "valueForChatProperty:", CFSTR("wasAutoDetectedForSpam"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "BOOLValue");

  v7 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  v8 = objc_msgSend(v7, "chatStyle") != 45;

  v9 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  v10 = (unint64_t)objc_msgSend(v9, "messageCount") > 1;

  v11 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  v12 = objc_msgSend(v11, "isBusinessChat");

  v13 = -[IMReportSpamChatItem _initWithItem:wasReportedAsSpam:isGroup:hasMultipleMessages:showReportSMSSpam:isBusinessChat:]([IMReportSpamChatItem alloc], "_initWithItem:wasReportedAsSpam:isGroup:hasMultipleMessages:showReportSMSSpam:isBusinessChat:", v3, v6, v8, v10, *(unsigned __int8 *)(a1 + 56), v12);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

BOOL sub_1A2110BD4(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  _BOOL8 v9;
  unsigned __int8 v11;
  void *v12;
  unsigned __int8 v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v3, "cachedShouldShowSpam"))
  {
    v5 = v3;
    objc_msgSend(v4, "__imArrayByFilteringWithBlock:", &unk_1E471B980);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v6, "count")
      || !objc_msgSend(v5, "isFiltered")
      || (objc_msgSend(v5, "isRecovered") & 1) != 0
      || (objc_msgSend(v5, "isBusinessChat") & 1) != 0
      || objc_msgSend(v5, "hasKnownParticipants"))
    {

      v7 = 1;
    }
    else
    {
      v11 = objc_msgSend(v5, "isCategorized");
      objc_msgSend(v5, "valueForChatProperty:", CFSTR("wasDetectedAsiMessageSpam"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "BOOLValue");

      v7 = ((v11 | v13) & 1) != 0 ? 2 : 1;
    }
    objc_msgSend(v5, "setCachedShouldShowSpam:", v7);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v14 = 134218242;
        v15 = objc_msgSend(v5, "cachedShouldShowSpam");
        v16 = 2112;
        v17 = v5;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Updated cachedShouldShowSpam to %ld for %@", (uint8_t *)&v14, 0x16u);
      }

    }
  }
  v9 = objc_msgSend(v3, "cachedShouldShowSpam") == 2;

  return v9;
}

id sub_1A2110DC0(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;
  void *v5;
  void *v6;
  int v7;
  id v8;
  void *v9;
  __CFString *v10;
  void *v11;
  void *v12;
  int v13;
  id v14;
  void *v15;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  objc_msgSend(WeakRetained, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "service");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "supportsCapability:", *MEMORY[0x1E0D38EB0]);

  v8 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  v9 = v8;
  if (v7)
  {
    objc_msgSend(v8, "valueForChatProperty:", CFSTR("smsSpamExtensionName"));
    v10 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(v8, "account");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "service");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "supportsCapability:", *MEMORY[0x1E0D38D78]);

    if (v13)
      v10 = CFSTR("Apple");
    else
      v10 = 0;
  }
  v14 = -[IMSMSSpamChatItem _initWithItem:withExtensionName:]([IMSMSSpamChatItem alloc], "_initWithItem:withExtensionName:", v3, v10);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

id sub_1A2110F28(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;
  IMBlockContactChatItem *v5;
  id v6;
  id v7;
  void *v8;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  objc_msgSend(WeakRetained, "markAsHasBeenBlockContact");

  v5 = [IMBlockContactChatItem alloc];
  v6 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  v7 = -[IMBlockContactChatItem _initWithItem:chatStyle:](v5, "_initWithItem:chatStyle:", v3, objc_msgSend(v6, "chatStyle"));

  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id sub_1A2110FF0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 40), "_currentChatSubscriptionLabel");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[IMSimSwitchedChatItem _initWithItem:senderHandle:]([IMSimSwitchedChatItem alloc], "_initWithItem:senderHandle:", v3, v4);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id sub_1A2111094(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *WeakRetained;
  void *v9;
  void *v10;
  void *v11;
  IMSatelliteUnavailableForServiceChatItem *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(*(id *)(a1 + 32), "count"))
    goto LABEL_4;
  objc_msgSend(*(id *)(a1 + 32), "lastObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_item");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "service");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "length");

  if (v7)
  {
    objc_msgSend(*(id *)(a1 + 32), "lastObject");
    WeakRetained = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "_item");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "service");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
LABEL_4:
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
    objc_msgSend(WeakRetained, "account");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "service");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }

  v12 = [IMSatelliteUnavailableForServiceChatItem alloc];
  v13 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  objc_msgSend(v13, "recipient");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "ID");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 8));
  v17 = -[IMSatelliteUnavailableForServiceChatItem _initWithItem:service:recipientID:isGroupChat:](v12, "_initWithItem:service:recipientID:isGroupChat:", v3, v11, v15, objc_msgSend(v16, "isGroupChat"));

  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

id sub_1A211125C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) - 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_item");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = -[IMLoadMoreChatItem _initWithItem:]([IMLoadMoreRecentChatItem alloc], "_initWithItem:", v3);
  objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1A21112E8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;

  v23 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5 = v23;
    sub_1A20FD024(v5, *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      v7 = v6;
      sub_1A20FD2AC(v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v8 = 0;
    }
    if ((objc_msgSend(*(id *)(a1 + 32), "_updateAggregateAttachmentMessagePartAssociatedItems:map:", v5, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)) & 1) == 0)
    {
      v14 = *(void **)(a1 + 32);
      objc_msgSend(v5, "visibleAssociatedMessageChatItems");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(v14) = objc_msgSend(v14, "_shouldReloadChatItemWithAssociatedChatItems:oldAssociatedChatItems:", v8, v15);

      if (!(_DWORD)v14)
        goto LABEL_17;
    }
    v16 = (void *)objc_msgSend(v5, "copy");
    v17 = v16;
    if (v8)
    {
      v18 = v8;
    }
    else
    {
      objc_msgSend(v5, "visibleAssociatedMessageChatItems");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(v19, "count");

      if (!v20)
      {
LABEL_16:
        v21 = *(void **)(a1 + 40);
        objc_msgSend(*(id *)(a1 + 32), "chatItemForIMChatItem:", v17);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "replaceObjectAtIndex:withObject:", a3, v22);

LABEL_17:
LABEL_18:

        goto LABEL_19;
      }
      v16 = v17;
      v18 = 0;
    }
    objc_msgSend(v16, "_setVisibleAssociatedMessageChatItems:", v18);
    goto LABEL_16;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v9 = v23;
    v10 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
    if (v10 != objc_msgSend(v9, "_isActionableEclipsed"))
    {
      v11 = (void *)objc_msgSend(v9, "copy");
      objc_msgSend(v11, "_setActionableEclipsed:", *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24));
      v12 = *(void **)(a1 + 40);
      objc_msgSend(*(id *)(a1 + 32), "chatItemForIMChatItem:", v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "replaceObjectAtIndex:withObject:", a3, v13);

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
    goto LABEL_18;
  }
LABEL_19:

}

void sub_1A21114F0(uint64_t a1, void *a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  BOOL v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;

  v24 = a2;
  v5 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "isContiguousWithChatItem:", v24);
  v6 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "isAttachmentContiguousWithChatItem:", v24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
  if ((v7 - 1) >= 2)
    v8 = 0;
  else
    v8 = 3;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
    v9 = v7 == 3;
  else
    v9 = 1;
  if (v9)
    v10 = 1;
  else
    v10 = 2 * ((v7 - 1) < 2);
  if (v5)
    v11 = v10;
  else
    v11 = v8;
  v12 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
  if ((v12 - 1) >= 2)
    v13 = 0;
  else
    v13 = 3;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
    v14 = v12 == 3;
  else
    v14 = 1;
  if (v14)
    v15 = 1;
  else
    v15 = 2 * ((v12 - 1) < 2);
  if (v6)
    v16 = v15;
  else
    v16 = v13;
  v17 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "_isContiguousLoaded");
  v18 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  if ((v17 & 1) != 0)
  {
    if (objc_msgSend(v18, "contiguousType") != (_DWORD)v11
      || objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "attachmentContiguousType") != (_DWORD)v16)
    {
      v19 = (void *)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "copy");
      objc_msgSend(v19, "_setContiguousType:", v11);
      objc_msgSend(v19, "_setAttachmentContiguousType:", v16);
      objc_msgSend(v19, "_setContiguousLoaded:", 1);
      v20 = *(void **)(a1 + 32);
      objc_msgSend(*(id *)(a1 + 40), "chatItemForIMChatItem:", v19);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "replaceObjectAtIndex:withObject:", a3 - 1, v21);

    }
  }
  else
  {
    objc_msgSend(v18, "_setContiguousType:", v11);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "_setAttachmentContiguousType:", v16);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "_setContiguousLoaded:", 1);
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v11;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v16;
  v22 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v23 = *(void **)(v22 + 40);
  *(_QWORD *)(v22 + 40) = v24;

}

void sub_1A2111F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2111F80(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  char isKindOfClass;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_msgSend(v9, "_item");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  v7 = v9;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v9, "_item");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "isSuggestedActionResponse"))
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addIndex:", a3);

    v7 = v9;
  }

}

void sub_1A211219C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A21121E0(_QWORD *a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  id WeakRetained;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;

  v21 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v21, "_item");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(void **)(*(_QWORD *)(a1[5] + 8) + 40);
    objc_msgSend(v5, "pluginSessionGUID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v6) = objc_msgSend(v6, "containsObject:", v7);

    if ((_DWORD)v6)
    {
      objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "addIndex:", a3);
    }
    else if (objc_msgSend(v5, "associatedMessageType") == 2)
    {
      v8 = *(void **)(*(_QWORD *)(a1[5] + 8) + 40);
      objc_msgSend(v5, "pluginSessionGUID");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "addObject:", v9);

    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v10 = v21;
  else
    v10 = 0;
  v11 = v10;
  objc_msgSend(*(id *)(*(_QWORD *)(a1[7] + 8) + 40), "dataSource");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "dataSource");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v12, "isEqual:", v13);

  v15 = 0;
  v16 = *(_QWORD *)(a1[8] + 8);
  if (v14)
    v15 = *(_QWORD *)(v16 + 24) + 1;
  *(_QWORD *)(v16 + 24) = v15;
  if (*(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 24) < 3uLL)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
    objc_msgSend(WeakRetained, "account");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "configureStatusTextWithAccount:", v18);

  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "addIndex:", a3);
  }
  v19 = *(_QWORD *)(a1[7] + 8);
  v20 = *(void **)(v19 + 40);
  *(_QWORD *)(v19 + 40) = v11;

}

void sub_1A2112C20(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  void *v12;
  id v13;
  id v14;

  v14 = a1;
  objc_msgSend(a2, "_item");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (a3 < 1)
  {
    v12 = 0;
LABEL_7:
    v13 = -[IMPhotoAttachmentStatusChatItem _initWithItem:numberOfPhotos:numberOfVideos:numberOfSavedAssets:]([IMPhotoAttachmentStatusChatItem alloc], "_initWithItem:numberOfPhotos:numberOfVideos:numberOfSavedAssets:", v11, a4, a5, a6);
    objc_msgSend(v14, "insertObject:atIndex:", v13, a3);
    goto LABEL_8;
  }
  objc_msgSend(v14, "objectAtIndexedSubscript:", a3 - 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v12)
    goto LABEL_7;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_7;
  if ((objc_msgSend(v12, "wouldBeEqualIfInitializedWithItem:numberOfPhotos:numberOfVideos:numberOfSavedAssets:", v11, a4, a5, a6) & 1) == 0)
  {
    v13 = -[IMPhotoAttachmentStatusChatItem _initWithItem:numberOfPhotos:numberOfVideos:numberOfSavedAssets:]([IMPhotoAttachmentStatusChatItem alloc], "_initWithItem:numberOfPhotos:numberOfVideos:numberOfSavedAssets:", v11, a4, a5, a6);
    objc_msgSend(v14, "replaceObjectAtIndex:withObject:", a3 - 1, v13);
LABEL_8:

  }
}

void sub_1A2112D54(void *a1, _QWORD *a2, _QWORD *a3, uint64_t *a4)
{
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _QWORD v38[3];

  v38[1] = *MEMORY[0x1E0C80C00];
  v4 = a1;
  objc_msgSend(v4, "_item");
  v5 = objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v4, "transferGUIDs");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v4, "transferGUID");
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = (void *)v7;
    if (v7)
    {
      v38[0] = v7;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v38, 1);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6 = 0;
    }

  }
  v28 = (void *)v5;
  v32 = v4;
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v9 = v6;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
  if (v10)
  {
    v11 = v10;
    v12 = 0;
    v13 = 0;
    v14 = *(_QWORD *)v34;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v34 != v14)
          objc_enumerationMutation(v9);
        v16 = *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * i);
        +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "transferForGUID:", v16);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v18, "filename");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        IMUTITypeForFilename();
        v20 = (void *)objc_claimAutoreleasedReturnValue();

        if (IMUTITypeIsPhoto())
          ++v13;
        else
          v12 += IMUTITypeIsVideo();

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
    }
    while (v11);
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }

  if (v13 | v12)
  {
    v21 = v28;
    objc_msgSend(v28, "message");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = v32;
    +[IMPhotoLibraryPersistenceManager photosSyndicationIdentifiersForMessage:transcriptChatItem:](IMPhotoLibraryPersistenceManager, "photosSyndicationIdentifiersForMessage:transcriptChatItem:", v22, v32);
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    +[IMPhotoLibraryPersistenceManager sharedInstance](IMPhotoLibraryPersistenceManager, "sharedInstance");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v24);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v25, "cachedCountOfSyndicationIdentifiersSavedToSystemPhotoLibrary:shouldFetchAndNotifyAsNeeded:didStartFetch:", v26, 1, 0);

  }
  else
  {
    v27 = 0;
    v23 = v32;
    v21 = v28;
  }
  *a2 = v13;
  *a3 = v12;
  *a4 = v27;

}

void sub_1A2113BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2113BEC(_QWORD *a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  void *v8;
  id WeakRetained;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v12;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = v12;
    if ((objc_msgSend(v7, "isEditedMessageHistory") & 1) == 0)
    {
      objc_msgSend(v7, "guid");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
      v10 = objc_msgSend(WeakRetained, "isShowingEditHistoryForChatItemGUID:", v8);

      if ((_DWORD)v10 != objc_msgSend(v7, "isShowingEditHistory"))
      {
        objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "addIndex:", a3);
        v11 = (void *)objc_msgSend(v7, "copyWithIsShowingEditHistory:", v10);
        objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "addObject:", v11);

      }
    }

    v6 = v12;
  }

}

void sub_1A2113FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1A2114004(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v17;
  int v18;
  int v19;
  int v20;
  unint64_t i;
  void *v22;
  int v23;
  int v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;

  v28 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v28;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = v28;
    v8 = objc_msgSend(v7, "isEditedMessagePart");
    v9 = objc_msgSend(v7, "isReplyContextPreview");
    v10 = objc_msgSend(v7, "isEditedMessageHistory");
    if (objc_msgSend(v7, "scheduleType") == 2)
      v11 = objc_msgSend(v7, "isFailedRetractMessagePart");
    else
      v11 = 0;
    if ((((v8 | v11) ^ 1 | v9 | v10) & 1) == 0)
    {
      v12 = a3 + 1;
      if (a3 + 1 >= (unint64_t)objc_msgSend(*(id *)(a1 + 32), "count"))
      {
LABEL_14:
        v17 = 0;
        v12 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else
      {
        while (1)
        {
          objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", v12);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
            break;
          v14 = v13;
          v15 = objc_msgSend(v14, "statusType");
          if (v15 <= 0x22 && ((1 << v15) & 0x4FFF00016) != 0)
          {
            v17 = v15;

            goto LABEL_15;
          }

          if (++v12 >= (unint64_t)objc_msgSend(*(id *)(a1 + 32), "count"))
            goto LABEL_14;
        }
        v17 = 0;
        v12 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:

      }
      if (v12 != 0x7FFFFFFFFFFFFFFFLL)
      {
        v18 = objc_msgSend(*(id *)(a1 + 40), "isDeliveredStatusType:", v17);
        v19 = objc_msgSend(*(id *)(a1 + 40), "isReadStatusType:", v17);
        v20 = v19;
        if ((v18 & 1) != 0 || v19)
        {
          for (i = v12 + 1; i < objc_msgSend(*(id *)(a1 + 32), "count"); ++i)
          {
            objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", i);
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            v23 = objc_msgSend(*(id *)(a1 + 40), "isDeliveredStatusItem:", v22);
            v24 = objc_msgSend(*(id *)(a1 + 40), "isReadStatusItem:", v22);
            if (v18)
            {
              if (v23 | v24)
                v25 = 0;
              else
                v25 = v17;
              if ((((v23 | v24) | v20 ^ 1) & 1) == 0)
              {
LABEL_27:
                if (v24)
                  v17 = 0;
                goto LABEL_29;
              }
              v17 = v25;
            }
            else if (v20)
            {
              goto LABEL_27;
            }
LABEL_29:

          }
        }
      }
      objc_msgSend(*(id *)(a1 + 40), "_editedStatusItemForEditedMessagePartChatItem:combiningStatusType:", v7, v17);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      if (v26)
      {
        if (v12 == 0x7FFFFFFFFFFFFFFFLL)
        {
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "addIndex:", a3 + objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "count") + 1);
          v27 = *(_QWORD *)(a1 + 72);
        }
        else
        {
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addIndex:", v12);
          v27 = *(_QWORD *)(a1 + 56);
        }
        objc_msgSend(*(id *)(*(_QWORD *)(v27 + 8) + 40), "addObject:", v26);
      }

    }
    v6 = v28;
  }

}

void sub_1A2114590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1A21145D0(uint64_t a1, void *a2, unint64_t a3)
{
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  BOOL v11;
  void *v12;
  id v13;

  v13 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "count") - 1 <= a3)
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3 + 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v6 = objc_msgSend(*(id *)(a1 + 40), "_lastItemIndexExcludingWatchReplyOptions:", *(_QWORD *)(a1 + 32));
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && v6 == a3)
  {
    objc_msgSend(v13, "_item");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isFromMe");

    if (v8)
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a3;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0
      && (objc_msgSend(v13, "itemIsReplyContextPreview") & 1) == 0
      && (objc_msgSend(v13, "isEditedMessageHistory") & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        objc_msgSend(v5, "layoutGroupIdentifier");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "layoutGroupIdentifier");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = v9 == v10;

      }
      else
      {
        v11 = 0;
      }
      objc_msgSend(*(id *)(a1 + 40), "_effectControlForChatItem:", v13);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if (v12 && !v11)
      {
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addObject:", v12);
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "addIndex:", objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "count") + a3);
      }

    }
  }

}

void sub_1A211484C(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v12;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = v12;
    objc_msgSend(v7, "_item");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "guid");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(*(id *)(a1 + 32), "countForObject:", v9);
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v9);
    if (objc_msgSend(v7, "statusItemSequenceNumber") != v10)
    {
      v11 = (void *)objc_msgSend(v7, "copyWithStatusItemSequenceNumber:", v10);
      objc_msgSend(*(id *)(a1 + 40), "replaceObjectAtIndex:withObject:", a3, v11);

    }
    v6 = v12;
  }

}

void sub_1A2114A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2114A2C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  int isKindOfClass;
  int v9;
  BOOL v10;
  id v11;

  v7 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  objc_opt_class();
  v9 = objc_opt_isKindOfClass();
  objc_msgSend(v7, "_item");
  v11 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  v10 = (objc_opt_isKindOfClass() & 1) != 0 && _IMScheduledMessageShouldBePinnedToBottom(v11);
  if (((isKindOfClass | v9) & 1) == 0 && !v10)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }

}

uint64_t sub_1A2114D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

void sub_1A2114FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1A2115018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

void sub_1A2115060(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id WeakRetained;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  uint64_t v24;

  v20 = a2;
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v20;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = v20;
    objc_msgSend(v7, "guid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 32), "isShowingEditHistoryForChatItemGUID:", v8))
    {
      objc_msgSend(v7, "messageItem");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v7, "index");
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
      objc_msgSend(WeakRetained, "_historyToDisplayForMessageItem:partIndex:", v9, v10);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      v13 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v21[0] = MEMORY[0x1E0C809B0];
      v21[1] = 3221225472;
      v21[2] = sub_1A21151EC;
      v21[3] = &unk_1E4722518;
      v23 = v13;
      v24 = v10;
      v22 = v9;
      v14 = v13;
      v15 = v9;
      objc_msgSend(v12, "enumerateObjectsUsingBlock:", v21);
      v16 = *(void **)(a1 + 40);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "addObject:", v17);

      v18 = *(void **)(a1 + 48);
      v19 = (void *)objc_msgSend(v14, "copy");
      objc_msgSend(v18, "addObject:", v19);

    }
    v6 = v20;
  }

}

void sub_1A21151EC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = -[IMEditedTextMessagePartHistoricalContentChatItem _initWithMessageItem:messagePartIndex:historicalContent:editIndex:messagePartRange:subject:]([IMEditedTextMessagePartHistoricalContentChatItem alloc], "_initWithMessageItem:messagePartIndex:historicalContent:editIndex:messagePartRange:subject:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), v5, a3, 0, 0, 0);

  objc_msgSend(*(id *)(a1 + 40), "addObject:", v6);
}

void sub_1A211526C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;

  v5 = objc_msgSend(a2, "unsignedIntegerValue");
  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a3);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A2115310;
  v7[3] = &unk_1E4722568;
  v8 = *(id *)(a1 + 40);
  v9 = v5;
  objc_msgSend(v6, "enumerateObjectsWithOptions:usingBlock:", 2, v7);

}

uint64_t sub_1A2115310(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "insertObject:atIndex:", a2, *(_QWORD *)(a1 + 40));
}

id sub_1A2115528(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
  objc_msgSend(WeakRetained, "participantsWithState:", 16);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "firstObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = -[IMSatelliteAvailabilityChatItem _initWithHandle:]([IMSatelliteAvailabilityChatItem alloc], "_initWithHandle:", v3);
  return v4;
}

id sub_1A211573C(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
  objc_msgSend(WeakRetained, "participantsWithState:", 16);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "firstObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = -[IMSatelliteSuppressedNotificationChatItem _initWithHandle:]([IMSatelliteSuppressedNotificationChatItem alloc], "_initWithHandle:", v3);
  return v4;
}

uint64_t sub_1A211591C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

uint64_t sub_1A2115DD4(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;

  v2 = a2;
  if (objc_msgSend(v2, "type") || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    v3 = 0;
  else
    v3 = objc_msgSend(v2, "isFromMe") ^ 1;

  return v3;
}

uint64_t sub_1A2115E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

void sub_1A2116120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A211613C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

id sub_1A21161A4(_QWORD *a1)
{
  id WeakRetained;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  IMSMSFallbackStatusChatItem *v7;
  void *v8;
  id v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
  v3 = objc_msgSend(WeakRetained, "isRecipientAbleToDowngradeToSMS");

  v4 = objc_loadWeakRetained((id *)(a1[4] + 8));
  objc_msgSend(v4, "participantsWithState:", 16);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = [IMSMSFallbackStatusChatItem alloc];
  objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "_item");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[IMSMSFallbackStatusChatItem _initWithItem:handle:previousServiceName:canSMSReply:](v7, "_initWithItem:handle:previousServiceName:canSMSReply:", v8, v6, a1[5], v3);

  return v9;
}

void sub_1A211666C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1A21166D4(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  char isKindOfClass;
  unint64_t v7;
  uint64_t v8;
  id v9;

  v9 = a2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
LABEL_5:
    v5 = v9;
    goto LABEL_6;
  }
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    goto LABEL_5;
  }
  v5 = v9;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)
    && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    isKindOfClass = objc_opt_isKindOfClass();
    v5 = v9;
    if ((isKindOfClass & 1) != 0)
    {
      v7 = objc_msgSend(v9, "statusType");
      v5 = v9;
      if (v7 <= 0x1F)
      {
        if (((1 << v7) & 0x360007A) != 0)
        {
          v8 = *(_QWORD *)(a1 + 56);
        }
        else
        {
          if (((1 << v7) & 0xE0000004) == 0)
            goto LABEL_6;
          v8 = *(_QWORD *)(a1 + 48);
        }
        *(_BYTE *)(*(_QWORD *)(v8 + 8) + 24) = 1;
      }
    }
  }
LABEL_6:

}

uint64_t sub_1A21167DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

uint64_t sub_1A21169BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

uint64_t sub_1A2116B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

uint64_t sub_1A2116E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
  return result;
}

void sub_1A2117114(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  char isKindOfClass;

  v5 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
    objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);
}

void sub_1A21176E8(uint64_t a1, void *a2, unint64_t a3)
{
  void *v5;
  id v6;
  char isKindOfClass;
  id v8;

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  if (objc_msgSend(v5, "count") - 1 <= a3)
  {
    v8 = 0;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3 + 1);
    v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addIndex:", a3);
  }

}

void sub_1A21177AC(uint64_t a1, void *a2, unint64_t a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "count") - 1 <= a3)
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3 + 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend(*(id *)(a1 + 40), "_attributionChatItemForChatItem:", v7);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      if ((objc_msgSend(v5, "isEqual:", v6) & 1) == 0)
        objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", a3 + 1, v6);
    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v6);
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addIndex:", objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "count") + a3);
    }
  }

}

void sub_1A21178BC(uint64_t a1, void *a2, unint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  BOOL v17;
  char v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v33 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v33;
  if ((isKindOfClass & 1) != 0)
  {
    v31 = a1;
    v7 = v33;
    objc_msgSend(v7, "bundleID");
    v8 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "_parentItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "message");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_imMessageItem");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "getCMMState");

    v13 = objc_msgSend(v7, "attributionType");
    v14 = objc_msgSend(v7, "attributionType");
    v15 = objc_msgSend(v7, "isCommSafetySensitiveAttribution");
    v16 = v15;
    if (v12)
      v17 = 1;
    else
      v17 = v13 == 6;
    if (v17 || v14 == 7)
      v19 = 1;
    else
      v19 = v15;
    if (a3)
    {
      v20 = v31;
      objc_msgSend(*(id *)(v31 + 32), "objectAtIndex:", a3 - 1);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = (void *)v8;
    }
    else
    {
      v21 = 0;
      v22 = (void *)v8;
      v20 = v31;
    }
    if (objc_msgSend(*(id *)(v20 + 32), "count", v31) - 1 <= a3)
    {
      v23 = 0;
      if ((v19 & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      objc_msgSend(*(id *)(v20 + 32), "objectAtIndex:", a3 + 1);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      if ((v19 & 1) != 0)
        goto LABEL_20;
    }
    if ((objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v32 + 48) + 8) + 40), "containsObject:", v22) & 1) != 0
      || (+[IMBalloonPluginAttributionController sharedInstance](IMBalloonPluginAttributionController, "sharedInstance"), v24 = (void *)objc_claimAutoreleasedReturnValue(), v25 = objc_msgSend(v24, "shouldShowAttributionForBundleID:", v8), v24, v22 = (void *)v8, (v25 & 1) == 0))
    {
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v32 + 56) + 8) + 40), "addIndex:", a3);
      goto LABEL_46;
    }
LABEL_20:
    if (v16)
    {
      objc_msgSend(*(id *)(v32 + 40), "_attributionChatItemForChatItem:", v21);
      v26 = (id)objc_claimAutoreleasedReturnValue();
      if (!objc_msgSend(v26, "isCommSafetySensitiveAttribution")
        || (v27 = objc_msgSend(v26, "attributionType"), v27 != objc_msgSend(v7, "attributionType")))
      {
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v32 + 56) + 8) + 40), "addIndex:", a3);
      }
    }
    else
    {
      if (v13 != 6 && v14 != 7)
      {
        if ((objc_msgSend(v22, "containsString:", *MEMORY[0x1E0D37600]) & 1) == 0
          && (objc_msgSend(v22, "containsString:", *MEMORY[0x1E0D375E8]) & 1) == 0
          && v22)
        {
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v32 + 48) + 8) + 40), "addObject:", v22);
        }
        goto LABEL_46;
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v28 = v21;
      else
        v28 = 0;
      v26 = v28;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v29 = v23;
      else
        v29 = 0;
      v30 = v29;
      if (objc_msgSend(v26, "requiresSiriAttribution")
        && objc_msgSend(v30, "requiresSiriAttribution")
        && (objc_msgSend(v26, "isContiguousWithChatItem:", v30) & 1) != 0
        || objc_msgSend(v26, "requiresFaceTimeAttribution")
        && objc_msgSend(v30, "requiresFaceTimeAttribution")
        && objc_msgSend(v26, "isContiguousWithChatItem:", v30))
      {
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v32 + 56) + 8) + 40), "addIndex:", a3);
      }

    }
LABEL_46:

    v6 = v33;
  }

}

void sub_1A2117C0C(uint64_t a1, void *a2, unint64_t a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3 - 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "count") - 1 <= a3)
  {
    v6 = 0;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3 + 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addIndex:", a3);
  }

}

void sub_1A2117D0C(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  int v15;
  IMMessageAttributionChatItem *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;

  v30 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v30;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = v30;
    if (objc_msgSend(v7, "attributionType") != 6)
    {
LABEL_20:

      v6 = v30;
      goto LABEL_21;
    }
    if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    {
LABEL_13:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      if (v15 != objc_msgSend(v7, "showsLearnMoreLink"))
      {
        v16 = [IMMessageAttributionChatItem alloc];
        objc_msgSend(v7, "_item");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "attributionInfo");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = -[IMMessageAttributionChatItem _initWithItem:attributionInfo:attributionType:showsLearnMoreLink:statusItemSequenceNumber:](v16, "_initWithItem:attributionInfo:attributionType:showsLearnMoreLink:statusItemSequenceNumber:", v17, v18, objc_msgSend(v7, "attributionType"), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24), 0);

        objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", a3, v19);
        objc_msgSend(v19, "_item");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "guid");
        v21 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "objectForKey:", CFSTR("SentWithSiriLearningLinkShownForMessageGUIDs"));
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        if ((objc_msgSend(v23, "containsObject:", v21) & 1) == 0)
        {
          v24 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
          v25 = v24;
          if (v23)
            objc_msgSend(v24, "addObjectsFromArray:", v23);
          objc_msgSend(v25, "addObject:", v21);
          objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v27 = (void *)objc_msgSend(v25, "copy");
          objc_msgSend(v26, "setObject:forKey:", v27, CFSTR("SentWithSiriLearningLinkShownForMessageGUIDs"));

        }
      }
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
      goto LABEL_20;
    }
    v8 = v7;
    if (IMIsRunningInUnitTesting())
    {
LABEL_8:

      goto LABEL_13;
    }
    if (IMIsRunningInMobileSMS())
    {
      objc_msgSend(v8, "_item");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "guid");
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "objectForKey:", CFSTR("SentWithSiriLearningLinkShownForMessageGUIDs"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v12, "lastObject");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "isEqualToString:", v10);

      if (v14)
      {

        goto LABEL_8;
      }
      if ((unint64_t)objc_msgSend(v12, "count") < 5)
      {
        objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = objc_msgSend(v28, "integerForKey:", CFSTR("SentWithSiriLearningUIShownNumberOfTimes"));

        if (v29 <= 1)
          goto LABEL_13;
        goto LABEL_12;
      }

    }
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
    goto LABEL_13;
  }
LABEL_21:

}

uint64_t sub_1A2118CB8(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;
  uint64_t v5;
  _QWORD v7[6];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;

  v4 = a2;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A2118D6C;
  v7[3] = &unk_1E47225F8;
  v7[4] = &v8;
  v7[5] = a3;
  objc_msgSend(v4, "enumerateObjectsWithOptions:usingBlock:", 2, v7);
  v5 = *((unsigned __int8 *)v9 + 24);
  _Block_object_dispose(&v8, 8);

  return v5;
}

void sub_1A2118D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A2118D6C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = objc_opt_isKindOfClass();
  if ((result & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_1A211915C()
{
  return 0;
}

uint64_t sub_1A2119164()
{
  return 0;
}

id sub_1A211916C(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "service");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id sub_1A21191B4(void *a1)
{
  if ((objc_msgSend(a1, "isFromMe") & 1) != 0)
    objc_msgSend(a1, "_otherHandle");
  else
    objc_msgSend(a1, "_senderHandle");
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t sub_1A21191F4()
{
  return 1;
}

id sub_1A21191FC(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;

  if (objc_msgSend(a1, "wasDowngraded"))
  {
    objc_msgSend(a1, "messageSummaryInfo");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "objectForKeyedSubscript:", *MEMORY[0x1E0D38380]);
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = (void *)v3;
    v5 = (void *)*MEMORY[0x1E0D38F68];
    if (v3)
      v5 = (void *)v3;
    v6 = v5;

    +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_1A211929C()
{
  return 1;
}

uint64_t sub_1A21192A4(void *a1)
{
  if (qword_1ECF12358 != -1)
    dispatch_once(&qword_1ECF12358, &unk_1E471B960);
  if (byte_1ECF11FC0)
    return objc_msgSend(a1, "isEmote") ^ 1;
  else
    return 1;
}

uint64_t sub_1A2119308(void *a1, const char *a2)
{
  return objc_msgSend(a1, "_newChatItemsWithChatContext:", 0);
}

id sub_1A2119310(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  int v6;
  void *v7;
  int v8;
  NSObject *v9;
  void *v10;
  int v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  NSObject *v19;
  void *v20;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  IMTranscriptPluginBreadcrumbChatItem *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  int v34;
  id v35;
  void *v36;
  char v37;
  void *v38;
  NSObject *v39;
  void *v40;
  NSObject *v41;
  NSObject *v42;
  id v43;
  void *v44;
  uint8_t buf[4];
  void *v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_msgSend(v4, "serviceType");
  v6 = objc_msgSend(v4, "areSendersUnknown");
  objc_msgSend(MEMORY[0x1E0D36A50], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v7, "isInternalInstall"))
  {
LABEL_10:

    goto LABEL_11;
  }
  v8 = IMGetCachedDomainBoolForKey();

  if (!v8)
    goto LABEL_11;
  if (!objc_msgSend(a1, "isCorrupt"))
  {
    objc_msgSend(a1, "body");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "string");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v7, "isEqualToString:", CFSTR("internal_poison_chatitem_hang")))
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v41 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v41, OS_LOG_TYPE_INFO, "INTERNAL CHAT ITEM POISON PILL TEST DETECTED - Spinning", buf, 2u);
        }

      }
      while (1)
        sleep(1u);
    }
    if (objc_msgSend(v7, "isEqualToString:", CFSTR("internal_poison_chatitem_crash")))
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v42 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v42, OS_LOG_TYPE_INFO, "INTERNAL CHAT ITEM POISON PILL TEST DETECTED - Crashing", buf, 2u);
        }

      }
      abort();
    }
    goto LABEL_10;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "IMItem is corrupt already, not crashing", buf, 2u);
    }

  }
LABEL_11:
  v43 = 0;
  v11 = objc_msgSend(a1, "isExtensibleMessageWithPluginPayload:chatContext:", &v43, v4);
  v12 = v43;
  if (objc_msgSend(a1, "isLocatingMessage"))
  {
    v13 = -[IMLocatingChatItem _initWithItem:]([IMLocatingChatItem alloc], "_initWithItem:", a1);
LABEL_13:
    v14 = v13;
    goto LABEL_30;
  }
  if ((objc_msgSend(a1, "isTypingMessage") & v11) != 1)
  {
    if (objc_msgSend(a1, "isTypingMessage"))
    {
      v13 = -[IMTypingChatItem _initWithItem:]([IMTypingChatItem alloc], "_initWithItem:", a1);
      goto LABEL_13;
    }
    if (qword_1ECF12358 != -1)
      dispatch_once(&qword_1ECF12358, &unk_1E471B960);
    if (byte_1ECF11FC0)
    {
      objc_msgSend(a1, "message");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v17, "isEmote");

      if (v18)
      {
        v13 = -[IMEmoteMessageChatItem _initWithItem:]([IMEmoteMessageChatItem alloc], "_initWithItem:", a1);
        goto LABEL_13;
      }
    }
    if (!v11 || (objc_msgSend(a1, "hasDataDetectorResults") & 1) != 0)
    {
      v13 = +[IMMessagePartChatItem _newMessagePartsForMessageItem:chatContext:](IMMessagePartChatItem, "_newMessagePartsForMessageItem:chatContext:", a1, v4);
      goto LABEL_13;
    }
    +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "pluginSessionGUID");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "pluginBundleID");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "existingDataSourceForMessageGUID:bundleID:", v23, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v25, "guidOfLastMessageInSession");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "guid");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v27, "isEqualToString:", v26))
    {
      v28 = objc_msgSend(v25, "isShowingLatestMessageAsBreadcrumb");

      if (v28)
      {
        v29 = [IMTranscriptPluginBreadcrumbChatItem alloc];
        objc_msgSend(a1, "breadcrumbText");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "string");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = -[IMTranscriptPluginBreadcrumbChatItem _initWithItem:datasource:statusText:optionFlags:](v29, "_initWithItem:datasource:statusText:optionFlags:", a1, v25, v31, 0);

        goto LABEL_52;
      }
    }
    else
    {

    }
    objc_msgSend(v12, "pluginBundleID");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    IMBalloonExtensionIDWithSuffix();
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v32, "isEqualToString:", v33);

    if (v34)
    {
      v35 = +[IMMessagePartChatItem _newMessagePartsForMessageItem:chatContext:photosPluginPayload:](IMMessagePartChatItem, "_newMessagePartsForMessageItem:chatContext:photosPluginPayload:", a1, v4, v12);
    }
    else
    {
      if (!v12
        || (objc_msgSend(v12, "pluginBundleID"),
            v36 = (void *)objc_claimAutoreleasedReturnValue(),
            v37 = objc_msgSend(v36, "isEqualToString:", *MEMORY[0x1E0D375F8]),
            v36,
            (v37 & 1) != 0))
      {
        if (objc_msgSend(a1, "isDeviceActionMessage"))
        {
          +[IMMessagePartChatItem _singleChatItemForDeviceActionMessage:context:pluginPayload:](IMMessagePartChatItem, "_singleChatItemForDeviceActionMessage:context:pluginPayload:", a1, v4, v12);
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          v44 = v38;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v44, 1);
          v14 = (id)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v39 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(v12, "pluginBundleID");
              v40 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412290;
              v46 = v40;
              _os_log_impl(&dword_1A1FF4000, v39, OS_LOG_TYPE_INFO, "Failed to find plugin data source for identifier '%@'", buf, 0xCu);

            }
          }
          v14 = 0;
        }
        goto LABEL_52;
      }
      v35 = -[IMTranscriptPluginChatItem _initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:]([IMTranscriptPluginChatItem alloc], "_initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:", a1, v12, 0, 0, 0x7FFFFFFFFFFFFFFFLL, v6 ^ 1 | (v5 == 3));
    }
    v14 = v35;
LABEL_52:

    goto LABEL_30;
  }
  +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "dataSourceForPluginPayload:", v12);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    v14 = -[IMTypingPluginChatItem _initWithItem:dataSource:]([IMTypingPluginChatItem alloc], "_initWithItem:dataSource:", a1, v16);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v12, "pluginBundleID");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v46 = v20;
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Failed to find plugin data source for identifier '%@'", buf, 0xCu);

      }
    }
    v14 = 0;
  }

LABEL_30:
  return v14;
}

id sub_1A2119A4C(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;

  if (!objc_msgSend(a1, "isPendingSatelliteSend"))
    goto LABEL_13;
  objc_msgSend(a1, "_senderHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[IMService iMessageService](IMService, "iMessageService");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3 == v4)
  {
    +[IMService iMessageLiteService](IMService, "iMessageLiteService");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
LABEL_13:
    if (!objc_msgSend(a1, "wasDowngraded"))
      goto LABEL_8;
    objc_msgSend(a1, "_senderHandle");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "service");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v6)
      goto LABEL_8;
    +[IMService iMessageService](IMServiceImpl, "iMessageService");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "messageSummaryInfo");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "objectForKeyedSubscript:", *MEMORY[0x1E0D38380]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v9);
      v10 = objc_claimAutoreleasedReturnValue();

      v7 = (void *)v10;
    }

    if (!v7)
    {
LABEL_8:
      objc_msgSend(a1, "_senderHandle");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "service");
      v7 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  return v7;
}

uint64_t sub_1A2119B98(void *a1, const char *a2, uint64_t a3)
{
  return objc_msgSend(a1, "isExtensibleMessageWithPluginPayload:chatContext:", a3, 0);
}

uint64_t sub_1A2119BA0(void *a1, uint64_t a2, IMPluginPayload **a3, void *a4)
{
  id v6;
  void *v7;
  void *v8;
  IMPluginPayload *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  IMPluginPayload *v17;
  void *v18;
  IMPluginPayload *v19;

  v6 = a4;
  objc_msgSend(a1, "balloonBundleID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "length"))
  {
    +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "balloonPluginForBundleID:", v7);
    v9 = (IMPluginPayload *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      objc_msgSend(a1, "retractedPartIndexes");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v10, "count"))
      {
        objc_msgSend(a1, "payloadData");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "length");

        if (!v12)
        {
          v13 = 0;
LABEL_13:

          goto LABEL_14;
        }
      }
      else
      {

      }
      v19 = objc_retainAutorelease(-[IMPluginPayload initWithMessageItem:chatContext:]([IMPluginPayload alloc], "initWithMessageItem:chatContext:", a1, v6));
      *a3 = v19;

LABEL_12:
      v13 = 1;
      goto LABEL_13;
    }
  }
  if (objc_msgSend(a1, "hasDataDetectorResults"))
  {
    +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = *MEMORY[0x1E0D375F8];
    objc_msgSend(v14, "balloonPluginForBundleID:", *MEMORY[0x1E0D375F8]);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      v17 = objc_alloc_init(IMPluginPayload);
      objc_msgSend(a1, "guid");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[IMPluginPayload setMessageGUID:](v17, "setMessageGUID:", v18);

      -[IMPluginPayload setPluginBundleID:](v17, "setPluginBundleID:", v15);
      v9 = objc_retainAutorelease(v17);
      *a3 = v9;
      goto LABEL_12;
    }
  }
  v13 = 0;
LABEL_14:

  return v13;
}

uint64_t sub_1A2119D44(void *a1, uint64_t a2, void *a3)
{
  id v4;
  IMParticipantChangeChatItem *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v4 = a3;
  v5 = [IMParticipantChangeChatItem alloc];
  objc_msgSend(a1, "_senderHandle");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_otherHandle");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = -[IMParticipantChangeChatItem _initWithItem:sender:otherHandle:context:](v5, "_initWithItem:sender:otherHandle:context:", a1, v6, v7, v4);

  return v8;
}

uint64_t sub_1A2119DD8(void *a1)
{
  IMParticipantChangeChatItem *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v2 = [IMParticipantChangeChatItem alloc];
  objc_msgSend(a1, "_senderHandle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_otherHandle");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[IMParticipantChangeChatItem _initWithItem:sender:otherHandle:](v2, "_initWithItem:sender:otherHandle:", a1, v3, v4);

  return v5;
}

uint64_t sub_1A2119E50(void *a1)
{
  IMGroupTitleChangeChatItem *v2;
  void *v3;
  uint64_t v4;

  v2 = [IMGroupTitleChangeChatItem alloc];
  objc_msgSend(a1, "_senderHandle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[IMGroupTitleChangeChatItem _initWithItem:sender:](v2, "_initWithItem:sender:", a1, v3);

  return v4;
}

id sub_1A2119EB0(uint64_t a1)
{
  return -[IMTranscriptSharingChatItem _initWithItem:]([IMTranscriptSharingChatItem alloc], "_initWithItem:", a1);
}

uint64_t sub_1A2119EDC(void *a1)
{
  IMLocationUpdateSentChatItem *v2;
  void *v3;
  uint64_t v4;

  v2 = [IMLocationUpdateSentChatItem alloc];
  objc_msgSend(a1, "sender");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[IMLocationUpdateSentChatItem _initWithItem:chatIdentifier:](v2, "_initWithItem:chatIdentifier:", a1, v3);

  return v4;
}

uint64_t sub_1A2119F3C(void *a1)
{
  IMGroupActionChatItem *v2;
  void *v3;
  uint64_t v4;

  v2 = [IMGroupActionChatItem alloc];
  objc_msgSend(a1, "_senderHandle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[IMGroupActionChatItem _initWithItem:sender:](v2, "_initWithItem:sender:", a1, v3);

  return v4;
}

BOOL sub_1A2119F9C(void *a1)
{
  return objc_msgSend(a1, "actionType") != 3;
}

BOOL sub_1A2119FB8(void *a1)
{
  return objc_msgSend(a1, "direction") == 1 && objc_msgSend(a1, "status") == 0;
}

id sub_1A2119FF8(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  char v5;
  id v6;
  IMLocationShareOfferChatItem *v7;
  void *v8;
  id v9;

  objc_msgSend(a1, "_otherHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_senderHandle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(a1, "_hasMessageChatItem")
    && (objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags"),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        v5 = objc_msgSend(v4, "isWaldoEnabled"),
        v4,
        (v5 & 1) == 0))
  {
    v7 = [IMLocationShareOfferChatItem alloc];
    if (v2)
      v8 = v2;
    else
      v8 = v3;
    v6 = -[IMLocationShareOfferChatItem _initWithItem:sender:](v7, "_initWithItem:sender:", a1, v8);
  }
  else
  {
    v6 = -[IMLocationShareActionChatItem _initWithItem:sender:otherHandle:]([IMLocationShareActionChatItem alloc], "_initWithItem:sender:otherHandle:", a1, v3, v2);
  }
  v9 = v6;

  return v9;
}

uint64_t sub_1A211A0BC(void *a1)
{
  IMTUConversationChatItem *v2;
  void *v3;
  uint64_t v4;

  v2 = [IMTUConversationChatItem alloc];
  objc_msgSend(a1, "_senderHandle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[IMTUConversationChatItem _initWithItem:conversationInitiator:](v2, "_initWithItem:conversationInitiator:", a1, v3);

  return v4;
}

uint64_t sub_1A211A11C()
{
  return 1;
}

uint64_t sub_1A211A124(void *a1)
{
  IMMessageActionChatItem *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v2 = [IMMessageActionChatItem alloc];
  objc_msgSend(a1, "_senderHandle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "_otherHandle");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[IMMessageActionChatItem _initWithItem:sender:otherHandle:](v2, "_initWithItem:sender:otherHandle:", a1, v3, v4);

  return v5;
}

uint64_t sub_1A211A19C(void *a1, const char *a2)
{
  return objc_msgSend(a1, "_newChatItemsWithChatContext:", 0);
}

uint64_t sub_1A211A1A4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  IMPluginPayload *v12;
  void *v13;
  void *v14;
  IMTranscriptPluginBreadcrumbChatItem *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  int v20;
  IMEmojiStickerChatItem *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  IMPluginPayload *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  int v31;
  IMTranscriptPluginBreadcrumbChatItem *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  int v37;
  IMEmojiStickerChatItem *v38;
  void *v39;
  IMMessageAcknowledgmentChatItem *v40;
  void *v41;
  IMAssociatedStickerChatItem *v42;
  unsigned int v43;
  uint64_t v44;
  IMTranscriptPluginChatItem *v45;
  uint64_t v46;
  NSObject *v47;
  void *v48;
  _QWORD v50[5];
  __int128 buf;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_msgSend(v4, "serviceType");
  v6 = objc_msgSend(v4, "areSendersUnknown");
  v7 = objc_msgSend(a1, "associatedMessageType");
  if (v7 > 999)
  {
    if (v7 == 1000)
    {
      objc_msgSend(a1, "fileTransferGUIDs");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v35, "firstObject");
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v37 = objc_msgSend(v36, "isClingEnabled");

      if (v37
        && objc_msgSend(a1, "isEmojiSticker")
        && (objc_msgSend(a1, "emojiSticker"), (v23 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
      {
        v38 = [IMEmojiStickerChatItem alloc];
        objc_msgSend(a1, "_senderHandle");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = -[IMEmojiStickerChatItem _initWithItem:sender:transferGUID:emojiSticker:](v38, "_initWithItem:sender:transferGUID:emojiSticker:", a1, v39, v22, v23);

      }
      else
      {
        v42 = [IMAssociatedStickerChatItem alloc];
        objc_msgSend(a1, "_senderHandle");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = -[IMAssociatedStickerChatItem _initWithItem:sender:transferGUID:](v42, "_initWithItem:sender:transferGUID:", a1, v23, v22);
      }
    }
    else
    {
      if (v7 != 1001)
        goto LABEL_17;
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(v19, "isClingEnabled");

      if (!v20)
        goto LABEL_23;
      v21 = [IMEmojiStickerChatItem alloc];
      objc_msgSend(a1, "_senderHandle");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(a1, "fileTransferGUIDs");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "firstObject");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(a1, "emojiSticker");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = -[IMEmojiStickerChatItem _initWithItem:sender:transferGUID:emojiSticker:](v21, "_initWithItem:sender:transferGUID:emojiSticker:", a1, v22, v24, v25);

    }
    goto LABEL_22;
  }
  if (v7 == 2)
  {
    v26 = -[IMPluginPayload initWithMessageItem:]([IMPluginPayload alloc], "initWithMessageItem:", a1);
    +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "dataSourceForPluginPayload:", v26);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v28, "guidOfLastMessageInSession");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "guid");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v30, "isEqualToString:", v29))
    {
      v31 = objc_msgSend(v28, "isShowingLatestMessageAsBreadcrumb");

      if (v31)
      {
        v32 = [IMTranscriptPluginBreadcrumbChatItem alloc];
        objc_msgSend(a1, "breadcrumbText");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "string");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = -[IMTranscriptPluginBreadcrumbChatItem _initWithItem:datasource:statusText:optionFlags:](v32, "_initWithItem:datasource:statusText:optionFlags:", a1, v28, v34, 0);

LABEL_39:
        goto LABEL_40;
      }
    }
    else
    {

    }
    if (v28)
    {
      v43 = v6 ^ 1;
      v44 = objc_msgSend(a1, "messageID");
      if (v44 > objc_msgSend(v28, "messageIDOfLastMessageInSession"))
        objc_msgSend(v28, "endShowingLastConsumedBreadcrumb");
      v45 = [IMTranscriptPluginChatItem alloc];
      if (v5 == 3)
        v46 = 1;
      else
        v46 = v43;
      v18 = -[IMTranscriptPluginChatItem _initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:](v45, "_initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:", a1, v26, 0, 0, 0x7FFFFFFFFFFFFFFFLL, v46);
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v47 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
        {
          -[IMPluginPayload pluginBundleID](v26, "pluginBundleID");
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          LODWORD(buf) = 138412290;
          *(_QWORD *)((char *)&buf + 4) = v48;
          _os_log_impl(&dword_1A1FF4000, v47, OS_LOG_TYPE_INFO, "Failed to find plugin data source for identifier '%@'", (uint8_t *)&buf, 0xCu);

        }
      }
      v18 = 0;
    }
    goto LABEL_39;
  }
  if (v7 != 3)
  {
LABEL_17:
    if ((v7 & 0xFFFFFFFFFFFFFFF8) == 0xBB8 || (v7 & 0xFFFFFFFFFFFFFFF8) == 0x7D0)
    {
      v40 = [IMMessageAcknowledgmentChatItem alloc];
      objc_msgSend(a1, "_senderHandle");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(a1, "tapback");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = -[IMMessageAcknowledgmentChatItem _initWithItem:sender:tapback:](v40, "_initWithItem:sender:tapback:", a1, v22, v41);

LABEL_22:
      goto LABEL_40;
    }
LABEL_23:
    v18 = 0;
    goto LABEL_40;
  }
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v52 = 0x2020000000;
  v53 = 0;
  objc_msgSend(a1, "body");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "body");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "length");
  v11 = *MEMORY[0x1E0D36328];
  v50[0] = MEMORY[0x1E0C809B0];
  v50[1] = 3221225472;
  v50[2] = sub_1A211A7B8;
  v50[3] = &unk_1E47221D8;
  v50[4] = &buf;
  objc_msgSend(v8, "enumerateAttribute:inRange:options:usingBlock:", v11, 0, v10, 0, v50);

  if ((*(_BYTE *)(*((_QWORD *)&buf + 1) + 24) & 4) != 0)
  {
    v18 = 0;
  }
  else
  {
    v12 = -[IMPluginPayload initWithMessageItem:]([IMPluginPayload alloc], "initWithMessageItem:", a1);
    +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "dataSourceForPluginPayload:", v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = [IMTranscriptPluginBreadcrumbChatItem alloc];
    objc_msgSend(a1, "body");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "string");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = -[IMTranscriptPluginBreadcrumbChatItem _initWithItem:datasource:statusText:optionFlags:](v15, "_initWithItem:datasource:statusText:optionFlags:", a1, v14, v17, *(_QWORD *)(*((_QWORD *)&buf + 1) + 24));

  }
  _Block_object_dispose(&buf, 8);
LABEL_40:

  return v18;
}

void sub_1A211A770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A211A71CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A211A7B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v7;

  v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = (int)objc_msgSend(v7, "intValue");
    *a5 = 1;
  }

}

BOOL sub_1A211A828(void *a1)
{
  return (objc_msgSend(a1, "associatedMessageType") & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void sub_1A211AE7C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;

  v7 = *(void **)(a1 + 32);
  objc_msgSend(a2, "guid");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v7) = objc_msgSend(v7, "isEqualToString:", v8);

  if ((_DWORD)v7)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

uint64_t sub_1A211AEF0()
{
  uint64_t result;

  result = IMShouldShowEmotes();
  byte_1ECF11FC0 = result;
  return result;
}

uint64_t sub_1A211AF0C(uint64_t a1, void *a2)
{
  id v2;
  char v3;

  v2 = a2;
  if (objc_msgSend(v2, "type"))
  {
    v3 = 0;
  }
  else
  {
    objc_opt_class();
    v3 = objc_opt_isKindOfClass() ^ 1;
  }

  return v3 & 1;
}

void sub_1A211AF60(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  objc_class *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  double v22;
  int v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  objc_msgSend(v6, "_item");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v8 = v7;
    objc_msgSend(v8, "time");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v9, "compare:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40)) == -1)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
          v23 = 138412546;
          v24 = (uint64_t)v9;
          v25 = 2112;
          v26 = v17;
          _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "Message time %@ is outside urgent grace period start window %@", (uint8_t *)&v23, 0x16u);
        }

      }
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
      *a4 = 1;
      goto LABEL_28;
    }
    if (objc_msgSend(v8, "isFromMe") && objc_msgSend(v8, "didNotifyRecipient"))
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          LOWORD(v23) = 0;
          _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Found a recent message that broke through recipients dnd within the grace period window. Grace period is active.", (uint8_t *)&v23, 2u);
        }

      }
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
      *a4 = 1;
      goto LABEL_28;
    }
    if ((objc_msgSend(v8, "isFromMe") & 1) != 0)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v8, "guid");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v23 = 138412802;
          v24 = (uint64_t)v15;
          v25 = 2048;
          v26 = objc_msgSend(v8, "isFromMe");
          v27 = 2048;
          v28 = objc_msgSend(v8, "didNotifyRecipient");
          _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Message %@ did not impact grace period. isFromMe: %ld, didNotify: %ld", (uint8_t *)&v23, 0x20u);

        }
LABEL_27:

      }
    }
    else
    {
      objc_msgSend(v9, "dateByAddingTimeInterval:", -*(double *)(a1 + 48));
      v18 = objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
      v20 = *(void **)(v19 + 40);
      *(_QWORD *)(v19 + 40) = v18;

      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "timeIntervalSinceNow");
      v22 = v21;
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          v23 = 134217984;
          v24 = (uint64_t)(v22 / 60.0);
          _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Found a received message in the chat within the grace period window, extending grace period to %ld minutes.", (uint8_t *)&v23, 0xCu);
        }
        goto LABEL_27;
      }
    }
LABEL_28:

    goto LABEL_29;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = (objc_class *)objc_opt_class();
      NSStringFromClass(v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = 138412290;
      v24 = (uint64_t)v13;
      _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "Item is not a message. Item class: %@", (uint8_t *)&v23, 0xCu);

    }
  }
LABEL_29:

}

BOOL sub_1A211B390(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = !objc_msgSend(v2, "type") && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
    || objc_msgSend(v2, "type") == 6;

  return v3;
}

uint64_t sub_1A211B3F4(uint64_t a1, void *a2)
{
  id v2;
  char v3;

  v2 = a2;
  if (objc_msgSend(v2, "type"))
  {
    v3 = 0;
  }
  else
  {
    objc_opt_class();
    v3 = objc_opt_isKindOfClass() ^ 1;
  }

  return v3 & 1;
}

BOOL sub_1A211B448(void *a1)
{
  id v1;
  _BOOL8 v2;
  void *v3;

  v1 = a1;
  if ((IMShouldHandleInternalPhishingAttempts() & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    objc_msgSend(v1, "lastFinishedMessageItem");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = +[IMCarrierReportJunkHelper isReportJunkServiceAllowedForMessageItem:junkChatStyle:](IMCarrierReportJunkHelper, "isReportJunkServiceAllowedForMessageItem:junkChatStyle:", v3, objc_msgSend(v1, "chatStyle"));

  }
  return v2;
}

void sub_1A211B4C0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  id v7;

  v7 = a2;
  if (objc_msgSend(v7, "type"))
  {
    v6 = 0;
  }
  else
  {
    objc_msgSend(v7, "message");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 32), "hasSurfRequestNotFromMe:", v6))
    {
      objc_msgSend(*(id *)(a1 + 32), "setHasSurfRequest:", 1);
      *a4 = 1;
    }
  }

}

uint64_t sub_1A211B544(uint64_t a1, void *a2)
{
  id v2;
  char v3;

  v2 = a2;
  if (objc_msgSend(v2, "type"))
  {
    v3 = 0;
  }
  else
  {
    objc_opt_class();
    v3 = objc_opt_isKindOfClass() ^ 1;
  }

  return v3 & 1;
}

void sub_1A211B598(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

void sub_1A211B5AC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

uint64_t IMItemCompareSortIDs(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  uint64_t v10;
  int v12;
  id v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!IMSharedHelperPinUnsentMessagesToBottom())
    goto LABEL_15;
  if (!objc_msgSend(v3, "messageID") || !objc_msgSend(v4, "messageID"))
  {
LABEL_12:
    v6 = sub_1A211B7F8(v3, v4);
LABEL_23:
    v5 = v6;
    goto LABEL_25;
  }
  if ((sub_1A211B854(v3, v4) & 1) == 0)
  {
    if ((objc_msgSend(v3, "unsentIsFromMeItem") & 1) != 0 || objc_msgSend(v4, "unsentIsFromMeItem"))
    {
      if (objc_msgSend(v3, "unsentIsFromMeItem") && !objc_msgSend(v4, "unsentIsFromMeItem"))
      {
        v5 = 1;
        goto LABEL_25;
      }
      if (objc_msgSend(v4, "unsentIsFromMeItem") && !objc_msgSend(v3, "unsentIsFromMeItem"))
      {
        v5 = -1;
        goto LABEL_25;
      }
      goto LABEL_12;
    }
    if (!objc_msgSend(v3, "sortID") || !objc_msgSend(v4, "sortID"))
    {
      v6 = Testing_IMItemOrderMessageByDate_0(v3, v4);
      goto LABEL_23;
    }
LABEL_15:
    v7 = objc_msgSend(v3, "sortID");
    if (v7 != objc_msgSend(v4, "sortID"))
    {
      v9 = objc_msgSend(v3, "sortID") - 1;
      v10 = objc_msgSend(v4, "sortID");
      v5 = (__PAIR128__(v9 > v10 - 1, v9) - (unint64_t)(v10 - 1)) >> 64;
      goto LABEL_25;
    }
    if ((sub_1A211B854(v3, v4) & 1) == 0 && objc_msgSend(v3, "sortID") && IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v12 = 138412546;
        v13 = v3;
        v14 = 2112;
        v15 = v4;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "We have items with the same sortID that have different guids item1 %@ item2 %@", (uint8_t *)&v12, 0x16u);
      }

    }
    v6 = sub_1A211B7F8(v3, v4);
    goto LABEL_23;
  }
  v5 = 0;
LABEL_25:

  return v5;
}

uint64_t sub_1A211B7F8(void *a1, void *a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;

  v3 = a2;
  v4 = objc_msgSend(a1, "messageID") - 1;
  v5 = objc_msgSend(v3, "messageID");

  return (__PAIR128__(v4 > v5 - 1, v4) - (unint64_t)(v5 - 1)) >> 64;
}

uint64_t sub_1A211B854(void *a1, void *a2)
{
  id v3;
  id v4;
  objc_class *Class;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  Class = object_getClass(v3);
  if (Class == object_getClass(v4))
    v6 = sub_1A211BB9C(v3, v4);
  else
    v6 = 0;

  return v6;
}

uint64_t Testing_IMItemOrderMessageByDate_0(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v3, "messageID") || !objc_msgSend(v4, "messageID"))
    goto LABEL_8;
  objc_msgSend(v3, "time");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "time");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v5, "compare:", v6);

  if (v7 == 1)
    goto LABEL_9;
  if (!v7)
  {
LABEL_8:
    v7 = sub_1A211B7F8(v3, v4);
    goto LABEL_9;
  }
  if (v7 != -1)
    v7 = 0;
LABEL_9:

  return v7;
}

uint64_t _IMItemsControllerInsertionIndexForItem(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "indexOfObject:inSortedRange:options:usingComparator:", v4, 0, objc_msgSend(v3, "count"), 1536, &unk_1E471DA18);

  if (v5 == 0x7FFFFFFFFFFFFFFFLL)
    return -1;
  else
    return v5;
}

uint64_t sub_1A211B9FC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  v3 = sub_1A211D114(a2, a3, 0, 0);
  if (v3 == -1)
    return -1;
  else
    return v3 == 1;
}

uint64_t _IMItemsControllerIndexOfExistingItem(void *a1, void *a2, char a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD v10[4];
  id v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = a2;
  v14 = 0;
  v15 = &v14;
  v16 = 0x2020000000;
  v17 = 0x7FFFFFFFFFFFFFFFLL;
  v6 = a1;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = sub_1A211BB24;
  v10[3] = &unk_1E4722770;
  v13 = a3;
  v7 = v5;
  v11 = v7;
  v12 = &v14;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v10);
  if (v15[3] == 0x7FFFFFFFFFFFFFFFLL)
    v8 = -1;
  else
    v8 = v15[3];

  _Block_object_dispose(&v14, 8);
  return v8;
}

void sub_1A211BB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A211BB24(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  void *v8;
  id v9;

  v7 = a2;
  v8 = *(void **)(a1 + 32);
  v9 = v7;
  if (!*(_BYTE *)(a1 + 48))
  {
    if (!sub_1A211BB9C(v8, v7))
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((sub_1A211B854(v8, v7) & 1) != 0)
  {
LABEL_3:
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
LABEL_4:

}

uint64_t sub_1A211BB9C(void *a1, void *a2)
{
  id v3;
  id v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  int v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  id v20;
  void *v21;
  void *v22;

  v3 = a1;
  v4 = a2;
  if (v3 == v4)
    goto LABEL_16;
  v5 = objc_msgSend(v3, "isTypingOrCancelTypingMessage");
  v6 = objc_msgSend(v4, "isTypingOrCancelTypingMessage");
  if (!v5 || !v6)
  {
    if (qword_1EE65F298 != -1)
      dispatch_once(&qword_1EE65F298, &unk_1E471C4B0);
    if (!byte_1EE65F290)
      goto LABEL_17;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_17;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_17;
    objc_msgSend(v3, "service");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (_QWORD *)MEMORY[0x1E0D38F70];
    if (objc_msgSend(v9, "isEqualToString:", *MEMORY[0x1E0D38F70]))
    {

    }
    else
    {
      objc_msgSend(v4, "service");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "isEqualToString:", *v10);

      if (!v12)
        goto LABEL_17;
    }
    v13 = v3;
    v14 = v4;
    objc_msgSend(v13, "guid");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "fallbackHash");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v15, "isEqualToString:", v16) & 1) != 0)
    {

LABEL_16:
      v8 = 1;
      goto LABEL_18;
    }
    objc_msgSend(v14, "guid");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "fallbackHash");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v17, "isEqualToString:", v18);

    if ((v19 & 1) != 0)
      goto LABEL_16;
LABEL_17:
    v20 = v4;
    objc_msgSend(v3, "guid");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "guid");
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    v8 = objc_msgSend(v21, "isEqualToString:", v22);
    goto LABEL_18;
  }
  v7 = objc_msgSend(v3, "isFromMe");
  v8 = v7 ^ objc_msgSend(v4, "isFromMe") ^ 1;
LABEL_18:

  return v8;
}

void _IMItemsControllerHandleItem(void *a1, void *a2, void *a3, char a4, uint64_t a5, int a6)
{
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  CFIndex v19;
  void *v20;
  id v21;
  __int128 buf;
  void (*v23)(uint64_t, void *, CFIndex);
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v10 = a1;
  v11 = a3;
  if (objc_msgSend(v11, "isMessageAcknowledgment"))
  {
    v21 = v10;
    v12 = v11;
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v12;
        _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Insert associated item %@", (uint8_t *)&buf, 0xCu);
      }

    }
    objc_msgSend(v12, "guid");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "associatedMessageGUID");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)&buf = MEMORY[0x1E0C809B0];
    *((_QWORD *)&buf + 1) = 3221225472;
    v23 = sub_1A211CF4C;
    v24 = &unk_1E4722800;
    v25 = v15;
    v26 = v12;
    v27 = v14;
    v28 = a2;
    v16 = v15;
    v17 = v12;
    v18 = v14;
    objc_msgSend(a2, "enumerateObjectsWithOptions:usingBlock:", 2, &buf);

  }
  v19 = _IMItemsControllerIndexOfExistingItem(a2, v11, a4);
  if (sub_1A211C088((const __CFArray *)a2, v19, v11))
  {
    if (v19 == -1 || !a6)
    {
      if (v19 == -1)
      {
        v19 = _IMItemsControllerInsertionIndexForItem(a2, v11);
        v20 = 0;
      }
      else
      {
        CFArrayGetValueAtIndex((CFArrayRef)a2, v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        CFArrayRemoveValueAtIndex((CFMutableArrayRef)a2, v19);
        v19 = _IMItemsControllerInsertionIndexForItem(a2, v11);
      }
    }
    else
    {
      CFArrayGetValueAtIndex((CFArrayRef)a2, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      CFArrayRemoveValueAtIndex((CFMutableArrayRef)a2, v19);
    }
    CFArrayInsertValueAtIndex((CFMutableArrayRef)a2, v19, v11);
    objc_msgSend(v10, "_didReplaceItem:oldItem:idx:", a2, v20, v19);

  }
}

uint64_t sub_1A211C088(const __CFArray *a1, CFIndex a2, void *a3)
{
  __CFString *v5;
  void *v6;
  __CFString *v7;
  __CFString *v8;
  NSObject *v9;
  __CFString *v10;
  NSObject *v11;
  const __CFString *v12;
  int v13;
  int v14;
  const __CFString *v15;
  const __CFString *v16;
  uint64_t v17;
  __CFString *v18;
  int v20;
  const __CFString *v21;
  __int16 v22;
  const __CFString *v23;
  __int16 v24;
  const __CFString *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (a2 == -1 || (v6 = (id)CFArrayGetValueAtIndex(a1, a2)) == 0)
  {
    if (CFArrayGetCount(a1) < 1)
    {
      v8 = 0;
    }
    else
    {
      v7 = (id)CFArrayGetValueAtIndex(a1, 0);
      v8 = v7;
      if (v7
        && -[__CFString messageID](v7, "messageID")
        && (-[__CFString unsentIsFromMeItem](v8, "unsentIsFromMeItem") & 1) == 0
        && IMItemCompareSortIDs(v5, v8) < 0)
      {
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v9 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
          {
            v20 = 138412546;
            v21 = v8;
            v22 = 2112;
            v23 = v5;
            _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "We are not insert an item we want to firstItem: %@ item: %@", (uint8_t *)&v20, 0x16u);
          }

        }
        v6 = 0;
        goto LABEL_34;
      }
    }

    v6 = 0;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_43;
  v10 = v5;
  if ((!-[__CFString isTypingOrCancelTypingMessage](v10, "isTypingOrCancelTypingMessage")
     || (-[__CFString isFromMe](v10, "isFromMe") & 1) == 0)
    && (-[__CFString isSystemMessage](v10, "isSystemMessage") & 1) == 0
    && !-[__CFString isSuggestedActionResponse](v10, "isSuggestedActionResponse"))
  {
    if (-[__CFString isTypingOrCancelTypingMessage](v10, "isTypingOrCancelTypingMessage"))
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        if (objc_msgSend(v6, "isFinished"))
        {
          if (!IMOSLoggingEnabled())
            goto LABEL_33;
          OSLogHandleForIMFoundationCategory();
          v11 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            -[__CFString guid](v10, "guid");
            v18 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v20 = 138412290;
            v21 = v18;
            _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "Rejecting a late typing indicator with GUID: %@", (uint8_t *)&v20, 0xCu);

          }
          goto LABEL_32;
        }
      }
    }

LABEL_43:
    v17 = 1;
    goto LABEL_44;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      if (-[__CFString isTypingOrCancelTypingMessage](v10, "isTypingOrCancelTypingMessage"))
        v12 = CFSTR("YES");
      else
        v12 = CFSTR("NO");
      v13 = -[__CFString isFromMe](v10, "isFromMe");
      v14 = -[__CFString isSystemMessage](v10, "isSystemMessage");
      if (v13)
        v15 = CFSTR("YES");
      else
        v15 = CFSTR("NO");
      v20 = 138412802;
      if (v14)
        v16 = CFSTR("YES");
      else
        v16 = CFSTR("NO");
      v21 = v12;
      v22 = 2112;
      v23 = v15;
      v24 = 2112;
      v25 = v16;
      _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "We are not insert an item we want to isTypingOrCancelTypingMessage %@ isFromMed %@ isSystemMessage %@", (uint8_t *)&v20, 0x20u);
    }
LABEL_32:

  }
LABEL_33:

LABEL_34:
  v17 = 0;
LABEL_44:

  return v17;
}

void sub_1A211C3C8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A211C2C8);
  }
  _Unwind_Resume(a1);
}

void _IMItemsControllerReplaceItems(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  CFIndex v20;
  CFIndex Count;
  CFIndex v22;
  void *v23;
  void *v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  id v30;
  id v31;
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  if (a2)
  {
    v6 = a2;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
    v6 = (id)objc_claimAutoreleasedReturnValue();
  }
  v7 = v6;
  if (a3)
  {
    v8 = a3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
    v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  v25 = v7;
  objc_msgSend(v8, "differenceFromArray:withOptions:usingEquivalenceTest:", v7, 0, &unk_1E47227B0, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = 0;
  v31 = 0;
  IMIndexesFromOrderedCollectionDifference(v9, &v31, &v30);
  v10 = v31;
  v11 = v30;
  objc_msgSend(a2, "objectsAtIndexes:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a2, "removeObjectsAtIndexes:", v11);
  objc_msgSend(a3, "objectsAtIndexes:", v10);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a2, "insertObjects:atIndexes:", v13, v10);

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v14 = v12;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v27 != v17)
          objc_enumerationMutation(v14);
        v19 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        if (_IMItemsControllerIndexOfExistingItem(a2, v19, 0) == -1
          && sub_1A211C088((const __CFArray *)a2, -1, v19))
        {
          v20 = _IMItemsControllerInsertionIndexForItem(a2, v19);
          CFArrayInsertValueAtIndex((CFMutableArrayRef)a2, v20, v19);
        }
      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v16);
  }

  Count = CFArrayGetCount((CFArrayRef)a2);
  if (Count)
  {
    v22 = Count - 1;
    do
    {
      CFArrayGetValueAtIndex((CFArrayRef)a2, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "_didReplaceItem:oldItem:idx:", a2, v23, v22);

      --v22;
    }
    while (v22 != -1);
  }

}

BOOL sub_1A211C680(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  _BOOL8 v6;

  v4 = a2;
  v5 = a3;
  if (sub_1A211B854(v4, v5))
    v6 = sub_1A211D114(v4, v5, 0, 1) == 0;
  else
    v6 = 0;

  return v6;
}

uint64_t sub_1A211C6F4(void *a1, void *a2, uint64_t a3)
{
  return sub_1A211D114(a1, a2, a3, 1);
}

void _IMItemsControllerSortItems(const __CFArray *a1)
{
  CFRange v2;

  v2.length = CFArrayGetCount(a1);
  v2.location = 0;
  CFArraySortValues(a1, v2, (CFComparatorFunction)sub_1A211C6F4, 0);
}

double _IMTypingMessageTimeout()
{
  uint64_t v0;
  double result;

  v0 = IMGetCachedDomainIntForKey();
  result = (double)v0;
  if (!v0)
    return 60.0;
  return result;
}

id _IMItemsControllerGetTypingMessage(const __CFArray *a1)
{
  CFIndex Count;
  CFIndex v3;
  void *v4;

  Count = CFArrayGetCount(a1);
  if (Count < 1)
  {
LABEL_7:
    v4 = 0;
  }
  else
  {
    v3 = Count + 1;
    while (1)
    {
      CFArrayGetValueAtIndex(a1, v3 - 2);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0
        && (objc_opt_respondsToSelector() & 1) != 0
        && (objc_msgSend(v4, "isTypingMessage") & 1) != 0)
      {
        break;
      }

      if ((unint64_t)--v3 <= 1)
        goto LABEL_7;
    }
  }
  return v4;
}

void sub_1A211C998(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  void *v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  void *v10;
  const __CFArray *v11;
  CFIndex LastIndexOfValue;
  void *value;
  CFRange v14;

  if ((objc_msgSend(*(id *)(a1 + 32), "isCancelTypingMessage") & 1) != 0
    || objc_msgSend(*(id *)(a1 + 32), "expireState") == 2)
  {
    goto LABEL_3;
  }
  if (!objc_msgSend(*(id *)(a1 + 32), "isIncomingTypingMessage"))
    goto LABEL_11;
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "timeIntervalSinceReferenceDate");
  v4 = v3;
  objc_msgSend(*(id *)(a1 + 32), "time");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "timeIntervalSinceReferenceDate");
  v7 = v4 - v6;
  v8 = IMGetCachedDomainIntForKey();
  v9 = v8 ? (double)v8 : 60.0;

  if (v7 >= v9)
  {
LABEL_3:
    CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 48), *(_QWORD *)(a1 + 56));
  }
  else
  {
LABEL_11:
    if (!*(_QWORD *)(a1 + 40)
      && (objc_msgSend(*(id *)(a1 + 32), "isFromMe") & 1) == 0
      && (objc_msgSend(*(id *)(a1 + 32), "isTypingOrCancelTypingMessage") & 1) == 0)
    {
      _IMItemsControllerGetTypingMessage(*(const __CFArray **)(a1 + 48));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
      {
        v11 = *(const __CFArray **)(a1 + 48);
        value = v10;
        v14.length = CFArrayGetCount(v11);
        v14.location = 0;
        LastIndexOfValue = CFArrayGetLastIndexOfValue(v11, v14, value);
        CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 48), LastIndexOfValue);
        v10 = value;
      }

    }
  }
}

uint64_t sub_1A211CAFC()
{
  return 0;
}

uint64_t sub_1A211CB04()
{
  return 0;
}

uint64_t sub_1A211CB0C()
{
  return 0;
}

uint64_t sub_1A211CB14()
{
  return 0;
}

BOOL sub_1A211CB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (a3 & 0x1000000005) == 0;
}

uint64_t sub_1A211CB30(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if ((a3 & 0x1000800001) == 1)
    return (a4 ^ 1) & (a3 >> 3);
  else
    return 0;
}

uint64_t sub_1A211CB54(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if ((a3 & 0x1000800001) == 1)
    return (a4 ^ 1) & (a3 >> 3);
  else
    return (a3 & 0x1000800000) == 0;
}

uint64_t sub_1A211CB84(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if ((a3 & 0x1000800005) == 1)
    return (a4 ^ 1) & (a3 >> 3);
  else
    return (a3 & 0x1000800004) == 0;
}

uint64_t sub_1A211CBB4(void *a1)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0D39918];
  objc_msgSend(a1, "flags");
  return MEMORY[0x1E0DE7D20](v1, sel_isIncomingTypingMessage_);
}

uint64_t sub_1A211CBE0(void *a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1E0D39918];
  objc_msgSend(a1, "flags");
  objc_msgSend(a1, "hasEditedParts");
  return MEMORY[0x1E0DE7D20](v2, sel_isCancelTypingMessage_isEditedMessage_);
}

uint64_t sub_1A211CC28(void *a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1E0D39918];
  objc_msgSend(a1, "flags");
  objc_msgSend(a1, "hasEditedParts");
  return MEMORY[0x1E0DE7D20](v2, sel_isTypingOrCancelTypingMessage_isEditedMessage_);
}

uint64_t sub_1A211CC70(void *a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1E0D39918];
  objc_msgSend(a1, "flags");
  objc_msgSend(a1, "hasEditedParts");
  return MEMORY[0x1E0DE7D20](v2, sel_isIncomingTypingOrCancelTypingMessage_isEditedMessage_);
}

id sub_1A211CCB8(void *a1)
{
  objc_super v3;

  if (objc_msgSend(a1, "associatedMessageType") == 3 || objc_msgSend(a1, "associatedMessageType") == 2)
    return 0;
  v3.receiver = a1;
  v3.super_class = (Class)&off_1EE6A20E0;
  return objc_msgSendSuper2(&v3, sel_isIncomingTypingMessage);
}

id sub_1A211CD1C(void *a1)
{
  objc_super v3;

  if (objc_msgSend(a1, "associatedMessageType") == 3 || objc_msgSend(a1, "associatedMessageType") == 2)
    return 0;
  v3.receiver = a1;
  v3.super_class = (Class)&off_1EE6A20E0;
  return objc_msgSendSuper2(&v3, sel_isCancelTypingMessage);
}

id sub_1A211CD80(void *a1)
{
  objc_super v3;

  if (objc_msgSend(a1, "associatedMessageType") == 3 || objc_msgSend(a1, "associatedMessageType") == 2)
    return 0;
  v3.receiver = a1;
  v3.super_class = (Class)&off_1EE6A20E0;
  return objc_msgSendSuper2(&v3, sel_isTypingOrCancelTypingMessage);
}

id sub_1A211CDE4(void *a1)
{
  objc_super v3;

  if (objc_msgSend(a1, "associatedMessageType") == 3 || objc_msgSend(a1, "associatedMessageType") == 2)
    return 0;
  v3.receiver = a1;
  v3.super_class = (Class)&off_1EE6A20E0;
  return objc_msgSendSuper2(&v3, sel_isIncomingTypingOrCancelTypingMessage);
}

void sub_1A211CF4C(uint64_t a1, void *a2, CFIndex a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  NSObject *v10;
  void *v11;
  int v12;
  int v13;
  CFIndex v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  if (objc_msgSend(v5, "isMessageAcknowledgment"))
  {
    objc_msgSend(v5, "associatedMessageGUID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v6, "isEqualToString:", *(_QWORD *)(a1 + 32)))
    {
      if (objc_msgSend(*(id *)(a1 + 40), "isFromMe") && objc_msgSend(v5, "isFromMe"))
      {

LABEL_8:
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v10 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            v13 = 134217984;
            v14 = a3;
            _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "_IMItemsControllerInsertMessageAcknowledgment removed stray ack item at idx %lu", (uint8_t *)&v13, 0xCu);
          }

        }
        CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 56), a3);
        goto LABEL_16;
      }
      objc_msgSend(*(id *)(a1 + 40), "sender");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "sender");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v7, "isEqualToString:", v8);

      if ((v9 & 1) != 0)
        goto LABEL_8;
    }
    else
    {

    }
  }
  if (objc_msgSend(v5, "isTypingOrCancelTypingMessage"))
  {
    objc_msgSend(v5, "guid");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "isEqualToString:", *(_QWORD *)(a1 + 48));

    if (v12)
      CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 56), a3);
  }
LABEL_16:

}

uint64_t sub_1A211D114(void *a1, void *a2, uint64_t a3, int a4)
{
  id v6;
  id v7;
  void *v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;

  v6 = a1;
  v7 = a2;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "stewieEnabled");

  if (v9)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v10 = v6;
        v11 = v7;
        if (objc_msgSend(v10, "isStewie") && objc_msgSend(v11, "isStewie"))
        {
          v12 = v10;
          v13 = v11;
          objc_msgSend(v12, "stewieConversationUUID");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "stewieConversationUUID");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = objc_msgSend(v14, "isEqual:", v15);

          if (v16
            && (v17 = objc_msgSend(v12, "stewieSequenceNumber"), v17 != objc_msgSend(v13, "stewieSequenceNumber")))
          {
            v26 = objc_msgSend(v12, "stewieSequenceNumber");
            v27 = v26 > objc_msgSend(v13, "stewieSequenceNumber");
            v28 = objc_msgSend(v12, "stewieSequenceNumber");
            v18 = v27 - (v28 < objc_msgSend(v13, "stewieSequenceNumber"));
          }
          else
          {
            v18 = Testing_IMItemOrderMessageByDate_0(v12, v13);
          }

          goto LABEL_25;
        }

      }
    }
  }
  if (a4)
    v19 = Testing_IMItemOrderMessageByDate_0(v6, v7);
  else
    v19 = IMItemCompareSortIDs(v6, v7);
  v18 = v19;
  if (!v19)
  {
    v20 = objc_msgSend(v6, "isIncomingTypingOrCancelTypingMessage");
    v18 = v20 - objc_msgSend(v7, "isIncomingTypingOrCancelTypingMessage");
    if (!v18)
    {
      objc_msgSend(v6, "consumedSessionPayloads");
      v21 = objc_claimAutoreleasedReturnValue();
      if (v21
        && (v22 = (void *)v21,
            objc_msgSend(v7, "consumedSessionPayloads"),
            v23 = (void *)objc_claimAutoreleasedReturnValue(),
            v23,
            v22,
            !v23))
      {
        v18 = 1;
      }
      else
      {
        objc_msgSend(v6, "consumedSessionPayloads");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        if (v24)
        {

          v18 = 0;
        }
        else
        {
          objc_msgSend(v7, "consumedSessionPayloads");
          v25 = (void *)objc_claimAutoreleasedReturnValue();

          if (v25)
            v18 = -1;
          else
            v18 = 0;
        }
      }
    }
  }
LABEL_25:

  return v18;
}

void sub_1A211D370()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  byte_1EE65F290 = objc_msgSend(v0, "isCarrierPigeonEnabled");

}

void sub_1A211D4BC()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;

  v0 = objc_alloc_init(MEMORY[0x1E0C8F2B8]);
  objc_msgSend(v0, "aa_primaryAppleAccount");
  v3 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "aa_personID");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)qword_1EE65F650;
  qword_1EE65F650 = v1;

}

void sub_1A211D8BC(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a3;
  v5 = a2;
  v9 = (id)objc_opt_new();
  v6 = (void *)objc_opt_new();
  objc_msgSend(v9, "source");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sendEvent:", v5);

  objc_msgSend(v6, "source");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "sendEvent:", v4);

}

id sub_1A211E0C4()
{
  if (qword_1EE65F670 != -1)
    dispatch_once(&qword_1EE65F670, &unk_1E471C350);
  return (id)qword_1EE65F668;
}

void sub_1A211E144()
{
  IMCoreAccountsMonitor *v0;
  void *v1;

  v0 = objc_alloc_init(IMCoreAccountsMonitor);
  v1 = (void *)qword_1EE65F660;
  qword_1EE65F660 = (uint64_t)v0;

}

void sub_1A211E250(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    sub_1A211E0C4();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "aa_primaryAppleAccount");
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 16);
    *(_QWORD *)(v4 + 16) = v3;

    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
    IMLogHandleForCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
        v15 = 138412290;
        v16 = v9;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_DEFAULT, "Cache primary apple account: %@", (uint8_t *)&v15, 0xCu);
      }
    }
    else
    {
      if (v8)
      {
        LOWORD(v15) = 0;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_DEFAULT, "No primary apple account", (uint8_t *)&v15, 2u);
      }

      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v10 = objc_claimAutoreleasedReturnValue();
      v11 = *(_QWORD *)(a1 + 32);
      v7 = *(NSObject **)(v11 + 16);
      *(_QWORD *)(v11 + 16) = v10;
    }

  }
  v12 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v12, "isEqual:", v13) & 1) != 0)
    v14 = 0;
  else
    v14 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v14);

}

void sub_1A211E494(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  uint8_t v5[16];

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    IMLogHandleForCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_DEFAULT, "ACDAccountStoreDidChangeNotification - Clearing cached primary apple account", v5, 2u);
    }

    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(void **)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;

  }
}

void sub_1A211E550()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0C8F2B8]);
  v1 = (void *)qword_1EE65F668;
  qword_1EE65F668 = (uint64_t)v0;

}

void sub_1A211E6B0()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.Messages", "IMRuntimeTest");
  v1 = (void *)qword_1ECF123F8;
  qword_1ECF123F8 = (uint64_t)v0;

}

void sub_1A211E780(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "listener");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "syncStats");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "didFetchSyncStateStats:", v3);

}

void sub_1A211E980(uint64_t a1)
{
  void *v2;
  id v3;

  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "listener");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "didAttemptToSetEnabledTo:result:", *(unsigned __int8 *)(a1 + 32), 1);

}

void sub_1A211EFD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 48);
  IMSingleObjectArray();
  v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v1, v3);

}

uint64_t sub_1A211F4C8(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A211F6F4(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A211F920(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A211FDDC(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_finishTest);
}

uint64_t IMRegisterForPreferredAccountChangeNotifications()
{
  if (qword_1EE65F3D8 != -1)
    dispatch_once(&qword_1EE65F3D8, &unk_1E471DAB8);
  return 1;
}

void sub_1A211FED4()
{
  NSObject *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint8_t v5[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v0 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A1FF4000, v0, OS_LOG_TYPE_INFO, "Registering for preferred account changes", v5, 2u);
    }

  }
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = *MEMORY[0x1E0D36748];
  objc_msgSend(MEMORY[0x1E0CB3828], "mainQueue");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (id)objc_msgSend(v1, "addObserverForName:object:queue:usingBlock:", v2, 0, v3, &unk_1E4722888);

}

void sub_1A211FFCC()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "__mainThreadPostNotificationName:object:", CFSTR("__kIMPreferredAccountForServiceChangedNotification"), 0);

}

id IMOperationalAccountForService(void *a1)
{
  void *v1;
  id v2;

  IMPreferredAccountForService(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "_isUsableForSending"))
    v2 = v1;
  else
    v2 = 0;

  return v2;
}

id IMPreferredAccountForService(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v16;
  int v17;
  id v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  IMPreferredAccountMap();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "internalName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v4, "count"))
  {
LABEL_5:
    +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "_bestOperationalAccountForSendingForService:", v1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v10, "uniqueID");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = 138412546;
          v18 = v1;
          v19 = 2112;
          v20 = v12;
          _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, " Returning default best operational sending account for service: %@    account: %@", (uint8_t *)&v17, 0x16u);

        }
LABEL_13:

      }
    }
    else
    {
      +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "bestAccountForService:", v1);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v10, "uniqueID");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = 138412546;
          v18 = v1;
          v19 = 2112;
          v20 = v14;
          _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, " Returning default best account for service: %@    account: %@", (uint8_t *)&v17, 0x16u);

        }
        goto LABEL_13;
      }
    }
    v5 = v10;
    v7 = v5;
    goto LABEL_15;
  }
  objc_msgSend(v4, "objectForKey:", CFSTR("guid"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "accountForUniqueID:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v7, "_isUsableForSending")
    || (objc_msgSend(v7, "service"), v8 = (id)objc_claimAutoreleasedReturnValue(), v8, v8 != v1))
  {

    goto LABEL_5;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      v17 = 138412546;
      v18 = v1;
      v19 = 2112;
      v20 = v7;
      _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, " Returning preferred sendable account for service: %@    account: %@", (uint8_t *)&v17, 0x16u);
    }

  }
LABEL_15:

  return v7;
}

uint64_t IMSetPreferredAccountForService(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  int v10;
  id v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v10 = 138412546;
        v11 = v4;
        v12 = 2112;
        v13 = v3;
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Updating preferred account for service: %@    account: %@", (uint8_t *)&v10, 0x16u);
      }

    }
    objc_msgSend(v4, "internalName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "uniqueID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = IMUpdatePreferredAccountForService();

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

id IMFindExistingChatForAddresses(void *a1, void *a2, int a3, int a4)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  __objc2_prop *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _BOOL4 v20;
  int v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  NSObject *v26;
  NSObject *v27;
  void *v29;
  char *name;
  id obj;
  uint64_t v33;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint8_t buf[4];
  id v44;
  __int16 v45;
  id v46;
  _BYTE v47[128];
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v29 = v5;
  if (!objc_msgSend(v5, "count"))
  {
    v25 = 0;
    goto LABEL_48;
  }
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  v7 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v8 = v5;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v39, v48, 16, v29);
  if (v9)
  {
    v10 = *(_QWORD *)v40;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v40 != v10)
          objc_enumerationMutation(v8);
        v12 = *(id *)(*((_QWORD *)&v39 + 1) + 8 * i);
        if (objc_msgSend(v12, "_appearsToBePhoneNumber"))
          IMInternationalForPhoneNumberWithOptions();
        else
          objc_msgSend(v12, "lowercaseString");
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v13, "length"))
          objc_msgSend(v7, "addObject:", v13);

      }
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v39, v48, 16);
    }
    while (v9);
  }

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "allExistingChats");
  obj = (id)objc_claimAutoreleasedReturnValue();

  v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v47, 16);
  if (!v15)
  {
LABEL_35:

LABEL_42:
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v44 = v8;
        _os_log_impl(&dword_1A1FF4000, v27, OS_LOG_TYPE_INFO, "[IMFindExistingChatForAddresses] Did not find existing chat for addresses: %@", buf, 0xCu);
      }

    }
    v25 = 0;
    goto LABEL_47;
  }
  v33 = *(_QWORD *)v36;
  v16 = &stru_1E4751000;
LABEL_16:
  v17 = 0;
  name = v16[237].name;
  while (1)
  {
    if (*(_QWORD *)v36 != v33)
      objc_enumerationMutation(obj);
    v18 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * v17);
    objc_msgSend(v18, "displayName");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v6, "isEqualToString:", &stru_1E4725068))
    {

      v6 = 0;
    }
    if (objc_msgSend(v19, "isEqualToString:", &stru_1E4725068))
    {

      v19 = 0;
    }
    if (objc_msgSend(v18, "joinState") == 3 || objc_msgSend(v18, "joinState") == 2)
    {
      v20 = 1;
      if (!v19)
        goto LABEL_28;
    }
    else
    {
      v20 = objc_msgSend(v18, "joinState") == 4;
      if (!v19)
      {
LABEL_28:
        v21 = v6 == 0;
        goto LABEL_29;
      }
    }
    v21 = objc_msgSend(v19, "isEqualToString:", v6);
LABEL_29:
    if ((v21 & ((objc_msgSend(v18, "chatStyle") == 45) ^ a3)) != 1 || ((v20 ^ a4) & 1) != 0)
      goto LABEL_33;
    objc_msgSend(v18, "participants");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "arrayByApplyingSelector:", name);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "__imSetFromArray");
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    if ((objc_msgSend(v24, "isEqualToSet:", v7) & 1) != 0)
      break;

LABEL_33:
    if (v15 == ++v17)
    {
      v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v47, 16);
      v16 = &stru_1E4751000;
      if (v15)
        goto LABEL_16;
      goto LABEL_35;
    }
  }
  v25 = v18;

  if (!v25)
    goto LABEL_42;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      v44 = v25;
      v45 = 2112;
      v46 = v8;
      _os_log_impl(&dword_1A1FF4000, v26, OS_LOG_TYPE_INFO, "[IMFindExistingChatForAddresses] Found existing chat: %@ for addresses: %@", buf, 0x16u);
    }

  }
LABEL_47:

LABEL_48:
  return v25;
}

id IMPreferredSendingAccountForAddressesWithFallbackService(void *a1, void *a2)
{
  return IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(a1, 1, a2);
}

id IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(void *a1, int a2, void *a3)
{
  id v5;
  id v6;
  _BOOL4 v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  int v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  if (a2)
    v7 = (unint64_t)objc_msgSend(v5, "count") > 1;
  else
    v7 = 0;
  IMFindExistingChatForAddresses(v5, 0, v7, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, "account");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (!IMOSLoggingEnabled())
      goto LABEL_13;
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      LOWORD(v14) = 0;
      _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "[IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService] Found existing chat, returning chat's account", (uint8_t *)&v14, 2u);
    }
  }
  else
  {
    IMPreferredAccountForService(v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (!IMOSLoggingEnabled())
      goto LABEL_13;
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v14 = 138412290;
      v15 = v6;
      _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "[IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService] Failed to find existing chat, for fallbackService: %@", (uint8_t *)&v14, 0xCu);
    }
  }

LABEL_13:
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      v14 = 138412290;
      v15 = v10;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "[IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService] account: %@", (uint8_t *)&v14, 0xCu);
    }

  }
  return v10;
}

id IMPreferredSendingAccountForAddressWithFallbackService(void *a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v9[0] = a1;
  v3 = (void *)MEMORY[0x1E0C99D20];
  v4 = a2;
  v5 = a1;
  objc_msgSend(v3, "arrayWithObjects:count:", v9, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v6, 0, v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t sub_1A2120E30(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2;
  v5 = a3;
  v6 = objc_msgSend(v4, "chatResolutionPriority");
  if (v6 <= objc_msgSend(v5, "chatResolutionPriority"))
  {
    v8 = objc_msgSend(v4, "chatResolutionPriority");
    v7 = v8 < objc_msgSend(v5, "chatResolutionPriority");
  }
  else
  {
    v7 = -1;
  }

  return v7;
}

void sub_1A212173C(uint64_t a1, uint64_t a2, BOOL *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  objc_msgSend(*(id *)(a1 + 32), "_cachedChatWithGUID:", a2);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  *a3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) != 0;
}

void sub_1A2121798(uint64_t a1, uint64_t a2, BOOL *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  objc_msgSend(*(id *)(a1 + 32), "_cachedChatWithGUID:", a2);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  *a3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) != 0;
}

uint64_t IMCopyDDScannerResultFromAttributedStringData(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  id v9;
  uint8_t buf[4];
  id v11;
  __int16 v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    v2 = (void *)MEMORY[0x1A8582D94]();
    v9 = 0;
    v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3710]), "initForReadingFromData:error:", v1, &v9);
    v4 = v9;
    if (v3)
    {
      if (!qword_1EE65EA88)
        qword_1EE65EA88 = MEMORY[0x1A858292C](CFSTR("DDScannerResult"), CFSTR("DataDetectorsCore"));
      objc_msgSend(v3, "decodeObjectOfClass:forKey:", objc_opt_class(), CFSTR("dd-result"));
      v5 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "finishDecoding");
      if (v5)
        goto LABEL_16;
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v6 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v3, "error");
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v11 = v1;
          v12 = 2112;
          v13 = v7;
          _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Could not unarchive DDScannerResult data: %@ error: %@", buf, 0x16u);

        }
LABEL_14:

      }
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v11 = v4;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Could not create keyed unarchiver due to error: %@", buf, 0xCu);
      }
      goto LABEL_14;
    }
    v5 = 0;
LABEL_16:

    objc_autoreleasePoolPop(v2);
    goto LABEL_17;
  }
  v5 = 0;
LABEL_17:

  return v5;
}

void sub_1A21221B8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2122168);
  }
  _Unwind_Resume(a1);
}

id _IMDDResultAttributeName()
{
  void *v0;
  void **v1;
  void *v2;

  v0 = (void *)qword_1EE65EAA0;
  if (!qword_1EE65EAA0)
  {
    v1 = (void **)MEMORY[0x1A8582938]("DDResultAttributeName", CFSTR("DataDetectorsCore"));
    if (v1)
      v2 = *v1;
    else
      v2 = 0;
    objc_storeStrong((id *)&qword_1EE65EAA0, v2);
    v0 = (void *)qword_1EE65EAA0;
  }
  return v0;
}

id sub_1A2122334(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  _QWORD v7[4];
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t);
  id v15;

  v1 = a1;
  v10 = 0;
  v11 = &v10;
  v12 = 0x3032000000;
  v13 = sub_1A200AEC4;
  v14 = sub_1A200ACD4;
  v15 = 0;
  v2 = objc_msgSend(v1, "length");
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A212243C;
  v7[3] = &unk_1E4722920;
  v9 = &v10;
  v3 = v1;
  v8 = v3;
  objc_msgSend(v3, "enumerateAttributesInRange:options:usingBlock:", 0, v2, 0, v7);
  v4 = (void *)v11[5];
  if (!v4)
    v4 = v3;
  v5 = v4;

  _Block_object_dispose(&v10, 8);
  return v5;
}

void sub_1A2122424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A212243C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *, void *);
  void *v17;
  id v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;

  v7 = a2;
  v20 = 0;
  v21 = &v20;
  v22 = 0x3032000000;
  v23 = sub_1A200AEC4;
  v24 = sub_1A200ACD4;
  v25 = 0;
  v14 = MEMORY[0x1E0C809B0];
  v15 = 3221225472;
  v16 = sub_1A2122574;
  v17 = &unk_1E47228F8;
  v19 = &v20;
  v8 = v7;
  v18 = v8;
  objc_msgSend(v8, "enumerateKeysAndObjectsUsingBlock:", &v14);
  v9 = v21[5];
  if (v9)
  {
    v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (!v10)
    {
      v11 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy", v14, v15, v16, v17);
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

      v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v9 = v21[5];
    }
    objc_msgSend(v10, "setAttributes:range:", v9, a3, a4, v14, v15, v16, v17);
  }

  _Block_object_dispose(&v20, 8);
}

void sub_1A212255C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2122574(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v14 = a2;
  v5 = a3;
  if (v5)
  {
    +[IMDDController allSupportedDDAttributesKeys](IMDDController, "allSupportedDDAttributesKeys");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "containsObject:", v14);

    if (v7)
    {
      v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      if (!v8)
      {
        v9 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
        v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
        v11 = *(void **)(v10 + 40);
        *(_QWORD *)(v10 + 40) = v9;

        v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      }
      objc_msgSend(v8, "removeObjectForKey:", v14);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v12 = (void *)IMCopyDDScannerResultFromAttributedStringData(v5);
        if (v12)
        {
          _IMDDResultAttributeName();
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setObject:forKey:", v12, v13);

        }
      }
    }
  }

}

id IMOffsetSerializedDDScannerResult(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  NSObject *v13;
  int v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = v3;
  if (a2)
  {
    v5 = (void *)IMCopyDDScannerResultFromAttributedStringData(v3);
    if (v5)
    {
      if (qword_1EE65F680 != -1)
        dispatch_once(&qword_1EE65F680, &unk_1E471DAF8);
      if (off_1EE65F678)
      {
        ((void (*)(uint64_t, uint64_t))off_1EE65F678)(objc_msgSend(v5, "coreResult"), a2);
      }
      else if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v7 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          LOWORD(v15) = 0;
          _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Failed to link DDResultOffsetAbsoluteRange from DataDetectorsCore.", (uint8_t *)&v15, 2u);
        }

      }
      v8 = v5;
      v9 = MEMORY[0x1A858292C](CFSTR("DDScannerResult"), CFSTR("DataDetectorsCore"));
      v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB36F8]), "initRequiringSecureCoding:", 0);
      objc_msgSend(v10, "encodeObject:forKey:", v8, CFSTR("dd-result"));
      objc_msgSend(v10, "encodeObject:forKey:", &unk_1E475ED78, CFSTR("version"));
      v11 = objc_alloc(MEMORY[0x1E0C99D50]);
      objc_msgSend(v10, "encodedData");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (id)objc_msgSend(v11, "initWithData:", v12);

      if (!v6)
      {
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
          {
            v15 = 134218498;
            v16 = v9;
            v17 = 2048;
            v18 = v8;
            v19 = 2112;
            v20 = 0;
            _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "_DDScannerResultClass = %p, ddScannerResult = %p, keyedArchivedData = %@", (uint8_t *)&v15, 0x20u);
          }

        }
        v6 = 0;
      }

    }
    else
    {
      v6 = v4;
    }

  }
  else
  {
    v6 = v3;
  }

  return v6;
}

void *sub_1A2122A04()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("DDResultOffsetAbsoluteRange", CFSTR("DataDetectorsCore"));
  off_1EE65F678 = result;
  return result;
}

void sub_1A2122A70()
{
  IMDDController *v0;
  void *v1;

  v0 = objc_alloc_init(IMDDController);
  v1 = (void *)qword_1ECF12628;
  qword_1ECF12628 = (uint64_t)v0;

}

void sub_1A2122B90()
{
  id v0;

  IMGetMainBundleIdentifier();
  v0 = (id)objc_claimAutoreleasedReturnValue();
  byte_1EE65F688 = objc_msgSend(v0, "isEqualToIgnoringCase:", *MEMORY[0x1E0D36FF8]);

}

void sub_1A2122D7C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;

  v8 = a2;
  if (v8)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v8, "absoluteString");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "replaceCharactersInRange:withString:", a3, a4, v7);

    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        objc_msgSend(*(id *)(a1 + 32), "replaceCharactersInRange:withString:", a3, a4, v8);
    }
  }

}

void sub_1A2122F40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, __int128 a10)
{
  id v10;
  NSObject *v11;

  if (a2)
  {
    if (a2 == 2)
    {
      v10 = objc_begin_catch(exception_object);
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          a9 = 138412546;
          WORD2(a10) = 2112;
          *(_QWORD *)((char *)&a10 + 6) = v10;
          _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "Exception scanning message: [%@] with exception: [%@]", (uint8_t *)&a9, 0x16u);
        }

      }
    }
    else
    {
      objc_begin_catch(exception_object);
    }
    objc_end_catch();
    JUMPOUT(0x1A2122EF8);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A21231A4(uint64_t a1)
{
  id *v2;
  void *v3;
  __CFString *v4;
  void *v5;
  void *v6;
  int v7;
  NSObject *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  const __CFString *v17;
  const __CFString *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD block[4];
  id v22;
  id v23;
  char v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  const __CFString *v28;
  __int16 v29;
  const __CFString *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "text");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "string");
  v4 = (__CFString *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*v2, "text");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v5, "mutableCopy");

  v7 = objc_msgSend(*v2, "isTypingMessage");
  if (v7)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v9 = *(void **)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v26 = v9;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Not scanning message, it is unfinished or empty: %@", buf, 0xCu);
      }
LABEL_14:

    }
  }
  else if ((objc_msgSend(MEMORY[0x1E0D397F8], "supportsDataDetectors") & 1) != 0 || *(_BYTE *)(a1 + 56))
  {
    if (v4 && CFStringGetLength(v4) >= 2)
    {
      v10 = objc_msgSend(*(id *)(a1 + 40), "_scanMessageUsingScanner:attributedString:", *(_QWORD *)(a1 + 32), v6);
      goto LABEL_16;
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(*(id *)(a1 + 32), "guid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v26 = v11;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Did not scan message with guid: %@", buf, 0xCu);

      }
      goto LABEL_14;
    }
  }
  v10 = 0;
LABEL_16:
  v12 = (void *)objc_msgSend(*(id *)(a1 + 32), "copy");
  v13 = objc_msgSend(v12, "flags");
  v14 = v13;
  if (v10)
  {
    objc_msgSend(v12, "_updateText:", v6);
    v15 = v14 | 0x110000;
    if (*(_BYTE *)(a1 + 57))
      objc_msgSend(*(id *)(a1 + 32), "_updateText:", v6);
  }
  else
  {
    v15 = v13 | 0x100000;
  }
  if (*(_BYTE *)(a1 + 57))
    objc_msgSend(*(id *)(a1 + 32), "_updateFlags:", v15);
  objc_msgSend(v12, "_updateFlags:", v15);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      v17 = CFSTR("NO");
      if (v10)
        v18 = CFSTR("YES");
      else
        v18 = CFSTR("NO");
      *(_DWORD *)buf = 138412802;
      v26 = v12;
      v28 = v18;
      v27 = 2112;
      if (!v7)
        v17 = CFSTR("YES");
      v29 = 2112;
      v30 = v17;
      _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, " => Result message: %@  Found Results: %@, wasProcessed = %@", buf, 0x20u);
    }

  }
  v19 = *(_QWORD *)(a1 + 48);
  if (v19)
  {
    v20 = v7 ^ 1u;
    if (*(_BYTE *)(a1 + 57))
    {
      (*(void (**)(uint64_t, uint64_t, void *))(v19 + 16))(v19, v20, v12);
    }
    else
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = sub_1A212354C;
      block[3] = &unk_1E4722948;
      v23 = *(id *)(a1 + 48);
      v24 = v20;
      v22 = v12;
      dispatch_async(MEMORY[0x1E0C80D38], block);

    }
  }

}

void sub_1A2123518(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2123340);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A212354C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 32));
}

void sub_1A21235A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v6[5] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0C99E60];
  v1 = *MEMORY[0x1E0D366C0];
  v6[0] = *MEMORY[0x1E0D36710];
  v6[1] = v1;
  v2 = *MEMORY[0x1E0D36330];
  v6[2] = *MEMORY[0x1E0D362D8];
  v6[3] = v2;
  v6[4] = *MEMORY[0x1E0D363F0];
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 5);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v3);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1EE65F6A0;
  qword_1EE65F6A0 = v4;

}

void sub_1A2123D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1A2123DA4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_processLoadedChatDictionaries:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v4, "count"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138412290;
      v11 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Unblackholed %@ chats, returning first object", (uint8_t *)&v10, 0xCu);

    }
  }
  objc_msgSend(v4, "firstObject");
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

}

id sub_1A212448C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v4 = a3;
  v5 = objc_msgSend(v4, "chatStyle");
  objc_msgSend(v4, "groupID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "participants");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "arrayByApplyingSelector:", &sel_ID);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "lastAddressedHandleID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "originalGroupID");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "chatIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(a1, "muteIdentifiersForChatStyle:groupID:participantIDs:lastAddressedHandleID:originalGroupID:chatIdentifier:", v5, v6, v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

uint64_t sub_1A212457C(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](a1, sel_muteChat_untilDate_syncToPairedDevice_);
}

void sub_1A2124584(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;

  v6 = a4;
  objc_msgSend(a1, "muteIdentifiersForChat:", a3);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "muteChatWithMuteIdentifiers:untilDate:syncToPairedDevice:", v7, v6, 1);

}

id sub_1A21245EC(void *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(a1, "muteIdentifiersForChat:");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "unmuteDateForMuteIdentifiers:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

uint64_t sub_1A2124630(void *a1)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a1, "muteIdentifiersForChat:");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(a1, "isMutedChatForMuteIdentifiers:", v2);

  return v3;
}

void sub_1A2124670(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObserver:selector:name:object:", a1, sel__handleChatGroupIDDidChangeNotification_, CFSTR("__kIMChatRegistryGroupIDChangedNotification"), 0);

}

void sub_1A21246CC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v4 = a3;
  objc_msgSend(v4, "object");
  v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "userInfo");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("__kIMChatRegistryPreviousGroupIDKey"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "userInfo");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "objectForKey:", CFSTR("__kIMChatRegistryUpdatedGroupIDKey"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (_IMWillLog())
  {
    v10 = v8;
    v11 = v12;
    v9 = v6;
    _IMAlwaysLog();
  }
  objc_msgSend(a1, "_updateGroupID:toGroupID:forChat:", v6, v8, v12, v9, v10, v11);

}

void sub_1A21247C0(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (_IMWillLog())
  {
    v18 = v9;
    v20 = v10;
    v16 = v8;
    _IMAlwaysLog();
  }
  objc_msgSend(a1, "unmuteDateForMuteIdentifier:", v8, v16, v18, v20);
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = (void *)v11;
  if (v9)
  {
    if (v10)
    {
      if (v11)
      {
        objc_msgSend(a1, "unmuteDateForMuteIdentifier:", v9);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v13)
        {
          if (_IMWillLog())
          {
            v19 = v9;
            v21 = v10;
            v17 = v8;
            _IMAlwaysLog();
          }
          v23[0] = v9;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 1, v17, v19, v21);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "muteChatWithMuteIdentifiers:untilDate:syncToPairedDevice:", v14, v12, 1);

          v22 = v8;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v22, 1);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "unmuteChatWithMuteIdentifiers:syncToPairedDevice:", v15, 1);

        }
      }
    }
  }

}

void sub_1A21251A8(void *a1, void *a2, _QWORD *a3, _QWORD *a4, int a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  void *v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t k;
  void *v39;
  void *v40;
  void *v41;
  NSObject *v42;
  void *v43;
  NSObject *v44;
  void *v45;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id obj;
  id v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint8_t v73[128];
  uint8_t buf[4];
  void *v75;
  _BYTE v76[128];
  _BYTE v77[128];
  _BYTE v78[128];
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  v48 = a1;
  v7 = a2;
  v54 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v49 = v7;
  if (objc_msgSend(v7, "chatStyle") != 45 || a5)
  {
    objc_msgSend(v48, "allGUIDsForChat:", v7);
    obj = (id)objc_claimAutoreleasedReturnValue();
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v69, v78, 16);
    if (v27)
    {
      v28 = *(_QWORD *)v70;
      do
      {
        for (i = 0; i != v27; ++i)
        {
          if (*(_QWORD *)v70 != v28)
            objc_enumerationMutation(obj);
          v67 = 0;
          v68 = 0;
          IMComponentsFromChatGUID();
          v30 = 0;
          v31 = 0;
          v32 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D36A98]), "initWithFirst:second:", v30, v31);

          if (v32)
            objc_msgSend(v54, "addObject:", v32);

        }
        v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v69, v78, 16);
      }
      while (v27);
    }
  }
  else
  {
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    objc_msgSend(v7, "participants");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v51 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v77, 16);
    if (v51)
    {
      v50 = *(_QWORD *)v64;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v64 != v50)
          {
            v9 = v8;
            objc_enumerationMutation(obj);
            v8 = v9;
          }
          v52 = v8;
          v10 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * v8);
          v59 = 0u;
          v60 = 0u;
          v61 = 0u;
          v62 = 0u;
          objc_msgSend(v10, "_chatSiblings");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v59, v76, 16);
          if (v12)
          {
            v13 = *(_QWORD *)v60;
            do
            {
              for (j = 0; j != v12; ++j)
              {
                if (*(_QWORD *)v60 != v13)
                  objc_enumerationMutation(v11);
                v15 = *(void **)(*((_QWORD *)&v59 + 1) + 8 * j);
                if (IMOSLoggingEnabled())
                {
                  OSLogHandleForIMFoundationCategory();
                  v16 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)buf = 138412290;
                    v75 = v15;
                    _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "     Query with participant: %@", buf, 0xCu);
                  }

                }
                if (IMOSLoggingEnabled())
                {
                  OSLogHandleForIMFoundationCategory();
                  v17 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
                  {
                    objc_msgSend(v15, "ID");
                    v18 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138412290;
                    v75 = v18;
                    _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_INFO, "           => Adding handle: %@", buf, 0xCu);

                  }
                }
                if (IMOSLoggingEnabled())
                {
                  OSLogHandleForIMFoundationCategory();
                  v19 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
                  {
                    objc_msgSend(v15, "service");
                    v20 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v20, "internalName");
                    v21 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138412290;
                    v75 = v21;
                    _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "           => Adding service: %@", buf, 0xCu);

                  }
                }
                v22 = objc_alloc(MEMORY[0x1E0D36A98]);
                objc_msgSend(v15, "ID");
                v23 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v15, "service");
                v24 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v24, "internalName");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                v26 = (void *)objc_msgSend(v22, "initWithFirst:second:", v23, v25);

                if (v26)
                  objc_msgSend(v54, "addObject:", v26);

              }
              v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v59, v76, 16);
            }
            while (v12);
          }

          v8 = v52 + 1;
        }
        while (v52 + 1 != v51);
        v51 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v77, 16);
      }
      while (v51);
    }
  }

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  v35 = v54;
  v36 = objc_msgSend(v35, "countByEnumeratingWithState:objects:count:", &v55, v73, 16);
  if (v36)
  {
    v37 = *(_QWORD *)v56;
    do
    {
      for (k = 0; k != v36; ++k)
      {
        if (*(_QWORD *)v56 != v37)
          objc_enumerationMutation(v35);
        v39 = *(void **)(*((_QWORD *)&v55 + 1) + 8 * k);
        objc_msgSend(v39, "first");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "addObject:", v40);

        objc_msgSend(v39, "second");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "addObject:", v41);

        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v42 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(v39, "first");
            v43 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v75 = v43;
            _os_log_impl(&dword_1A1FF4000, v42, OS_LOG_TYPE_INFO, "           => Adding identifier: %@", buf, 0xCu);

          }
        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v44 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(v39, "second");
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v75 = v45;
            _os_log_impl(&dword_1A1FF4000, v44, OS_LOG_TYPE_INFO, "           => Adding service: %@", buf, 0xCu);

          }
        }
      }
      v36 = objc_msgSend(v35, "countByEnumeratingWithState:objects:count:", &v55, v73, 16);
    }
    while (v36);
  }

  if (a3)
    *a3 = objc_retainAutorelease(v33);
  if (a4)
    *a4 = objc_retainAutorelease(v34);

}

void sub_1A2125B7C(void *a1, void *a2, _QWORD *a3, _QWORD *a4)
{
  id v7;
  int v8;
  id v9;

  v7 = a2;
  v9 = a1;
  v8 = IMSharedHelperPersonCentricMergingEnabled();
  sub_1A21251A8(v9, v7, a3, a4, v8);

}

void sub_1A212CF38(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;

  v5 = a3;
  v6 = a2;
  +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_handleSerializedFileTransfers:", v5);

  v8 = *(void **)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "guid");
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "historyQuery:chatID:services:finishedWithResult:limit:", v9, v10, *(_QWORD *)(a1 + 56), v6, *(_QWORD *)(a1 + 64));

}

void sub_1A212CFD4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  _QWORD block[4];
  id v15;
  id v16;
  _QWORD aBlock[4];
  id v18;
  id v19;
  id v20;
  uint8_t buf[16];

  v5 = a2;
  v6 = a3;
  v7 = *(id *)(a1 + 32);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 56);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1A1FF4000, v8, OS_SIGNPOST_INTERVAL_END, v9, "loadHistoryForChatWithGUID", "", buf, 2u);
  }

  v10 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A212D170;
  aBlock[3] = &unk_1E471F3E8;
  v20 = *(id *)(a1 + 40);
  v11 = v5;
  v18 = v11;
  v12 = v6;
  v19 = v12;
  v13 = _Block_copy(aBlock);
  if (*(_BYTE *)(a1 + 64))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    block[0] = v10;
    block[1] = 3221225472;
    block[2] = sub_1A212D184;
    block[3] = &unk_1E47229C8;
    v15 = *(id *)(a1 + 48);
    v16 = v13;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

uint64_t sub_1A212D170(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A212D184(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_1A212D5BC(uint64_t a1, void *a2, void *a3, char a4, char a5)
{
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  os_signpost_id_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  _QWORD block[4];
  id v21;
  id v22;
  _QWORD aBlock[4];
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __int128 v30;
  char v31;
  char v32;
  uint8_t buf[16];

  v9 = a2;
  v10 = a3;
  v11 = *(id *)(a1 + 32);
  v12 = v11;
  v13 = *(_QWORD *)(a1 + 80);
  if (v13 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v11))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1A1FF4000, v12, OS_SIGNPOST_INTERVAL_END, v13, "loadPagedHistoryAroundMessageWithGUID", "", buf, 2u);
  }

  v14 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A212D7A0;
  aBlock[3] = &unk_1E4722A18;
  v15 = v10;
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(void **)(a1 + 48);
  v24 = v15;
  v25 = v16;
  v26 = v17;
  v27 = *(id *)(a1 + 56);
  v28 = *(id *)(a1 + 64);
  v30 = *(_OWORD *)(a1 + 88);
  v18 = v9;
  v29 = v18;
  v31 = a4;
  v32 = a5;
  v19 = _Block_copy(aBlock);
  if (*(_BYTE *)(a1 + 104))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
  }
  else
  {
    block[0] = v14;
    block[1] = 3221225472;
    block[2] = sub_1A212D824;
    block[3] = &unk_1E47229C8;
    v21 = *(id *)(a1 + 72);
    v22 = v19;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

void sub_1A212D7A0(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_handleSerializedFileTransfers:", *(_QWORD *)(a1 + 32));

  v3 = *(void **)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 56), "guid");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  LOWORD(v5) = *(_WORD *)(a1 + 96);
  objc_msgSend(v3, "pagedHistoryQuery:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:hasMessagesBefore:hasMessagesAfter:", v4, v6, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 72), v5);

}

uint64_t sub_1A212D824(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_1A212DB24(uint64_t a1, void *a2)
{
  id v3;
  _QWORD block[4];
  id v5;
  id v6;
  id v7;

  v3 = a2;
  if (*(_BYTE *)(a1 + 48))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A212DBE4;
    block[3] = &unk_1E471F3E8;
    v7 = *(id *)(a1 + 40);
    v5 = *(id *)(a1 + 32);
    v6 = v3;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

uint64_t sub_1A212DBE4(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A212DECC(uint64_t a1, void *a2)
{
  id v3;
  _QWORD block[4];
  id v5;
  id v6;
  id v7;

  v3 = a2;
  if (*(_BYTE *)(a1 + 48))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A212DF8C;
    block[3] = &unk_1E471F3E8;
    v7 = *(id *)(a1 + 40);
    v5 = *(id *)(a1 + 32);
    v6 = v3;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

uint64_t sub_1A212DF8C(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A212E530(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  if (*(_BYTE *)(a1 + 64))
  {
    v4 = *(void **)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 48), "guid");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "markAsSpamQuery:chatID:services:finishedWithResult:", v5, v8, v6, v7);

  }
}

void sub_1A212E8CC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD v10[5];
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  v3 = a2;
  if (*(_BYTE *)(a1 + 72))
  {
    v4 = *(void **)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 48), "guid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "frequentRepliesQuery:chatID:services:finishedWithResult:limit:", v5, v6, *(_QWORD *)(a1 + 56), v3, *(_QWORD *)(a1 + 64));

  }
  else
  {
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = sub_1A212E9D8;
    v10[3] = &unk_1E4722AE0;
    v7 = *(void **)(a1 + 40);
    v10[4] = *(_QWORD *)(a1 + 32);
    v11 = v7;
    v12 = *(id *)(a1 + 48);
    v13 = *(id *)(a1 + 56);
    v8 = v3;
    v9 = *(_QWORD *)(a1 + 64);
    v14 = v8;
    v15 = v9;
    dispatch_async(MEMORY[0x1E0C80D38], v10);

  }
}

void sub_1A212E9D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "guid");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "frequentRepliesQuery:chatID:services:finishedWithResult:limit:", v3, v4, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));

}

void sub_1A212EDB0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;

  v5 = a3;
  v6 = a2;
  +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_handleSerializedFileTransfers:", v5);

  v8 = *(void **)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "guid");
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "historyQuery:chatID:services:finishedWithResult:limit:", v9, v10, *(_QWORD *)(a1 + 56), v6, *(_QWORD *)(a1 + 64));

}

void sub_1A212EE4C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;

  v5 = a2;
  v6 = a3;
  if (*(_BYTE *)(a1 + 40))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A212EF24;
    block[3] = &unk_1E471F3E8;
    v10 = *(id *)(a1 + 32);
    v8 = v5;
    v9 = v6;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

uint64_t sub_1A212EF24(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A212F214(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD block[5];
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = a2;
  if (*(_BYTE *)(a1 + 64))
  {
    v4 = *(void **)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 48), "guid");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "attachmentQuery:chatID:services:finishedWithResult:", v5, v6, *(_QWORD *)(a1 + 56), v3);

  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A212F31C;
    block[3] = &unk_1E4721330;
    v7 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v9 = v7;
    v10 = *(id *)(a1 + 48);
    v11 = *(id *)(a1 + 56);
    v12 = v3;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

void sub_1A212F31C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "guid");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "attachmentQuery:chatID:services:finishedWithResult:", v3, v4, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));

}

void sub_1A212F650(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD block[5];
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  if (*(_BYTE *)(a1 + 64))
  {
    v4 = *(void **)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 48), "guid");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 56);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uncachedAttachmentCountQuery:chatID:services:finishedWithResult:", v5, v9, v6, v7);

  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A212F768;
    block[3] = &unk_1E4722B80;
    v8 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v11 = v8;
    v12 = *(id *)(a1 + 48);
    v13 = *(id *)(a1 + 56);
    v14 = a2;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

void sub_1A212F768(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "guid");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(a1 + 56);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 64));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "uncachedAttachmentCountQuery:chatID:services:finishedWithResult:", v3, v6, v4, v5);

}

void sub_1A212FCC4(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD block[5];
  id v9;
  id v10;
  id v11;
  char v12;

  if (*(_BYTE *)(a1 + 64))
  {
    v4 = *(void **)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 48), "guid");
    v7 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "isDownloadingQuery:chatID:services:finishedWithResult:", v5, v7, *(_QWORD *)(a1 + 56), a2);

  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A212FDC0;
    block[3] = &unk_1E4722BA8;
    v6 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v9 = v6;
    v10 = *(id *)(a1 + 48);
    v11 = *(id *)(a1 + 56);
    v12 = a2;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

void sub_1A212FDC0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "guid");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "isDownloadingQuery:chatID:services:finishedWithResult:", v3, v4, *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));

}

void _ReplaceExtensionPayloadDataWithAttachmentForOutgoingMessage(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  id v44;
  _BYTE v45[128];
  void *v46;
  uint8_t buf[4];
  uint64_t v48;
  __int16 v49;
  id v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v39 = a2;
  v8 = a3;
  v9 = a4;
  if ((objc_msgSend(v7, "isTypingMessage") & 1) == 0)
  {
    objc_msgSend(v7, "payloadData");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "length");

    if (v11)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          v48 = (uint64_t)v7;
          v49 = 2112;
          v50 = v39;
          _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Request to _ReplaceExtensionPayloadDataWithAttachmentForOutgoingMessage: %@ chatIdentifier: %@", buf, 0x16u);
        }

      }
      IMExtensionPayloadUnarchivingClasses();
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_alloc(MEMORY[0x1E0CB3710]);
      objc_msgSend(v7, "payloadData");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v44 = 0;
      v35 = (void *)objc_msgSend(v13, "initForReadingFromData:error:", v14, &v44);
      v37 = v44;

      objc_msgSend(v35, "decodeObjectOfClasses:forKey:", v36, *MEMORY[0x1E0CB2CD0]);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      if (v37 && IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v48 = (uint64_t)v37;
          _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Failed to unarchive payload. Error: %@", buf, 0xCu);
        }

      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v16 = *MEMORY[0x1E0D37E40];
        objc_msgSend(v38, "objectForKey:", *MEMORY[0x1E0D37E40]);
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v34, "length"))
        {
          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v46 = v34;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v46, 1);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "guid");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "guidsForStoredAttachmentPayloadData:messageGUID:", v18, v19);
          v31 = objc_claimAutoreleasedReturnValue();

          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v20 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v48 = v31;
              _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "Wrote extension payload data to attachments folder with GUIDs: %@", buf, 0xCu);
            }

          }
          objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithArray:", v31, v31);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "fileTransferGUIDs");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "addObjectsFromArray:", v22);

          v23 = (void *)objc_msgSend(v21, "copy");
          objc_msgSend(v7, "setFileTransferGUIDs:", v23);

          v33 = (void *)objc_msgSend(v38, "mutableCopy");
          objc_msgSend(v33, "removeObjectForKey:", v16);
          objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v33, 0, 0);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "setPayloadData:", v24);

          objc_msgSend(v8, "_updateFileTransferGUIDs:", v21);
          v42 = 0u;
          v43 = 0u;
          v40 = 0u;
          v41 = 0u;
          v25 = v21;
          v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v40, v45, 16);
          if (v26)
          {
            v27 = *(_QWORD *)v41;
            do
            {
              v28 = 0;
              do
              {
                if (*(_QWORD *)v41 != v27)
                  objc_enumerationMutation(v25);
                v29 = *(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * v28);
                +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
                v30 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v30, "assignTransfer:toMessage:account:", v29, v8, v9);

                ++v28;
              }
              while (v26 != v28);
              v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v40, v45, 16);
            }
            while (v26);
          }

        }
      }

    }
  }

}

double sub_1A2130654(uint64_t a1)
{
  double result;

  result = (double)(unint64_t)(a1 * a1) * 3600.0;
  if (result > 172800.0)
    return 172800.0;
  return result;
}

double sub_1A213067C(void *a1, BOOL *a2)
{
  id v3;
  void *v4;
  double v5;
  BOOL v6;
  BOOL v7;
  double v8;
  double v9;

  v3 = a1;
  v4 = v3;
  if (!v3)
  {
    v7 = 0;
    v9 = 0.0;
    if (!a2)
      goto LABEL_7;
    goto LABEL_6;
  }
  objc_msgSend(v3, "timeIntervalSinceNow");
  v6 = v5 > 0.0;
  v7 = v5 <= 0.0;
  v8 = -v5;
  if (v6)
    v9 = 0.0;
  else
    v9 = v8;
  if (a2)
LABEL_6:
    *a2 = v7;
LABEL_7:

  return v9;
}

uint64_t sub_1A21306E8(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  v6 = (v3 | v4) == 0;
  if (v4)
    v6 = objc_msgSend((id)v4, "unsignedIntegerValue");
  if (v3)
  {
    v7 = objc_msgSend((id)v3, "unsignedIntegerValue");
    v8 = v7 - 1;
    if (!v7)
      v8 = 0;
  }
  else
  {
    v8 = 0;
  }
  v9 = v8 + v6;

  return v9;
}

double sub_1A2130838()
{
  double result;

  result = *(double *)MEMORY[0x1A8582938]("kCLLocationAccuracyNearestTenMeters", CFSTR("CoreLocation"));
  qword_1EE65F6A8 = *(_QWORD *)&result;
  return result;
}

void sub_1A21308A8()
{
  IMLocationManager *v0;
  void *v1;

  v0 = objc_alloc_init(IMLocationManager);
  v1 = (void *)qword_1ECF12630;
  qword_1ECF12630 = (uint64_t)v0;

}

void sub_1A2130FC4(id *a1, void *a2)
{
  id v3;
  NSObject *v4;
  id WeakRetained;
  NSObject *v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;
  uint8_t buf[4];
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v12 = v3;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Completion block called with error: %@", buf, 0xCu);
    }

  }
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  objc_msgSend(WeakRetained, "setInRequestPreciseLocation:", 0);

  if (v3)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v12 = v3;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Error happened when requesting temporary precise location: %@", buf, 0xCu);
      }

    }
    (*((void (**)(void))a1[4] + 2))();
  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A21311D8;
    block[3] = &unk_1E4722BF8;
    objc_copyWeak(&v10, a1 + 6);
    v8 = a1[5];
    v9 = a1[4];
    dispatch_async(MEMORY[0x1E0C80D38], block);

    objc_destroyWeak(&v10);
  }

}

void sub_1A21311D8(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  char v5;
  NSObject *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint8_t buf[16];

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "locationManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "_limitsPrecision");

  if ((v5 & 1) != 0)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "User denied accurate location authorization.", buf, 2u);
      }

    }
    v7 = objc_alloc(MEMORY[0x1E0C99D80]);
    v8 = (void *)objc_msgSend(v7, "initWithObjectsAndKeys:", CFSTR("IMLocationManager does not have accurate location access"), *MEMORY[0x1E0CB2D50], 0);
    v9 = objc_alloc(MEMORY[0x1E0CB35C8]);
    v10 = (void *)objc_msgSend(v9, "initWithDomain:code:userInfo:", *MEMORY[0x1E0D36350], 42, v8);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  }
  else
  {
    v11 = objc_loadWeakRetained(v2);
    objc_msgSend(v11, "_startLocationUpdateTimerWithAuthorizedHandler:updateHandler:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  }
}

void sub_1A2132294(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "handlers");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v8), "objectAtIndexedSubscript:", 1);
        v9 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "error");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        ((void (**)(_QWORD, id, void *))v9)[2](v9, v3, v10);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }
  objc_msgSend(v4, "removeAllObjects");
  objc_msgSend(*(id *)(a1 + 32), "setLocation:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setError:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setLocateStartTime:", 0);

}

void sub_1A2132444()
{
  objc_class *v0;
  id v1;
  void *v2;

  v0 = (objc_class *)MEMORY[0x1A858292C](CFSTR("_MKLocationShifter"), CFSTR("MapKit"));
  if (v0)
  {
    v1 = objc_alloc_init(v0);
    v2 = (void *)qword_1EE65F6B8;
    qword_1EE65F6B8 = (uint64_t)v1;

  }
}

void sub_1A21325A4(uint64_t a1)
{
  dispatch_semaphore_t v2;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  dispatch_time_t v8;
  NSObject *v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  id v13;
  _QWORD v14[4];
  NSObject *v15;
  id v16;
  uint8_t buf[16];

  v2 = dispatch_semaphore_create(0);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Location shift started", buf, 2u);
    }

  }
  objc_msgSend((id)objc_opt_class(), "locationShifter");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = MEMORY[0x1E0C809B0];
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = sub_1A21327C8;
  v14[3] = &unk_1E4722C70;
  v6 = *(_QWORD *)(a1 + 40);
  v16 = *(id *)(a1 + 48);
  v7 = v2;
  v15 = v7;
  objc_msgSend(v4, "shiftLocation:withCompletionHandler:callbackQueue:", v6, v14, MEMORY[0x1E0C80D38]);

  v8 = dispatch_time(0, 10000000000);
  if (dispatch_semaphore_wait(v7, v8))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Location shift timed out.", buf, 2u);
      }

    }
    v11[0] = v5;
    v11[1] = 3221225472;
    v11[2] = sub_1A2132884;
    v11[3] = &unk_1E471E8B8;
    v13 = *(id *)(a1 + 48);
    v12 = *(id *)(a1 + 40);
    v10 = (void *)MEMORY[0x1E0C80D38];
    dispatch_async(MEMORY[0x1E0C80D38], v11);

  }
}

void sub_1A21327C8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Location shift completed", v5, 2u);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

uint64_t sub_1A2132884(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_1A21328D4()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("CLLocationManager"), CFSTR("CoreLocation"));
  qword_1EE65F6C8 = result;
  return result;
}

uint64_t sub_1A2132940()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("CLInUseAssertion"), CFSTR("CoreLocation"));
  qword_1EE65F6D8 = result;
  return result;
}

uint64_t sub_1A2132A84()
{
  return _NSNewStringByAppendingStrings();
}

void sub_1A21330B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1A21330F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v4 = a3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A2133198;
  v6[3] = &unk_1E471EA98;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

  objc_destroyWeak(&v8);
}

void sub_1A2133198(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  +[IMFindMyHandle handleWithFMLHandle:](IMFindMyHandle, "handleWithFMLHandle:", *(_QWORD *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(WeakRetained, "didReceiveLocationForHandle:", v2);

}

void sub_1A21331F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9[2];

  v5 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A21332A0;
  block[3] = &unk_1E4722CE8;
  objc_copyWeak(v9, (id *)(a1 + 32));
  v8 = v5;
  v9[1] = a3;
  v6 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(v9);
}

void sub_1A21332A0(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  void *v7;
  char isKindOfClass;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = *(_QWORD *)(a1 + 32);
      v5 = *(_QWORD *)(a1 + 48);
      v17 = 138412546;
      v18 = v4;
      v19 = 2048;
      v20 = v5;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "FindMyLocateSession friendShipUpdateCallback. updateFriend: %@, updateType: %lu", (uint8_t *)&v17, 0x16u);
    }

  }
  MEMORY[0x1A858292C](CFSTR("FMLHandle"), CFSTR("FindMyLocateObjCWrapper"));
  v6 = (id *)(a1 + 32);
  if ((objc_opt_respondsToSelector() & 1) != 0
    && (objc_msgSend(*v6, "handle"),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        isKindOfClass = objc_opt_isKindOfClass(),
        v7,
        (isKindOfClass & 1) != 0))
  {
    objc_msgSend(*v6, "handle");
    v9 = objc_claimAutoreleasedReturnValue();
    +[IMFindMyHandle handleWithFMLHandle:](IMFindMyHandle, "handleWithFMLHandle:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "_postRelationshipStatusDidChangeNotificationWithIMFindMyHandle:", v10);

  }
  else
  {
    IMLogHandleForCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1A2198338((uint64_t)v6, v9, v11, v12, v13, v14, v15, v16);
  }

}

void sub_1A2133450(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A21334F4;
  v5[3] = &unk_1E471EA98;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

  objc_destroyWeak(&v7);
}

void sub_1A21334F4(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = *(_QWORD *)(a1 + 32);
      v6 = 138412290;
      v7 = v4;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "FindMyLocateSession meDeviceUpdateCallback: %@", (uint8_t *)&v6, 0xCu);
    }

  }
  +[IMFindMyDevice deviceWithFMLDevice:](IMFindMyDevice, "deviceWithFMLDevice:", *(_QWORD *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(WeakRetained, "setActiveDevice:", v5);

  objc_msgSend(WeakRetained, "_postNotification:object:userInfo:", CFSTR("__kIMFMFSessionActiveDeviceChangedNotification"), 0, 0);
}

void sub_1A2133904(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (v2)
  {
    IMLogHandleForCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1A2198424();
  }
  else
  {
    if (!IMOSLoggingEnabled())
      goto LABEL_5;
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "FindMyLocateSession startUpdatingFriendsWithCompletion completed without an error", v4, 2u);
    }
  }

LABEL_5:
}

void sub_1A21339D4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint8_t v19[128];
  uint8_t buf[4];
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v21 = v5;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "FindMyLocateSession getFriendsSharingLocationsWithMeWithCompletion completed initial fetch with friends: %@. Posting notifications for these handles now", buf, 0xCu);
    }

  }
  v8 = (void *)MEMORY[0x1E0C99E60];
  if (v5)
  {
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "__im_findMyHandlesWithFMLFriends:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E60], "set");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v11 = v10;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v12)
  {
    v13 = *(_QWORD *)v16;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v16 != v13)
          objc_enumerationMutation(v11);
        objc_msgSend(*(id *)(a1 + 32), "_postRelationshipStatusDidChangeNotificationWithIMFindMyHandle:", *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v14++), (_QWORD)v15);
      }
      while (v12 != v14);
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v12);
  }

}

void sub_1A2133BAC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint8_t v19[128];
  uint8_t buf[4];
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v21 = v5;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "FindMyLocateSession getFriendsFollowingMyLocationWithCompletion completed initial fetch with friends: %@. Posting notifications for these handles now", buf, 0xCu);
    }

  }
  v8 = (void *)MEMORY[0x1E0C99E60];
  if (v5)
  {
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "__im_findMyHandlesWithFMLFriends:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E60], "set");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v11 = v10;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v12)
  {
    v13 = *(_QWORD *)v16;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v16 != v13)
          objc_enumerationMutation(v11);
        objc_msgSend(*(id *)(a1 + 32), "_postRelationshipStatusDidChangeNotificationWithIMFindMyHandle:", *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v14++), (_QWORD)v15);
      }
      while (v12 != v14);
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v12);
  }

}

void sub_1A2133D84(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (v2)
  {
    IMLogHandleForCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1A2198484();
  }
  else
  {
    if (!IMOSLoggingEnabled())
      goto LABEL_5;
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "FindMyLocateSession startMonitoringActiveLocationSharingDeviceChangeWithCompletion completed without an error.", v4, 2u);
    }
  }

LABEL_5:
}

void sub_1A2133E94()
{
  IMFMFSession *v0;
  void *v1;

  v0 = objc_alloc_init(IMFMFSession);
  v1 = (void *)qword_1ECF12638;
  qword_1ECF12638 = (uint64_t)v0;

}

void sub_1A21342CC()
{
  objc_class *v0;
  id v1;
  void *v2;

  v0 = (objc_class *)MEMORY[0x1A858292C](CFSTR("ACAccountStore"), CFSTR("AppleAccount"));
  if (v0)
  {
    v1 = objc_alloc_init(v0);
    v2 = (void *)qword_1EE65EB00;
    qword_1EE65EB00 = (uint64_t)v1;

  }
}

void sub_1A2134BB0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2198510(a1);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = 138412290;
      v8 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "FindMyLocateSession startRefreshingLocationForHandles completed for handles: %@", (uint8_t *)&v7, 0xCu);
    }

  }
}

void sub_1A2135190(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A219857C(a1);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = 138412290;
      v8 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "FindMyLocateSession stopRefreshingLocationForHandles completed for handles: %@", (uint8_t *)&v7, 0xCu);
    }

  }
}

void sub_1A213624C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(a1 + 40);
      v10 = 138412802;
      v11 = v8;
      v12 = 2112;
      v13 = v9;
      v14 = 2112;
      v15 = v6;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "refreshLocationForHandles %@ callerId %@ error %@", (uint8_t *)&v10, 0x20u);
    }

  }
  objc_msgSend(*(id *)(a1 + 48), "_postNotification:object:userInfo:", CFSTR("__kIMFMFSessionHandleLocationRefreshedNotification"), *(_QWORD *)(a1 + 56), 0);

}

void sub_1A2136494(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(a1 + 40);
      v10 = 138412802;
      v11 = v8;
      v12 = 2112;
      v13 = v9;
      v14 = 2112;
      v15 = v6;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "refreshLocationForHandles %@ callerId %@ error %@", (uint8_t *)&v10, 0x20u);
    }

  }
  objc_msgSend(*(id *)(a1 + 48), "_postNotification:object:userInfo:", CFSTR("__kIMFMFSessionChatLocationRefreshedNotification"), *(_QWORD *)(a1 + 56), 0);

}

void sub_1A2137878(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  int v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    IMLogHandleForCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1A219872C();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v11 = 138412290;
      v12 = v5;
      _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "FindMyLocateSession getActiveLocationSharingDeviceWithCompletion device: %@", (uint8_t *)&v11, 0xCu);
    }

  }
  if (v5)
  {
    v9 = *(void **)(a1 + 32);
    +[IMFindMyDevice deviceWithFMLDevice:](IMFindMyDevice, "deviceWithFMLDevice:", v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setActiveDevice:", v10);

    objc_msgSend(*(id *)(a1 + 32), "_postNotification:object:userInfo:", CFSTR("__kIMFMFSessionActiveDeviceChangedNotification"), 0, 0);
  }

}

void sub_1A21379F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  int v10;
  id v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v7 = *(void **)(a1 + 32);
  +[IMFindMyDevice deviceWithFMFDevice:](IMFindMyDevice, "deviceWithFMFDevice:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setActiveDevice:", v8);

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = 138412546;
      v11 = v5;
      v12 = 2112;
      v13 = v6;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "FMF updated active device %@ error %@", (uint8_t *)&v10, 0x16u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "_postNotification:object:userInfo:", CFSTR("__kIMFMFSessionActiveDeviceChangedNotification"), 0, 0);

}

void sub_1A2137BF0(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = 138412290;
      v5 = v2;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "FMF setActiveDevice %@", (uint8_t *)&v4, 0xCu);
    }

  }
}

void sub_1A2138848(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A21987BC();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = *(_QWORD *)(a1 + 40);
      v8 = 138412546;
      v9 = v6;
      v10 = 2048;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "sendFriendshipOfferToHandles completed for handles: %@, duration: %ld", (uint8_t *)&v8, 0x16u);
    }

  }
}

void sub_1A2138C50(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = a1[4];
      v9 = a1[5];
      v10 = a1[6];
      v11 = a1[7];
      v12 = 138413570;
      v13 = v8;
      v14 = 2112;
      v15 = v9;
      v16 = 2112;
      v17 = v10;
      v18 = 2112;
      v19 = v11;
      v20 = 2112;
      v21 = v5;
      v22 = 2112;
      v23 = v6;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "sendFriendshipOfferToHandles %@ untilDate %@ callerId %@ groupId %@ mappingIdentifiers %@ error %@", (uint8_t *)&v12, 0x3Eu);
    }

  }
}

void sub_1A2138F68(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = a1[4];
      v9 = a1[5];
      v10 = a1[6];
      v11 = 138413314;
      v12 = v8;
      v13 = 2112;
      v14 = v9;
      v15 = 2112;
      v16 = v10;
      v17 = 2112;
      v18 = v5;
      v19 = 2112;
      v20 = v6;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "stopSharingMyLocationWithHandles %@ callerId %@ groupId %@ mappingIdentifier %@ error %@", (uint8_t *)&v11, 0x34u);
    }

  }
}

void sub_1A2139248(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  const __CFString *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  const __CFString *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A219883C((uint64_t)v3, a1, v4);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = CFSTR("YES");
      if (!*(_BYTE *)(a1 + 40))
        v7 = CFSTR("NO");
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "FindMyLocateSession stopSharingLocationWith completed for handles: %@, isFromGroup: %@", (uint8_t *)&v8, 0x16u);
    }

  }
}

uint64_t sub_1A21395A8()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("FMFSession"), CFSTR("FMF"));
  qword_1EE65F2F8 = result;
  return result;
}

uint64_t sub_1A2139614()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("FindMyLocateSession"), CFSTR("FindMyLocateObjCWrapper"));
  qword_1EE65EAC8 = result;
  return result;
}

void sub_1A2139680()
{
  id *v0;

  v0 = (id *)MEMORY[0x1A8582938]("FMFGroupIdOneToOne", CFSTR("FMF"));
  objc_storeStrong((id *)&qword_1EE65F6E8, *v0);
}

void sub_1A21396F0()
{
  id *v0;

  v0 = (id *)MEMORY[0x1A8582938]("FMFGroupIdGroup", CFSTR("FMF"));
  objc_storeStrong((id *)&qword_1EE65F6F8, *v0);
}

uint64_t sub_1A213AF80(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = a2;
  v5 = v3;
  v6 = v4;
  objc_msgSend(v5, "time");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "time");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v7, "compare:", v8);

  if (!v9)
  {
    v10 = objc_msgSend(v5, "messageID");
    if (v10 == objc_msgSend(v6, "messageID"))
    {
      v9 = 0;
    }
    else
    {
      v11 = objc_msgSend(v6, "messageID");
      if (v11 < objc_msgSend(v5, "messageID"))
        v9 = 1;
      else
        v9 = -1;
    }
  }

  return v9;
}

void sub_1A213BD68(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 buf, int a16, __int16 a17, __int16 a18, id a19, __int128 a20)
{
  id v20;
  NSObject *v21;
  id v22;
  void *v23;
  id v24;

  if (a2 == 1)
  {
    v20 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v20, "name");
        v24 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "reason");
        v22 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "userInfo");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(_QWORD *)((char *)&buf + 4) = v20;
        WORD6(buf) = 2112;
        *(_QWORD *)((char *)&buf + 14) = v24;
        a18 = 2112;
        a19 = v22;
        LOWORD(a20) = 2112;
        *(_QWORD *)((char *)&a20 + 2) = v23;
        WORD5(a20) = 2080;
        *(_QWORD *)((char *)&a20 + 12) = "-[IMChatRegistry(IMChatRegistry_DaemonIncoming) account:chat:style:chatProperti"
                                         "es:notifySentMessage:sendTime:isReplicating:]";
        _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);

      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A213BD0CLL);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A213C5C4()
{
  uint64_t result;

  result = MEMORY[0x1A858292C](CFSTR("LSApplicationWorkspace"), CFSTR("CoreServices"));
  qword_1EE65F708 = result;
  return result;
}

uint64_t sub_1A213FEB4(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "_handleMessageGUIDDeletions:", *(_QWORD *)(a1 + 32));
}

void sub_1A213FFD0(uint64_t a1)
{
  id v2;

  +[IMChat removeGUIDInAttemptingListInScrutinyMode:](IMChat, "removeGUIDInAttemptingListInScrutinyMode:", *(_QWORD *)(a1 + 32));
  if (!*(_BYTE *)(a1 + 40))
  {
    +[IMChatScrutinyController sharedController](IMChatScrutinyController, "sharedController");
    v2 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "markMessageAsCorrupt:", *(_QWORD *)(a1 + 32));

  }
}

void sub_1A21412FC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  IMAttachment *v8;
  id v9;

  v3 = a2;
  objc_msgSend(v3, "objectForKey:", CFSTR("path"));
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", CFSTR("guid"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", CFSTR("createdDate"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", CFSTR("isSticker"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", CFSTR("transferState"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9 && v4 && v5 && v6)
  {
    v8 = -[IMAttachment initWithPath:guid:createdDate:isSticker:isTransferComplete:]([IMAttachment alloc], "initWithPath:guid:createdDate:isSticker:isTransferComplete:", v9, v4, v5, objc_msgSend(v6, "BOOLValue"), objc_msgSend(v7, "BOOLValue"));
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v8);

  }
}

void sub_1A2141814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A214182C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend(*(id *)(a1 + 32), "existingChatWithChatIdentifier:", a2);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
    *a4 = 1;
}

void sub_1A2142A94(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  uint8_t v6[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "ChatRegistry: Fetching the remaining(Final batch) of contacts", v6, 2u);
    }

  }
  +[IMHandleRegistrar sharedInstance](IMHandleRegistrar, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "getIDsForFinalBatch");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "contactStore");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "fetchCNContactsForHandlesWithIDs:isFinalBatch:", v4, 1);

  }
}

uint64_t sub_1A2142B80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1A2144A3C()
{
  JUMPOUT(0x1A2144A48);
}

void sub_1A2144C38(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "_setupObservation", (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_1A21456D0(uint64_t a1, void *a2)
{
  id v3;

  objc_msgSend(a2, "objectForKey:", *MEMORY[0x1E0D36D90]);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

void sub_1A21461C0(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "existingChatWithGUID:", a2);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (id)objc_msgSend(v3, "loadMessagesBeforeDate:limit:loadImmediately:", 0, objc_msgSend(v3, "numberOfMessagesToKeepLoaded"), 1);

}

void sub_1A21466FC(uint64_t a1, uint64_t a2)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "existingChatWithGUID:", a2);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setRecoverableMessagesCount:", 0);
  objc_msgSend(v2, "setUnreadRecoverableMessagesCount:", 0);
  objc_msgSend(v2, "setEarliestRecoverableMessageDeletionDate:", 0);
  objc_msgSend(v2, "setLatestRecoverableMessageDeletionDate:", 0);

}

void sub_1A21467E8(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "existingChatWithGUID:", a2);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setRecoverableMessagesCount:", 0);
  objc_msgSend(v3, "setUnreadRecoverableMessagesCount:", 0);
  objc_msgSend(v3, "setEarliestRecoverableMessageDeletionDate:", 0);
  objc_msgSend(v3, "setLatestRecoverableMessageDeletionDate:", 0);
  v2 = (id)objc_msgSend(v3, "loadMessagesBeforeDate:limit:loadImmediately:", 0, objc_msgSend(v3, "numberOfMessagesToKeepLoaded"), 1);

}

void sub_1A2146D38()
{
  IMCollaborationNoticeController *v0;
  void *v1;

  v0 = objc_alloc_init(IMCollaborationNoticeController);
  v1 = (void *)qword_1ECF12640;
  qword_1ECF12640 = (uint64_t)v0;

}

void sub_1A2147174()
{
  IMChatScrutinyController *v0;
  void *v1;

  v0 = objc_alloc_init(IMChatScrutinyController);
  v1 = (void *)qword_1ECF12438;
  qword_1ECF12438 = (uint64_t)v0;

}

void sub_1A2147854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A214773CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A2147894(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  _BOOL4 v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v23;
  const char *v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "count"));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *(unsigned __int8 *)(a1 + 56));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *(unsigned __int8 *)(a1 + 57));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = 136316162;
      v24 = "-[IMInlineReplyController insertHistoricalMessages:queryID:hasMessagesBefore:hasMessagesAfter:isReplacingIte"
            "ms:]_block_invoke";
      v25 = 2112;
      v26 = v3;
      v27 = 2112;
      v28 = v4;
      v29 = 2112;
      v30 = v5;
      v31 = 2112;
      v32 = v6;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "%s Updating/acting on queryID: %@  insertHistoricalMessages: %@, hasMessagesBefore: %@ hasMessagesAfter: %@", (uint8_t *)&v23, 0x34u);

    }
  }
  v7 = *(unsigned __int8 *)(a1 + 56);
  if (*(_BYTE *)(a1 + 58))
    objc_msgSend(*(id *)(a1 + 40), "_removeAllItems");
  if (!v7)
  {
    objc_msgSend(*(id *)(a1 + 40), "threadOriginator");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8 == 0;

    if (!v9)
    {
      v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      if (v10)
      {
        v11 = (void *)objc_msgSend(v10, "mutableCopy");
        objc_msgSend(*(id *)(a1 + 40), "threadOriginator");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "insertObject:atIndex:", v12, 0);

        v13 = objc_msgSend(v11, "copy");
      }
      else
      {
        v14 = (void *)MEMORY[0x1E0C99D20];
        objc_msgSend(*(id *)(a1 + 40), "threadOriginator");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "arrayWithObject:", v11);
        v13 = objc_claimAutoreleasedReturnValue();
      }
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v13;

    }
  }
  v18 = *(void **)(a1 + 40);
  v17 = a1 + 40;
  objc_msgSend(v18, "_appendArchivedItemsToItemsArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 8) + 8) + 40));
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8);
  v21 = *(void **)(v20 + 40);
  *(_QWORD *)(v20 + 40) = v19;

  return objc_msgSend(*(id *)v17, "_replaceAndSortItemsWithUnsortedItems:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 8) + 8) + 40));
}

id sub_1A2148434(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "itemMatchesThread:", v3))
  {
    v4 = *(void **)(a1 + 40);
    objc_msgSend(v3, "guid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "addObject:", v5);

    v6 = v3;
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

uint64_t sub_1A214922C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_setTimeAdded:", *(_QWORD *)(a1 + 32));
}

void sub_1A214A2F4(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A214A1FCLL);
  }
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(exc_buf);
}

void sub_1A214A348(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  void *v6;

  objc_msgSend(*(id *)(a1 + 32), "objectForKey:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v6)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_1A214A3A0(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  void *v6;

  objc_msgSend(*(id *)(a1 + 32), "objectForKey:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v6)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_1A214AB04(uint64_t a1, uint64_t a2, void *a3)
{
  char isKindOfClass;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void *v13;
  char v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  float v23;
  double v24;
  double v25;
  void *v26;
  double v27;
  id v28;

  v28 = a3;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v28;
  if ((isKindOfClass & 1) != 0)
  {
    v6 = v28;
    objc_msgSend(v6, "clientSendTime");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
      objc_msgSend(v6, "clientSendTime");
    else
      objc_msgSend(v6, "time");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "timeIntervalSinceReferenceDate");
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v11 = *(double *)(v10 + 24);
    if (v11 == 0.0)
    {
      *(double *)(v10 + 24) = v9;
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v11 = *(double *)(v10 + 24);
    }
    if (v9 <= v11)
      *(double *)(v10 + 24) = v9;
    if (objc_msgSend(v6, "isSent") && (objc_msgSend(v6, "isLocatingMessage") & 1) == 0)
    {
      v12 = *(_QWORD *)(a1 + 48);
      goto LABEL_16;
    }
    if (objc_msgSend(v6, "errorCode"))
    {
      v12 = *(_QWORD *)(a1 + 56);
LABEL_16:
      ++*(_QWORD *)(*(_QWORD *)(v12 + 8) + 24);
LABEL_22:

      v5 = v28;
      goto LABEL_23;
    }
    objc_msgSend(v6, "fileTransferGUIDs");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v13, "count"))
    {

    }
    else
    {
      v14 = objc_msgSend(v6, "isLocatingMessage");

      if ((v14 & 1) == 0)
      {
        ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24);
        objc_msgSend(*(id *)(a1 + 32), "timeIntervalSinceReferenceDate");
        v25 = v24;
        objc_msgSend(v6, "time");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "timeIntervalSinceReferenceDate");
        v19 = v25 - v27;

        v20 = 7.0;
        goto LABEL_19;
      }
    }
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "timeIntervalSinceReferenceDate");
    v16 = v15;
    objc_msgSend(v6, "time");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "timeIntervalSinceReferenceDate");
    v19 = v16 - v18;

    v20 = 30.0;
LABEL_19:
    v21 = v19 / v20;
    if (v21 > 0.899999976)
      v21 = 0.899999976;
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v23 = v21 + *(float *)(v22 + 24);
    *(float *)(v22 + 24) = v23;
    goto LABEL_22;
  }
LABEL_23:

}

void _IMAppendChatItemsForItemForTesting(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x1E0D39840];
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_1A214ADF4;
  v12[3] = &unk_1E471F668;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v9 = v7;
  v10 = v6;
  v11 = v5;
  objc_msgSend(v8, "testWithFeature:enabled:block:", sel_isTranscriptSharingEnabled, 0, v12);

}

void sub_1A214ADF4(void **a1)
{
  _IMAppendChatItemsForItem(a1[4], a1[5], a1[6]);
}

void _IMAppendChatItemsForItem(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;

  v5 = a3;
  v6 = a2;
  v7 = a1;
  sub_1A214AE74(v7, v6, objc_msgSend(v7, "count"), 0, v5);

}

void sub_1A214AE74(void *a1, void *a2, unint64_t a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  unint64_t v28;

  v9 = a1;
  v10 = a2;
  v11 = a5;
  if (v11)
  {
    if (a3)
    {
      objc_msgSend(v9, "objectAtIndex:", a3 - 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "_parentItem");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v13 = 0;
    }
    if (a3 + a4)
    {
      objc_msgSend(v9, "objectAtIndex:", a3 + a4 - 1);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "_parentItem");
      v18 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v18 = 0;
    }
    objc_msgSend(v10, "_chatItemsForItem:previousItem:", v11, v13);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v19, "count"))
    {
      IMLogHandleForCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        sub_1A21988D8((uint64_t)v11, (uint64_t)v13, v20);

    }
    objc_msgSend(v10, "_items");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v21, "count");

    if (!v22)
      objc_msgSend(v10, "_invalidateSpamIndicatorCachedValues");
    objc_msgSend(v9, "replaceObjectsInRange:withObjectsFromArray:", a3, a4, v19);
    v23 = objc_msgSend(v19, "count") + a3;
    if (v23 < objc_msgSend(v9, "count"))
    {
      objc_msgSend(v9, "objectAtIndex:", v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "_parentItem");
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v10, "_shouldRegenerateChatItemsForItem:previousItem:oldPreviousItem:", v25, v11, v18))sub_1A214D080(v9, v10, v23);
    }

  }
  else
  {
    v13 = 0;
    if (a3 != 0x7FFFFFFFFFFFFFFFLL && a3 + a4)
    {
      objc_msgSend(v9, "objectAtIndex:", a3 + a4 - 1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "_parentItem");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend(v9, "removeObjectsInRange:", a3, a4);
    if (a3 < objc_msgSend(v9, "count"))
    {
      if (a3)
      {
        objc_msgSend(v9, "objectAtIndex:", a3 - 1);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "_parentItem");
        v16 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v16 = 0;
      }
      if (a3 >= objc_msgSend(v9, "count"))
      {
        v27 = 0;
      }
      else
      {
        objc_msgSend(v9, "objectAtIndex:", a3);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "_parentItem");
        v27 = (void *)objc_claimAutoreleasedReturnValue();

      }
      if (objc_msgSend(v10, "_shouldRegenerateChatItemsForItem:previousItem:oldPreviousItem:", v27, v16, v13))
      {
        sub_1A214D080(v9, v10, a3);
        if (sub_1A214D1AC(v27))
        {
          v28 = a3 + 1;
          if (v28 < objc_msgSend(v9, "count"))
            sub_1A214D080(v9, v10, v28);
        }
      }

    }
  }

}

void _IMInsertChatItemsForItem(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD v9[6];
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = objc_msgSend(v7, "messageID");
  if (v8)
  {
    v10 = 0;
    v11 = &v10;
    v12 = 0x2020000000;
    v13 = 0;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = sub_1A214B298;
    v9[3] = &unk_1E47230F8;
    v9[4] = &v10;
    v9[5] = v8;
    objc_msgSend(v5, "enumerateObjectsWithOptions:usingBlock:", 2, v9);
    sub_1A214AE74(v5, v6, v11[3], 0, v7);
    _Block_object_dispose(&v10, 8);
  }
  else
  {
    sub_1A214AE74(v5, v6, objc_msgSend(v5, "count"), 0, v7);
  }

}

void sub_1A214B280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A214B298(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  uint64_t v8;

  objc_msgSend(a2, "_parentItem");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "messageID");

  if (v8)
  {
    if (v8 <= *(_QWORD *)(a1 + 40))
    {
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a3 + 1;
      *a4 = 1;
    }
  }
}

void _IMRemoveChatItemsForItemForTesting(void *a1, void *a2, void *a3)
{
  _IMReplaceChatItemsForItem(a1, a2, a3, 0);
}

void _IMRemoveChatItemsForItem(void *a1, void *a2, void *a3)
{
  _IMReplaceChatItemsForItem(a1, a2, a3, 0);
}

void _IMReplaceChatItemsForItem(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v13 = a1;
  v7 = a2;
  v8 = a4;
  v9 = a3;
  objc_msgSend(v13, "count");
  v10 = sub_1A214B3D8(v13, v9);
  v12 = v11;

  if (v10 != 0x7FFFFFFFFFFFFFFFLL)
    sub_1A214AE74(v13, v7, v10, v12, v8);

}

uint64_t sub_1A214B3D8(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v6;
  _QWORD v7[5];
  id v8;
  _QWORD v9[5];
  id v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  const char *v14;
  __int128 v15;

  v3 = a1;
  v11 = 0;
  v12 = &v11;
  v13 = 0x3010000000;
  v14 = "";
  v15 = xmmword_1A21AE690;
  v9[0] = 0;
  v9[1] = v9;
  v9[2] = 0x3032000000;
  v9[3] = sub_1A200AF04;
  v9[4] = sub_1A200ACF4;
  v10 = 0;
  v7[0] = 0;
  v7[1] = v7;
  v7[2] = 0x3032000000;
  v7[3] = sub_1A200AF04;
  v7[4] = sub_1A200ACF4;
  v8 = 0;
  v6 = a2;
  IMEnumerateArrayInRange();
  v4 = v12[4];

  _Block_object_dispose(v7, 8);
  _Block_object_dispose(v9, 8);

  _Block_object_dispose(&v11, 8);
  return v4;
}

void sub_1A214B53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Unwind_Resume(a1);
}

void _IMRemoveChatItemsInRange(void *a1, void *a2, unint64_t a3, uint64_t a4)
{
  sub_1A214AE74(a1, a2, a3, a4, 0);
}

void _IMReplaceChatItemsWithChatItemsForItemsForTesting(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x1E0D39840];
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_1A214B654;
  v12[3] = &unk_1E471F668;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v9 = v7;
  v10 = v6;
  v11 = v5;
  objc_msgSend(v8, "testWithFeature:enabled:block:", sel_isTranscriptSharingEnabled, 0, v12);

}

void sub_1A214B654(void **a1)
{
  _IMReplaceChatItemsWithChatItemsForItems(a1[4], a1[5], a1[6]);
}

void _IMReplaceChatItemsWithChatItemsForItems(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD v30[4];
  _QWORD v31[4];
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "__imItems");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "count"))
  {
    if (objc_msgSend(v8, "count"))
    {
      if (v8)
      {
        if (!v7)
          goto LABEL_16;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v7)
        {
LABEL_16:
          objc_msgSend(MEMORY[0x1E0C99DE8], "array");
          v7 = (id)objc_claimAutoreleasedReturnValue();
        }
      }
      objc_msgSend(v7, "differenceFromArray:withOptions:usingEquivalenceTest:", v8, 0, &unk_1E471DBF8);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v35 = 0;
      v36 = 0;
      IMIndexesFromOrderedCollectionDifference(v12, &v36, &v35);
      v13 = v36;
      v14 = v35;
      v31[0] = MEMORY[0x1E0C809B0];
      v31[1] = 3221225472;
      v31[2] = sub_1A214BA58;
      v31[3] = &unk_1E4723120;
      v8 = v8;
      v32 = v8;
      v15 = v5;
      v33 = v15;
      v16 = v6;
      v34 = v16;
      objc_msgSend(v14, "enumerateRangesUsingBlock:", v31);
      v17 = (void *)objc_msgSend(v8, "mutableCopy");
      objc_msgSend(v17, "removeObjectsAtIndexes:", v14);
      v21 = v12;
      v30[0] = 0;
      v30[1] = v30;
      v30[2] = 0x2020000000;
      v30[3] = 0;
      v18 = objc_msgSend(v17, "count");
      v22[0] = MEMORY[0x1E0C809B0];
      v22[1] = 3221225472;
      v22[2] = sub_1A214BB94;
      v22[3] = &unk_1E4723148;
      v19 = v13;
      v23 = v19;
      v29 = v18;
      v20 = v17;
      v24 = v20;
      v25 = v15;
      v28 = v30;
      v26 = v16;
      v7 = v7;
      v27 = v7;
      objc_msgSend(v19, "enumerateRangesUsingBlock:", v22);

      _Block_object_dispose(v30, 8);
      goto LABEL_18;
    }
    v39 = 0u;
    v40 = 0u;
    v37 = 0u;
    v38 = 0u;
    v7 = v7;
    v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    if (v9)
    {
      v10 = *(_QWORD *)v38;
      do
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v38 != v10)
            objc_enumerationMutation(v7);
          _IMAppendChatItemsForItem(v5, v6, *(void **)(*((_QWORD *)&v37 + 1) + 8 * v11++));
        }
        while (v9 != v11);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
      }
      while (v9);
    }

  }
  else
  {
    sub_1A214AE74(v5, v6, 0, objc_msgSend(v5, "count"), 0);
  }
LABEL_18:

}

void sub_1A214B9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A214B9EC(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v4 = a3;
  objc_msgSend(a2, "guid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "guid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "isEqualToString:", v6);
  return v7;
}

void sub_1A214BA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a3 + a2 - 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(a1 + 48);
  v9 = sub_1A214BAEC(v7, v11, v6);
  sub_1A214AE74(v7, v8, v9, v10, 0);

}

uint64_t sub_1A214BAEC(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v5 = a1;
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "count");
  v8 = sub_1A214B3D8(v5, v7);

  if (v7 != v6)
    sub_1A214B3D8(v5, v6);

  return v8;
}

void sub_1A214BB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  if ((unint64_t)(a2 + a3 - objc_msgSend(*(id *)(a1 + 32), "countOfIndexesInRange:", 0, a2 + a3)) >= *(_QWORD *)(a1 + 80))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = objc_msgSend(*(id *)(a1 + 48), "count");
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "objectAtIndex:");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = *(void **)(a1 + 48);
    objc_msgSend(v7, "count");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = sub_1A214B3D8(v7, v6);

  }
  v8 = *(void **)(a1 + 48);
  v9 = *(void **)(a1 + 56);
  objc_msgSend(*(id *)(a1 + 64), "subarrayWithRange:", a2, a3);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) += sub_1A214BCB4(v8, v9, v10, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8)+ 24));

}

uint64_t sub_1A214BCB4(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v28 = a4;
  if (a4 - 1 < 0)
  {
LABEL_5:
    v12 = 0;
  }
  else
  {
    v10 = a4;
    while (1)
    {
      objc_msgSend(v7, "objectAtIndex:", --v10, v28);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "_parentItem");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (v12)
        break;
      if (v10 <= 0)
        goto LABEL_5;
    }
  }
  v13 = v12;
  v14 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v15 = v9;
  v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  v29 = v13;
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v31;
    do
    {
      for (i = 0; i != v17; ++i)
      {
        if (*(_QWORD *)v31 != v18)
          objc_enumerationMutation(v15);
        v20 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
        objc_msgSend(v8, "_chatItemsForItem:previousItem:", v20, v13, v28);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v21, "count"))
        {
          objc_msgSend(v14, "addObjectsFromArray:", v21);
          v22 = v20;

          v13 = v22;
        }

      }
      v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v17);
  }

  objc_msgSend(v7, "replaceObjectsInRange:withObjectsFromArray:", v28, 0, v14);
  v23 = objc_msgSend(v14, "count") + v28;
  if (v23 < objc_msgSend(v7, "count"))
  {
    objc_msgSend(v7, "objectAtIndex:", v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "_parentItem");
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v8, "_shouldRegenerateChatItemsForItem:previousItem:oldPreviousItem:", v25, v13, v29))
    {
      sub_1A214D080(v7, v8, v23);
      if (sub_1A214D1AC(v25))
      {
        if (v23 < objc_msgSend(v7, "count"))
          sub_1A214D080(v7, v8, v23);
      }
    }

  }
  v26 = objc_msgSend(v14, "count", v28);

  return v26;
}

BOOL _IMScheduledMessageShouldBePinnedToBottom(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _BOOL8 v5;

  v1 = a1;
  if (objc_msgSend(v1, "scheduleType") != 2)
    goto LABEL_5;
  v2 = objc_msgSend(v1, "scheduleState");
  if ((unint64_t)(v2 - 1) < 2)
  {
    v5 = 1;
    goto LABEL_7;
  }
  if ((unint64_t)(v2 - 4) <= 1)
  {
    objc_msgSend(v1, "time");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v3, "compare:", v4) == 1;

  }
  else
  {
LABEL_5:
    v5 = 0;
  }
LABEL_7:

  return v5;
}

void _IMChatItemsReplaceWithChatItemsForItems(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _BOOL4 v7;
  void *v8;
  int v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  int v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  _QWORD v50[5];
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  _QWORD v55[4];
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  _BYTE *v61;
  uint64_t v62;
  _QWORD v63[4];
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _QWORD v81[4];
  id v82;
  _BYTE *v83;
  _BYTE v84[128];
  _BYTE v85[128];
  uint8_t v86[128];
  _BYTE buf[24];
  uint64_t v88;
  uint64_t v89;

  v89 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v49 = a3;
  objc_msgSend(v6, "_items");
  v48 = (id)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v48, "count") == 0;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isScheduledMessagesEnabled");

  if (((v9 ^ 1 | v7) & 1) == 0)
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x2020000000;
    LOBYTE(v88) = 0;
    v81[0] = MEMORY[0x1E0C809B0];
    v81[1] = 3221225472;
    v81[2] = sub_1A214C798;
    v81[3] = &unk_1E4722648;
    v82 = v5;
    v83 = buf;
    objc_msgSend(v82, "enumerateObjectsWithOptions:usingBlock:", 2, v81);
    v7 = *(_BYTE *)(*(_QWORD *)&buf[8] + 24) != 0;

    _Block_object_dispose(buf, 8);
  }
  objc_msgSend(v6, "_setItems:", v49);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v48, "count"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v49, "count"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v11;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v12;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "_IMChatItemsReplaceWithChatItemsForItems oldMessages.count: %@ newMessages.count: %@", buf, 0x16u);

    }
  }
  if (objc_msgSend(v49, "count"))
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "isCarrierPigeonEnabled");

    if (v14)
    {
      sub_1A214C84C(v5);
      sub_1A214C9DC(v5);
    }
    if (v7)
    {
      objc_msgSend(v5, "removeAllObjects");
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_msgSend(v15, "isScheduledMessagesEnabled");

      if (v16)
      {
        v17 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
        v79 = 0u;
        v80 = 0u;
        v77 = 0u;
        v78 = 0u;
        v18 = v49;
        v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v77, v86, 16);
        if (!v19)
          goto LABEL_24;
        v20 = *(_QWORD *)v78;
        while (1)
        {
          v21 = 0;
          do
          {
            if (*(_QWORD *)v78 != v20)
              objc_enumerationMutation(v18);
            v22 = *(void **)(*((_QWORD *)&v77 + 1) + 8 * v21);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v23 = v22;
              if (_IMScheduledMessageShouldBePinnedToBottom(v23))
              {
                objc_msgSend(v17, "addObject:", v23);

                goto LABEL_22;
              }

            }
            _IMAppendChatItemsForItem(v5, v6, v22);
LABEL_22:
            ++v21;
          }
          while (v19 != v21);
          v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v77, v86, 16);
          if (!v19)
          {
LABEL_24:

            v75 = 0u;
            v76 = 0u;
            v73 = 0u;
            v74 = 0u;
            objc_msgSend(v17, "sortedArrayUsingComparator:", &unk_1E4723168);
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v73, v85, 16);
            if (v25)
            {
              v26 = *(_QWORD *)v74;
              do
              {
                v27 = 0;
                do
                {
                  if (*(_QWORD *)v74 != v26)
                    objc_enumerationMutation(v24);
                  _IMAppendChatItemsForItem(v5, v6, *(void **)(*((_QWORD *)&v73 + 1) + 8 * v27++));
                }
                while (v25 != v27);
                v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v73, v85, 16);
              }
              while (v25);
            }

            goto LABEL_47;
          }
        }
      }
      v71 = 0u;
      v72 = 0u;
      v69 = 0u;
      v70 = 0u;
      v17 = v49;
      v43 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v69, v84, 16);
      if (v43)
      {
        v44 = *(_QWORD *)v70;
        do
        {
          v45 = 0;
          do
          {
            if (*(_QWORD *)v70 != v44)
              objc_enumerationMutation(v17);
            _IMAppendChatItemsForItem(v5, v6, *(void **)(*((_QWORD *)&v69 + 1) + 8 * v45++));
          }
          while (v43 != v45);
          v43 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v69, v84, 16);
        }
        while (v43);
      }
LABEL_47:

      sub_1A214CAF0(v5);
    }
    else
    {
      if (!v48)
      {
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v48 = (id)objc_claimAutoreleasedReturnValue();
      }
      v28 = v49;
      if (!v49)
      {
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
      }
      v29 = v28;
      objc_msgSend(v28, "differenceFromArray:withOptions:usingEquivalenceTest:", v48, 0, &unk_1E471B940);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v67 = 0;
      v68 = 0;
      IMIndexesFromOrderedCollectionDifference(v30, &v68, &v67);
      v31 = v68;
      v32 = v67;
      v63[0] = MEMORY[0x1E0C809B0];
      v63[1] = 3221225472;
      v63[2] = sub_1A214CB9C;
      v63[3] = &unk_1E4723120;
      v33 = v5;
      v64 = v33;
      v48 = v48;
      v65 = v48;
      v34 = v6;
      v66 = v34;
      objc_msgSend(v32, "enumerateRangesUsingBlock:", v63);
      v35 = (void *)objc_msgSend(v48, "mutableCopy");
      objc_msgSend(v35, "removeObjectsAtIndexes:", v32);
      v46 = v30;
      v47 = v32;
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x2020000000;
      v88 = 0;
      v36 = objc_msgSend(v35, "count");
      v37 = MEMORY[0x1E0C809B0];
      v38 = v36;
      v55[0] = MEMORY[0x1E0C809B0];
      v55[1] = 3221225472;
      v55[2] = sub_1A214CD5C;
      v55[3] = &unk_1E4723148;
      v39 = v31;
      v56 = v39;
      v62 = v38;
      v40 = v35;
      v57 = v40;
      v41 = v33;
      v58 = v41;
      v61 = buf;
      v59 = v34;
      v42 = v29;
      v60 = v42;
      objc_msgSend(v39, "enumerateRangesUsingBlock:", v55);
      v51 = 0;
      v52 = &v51;
      v53 = 0x2020000000;
      v54 = 0;
      v49 = v42;
      v50[0] = v37;
      v50[1] = 3221225472;
      v50[2] = sub_1A214CECC;
      v50[3] = &unk_1E471F390;
      v50[4] = &v51;
      objc_msgSend(v42, "enumerateObjectsUsingBlock:", v50);
      if (*((_BYTE *)v52 + 24))
        sub_1A214CAF0(v41);
      _Block_object_dispose(&v51, 8);

      _Block_object_dispose(buf, 8);
    }
  }
  else
  {
    sub_1A214AE74(v5, v6, 0, objc_msgSend(v5, "count"), 0);
  }

}

void sub_1A214C740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1A214C798(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  char isKindOfClass;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;

  v11 = a2;
  if ((unint64_t)(objc_msgSend(*(id *)(a1 + 32), "count") - a3) > 0x31)
    goto LABEL_5;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v8 = v11;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v11, "messageItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "scheduleType");

    v8 = v11;
    if (v10 == 2)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
LABEL_5:
      *a4 = 1;
      v8 = v11;
    }
  }

}

void sub_1A214C84C(void *a1)
{
  id v1;
  void *v2;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isCarrierPigeonEnabled");

  if (v3)
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    objc_msgSend(v1, "reverseObjectEnumerator", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v5)
    {
      v6 = v5;
      v7 = 0;
      v8 = *(_QWORD *)v15;
      while (2)
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v15 != v8)
            objc_enumerationMutation(v4);
          v10 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v11 = v10;
            v12 = objc_msgSend(v11, "statusType");
            if (((v12 == 32) & v7) == 1)
            {
              objc_msgSend(v1, "removeObject:", v11);

              goto LABEL_15;
            }
            v13 = v12;

            if (v13 != 32)
              goto LABEL_15;
            v7 = 1;
          }
        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v6)
          continue;
        break;
      }
    }
LABEL_15:

  }
}

void sub_1A214C9DC(void *a1)
{
  void *v1;
  int v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = a1;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isCarrierPigeonEnabled");

  if (v2 && objc_msgSend(v5, "count"))
  {
    v3 = objc_msgSend(v5, "count") - 1;
    objc_opt_class();
    objc_msgSend(v5, "objectAtIndex:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v5, "removeObject:", v4);

  }
}

uint64_t sub_1A214CA84(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v4 = a3;
  objc_msgSend(a2, "time");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "time");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "compare:", v6);
  return v7;
}

void sub_1A214CAF0(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0CB3788]);
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A214D274;
  v5[3] = &unk_1E47224C8;
  v6 = v1;
  v7 = v2;
  v3 = v2;
  v4 = v1;
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v5);
  objc_msgSend(v4, "removeObjectsAtIndexes:", v3);

}

BOOL sub_1A214CB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 == a3;
}

void sub_1A214CB9C(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  void **v17;
  void *v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v6 = objc_msgSend(a1[4], "count");
  v7 = v6;
  v8 = a3 - 1;
  if (a3 == 1)
  {
    v9 = a1[4];
    objc_msgSend(a1[5], "objectAtIndex:", a2);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = sub_1A214B3D8(v9, v10);
    v13 = v12;

  }
  else
  {
    MEMORY[0x1E0C80A78](v6);
    v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    bzero(v15, v14);
    objc_msgSend(a1[5], "getObjects:range:", v15, a2, a3);
    v16 = 0x7FFFFFFFFFFFFFFFLL;
    if (a3)
    {
      v17 = (void **)v15;
      do
      {
        v18 = *v17++;
        v19 = sub_1A214B3D8(a1[4], v18);
      }
      while (v19 == 0x7FFFFFFFFFFFFFFFLL && v8-- != 0);
      v11 = v19;
      v21 = v15 - 8;
      while (1)
      {
        v22 = sub_1A214B3D8(a1[4], *(void **)&v21[8 * a3]);
        if (v22 != 0x7FFFFFFFFFFFFFFFLL)
          break;
        if (!--a3)
        {
          v16 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_16;
        }
      }
      v16 = v22;
    }
    else
    {
      v23 = 0;
      v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
LABEL_16:
    v13 = v16 - v11 + v23;
  }
  if (v11 != 0x7FFFFFFFFFFFFFFFLL && v13 <= v7 && v11 + v13 <= v7)
    sub_1A214AE74(a1[4], a1[6], v11, v13, 0);
}

void sub_1A214CD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v6 = a2 + a3 - objc_msgSend(*(id *)(a1 + 32), "countOfIndexesInRange:", 0, a2 + a3);
  if (v6 >= *(_QWORD *)(a1 + 80))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = objc_msgSend(*(id *)(a1 + 48), "count");
  }
  else
  {
    v7 = 0;
    while (v6 < *(_QWORD *)(a1 + 80))
    {
      objc_msgSend(*(id *)(a1 + 40), "objectAtIndex:", v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      v9 = *(void **)(a1 + 48);
      objc_msgSend(v9, "count");
      v10 = sub_1A214B3D8(v9, v8);
      ++v6;
      v7 = v8;
      if (v10 != 0x7FFFFFFFFFFFFFFFLL)
      {
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = v10;

        goto LABEL_8;
      }
    }
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = objc_msgSend(*(id *)(a1 + 48), "count");

  }
LABEL_8:
  v11 = *(void **)(a1 + 48);
  v12 = *(void **)(a1 + 56);
  objc_msgSend(*(id *)(a1 + 64), "subarrayWithRange:", a2, a3);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) += sub_1A214BCB4(v11, v12, v13, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8)+ 24));

}

void sub_1A214CECC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  v8 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v8, "replyCountsByPart");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "count");

    if (v7 == 1)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
      *a4 = 1;
    }
  }

}

void sub_1A214CF5C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  id obj;

  objc_msgSend(a2, "_parentItem");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7 != *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    obj = v7;
    objc_msgSend(*(id *)(a1 + 32), "guid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(obj, "guid");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v8, "isEqualToString:", v9);

    if (v10)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), obj);
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 32) = a3;
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
    v7 = obj;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_QWORD *)(v11 + 32) != 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v7 == *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
      ++*(_QWORD *)(v11 + 40);
    else
      *a4 = 1;
  }

}

void sub_1A214D080(void *a1, void *a2, unint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = a1;
  v5 = a2;
  if (a3)
  {
    objc_msgSend(v13, "objectAtIndex:", a3 - 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "_parentItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }
  if (objc_msgSend(v13, "count") <= a3)
  {
    v9 = 0;
  }
  else
  {
    objc_msgSend(v13, "objectAtIndex:", a3);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "_parentItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  objc_msgSend(v13, "count");
  v10 = sub_1A214B3D8(v13, v9);
  if (v10 != 0x7FFFFFFFFFFFFFFFLL)
    objc_msgSend(v13, "removeObjectsInRange:", v10, v11);
  objc_msgSend(v5, "_chatItemsForItem:previousItem:", v9, v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "replaceObjectsInRange:withObjectsFromArray:", a3, 0, v12);

}

uint64_t sub_1A214D1AC(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_5;
  if (objc_msgSend(v1, "changeType"))
    goto LABEL_5;
  objc_msgSend(v1, "_senderHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "ID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_otherHandle");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v3, "isEqualToString:", v5);

  if ((v6 & 1) != 0)
    v7 = 1;
  else
LABEL_5:
    v7 = 0;

  return v7;
}

void sub_1A214D274(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v10;
  void *v11;
  int v12;
  id v13;

  v13 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v13, "count") == 1)
  {
    v5 = v13;
    v6 = a3 + 1;
    if (a3 + 1 >= (unint64_t)objc_msgSend(*(id *)(a1 + 32), "count"))
    {
      v8 = 0;
    }
    else
    {
      do
      {
        objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v6);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v8 = v7;
        else
          v8 = 0;

      }
      while (++v6 < (unint64_t)objc_msgSend(*(id *)(a1 + 32), "count") && v8 == 0);
    }
    objc_msgSend(v8, "threadIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "threadIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v10, "isEqualToString:", v11);

    if (v12)
      objc_msgSend(*(id *)(a1 + 40), "addIndex:", a3);

  }
}

void sub_1A214D400()
{
  IMHandleAvailabilityManager *v0;
  void *v1;

  v0 = objc_alloc_init(IMHandleAvailabilityManager);
  v1 = (void *)qword_1ECF12560;
  qword_1ECF12560 = (uint64_t)v0;

}

void sub_1A214DB54(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  void *v27;
  int v28;
  void *v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(v3, "currentStatus");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "statusUniqueIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(WeakRetained, "pendingFetchesForCacheKeys");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_sync_enter(v7);
  v8 = objc_msgSend(WeakRetained, "currentCacheGeneration");
  objc_sync_exit(v7);

  if (*(_QWORD *)(a1 + 64) == v8)
  {
    objc_msgSend(WeakRetained, "pendingFetchesForCacheKeys");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_sync_enter(v9);
    objc_msgSend(WeakRetained, "pendingFetchesForCacheKeys");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "removeObject:", *(_QWORD *)(a1 + 32));

    objc_sync_exit(v9);
    if (v3)
    {
      v11 = v3;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v11 = (id)objc_claimAutoreleasedReturnValue();
    }
    v14 = v11;
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        v17 = *(_QWORD *)(a1 + 32);
        v16 = *(void **)(a1 + 40);
        v28 = 138412802;
        v29 = v16;
        v30 = 2112;
        v31 = v17;
        v32 = 2112;
        v33 = v14;
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Caching subscription for handle \"%@\" with key \"%@\" and value: %@", (uint8_t *)&v28, 0x20u);
      }

    }
    objc_msgSend(WeakRetained, "currentSubscriptionCache");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_sync_enter(v18);
    objc_msgSend(WeakRetained, "currentSubscriptionCache");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "setObject:forKey:", v14, *(_QWORD *)(a1 + 32));

    objc_sync_exit(v18);
    objc_msgSend(WeakRetained, "lastKnownSubscriptionCache");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_sync_enter(v20);
    objc_msgSend(WeakRetained, "lastKnownSubscriptionCache");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setObject:forKey:", v14, *(_QWORD *)(a1 + 32));

    objc_sync_exit(v20);
    v22 = *(void **)(a1 + 48);
    if (v6 == v22 || v6 && v22 && (objc_msgSend(v6, "isEqualToString:") & 1) != 0)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          v24 = *(void **)(a1 + 32);
          v28 = 138412290;
          v29 = v24;
          _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "Fetched status is the same as the lask known status already returned. Not posting change notification for key: \"%@\"", (uint8_t *)&v28, 0xCu);
        }

      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
        {
          v26 = *(_QWORD *)(a1 + 48);
          v27 = *(void **)(a1 + 32);
          v28 = 138412802;
          v29 = v6;
          v30 = 2112;
          v31 = v26;
          v32 = 2112;
          v33 = v27;
          _os_log_impl(&dword_1A1FF4000, v25, OS_LOG_TYPE_INFO, "Fetched status %@ is different than the last known status %@. Posting change notification for key: \"%@\"", (uint8_t *)&v28, 0x20u);
        }

      }
      objc_msgSend(WeakRetained, "_postNotificationForUpdatedStatusWithSubscription:", v3);
    }

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      v13 = *(void **)(a1 + 64);
      v28 = 134218498;
      v29 = v13;
      v30 = 2048;
      v31 = v8;
      v32 = 2112;
      v33 = v6;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Fetched status is not current (startGeneration: %ld, endGeneration: %ld), discarding status %@.", (uint8_t *)&v28, 0x20u);
    }

  }
}

void sub_1A214E2D0(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  uint8_t buf[4];
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "personalStatusSubscription");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v10 = v2;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Personal status subscription: %@", buf, 0xCu);
    }

  }
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A214E41C;
  v6[3] = &unk_1E471E8B8;
  v4 = *(id *)(a1 + 40);
  v7 = v2;
  v8 = v4;
  v5 = v2;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

}

uint64_t sub_1A214E41C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1A214E42C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  int v8;
  NSObject *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (!v6)
  {
    v8 = IMOSLoggingEnabled();
    if (v5)
    {
      if (!v8)
        goto LABEL_5;
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(*(id *)(a1 + 32), "handleString");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = 138412546;
        v13 = v10;
        v14 = 2112;
        v15 = v5;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Found status subscription for handleID: \"%@\". Subscription: %@", (uint8_t *)&v12, 0x16u);

      }
    }
    else
    {
      if (!v8)
        goto LABEL_5;
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(*(id *)(a1 + 32), "handleString");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = 138412290;
        v13 = v11;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Did not find status subscription for handleID: \"%@\"", (uint8_t *)&v12, 0xCu);

      }
    }

    goto LABEL_5;
  }
  IMLogHandleForCategory();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    sub_1A219896C(a1, (uint64_t)v6, v7);

LABEL_5:
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1A214E5EC(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A214E4A4);
  }
  _Unwind_Resume(a1);
}

void sub_1A214E688(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "__mainThreadPostNotificationName:object:", IMHandleAvailabilityChangedNotification, *(_QWORD *)(a1 + 32));

}

void sub_1A214EB74(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;

  objc_msgSend(*(id *)(a1 + 32), "subscriptionService");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "personalStatusSubscription");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(*(id *)(a1 + 32), "_availablityFromStatusSubscription:handleID:", v3, 0);
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A214EC28;
  v5[3] = &unk_1E4723230;
  v6 = *(id *)(a1 + 40);
  v7 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

}

uint64_t sub_1A214EC28(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_1A214EF54(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2198A7C();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = *(_QWORD *)(a1 + 40);
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Successfully retained transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }

  }
}

void sub_1A214F3B0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2198B00();

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v7;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Successfully released transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }

  }
}

void sub_1A215002C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

intptr_t sub_1A21527E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_msgSend(a2, "copy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void *sub_1A2152DE0()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("_IMDChatRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F718 = result;
  return result;
}

void *sub_1A2152E0C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDChatRecordCopyHandles", CFSTR("IMDPersistence"));
  off_1EE65F728 = result;
  return result;
}

IMSPIHandle *sub_1A2152E38(IMSPIHandle *a1)
{
  uint64_t Identifier;
  NSObject *v3;
  uint64_t *p_theString;
  uint64_t v5;
  IMSPIHandle *v6;
  NSObject *v7;
  CFTypeRef v9;
  CFTypeRef cf;
  CFStringRef theString;
  uint8_t buf[4];
  IMSPIHandle *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  Identifier = IMDHandleRecordGetIdentifier();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v13 = (IMSPIHandle *)Identifier;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Beginning _IMSPIHandleFromRecord for handle record ID: %lld", buf, 0xCu);
    }

  }
  if (a1)
  {
    if (qword_1EE65F910 != -1)
      dispatch_once(&qword_1EE65F910, &unk_1E4723A60);
    cf = 0;
    theString = 0;
    v9 = 0;
    off_1EE65F908(a1, &cf, &v9, 0, &theString, 0);
    if (theString && CFStringGetLength(theString) > 0)
      p_theString = (uint64_t *)&theString;
    else
      p_theString = (uint64_t *)&cf;
    v5 = *p_theString;
    v6 = [IMSPIHandle alloc];
    a1 = -[IMSPIHandle initWithAddress:countryCode:isMe:](v6, "initWithAddress:countryCode:isMe:", v5, v9, 0);
    if (theString)
    {
      CFRelease(theString);
      theString = 0;
    }
    if (cf)
    {
      CFRelease(cf);
      cf = 0;
    }
    if (v9)
    {
      CFRelease(v9);
      v9 = 0;
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v13 = a1;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Completed _IMSPIHandleFromRecord with handle: %@", buf, 0xCu);
      }

    }
  }
  return a1;
}

void sub_1A2153D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

dispatch_queue_t sub_1A2153D6C(dispatch_qos_class_t qos_class)
{
  const char *v1;
  const char *v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  const char *v7;
  NSObject *v8;
  dispatch_queue_t v9;

  v1 = "com.apple.messages.imcore.spi.default";
  v2 = "com.apple.messages.imcore.spi.userinitiated";
  v3 = "com.apple.messages.imcore.spi.userinteractive";
  if (qos_class != QOS_CLASS_USER_INTERACTIVE)
    v3 = 0;
  if (qos_class != QOS_CLASS_USER_INITIATED)
    v2 = v3;
  if (qos_class != QOS_CLASS_DEFAULT)
    v1 = v2;
  v4 = "com.apple.messages.imcore.spi.qos-unspecified";
  v5 = "com.apple.messages.imcore.spi.background";
  v6 = "com.apple.messages.imcore.spi.utility";
  if (qos_class != QOS_CLASS_UTILITY)
    v6 = 0;
  if (qos_class != QOS_CLASS_BACKGROUND)
    v5 = v6;
  if (qos_class)
    v4 = v5;
  if ((int)qos_class <= 20)
    v7 = v4;
  else
    v7 = v1;
  dispatch_queue_attr_make_with_qos_class(MEMORY[0x1E0C80D50], qos_class, 0);
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = dispatch_queue_create(v7, v8);

  return v9;
}

BOOL IMSPIQueryChatWithGuid(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  NSObject *v12;
  id v13;
  NSObject *v14;
  _QWORD block[4];
  id v17;
  id v18;
  id v19;
  uint8_t buf[16];

  v7 = a1;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (v9)
  {
    v11 = (void *)objc_msgSend(v9, "copy");

    sub_1A2153D6C(a2);
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A2163F1C;
    block[3] = &unk_1E471E818;
    v17 = v7;
    v18 = v8;
    v19 = v11;
    v13 = v11;
    dispatch_async(v12, block);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Empty result block supplied to IMSPIQueryChatWithGuid", buf, 2u);
    }

  }
  return v10 != 0;
}

void sub_1A2153F8C(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_1A21544BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1A21544D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "sender");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "address");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21546C0((uint64_t)v4, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 32), "sender");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "isMe");

    if ((v7 & 1) == 0)
      objc_msgSend(v2, "addObject:", v5);
  }
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend(*(id *)(a1 + 32), "recipients", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v18;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v18 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
        if ((objc_msgSend(v13, "isMe") & 1) == 0)
        {
          objc_msgSend(v13, "address");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          sub_1A21546C0((uint64_t)v14, v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          if (v15)
            objc_msgSend(v2, "addObject:", v15);

        }
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v10);
  }

  IMSharedDowntimeController();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v16, "allowedToShowConversationWithHandleIDs:sync:context:", v2, 1, 0);

}

id sub_1A21546C0(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;

  v2 = a2;
  v3 = v2;
  if (v2 && ((MEMORY[0x1A858280C](v2) & 1) != 0 || IMStringIsEmail()))
  {
    IMStripFormattingFromAddress();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t sub_1A215471C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t IMSPICreateMessageGUID()
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringGUID");
}

uint64_t _IMSPIMessageTypeFromPeerPaymentPayloadURL(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint8_t v7[16];
  uint8_t buf[16];

  v1 = a1;
  if (qword_1EE65F740 != -1)
    dispatch_once(&qword_1EE65F740, &unk_1E47232E0);
  if (off_1EE65F738)
  {
    v2 = off_1EE65F738(v1);
    if (v2 == 1)
    {
      v3 = 209;
      goto LABEL_17;
    }
    if (v2 == 2)
    {
      v3 = 210;
      goto LABEL_17;
    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Failed to weak link PassKitCore/PKPeerPaymentMessageTypeFromDataURL.", buf, 2u);
    }

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Could not determine peer payment message type.", v7, 2u);
    }

  }
  v3 = 214;
LABEL_17:

  return v3;
}

void *sub_1A2154898()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("PKPeerPaymentMessageTypeFromDataURL", CFSTR("PassKitCore"));
  off_1EE65F738 = result;
  return result;
}

NSObject *_IMSPIExtractPayloadURLFromPayloadNSData(void *a1)
{
  NSObject *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  char v8;
  NSObject *v9;
  NSObject *v10;
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = a1;
  if (!v2)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Payload data was nil, retuning nil payload URL", buf, 2u);
      }

    }
    goto LABEL_30;
  }
  IMExtensionPayloadUnarchivingClasses();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3710]), "initForReadingFromData:error:", v2, &v12);
  v5 = v12;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v4, "_enableStrictSecureDecodingMode");
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "strict-decoding 010 _enableStrictSecureDecodingMode called", buf, 2u);
      }

    }
  }
  objc_msgSend(v4, "decodeObjectOfClasses:forKey:", v3, *MEMORY[0x1E0CB2CD0]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v5;
      _os_log_impl(&dword_1A1FF4000, v1, OS_LOG_TYPE_INFO, "Failed to unarchive message payload data. Error: %@", buf, 0xCu);
    }

  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v7, "objectForKey:", *MEMORY[0x1E0D37E68]);
    v1 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v8 = 0;
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Payload URL not in archived payload dictionary, retuning nil payload URL", buf, 2u);
        }

      }
      v8 = 1;
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v1 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v1, OS_LOG_TYPE_INFO, "Could not decode payload dictionary, retuning nil payload URL", buf, 2u);
      }

    }
    v8 = 1;
  }

  if ((v8 & 1) != 0)
LABEL_30:
    v1 = 0;

  return v1;
}

id _IMSPIExtractPayloadURLFromPayloadData(void *a1)
{
  void *v2;
  NSObject *v4;
  uint8_t v5[16];

  if (a1)
  {
    _IMSPIExtractPayloadURLFromPayloadNSData(a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();

    return v2;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v5 = 0;
        _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Payload data was nil, retuning nil payload URL", v5, 2u);
      }

    }
    return 0;
  }
}

id _IMSPIPeerPaymentAmountFromExtensionPayloadURL(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  const char *v4;
  uint8_t *v5;
  __int16 v7;
  uint8_t buf[2];

  v1 = a1;
  if (!v1)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        v7 = 0;
        v4 = "Extension payload URL is nil, not setting peer payment amount.";
        v5 = (uint8_t *)&v7;
LABEL_12:
        _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, v4, v5, 2u);
      }
LABEL_13:

    }
LABEL_14:
    v2 = 0;
    goto LABEL_15;
  }
  if (qword_1EE65F750 != -1)
    dispatch_once(&qword_1EE65F750, &unk_1E471C310);
  if (!off_1EE65F748)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v4 = "Failed to weak link PassKitCore/PKPeerPaymentMessageTypeFromDataURL.";
        v5 = buf;
        goto LABEL_12;
      }
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  off_1EE65F748(v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_15:

  return v2;
}

void *sub_1A2154F20()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("PKPeerPaymentMessageCurrencyAmountFromDataURL", CFSTR("PassKitCore"));
  off_1EE65F748 = result;
  return result;
}

uint64_t _IMSPIMessageOrAttachmentsMatchPluginIdentifier(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  char v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  if ((objc_msgSend(a2, "containsString:", v5) & 1) != 0)
  {
    v7 = 1;
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v8 = v6;
    v7 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v7)
    {
      v9 = *(_QWORD *)v15;
      while (2)
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v15 != v9)
            objc_enumerationMutation(v8);
          objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * i), "bundleID", (_QWORD)v14);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v11, "containsString:", v5);

          if ((v12 & 1) != 0)
          {
            v7 = 1;
            goto LABEL_13;
          }
        }
        v7 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v7)
          continue;
        break;
      }
    }
LABEL_13:

  }
  return v7;
}

uint64_t _IMSPIDetermineMessageType(void *a1, int a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t j;
  void *v38;
  void *v39;
  BOOL v40;
  NSObject *v41;
  void *v42;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t k;
  void *v48;
  void *v49;
  int IsMap;
  NSObject *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  id obj;
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _BYTE v70[128];
  uint8_t v71[128];
  uint8_t buf[4];
  id v73;
  _BYTE v74[128];
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v15 = a1;
  v16 = a3;
  v57 = a5;
  v17 = a7;
  v18 = a8;
  v19 = a4 - 2000;
  v20 = 105;
  switch(v19)
  {
    case 0:
      v20 = 108;
      goto LABEL_95;
    case 1:
      goto LABEL_95;
    case 2:
      v20 = 106;
      goto LABEL_95;
    case 3:
      v20 = 110;
      goto LABEL_95;
    case 4:
      v20 = 107;
      goto LABEL_95;
    case 5:
      v20 = 109;
      goto LABEL_95;
    case 6:
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_msgSend(v23, "isSiriReactionReadingEnabled");

      if (a2)
        v20 = 101;
      else
        v20 = 0;
      if ((v24 & 1) != 0)
        v20 = 111;
      goto LABEL_17;
    case 7:
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "isSiriReactionReadingEnabled");

      if (a2)
        v20 = 101;
      else
        v20 = 0;
      if ((v22 & 1) != 0)
      {
        v20 = 112;
        goto LABEL_95;
      }
LABEL_17:
      if (v20)
        goto LABEL_95;
LABEL_23:
      v25 = (void *)*MEMORY[0x1E0D37620];
      if ((objc_msgSend(v57, "containsString:", *MEMORY[0x1E0D37620]) & 1) != 0)
      {
        v20 = 211;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier(v25, v15, v16))
      {
        _IMSPIExtractPayloadURLFromPayloadData(a6);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = _IMSPIMessageTypeFromPeerPaymentPayloadURL(v26);

      }
      else if ((_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D375F8], v15, v16) & 1) != 0)
      {
        v20 = 213;
      }
      else if ((_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D375C8], v15, v16) & 1) != 0)
      {
        v20 = 207;
      }
      else if ((_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D37588], v15, v16) & 1) != 0)
      {
        v20 = 102;
      }
      else if ((_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D375C0], v15, v16) & 1) != 0)
      {
        v20 = 103;
      }
      else if ((_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D37550], v15, v16) & 1) != 0)
      {
        v20 = 212;
      }
      else if ((_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D374F8], v15, v16) & 1) != 0)
      {
        v20 = 216;
      }
      else if ((_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D374C0], v15, v16) & 1) != 0)
      {
        v20 = 217;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D37508], v15, v16))
      {
        if ((objc_msgSend(v18, "containsString:", CFSTR("Started Sharing Location")) & 1) != 0)
        {
          v20 = 219;
        }
        else if (objc_msgSend(v18, "containsString:", CFSTR("Requested Location")))
        {
          v20 = 218;
        }
        else
        {
          v20 = 220;
        }
      }
      else
      {
        v20 = 0;
      }
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      v28 = objc_msgSend(v27, "isZelkovaEnabled");

      if (v28 && (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E0D37500], v15, v16) & 1) != 0)
      {
        v20 = 215;
        goto LABEL_95;
      }
      if (v20)
        goto LABEL_95;
      v55 = v18;
      v68 = 0u;
      v69 = 0u;
      v66 = 0u;
      v67 = 0u;
      v29 = v16;
      v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v66, v74, 16);
      if (v30)
      {
        v20 = 0;
        v31 = *(_QWORD *)v67;
        do
        {
          for (i = 0; i != v30; ++i)
          {
            if (*(_QWORD *)v67 != v31)
              objc_enumerationMutation(v29);
            v33 = *(void **)(*((_QWORD *)&v66 + 1) + 8 * i);
            if (objc_msgSend(v33, "isSticker"))
            {
              if (objc_msgSend(v33, "isAdaptiveImageGlyph") && objc_msgSend(v17, "length"))
              {
                v20 = 100;
              }
              else if ((objc_msgSend(v33, "isAdaptiveImageGlyph") & 1) == 0)
              {

                v20 = 104;
                goto LABEL_94;
              }
            }
          }
          v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v66, v74, 16);
        }
        while (v30);

        if (v20)
          goto LABEL_95;
      }
      else
      {

      }
      v54 = objc_msgSend(v15, "length");
      if (v54)
      {
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v34 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v73 = v15;
            _os_log_impl(&dword_1A1FF4000, v34, OS_LOG_TYPE_INFO, "Unhandled balloon bundle ID: %@", buf, 0xCu);
          }

        }
        v20 = 214;
      }
      else
      {
        v20 = 0;
      }
      v64 = 0u;
      v65 = 0u;
      v62 = 0u;
      v63 = 0u;
      obj = v29;
      v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v62, v71, 16);
      if (v35)
      {
        v36 = *(_QWORD *)v63;
        do
        {
          for (j = 0; j != v35; ++j)
          {
            if (*(_QWORD *)v63 != v36)
              objc_enumerationMutation(obj);
            v38 = *(void **)(*((_QWORD *)&v62 + 1) + 8 * j);
            objc_msgSend(v38, "bundleID", v54);
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            v40 = objc_msgSend(v39, "length") == 0;

            if (!v40)
            {
              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v41 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
                {
                  objc_msgSend(v38, "bundleID");
                  v42 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412290;
                  v73 = v42;
                  _os_log_impl(&dword_1A1FF4000, v41, OS_LOG_TYPE_INFO, "Unhandled attachment bundle ID: %@", buf, 0xCu);

                }
              }

              v20 = 222;
              goto LABEL_94;
            }
          }
          v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v62, v71, 16);
        }
        while (v35);
      }

      v18 = v55;
      if (v54)
        goto LABEL_95;
      if (!objc_msgSend(obj, "count") || objc_msgSend(v17, "length"))
        goto LABEL_86;
      v60 = 0u;
      v61 = 0u;
      v58 = 0u;
      v59 = 0u;
      v44 = obj;
      v45 = objc_msgSend(v44, "countByEnumeratingWithState:objects:count:", &v58, v70, 16);
      if (!v45)
      {

        goto LABEL_86;
      }
      v46 = 0;
      v54 = *(_QWORD *)v59;
      v20 = 200;
      do
      {
        for (k = 0; k != v45; ++k)
        {
          if (*(_QWORD *)v59 != v54)
            objc_enumerationMutation(v44);
          v48 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * k);
          objc_msgSend(v48, "uti", v54);
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v48, "isSticker") & 1) != 0)
          {
            v46 = 104;
          }
          else if (IMUTTypeIsSupportedAnimatedImage())
          {
            v46 = 221;
          }
          if ((IMUTTypeIsImage() & 1) != 0)
            goto LABEL_128;
          if ((IMUTTypeIsMovie() & 1) != 0)
          {
            v20 = 201;
            goto LABEL_128;
          }
          if ((IMUTTypeIsAudio() & 1) != 0)
          {
            v20 = 202;
            goto LABEL_128;
          }
          if ((IMUTTypeIsCalendar() & 1) != 0)
          {
            v20 = 203;
            goto LABEL_128;
          }
          if ((IMUTTypeIsVCard() & 1) != 0)
          {
            v20 = 204;
            goto LABEL_128;
          }
          if (IMUTTypeIsPass())
          {
            v20 = 205;
LABEL_128:

LABEL_94:
            v18 = v55;
            goto LABEL_95;
          }
          IsMap = IMUTTypeIsMap();

          if ((IsMap & 1) != 0)
          {
            v20 = 208;
            goto LABEL_130;
          }
        }
        v45 = objc_msgSend(v44, "countByEnumeratingWithState:objects:count:", &v58, v70, 16);
      }
      while (v45);
      if (IsMap)
        v20 = 208;
      else
        v20 = v46;
LABEL_130:

      v18 = v55;
      if (!v20)
      {
LABEL_86:
        if (objc_msgSend(obj, "count", v54) && !objc_msgSend(v17, "length"))
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v51 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v51, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(obj, "firstObject");
              v52 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v52, "uti");
              v53 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412290;
              v73 = v53;
              _os_log_impl(&dword_1A1FF4000, v51, OS_LOG_TYPE_INFO, "Unhandled attachment UTI: %@", buf, 0xCu);

            }
          }
          v20 = 206;
        }
        else
        {
          v20 = 100;
        }
        goto LABEL_94;
      }
LABEL_95:

      return v20;
    default:
      if (a2)
        v20 = 101;
      else
        v20 = 0;
      if (!v20)
        goto LABEL_23;
      goto LABEL_95;
  }
}

id _IMSPIDisplayAppNameFromAttachments(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v1 = a1;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v11;
    v5 = *MEMORY[0x1E0D37F20];
    while (2)
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v11 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v6), "attributionInfo", (_QWORD)v10);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "objectForKey:", v5);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v8, "length"))
        {

          goto LABEL_11;
        }

        ++v6;
      }
      while (v3 != v6);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v3)
        continue;
      break;
    }
  }
  v8 = 0;
LABEL_11:

  return v8;
}

IMSPIMessage *_IMSPIMessageFromRecord(uint64_t a1, int a2, unsigned int a3, void *a4, dispatch_qos_class_t a5)
{
  NSObject *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  IMSPIMessage *v10;
  void *v11;
  IMSPIHandle *v12;
  IMSPIHandle *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  NSObject *v22;
  const __CFArray *v23;
  const __CFArray *v24;
  CFIndex Count;
  CFIndex i;
  const void *ValueAtIndex;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  IMSPIAttachment *v33;
  IMSPIAttachment *v34;
  NSObject *v35;
  NSObject *v36;
  void *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t j;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  IMSPIHandle *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  char v58;
  IMSPIHandle *v59;
  void *v60;
  NSObject *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  IMSPIMessage *v65;
  void *v66;
  void *v67;
  char v68;
  uint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  void *v75;
  NSObject *v76;
  void *v77;
  NSObject *v78;
  void *v79;
  void *v80;
  NSObject *v81;
  dispatch_time_t v82;
  void *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  NSObject *v88;
  NSObject *v89;
  void *v90;
  char v91;
  char v92;
  void *v93;
  void *v94;
  uint64_t v95;
  const void *v96;
  void *v97;
  NSObject *v98;
  uint64_t Identifier;
  void *context;
  void *v104;
  id v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  unint64_t v117;
  __CFString *v118;
  id v119;
  uint64_t v120;
  IMPluginPayload *v121;
  void *v122;
  id v123;
  IMSPIHandle *v124;
  id v125;
  void *v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  _QWORD v131[4];
  id v132;
  void *v133;
  void *v134;
  char v135;
  void *v136;
  void *v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  CFStringRef theString;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  id v147;
  void *v148;
  void *v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint8_t v157[8];
  CFTypeRef v158;
  CFTypeRef v159;
  CFTypeRef v160;
  CFTypeRef v161;
  __int16 v162;
  CFTypeRef v163[2];
  _QWORD block[4];
  IMPluginPayload *v165;
  CFTypeRef *v166;
  CFTypeRef cf;
  CFTypeRef *p_cf;
  uint64_t v169;
  uint64_t (*v170)(uint64_t, uint64_t);
  void (*v171)(uint64_t);
  id v172;
  uint8_t v173[128];
  __int128 buf;
  void (*v175)(uint64_t, void *);
  void *v176;
  id v177;
  IMPluginPayload *v178;
  NSObject *v179;
  uint64_t v180;

  v180 = *MEMORY[0x1E0C80C00];
  v125 = a4;
  if (a1)
  {
    Identifier = IMDMessageRecordGetIdentifier();
    v120 = a1;
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 134217984;
        *(_QWORD *)((char *)&buf + 4) = Identifier;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Beginning _IMSPIMessageFromRecord for message record %lld", (uint8_t *)&buf, 0xCu);
      }

      a1 = v120;
    }
    v156 = 0;
    v155 = 0;
    v154 = 0;
    v153 = 0;
    v152 = 0;
    v151 = 0;
    v150 = 0;
    v149 = 0;
    v148 = 0;
    v147 = 0;
    v146 = 0;
    v145 = 0;
    v144 = 0;
    v143 = 0;
    v142 = 0;
    theString = 0;
    v140 = 0;
    v139 = 0;
    v138 = 0;
    v137 = 0;
    v136 = 0;
    v135 = 0;
    v134 = 0;
    v133 = 0;
    if (qword_1EE65F760 != -1)
      dispatch_once(&qword_1EE65F760, &unk_1E4723300);
    off_1EE65F758(a1, &v155, &v152, 0, &v150, &v154, &v153, 0, 0, &v149, &v148, &v147, &v146, 0, 0, &v156, &v145, 0, 0,
      &v135,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      &v138,
      &v139,
      0,
      &theString,
      &v136,
      &v140,
      0,
      &v137,
      0,
      0,
      0,
      0,
      &v134,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      &v133,
      0,
      0);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Completed _IMDMessageRecordBulkCopy", (uint8_t *)&buf, 2u);
      }

    }
    v8 = v149;
    v118 = (__CFString *)theString;
    v108 = v138;
    v109 = v148;
    v112 = v150;
    v113 = v146;
    v115 = v145;
    v116 = v134;
    v114 = v133;
    v119 = v147;
    v117 = objc_msgSend(v147, "unsignedLongLongValue");
    if ((v117 & 4) != 0)
    {
      if (objc_msgSend(v116, "length"))
      {
        v124 = -[IMSPIHandle initWithAddress:countryCode:isMe:]([IMSPIHandle alloc], "initWithAddress:countryCode:isMe:", v116, 0, 1);
        goto LABEL_35;
      }
      if (!IMOSLoggingEnabled())
        goto LABEL_34;
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "destinationCallerID on outgoing message is nil. Sender information will be missing for this message.", (uint8_t *)&buf, 2u);
      }
      goto LABEL_33;
    }
    if (v156 < 1)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "handleID for sender on received message is nil. Sender information will be missing for this message.", (uint8_t *)&buf, 2u);
        }
        goto LABEL_33;
      }
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v125, "objectForKey:", v11);
      v124 = (IMSPIHandle *)objc_claimAutoreleasedReturnValue();

      if (v124)
        goto LABEL_35;
      if (qword_1EE65F770 != -1)
        dispatch_once(&qword_1EE65F770, &unk_1E4723320);
      v12 = (IMSPIHandle *)off_1EE65F768(v120);
      v13 = v12;
      if (v12)
      {
        sub_1A2152E38(v12);
        v124 = (IMSPIHandle *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", v156);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v125, "setObject:forKey:", v124, v14);

        CFRelease(v13);
        goto LABEL_35;
      }
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "handleRef matching handleID on received message is nil. Sender information will be missing for this message.", (uint8_t *)&buf, 2u);
        }
LABEL_33:

      }
    }
LABEL_34:
    v124 = 0;
LABEL_35:
    objc_msgSend(v8, "stringByReplacingOccurrencesOfString:withString:", *MEMORY[0x1E0D362F8], &stru_1E4725068);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3500], "newlineCharacterSet");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "stringByTrimmingCharactersInSet:", v17);
    v122 = (void *)objc_claimAutoreleasedReturnValue();

    v18 = v137;
    if (v137)
    {
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithMessageSummaryInfoData:", v137);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = v19;
      if (v19)
      {
        objc_msgSend(v19, "objectForKey:", *MEMORY[0x1E0D38328]);
        v111 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v111 = 0;
      }

    }
    else
    {
      v111 = 0;
    }
    if (v135)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf) = 67109120;
          DWORD1(buf) = a3;
          _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "hasAttachments: 1 loadAttachments:%d", (uint8_t *)&buf, 8u);
        }

      }
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Beginning IMSPIAttachmentsFromMessageRecord", (uint8_t *)&buf, 2u);
        }

      }
      v23 = (const __CFArray *)IMDMessageRecordCopyAttachments();
      v24 = v23;
      if (v23)
        Count = CFArrayGetCount(v23);
      else
        Count = 0;
      objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", Count);
      v126 = (void *)objc_claimAutoreleasedReturnValue();
      if (qword_1EE65F920 != -1)
        dispatch_once(&qword_1EE65F920, &unk_1E4723A80);
      if (Count >= 1)
      {
        for (i = 0; i != Count; ++i)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(v24, i);
          *(_QWORD *)&buf = 0;
          cf = 0;
          block[0] = 0;
          v163[0] = 0;
          v162 = 0;
          v161 = 0;
          v160 = 0;
          v159 = 0;
          v158 = 0;
          off_1EE65F918(ValueAtIndex, &buf, 0, 0, 0, &cf, v163, 0, block, &v162, 0, 0, (char *)&v162 + 1, &v161, &v160, 0, 0, 0, 0,
            0,
            0,
            &v159,
            &v158);
          if (cf)
          {
            v28 = (void *)objc_msgSend((id)cf, "copy");
            objc_msgSend(v28, "componentsSeparatedByString:", CFSTR("/Attachments/"));
            v29 = (void *)objc_claimAutoreleasedReturnValue();

            if ((unint64_t)objc_msgSend(v29, "count") < 2)
            {
              v31 = 0;
            }
            else
            {
              objc_msgSend(v29, "objectAtIndexedSubscript:", 1);
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              sub_1A21611A0((uint64_t)v30);
              v31 = (void *)objc_claimAutoreleasedReturnValue();

            }
          }
          else
          {
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v32 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)v157 = 0;
                _os_log_impl(&dword_1A1FF4000, v32, OS_LOG_TYPE_INFO, "Attachment filename returned empty", v157, 2u);
              }

            }
            v31 = 0;
          }
          v33 = [IMSPIAttachment alloc];
          v34 = -[IMSPIAttachment initWithGuid:fileUrl:transferState:uti:isSticker:isOutgoing:stickerUserInfo:attributionInfo:creationDate:adaptiveImageGlyphContentIdentifier:adaptiveImageGlyphContentDescription:](v33, "initWithGuid:fileUrl:transferState:uti:isSticker:isOutgoing:stickerUserInfo:attributionInfo:creationDate:adaptiveImageGlyphContentIdentifier:adaptiveImageGlyphContentDescription:", (_QWORD)buf, v31, block[0], v163[0], HIBYTE(v162) != 0, (_BYTE)v162 != 0, v161, v160, 0, v159, v158);
          objc_msgSend(v126, "addObject:", v34);
          if ((_QWORD)buf)
          {
            CFRelease((CFTypeRef)buf);
            *(_QWORD *)&buf = 0;
          }
          if (cf)
          {
            CFRelease(cf);
            cf = 0;
          }
          if (v163[0])
          {
            CFRelease(v163[0]);
            v163[0] = 0;
          }
          if (v161)
          {
            CFRelease(v161);
            v161 = 0;
          }
          if (v160)
          {
            CFRelease(v160);
            v160 = 0;
          }
          if (v159)
          {
            CFRelease(v159);
            v159 = 0;
          }
          if (v158)
          {
            CFRelease(v158);
            v158 = 0;
          }

        }
      }
      if (v24)
        CFRelease(v24);
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v35 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A1FF4000, v35, OS_LOG_TYPE_INFO, "Completed IMSPIAttachmentsFromMessageRecord", (uint8_t *)&buf, 2u);
        }

      }
    }
    else
    {
      v126 = 0;
    }
    if (v139 || !objc_msgSend(v122, "length") || theString && CFStringGetLength(theString))
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v36 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A1FF4000, v36, OS_LOG_TYPE_INFO, "Beginning description construction for non-text message", (uint8_t *)&buf, 2u);
        }

      }
      sub_1A215764C(v120);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v131[0] = MEMORY[0x1E0C809B0];
      v131[1] = 3221225472;
      v131[2] = sub_1A2157B70;
      v131[3] = &unk_1E47233D0;
      v132 = v126;
      objc_msgSend(v37, "descriptionForPurpose:isGroupMessage:messageDataSource:attachmentDataSource:", 5, 0, &unk_1E4723360, v131);
      v38 = (void *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v39 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A1FF4000, v39, OS_LOG_TYPE_INFO, "Completed description construction for non-text message", (uint8_t *)&buf, 2u);
        }

      }
    }
    else
    {
      v38 = 0;
    }
    if (qword_1EE65F790 != -1)
      dispatch_once(&qword_1EE65F790, &unk_1E47233F0);
    if (v155)
    {
      v40 = 0;
    }
    else
    {
      v41 = (id)off_1EE65F788(v120);

      v40 = v41;
    }
    v107 = v40;
    if (objc_msgSend(v40, "count"))
    {
      if (qword_1EE65F7A0 != -1)
        dispatch_once(&qword_1EE65F7A0, &unk_1E4723410);
      v42 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v129 = 0u;
      v130 = 0u;
      v127 = 0u;
      v128 = 0u;
      v43 = v107;
      v44 = objc_msgSend(v43, "countByEnumeratingWithState:objects:count:", &v127, v173, 16);
      if (v44)
      {
        v45 = *(_QWORD *)v128;
        do
        {
          for (j = 0; j != v44; ++j)
          {
            if (*(_QWORD *)v128 != v45)
              objc_enumerationMutation(v43);
            v47 = (void *)off_1EE65F798(0, *(_QWORD *)(*((_QWORD *)&v127 + 1) + 8 * j));
            objc_msgSend(v42, "addObject:", v47);

          }
          v44 = objc_msgSend(v43, "countByEnumeratingWithState:objects:count:", &v127, v173, 16);
        }
        while (v44);
      }

      v48 = objc_msgSend(v43, "__imFirstObject");
      if (v48)
      {
        if (qword_1EE65F7B0 != -1)
          dispatch_once(&qword_1EE65F7B0, &unk_1E4723430);
        v49 = (void *)off_1EE65F7A8(v48);
        v123 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
        if (objc_msgSend(v49, "count"))
        {
          v50 = 0;
          while (1)
          {
            v51 = (IMSPIHandle *)objc_msgSend(v49, "objectAtIndex:", v50);
            v52 = IMDHandleRecordGetIdentifier();
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", v52);
            v53 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v125, "objectForKey:", v53);
            v54 = (void *)objc_claimAutoreleasedReturnValue();

            if (v54)
              goto LABEL_126;
            sub_1A2152E38(v51);
            v54 = (void *)objc_claimAutoreleasedReturnValue();
            if (v54)
              break;
LABEL_128:

            if (++v50 >= (unint64_t)objc_msgSend(v49, "count"))
              goto LABEL_129;
          }
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", v52);
          v55 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v125, "setObject:forKey:", v54, v55);

LABEL_126:
          objc_msgSend(v54, "address");
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          -[IMSPIHandle address](v124, "address");
          v57 = (void *)objc_claimAutoreleasedReturnValue();
          v58 = objc_msgSend(v56, "isEqualToString:", v57);

          if ((v58 & 1) == 0)
            objc_msgSend(v123, "addObject:", v54);
          goto LABEL_128;
        }
LABEL_129:
        if ((v117 & 4) == 0)
        {
          if (objc_msgSend(v116, "length"))
          {
            v59 = -[IMSPIHandle initWithAddress:countryCode:isMe:]([IMSPIHandle alloc], "initWithAddress:countryCode:isMe:", v116, 0, 1);
            objc_msgSend(v123, "addObject:", v59);

          }
          else if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v61 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
            {
              LOWORD(buf) = 0;
              _os_log_impl(&dword_1A1FF4000, v61, OS_LOG_TYPE_INFO, "destinationCallerID is nil, message will not contain own address in recipients", (uint8_t *)&buf, 2u);
            }

          }
        }
        if (qword_1EE65F7C0 != -1)
          dispatch_once(&qword_1EE65F7C0, &unk_1E4723450);
        off_1EE65F7B8(v48, &v151, 0, 0, 0, &v144, 0, 0, 0, &v143, 0, 0, &v142, 0, 0, 0, 0, 0, 0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0);
        v60 = v144;
        v104 = v143;
        v110 = v142;

      }
      else
      {
        v123 = 0;
        v110 = 0;
        v104 = 0;
        v60 = 0;
      }
    }
    else
    {
      v123 = 0;
      v110 = 0;
      v104 = 0;
      v60 = 0;
      v42 = 0;
    }
    context = (void *)MEMORY[0x1A8582D94]();
    v62 = objc_msgSend(v119, "unsignedLongLongValue");
    v63 = objc_msgSend(v119, "unsignedLongLongValue");
    v64 = objc_msgSend(v119, "unsignedLongLongValue");
    v65 = objc_alloc_init(IMSPIMessage);
    if (objc_msgSend(v38, "length"))
      v66 = v38;
    else
      v66 = v122;
    -[IMSPIMessage setText:](v65, "setText:", v66);
    -[IMSPIMessage setBody:](v65, "setBody:", v122);
    -[IMSPIMessage setSummary:](v65, "setSummary:", v38);
    -[IMSPIMessage setEffect:](v65, "setEffect:", v140);
    -[IMSPIMessage setSubject:](v65, "setSubject:", v115);
    -[IMSPIHandle address](v124, "address");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    v68 = MEMORY[0x1A85827F4]();

    if ((v68 & 1) == 0)
      -[IMSPIMessage setDisplayName:](v65, "setDisplayName:", v104);
    -[IMSPIMessage setItemType:](v65, "setItemType:", v155);
    v69 = (v63 >> 20) & 1;
    if ((_DWORD)v69 && objc_msgSend(v109, "length"))
    {
      JWDecodeCodableObjectWithStandardAllowlist();
      v70 = (void *)objc_claimAutoreleasedReturnValue();
      -[IMSPIMessage setAttributedText:](v65, "setAttributedText:", v70);

    }
    -[IMSPIMessage setHasDataDetectedResults:](v65, "setHasDataDetectedResults:", v69);
    -[IMSPIMessage setSender:](v65, "setSender:", v124);
    -[IMSPIMessage setRecipients:](v65, "setRecipients:", v123);
    objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)v154);
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    -[IMSPIMessage setDate:](v65, "setDate:", v71);

    objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)v153);
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    -[IMSPIMessage setDateRead:](v65, "setDateRead:", v72);

    if (a2)
    {
      sub_1A2157E90(v120);
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      -[IMSPIMessage setDateForLastReadMessageInChat:](v65, "setDateForLastReadMessageInChat:", v73);

    }
    -[IMSPIMessage setIsOutgoing:](v65, "setIsOutgoing:", (v117 >> 2) & 1);
    -[IMSPIMessage setIsRead:](v65, "setIsRead:", (v62 >> 13) & 1);
    -[IMSPIMessage setIsAudioMessage:](v65, "setIsAudioMessage:", (v64 >> 21) & 1);
    -[IMSPIMessage setGuid:](v65, "setGuid:", v112);
    -[IMSPIMessage setMessageID:](v65, "setMessageID:", v152);
    -[IMSPIMessage setChatGuids:](v65, "setChatGuids:", v42);
    -[IMSPIMessage setGroupID:](v65, "setGroupID:", v110);
    -[IMSPIMessage setChatIdentifier:](v65, "setChatIdentifier:", v60);
    -[IMSPIMessage setIsGroupChat:](v65, "setIsGroupChat:", v151 != 45);
    -[IMSPIMessage setService:](v65, "setService:", v113);
    -[IMSPIMessage setAttachments:](v65, "setAttachments:", v126);
    -[IMSPIMessage setBundleId:](v65, "setBundleId:", v118);
    -[IMSPIMessage setAssociatedMessageEmoji:](v65, "setAssociatedMessageEmoji:", v114);
    v74 = _IMSPIDetermineMessageType(v118, (v64 >> 21) & 1, v126, v139, v111, v136, v122, v38);
    -[IMSPIMessage setMessageType:](v65, "setMessageType:", v74);
    _IMSPIDisplayAppNameFromAttachments(v126);
    v75 = (void *)objc_claimAutoreleasedReturnValue();
    -[IMSPIMessage setDisplayAppName:](v65, "setDisplayAppName:", v75);
    if (v74 != 213)
    {
      if ((unint64_t)(v74 - 209) > 1)
      {
        if (v74 != 217 && v74 != 216)
          goto LABEL_184;
        _IMSPIExtractPayloadURLFromPayloadData(v136);
        v86 = (void *)objc_claimAutoreleasedReturnValue();
        -[IMSPIMessage setExtensionPayloadURL:](v65, "setExtensionPayloadURL:", v86);
      }
      else
      {
        _IMSPIExtractPayloadURLFromPayloadData(v136);
        v86 = (void *)objc_claimAutoreleasedReturnValue();
        _IMSPIPeerPaymentAmountFromExtensionPayloadURL(v86);
        v87 = (void *)objc_claimAutoreleasedReturnValue();
        -[IMSPIMessage setPeerPaymentAmount:](v65, "setPeerPaymentAmount:", v87);

      }
LABEL_183:

LABEL_184:
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v90 = (void *)objc_claimAutoreleasedReturnValue();
      v91 = objc_msgSend(v90, "isZelkovaEnabled");

      v92 = v91 ^ 1;
      if (v74 != 215)
        v92 = 1;
      if ((v92 & 1) == 0)
      {
        _IMSPIExtractPayloadURLFromPayloadData(v136);
        v93 = (void *)objc_claimAutoreleasedReturnValue();
        -[IMSPIMessage setExtensionPayloadURL:](v65, "setExtensionPayloadURL:", v93);

      }
      if (IMSPIMessageTypeHasAssociatedMessage(v74) && objc_msgSend(v108, "length"))
      {
        IMAssociatedMessageDecodeGUID();
        v94 = (void *)objc_claimAutoreleasedReturnValue();
        if (qword_1EE65F7D0 != -1)
          dispatch_once(&qword_1EE65F7D0, &unk_1E4723470);
        v95 = off_1EE65F7C8(v94);
        v96 = (const void *)v95;
        if (v95)
        {
          _IMSPIMessageFromRecord(v95, 0, a3, v125, a5);
          v97 = (void *)objc_claimAutoreleasedReturnValue();
          -[IMSPIMessage setReferencedMessage:](v65, "setReferencedMessage:", v97);
          CFRelease(v96);

        }
      }

      objc_autoreleasePoolPop(context);
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v98 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v98, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf) = 134217984;
          *(_QWORD *)((char *)&buf + 4) = Identifier;
          _os_log_impl(&dword_1A1FF4000, v98, OS_LOG_TYPE_INFO, "Completed _IMSPIMessageFromRecord for message record %lld", (uint8_t *)&buf, 0xCu);
        }

      }
      v10 = v65;

      goto LABEL_200;
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v76 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v76, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A1FF4000, v76, OS_LOG_TYPE_INFO, "Beginning _IMSPIRichLinkMetadataForMessageRecord", (uint8_t *)&buf, 2u);
      }

    }
    sub_1A215764C(v120);
    v77 = (void *)objc_claimAutoreleasedReturnValue();
    if (v77)
    {
      v121 = -[IMPluginPayload initWithMessageItem:]([IMPluginPayload alloc], "initWithMessageItem:", v77);
      if (v121)
      {
        if (a3)
        {
          v78 = dispatch_group_create();
          dispatch_group_enter(v78);
          objc_msgSend(v77, "fileTransferGUIDs");
          v79 = (void *)objc_claimAutoreleasedReturnValue();
          sub_1A2153D6C(a5);
          v80 = (void *)objc_claimAutoreleasedReturnValue();
          *(_QWORD *)&buf = MEMORY[0x1E0C809B0];
          *((_QWORD *)&buf + 1) = 3221225472;
          v175 = sub_1A2165954;
          v176 = &unk_1E4723AC8;
          v177 = v79;
          v178 = v121;
          v179 = v78;
          v81 = v78;
          v106 = v79;
          IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(v106, a5, v80, &buf);

          v82 = dispatch_time(0, 5000000000);
          dispatch_group_wait(v81, v82);

        }
        cf = 0;
        p_cf = &cf;
        v169 = 0x3032000000;
        v170 = sub_1A200AF14;
        v171 = sub_1A200ACFC;
        v172 = 0;
        if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread"))
        {
          +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
          v83 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v83, "dataSourceForPluginPayload:", v121);
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = (void *)p_cf[5];
          p_cf[5] = (CFTypeRef)v84;

        }
        else
        {
          block[0] = MEMORY[0x1E0C809B0];
          block[1] = 3221225472;
          block[2] = sub_1A21659A4;
          block[3] = &unk_1E471F4D0;
          v166 = &cf;
          v165 = v121;
          dispatch_sync(MEMORY[0x1E0C80D38], block);
          v83 = v165;
        }

        objc_msgSend((id)p_cf[5], "richLinkMetadata");
        v86 = (void *)objc_claimAutoreleasedReturnValue();
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v89 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v89, OS_LOG_TYPE_INFO))
          {
            LOWORD(v163[0]) = 0;
            _os_log_impl(&dword_1A1FF4000, v89, OS_LOG_TYPE_INFO, "Completed _IMSPIRichLinkMetadataForMessageRecord", (uint8_t *)v163, 2u);
          }

        }
        _Block_object_dispose(&cf, 8);

        goto LABEL_182;
      }
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v88 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v88, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf) = 138412290;
          *(_QWORD *)((char *)&buf + 4) = v77;
          _os_log_impl(&dword_1A1FF4000, v88, OS_LOG_TYPE_INFO, "Could not init IMPluginPayload for messageItem: %@", (uint8_t *)&buf, 0xCu);
        }
LABEL_174:

      }
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v88 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v88, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v120;
        _os_log_impl(&dword_1A1FF4000, v88, OS_LOG_TYPE_INFO, "Could not create IMMessageItem from message record: %@", (uint8_t *)&buf, 0xCu);
      }
      goto LABEL_174;
    }
    v86 = 0;
LABEL_182:

    -[IMSPIMessage setRichLinkMetadata:](v65, "setRichLinkMetadata:", v86);
    goto LABEL_183;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Attempted to create IMSPIMessage from NULL IMDMessageRecordRef.", (uint8_t *)&buf, 2u);
    }

  }
  v10 = 0;
LABEL_200:

  return v10;
}

void *sub_1A21575F4()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F758 = result;
  return result;
}

void *sub_1A2157620()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyHandle", CFSTR("IMDPersistence"));
  off_1EE65F768 = result;
  return result;
}

id sub_1A215764C(uint64_t a1)
{
  void *v2;
  id v3;

  if (qword_1EE65F930 != -1)
    dispatch_once(&qword_1EE65F930, &unk_1E471BAE0);
  off_1EE65F928(a1, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  v3 = 0;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;

  return v3;
}

BOOL sub_1A21576E4(uint64_t a1, void *a2, _QWORD *a3, _QWORD *a4)
{
  id v6;
  uint64_t (*v7)(id);
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  const void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  NSObject *v28;
  _QWORD v30[4];
  id v31;
  __int128 *p_buf;
  uint64_t v33;
  __int128 buf;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  if (qword_1EE65F780 != -1)
    dispatch_once(&qword_1EE65F780, &unk_1E4723380);
  v7 = (uint64_t (*)(id))off_1EE65F778;
  v8 = v6;
  objc_msgSend(MEMORY[0x1E0CB38E8], "regularExpressionWithPattern:options:error:", CFSTR("(p:(\\d+)\\/)?([\\dA-F]{8}-[\\dA-F]{4}-[\\dA-F]{4}-[\\dA-F]{4}-[\\dA-F]{12})"), 1, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "firstMatchInString:options:range:", v8, 0, 0, objc_msgSend(v8, "length"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v10 && objc_msgSend(v10, "numberOfRanges") == 4)
  {
    v12 = objc_msgSend(v11, "rangeAtIndex:", 2);
    v14 = 0x7FFFFFFFFFFFFFFFLL;
    if (v12 != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v8, "substringWithRange:", v12, v13);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v15, "integerValue");

    }
    v16 = objc_msgSend(v11, "rangeAtIndex:", 3);
    objc_msgSend(v8, "substringWithRange:", v16, v17);
    v18 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v18 = v8;
    v14 = 0x7FFFFFFFFFFFFFFFLL;
  }

  v19 = (const void *)v7(v18);
  if (v19)
  {
    sub_1A215764C((uint64_t)v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "body");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v21;
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v35 = 0x3032000000;
    v36 = sub_1A200AF14;
    v37 = sub_1A200ACFC;
    v38 = 0;
    if (v14 == 0x7FFFFFFFFFFFFFFFLL)
      goto LABEL_12;
    v23 = objc_msgSend(v21, "length");
    v24 = *MEMORY[0x1E0D366B8];
    v30[0] = MEMORY[0x1E0C809B0];
    v30[1] = 3221225472;
    v30[2] = sub_1A2157AC0;
    v30[3] = &unk_1E47233A8;
    p_buf = &buf;
    v33 = v14;
    v31 = v20;
    objc_msgSend(v22, "enumerateAttribute:inRange:options:usingBlock:", v24, 0, v23, 0, v30);

    if (!*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
    {
LABEL_12:
      v25 = -[IMMessagePartChatItem _initWithItem:index:messagePartRange:]([IMMessagePartChatItem alloc], "_initWithItem:index:messagePartRange:", v20, 0, 0, objc_msgSend(v22, "length"));
      v26 = *(void **)(*((_QWORD *)&buf + 1) + 40);
      *(_QWORD *)(*((_QWORD *)&buf + 1) + 40) = v25;

    }
    v27 = objc_retainAutorelease(v20);
    *a3 = v27;
    *a4 = objc_retainAutorelease(*(id *)(*((_QWORD *)&buf + 1) + 40));
    CFRelease(v19);
    _Block_object_dispose(&buf, 8);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_1A1FF4000, v28, OS_LOG_TYPE_INFO, "Failed to retrieve message %@", (uint8_t *)&buf, 0xCu);
    }

  }
  return v19 != 0;
}

void *sub_1A2157A94()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessageForGUID", CFSTR("IMDPersistence"));
  off_1EE65F778 = result;
  return result;
}

void sub_1A2157AC0(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v12, "integerValue") == a1[6])
  {
    v9 = -[IMMessagePartChatItem _initWithItem:index:messagePartRange:]([IMMessagePartChatItem alloc], "_initWithItem:index:messagePartRange:", a1[4], a1[6], a3, a4);
    v10 = *(_QWORD *)(a1[5] + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *a5 = 1;
  }

}

uint64_t sub_1A2157B70(uint64_t a1, void *a2, _QWORD *a3, _QWORD *a4, _BYTE *a5, _BYTE *a6, _QWORD *a7, _QWORD *a8)
{
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  int v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  _BYTE *v23;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  id v32;
  _BYTE v33[128];
  uint64_t v34;

  v23 = a6;
  v34 = *MEMORY[0x1E0C80C00];
  v11 = a2;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v12 = *(id *)(a1 + 32);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
  if (v13)
  {
    v14 = *(_QWORD *)v28;
    while (2)
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v28 != v14)
          objc_enumerationMutation(v12);
        v16 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
        objc_msgSend(v16, "guid", v23);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_msgSend(v11, "isEqualToString:", v17);

        if (v18)
        {
          objc_msgSend(v16, "fileUrl");
          *a3 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "uti");
          *a4 = (id)objc_claimAutoreleasedReturnValue();
          *a5 = objc_msgSend(v16, "isSticker");
          *v23 = objc_msgSend(v16, "isOutgoing") ^ 1;
          if (a7)
          {
            objc_msgSend(v16, "adaptiveImageGlyphContentDescription");
            *a7 = (id)objc_claimAutoreleasedReturnValue();
          }
          if (a8)
          {
            objc_msgSend(v16, "attributionInfo");
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v21, "objectForKeyedSubscript:", *MEMORY[0x1E0D37F10]);
            *a8 = (id)objc_claimAutoreleasedReturnValue();

          }
          v20 = 1;
          goto LABEL_19;
        }
      }
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
      if (v13)
        continue;
      break;
    }
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v32 = v11;
      _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Could not find attachment matching attachment guid: %@", buf, 0xCu);
    }

  }
  v20 = 0;
LABEL_19:

  return v20;
}

void *sub_1A2157DE0()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyChats", CFSTR("IMDPersistence"));
  off_1EE65F788 = result;
  return result;
}

void *sub_1A2157E0C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDChatRecordCopyGUID", CFSTR("IMDPersistence"));
  off_1EE65F798 = result;
  return result;
}

void *sub_1A2157E38()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDChatRecordCopyHandles", CFSTR("IMDPersistence"));
  off_1EE65F7A8 = result;
  return result;
}

void *sub_1A2157E64()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("_IMDChatRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F7B8 = result;
  return result;
}

id sub_1A2157E90(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  const void *v7;
  NSObject *v8;
  uint8_t v10[8];
  uint64_t v11;
  uint8_t buf[8];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Beginning _dateForLastReadMessageInChatForMessage", buf, 2u);
    }

  }
  if (a1)
  {
    if (qword_1EE65F940 != -1)
      dispatch_once(&qword_1EE65F940, &unk_1E4723AA0);
    v3 = (void *)off_1EE65F938(a1);
    if (objc_msgSend(v3, "count"))
    {
      v4 = objc_msgSend(v3, "firstObject");
      if (qword_1EE65F950 != -1)
        dispatch_once(&qword_1EE65F950, &unk_1E471C4D0);
      v11 = 0;
      *(_QWORD *)buf = 0;
      off_1EE65F948(v4, 0, 0, 0, 0, buf, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,
        &v11,
        0,
        0,
        0,
        0,
        0,
        0,
        0);
      if (v11 < 1)
      {
        if (qword_1EE65F960 != -1)
          dispatch_once(&qword_1EE65F960, &unk_1E471C4F0);
        v6 = off_1EE65F958(*(_QWORD *)buf);
        if (v6)
        {
          v7 = (const void *)v6;
          if (qword_1EE65F970 != -1)
            dispatch_once(&qword_1EE65F970, &unk_1E471C510);
          *(_QWORD *)v10 = 0;
          off_1EE65F968(v7, 0, 0, 0, 0, 0, v10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0);
          objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)*(uint64_t *)v10);
          v5 = (void *)objc_claimAutoreleasedReturnValue();
          CFRelease(v7);
        }
        else
        {
          v5 = 0;
        }
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)v11);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
      }
      if (*(_QWORD *)buf)
      {
        CFRelease(*(CFTypeRef *)buf);
        *(_QWORD *)buf = 0;
      }
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v10 = 0;
          _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Completed _dateForLastReadMessageInChatForMessage", v10, 2u);
        }

      }
    }
    else
    {
      v5 = 0;
    }

  }
  else
  {
    v5 = 0;
  }
  return v5;
}

BOOL IMSPIMessageTypeHasAssociatedMessage(uint64_t a1)
{
  return (unint64_t)(a1 - 200) > 0x16 && (unint64_t)(a1 - 105) < 9;
}

void *sub_1A21581E4()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessageForGUID", CFSTR("IMDPersistence"));
  off_1EE65F7C8 = result;
  return result;
}

uint64_t IMSPIQueryLastReceivedMessage(void *a1, void *a2)
{
  return IMSPIQueryLastReceivedMessageWithQOS(QOS_CLASS_DEFAULT, a2, a1);
}

uint64_t IMSPIQueryLastReceivedMessageWithQOS(dispatch_qos_class_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _QWORD block[4];
  id v15;
  id v16;
  dispatch_qos_class_t v17;
  uint8_t buf[4];
  const char *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
    v8 = v6 == 0;
  else
    v8 = 1;
  v9 = !v8;
  if (v8)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v19 = "BOOL IMSPIQueryLastReceivedMessageWithQOS(dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIM"
              "essageQueryCallback)";
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }

    }
  }
  else
  {
    v10 = (void *)objc_msgSend(v6, "copy");

    sub_1A2153D6C(a1);
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A21583C0;
    block[3] = &unk_1E47234E8;
    v17 = a1;
    v15 = v5;
    v7 = v10;
    v16 = v7;
    dispatch_async(v11, block);

  }
  return v9;
}

void sub_1A21583C0(uint64_t a1)
{
  const void *v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  _QWORD *v9;
  _QWORD block[4];
  id v11;
  _QWORD *v12;
  const void *v13;
  int v14;
  _QWORD v15[5];
  id v16;

  if (qword_1EE65F7E0 != -1)
    dispatch_once(&qword_1EE65F7E0, &unk_1E471C370);
  v2 = (const void *)off_1EE65F7D8();
  v3 = objc_alloc_init(MEMORY[0x1E0C99D38]);
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3032000000;
  v15[3] = sub_1A200AF14;
  v15[4] = sub_1A200ACFC;
  v16 = 0;
  v4 = MEMORY[0x1E0C809B0];
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A2158570;
  block[3] = &unk_1E4723498;
  v12 = v15;
  v13 = v2;
  v5 = v3;
  v11 = v5;
  v14 = *(_DWORD *)(a1 + 48);
  dispatch_sync(MEMORY[0x1E0C80D38], block);
  v7[0] = v4;
  v7[1] = 3221225472;
  v7[2] = sub_1A21585B8;
  v7[3] = &unk_1E47234C0;
  v9 = v15;
  v6 = *(NSObject **)(a1 + 32);
  v8 = *(id *)(a1 + 40);
  dispatch_async(v6, v7);
  if (v2)
    CFRelease(v2);

  _Block_object_dispose(v15, 8);
}

void sub_1A215852C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A2158544()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyLastReceivedMessage", CFSTR("IMDPersistence"));
  off_1EE65F7D8 = result;
  return result;
}

void sub_1A2158570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  _IMSPIMessageFromRecord(*(_QWORD *)(a1 + 48), 1, 0, *(void **)(a1 + 32), *(dispatch_qos_class_t *)(a1 + 56));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1A21585B8(uint64_t a1)
{
  id v2;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:");
  else
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

uint64_t IMSPIUnreadMessageCount(void *a1, void *a2)
{
  return IMSPIUnreadMessageCountWithQOS(QOS_CLASS_DEFAULT, a2, a1);
}

uint64_t IMSPIUnreadMessageCountWithQOS(dispatch_qos_class_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _QWORD v14[4];
  id v15;
  id v16;
  uint8_t buf[16];

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
    v8 = v6 == 0;
  else
    v8 = 1;
  v9 = !v8;
  if (v8)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Empty queue or callback block provided to IMSPIUnreadMessageCount", buf, 2u);
      }

    }
  }
  else
  {
    v10 = (void *)objc_msgSend(v6, "copy");

    sub_1A2153D6C(a1);
    v11 = objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = sub_1A2158780;
    v14[3] = &unk_1E47231E0;
    v15 = v5;
    v7 = v10;
    v16 = v7;
    dispatch_async(v11, v14);

  }
  return v9;
}

void sub_1A2158780(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  _QWORD v4[4];
  id v5;
  uint64_t v6;

  if (qword_1EE65F7F0 != -1)
    dispatch_once(&qword_1EE65F7F0, &unk_1E4723508);
  v2 = off_1EE65F7E8();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = sub_1A215885C;
  v4[3] = &unk_1E4723230;
  v3 = *(NSObject **)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  v6 = v2;
  dispatch_async(v3, v4);

}

void *sub_1A2158830()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCountAllUnreadMessages", CFSTR("IMDPersistence"));
  off_1EE65F7E8 = result;
  return result;
}

uint64_t sub_1A215885C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t IMSPIShareSheetCanSendMedia(int a1, int a2, int a3)
{
  void *v6;
  int v7;
  _BOOL4 v8;
  _BOOL4 v9;
  uint64_t result;
  float v11;

  objc_msgSend(MEMORY[0x1E0D20C30], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "iMessageSupported");

  v8 = +[IMServiceImpl iMessageEnabledForSenderLastAddressedHandle:simID:](IMServiceImpl, "iMessageEnabledForSenderLastAddressedHandle:simID:", 0, 0);
  v9 = +[IMServiceImpl mmsEnabledforPhoneNumber:simID:](IMServiceImpl, "mmsEnabledforPhoneNumber:simID:", 0, 0);
  if (!v9 && !v7)
    return 0;
  result = 1;
  if ((v7 & v8 & 1) == 0 && v9)
  {
    if (a2 + a1 + a3 <= (int)objc_msgSend(MEMORY[0x1E0D39730], "IMMMSMaximumSlideCountForPhoneNumber:simID:", 0, 0)
      && (a2 < 1 || a3 <= 0))
    {
      v11 = (double)(int)objc_msgSend(MEMORY[0x1E0D39730], "IMMMSMaximumSlideCountForPhoneNumber:simID:", 0, 0)
          * 0.95
          / 10240.0;
      if ((int)fmaxf(floorf(v11), 1.0) >= a1)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t IMSPILastFailedMessageDate(void *a1, void *a2)
{
  return IMSPILastFailedMessageDateWithQOS(QOS_CLASS_DEFAULT, a2, a1);
}

uint64_t IMSPILastFailedMessageDateWithQOS(dispatch_qos_class_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _QWORD v14[4];
  id v15;
  id v16;
  uint8_t buf[16];

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
    v8 = v6 == 0;
  else
    v8 = 1;
  v9 = !v8;
  if (v8)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Empty queue or callback block provided to IMSPILastFailedMessageDate", buf, 2u);
      }

    }
  }
  else
  {
    v10 = (void *)objc_msgSend(v6, "copy");

    sub_1A2153D6C(a1);
    v11 = objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = sub_1A2158AF0;
    v14[3] = &unk_1E47231E0;
    v15 = v5;
    v7 = v10;
    v16 = v7;
    dispatch_async(v11, v14);

  }
  return v9;
}

void sub_1A2158AF0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  _QWORD v4[4];
  id v5;
  uint64_t v6;

  if (qword_1EE65F800 != -1)
    dispatch_once(&qword_1EE65F800, &unk_1E4723528);
  v2 = off_1EE65F7F8();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = sub_1A2158BCC;
  v4[3] = &unk_1E4723230;
  v3 = *(NSObject **)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  v6 = v2;
  dispatch_async(v3, v4);

}

void *sub_1A2158BA0()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordLastFailedMessageDate", CFSTR("IMDPersistence"));
  off_1EE65F7F8 = result;
  return result;
}

uint64_t sub_1A2158BCC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id IMSPISetChatContextForSubscriptionIdentifier(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  int v18;
  NSObject *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  NSObject *v32;
  id v33;
  NSObject *v34;
  void *v35;
  id v37;
  void *v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint8_t buf[4];
  id v45;
  __int16 v46;
  void *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  _BYTE v52[128];
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v37 = a1;
  v7 = a2;
  v39 = a3;
  v8 = a4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v45 = v8;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Trying to set chat context for subscription identifier %@", buf, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array", v37);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v42 = 0u;
  v43 = 0u;
  v40 = 0u;
  v41 = 0u;
  v11 = v7;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v40, v52, 16);
  if (v12)
  {
    v13 = *(_QWORD *)v41;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v41 != v13)
          objc_enumerationMutation(v11);
        v15 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * i);
        if (objc_msgSend(v15, "length"))
        {
          objc_msgSend(v10, "addObject:", v15);
        }
        else if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v16 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "Sending destinations contain empty string", buf, 2u);
          }

        }
      }
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v40, v52, 16);
    }
    while (v12);
  }

  v17 = objc_msgSend(v10, "count") == 0;
  v18 = IMOSLoggingEnabled();
  if (v17)
  {
    if (v18)
    {
      OSLogHandleForIMFoundationCategory();
      v30 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v45 = v11;
        _os_log_impl(&dword_1A1FF4000, v30, OS_LOG_TYPE_INFO, "Invalid destination specified to send to: %@", buf, 0xCu);
      }

    }
    v31 = 0;
  }
  else
  {
    if (v18)
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }

    }
    sub_1A20AB4CC();
    sub_1A2159298(v38, v10, v39, 0, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = v20;
    if (v20)
    {
      objc_msgSend(v20, "lastAddressedSIMID");
      v22 = (id)objc_claimAutoreleasedReturnValue();
      if (v22 == v8)
      {
        v31 = 0;
        v33 = v8;
      }
      else
      {
        if (IMSharedHelperDeviceHasMultipleSubscriptions() && objc_msgSend(v8, "length"))
        {
          objc_msgSend(MEMORY[0x1E0D39738], "sharedInstance");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v23, "ctSubscriptionInfo");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "__im_subscriptionContextForForSimID:", v8);
          v25 = (void *)objc_claimAutoreleasedReturnValue();

          if (v25)
          {
            objc_msgSend(v25, "phoneNumber");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v25, "labelID");
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v28 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
              {
                objc_msgSend(v21, "guid");
                v29 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138413058;
                v45 = v25;
                v46 = 2112;
                v47 = v26;
                v48 = 2112;
                v49 = v27;
                v50 = 2112;
                v51 = v29;
                _os_log_impl(&dword_1A1FF4000, v28, OS_LOG_TYPE_INFO, "Found subscription %@ and setting phoneNumber %@ and simID %@ for chat %@", buf, 0x2Au);

              }
            }
            objc_msgSend(v21, "setLastAddressedHandleID:", v26);
            objc_msgSend(v21, "setLastAddressedSIMID:", v27);

          }
          else if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v34 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(v21, "guid");
              v35 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v45 = v8;
              v46 = 2112;
              v47 = v35;
              _os_log_impl(&dword_1A1FF4000, v34, OS_LOG_TYPE_INFO, "No subscription found with new simID %@, not changing last addressed IDs of chat %@.", buf, 0x16u);

            }
          }

        }
        objc_msgSend(v21, "refreshServiceForSending");
        v33 = v22;
        v31 = v33;
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v45 = v10;
          _os_log_impl(&dword_1A1FF4000, v32, OS_LOG_TYPE_INFO, "Cannot get chat for destinations: %@", buf, 0xCu);
        }

      }
      sub_1A20AB554();
      v33 = 0;
      v31 = 0;
    }

  }
  return v31;
}

void sub_1A2159214(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2159198);
  }
  _Unwind_Resume(a1);
}

__CFString *sub_1A2159298(void *a1, void *a2, void *a3, void *a4, int a5)
{
  __CFString *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  id v15;
  __CFString *v16;
  __CFString *v17;
  void *v18;
  _BOOL4 v19;
  NSObject *v20;
  __CFString *v21;
  int v22;
  int v23;
  __CFString *v24;
  int v25;
  void *v26;
  NSObject *v27;
  const __CFString *v28;
  const __CFString *v29;
  NSObject *v30;
  int v31;
  NSObject *v32;
  __CFString *v33;
  __CFString *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  __CFString *v38;
  void *v39;
  NSObject *v40;
  void *v41;
  void *v42;
  char v43;
  NSObject *v44;
  NSObject *v45;
  NSObject *v46;
  NSObject *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  __CFString *v52;
  __CFString *v53;
  __CFString *v54;
  NSObject *v55;
  void *v56;
  NSObject *v57;
  __CFString *v58;
  id v61;
  void *v62;
  __CFString *v63;
  __CFString *v64;
  void *v65;
  id v66;
  id v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint8_t buf[4];
  __CFString *v73;
  __int16 v74;
  const __CFString *v75;
  __int16 v76;
  const __CFString *v77;
  __int16 v78;
  void *v79;
  _BYTE v80[128];
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v67 = a2;
  v66 = a3;
  v63 = v8;
  v64 = a4;
  if (v8)
  {
    +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", v8);
    v9 = 0;
    v10 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    +[IMServiceImpl operationalServicesWithCapability:](IMServiceImpl, "operationalServicesWithCapability:", 1024);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    +[IMService smsService](IMServiceImpl, "smsService");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v11, "containsObject:", v12);

    if (v13)
      +[IMService smsService](IMServiceImpl, "smsService");
    else
      objc_msgSend(v11, "firstObject");
    v9 = objc_claimAutoreleasedReturnValue();

    v10 = 0;
  }
  if (v10)
    v14 = (void *)v10;
  else
    v14 = (void *)v9;
  v15 = v14;
  v62 = (void *)v9;
  v65 = (void *)v10;
  if (v15)
  {
    v61 = v15;
    IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v67, 1, v15);
    v16 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v17 = v16;
    if (v10)
    {
      -[__CFString service](v16, "service");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = v18 != (void *)v10;

    }
    else
    {
      v19 = 0;
    }
    v22 = -[__CFString _isUsableForSending](v17, "_isUsableForSending");
    v23 = v22;
    if (v19 || !v22)
    {
      v25 = IMOSLoggingEnabled();
      v26 = v61;
      if (v25)
      {
        OSLogHandleForIMFoundationCategory();
        v27 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
        {
          v28 = CFSTR("NO");
          if (v19)
            v29 = CFSTR("YES");
          else
            v29 = CFSTR("NO");
          *(_DWORD *)buf = 138412802;
          v73 = v17;
          v74 = 2112;
          v75 = v29;
          if (!v23)
            v28 = CFSTR("YES");
          v76 = 2112;
          v77 = v28;
          _os_log_impl(&dword_1A1FF4000, v27, OS_LOG_TYPE_INFO, "Account: %@  is not usable for sending, finding a better one... different from asking: %@, account cannot send: %@", buf, 0x20u);
        }

        v26 = v61;
      }
      IMPreferredAccountForService(v26);
      v24 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v73 = v24;
          _os_log_impl(&dword_1A1FF4000, v30, OS_LOG_TYPE_INFO, "   => Found: %@", buf, 0xCu);
        }

      }
    }
    else
    {
      v24 = v17;
    }
    v31 = IMOSLoggingEnabled();
    if (!v24)
    {
      if (v31)
      {
        OSLogHandleForIMFoundationCategory();
        v46 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v73 = v8;
          _os_log_impl(&dword_1A1FF4000, v46, OS_LOG_TYPE_INFO, "No account found matching service: %@", buf, 0xCu);
        }

      }
      v21 = 0;
      goto LABEL_98;
    }
    if (v31)
    {
      OSLogHandleForIMFoundationCategory();
      v32 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v73 = v24;
        _os_log_impl(&dword_1A1FF4000, v32, OS_LOG_TYPE_INFO, "Using account: %@", buf, 0xCu);
      }

    }
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v33 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v70 = 0u;
    v71 = 0u;
    v68 = 0u;
    v69 = 0u;
    v34 = (__CFString *)v67;
    v35 = -[__CFString countByEnumeratingWithState:objects:count:](v34, "countByEnumeratingWithState:objects:count:", &v68, v80, 16);
    if (v35)
    {
      v36 = *(_QWORD *)v69;
      do
      {
        for (i = 0; i != v35; ++i)
        {
          if (*(_QWORD *)v69 != v36)
            objc_enumerationMutation(v34);
          IMStripFormattingFromAddress();
          v38 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if (v38)
          {
            -[__CFString imHandleWithID:alreadyCanonical:](v24, "imHandleWithID:alreadyCanonical:", v38, 0);
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            if (v39)
            {
              -[__CFString addObject:](v33, "addObject:", v39);
            }
            else if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v40 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v73 = v38;
                _os_log_impl(&dword_1A1FF4000, v40, OS_LOG_TYPE_INFO, "account doesn't have a handle for raw address %@", buf, 0xCu);
              }

            }
          }

        }
        v35 = -[__CFString countByEnumeratingWithState:objects:count:](v34, "countByEnumeratingWithState:objects:count:", &v68, v80, 16);
      }
      while (v35);
    }

    if (!-[__CFString count](v33, "count"))
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v47 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          v73 = v34;
          v74 = 2112;
          v75 = v24;
          _os_log_impl(&dword_1A1FF4000, v47, OS_LOG_TYPE_INFO, "Could not get handle for %@ on account: %@", buf, 0x16u);
        }

      }
      v21 = 0;
      goto LABEL_97;
    }
    if (v66)
    {
      +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "existingChatWithGUID:", v66);
      v21 = (__CFString *)objc_claimAutoreleasedReturnValue();

      -[__CFString participants](v21, "participants");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = objc_msgSend(v42, "equivalentToRecipients:", v33);

      if ((v43 & 1) != 0)
      {
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v44 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v73 = v21;
            _os_log_impl(&dword_1A1FF4000, v44, OS_LOG_TYPE_INFO, "Had originally found a chat: %@", buf, 0xCu);
          }

        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v45 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v73 = v33;
            _os_log_impl(&dword_1A1FF4000, v45, OS_LOG_TYPE_INFO, "But it's handles were not equivalent: %@", buf, 0xCu);
          }

        }
        if (v21)
          goto LABEL_83;
      }
      else
      {

      }
    }
    +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    v49 = v48;
    if (a5)
      objc_msgSend(v48, "chatWithHandles:", v33);
    else
      objc_msgSend(v48, "existingChatWithHandles:allowAlternativeService:", v33, 0);
    v21 = (__CFString *)objc_claimAutoreleasedReturnValue();

    if (!v21)
    {
LABEL_97:

LABEL_98:
      v15 = v61;
      goto LABEL_99;
    }
LABEL_83:
    if (IMSharedHelperDeviceHasMultipleSubscriptions() && -[__CFString length](v64, "length"))
    {
      objc_msgSend(MEMORY[0x1E0D39738], "sharedInstance");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v50, "ctSubscriptionInfo");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "__im_subscriptionContextForForSimID:", v64);
      v52 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (v52)
      {
        -[__CFString phoneNumber](v52, "phoneNumber");
        v53 = (__CFString *)objc_claimAutoreleasedReturnValue();
        -[__CFString labelID](v52, "labelID");
        v54 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v55 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO))
          {
            -[__CFString guid](v21, "guid");
            v56 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138413058;
            v73 = v52;
            v74 = 2112;
            v75 = v53;
            v76 = 2112;
            v77 = v54;
            v78 = 2112;
            v79 = v56;
            _os_log_impl(&dword_1A1FF4000, v55, OS_LOG_TYPE_INFO, "Found subscription %@ and setting phoneNumber %@ and simID %@ for chat %@", buf, 0x2Au);

          }
        }
        -[__CFString setLastAddressedHandleID:](v21, "setLastAddressedHandleID:", v53);
        -[__CFString setLastAddressedSIMID:](v21, "setLastAddressedSIMID:", v54);

      }
      else if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v57 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v57, OS_LOG_TYPE_INFO))
        {
          -[__CFString guid](v21, "guid");
          v58 = (__CFString *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v73 = v64;
          v74 = 2112;
          v75 = v58;
          _os_log_impl(&dword_1A1FF4000, v57, OS_LOG_TYPE_INFO, "No subscription found with new simID %@, not changing last addressed IDs of chat %@.", buf, 0x16u);

        }
      }

    }
    -[__CFString join](v21, "join");
    goto LABEL_97;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "No operational service to use", buf, 2u);
    }

  }
  v21 = 0;
LABEL_99:

  return v21;
}

void sub_1A2159BC4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2159B38);
  }
  _Unwind_Resume(a1);
}

uint64_t IMSPISendMessageWithAttachmentsToMany(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return sub_1A2159CD4(a1, a2, a3, a4, 0, 0, 0, a5, 0, 0, 0, 0, 0);
}

uint64_t sub_1A2159CD4(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13)
{
  id v20;
  id v21;
  NSObject *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  _QWORD block[4];
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint8_t v64[128];
  uint8_t buf[4];
  id v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v20 = a1;
  v21 = a2;
  v34 = a3;
  v45 = a4;
  v36 = a5;
  v37 = a6;
  v38 = a7;
  v42 = a8;
  v39 = a9;
  v43 = a10;
  v44 = a11;
  v40 = a12;
  v41 = a13;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v66 = v44;
      _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Trying to send message with attachments for subscription identifier %@", buf, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array", v34);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v62 = 0u;
  v63 = 0u;
  v60 = 0u;
  v61 = 0u;
  v24 = v21;
  v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v60, v64, 16);
  if (v25)
  {
    v26 = *(_QWORD *)v61;
    do
    {
      for (i = 0; i != v25; ++i)
      {
        if (*(_QWORD *)v61 != v26)
          objc_enumerationMutation(v24);
        v28 = *(void **)(*((_QWORD *)&v60 + 1) + 8 * i);
        if (objc_msgSend(v28, "length"))
        {
          objc_msgSend(v23, "addObject:", v28);
        }
        else if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v29 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1A1FF4000, v29, OS_LOG_TYPE_INFO, "Sending destinations contain empty string", buf, 2u);
          }

        }
      }
      v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v60, v64, 16);
    }
    while (v25);
  }

  if (!objc_msgSend(v23, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v66 = v24;
        _os_log_impl(&dword_1A1FF4000, v31, OS_LOG_TYPE_INFO, "Invalid destination specified to send to: %@", buf, 0xCu);
      }
      goto LABEL_30;
    }
LABEL_31:
    v30 = 0;
    goto LABEL_32;
  }
  if (!objc_msgSend(v45, "length"))
  {
    v32 = objc_msgSend(v42, "count");
    if (!v43 && !v32)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v31 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v31, OS_LOG_TYPE_INFO, "Empty message specified to send with no attachments or payloadData, ignoring", buf, 2u);
        }
LABEL_30:

        goto LABEL_31;
      }
      goto LABEL_31;
    }
  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A2165A00;
  block[3] = &unk_1E4723B18;
  v47 = v42;
  v48 = v43;
  v49 = v20;
  v50 = v23;
  v51 = v35;
  v52 = v44;
  v53 = v45;
  v54 = v36;
  v55 = v37;
  v56 = v38;
  v57 = v39;
  v58 = v40;
  v59 = v41;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  v30 = 1;
LABEL_32:

  return v30;
}

uint64_t IMSPISendMessageWithAttachmentsToManyWithCB(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  return sub_1A2159CD4(a1, a2, a3, a4, 0, 0, 0, a5, 0, 0, 0, 0, a6);
}

uint64_t IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = *MEMORY[0x1E0C80C00];
  v21[0] = a2;
  v11 = (void *)MEMORY[0x1E0C99D20];
  v12 = a6;
  v13 = a5;
  v14 = a4;
  v15 = a3;
  v16 = a2;
  v17 = a1;
  objc_msgSend(v11, "arrayWithObjects:count:", v21, 1);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  v19 = sub_1A2159CD4(v17, v18, 0, v15, 0, 0, 0, v14, 0, 0, v13, 0, v12);
  return v19;
}

uint64_t IMSPISendMessageWithAttachments(void *a1, void *a2, void *a3, void *a4)
{
  return IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(a1, a2, a3, a4, 0, 0);
}

uint64_t IMSPISendMessageWithAttachmentsReturningGUID(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(a1, a2, a3, a4, 0, a5);
}

uint64_t IMSPISendMessageWithAttachmentsFromSubscriptionIdentifier(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(a1, a2, a3, a4, a5, 0);
}

uint64_t IMSPISendRichLink(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  uint8_t v15[16];
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (v7)
  {
    v16[0] = v7;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = IMSPISendRichLinkToMany(v11, 0, v8, v9, v10);

  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Destination cannot be nil.", v15, 2u);
      }

    }
    v12 = 0;
  }

  return v12;
}

uint64_t IMSPISendRichLinkToMany(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  uint8_t buf[4];
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5;
  if (v11 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Sending rich link", buf, 2u);
      }

    }
    IMSharedHelperCombinedPluginPayloadDictionaryData();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "absoluteString");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = sub_1A2159CD4(CFSTR("iMessage"), v9, v10, v16, 0, 0, 0, 0, (void *)*MEMORY[0x1E0D375F8], v15, 0, 0, 0);

  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v21 = v11;
        _os_log_impl(&dword_1A1FF4000, v18, OS_LOG_TYPE_INFO, "IMCoreSPI: url is not an NSURL %@", buf, 0xCu);
      }

    }
    v17 = 0;
  }

  return v17;
}

void IMSPICancelScheduledMessageWithGUID(void *a1)
{
  id v1;
  uint64_t v2;
  int v3;
  NSObject *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_msgSend(v1, "length");
  v3 = IMOSLoggingEnabled();
  if (v2)
  {
    if (v3)
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        LOWORD(v8) = 0;
        _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v8, 2u);
      }

    }
    sub_1A20AB4CC();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v8 = 138412290;
        v9 = v1;
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Cancel scheduled message with GUID: %@", (uint8_t *)&v8, 0xCu);
      }

    }
    +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cancelScheduledMessageWithGUID:", v1);

  }
  else if (v3)
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      LOWORD(v8) = 0;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Empty message GUID passed in.", (uint8_t *)&v8, 2u);
    }

  }
}

uint64_t IMSPICancelScheduledMessageWithGUIDAndDestination(void *a1, void *a2)
{
  id v3;
  id v4;
  int v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  int v12;
  id v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v3, "length"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Empty message GUID passed in.", (uint8_t *)&v12, 2u);
      }
      goto LABEL_19;
    }
LABEL_20:
    v9 = 0;
    goto LABEL_21;
  }
  v5 = IMOSLoggingEnabled();
  if (!v4)
  {
    if (v5)
    {
      OSLogHandleForIMFoundationCategory();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Empty destination passed in.", (uint8_t *)&v12, 2u);
      }
LABEL_19:

      goto LABEL_20;
    }
    goto LABEL_20;
  }
  if (v5)
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v12, 2u);
    }

  }
  sub_1A20AB4CC();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v12 = 138412546;
      v13 = v3;
      v14 = 2112;
      v15 = v4;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Cancel scheduled message with GUID: %@, destination: %@", (uint8_t *)&v12, 0x16u);
    }

  }
  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "cancelScheduledMessageWithGUID:destination:", v3, v4);

  v9 = 1;
LABEL_21:

  return v9;
}

uint64_t IMSPICancelScheduledMessageWithGUIDAndDestinations(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  int v11;
  id v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v3, "length"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        LOWORD(v11) = 0;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Empty message GUID passed in.", (uint8_t *)&v11, 2u);
      }
      goto LABEL_20;
    }
LABEL_21:
    v8 = 0;
    goto LABEL_22;
  }
  if (!v4 || !objc_msgSend(v4, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        LOWORD(v11) = 0;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Empty destinations passed in.", (uint8_t *)&v11, 2u);
      }
LABEL_20:

      goto LABEL_21;
    }
    goto LABEL_21;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      LOWORD(v11) = 0;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v11, 2u);
    }

  }
  sub_1A20AB4CC();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v11 = 138412546;
      v12 = v3;
      v13 = 2112;
      v14 = v4;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Cancel scheduled message with GUID: %@, destinations: %@", (uint8_t *)&v11, 0x16u);
    }

  }
  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "cancelScheduledMessageWithGUID:destinations:cancelType:", v3, v4, 0);

  v8 = 1;
LABEL_22:

  return v8;
}

uint64_t IMSPIScheduleSendMSMessagePayloadReturningGUID(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7)
{
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v13 = (void *)*MEMORY[0x1E0D375D0];
  v14 = a7;
  v15 = a6;
  v16 = a5;
  v17 = a4;
  v18 = a2;
  v19 = a1;
  objc_msgSend(v13, "stringByAppendingFormat:", CFSTR(":0000000000:%@"), a3);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A215AF38(v19);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = sub_1A2159CD4(CFSTR("iMessage"), v18, v17, 0, v21, 0, 0, v15, v20, v19, 0, v16, v14);

  return v22;
}

id sub_1A215AF38(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v13;
  id v14;
  _QWORD v15[2];
  _QWORD v16[2];
  uint8_t buf[4];
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1)
  {
    IMExtensionPayloadUnarchivingClasses();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      v14 = 0;
      objc_msgSend(MEMORY[0x1E0CB3710], "_strictlyUnarchivedObjectOfClasses:fromData:error:", v2, v1, &v14);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v4 = v14;
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v5 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v18 = v4;
          _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Finished _strictlyUnarchivedObjectOfClasses for payloadData. Error: [%@]", buf, 0xCu);
        }

      }
    }
    else
    {
      v13 = 0;
      objc_msgSend(MEMORY[0x1E0CB3710], "unarchivedObjectOfClasses:fromData:error:", v2, v1, &v13);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v4 = v13;
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v7 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v18 = v4;
          _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Finished unarchivedObjectOfClasses for payloadData. Error: [%@]", buf, 0xCu);
        }

      }
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v3, "objectForKey:", *MEMORY[0x1E0D37E50]);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (v8 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        v9 = *MEMORY[0x1E0D36328];
        v15[0] = *MEMORY[0x1E0D36320];
        v15[1] = v9;
        v16[0] = v8;
        v16[1] = &unk_1E475ED90;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 2);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_alloc(MEMORY[0x1E0CB3498]);
        v6 = (void *)objc_msgSend(v11, "initWithString:attributes:", *MEMORY[0x1E0D36318], v10);

      }
      else
      {
        v6 = 0;
      }

    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

uint64_t IMSPIScheduleSendMSMessagePayloadWithSummaryTextReturningGUID(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v15 = (void *)*MEMORY[0x1E0D375D0];
  v16 = a8;
  v17 = a7;
  v18 = a6;
  v19 = a5;
  v20 = a4;
  v21 = a2;
  v22 = a1;
  objc_msgSend(v15, "stringByAppendingFormat:", CFSTR(":0000000000:%@"), a3);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A215AF38(v22);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = sub_1A2159CD4(CFSTR("iMessage"), v21, v20, 0, v24, 0, v18, v17, v23, v22, 0, v19, v16);

  return v25;
}

uint64_t IMSPIScheduleSendMSMessagePayloadWithSummaryTextAndGUID(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD v28[4];
  id v29;

  v15 = a6;
  v16 = (void *)*MEMORY[0x1E0D375D0];
  v17 = a8;
  v18 = a7;
  v19 = a5;
  v20 = a4;
  v21 = a2;
  v22 = a1;
  objc_msgSend(v16, "stringByAppendingFormat:", CFSTR(":0000000000:%@"), a3);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A215AF38(v22);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = MEMORY[0x1E0C809B0];
  v28[1] = 3221225472;
  v28[2] = sub_1A215B494;
  v28[3] = &unk_1E4720F70;
  v29 = v15;
  v25 = v15;
  v26 = sub_1A2159CD4(CFSTR("iMessage"), v21, v20, 0, v24, v25, v18, v17, v23, v22, 0, v19, v28);

  return v26;
}

void sub_1A215B494(uint64_t a1, void *a2)
{
  id v3;
  char v4;
  int v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  int v9;
  id v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));
  v5 = IMOSLoggingEnabled();
  if ((v4 & 1) != 0)
  {
    if (v5)
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        v7 = *(void **)(a1 + 32);
        v9 = 138412290;
        v10 = v7;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Returned GUID matches %@.", (uint8_t *)&v9, 0xCu);
      }
LABEL_9:

    }
  }
  else if (v5)
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = 138412546;
      v10 = v3;
      v11 = 2112;
      v12 = v8;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "IMCoreSPI: Returned GUID (%@) does not match requested GUID (%@).", (uint8_t *)&v9, 0x16u);
    }
    goto LABEL_9;
  }

}

uint64_t IMSPISendMSMessagePayload(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  int v15;
  NSObject *v16;
  uint64_t v17;
  uint8_t v19[16];

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v14, "isWaldoEnabled") & 1) != 0)
  {

LABEL_9:
    v17 = IMSPISendMSMessagePayloadReturningGUID(v9, v10, v11, v12, 0, v13, 0);
    goto LABEL_10;
  }
  v15 = objc_msgSend(v11, "containsString:", *MEMORY[0x1E0D37508]);

  if (!v15)
    goto LABEL_9;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "IMCoreSPI: Waldo is disabled, and client attempted to send a waldo plugin message. Aborting.", v19, 2u);
    }

  }
  v17 = 0;
LABEL_10:

  return v17;
}

uint64_t IMSPISendMSMessagePayloadReturningGUID(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  int v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint8_t buf[16];

  v13 = a1;
  v14 = a2;
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a6;
  v19 = a7;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v20, "isWaldoEnabled") & 1) != 0)
  {

LABEL_9:
    objc_msgSend((id)*MEMORY[0x1E0D375D0], "stringByAppendingFormat:", CFSTR(":0000000000:%@"), v15);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    sub_1A215AF38(v13);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = sub_1A2159CD4(CFSTR("iMessage"), v14, v16, 0, v25, v17, 0, v18, v24, v13, 0, 0, v19);

    goto LABEL_10;
  }
  v21 = objc_msgSend(v15, "containsString:", *MEMORY[0x1E0D37508]);

  if (!v21)
    goto LABEL_9;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "IMCoreSPI: Waldo is disabled, and client attempted to send a waldo plugin message. Aborting.", buf, 2u);
    }

  }
  v23 = 0;
LABEL_10:

  return v23;
}

uint64_t IMSPISendMSMessagePayloadWithSummaryTextReturningGUID(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v14 = (void *)*MEMORY[0x1E0D375D0];
  v15 = a8;
  v16 = a7;
  v17 = a6;
  v18 = a4;
  v19 = a2;
  v20 = a1;
  objc_msgSend(v14, "stringByAppendingFormat:", CFSTR(":0000000000:%@"), a3);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A215AF38(v20);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = sub_1A2159CD4(CFSTR("iMessage"), v19, v18, 0, v22, 0, v17, v16, v21, v20, 0, 0, v15);

  return v23;
}

uint64_t IMSPIReceiveMSMessagePayload(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  void *v15;
  int v16;
  NSObject *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  void *v28;
  NSObject *v29;
  NSObject *v30;
  uint64_t v31;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 block;
  void (*v52)(id *);
  void *v53;
  id v54;
  id v55;
  __CFString *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint8_t buf[4];
  uint64_t v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v39 = a1;
  v40 = a2;
  v41 = a3;
  v42 = a4;
  v46 = a5;
  v43 = a6;
  v44 = a7;
  v45 = a8;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v15, "isWaldoEnabled") & 1) != 0)
  {

    goto LABEL_9;
  }
  v16 = objc_msgSend(v46, "containsString:", *MEMORY[0x1E0D37508]);

  if (!v16)
  {
LABEL_9:
    objc_msgSend((id)*MEMORY[0x1E0D375D0], "stringByAppendingFormat:", CFSTR(":0000000000:%@"), v46);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    sub_1A20AB488();
    v20 = v40;
    v33 = v41;
    v34 = v43;
    v35 = v44;
    v36 = v42;
    v37 = v45;
    v21 = v19;
    v38 = v39;
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v67 = 0;
        _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Trying to send message with attachments for subscription identifier %@", buf, 0xCu);
      }

    }
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v24 = v20;
    v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v47, buf, 16);
    if (v25)
    {
      v26 = *(_QWORD *)v48;
      do
      {
        for (i = 0; i != v25; ++i)
        {
          if (*(_QWORD *)v48 != v26)
            objc_enumerationMutation(v24);
          v28 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * i);
          if (objc_msgSend(v28, "length"))
          {
            objc_msgSend(v23, "addObject:", v28);
          }
          else if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v29 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
            {
              LOWORD(block) = 0;
              _os_log_impl(&dword_1A1FF4000, v29, OS_LOG_TYPE_INFO, "Receive participants contain empty string", (uint8_t *)&block, 2u);
            }

          }
        }
        v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v47, buf, 16);
      }
      while (v25);
    }

    if (objc_msgSend(v23, "count"))
    {
      if (objc_msgSend(0, "length") || (v31 = objc_msgSend(v37, "count"), v38) || v31)
      {
        *(_QWORD *)&block = MEMORY[0x1E0C809B0];
        *((_QWORD *)&block + 1) = 3221225472;
        v52 = sub_1A2166814;
        v53 = &unk_1E4723B68;
        v54 = v37;
        v55 = v38;
        v56 = CFSTR("iMessage");
        v57 = v23;
        v58 = v34;
        v59 = 0;
        v60 = v33;
        v61 = 0;
        v62 = v35;
        v63 = v36;
        v64 = v21;
        v65 = 0;
        dispatch_async(MEMORY[0x1E0C80D38], &block);

        v18 = 1;
LABEL_40:

        goto LABEL_41;
      }
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
        {
          LOWORD(block) = 0;
          _os_log_impl(&dword_1A1FF4000, v30, OS_LOG_TYPE_INFO, "Empty message specified to receive with no attachments or payloadData, ignoring", (uint8_t *)&block, 2u);
        }
LABEL_38:

      }
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v30 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        LODWORD(block) = 138412290;
        *(_QWORD *)((char *)&block + 4) = v24;
        _os_log_impl(&dword_1A1FF4000, v30, OS_LOG_TYPE_INFO, "Invalid participants specified to receive from: %@", (uint8_t *)&block, 0xCu);
      }
      goto LABEL_38;
    }
    v18 = 0;
    goto LABEL_40;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_INFO, "IMCoreSPI: Waldo is disabled, and client attempted to receive a waldo plugin message. Aborting.", buf, 2u);
    }

  }
  v18 = 0;
LABEL_41:

  return v18;
}

void IMSPICalculateSendingServiceByDestinationsAndChatGUID(void *a1, void *a2, void *a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  void *v20;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  NSObject *v25;
  unsigned int v26;
  char v27;
  id v28;
  id v29;
  _QWORD v30[4];
  id v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];
  uint8_t v42[128];
  uint8_t buf[4];
  id v44;
  __int16 v45;
  id v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v29 = a2;
  v28 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      v44 = v29;
      v45 = 2112;
      v46 = v5;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Get sending service by guid: %@, destinations: %@", buf, 0x16u);
    }

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  v8 = v5;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v37, v42, 16);
  if (v9)
  {
    v10 = *(_QWORD *)v38;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v38 != v10)
          objc_enumerationMutation(v8);
        v12 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * i);
        if (objc_msgSend(v12, "length"))
        {
          objc_msgSend(v7, "addObject:", v12);
        }
        else if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Destinations contain empty string when calculating sending service.", buf, 2u);
          }

        }
      }
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v37, v42, 16);
    }
    while (v9);
  }

  if (objc_msgSend(v7, "count"))
  {
    sub_1A20AB488();
    sub_1A2159298(0, v7, v29, 0, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    sub_1A20AB554();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v44 = v14;
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "IMSPIGetIMChat returns %@", buf, 0xCu);
      }

    }
    objc_msgSend(v7, "__imArrayByApplyingBlock:", &unk_1E471BA40);
    v35 = 0u;
    v36 = 0u;
    v33 = 0u;
    v34 = 0u;
    v16 = (id)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v33, v41, 16);
    if (v17)
    {
      v18 = *(_QWORD *)v34;
      while (2)
      {
        for (j = 0; j != v17; ++j)
        {
          if (*(_QWORD *)v34 != v18)
            objc_enumerationMutation(v16);
          if ((IMStringIsEmail() & 1) != 0)
          {
            v27 = 1;
            goto LABEL_33;
          }
        }
        v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v33, v41, 16);
        if (v17)
          continue;
        break;
      }
    }
    v27 = 0;
LABEL_33:

    v26 = objc_msgSend(v14, "shouldForceServerStatusRefresh");
    objc_msgSend(v14, "lastAddressedHandleID");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "lastAddressedSIMID");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v14, "repliedToChat");
    v23 = objc_msgSend(v14, "forceMMS");
    v24 = objc_msgSend(v14, "isDowngraded");
    v30[0] = MEMORY[0x1E0C809B0];
    v30[1] = 3221225472;
    v30[2] = sub_1A215C5CC;
    v30[3] = &unk_1E4723550;
    v32 = v28;
    v31 = v8;
    IMChatCalculateServiceForSendingNewComposeMaybeForce(v16, v14, v20, v21, v23, v27, v26, v24, v22, 0, v30);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v44 = v8;
      _os_log_impl(&dword_1A1FF4000, v25, OS_LOG_TYPE_INFO, "Invalid destination when calculating sending service: %@", buf, 0xCu);
    }

  }
}

uint64_t sub_1A215C5C4()
{
  return IMChatCanonicalIDSIDsForAddress();
}

void sub_1A215C5CC(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v4;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
  {
    objc_msgSend(a2, "name");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, _QWORD))(v2 + 16))(v2, v4, *(_QWORD *)(a1 + 32));

  }
}

BOOL IMSPISendMessageWithAttachmentObjectsSynchronously(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return sub_1A215C63C(a1, a2, a3, a4, a5, 0, 0);
}

BOOL sub_1A215C63C(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  uint64_t v25;
  _BOOL8 v26;
  NSObject *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint8_t buf[4];
  id v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v33 = a1;
  v13 = a2;
  v34 = a3;
  v35 = a4;
  v36 = a5;
  v32 = a6;
  v14 = a7;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  v16 = v13;
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v37, v43, 16);
  if (v17)
  {
    v18 = *(_QWORD *)v38;
    do
    {
      for (i = 0; i != v17; ++i)
      {
        if (*(_QWORD *)v38 != v18)
          objc_enumerationMutation(v16);
        v20 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * i);
        if (objc_msgSend(v20, "length"))
        {
          objc_msgSend(v15, "addObject:", v20);
        }
        else if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v21 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Sending destinations contain empty string", buf, 2u);
          }

        }
      }
      v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v37, v43, 16);
    }
    while (v17);
  }

  if (!objc_msgSend(v15, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v42 = v16;
        _os_log_impl(&dword_1A1FF4000, v24, OS_LOG_TYPE_INFO, "Invalid destination specified to send to: %@", buf, 0xCu);
      }
      goto LABEL_33;
    }
LABEL_34:
    v26 = 0;
    goto LABEL_48;
  }
  if (!objc_msgSend(v35, "length"))
  {
    v25 = objc_msgSend(v36, "count");
    if (!v14 && !v25)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A1FF4000, v24, OS_LOG_TYPE_INFO, "Empty message specified to send with no attachments or payloadData, ignoring", buf, 2u);
        }
LABEL_33:

        goto LABEL_34;
      }
      goto LABEL_34;
    }
  }
  v22 = objc_msgSend(v36, "count");
  if (v14 || v22 || IMIsRunningInGameCenter())
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "Have non-zero attachments to send, ensuring we have transfer capability", buf, 2u);
      }

    }
    sub_1A20AB510();
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v27, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }

    }
    sub_1A20AB4CC();
  }
  sub_1A2159298(v33, v15, v34, 0, 1);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = v28;
  if (v28)
  {
    v26 = sub_1A2165E60(v28, v35, 0, 0, 0, v36, v32, v14, 0, 0);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v30 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v30, OS_LOG_TYPE_INFO, "Cannot send message without chat", buf, 2u);
      }

    }
    v26 = 0;
  }
  sub_1A20AB554();

LABEL_48:
  return v26;
}

BOOL IMSPISendMessageWithAttachmentsSynchronously(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _BOOL8 v14;

  v9 = a4;
  v10 = a3;
  v11 = a2;
  v12 = a1;
  sub_1A215CBB8(a5);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = sub_1A215C63C(v12, v11, v10, v9, v13, 0, 0);

  return v14;
}

id sub_1A215CBB8(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = a1;
  v2 = (void *)objc_opt_new();
  v3 = v2;
  if (v1)
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = sub_1A21673B4;
    v7[3] = &unk_1E4721E08;
    v4 = v2;
    v8 = v4;
    objc_msgSend(v1, "enumerateObjectsUsingBlock:", v7);

    objc_msgSend(v4, "count");
  }
  else if (!objc_msgSend(v2, "count"))
  {
    v5 = 0;
    goto LABEL_5;
  }
  v5 = (void *)objc_msgSend(v3, "copy");
LABEL_5:

  return v5;
}

BOOL IMSPISendRichLinkSynchronously(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  _BOOL8 v19;
  NSObject *v20;
  int v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a6;
  if (v14 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    IMSharedHelperCombinedPluginPayloadDictionaryData();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "absoluteString");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = sub_1A215C63C(v11, v12, v13, v18, 0, (void *)*MEMORY[0x1E0D375F8], v17);

  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        v22 = 138412290;
        v23 = v14;
        _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "IMCoreSPI: url is not an NSURL %@", (uint8_t *)&v22, 0xCu);
      }

    }
    v19 = 0;
  }

  return v19;
}

void IMSPIRemapChatsWithLastAddressedLabelIDToNewLabelID(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  __CFString *v12;
  NSObject *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  int v17;
  id v18;
  __int16 v19;
  id v20;
  __int16 v21;
  __CFString *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "length") && objc_msgSend(v4, "length"))
  {
    if ((IMSharedHelperDeviceHasMultipleSubscriptions() & 1) != 0 || IMIsRunningInDebugMode())
    {
      objc_msgSend(MEMORY[0x1E0D39738], "sharedInstance");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "ctSubscriptionInfo");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "__im_subscriptionContextForForSimID:", v4);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v7, "labelID");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v8, "length"))
      {

LABEL_12:
        objc_msgSend(v7, "phoneNumber");
        v12 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
          {
            v17 = 138412290;
            v18 = v7;
            _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Found subscription to remap chats with: %@", (uint8_t *)&v17, 0xCu);
          }

        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v14 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            v17 = 138412802;
            v18 = v3;
            v19 = 2112;
            v20 = v4;
            v21 = 2112;
            v22 = v12;
            _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Remapping chats with old labelID %@ to new labelID %@ and new phone number %@.", (uint8_t *)&v17, 0x20u);
          }

        }
        IMDChatRemapChatsWithLastAddressedSIMIDToNewLastAddressedIDs();
LABEL_31:

        goto LABEL_32;
      }
      objc_msgSend(v7, "phoneNumber");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "length");

      if (v11)
        goto LABEL_12;
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          v17 = 138412546;
          v18 = v4;
          v19 = 2112;
          v20 = v7;
          _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "No valid subscription found with new labelID %@, not remapping chats. Subscription %@", (uint8_t *)&v17, 0x16u);
        }

      }
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        LOWORD(v17) = 0;
        _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "Remapping chats' lastAddressedIDs not supported.", (uint8_t *)&v17, 2u);
      }

    }
    v12 = &stru_1E4725068;
    goto LABEL_31;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v17 = 138412546;
      v18 = v3;
      v19 = 2112;
      v20 = v4;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Cannot remap chats because invalid arguments: oldLabelID %@ newLabelID %@", (uint8_t *)&v17, 0x16u);
    }

  }
LABEL_32:

}

id IMSPIGetDisplayNameAndParticipantsForChatWithGUID(void *a1)
{
  IMSPISuggestionsObject *v1;
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  IMSPISuggestionsObject *v7;
  void *v8;
  IMSPISuggestionsObject *v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  IMSPISuggestionsObject *v14;
  uint8_t buf[4];
  IMSPISuggestionsObject *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v16 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Request to get display name and participants for chat GUID: %@", buf, 0xCu);
    }

  }
  v3 = (void *)IMDChatRecordCopyChatForGUID();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "handleRecords");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "__imArrayByApplyingBlock:", &unk_1E471BA60);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = [IMSPISuggestionsObject alloc];
    objc_msgSend(v4, "groupName");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = -[IMSPISuggestionsObject initWithChatGuid:displayName:participants:](v7, "initWithChatGuid:displayName:participants:", v1, v8, v6);

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v16 = v9;
        _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Results for fetching chat group name and participants: %@", buf, 0xCu);
      }

    }
    v14 = v9;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v14, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v16 = v1;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Failed to find chat for guid: %@", buf, 0xCu);
      }

    }
    v11 = 0;
  }

  return v11;
}

IMSPIHandle *sub_1A215D478(uint64_t a1, IMSPIHandle *a2)
{
  return sub_1A2152E38(a2);
}

id IMSPIGetMostRecentContacts(int a1)
{
  NSObject *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BOOL4 v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[5];
  uint8_t v19[128];
  uint8_t buf[8];
  uint8_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = a1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Request to get most recent contacts used by messages: %d", buf, 8u);
    }

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
    }

  }
  sub_1A20AB488();
  *(_QWORD *)buf = 0;
  v21 = buf;
  v22 = 0x3032000000;
  v23 = sub_1A200AF14;
  v24 = sub_1A200ACFC;
  v25 = 0;
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = sub_1A215D7BC;
  v18[3] = &unk_1E4723598;
  v18[4] = buf;
  objc_msgSend(v4, "_loadChatsFilteredUsingPredicate:lastMessageOlderThan:limit:waitForReply:completionHandler:", 0, 0, a1, 1, v18);

  objc_msgSend(*((id *)v21 + 5), "sortUsingComparator:", &unk_1E471DD78);
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v6 = *((id *)v21 + 5);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v15;
LABEL_11:
    v9 = 0;
    while (1)
    {
      if (*(_QWORD *)v15 != v8)
        objc_enumerationMutation(v6);
      sub_1A215D7F8(*(void **)(*((_QWORD *)&v14 + 1) + 8 * v9));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
        objc_msgSend(v5, "addObject:", v10, (_QWORD)v14);
      v11 = objc_msgSend(v5, "count", (_QWORD)v14) < (unint64_t)a1;

      if (!v11)
        break;
      if (v7 == ++v9)
      {
        v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
        if (v7)
          goto LABEL_11;
        break;
      }
    }
  }

  sub_1A20AB554();
  v12 = (void *)objc_msgSend(v5, "copy");

  _Block_object_dispose(buf, 8);
  return v12;
}

void sub_1A215D7BC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_msgSend(a2, "mutableCopy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

uint64_t sub_1A215D7F0(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1E0DE7D20](a2, sel_compareChatByLastFinishedMessageDate_);
}

IMSPISuggestionsObject *sub_1A215D7F8(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  IMSPISuggestionsObject *v20;
  void *v21;
  void *v22;
  IMSPISuggestionsObject *v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)MEMORY[0x1E0C99E20];
  objc_msgSend(v1, "participants");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setWithCapacity:", objc_msgSend(v3, "count"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)MEMORY[0x1E0C99DE8];
  objc_msgSend(v1, "participants");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "arrayWithCapacity:", objc_msgSend(v6, "count"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  objc_msgSend(v1, "participants", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v26 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        objc_msgSend(v13, "ID");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = objc_msgSend(v4, "containsObject:", v14);

        if ((v15 & 1) == 0)
        {
          objc_msgSend(v13, "ID");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "addObject:", v16);

          objc_msgSend(v7, "addObject:", v13);
        }
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v10);
  }

  objc_msgSend(v1, "displayName");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v17;
  if (!v17 || !objc_msgSend(v17, "length"))
  {
    objc_msgSend(v1, "displayNameWithRawAddress:isSpamFilteringEnabled:", 0, objc_msgSend(MEMORY[0x1E0D36110], "isSpamFilteringOn"));
    v19 = objc_claimAutoreleasedReturnValue();

    v18 = (void *)v19;
  }
  if (objc_msgSend(v7, "count"))
  {
    v20 = [IMSPISuggestionsObject alloc];
    objc_msgSend(v1, "guid");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = (void *)objc_msgSend(v7, "copy");
    v23 = -[IMSPISuggestionsObject initWithChatGuid:displayName:participants:](v20, "initWithChatGuid:displayName:participants:", v21, v18, v22);

  }
  else
  {
    v23 = 0;
  }

  return v23;
}

id IMSPIGetContactsByChatGUID(void *a1)
{
  id v1;
  NSObject *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  int v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v11 = 138412290;
      v12 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Request to get contacts used by existing chatGUID: %@", (uint8_t *)&v11, 0xCu);
    }

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      LOWORD(v11) = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v11, 2u);
    }

  }
  sub_1A20AB488();
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "existingChatWithGUID:", v1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = IMOSLoggingEnabled();
  if (v5)
  {
    if (v6)
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v11 = 138412546;
        v12 = v1;
        v13 = 2112;
        v14 = v5;
        _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "For existing chatGUID: %@, found chat: %@", (uint8_t *)&v11, 0x16u);
      }

    }
    sub_1A215D7F8(v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (v6)
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v11 = 138412290;
        v12 = v1;
        _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Did not find existing chat for chatGUID: %@", (uint8_t *)&v11, 0xCu);
      }

    }
    v8 = 0;
  }
  sub_1A20AB554();

  return v8;
}

id IMSPIGetAllChatsContainingParticipantWithHandle(void *a1)
{
  NSObject *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void *v7;
  void *v8;
  unint64_t v9;
  void *v10;
  IMSPISuggestionsObject *v11;
  void *v12;
  void *v13;
  IMSPISuggestionsObject *v14;
  NSObject *v15;
  id v17;
  void *v18;
  id obj;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  id v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v17 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v25 = v17;
      _os_log_impl(&dword_1A1FF4000, v1, OS_LOG_TYPE_INFO, "Request to get all chat guid, display name and all participatns for  %@", buf, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array", v17);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  obj = (id)IMDChatGetChatsThatContainRecipient();
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v21 != v4)
          objc_enumerationMutation(obj);
        v6 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
        objc_msgSend(v6, "valueForKey:", CFSTR("handles"));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v7, "count"))
        {
          v9 = 0;
          do
          {
            sub_1A2152E38((IMSPIHandle *)objc_msgSend(v7, "objectAtIndex:", v9));
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            if (v10)
              objc_msgSend(v8, "addObject:", v10);

            ++v9;
          }
          while (objc_msgSend(v7, "count") > v9);
        }
        v11 = [IMSPISuggestionsObject alloc];
        objc_msgSend(v6, "valueForKey:", CFSTR("chatGUID"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "valueForKey:", CFSTR("displayName"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = -[IMSPISuggestionsObject initWithChatGuid:displayName:participants:](v11, "initWithChatGuid:displayName:participants:", v12, v13, v8);

        objc_msgSend(v2, "addObject:", v14);
      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    }
    while (v3);
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      v25 = v18;
      v26 = 2112;
      v27 = obj;
      _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Results for chats with participant %@ = %@", buf, 0x16u);
    }

  }
  return v2;
}

IMSPIRecentEvent *IMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDs(void *a1, void *a2)
{
  IMSPIRecentEvent *v3;
  id v4;
  NSObject *v5;
  void *v6;
  IMSPIRecentEvent *v7;
  void *v8;
  NSObject *v9;
  IMSPIRecentEvent *MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs;
  NSObject *v11;
  void *v12;
  BOOL v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  IMSPIRecentEvent *v19;
  IMSPIRecentEvent *v20;
  void *v21;
  NSObject *v22;
  int v24;
  IMSPIRecentEvent *v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v24 = 138412546;
      v25 = v3;
      v26 = 2112;
      v27 = v4;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Request to get message date and last addressed labelID from chat ids %@ and last addressed handles %@", (uint8_t *)&v24, 0x16u);
    }

  }
  -[IMSPIRecentEvent __imSetByApplyingBlock:](v3, "__imSetByApplyingBlock:", &unk_1E47235B8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "allObjects");
  v7 = (IMSPIRecentEvent *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "allObjects");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v24 = 138412546;
      v25 = v7;
      v26 = 2112;
      v27 = v8;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Searching with canonicalized chat ids %@ and last addressed labelIDs %@", (uint8_t *)&v24, 0x16u);
    }

  }
  if (-[IMSPIRecentEvent count](v7, "count") && objc_msgSend(v8, "count"))
  {
    MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs = (IMSPIRecentEvent *)IMDChatGetMessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        v24 = 138412290;
        v25 = MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs;
        _os_log_impl(&dword_1A1FF4000, v11, OS_LOG_TYPE_INFO, "Got results %@", (uint8_t *)&v24, 0xCu);
      }

    }
    -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, "objectForKeyedSubscript:", CFSTR("labelID"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "length") == 0;

    if (v13)
    {
      v19 = 0;
    }
    else
    {
      -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, "objectForKeyedSubscript:", CFSTR("date"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      if (v14)
      {
        -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, "objectForKeyedSubscript:", CFSTR("date"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v15, "integerValue");

        objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      v20 = [IMSPIRecentEvent alloc];
      -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, "objectForKeyedSubscript:", CFSTR("labelID"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = -[IMSPIRecentEvent initWithLabelID:date:](v20, "initWithLabelID:date:", v21, v17);

    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        LOWORD(v24) = 0;
        _os_log_impl(&dword_1A1FF4000, v18, OS_LOG_TYPE_INFO, "Could not retrieve last address labelID/last message date because received invalid arguments!", (uint8_t *)&v24, 2u);
      }

    }
    v19 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      v24 = 138412290;
      v25 = v19;
      _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Returning recent event %@", (uint8_t *)&v24, 0xCu);
    }

  }
  return v19;
}

id sub_1A215E450(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = a2;
  if (v2)
  {
    IMStripFormattingFromAddress();
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    if (MEMORY[0x1A858280C](v3))
    {
      IMInternationalForPhoneNumberWithOptions();
      v4 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (!IMStringIsEmail())
      {
        v5 = 0;
        goto LABEL_9;
      }
      objc_msgSend(v3, "lowercaseString");
      v4 = objc_claimAutoreleasedReturnValue();
    }
    v5 = (void *)v4;
LABEL_9:

    goto LABEL_10;
  }
  v5 = 0;
LABEL_10:

  return v5;
}

IMSPIRecentEvent *IMSPIGetMostRecentIMEventForContactHandlesAndLocalPhoneHandles(void *a1, void *a2)
{
  IMSPIRecentEvent *v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  IMSPIRecentEvent *v8;
  void *v9;
  NSObject *v10;
  IMSPIRecentEvent *MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles;
  NSObject *v12;
  void *v13;
  BOOL v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  IMSPIRecentEvent *v20;
  IMSPIRecentEvent *v21;
  void *v22;
  NSObject *v23;
  int v25;
  IMSPIRecentEvent *v26;
  __int16 v27;
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v25 = 138412546;
      v26 = v3;
      v27 = 2112;
      v28 = v4;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Request to get message date and last addressed handle from chat ids %@ and last addressed handles %@", (uint8_t *)&v25, 0x16u);
    }

  }
  -[IMSPIRecentEvent __imSetByApplyingBlock:](v3, "__imSetByApplyingBlock:", &unk_1E47235D8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "__imSetByApplyingBlock:", &unk_1E47235F8);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "allObjects");
  v8 = (IMSPIRecentEvent *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "allObjects");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v25 = 138412546;
      v26 = v8;
      v27 = 2112;
      v28 = v9;
      _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Searching with canonicalized chat ids %@ and last addressed handles %@", (uint8_t *)&v25, 0x16u);
    }

  }
  if (-[IMSPIRecentEvent count](v8, "count") && objc_msgSend(v9, "count"))
  {
    MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles = (IMSPIRecentEvent *)IMDChatGetMessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        v25 = 138412290;
        v26 = MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Got results %@", (uint8_t *)&v25, 0xCu);
      }

    }
    -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, "objectForKeyedSubscript:", CFSTR("handle"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "length") == 0;

    if (v14)
    {
      v20 = 0;
    }
    else
    {
      -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, "objectForKeyedSubscript:", CFSTR("date"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      if (v15)
      {
        -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, "objectForKeyedSubscript:", CFSTR("date"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "integerValue");

        objc_msgSend(MEMORY[0x1E0C99D68], "__im_dateWithNanosecondTimeIntervalSinceReferenceDate:", (double)v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v18 = 0;
      }
      v21 = [IMSPIRecentEvent alloc];
      -[IMSPIRecentEvent objectForKeyedSubscript:](MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, "objectForKeyedSubscript:", CFSTR("handle"));
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = -[IMSPIRecentEvent initWithHandle:date:](v21, "initWithHandle:date:", v22, v18);

    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        LOWORD(v25) = 0;
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Could not retrieve last address handle/last message date because received invalid arguments!", (uint8_t *)&v25, 2u);
      }

    }
    v20 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      v25 = 138412290;
      v26 = v20;
      _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "Returning recent event %@", (uint8_t *)&v25, 0xCu);
    }

  }
  return v20;
}

id sub_1A215E940(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = a2;
  if (v2)
  {
    IMStripFormattingFromAddress();
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    if (MEMORY[0x1A858280C](v3))
    {
      IMInternationalForPhoneNumberWithOptions();
      v4 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (!IMStringIsEmail())
      {
        v5 = 0;
        goto LABEL_9;
      }
      objc_msgSend(v3, "lowercaseString");
      v4 = objc_claimAutoreleasedReturnValue();
    }
    v5 = (void *)v4;
LABEL_9:

    goto LABEL_10;
  }
  v5 = 0;
LABEL_10:

  return v5;
}

id sub_1A215E9E0(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = a2;
  if (v2)
  {
    IMStripFormattingFromAddress();
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    if (MEMORY[0x1A858280C](v3))
    {
      IMInternationalForPhoneNumberWithOptions();
      v4 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (!IMStringIsEmail())
      {
        v5 = 0;
        goto LABEL_9;
      }
      objc_msgSend(v3, "lowercaseString");
      v4 = objc_claimAutoreleasedReturnValue();
    }
    v5 = (void *)v4;
LABEL_9:

    goto LABEL_10;
  }
  v5 = 0;
LABEL_10:

  return v5;
}

BOOL IMSPIMarkSPIMessagesAsRead(void *a1)
{
  id v1;
  uint64_t v2;
  NSObject *v3;
  _QWORD block[4];
  id v6;
  uint8_t buf[16];

  v1 = a1;
  v2 = objc_msgSend(v1, "count");
  if (v2)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A215EB88;
    block[3] = &unk_1E471E348;
    v6 = v1;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Empty messages to be marked as read, failing", buf, 2u);
    }

  }
  return v2 != 0;
}

void sub_1A215EB88(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  BOOL v11;
  int v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t v21[128];
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v23 = v3;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Marking messages as read: %@", buf, 0xCu);
    }

  }
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v5)
  {
    v7 = *(_QWORD *)v18;
    *(_QWORD *)&v6 = 138412290;
    v16 = v6;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v18 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v8);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(v9, "guid");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v10 = 0;
        }
        v11 = objc_msgSend(v10, "length", v16, (_QWORD)v17) == 0;
        v12 = IMOSLoggingEnabled();
        if (v11)
        {
          if (v12)
          {
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = v16;
              v23 = v9;
              _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Missing message guid for message: %@, not marking as read", buf, 0xCu);
            }

          }
        }
        else
        {
          if (v12)
          {
            OSLogHandleForIMFoundationCategory();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = v16;
              v23 = v10;
              _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, " => Message guid: %@", buf, 0xCu);
            }

          }
          +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "markMessageAsReadWithGUID:callerOrigin:reply:", v10, 1, &unk_1E4723638);

        }
        ++v8;
      }
      while (v5 != v8);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v5);
  }

}

void sub_1A215EE70(uint64_t a1, int a2)
{
  NSObject *v3;
  const __CFString *v4;
  int v5;
  const __CFString *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = CFSTR("NO");
      if (a2)
        v4 = CFSTR("YES");
      v5 = 138412290;
      v6 = v4;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Marked message as read: %@", (uint8_t *)&v5, 0xCu);
    }

  }
}

BOOL IMSPIMarkSPIMessagesAsPlayed(void *a1)
{
  id v1;
  uint64_t v2;
  NSObject *v3;
  _QWORD block[4];
  id v6;
  uint8_t buf[16];

  v1 = a1;
  v2 = objc_msgSend(v1, "count");
  if (v2)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A215F078;
    block[3] = &unk_1E471E348;
    v6 = v1;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Empty messages to be marked as played, failing", buf, 2u);
    }

  }
  return v2 != 0;
}

void sub_1A215F078(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  BOOL v11;
  int v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t v21[128];
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v23 = v3;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Marking messages as played: %@", buf, 0xCu);
    }

  }
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v5)
  {
    v7 = *(_QWORD *)v18;
    *(_QWORD *)&v6 = 138412290;
    v16 = v6;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v18 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v8);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(v9, "guid");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v10 = 0;
        }
        v11 = objc_msgSend(v10, "length", v16, (_QWORD)v17) == 0;
        v12 = IMOSLoggingEnabled();
        if (v11)
        {
          if (v12)
          {
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = v16;
              v23 = v9;
              _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Missing message guid for message: %@, not marking as read", buf, 0xCu);
            }

          }
        }
        else
        {
          if (v12)
          {
            OSLogHandleForIMFoundationCategory();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = v16;
              v23 = v10;
              _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, " => Message guid: %@", buf, 0xCu);
            }

          }
          +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "markPlayedForMessageGUID:", v10);

        }
        ++v8;
      }
      while (v5 != v8);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v5);
  }

}

BOOL IMSPIMarkSPIMessagesAsSaved(void *a1)
{
  id v1;
  uint64_t v2;
  NSObject *v3;
  _QWORD block[4];
  id v6;
  uint8_t buf[16];

  v1 = a1;
  v2 = objc_msgSend(v1, "count");
  if (v2)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A215F45C;
    block[3] = &unk_1E471E348;
    v6 = v1;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Empty messages to be marked as saved, failing", buf, 2u);
    }

  }
  return v2 != 0;
}

void sub_1A215F45C(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  BOOL v11;
  int v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t v21[128];
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  sub_1A20AB488();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v23 = v3;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Marking messages as saved: %@", buf, 0xCu);
    }

  }
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v5)
  {
    v7 = *(_QWORD *)v18;
    *(_QWORD *)&v6 = 138412290;
    v16 = v6;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v18 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v8);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(v9, "guid");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v10 = 0;
        }
        v11 = objc_msgSend(v10, "length", v16, (_QWORD)v17) == 0;
        v12 = IMOSLoggingEnabled();
        if (v11)
        {
          if (v12)
          {
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = v16;
              v23 = v9;
              _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Missing message guid for message: %@, not marking as saved", buf, 0xCu);
            }

          }
        }
        else
        {
          if (v12)
          {
            OSLogHandleForIMFoundationCategory();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = v16;
              v23 = v10;
              _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, " => Message guid: %@", buf, 0xCu);
            }

          }
          +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "markSavedForMessageGUID:", v10);

        }
        ++v8;
      }
      while (v5 != v8);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v5);
  }

  sub_1A20AB554();
}

uint64_t IMSPIQueryMessageWithRowID(uint64_t a1, void *a2, void *a3)
{
  return IMSPIQueryMessageWithRowIDAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessageWithRowIDAndQOS(uint64_t a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  BOOL v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  _QWORD v16[4];
  id v17;
  id v18;
  uint64_t v19;
  dispatch_qos_class_t v20;
  uint8_t buf[4];
  const char *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v9 = v8;
  if (v7)
    v10 = v8 == 0;
  else
    v10 = 1;
  v11 = !v10;
  if (v10)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v22 = "BOOL IMSPIQueryMessageWithRowIDAndQOS(int64_t, dispatch_qos_class_t, __strong dispatch_queue_t, __strong I"
              "MSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }

    }
  }
  else
  {
    v12 = (void *)objc_msgSend(v8, "copy");

    sub_1A2153D6C(a2);
    v13 = objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = sub_1A215F900;
    v16[3] = &unk_1E4723680;
    v19 = a1;
    v20 = a2;
    v17 = v7;
    v9 = v12;
    v18 = v9;
    dispatch_async(v13, v16);

  }
  return v11;
}

void sub_1A215F900(uint64_t a1)
{
  const void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  int v8;
  NSObject *v9;
  _QWORD v10[4];
  id v11;
  uint64_t *v12;
  _QWORD block[4];
  id v14;
  uint64_t *v15;
  const void *v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;

  if (qword_1EE65F810 != -1)
    dispatch_once(&qword_1EE65F810, &unk_1E4723658);
  v2 = (const void *)off_1EE65F808(*(_QWORD *)(a1 + 48));
  v3 = objc_alloc_init(MEMORY[0x1E0C99D38]);
  v18 = 0;
  v19 = &v18;
  v20 = 0x3032000000;
  v21 = sub_1A200AF14;
  v22 = sub_1A200ACFC;
  v23 = 0;
  v4 = MEMORY[0x1E0C809B0];
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A215FAF4;
  block[3] = &unk_1E4723498;
  v15 = &v18;
  v16 = v2;
  v5 = v3;
  v14 = v5;
  v17 = *(_DWORD *)(a1 + 56);
  dispatch_sync(MEMORY[0x1E0C80D38], block);
  v6 = (void *)v19[5];
  if (v6)
  {
    objc_msgSend(v6, "service");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isEqualToString:", *MEMORY[0x1E0D38F58]);

    if (v8)
      IMGreenTeaMessageReadLog();
  }
  v10[0] = v4;
  v10[1] = 3221225472;
  v10[2] = sub_1A215FB3C;
  v10[3] = &unk_1E47234C0;
  v12 = &v18;
  v9 = *(NSObject **)(a1 + 32);
  v11 = *(id *)(a1 + 40);
  dispatch_async(v9, v10);
  if (v2)
    CFRelease(v2);

  _Block_object_dispose(&v18, 8);
}

void sub_1A215FAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A215FAC8()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessageForRowID", CFSTR("IMDPersistence"));
  off_1EE65F808 = result;
  return result;
}

void sub_1A215FAF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  _IMSPIMessageFromRecord(*(_QWORD *)(a1 + 48), 1, 0, *(void **)(a1 + 32), *(dispatch_qos_class_t *)(a1 + 56));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1A215FB3C(uint64_t a1)
{
  id v2;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:");
  else
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

uint64_t IMSPIQueryMessagesWithRowIDs(void *a1, void *a2, void *a3)
{
  return IMSPIQueryMessagesWithRowIDsAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessagesWithRowIDsAndQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  dispatch_qos_class_t v21;
  uint8_t buf[4];
  const char *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (v8)
    v11 = v9 == 0;
  else
    v11 = 1;
  v12 = !v11;
  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v23 = "BOOL IMSPIQueryMessagesWithRowIDsAndQOS(NSArray<NSNumber *> *__strong, dispatch_qos_class_t, __strong disp"
              "atch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }

    }
  }
  else
  {
    v13 = (void *)objc_msgSend(v9, "copy");

    sub_1A2153D6C(a2);
    v14 = objc_claimAutoreleasedReturnValue();
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = sub_1A215FD80;
    v17[3] = &unk_1E47236A8;
    v18 = v7;
    v21 = a2;
    v19 = v8;
    v10 = v13;
    v20 = v10;
    dispatch_async(v14, v17);

  }
  return v12;
}

void sub_1A215FD80(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (qword_1EE65F820 != -1)
    dispatch_once(&qword_1EE65F820, &unk_1E471C410);
  v2 = (void *)off_1EE65F818(*(_QWORD *)(a1 + 32));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = objc_msgSend(v2, "count");
      v5 = objc_msgSend(*(id *)(a1 + 32), "count");
      *(_DWORD *)buf = 134218240;
      v14 = v4;
      v15 = 2048;
      v16 = v5;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Got back %lu messages for %lu row IDs", buf, 0x16u);
    }

  }
  sub_1A215FF68(v2, *(_DWORD *)(a1 + 56));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21604F0(v6);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = sub_1A2160614;
  v10[3] = &unk_1E471E8B8;
  v7 = *(NSObject **)(a1 + 40);
  v8 = *(id *)(a1 + 48);
  v11 = v6;
  v12 = v8;
  v9 = v6;
  dispatch_async(v7, v10);

}

void *sub_1A215FF3C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesForRowIDs", CFSTR("IMDPersistence"));
  off_1EE65F818 = result;
  return result;
}

id sub_1A215FF68(void *a1, int a2)
{
  id v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  id v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  __int128 v25;
  id v26;
  id v27;
  id obj;
  _QWORD block[5];
  id v30;
  __int128 *p_buf;
  int v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint8_t v37[4];
  id v38;
  __int16 v39;
  void *v40;
  __int128 buf;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t);
  id v45;
  _BYTE v46[128];
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 134217984;
      *(_QWORD *)((char *)&buf + 4) = objc_msgSend(v3, "count");
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Beginning _IMSPIMessagesFromMessageRecords with %ld records", (uint8_t *)&buf, 0xCu);
    }

  }
  v26 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v27 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v5 = objc_alloc_init(MEMORY[0x1E0C99D38]);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  obj = v3;
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v46, 16);
  if (v6)
  {
    v8 = *(_QWORD *)v34;
    v9 = MEMORY[0x1E0C80D38];
    *(_QWORD *)&v7 = 138412546;
    v25 = v7;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v34 != v8)
          objc_enumerationMutation(obj);
        v11 = *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * v10);
        *(_QWORD *)&buf = 0;
        *((_QWORD *)&buf + 1) = &buf;
        v42 = 0x3032000000;
        v43 = sub_1A200AF14;
        v44 = sub_1A200ACFC;
        v45 = 0;
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = sub_1A216741C;
        block[3] = &unk_1E4723B90;
        p_buf = &buf;
        block[4] = v11;
        v30 = v5;
        v32 = a2;
        dispatch_sync(v9, block);
        v12 = *(void **)(*((_QWORD *)&buf + 1) + 40);
        if (v12)
        {
          if (!objc_msgSend(v12, "itemType"))
          {
            objc_msgSend(*(id *)(*((_QWORD *)&buf + 1) + 40), "chatGuids");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "firstObject");
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v27, "objectForKey:", v18);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            if (v19)
              goto LABEL_23;
            sub_1A2157E90(v11);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            if (v19)
            {
              objc_msgSend(v27, "setObject:forKey:", v19, v18);
LABEL_23:
              objc_msgSend(*(id *)(*((_QWORD *)&buf + 1) + 40), "setDateForLastReadMessageInChat:", v19, v25);
            }
            else
            {
              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v20 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
                {
                  *(_WORD *)v37 = 0;
                  _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "Unable to set last read date for ", v37, 2u);
                }

              }
              v19 = 0;
            }
            objc_msgSend(v26, "addObject:", *(_QWORD *)(*((_QWORD *)&buf + 1) + 40), v25);

            goto LABEL_25;
          }
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(*(id *)(*((_QWORD *)&buf + 1) + 40), "guid");
              v14 = (id)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", objc_msgSend(*(id *)(*((_QWORD *)&buf + 1) + 40), "itemType"));
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)v37 = v25;
              v38 = v14;
              v39 = 2112;
              v40 = v15;
              _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "Dropping message with guid %@ and item type %@ as it is not a valid message.", v37, 0x16u);

            }
          }
        }
        else if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v16 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)v37 = 0;
            _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "Could not create IMSPIMessage from message record", v37, 2u);
          }

        }
LABEL_25:

        _Block_object_dispose(&buf, 8);
        ++v10;
      }
      while (v6 != v10);
      v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v46, 16);
      v6 = v21;
    }
    while (v21);
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      v23 = objc_msgSend(v26, "count");
      LODWORD(buf) = 134217984;
      *(_QWORD *)((char *)&buf + 4) = v23;
      _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Completed _IMSPIMessagesFromMessageRecords with %ld IMSPIMessages", (uint8_t *)&buf, 0xCu);
    }

  }
  return v26;
}

void sub_1A2160488(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A2160430);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A21604C8()
{
  JUMPOUT(0x1A21604D4);
}

void sub_1A21604F0(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v1 = a1;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v10;
    v5 = (_QWORD *)MEMORY[0x1E0D38F58];
    while (2)
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * v6), "service", (_QWORD)v9);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v7, "isEqualToString:", *v5);

        if ((v8 & 1) != 0)
        {

          IMGreenTeaMessageReadLog();
          goto LABEL_11;
        }
        ++v6;
      }
      while (v3 != v6);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v3)
        continue;
      break;
    }
  }

LABEL_11:
}

uint64_t sub_1A2160614(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t IMSPIQueryMessageWithGUID(void *a1, void *a2, void *a3)
{
  return sub_1A216064C(a1, 0, 21, a3, a2);
}

uint64_t IMSPIQueryMessageWithGUIDAndQOS(void *a1, int a2, void *a3, void *a4)
{
  return sub_1A216064C(a1, 0, a2, a3, a4);
}

uint64_t sub_1A216064C(void *a1, char a2, int a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  BOOL v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  _QWORD block[4];
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  int v26;
  char v27;
  uint8_t buf[4];
  const char *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a4;
  v11 = a5;
  v12 = v11;
  if (v10)
    v13 = v11 == 0;
  else
    v13 = 1;
  v14 = !v13;
  if (v13)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v29 = "BOOL _IMSPIQueryMessageWithGUIDAndLoadAttachments(NSString *__strong, BOOL, dispatch_qos_class_t, __strong"
              " dispatch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }

    }
  }
  else
  {
    v15 = (void *)objc_msgSend(v11, "copy");

    if (qword_1EE65F980 != -1)
      dispatch_once(&qword_1EE65F980, &unk_1E4723BB0);
    v16 = off_1EE65F978(v9);
    v17 = objc_alloc_init(MEMORY[0x1E0C99D38]);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A2167490;
    block[3] = &unk_1E4723BD8;
    v27 = a2;
    v25 = v16;
    v22 = v17;
    v26 = a3;
    v23 = v10;
    v12 = v15;
    v24 = v12;
    v18 = v17;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
  return v14;
}

uint64_t IMSPIQueryMessageWithGUIDAndLoadAttachments(void *a1, void *a2, void *a3)
{
  return sub_1A216064C(a1, 1, 21, a3, a2);
}

uint64_t IMSPIQueryMessageWithGUIDAndLoadAttachmentsWithQOS(void *a1, int a2, void *a3, void *a4)
{
  return sub_1A216064C(a1, 1, a2, a3, a4);
}

uint64_t IMSPIQueryMessagesWithGUIDs(void *a1, void *a2, void *a3)
{
  return IMSPIQueryMessagesWithGUIDsAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessagesWithGUIDsAndQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  dispatch_qos_class_t v21;
  uint8_t buf[4];
  const char *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (v8)
    v11 = v9 == 0;
  else
    v11 = 1;
  v12 = !v11;
  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v23 = "BOOL IMSPIQueryMessagesWithGUIDsAndQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, __strong dispa"
              "tch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }

    }
  }
  else
  {
    v13 = (void *)objc_msgSend(v9, "copy");

    sub_1A2153D6C(a2);
    v14 = objc_claimAutoreleasedReturnValue();
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = sub_1A2160A6C;
    v17[3] = &unk_1E47236A8;
    v18 = v7;
    v21 = a2;
    v19 = v8;
    v10 = v13;
    v20 = v10;
    dispatch_async(v14, v17);

  }
  return v12;
}

void sub_1A2160A6C(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (qword_1EE65F830 != -1)
    dispatch_once(&qword_1EE65F830, &unk_1E47236C8);
  v2 = (void *)off_1EE65F828(*(_QWORD *)(a1 + 32));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = objc_msgSend(v2, "count");
      v5 = objc_msgSend(*(id *)(a1 + 32), "count");
      *(_DWORD *)buf = 134218240;
      v14 = v4;
      v15 = 2048;
      v16 = v5;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Got back %lu messages for %lu GUIDs", buf, 0x16u);
    }

  }
  sub_1A215FF68(v2, *(_DWORD *)(a1 + 56));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21604F0(v6);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = sub_1A2160C54;
  v10[3] = &unk_1E471E8B8;
  v7 = *(NSObject **)(a1 + 40);
  v8 = *(id *)(a1 + 48);
  v11 = v6;
  v12 = v8;
  v9 = v6;
  dispatch_async(v7, v10);

}

void *sub_1A2160C28()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesForGUIDs", CFSTR("IMDPersistence"));
  off_1EE65F828 = result;
  return result;
}

uint64_t sub_1A2160C54(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t IMSPIGetAttachmentPathsForTransferGUIDs(void *a1, void *a2, void *a3)
{
  return IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  _QWORD block[4];
  id v18;
  id v19;
  id v20;
  uint8_t buf[4];
  const char *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (v8)
    v11 = v9 == 0;
  else
    v11 = 1;
  v12 = !v11;
  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v22 = "BOOL IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, _"
              "_strong dispatch_queue_t, __strong IMSPITransferPathsCallback)";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }

    }
  }
  else
  {
    v13 = (void *)objc_msgSend(v9, "copy");

    sub_1A2153D6C(a2);
    v14 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A2160E3C;
    block[3] = &unk_1E471E818;
    v18 = v7;
    v19 = v8;
    v10 = v13;
    v20 = v10;
    dispatch_async(v14, block);

  }
  return v12;
}

void sub_1A2160E3C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD block[4];
  id v27;
  id v28;
  CFTypeRef cf;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  if (qword_1EE65F840 != -1)
    dispatch_once(&qword_1EE65F840, &unk_1E47236E8);
  if (qword_1EE65F850 != -1)
    dispatch_once(&qword_1EE65F850, &unk_1E4723708);
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v23 = a1;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v31;
    v24 = *(_QWORD *)v31;
    do
    {
      v7 = 0;
      v25 = v5;
      do
      {
        if (*(_QWORD *)v31 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * v7);
        v9 = IMDAttachmentRecordCopyAttachmentForGUID();
        if (v9)
        {
          v10 = (const void *)v9;
          cf = 0;
          off_1EE65F838(v9, 0, 0, 0, 0, &cf, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0,
            0,
            0,
            0);
          if (cf)
          {
            v11 = (id)cf;
            v12 = (void *)objc_msgSend((id)cf, "copy");
            objc_msgSend(v12, "componentsSeparatedByString:", CFSTR("/Attachments/"));
            v13 = (void *)objc_claimAutoreleasedReturnValue();

            if ((unint64_t)objc_msgSend(v13, "count") >= 2)
            {
              objc_msgSend(v13, "objectAtIndexedSubscript:", 1);
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              sub_1A21611A0((uint64_t)v14);
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "path");
              v16 = v3;
              v17 = v2;
              v18 = objc_claimAutoreleasedReturnValue();

              v11 = (void *)v18;
              v2 = v17;
              v3 = v16;
              v6 = v24;
            }

            v19 = (void *)objc_msgSend(v11, "copy");
            objc_msgSend(v2, "setObject:forKey:", v19, v8);

            if (cf)
            {
              CFRelease(cf);
              cf = 0;
            }

            v5 = v25;
          }
          CFRelease(v10);
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v5);
  }

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A2161210;
  block[3] = &unk_1E471E8B8;
  v20 = *(NSObject **)(v23 + 40);
  v21 = *(id *)(v23 + 48);
  v27 = v2;
  v28 = v21;
  v22 = v2;
  dispatch_async(v20, block);

}

void *sub_1A2161148()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("_IMDAttachmentRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F838 = result;
  return result;
}

uint64_t sub_1A2161174()
{
  uint64_t result;

  result = MEMORY[0x1A8582938]("IMDAttachmentRecordCopyAttachmentForGUID", CFSTR("IMDPersistence"));
  qword_1EE65F848 = result;
  return result;
}

id sub_1A21611A0(uint64_t a1)
{
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@/%@"), CFSTR("/var/mobile/Library/SMS/Attachments"), a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v1, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

uint64_t sub_1A2161210(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

id IMSPIGetGroupPhotosForChatsWithGroupIDs(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  _QWORD v9[5];
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t);
  id v15;
  uint8_t buf[4];
  id v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v10 = 0;
  v11 = &v10;
  v12 = 0x3032000000;
  v13 = sub_1A200AF14;
  v14 = sub_1A200ACFC;
  v15 = 0;
  v15 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(v1, "count"));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v17 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Attempting to lookup group photos for chats with groupIDs: %@", buf, 0xCu);
    }

  }
  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "synchronousRemoteDaemon");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1A2161494;
  v9[3] = &unk_1E4723780;
  v9[4] = &v10;
  objc_msgSend(v4, "fetchGroupPhotoPathsForChatsWithGroupIDs:completionHandler:", v1, v9);

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = (void *)v11[5];
      *(_DWORD *)buf = 138412546;
      v17 = v6;
      v18 = 2112;
      v19 = v1;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Finished fetching group photos data: '%@', for groups: '%@'.", buf, 0x16u);
    }

  }
  v7 = (void *)objc_msgSend((id)v11[5], "copy");
  _Block_object_dispose(&v10, 8);

  return v7;
}

void sub_1A2161494(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  uint8_t buf[4];
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  IMLogHandleForCategory();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v15 = v3;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Received group photos: %@", buf, 0xCu);
    }

    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = sub_1A21615B4;
    v13[3] = &unk_1E4723758;
    v13[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v13);
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1A2198C14(v5, v6, v7, v8, v9, v10, v11, v12);

  }
}

void sub_1A21615B4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;

  v5 = a2;
  v6 = a3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1A216168C;
  v9[3] = &unk_1E4723730;
  v11 = *(_QWORD *)(a1 + 32);
  v7 = v5;
  v10 = v7;
  if ((objc_msgSend(v6, "accessResourceByConsumingSandboxExtensionWithBlock:", v9) & 1) == 0)
  {
    IMLogHandleForCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1A2198C48((uint64_t)v7, (uint64_t)v6, v8);

  }
}

void sub_1A216168C(uint64_t a1, uint64_t a2)
{
  void *v3;
  NSObject *v4;
  NSObject *v5;
  BOOL v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  if (a2)
  {
    v15 = 0;
    objc_msgSend(MEMORY[0x1E0C99D50], "dataWithContentsOfURL:options:error:", a2, 0, &v15);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v15;
    v5 = v4;
    if (v3)
      v6 = v4 == 0;
    else
      v6 = 0;
    if (v6)
    {
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setObject:forKeyedSubscript:", v3, *(_QWORD *)(a1 + 32));
    }
    else
    {
      IMLogHandleForCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1A2198D00(v5, v7);

    }
  }
  else
  {
    IMLogHandleForCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1A2198CCC(v5, v8, v9, v10, v11, v12, v13, v14);
  }

}

uint64_t IMSPIHasActiveAliasForSendingOnService(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  char v17;
  NSObject *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint8_t buf[16];
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    +[IMDaemonController sharedController](IMDaemonController, "sharedController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "multiplexedConnectionWithLabel:capabilities:context:", CFSTR("IMCoreSPI_HasActiveAlias"), 512, 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "waitForSetup");
    +[IMAccountController sharedInstance](IMAccountController, "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "activeAccounts");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v10 = v9;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
    if (v11)
    {
      v12 = *(_QWORD *)v21;
      do
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v21 != v12)
            objc_enumerationMutation(v10);
          v14 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
          objc_msgSend(v14, "serviceName", (_QWORD)v20);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v15, "isEqualToString:", v5) & 1) != 0)
          {
            objc_msgSend(v14, "aliases");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            v17 = objc_msgSend(v16, "containsObject:", v3);

            if ((v17 & 1) != 0)
            {
              v11 = 1;
              goto LABEL_20;
            }
          }
          else
          {

          }
        }
        v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
      }
      while (v11);
    }
LABEL_20:

    objc_msgSend(v7, "invalidate");
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v18, OS_LOG_TYPE_INFO, "Invalid input to IMSPIHasActiveAliasForSendingOnService", buf, 2u);
      }

    }
    v11 = 0;
  }

  return v11;
}

uint64_t IMSPIQueryIMMessageItemsWithGUIDs(void *a1, void *a2, void *a3)
{
  return IMSPIQueryIMMessageItemsWithGUIDsAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryIMMessageItemsWithGUIDsAndQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  _QWORD block[4];
  id v18;
  id v19;
  id v20;
  uint8_t buf[4];
  const char *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (v8)
    v11 = v9 == 0;
  else
    v11 = 1;
  v12 = !v11;
  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v22 = "BOOL IMSPIQueryIMMessageItemsWithGUIDsAndQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, __strong"
              " dispatch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }

    }
  }
  else
  {
    v13 = (void *)objc_msgSend(v9, "copy");

    sub_1A2153D6C(a2);
    v14 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A2161BA0;
    block[3] = &unk_1E471E818;
    v18 = v7;
    v19 = v8;
    v10 = v13;
    v20 = v10;
    dispatch_async(v14, block);

  }
  return v12;
}

void sub_1A2161BA0(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  id v16;
  _QWORD v17[4];
  id v18;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint8_t v24[128];
  uint8_t buf[4];
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  if (qword_1EE65F860 != -1)
    dispatch_once(&qword_1EE65F860, &unk_1E47237A0);
  v2 = (void *)off_1EE65F858(*(_QWORD *)(a1 + 32));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = objc_msgSend(v2, "count");
      v5 = objc_msgSend(*(id *)(a1 + 32), "count");
      *(_DWORD *)buf = 134218240;
      v26 = v4;
      v27 = 2048;
      v28 = v5;
      _os_log_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_INFO, "Got back %lu messages for %lu GUIDs", buf, 0x16u);
    }

  }
  v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v7 = v2;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v8)
  {
    v9 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v21 != v9)
          objc_enumerationMutation(v7);
        sub_1A215764C(*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * i));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
          objc_msgSend(v6, "addObject:", v11);

      }
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v8);
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      v13 = objc_msgSend(v6, "count");
      *(_DWORD *)buf = 134217984;
      v26 = v13;
      _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Converted records into items %lu items", buf, 0xCu);
    }

  }
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = sub_1A2161EB8;
  v17[3] = &unk_1E471E8B8;
  v14 = *(NSObject **)(a1 + 40);
  v15 = *(id *)(a1 + 48);
  v18 = v6;
  v19 = v15;
  v16 = v6;
  dispatch_async(v14, v17);

}

void *sub_1A2161E8C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesForGUIDs", CFSTR("IMDPersistence"));
  off_1EE65F858 = result;
  return result;
}

uint64_t sub_1A2161EB8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t IMSPIQueryUnreadMessages(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return IMSPIQueryUnreadMessagesWithQOS(a1, a2, QOS_CLASS_DEFAULT, a4, a3);
}

uint64_t IMSPIQueryUnreadMessagesWithQOS(uint64_t a1, uint64_t a2, dispatch_qos_class_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  const char *v16;
  _QWORD block[4];
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  dispatch_qos_class_t v23;
  uint8_t buf[16];

  v9 = a4;
  v10 = a5;
  v11 = v10;
  if (!v9 || !v10)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v16 = "Empty results block or queue supplied to IMSPIQueryUnreadMessages";
LABEL_11:
        _os_log_impl(&dword_1A1FF4000, v15, OS_LOG_TYPE_INFO, v16, buf, 2u);
      }
LABEL_12:

    }
LABEL_13:
    v14 = 0;
    goto LABEL_14;
  }
  if (!a1)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v16 = "0 limit supplied, no query issued to IMSPIQueryUnreadMessages";
        goto LABEL_11;
      }
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  v12 = (void *)objc_msgSend(v10, "copy");

  sub_1A2153D6C(a3);
  v13 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A2162088;
  block[3] = &unk_1E47237E8;
  v21 = a1;
  v22 = a2;
  v23 = a3;
  v19 = v9;
  v11 = v12;
  v20 = v11;
  dispatch_async(v13, block);

  v14 = 1;
LABEL_14:

  return v14;
}

void sub_1A2162088(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (qword_1EE65F870 != -1)
    dispatch_once(&qword_1EE65F870, &unk_1E47237C0);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 48);
      v4 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)buf = 134218240;
      v16 = v3;
      v17 = 2048;
      v18 = v4;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Querying for unread messages with limit: %lld, from row id: %lld", buf, 0x16u);
    }

  }
  v5 = (void *)off_1EE65F868(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = objc_msgSend(v5, "count");
      *(_DWORD *)buf = 134217984;
      v16 = v7;
      _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Got back %lu unread messages", buf, 0xCu);
    }

  }
  sub_1A215FF68(v5, *(_DWORD *)(a1 + 64));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21604F0(v8);
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_1A21622DC;
  v12[3] = &unk_1E471E8B8;
  v9 = *(NSObject **)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  v13 = v8;
  v14 = v10;
  v11 = v8;
  dispatch_async(v9, v12);

}

void *sub_1A21622B0()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID", CFSTR("IMDPersistence"));
  off_1EE65F868 = result;
  return result;
}

uint64_t sub_1A21622DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    v3 = *(_QWORD *)(a1 + 32);
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

uint64_t IMSPIQueryUnreadMessagesWithIDs(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return IMSPIQueryUnreadMessagesWithIDsAndQOS(a1, a2, a3, QOS_CLASS_DEFAULT, a5, a4);
}

uint64_t IMSPIQueryUnreadMessagesWithIDsAndQOS(void *a1, void *a2, uint64_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  NSObject *v20;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  dispatch_qos_class_t v28;
  uint8_t buf[4];
  id v30;
  __int16 v31;
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v12 = a2;
  v13 = a5;
  v14 = a6;
  v15 = v14;
  if (!v13 || !v14)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to IMSPIQueryUnreadMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  v16 = objc_msgSend(v11, "count");
  if (v16 != objc_msgSend(v12, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412546;
        v30 = v11;
        v31 = 2112;
        v32 = v12;
        _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "Services is not matched with IDs: [%@] [%@] to IMSPIQueryUnreadMessagesWithIDs", buf, 0x16u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (!objc_msgSend(v11, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "Empty services or IDs supplied to IMSPIQueryUnreadMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
LABEL_23:
    v19 = 0;
    goto LABEL_24;
  }
  if (!a3)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v20, OS_LOG_TYPE_INFO, "0 limit supplied, no query issued to IMSPIQueryUnreadMessagesWithIDs", buf, 2u);
      }
LABEL_22:

      goto LABEL_23;
    }
    goto LABEL_23;
  }
  v17 = (void *)objc_msgSend(v15, "copy");

  sub_1A2153D6C(a4);
  v18 = objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = sub_1A216266C;
  v22[3] = &unk_1E4723830;
  v23 = v12;
  v24 = v11;
  v27 = a3;
  v28 = a4;
  v25 = v13;
  v15 = v17;
  v26 = v15;
  dispatch_async(v18, v22);

  v19 = 1;
LABEL_24:

  return v19;
}

void sub_1A2162648(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A21625F4);
  }
  _Unwind_Resume(a1);
}

void sub_1A216266C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  if (qword_1EE65F880 != -1)
    dispatch_once(&qword_1EE65F880, &unk_1E4723808);
  v2 = (void *)off_1EE65F878(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64));
  sub_1A215FF68(v2, *(_DWORD *)(a1 + 72));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "__imArrayByFilteringWithBlock:", &unk_1E4723C18);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21604F0(v4);
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_1A216279C;
  v8[3] = &unk_1E471E8B8;
  v5 = *(NSObject **)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v9 = v4;
  v10 = v6;
  v7 = v4;
  dispatch_async(v5, v8);

}

void *sub_1A2162770()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesWithHandlesOnServicesLimit", CFSTR("IMDPersistence"));
  off_1EE65F878 = result;
  return result;
}

uint64_t sub_1A216279C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    v3 = *(_QWORD *)(a1 + 32);
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

uint64_t IMSPIQueryMessagesWithIDs(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(a1, a2, a3 != 0, 1, 0, QOS_CLASS_DEFAULT, a5, a4);
}

uint64_t IMSPIQueryMessagesWithIDsAndQOS(void *a1, void *a2, uint64_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  return IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(a1, a2, a3 != 0, 1, 0, a4, a5, a6);
}

uint64_t IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(void *a1, void *a2, char a3, char a4, uint64_t a5, dispatch_qos_class_t a6, void *a7, void *a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  _QWORD v26[4];
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  dispatch_qos_class_t v32;
  char v33;
  char v34;
  uint8_t buf[4];
  id v36;
  __int16 v37;
  id v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v15 = a1;
  v16 = a2;
  v17 = a7;
  v18 = a8;
  v19 = v18;
  if (!v17 || !v18)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v24, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to IMSPIQueryMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  v20 = objc_msgSend(v15, "count");
  if (v20 != objc_msgSend(v16, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412546;
        v36 = v15;
        v37 = 2112;
        v38 = v16;
        _os_log_impl(&dword_1A1FF4000, v24, OS_LOG_TYPE_INFO, "Services is not matched with IDs: [%@] [%@] to IMSPIQueryMessagesWithIDs", buf, 0x16u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (!objc_msgSend(v15, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v24, OS_LOG_TYPE_INFO, "Empty services or IDs supplied to IMSPIQueryMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
LABEL_23:
    v23 = 0;
    goto LABEL_24;
  }
  if (!a5)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v24, OS_LOG_TYPE_INFO, "0 limit supplied, no query issued to IMSPIQueryMessagesWithIDs", buf, 2u);
      }
LABEL_22:

      goto LABEL_23;
    }
    goto LABEL_23;
  }
  v21 = (void *)objc_msgSend(v19, "copy");

  sub_1A2153D6C(a6);
  v22 = objc_claimAutoreleasedReturnValue();
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = sub_1A2162B7C;
  v26[3] = &unk_1E4723878;
  v27 = v16;
  v33 = a3;
  v34 = a4;
  v28 = v15;
  v31 = a5;
  v32 = a6;
  v29 = v17;
  v19 = v21;
  v30 = v19;
  dispatch_async(v22, v26);

  v23 = 1;
LABEL_24:

  return v23;
}

void sub_1A2162B4C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2162AF8);
  }
  _Unwind_Resume(a1);
}

uint64_t IMSPIQueryMessagesWithIDsWithOnlyUnread(void *a1, void *a2, char a3, char a4, uint64_t a5, void *a6, void *a7)
{
  return IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(a1, a2, a3, a4, a5, QOS_CLASS_DEFAULT, a7, a6);
}

void sub_1A2162B7C(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  if (qword_1EE65F890 != -1)
    dispatch_once(&qword_1EE65F890, &unk_1E4723850);
  v2 = (void *)off_1EE65F888(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 76), *(unsigned __int8 *)(a1 + 77), *(_QWORD *)(a1 + 64));
  sub_1A215FF68(v2, *(_DWORD *)(a1 + 72));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21604F0(v3);
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A2162C94;
  v7[3] = &unk_1E471E8B8;
  v4 = *(NSObject **)(a1 + 48);
  v5 = *(id *)(a1 + 56);
  v8 = v3;
  v9 = v5;
  v6 = v3;
  dispatch_async(v4, v7);

}

void *sub_1A2162C68()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesWithOnlyUnreadAndLimit", CFSTR("IMDPersistence"));
  off_1EE65F888 = result;
  return result;
}

uint64_t sub_1A2162C94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    v3 = *(_QWORD *)(a1 + 32);
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

uint64_t IMSPIQueryMessages(uint64_t a1, void *a2, void *a3)
{
  return IMSPIQueryMessagesWithQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessagesWithQOS(uint64_t a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  const char *v14;
  _QWORD v16[4];
  id v17;
  id v18;
  uint64_t v19;
  dispatch_qos_class_t v20;
  uint8_t buf[16];

  v7 = a3;
  v8 = a4;
  v9 = v8;
  if (!v7 || !v8)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v14 = "Empty results block or queue supplied to IMSPIQueryMessages";
LABEL_11:
        _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, v14, buf, 2u);
      }
LABEL_12:

    }
LABEL_13:
    v12 = 0;
    goto LABEL_14;
  }
  if (!a1)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v14 = "0 limit supplied, no query issued to IMSPIQueryMessages";
        goto LABEL_11;
      }
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  v10 = (void *)objc_msgSend(v8, "copy");

  sub_1A2153D6C(a2);
  v11 = objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = sub_1A2162E84;
  v16[3] = &unk_1E4723680;
  v19 = a1;
  v20 = a2;
  v17 = v7;
  v9 = v10;
  v18 = v9;
  dispatch_async(v11, v16);

  v12 = 1;
LABEL_14:

  return v12;
}

void sub_1A2162E84(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint8_t buf[4];
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (qword_1EE65F8A0 != -1)
    dispatch_once(&qword_1EE65F8A0, &unk_1E4723898);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 134217984;
      v15 = v3;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Querying for messages with limit: %lld", buf, 0xCu);
    }

  }
  v4 = (void *)off_1EE65F898(*(_QWORD *)(a1 + 48));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = objc_msgSend(v4, "count");
      *(_DWORD *)buf = 134217984;
      v15 = v6;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Got back %lu messages", buf, 0xCu);
    }

  }
  sub_1A215FF68(v4, *(_DWORD *)(a1 + 56));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21604F0(v7);
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A21630CC;
  v11[3] = &unk_1E471E8B8;
  v8 = *(NSObject **)(a1 + 32);
  v9 = *(id *)(a1 + 40);
  v12 = v7;
  v13 = v9;
  v10 = v7;
  dispatch_async(v8, v11);

}

void *sub_1A21630A0()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyLastReceivedMessageLimit", CFSTR("IMDPersistence"));
  off_1EE65F898 = result;
  return result;
}

uint64_t sub_1A21630CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    v3 = *(_QWORD *)(a1 + 32);
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

BOOL _IMSPIShouldFilterOutSPIMessage(void *a1)
{
  return objc_msgSend(a1, "itemType") != 0;
}

uint64_t IMSPIQueryMessagesWithChatIdentifiers(void *a1, void *a2, char a3, uint64_t a4, void *a5, void *a6)
{
  return IMSPIQueryMessagesWithChatIdentifiersAndQOS(a1, a2, a3, a4, QOS_CLASS_DEFAULT, a6, a5);
}

uint64_t IMSPIQueryMessagesWithChatIdentifiersAndQOS(void *a1, void *a2, char a3, uint64_t a4, dispatch_qos_class_t a5, void *a6, void *a7)
{
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  NSObject *v22;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  dispatch_qos_class_t v30;
  char v31;
  uint8_t buf[4];
  id v33;
  __int16 v34;
  id v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v13 = a1;
  v14 = a2;
  v15 = a6;
  v16 = a7;
  v17 = v16;
  if (!v15 || !v16)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to IMSPIQueryMessagesWithChatIdentifiers", buf, 2u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  v18 = objc_msgSend(v13, "count");
  if (v18 != objc_msgSend(v14, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412546;
        v33 = v13;
        v34 = 2112;
        v35 = v14;
        _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Services is not matched with chatIdentifiers: [%@] [%@] to IMSPIQueryMessagesWithIDs", buf, 0x16u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (!objc_msgSend(v13, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Empty services or chatIdentifiers supplied to IMSPIQueryMessagesWithChatIdentifiers", buf, 2u);
      }
      goto LABEL_22;
    }
LABEL_23:
    v21 = 0;
    goto LABEL_24;
  }
  if (!a4)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "0 limit supplied, no query issued to IMSPIQueryMessagesWithChatIdentifiers", buf, 2u);
      }
LABEL_22:

      goto LABEL_23;
    }
    goto LABEL_23;
  }
  v19 = (void *)objc_msgSend(v17, "copy");

  sub_1A2153D6C(a5);
  v20 = objc_claimAutoreleasedReturnValue();
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = sub_1A2163480;
  v24[3] = &unk_1E47238E0;
  v25 = v14;
  v31 = a3;
  v26 = v13;
  v29 = a4;
  v30 = a5;
  v27 = v15;
  v17 = v19;
  v28 = v17;
  dispatch_async(v20, v24);

  v21 = 1;
LABEL_24:

  return v21;
}

void sub_1A216345C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2163408);
  }
  _Unwind_Resume(a1);
}

void sub_1A2163480(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  if (qword_1EE65F8B0 != -1)
    dispatch_once(&qword_1EE65F8B0, &unk_1E47238B8);
  v2 = (void *)off_1EE65F8A8(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0, *(unsigned __int8 *)(a1 + 76), *(_QWORD *)(a1 + 64));
  sub_1A215FF68(v2, *(_DWORD *)(a1 + 72));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A21604F0(v3);
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A2163598;
  v7[3] = &unk_1E471E8B8;
  v4 = *(NSObject **)(a1 + 48);
  v5 = *(id *)(a1 + 56);
  v8 = v3;
  v9 = v5;
  v6 = v3;
  dispatch_async(v4, v7);

}

void *sub_1A216356C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesWithOnlyUnreadAndLimit", CFSTR("IMDPersistence"));
  off_1EE65F8A8 = result;
  return result;
}

uint64_t sub_1A2163598(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    v3 = *(_QWORD *)(a1 + 32);
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

uint64_t IMSPIQueryHasConversationWithID(void *a1, void *a2, void *a3, void *a4)
{
  return IMSPIQueryHasConversationWithIDAndQOS(a1, a2, QOS_CLASS_DEFAULT, a4, a3);
}

uint64_t IMSPIQueryHasConversationWithIDAndQOS(void *a1, void *a2, dispatch_qos_class_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  void *v18;
  NSObject *v19;
  id v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  const char *v24;
  _QWORD block[4];
  id v27;
  id v28;
  id v29;
  id v30;
  uint8_t buf[16];

  v9 = a1;
  v10 = a2;
  v11 = a4;
  v12 = a5;
  v13 = v12;
  if (!v11 || !v12)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v24 = "Empty results block or queue supplied to IMSPIQueryHasConversationWithID";
LABEL_16:
        _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, v24, buf, 2u);
      }
LABEL_17:

    }
LABEL_18:
    v22 = 0;
    goto LABEL_19;
  }
  if (!objc_msgSend(v9, "length"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v24 = "Empty ID passed into IMSPIQueryHasConversationWithID";
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  IMSingleObjectArray();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v14, "count"))
  {
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:", CFSTR("iMessage"), CFSTR("SMS"), 0);
    v15 = objc_claimAutoreleasedReturnValue();

    v14 = (void *)v15;
  }
  v16 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  if (objc_msgSend(v14, "count"))
  {
    v17 = 0;
    do
    {
      objc_msgSend(v16, "addObject:", v9);
      ++v17;
    }
    while (v17 < objc_msgSend(v14, "count"));
  }
  v18 = (void *)objc_msgSend(v13, "copy");

  sub_1A2153D6C(a3);
  v19 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A2163860;
  block[3] = &unk_1E471F438;
  v27 = v16;
  v28 = v14;
  v29 = v11;
  v13 = v18;
  v30 = v13;
  v20 = v14;
  v21 = v16;
  dispatch_async(v19, block);

  v22 = 1;
LABEL_19:

  return v22;
}

void sub_1A2163860(uint64_t a1)
{
  void *v2;
  BOOL v3;
  NSObject *v4;
  _QWORD v5[4];
  id v6;
  BOOL v7;

  if (qword_1EE65F8C0 != -1)
    dispatch_once(&qword_1EE65F8C0, &unk_1E4723900);
  v2 = (void *)off_1EE65F8B8(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 1);
  v3 = objc_msgSend(v2, "count") != 0;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_1A2163958;
  v5[3] = &unk_1E4721270;
  v4 = *(NSObject **)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v7 = v3;
  dispatch_async(v4, v5);

}

void *sub_1A216392C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesWithHandlesOnServicesLimit", CFSTR("IMDPersistence"));
  off_1EE65F8B8 = result;
  return result;
}

uint64_t sub_1A2163958(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

BOOL IMSPIQueryChatsWithUnplayedAudioMessages(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  _QWORD v9[4];
  id v10;
  id v11;
  uint8_t buf[16];

  v1 = a1;
  v2 = (void *)MEMORY[0x1E0C80D38];
  v3 = MEMORY[0x1E0C80D38];
  if (v1)
  {
    v4 = (void *)objc_msgSend(v1, "copy");

    sub_1A2153D6C(QOS_CLASS_DEFAULT);
    v5 = objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = sub_1A2163AB0;
    v9[3] = &unk_1E47231E0;
    v6 = v2;
    v10 = v2;
    v11 = v4;
    v7 = v4;
    dispatch_async(v5, v9);

  }
  else
  {
    if (!IMOSLoggingEnabled())
      goto LABEL_4;
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Empty results block supplied to IMSPIQueryChatsWithUnplayedAudioMessages", buf, 2u);
    }
  }

LABEL_4:
  return v1 != 0;
}

void sub_1A2163AB0(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  if (qword_1EE65F8D0 != -1)
    dispatch_once(&qword_1EE65F8D0, &unk_1E4723920);
  v2 = (void *)off_1EE65F8C8();
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A2163BA0;
  v6[3] = &unk_1E471E8B8;
  v3 = *(NSObject **)(a1 + 32);
  v4 = *(id *)(a1 + 40);
  v7 = v2;
  v8 = v4;
  v5 = v2;
  dispatch_async(v3, v6);

}

void *sub_1A2163B74()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages", CFSTR("IMDPersistence"));
  off_1EE65F8C8 = result;
  return result;
}

uint64_t sub_1A2163BA0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void IMSPIBatchFetchMessageGUIDsWithBalloonBundleID(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  unsigned int (**v8)(_QWORD, _QWORD, _QWORD);
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  NSObject *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t v28[128];
  uint8_t buf[4];
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v30 = v5;
      _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Received request to get message GUIDs for balloon bundle ID %@", buf, 0xCu);
    }

  }
  v8 = (unsigned int (**)(_QWORD, _QWORD, _QWORD))objc_msgSend(v6, "copy");

  v9 = objc_alloc_init(MEMORY[0x1E0D36108]);
  objc_msgSend(v9, "setBatchSize:", a2);
  objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K = %@"), *MEMORY[0x1E0D38288], v5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPredicate:", v10);

  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v11 = v9;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v12)
  {
    v13 = *(_QWORD *)v25;
    while (2)
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v25 != v13)
          objc_enumerationMutation(v11);
        v15 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
        objc_msgSend(v15, "guid");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = (void *)objc_msgSend(v16, "copy");

        objc_msgSend(v15, "iMessageAppData");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = (void *)objc_msgSend(v18, "copy");

        _IMSPIExtractPayloadURLFromPayloadNSData(v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = (void *)objc_msgSend(v20, "copy");

        if (((unsigned int (**)(_QWORD, void *, void *))v8)[2](v8, v17, v21))
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v22 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v30 = v5;
              _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "Stopping early for batch fetch of message records with balloon bundle ID %@", buf, 0xCu);
            }

          }
          goto LABEL_19;
        }

      }
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      if (v12)
        continue;
      break;
    }
  }
LABEL_19:

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v30 = v5;
      _os_log_impl(&dword_1A1FF4000, v23, OS_LOG_TYPE_INFO, "Finished batch fetch of message records with balloon bundle ID %@", buf, 0xCu);
    }

  }
}

void sub_1A2163F1C(uint64_t a1)
{
  const void *v2;
  IMSPIChat *v3;
  NSObject *v4;
  id v5;
  IMSPIChat *v6;
  _QWORD v7[4];
  IMSPIChat *v8;
  id v9;

  if (qword_1EE65F8E0 != -1)
    dispatch_once(&qword_1EE65F8E0, &unk_1E471BAC0);
  v2 = (const void *)off_1EE65F8D8(*(_QWORD *)(a1 + 32));
  if (v2)
    v3 = -[IMSPIChat initWithChatRecord:]([IMSPIChat alloc], "initWithChatRecord:", v2);
  else
    v3 = 0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1A2164040;
  v7[3] = &unk_1E471E8B8;
  v4 = *(NSObject **)(a1 + 40);
  v5 = *(id *)(a1 + 48);
  v8 = v3;
  v9 = v5;
  v6 = v3;
  dispatch_async(v4, v7);
  if (v2)
    CFRelease(v2);

}

void *sub_1A2164014()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDChatRecordCopyChatForGUID", CFSTR("IMDPersistence"));
  off_1EE65F8D8 = result;
  return result;
}

uint64_t sub_1A2164040(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

BOOL IMSPIQueryChatWithGroupID(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  NSObject *v12;
  id v13;
  NSObject *v14;
  _QWORD block[4];
  id v17;
  id v18;
  id v19;
  uint8_t buf[16];

  v7 = a1;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (v9)
  {
    v11 = (void *)objc_msgSend(v9, "copy");

    sub_1A2153D6C(a2);
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_1A21641BC;
    block[3] = &unk_1E471E818;
    v17 = v7;
    v18 = v8;
    v19 = v11;
    v13 = v11;
    dispatch_async(v12, block);

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "Empty result block supplied to IMSPIQueryChatWithGuid", buf, 2u);
    }

  }
  return v10 != 0;
}

void sub_1A21641BC(uint64_t a1)
{
  const __CFArray *v2;
  const __CFArray *v3;
  CFIndex Count;
  IMSPIChat *ValueAtIndex;
  NSObject *v6;
  id v7;
  IMSPIChat *v8;
  _QWORD v9[4];
  IMSPIChat *v10;
  id v11;

  if (qword_1EE65F8F0 != -1)
    dispatch_once(&qword_1EE65F8F0, &unk_1E4723940);
  v2 = (const __CFArray *)off_1EE65F8E8(*(_QWORD *)(a1 + 32));
  v3 = v2;
  if (v2 && CFArrayGetCount(v2) >= 1)
  {
    Count = CFArrayGetCount(v3);
    ValueAtIndex = (IMSPIChat *)CFArrayGetValueAtIndex(v3, Count - 1);
    if (ValueAtIndex)
      ValueAtIndex = -[IMSPIChat initWithChatRecord:]([IMSPIChat alloc], "initWithChatRecord:", ValueAtIndex);
  }
  else
  {
    ValueAtIndex = 0;
  }
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_1A216430C;
  v9[3] = &unk_1E471E8B8;
  v6 = *(NSObject **)(a1 + 40);
  v7 = *(id *)(a1 + 48);
  v10 = ValueAtIndex;
  v11 = v7;
  v8 = ValueAtIndex;
  dispatch_async(v6, v9);
  if (v3)
    CFRelease(v3);

}

void *sub_1A21642E0()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDChatRecordCopyChatsWithGroupID", CFSTR("IMDPersistence"));
  off_1EE65F8E8 = result;
  return result;
}

uint64_t sub_1A216430C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t IMSPIQueryMessagesWithAttributes(int a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  return IMSPIQueryMessagesWithAttributesAndQOS(a1, a2, a3, QOS_CLASS_DEFAULT, a5, a4);
}

uint64_t IMSPIQueryMessagesWithAttributesAndQOS(int a1, uint64_t a2, uint64_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  const char *v18;
  _QWORD block[4];
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  dispatch_qos_class_t v25;
  int v26;
  uint8_t buf[16];

  v11 = a5;
  v12 = a6;
  v13 = v12;
  if (!v11 || !v12)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v18 = "Empty results block or queue supplied to IMSPIQueryUnreadMessagesWithIDs";
LABEL_11:
        _os_log_impl(&dword_1A1FF4000, v17, OS_LOG_TYPE_INFO, v18, buf, 2u);
      }
LABEL_12:

    }
LABEL_13:
    v16 = 0;
    goto LABEL_14;
  }
  if (!a2)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v18 = "0 limit supplied, no query issued to IMSPIQueryUnreadMessagesWithIDs";
        goto LABEL_11;
      }
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  v14 = (void *)objc_msgSend(v12, "copy");

  sub_1A2153D6C(a4);
  v15 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A21644E0;
  block[3] = &unk_1E4723988;
  v23 = a2;
  v24 = a3;
  v25 = a4;
  v26 = a1;
  v21 = v11;
  v13 = v14;
  v22 = v13;
  dispatch_async(v15, block);

  v16 = 1;
LABEL_14:

  return v16;
}

void sub_1A21644E0(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  id v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  _QWORD v12[4];
  int v13;

  if (qword_1EE65F900 != -1)
    dispatch_once(&qword_1EE65F900, &unk_1E471C470);
  v2 = (void *)off_1EE65F8F8(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  sub_1A215FF68(v2, *(_DWORD *)(a1 + 64));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = MEMORY[0x1E0C809B0];
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_1A2164630;
  v12[3] = &unk_1E4723960;
  v13 = *(_DWORD *)(a1 + 68);
  objc_msgSend(v3, "__imArrayByFilteringWithBlock:", v12);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  block[0] = v4;
  block[1] = 3221225472;
  block[2] = sub_1A2164788;
  block[3] = &unk_1E471E8B8;
  v6 = *(NSObject **)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v10 = v5;
  v11 = v7;
  v8 = v5;
  dispatch_async(v6, block);

}

void *sub_1A2164604()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessagesDataDetectionResults", CFSTR("IMDPersistence"));
  off_1EE65F8F8 = result;
  return result;
}

uint64_t sub_1A2164630(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  objc_msgSend(a2, "attributedText");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  v5 = *(_DWORD *)(a1 + 32);
  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(v3, "attribute:existsInRange:", *MEMORY[0x1E0D365F0], 0, objc_msgSend(v3, "length"));
    v5 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v6 = 0;
  }
  v7 = (_QWORD *)MEMORY[0x1E0D362D8];
  if ((v5 & 4) != 0)
  {
    v6 = v6 | objc_msgSend(v4, "attribute:existsInRange:", *MEMORY[0x1E0D362D8], 0, objc_msgSend(v4, "length"));
    v5 = *(_DWORD *)(a1 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 8) == 0)
        goto LABEL_7;
LABEL_12:
      v6 = v6 | objc_msgSend(v4, "attribute:existsInRange:", *MEMORY[0x1E0D36330], 0, objc_msgSend(v4, "length"));
      if ((*(_DWORD *)(a1 + 32) & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v6 = v6 | objc_msgSend(v4, "attribute:existsInRange:", *v7, 0, objc_msgSend(v4, "length"));
  v5 = *(_DWORD *)(a1 + 32);
  if ((v5 & 8) != 0)
    goto LABEL_12;
LABEL_7:
  if ((v5 & 0x10) != 0)
LABEL_8:
    v6 = v6 | objc_msgSend(v4, "attribute:existsInRange:", *MEMORY[0x1E0D363F0], 0, objc_msgSend(v4, "length"));
LABEL_9:

  return v6;
}

uint64_t sub_1A2164788(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    v3 = *(_QWORD *)(a1 + 32);
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

void IMSPIRemoveAttachmentGUIDFromSyndication(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v4 = 138412290;
      v5 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Received request to hide syndication for attachment GUID %@", (uint8_t *)&v4, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0D360E8], "synchronousDatabase");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "updateAttachmentSyndicationRanges:shouldHideFromSyndication:", v1, 1);

}

void IMSPIUnhideSyndicationForAttachmentGUID(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v4 = 138412290;
      v5 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Received request to unhide syndication for attachment GUID %@", (uint8_t *)&v4, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0D360E8], "synchronousDatabase");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "updateAttachmentSyndicationRanges:shouldHideFromSyndication:", v1, 0);

}

void IMSPIRemoveMessageGUIDFromSyndication(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v4 = 138412290;
      v5 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Received request to hide syndication for message GUID: %@", (uint8_t *)&v4, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0D360E8], "database");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "updateMessageSyndicationRanges:shouldHideFromSyndication:", v1, 1);

}

void IMSPIUnhideSyndicationForMessageGUID(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v4 = 138412290;
      v5 = v1;
      _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Received request to hide syndication for message GUID: %@", (uint8_t *)&v4, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0D360E8], "database");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "updateMessageSyndicationRanges:shouldHideFromSyndication:", v1, 0);

}

void IMSPIUpdatePluginMessageWithGUID(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint8_t buf[4];
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v15 = v3;
      _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Received request to update plugin payload data for message GUID: %@", buf, 0xCu);
    }

  }
  +[IMDaemonController sharedController](IMDaemonController, "sharedController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "multiplexedConnectionWithLabel:capabilities:context:", CFSTR("IMCoreSPI_UpdatePluginMessageWithGUID"), 8708, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "waitForSetup");
  objc_msgSend(v7, "synchronousRemoteProxy");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_1A2164D48;
  v11[3] = &unk_1E47239B0;
  v12 = v3;
  v13 = v7;
  v9 = v7;
  v10 = v3;
  objc_msgSend(v8, "updatePluginMessageWithGUID:newPayloadData:completion:", v10, v4, v11);

}

uint64_t sub_1A2164D48(uint64_t a1, int a2)
{
  NSObject *v4;
  const __CFString *v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  __int16 v10;
  const __CFString *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = CFSTR("NO");
      v6 = *(_QWORD *)(a1 + 32);
      if (a2)
        v5 = CFSTR("YES");
      v8 = 138412546;
      v9 = v6;
      v10 = 2112;
      v11 = v5;
      _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Finished updating plugin payload data for message with GUID %@. success: %@", (uint8_t *)&v8, 0x16u);
    }

  }
  return objc_msgSend(*(id *)(a1 + 40), "invalidate");
}

id IMSPILastAddressedHandleForChatWithGUID(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  +[IMDaemonController sharedController](IMDaemonController, "sharedController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "multiplexedConnectionWithLabel:capabilities:context:", CFSTR("IMCoreSPI_LastAddressedHandleForChatWithGUID"), 516, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "waitForSetup");
  if (!v1)
  {
    v5 = 0;
    goto LABEL_5;
  }
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "existingChatWithGUID:", v1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  objc_msgSend(v5, "lastAddressedHandleID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_6:
  objc_msgSend(v3, "invalidate");

  return v6;
}

void IMSPIResetChatRegistry()
{
  NSObject *v0;
  void *v1;
  uint8_t v2[16];

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v0 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v2 = 0;
      _os_log_impl(&dword_1A1FF4000, v0, OS_LOG_TYPE_INFO, "IMSPIResetChatRegistry", v2, 2u);
    }

  }
  +[IMChatRegistry sharedRegistry](IMChatRegistry, "sharedRegistry");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_resetChatRegistry");

}

uint64_t IMCopyIDForPhoneNumber(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;

  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "length"))
  {
    IMInternationalForPhoneNumberWithOptions();
    v5 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

uint64_t IMCopyIDForEmailAddress(void *a1)
{
  objc_msgSend(a1, "lowercaseString");
  return objc_claimAutoreleasedReturnValue();
}

uint64_t IMSPIMessageSummary()
{
  return IMSharedMessageSummaryCreate();
}

BOOL sub_1A2165058(uint64_t a1, void *a2, _QWORD *a3, _QWORD *a4, BOOL *a5, BOOL *a6, _QWORD *a7)
{
  id v12;
  const void *v13;
  const __CFString *v14;
  id v15;
  NSObject *v16;
  id v17;
  int v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v12 = a2;
  v13 = (const void *)IMDAttachmentRecordCopyAttachmentForGUID();
  if (v13)
  {
    if (a7)
      *a7 = 0;
    if (a3)
    {
      v14 = (const __CFString *)IMDAttachmentRecordCopyFilename();
      if (CFStringGetLength(v14) < 1)
      {
        v15 = 0;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v14, 0);
        v15 = (id)objc_claimAutoreleasedReturnValue();
      }
      *a3 = v15;
      if (v14)
        CFRelease(v14);
    }
    if (a4)
    {
      v17 = objc_retainAutorelease((id)IMDAttachmentRecordCopyUTIType());
      *a4 = v17;
      if (v17)
        CFRelease(v17);
    }
    if (a5)
      *a5 = IMDAttachmentRecordIsSticker() != 0;
    if (a6)
      *a6 = IMDAttachmentRecordGetIsOutgoing() != 0;
    CFRelease(v13);
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      v19 = 138412290;
      v20 = v12;
      _os_log_impl(&dword_1A1FF4000, v16, OS_LOG_TYPE_INFO, "Couldn't find attachment with guid %@", (uint8_t *)&v19, 0xCu);
    }

  }
  return v13 != 0;
}

uint64_t IMSPISimulateMessageReceive(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;

  v7 = a4;
  v8 = a3;
  v9 = a2;
  v10 = a1;
  sub_1A20AB488();
  +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "simulateMessageReceive:serviceName:groupID:handles:sender:", v10, v8, 0, v9, v7);

  return 1;
}

void sub_1A21652CC(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;

  v6 = a3;
  v7 = a4;
  v8 = objc_msgSend(a1, "length");
  v9 = *MEMORY[0x1E0D36430];
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_1A21653A0;
  v12[3] = &unk_1E4723A18;
  v13 = v6;
  v14 = v7;
  v10 = v7;
  v11 = v6;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v9, 0, v8, 0, v12);

}

void sub_1A21653A0(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  BOOL v9;

  v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "isAdaptiveImageGlyph"))
      v9 = a3 >= a3 + a4;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
        ++a3;
        --a4;
      }
      while (a4);
    }

  }
}

id sub_1A2165478(void *a1, uint64_t a2, void *a3, void *a4, _QWORD *a5)
{
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v35;
  _QWORD v36[4];
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;

  v7 = a3;
  v8 = a4;
  v9 = objc_msgSend(a1, "length");
  v10 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v11 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v12 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v13 = *MEMORY[0x1E0D36430];
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 3221225472;
  v36[2] = sub_1A2165700;
  v36[3] = &unk_1E4723A40;
  v33 = v7;
  v40 = v33;
  v30 = v12;
  v37 = v30;
  v32 = v8;
  v41 = v32;
  v14 = v10;
  v38 = v14;
  v15 = v11;
  v39 = v15;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v13, 0, v9, 0, v36);
  v35 = (void *)objc_msgSend(a1, "mutableCopy");
  v16 = objc_msgSend(v14, "count") - 1;
  if (v16 >= 0)
  {
    do
    {
      objc_msgSend(v14, "objectAtIndexedSubscript:", v16, v30, v32, v33);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v17, "integerValue");

      objc_msgSend(v15, "objectAtIndexedSubscript:", v16);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(a1, "attributesAtIndex:effectiveRange:", v18, 0);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = v14;
      v22 = a1;
      v23 = (void *)objc_msgSend(v20, "mutableCopy");
      objc_msgSend(v23, "removeObjectForKey:", v13);
      v24 = v13;
      v25 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:attributes:", v19, v23);
      objc_msgSend(v35, "replaceCharactersInRange:withAttributedString:", v18, 1, v25);

      v13 = v24;
      a1 = v22;
      v14 = v21;

      --v16;
    }
    while (v16 != -1);
  }
  v26 = (void *)objc_msgSend(v35, "copy", v30);
  objc_msgSend(v31, "allObjects");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = v27;
  if (a5)
    *a5 = objc_retainAutorelease(v27);

  return v26;
}

void sub_1A2165700(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  char isKindOfClass;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v14 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v8 = v14;
  if ((isKindOfClass & 1) != 0)
  {
    v9 = v14;
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "isAdaptiveImageGlyph"))
    {
      objc_msgSend(*(id *)(a1 + 32), "addObject:", v9);
      (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (a3 < a3 + a4)
      {
        do
        {
          v12 = *(void **)(a1 + 40);
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a3);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "addObject:", v13);

          objc_msgSend(*(id *)(a1 + 48), "addObject:", v11);
          ++a3;
          --a4;
        }
        while (a4);
      }

    }
    v8 = v14;
  }

}

void *sub_1A2165820()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDHandleRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F908 = result;
  return result;
}

void *sub_1A216584C()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("_IMDAttachmentRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F918 = result;
  return result;
}

void *sub_1A2165878()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDCreateIMItemFromIMDMessageRecordRefWithAccountLookup", CFSTR("IMDPersistence"));
  off_1EE65F928 = result;
  return result;
}

void *sub_1A21658A4()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyChats", CFSTR("IMDPersistence"));
  off_1EE65F938 = result;
  return result;
}

void *sub_1A21658D0()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("_IMDChatRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F948 = result;
  return result;
}

void *sub_1A21658FC()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyLastReadMessageForChatIdentifier", CFSTR("IMDPersistence"));
  off_1EE65F958 = result;
  return result;
}

void *sub_1A2165928()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordBulkCopy", CFSTR("IMDPersistence"));
  off_1EE65F968 = result;
  return result;
}

void sub_1A2165954(uint64_t a1, void *a2)
{
  id v3;

  objc_msgSend(a2, "allValuesSortedByGUIDKeyWithBackupOrder:", *(_QWORD *)(a1 + 32));
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "addAttachmentsFromFilePaths:", v3);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));

}

void sub_1A21659A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  +[IMBalloonPluginManager sharedInstance](IMBalloonPluginManager, "sharedInstance");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "dataSourceForPluginPayload:", *(_QWORD *)(a1 + 32));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1A2165A00(id *a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  dispatch_time_t v10;
  id v11;
  NSObject *v12;
  _QWORD block[4];
  id v14;
  id v15;
  id v16;
  _QWORD aBlock[4];
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint8_t buf[4];
  id v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(a1[4], "count") || a1[5] || IMIsRunningInGameCenter())
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Have non-zero attachments to send, ensuring we have transfer capability", buf, 2u);
      }

    }
    sub_1A20AB510();
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }

    }
    sub_1A20AB4CC();
  }
  sub_1A2159298(a1[6], a1[7], a1[8], a1[9], 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    if (objc_msgSend(a1[6], "length"))
    {
      +[IMServiceImpl serviceWithInternalName:](IMServiceImpl, "serviceWithInternalName:", a1[6]);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "_targetToService:newComposition:", v4, 1);

    }
    else
    {
      objc_msgSend(v3, "refreshServiceForSending");
    }
    v7 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = sub_1A2165E04;
    aBlock[3] = &unk_1E4723AF0;
    v18 = a1[4];
    v8 = v3;
    v19 = v8;
    v20 = a1[10];
    v21 = a1[11];
    v22 = a1[12];
    v23 = a1[13];
    v24 = a1[14];
    v25 = a1[5];
    v26 = a1[15];
    v27 = a1[16];
    v9 = _Block_copy(aBlock);
    v10 = dispatch_time(0, 100000000);
    block[0] = v7;
    block[1] = 3221225472;
    block[2] = sub_1A216668C;
    block[3] = &unk_1E471E818;
    v14 = v8;
    v15 = a1[6];
    v16 = v9;
    v11 = v9;
    dispatch_after(v10, MEMORY[0x1E0C80D38], block);

  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v6 = a1[7];
        *(_DWORD *)buf = 138412290;
        v29 = v6;
        _os_log_impl(&dword_1A1FF4000, v5, OS_LOG_TYPE_INFO, "Cannot get chat for destinations: %@", buf, 0xCu);
      }

    }
    sub_1A20AB554();
  }

}

void sub_1A2165E04(void **a1)
{
  id v2;

  sub_1A215CBB8(a1[4]);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  sub_1A2165E60(a1[5], a1[6], a1[7], a1[8], a1[9], v2, a1[10], a1[11], a1[12], a1[13]);
  sub_1A20AB554();

}

BOOL sub_1A2165E60(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  id v17;
  int v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  const __CFString *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  BOOL v45;
  IMMessage *v46;
  IMMessage *v47;
  uint64_t v48;
  IMMessage *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  NSObject *v54;
  void *v55;
  void *v56;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void (**v63)(id, void *);
  id v64;
  id v65;
  __CFString *v66;
  void *v67;
  id obj;
  id v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint8_t v74[128];
  uint8_t buf[4];
  id v76;
  __int16 v77;
  void *v78;
  __int16 v79;
  id v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v17 = a1;
  v66 = a2;
  v64 = a3;
  v58 = a4;
  v65 = a5;
  v61 = a6;
  v59 = a7;
  v60 = a8;
  v62 = a9;
  v63 = a10;
  v18 = IMOSLoggingEnabled();
  v67 = v17;
  if (v17)
  {
    if (v18)
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        if (v62)
          objc_msgSend(v62, "timeIntervalSinceNow");
        else
          v20 = 0;
        *(_DWORD *)buf = 138412802;
        v76 = v17;
        v77 = 2048;
        v78 = v20;
        v79 = 2112;
        v80 = v65;
        _os_log_impl(&dword_1A1FF4000, v19, OS_LOG_TYPE_INFO, "About to send message for chat: %@ time delay: %lf associatedMessageGUID: %@", buf, 0x20u);
      }

    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v17, "participants");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v76 = v23;
        _os_log_impl(&dword_1A1FF4000, v22, OS_LOG_TYPE_INFO, "About to send message to: %@", buf, 0xCu);

      }
    }
    v69 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v72 = 0u;
    v73 = 0u;
    v70 = 0u;
    v71 = 0u;
    obj = v61;
    v24 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v70, v74, 16);
    if (v24)
    {
      v25 = *(_QWORD *)v71;
      do
      {
        for (i = 0; i != v24; ++i)
        {
          if (*(_QWORD *)v71 != v25)
            objc_enumerationMutation(obj);
          v27 = *(void **)(*((_QWORD *)&v70 + 1) + 8 * i);
          objc_msgSend(v27, "fileURL");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v28);
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "setIssueSandboxEstensionsForTransfers:", 1);

          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v31, "createNewOutgoingTransferWithLocalFileURL:", v29);
          v32 = (void *)objc_claimAutoreleasedReturnValue();

          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v33, "setIssueSandboxEstensionsForTransfers:", 0);

          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "transferForGUID:", v32);
          v35 = (void *)objc_claimAutoreleasedReturnValue();

          if (objc_msgSend(v27, "isSensitive"))
            objc_msgSend(v35, "setCommSafetySensitive:", 2);
          objc_msgSend(v69, "addObject:", v32);
          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v36, "registerTransferWithDaemon:", v32);

        }
        v24 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v70, v74, 16);
      }
      while (v24);
    }

    v37 = objc_alloc(MEMORY[0x1E0CB3498]);
    if (-[__CFString length](v66, "length"))
      v38 = v66;
    else
      v38 = &stru_1E4725068;
    v39 = (void *)objc_msgSend(v37, "initWithString:", v38);
    objc_msgSend(v39, "__im_attributedStringByAppendingFileTransfers:", v69);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "__im_attributedStringByAssigningMessagePartNumbers");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = v41;
    if (v64)
    {
      v43 = (void *)objc_msgSend(v41, "mutableCopy");
      objc_msgSend(v43, "appendAttributedString:", v64);
      v44 = objc_msgSend(v43, "copy");

      v42 = (void *)v44;
    }
    v45 = objc_msgSend(v65, "length") == 0;
    v46 = [IMMessage alloc];
    v47 = v46;
    if (v45)
    {
      if (!v62)
      {
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        v49 = -[IMMessage initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:scheduleType:scheduleState:](v47, "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:scheduleType:scheduleState:", 0, v51, v42, 0, v69, 5, 0, v58, 0, v59, v60, 0, 0, 0, 0);

        goto LABEL_39;
      }
      v48 = -[IMMessage initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:scheduleType:scheduleState:](v46, "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:scheduleType:scheduleState:", 0, v62, v42, 0, v69, 5, 0, v58, 0, v59, v60, 0, 0, 1, 2);
    }
    else
    {
      if (!v62)
      {
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        v49 = -[IMMessage _initWithSender:time:timeRead:timeDelivered:timePlayed:plainText:text:messageSubject:fileTransferGUIDs:flags:error:guid:messageID:subject:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:associatedMessageGUID:associatedMessageType:associatedMessageRange:associatedMessageEmoji:messageSummaryInfo:threadIdentifier:dateEdited:scheduleType:scheduleState:](v47, "_initWithSender:time:timeRead:timeDelivered:timePlayed:plainText:text:messageSubject:fileTransferGUIDs:flags:error:guid:messageID:subject:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:associatedMessageGUID:associatedMessageType:associatedMessageRange:associatedMessageEmoji:messageSummaryInfo:threadIdentifier:dateEdited:scheduleType:scheduleState:", 0, v50, 0, 0, 0, 0, v42, 0, v69, 5, 0, v58, 0, 0,
                v59,
                v60,
                0,
                0,
                v65,
                2,
                0,
                0x7FFFFFFFFFFFFFFFLL,
                0,
                0,
                0,
                0,
                0,
                0);

        goto LABEL_39;
      }
      v48 = -[IMMessage _initWithSender:time:timeRead:timeDelivered:timePlayed:plainText:text:messageSubject:fileTransferGUIDs:flags:error:guid:messageID:subject:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:associatedMessageGUID:associatedMessageType:associatedMessageRange:associatedMessageEmoji:messageSummaryInfo:threadIdentifier:dateEdited:scheduleType:scheduleState:](v46, "_initWithSender:time:timeRead:timeDelivered:timePlayed:plainText:text:messageSubject:fileTransferGUIDs:flags:error:guid:messageID:subject:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:associatedMessageGUID:associatedMessageType:associatedMessageRange:associatedMessageEmoji:messageSummaryInfo:threadIdentifier:dateEdited:scheduleType:scheduleState:", 0, v62, 0, 0, 0, 0, v42, 0, v69, 5, 0, v58, 0, 0,
              v59,
              v60,
              0,
              0,
              v65,
              2,
              0,
              0x7FFFFFFFFFFFFFFFLL,
              0,
              0,
              0,
              0,
              1,
              2);
    }
    v49 = (IMMessage *)v48;
LABEL_39:
    +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "setIssueSandboxEstensionsForTransfers:", 1);

    objc_msgSend(v67, "sendMessage:", v49);
    +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "setIssueSandboxEstensionsForTransfers:", 0);

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v54 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
      {
        -[IMMessage guid](v49, "guid");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v76 = v55;
        v77 = 2112;
        v78 = v67;
        _os_log_impl(&dword_1A1FF4000, v54, OS_LOG_TYPE_INFO, "Sent message with guid: %@ to chat: %@", buf, 0x16u);

      }
    }
    if (v63)
    {
      -[IMMessage guid](v49, "guid");
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      v63[2](v63, v56);

    }
    goto LABEL_46;
  }
  if (v18)
  {
    OSLogHandleForIMFoundationCategory();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v21, OS_LOG_TYPE_INFO, "Cannot send message without chat", buf, 2u);
    }

  }
LABEL_46:

  return v67 != 0;
}

void sub_1A216662C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A2165FFCLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A216668C(id *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  dispatch_time_t v8;
  NSObject *v9;
  uint8_t v10[16];
  uint8_t buf[16];

  objc_msgSend(a1[4], "account");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[IMService iMessageService](IMServiceImpl, "iMessageService");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v3 == (void *)v4)
  {

  }
  else
  {
    v5 = (void *)v4;
    v6 = objc_msgSend(a1[5], "length");

    if (!v6)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v7 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v10 = 0;
          _os_log_impl(&dword_1A1FF4000, v7, OS_LOG_TYPE_INFO, "Waiting for registration check before sending", v10, 2u);
        }

      }
      v8 = dispatch_time(0, 4000000000);
      dispatch_after(v8, MEMORY[0x1E0C80D38], a1[6]);
      goto LABEL_14;
    }
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_INFO, "Cache hit, send now", buf, 2u);
    }

  }
  (*((void (**)(void))a1[6] + 2))();
LABEL_14:

}

void sub_1A2166814(id *a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  dispatch_time_t v8;
  id v9;
  NSObject *v10;
  id v11;
  NSObject *v12;
  _QWORD block[4];
  id v14;
  id v15;
  _QWORD aBlock[4];
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint8_t buf[4];
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(a1[4], "count") || a1[5] || IMIsRunningInGameCenter())
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v2, OS_LOG_TYPE_INFO, "Have non-zero attachments to receive, ensuring we have transfer capability", buf, 2u);
      }

    }
    sub_1A20AB510();
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v12, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }

    }
    sub_1A20AB4CC();
  }
  sub_1A2159298(a1[6], a1[7], a1[8], a1[9], 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "refreshServiceForSending");
    v5 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = sub_1A2166BAC;
    aBlock[3] = &unk_1E4723B40;
    v17 = a1[4];
    v6 = v4;
    v18 = v6;
    v19 = a1[10];
    v20 = a1[11];
    v21 = a1[12];
    v22 = a1[13];
    v23 = a1[14];
    v24 = a1[5];
    v25 = a1[15];
    v7 = _Block_copy(aBlock);
    v8 = dispatch_time(0, 100000000);
    block[0] = v5;
    block[1] = 3221225472;
    block[2] = sub_1A2167244;
    block[3] = &unk_1E47231E0;
    v14 = v6;
    v15 = v7;
    v9 = v7;
    dispatch_after(v8, MEMORY[0x1E0C80D38], block);

  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        v11 = a1[7];
        *(_DWORD *)buf = 138412290;
        v27 = v11;
        _os_log_impl(&dword_1A1FF4000, v10, OS_LOG_TYPE_INFO, "Cannot get chat for destinations: %@", buf, 0xCu);
      }

    }
    sub_1A20AB554();
  }

}

void sub_1A2166BAC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  const __CFString *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  NSObject *v34;
  void *v35;
  IMMessage *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  NSObject *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void (**v51)(id, void *);
  __CFString *v52;
  void *v53;
  id v54;
  id obj;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint8_t v61[4];
  void *v62;
  __int16 v63;
  void *v64;
  uint8_t buf[4];
  id v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  sub_1A215CBB8(*(void **)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(void **)(a1 + 40);
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(a1 + 56);
  v6 = *(void **)(a1 + 64);
  v7 = *(void **)(a1 + 72);
  v8 = *(void **)(a1 + 80);
  v10 = *(void **)(a1 + 88);
  v9 = *(void **)(a1 + 96);
  v11 = v3;
  v50 = v4;
  v52 = v5;
  v46 = v6;
  v47 = v7;
  v54 = v2;
  v48 = v8;
  v49 = v10;
  v51 = v9;
  v53 = v11;
  if (v11)
  {
    objc_msgSend(v11, "account");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "imHandleWithID:", v50);
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v66 = v11;
        _os_log_impl(&dword_1A1FF4000, v13, OS_LOG_TYPE_INFO, "About to insert a received message for chat: %@", buf, 0xCu);
      }

    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v66 = v45;
        _os_log_impl(&dword_1A1FF4000, v14, OS_LOG_TYPE_INFO, "About to insert a received message from handle: %@", buf, 0xCu);
      }

    }
    v56 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    obj = v54;
    v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v57, buf, 16);
    if (v15)
    {
      v16 = *(_QWORD *)v58;
      do
      {
        for (i = 0; i != v15; ++i)
        {
          if (*(_QWORD *)v58 != v16)
            objc_enumerationMutation(obj);
          v18 = *(void **)(*((_QWORD *)&v57 + 1) + 8 * i);
          objc_msgSend(v18, "fileURL");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v19);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "setIssueSandboxEstensionsForTransfers:", 1);

          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "createNewOutgoingTransferWithLocalFileURL:", v20);
          v23 = (void *)objc_claimAutoreleasedReturnValue();

          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "setIssueSandboxEstensionsForTransfers:", 0);

          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "transferForGUID:", v23);
          v26 = (void *)objc_claimAutoreleasedReturnValue();

          if (objc_msgSend(v18, "isSensitive"))
            objc_msgSend(v26, "setCommSafetySensitive:", 2);
          objc_msgSend(v56, "addObject:", v23);
          +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "registerTransferWithDaemon:", v23);

        }
        v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v57, buf, 16);
      }
      while (v15);
    }

    v28 = objc_alloc(MEMORY[0x1E0CB3498]);
    if (-[__CFString length](v52, "length"))
      v29 = v52;
    else
      v29 = &stru_1E4725068;
    v30 = (void *)objc_msgSend(v28, "initWithString:", v29);
    objc_msgSend(v30, "__im_attributedStringByAppendingFileTransfers:", v56);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "__im_attributedStringByAssigningMessagePartNumbers");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    if (v47)
    {
      v33 = v47;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v33 = (id)objc_claimAutoreleasedReturnValue();
    }
    v35 = v33;
    v36 = -[IMMessage initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:]([IMMessage alloc], "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:", v45, v33, v32, 0, v56, 1, 0, v46, 0, v48, v49, 0, 0);
    +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "setIssueSandboxEstensionsForTransfers:", 1);

    +[IMDaemonController sharedInstance](IMDaemonController, "sharedInstance");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    -[IMMessage _imMessageItem](v36, "_imMessageItem");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "chatIdentifier");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v38, "insertReceivedMessage:forChat:style:serviceName:", v39, v40, objc_msgSend(v53, "chatStyle"), CFSTR("iMessage"));

    +[IMFileTransferCenter sharedInstance](IMFileTransferCenter, "sharedInstance");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "setIssueSandboxEstensionsForTransfers:", 0);

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v42 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
      {
        -[IMMessage guid](v36, "guid");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v61 = 138412546;
        v62 = v43;
        v63 = 2112;
        v64 = v53;
        _os_log_impl(&dword_1A1FF4000, v42, OS_LOG_TYPE_INFO, "Inserted received message with guid: %@ to chat: %@", v61, 0x16u);

      }
    }
    if (v51)
    {
      -[IMMessage guid](v36, "guid");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      v51[2](v51, v44);

    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A1FF4000, v34, OS_LOG_TYPE_INFO, "Cannot receive message without chat", buf, 2u);
    }

  }
  sub_1A20AB554();

}

void sub_1A2167244(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  int v5;
  NSObject *v6;
  dispatch_time_t v7;
  NSObject *v8;
  uint8_t v9[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "account");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[IMService iMessageService](IMServiceImpl, "iMessageService");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = IMOSLoggingEnabled();
  if (v3 == v4)
  {
    if (v5)
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A1FF4000, v8, OS_LOG_TYPE_INFO, "Cache hit, send now", buf, 2u);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    if (v5)
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1A1FF4000, v6, OS_LOG_TYPE_INFO, "Waiting for registration check before sending", v9, 2u);
      }

    }
    v7 = dispatch_time(0, 4000000000);
    dispatch_after(v7, MEMORY[0x1E0C80D38], *(dispatch_block_t *)(a1 + 40));
  }

}

void sub_1A21673B4(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  IMSPIOutgoingAttachmentObject *v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = -[IMSPIOutgoingAttachmentObject initWithFileURL:isSensitive:]([IMSPIOutgoingAttachmentObject alloc], "initWithFileURL:isSensitive:", v3, 0);

  objc_msgSend(v2, "addObject:", v4);
}

void sub_1A216741C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  _IMSPIMessageFromRecord(*(_QWORD *)(a1 + 32), 0, 0, *(void **)(a1 + 40), *(dispatch_qos_class_t *)(a1 + 56));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void *sub_1A2167464()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("IMDMessageRecordCopyMessageForGUID", CFSTR("IMDPersistence"));
  off_1EE65F978 = result;
  return result;
}

void sub_1A2167490(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  const void *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  _IMSPIMessageFromRecord(*(_QWORD *)(a1 + 56), 1, *(unsigned __int8 *)(a1 + 68), *(void **)(a1 + 32), *(dispatch_qos_class_t *)(a1 + 64));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(NSObject **)(a1 + 40);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1A216754C;
  v6[3] = &unk_1E47231E0;
  v4 = v2;
  v7 = v4;
  v8 = *(id *)(a1 + 48);
  dispatch_async(v3, v6);
  v5 = *(const void **)(a1 + 56);
  if (v5)
    CFRelease(v5);

}

void sub_1A216754C(uint64_t a1)
{
  id v2;

  if (*(_QWORD *)(a1 + 32))
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:");
  else
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

uint64_t sub_1A21675AC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isRead") ^ 1;
}

BOOL IMMomentShareCacheErrorIsPermanent(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _BOOL8 v4;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "domain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v3, "isEqualToString:", CFSTR("IMMomentShareCacheErrorDomain")))
      v4 = objc_msgSend(v2, "code") == -1001;
    else
      v4 = 0;

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_1A216771C(uint64_t a1)
{
  void *v2;
  _QWORD block[4];
  id v4;

  objc_msgSend(sub_1A21677AC(), "sharedMomentSharePhotoLibrary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "registerChangeObserver:", *(_QWORD *)(a1 + 32));

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A2167864;
  block[3] = &unk_1E471E348;
  v4 = *(id *)(a1 + 32);
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

id sub_1A21677AC()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1EE65F1E8;
  v7 = qword_1EE65F1E8;
  if (!qword_1EE65F1E8)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = sub_1A2168B98;
    v3[3] = &unk_1E4720028;
    v3[4] = &v4;
    sub_1A2168B98((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A216784C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A2167864(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 32) = 1;
  return result;
}

void sub_1A21678B4()
{
  IMMomentShareCache *v0;
  void *v1;
  void *v2;
  void *v3;
  NSObject *v4;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  if ((IMIsRunningInImagent() & 1) != 0
    || (IMIsRunningInIMDPersistenceAgent() & 1) != 0
    || IMIsRunningInMessagesUIProcess())
  {
    v0 = objc_alloc_init(IMMomentShareCache);
    v1 = (void *)qword_1ECF12568;
    qword_1ECF12568 = (uint64_t)v0;

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "bundleIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        v5 = 138412290;
        v6 = v3;
        _os_log_impl(&dword_1A1FF4000, v4, OS_LOG_TYPE_INFO, "Not allowing IMMomentShareCache to be created because we're running in %@.", (uint8_t *)&v5, 0xCu);
      }

    }
  }
}

id sub_1A2167C6C()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1EE65F988;
  v7 = qword_1EE65F988;
  if (!qword_1EE65F988)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = sub_1A2168C90;
    v3[3] = &unk_1E4720028;
    v3[4] = &v4;
    sub_1A2168C90((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A2167D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A2167D24(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD block[5];
  id v11;
  id v12;
  id v13;
  id v14;

  v5 = a2;
  v6 = a3;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1A2167DF8;
  block[3] = &unk_1E4721330;
  v7 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v11 = v7;
  v12 = v5;
  v13 = v6;
  v14 = *(id *)(a1 + 48);
  v8 = v6;
  v9 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

uint64_t sub_1A2167DF8(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setObject:forKeyedSubscript:", 0, *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "_processFetchedMomentShare:forURLString:error:completionHandlers:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

id sub_1A2167F38(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v8;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v8 = *MEMORY[0x1E0CB3388];
    v9[0] = v3;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v9, &v8, 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("IMMomentShareCacheErrorDomain"), a1, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_1A21683D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1A216842C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1A21686D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1A21686F0(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc((Class)sub_1A2168D8C()), "initWithFirst:second:", v1, 0);

  return v2;
}

id sub_1A2168730(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc((Class)sub_1A2168D8C()), "initWithFirst:second:", 0, v1);

  return v2;
}

uint64_t sub_1A2168770(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_1A2168800(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, void *);
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  const __CFString *v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = MEMORY[0x1E0C809B0];
  v11 = 3221225472;
  v12 = sub_1A216898C;
  v13 = &unk_1E4723CD0;
  v4 = *(void **)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = v4;
  v5 = v2;
  v16 = v5;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", &v10);

  if (objc_msgSend(v5, "count", v10, v11, v12, v13, v14))
  {
    IMLogHandleForCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      sub_1A21990E8(v6);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(a1 + 32);
    v17 = CFSTR("IMMomentShareCacheNotificationURLStringsUserInfoKey");
    v18[0] = v5;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, &v17, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "postNotificationName:object:userInfo:", CFSTR("IMMomentShareCacheDidChangeNotification"), v8, v9);

  }
}

void sub_1A216898C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "objectForKeyedSubscript:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "first");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 40), "changeDetailsForObject:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      objc_msgSend(*(id *)(a1 + 48), "addObject:", v3);
      v7 = objc_msgSend(v6, "objectWasDeleted");
      IMLogHandleForCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (v7)
      {
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v5, "uuid");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = 138543618;
          v15 = v10;
          v16 = 2112;
          v17 = v3;
          _os_log_impl(&dword_1A1FF4000, v9, OS_LOG_TYPE_DEFAULT, "Moment share was deleted: %{public}@, URL: %@", (uint8_t *)&v14, 0x16u);

        }
        sub_1A2167F38(-1001, 0);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        sub_1A2168730(v11);
        v12 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
          sub_1A2199128(v5, (uint64_t)v3, v9);

        objc_msgSend(v6, "objectAfterChanges");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        sub_1A21686F0(v11);
        v12 = objc_claimAutoreleasedReturnValue();
      }
      v13 = (void *)v12;
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setObject:forKeyedSubscript:", v12, v3);

    }
  }

}

Class sub_1A2168B98(uint64_t a1)
{
  Class result;

  sub_1A2168BEC();
  result = objc_getClass("PHPhotoLibrary");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_1A21991B4();
  qword_1EE65F1E8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A2168BEC()
{
  void *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = 0;
  if (!qword_1EE65F1F8)
  {
    v1 = xmmword_1E4723CF0;
    v2 = 0;
    qword_1EE65F1F8 = _sl_dlopen();
  }
  if (!qword_1EE65F1F8)
    sub_1A219922C(&v0);
}

Class sub_1A2168C90(uint64_t a1)
{
  Class result;

  sub_1A2168BEC();
  result = objc_getClass("PHMomentShare");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_1A21992A8();
  qword_1EE65F988 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A2168CE4()
{
  void *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v1 = 0;
  if (!qword_1EE65F998)
  {
    v2 = xmmword_1E4723D08;
    v3 = 0;
    qword_1EE65F998 = _sl_dlopen();
  }
  if (!qword_1EE65F998)
    sub_1A2199320(&v1);
  return qword_1EE65F998;
}

id sub_1A2168D8C()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1EE65F9A0;
  v7 = qword_1EE65F9A0;
  if (!qword_1EE65F9A0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = sub_1A2168E44;
    v3[3] = &unk_1E4720028;
    v3[4] = &v4;
    sub_1A2168E44((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A2168E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1A2168E44(uint64_t a1)
{
  Class result;

  sub_1A2168CE4();
  result = objc_getClass("PXTwoTuple");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_1A219939C();
  qword_1EE65F9A0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A2168E98(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1A2168EBC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void _IMIntentsApiInit()
{
  if (qword_1EE65F2F0 != -1)
    dispatch_once(&qword_1EE65F2F0, &unk_1E471DC78);
}

uint64_t sub_1A216A490()
{
  uint64_t result;

  qword_1EE65F2A8 = MEMORY[0x1A858292C](CFSTR("INInteraction"), CFSTR("Intents"));
  qword_1EE65F2C8 = MEMORY[0x1A858292C](CFSTR("INSendMessageIntent"), CFSTR("Intents"));
  qword_1EE65F2D0 = MEMORY[0x1A858292C](CFSTR("INSendMessageIntentResponse"), CFSTR("Intents"));
  qword_1EE65EAE8 = MEMORY[0x1A858292C](CFSTR("INUnsendMessagesIntent"), CFSTR("Intents"));
  qword_1EE65EAF0 = MEMORY[0x1A858292C](CFSTR("INUnsendMessagesIntentResponse"), CFSTR("Intents"));
  qword_1EE65F2B8 = MEMORY[0x1A858292C](CFSTR("INPerson"), CFSTR("Intents"));
  qword_1EE65F2C0 = MEMORY[0x1A858292C](CFSTR("INPersonHandle"), CFSTR("Intents"));
  qword_1EE65F2B0 = MEMORY[0x1A858292C](CFSTR("INMessage"), CFSTR("Intents"));
  qword_1EE65F2D8 = MEMORY[0x1A858292C](CFSTR("INSpeakableString"), CFSTR("Intents"));
  result = MEMORY[0x1A858292C](CFSTR("INImage"), CFSTR("Intents"));
  qword_1EE65F2A0 = result;
  return result;
}

void *sub_1A216A924()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("INPersonHandleLabelForCNLabeledValue", CFSTR("Intents"));
  off_1EE65EB10 = result;
  return result;
}

void *sub_1A216A950()
{
  void *result;

  result = (void *)MEMORY[0x1A8582938]("INPersonHandleLabelForCNLabeledValue", CFSTR("Intents"));
  off_1EE65F9A8 = result;
  return result;
}

void sub_1A216ABBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1A216ABD4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_msgSend(a2, "copy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1A216CD7C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[2];
  _QWORD v7[3];

  v7[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = CFSTR("ResultSuccess");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *(unsigned __int8 *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v6[1] = CFSTR("ResultKeyNewState");
  v7[0] = v3;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *(unsigned __int8 *)(a1 + 33));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v7[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v7, v6, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "postNotificationName:object:userInfo:", CFSTR("com.apple.IMCore.IMCloudKitHooks.SetEnabledReturned"), 0, v5);

}

void sub_1A216D140(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *(unsigned __int8 *)(a1 + 56));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setObject:forKey:", v2, CFSTR("ResultSuccess"));

  if (*(_BYTE *)(a1 + 56))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 48));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKey:", v3, CFSTR("ResultAdditionalStorageRequired"));

    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
      objc_msgSend(v7, "setObject:forKey:", v4, CFSTR("ResultiCloudAccountId"));
  }
  v5 = *(_QWORD *)(a1 + 40);
  if (v5)
    objc_msgSend(v7, "setObject:forKey:", v5, CFSTR("Error"));
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "postNotificationName:object:userInfo:", CFSTR("com.apple.IMCore.IMCloudKitHooks.AdditionalStorageCheckReturned"), 0, v7);

}

void sub_1A216D468(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = CFSTR("ResultSuccess");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *(unsigned __int8 *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "postNotificationName:object:userInfo:", CFSTR("com.apple.IMCore.IMCloudKitHooks.tryToDisableAllDevicesReturned"), 0, v4);

}

id sub_1A216E250(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = sub_1A216E2A8();

  return v2;
}

void type metadata accessor for IMCloudKitSyncProgressType(uint64_t a1)
{
  sub_1A200E600(a1, &qword_1EE65D760);
}

void type metadata accessor for MessagesClientCapabilities(uint64_t a1)
{
  sub_1A200E600(a1, &qword_1EE65D768);
}

id sub_1A216E2A8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, sel_transferGUID);
  if (!v1)
  {
    sub_1A2199764();
    v1 = (id)sub_1A2199758();
    swift_bridgeObjectRelease();
  }
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_transferForGUID_, v1);

    if (v4)
    {
      v5 = objc_msgSend(v4, sel_commSafetySensitive);

      v1 = v4;
    }
    else
    {
      v5 = 0;
      v1 = v3;
    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1A216E384(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1A216E38C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1A216E3A0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1A216E3B4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A216E3E0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1A216E404(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1A216E418@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A216E42C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A216E440(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1A216E454(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A216E468()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1A216E478()
{
  return sub_1A2199998();
}

_QWORD *sub_1A216E490(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

BOOL sub_1A216E4A4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_1A216E4B8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_1A216E4C4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1A216E4D8(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1A216E508(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1A216E51C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_1A216E530@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1A216E658(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_1A216E56C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1A216E57C()
{
  return sub_1A216E5C4(&qword_1EE65D770, (uint64_t)&unk_1A21AE778);
}

uint64_t sub_1A216E5A0()
{
  return sub_1A216E5C4(&qword_1EE65D778, (uint64_t)&unk_1A21AE744);
}

uint64_t sub_1A216E5C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for MessagesClientCapabilities(255);
    result = MEMORY[0x1A85832D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A216E604()
{
  return sub_1A216E5C4(&qword_1EE65D780, (uint64_t)&unk_1A21AE7A4);
}

uint64_t sub_1A216E628()
{
  return sub_1A216E5C4(&qword_1EE65D788, (uint64_t)&unk_1A21AE7E0);
}

_QWORD *sub_1A216E64C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A216E658(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id DaemonConnection.__allocating_init(listener:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A2172BAC(a1);
  swift_unknownObjectRelease();
  return v4;
}

id DaemonConnection.init(listener:)(uint64_t a1)
{
  id v1;

  v1 = sub_1A2172BAC(a1);
  swift_unknownObjectRelease();
  return v1;
}

id DaemonConnection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DaemonConnection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DaemonConnection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A216E884(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD v25[3];
  uint64_t v26;

  v2 = sub_1A2199728();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v5 = sub_1A21996A4();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_1A2199734();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  if (*a1)
    return;
  if (qword_1ECF121D0 != -1)
    goto LABEL_12;
LABEL_4:
  v7 = sub_1A21996F8();
  v8 = sub_1A200A4C8(v7, (uint64_t)qword_1ECF12660);
  v9 = sub_1A21996E0();
  v10 = sub_1A2199890();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v25[1] = v8;
    v13 = v12;
    *(_DWORD *)v11 = 136315138;
    v26 = v12;
    v14 = sub_1A2199764();
    v25[2] = sub_1A200F6C8(v14, v15, &v26);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v9, v10, "Attempting to connect to daemon with mach service %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v13, -1, -1);
    MEMORY[0x1A8583364](v11, -1, -1);
  }

  sub_1A2199764();
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v17 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_initWithMachServiceName_options_, v17, 0);

  sub_1A216EC18(v18, (uint64_t)a1);
  v19 = *a1;
  v20 = v18;

  *a1 = v18;
  objc_msgSend(v20, sel_resume);
  v21 = v20;
  v22 = sub_1A21996E0();
  v23 = sub_1A2199890();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v24 = 67109120;
    LODWORD(v26) = -[NSObject processIdentifier](v21, sel_processIdentifier);
    sub_1A2199968();

    _os_log_impl(&dword_1A1FF4000, v22, v23, "Resumed connection for %d", v24, 8u);
    MEMORY[0x1A8583364](v24, -1, -1);
  }
  else
  {

    v22 = v21;
  }

}

uint64_t sub_1A216EC18(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t aBlock;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;

  v3 = v2;
  if (qword_1ECF121D0 != -1)
    swift_once();
  v5 = sub_1A21996F8();
  sub_1A200A4C8(v5, (uint64_t)qword_1ECF12660);
  v6 = a1;
  v7 = sub_1A21996E0();
  v8 = sub_1A2199890();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 67109120;
    LODWORD(aBlock) = objc_msgSend(v6, sel_processIdentifier);
    sub_1A2199968();

    _os_log_impl(&dword_1A1FF4000, v7, v8, "Configuring XPC connection to PID %d", v9, 8u);
    MEMORY[0x1A8583364](v9, -1, -1);

  }
  else
  {

  }
  sub_1A200E71C(0, &qword_1ECF12220);
  v10 = (void *)sub_1A21998D8();
  objc_msgSend(v6, sel_setExportedInterface_, v10);

  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v41 = sub_1A2173C4C;
  v42 = v11;
  aBlock = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v38 = 1107296256;
  v39 = sub_1A200F798;
  v40 = &unk_1E471C640;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  v15 = objc_msgSend(v12, sel_initWithProtocol_forwardingHandler_, &unk_1EE6B4318, v14);
  _Block_release(v14);
  swift_release();
  swift_release();
  objc_msgSend(v6, sel_setExportedObject_, swift_dynamicCastObjCProtocolUnconditional());

  v16 = (void *)sub_1A21998CC();
  objc_msgSend(v6, sel_setRemoteObjectInterface_, v16);

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v6;
  *(_QWORD *)(v17 + 24) = v3;
  v41 = sub_1A2173C80;
  v42 = v17;
  aBlock = v13;
  v38 = 1107296256;
  v39 = sub_1A200EB00;
  v40 = &unk_1E471E070;
  v18 = _Block_copy(&aBlock);
  v19 = v6;
  v20 = v3;
  swift_release();
  objc_msgSend(v19, sel_setInterruptionHandler_, v18);
  _Block_release(v18);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = v20;
  v41 = sub_1A2173C88;
  v42 = v21;
  aBlock = v13;
  v38 = 1107296256;
  v39 = sub_1A200EB00;
  v40 = &unk_1E471C668;
  v22 = _Block_copy(&aBlock);
  v23 = v19;
  v24 = v20;
  swift_release();
  objc_msgSend(v23, sel_setInvalidationHandler_, v22);
  _Block_release(v22);
  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = v25;
  v27 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v41 = sub_1A2173CB4;
  v42 = v26;
  aBlock = v13;
  v38 = 1107296256;
  v39 = sub_1A200F798;
  v40 = &unk_1E471C6B8;
  v28 = _Block_copy(&aBlock);
  swift_retain();
  objc_msgSend(v27, sel_initWithProtocol_forwardingHandler_, &unk_1EE6B41A8, v28);
  _Block_release(v28);
  swift_release();
  swift_release();
  v29 = swift_dynamicCastObjCProtocolUnconditional();
  swift_unknownObjectRelease();
  *(_QWORD *)(a2 + 8) = v29;
  v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v31 = swift_allocObject();
  *(_BYTE *)(v31 + 16) = 1;
  *(_QWORD *)(v31 + 24) = v30;
  v32 = objc_allocWithZone(MEMORY[0x1E0D398B0]);
  v41 = sub_1A2173F84;
  v42 = v31;
  aBlock = MEMORY[0x1E0C809B0];
  v38 = 1107296256;
  v39 = sub_1A200F798;
  v40 = &unk_1E471C6E0;
  v33 = _Block_copy(&aBlock);
  swift_retain();
  objc_msgSend(v32, sel_initWithProtocol_forwardingHandler_, &unk_1EE6B41A8, v33);
  _Block_release(v33);
  swift_release();
  swift_release();
  v34 = swift_dynamicCastObjCProtocolUnconditional();
  result = swift_unknownObjectRelease();
  *(_QWORD *)(a2 + 16) = v34;
  return result;
}

void sub_1A216F1D0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD *v47;
  id v48;
  os_log_t v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t aBlock[6];
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v4 = sub_1A2199728();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1A21996A4();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = sub_1A2199734();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
LABEL_13:
    v40 = sub_1A21996F8();
    sub_1A200A4C8(v40, (uint64_t)qword_1ECF12660);
    v41 = sub_1A21996E0();
    v42 = sub_1A21998A8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1A1FF4000, v41, v42, "Setup not requested due to missing remote proxy", v43, 2u);
      MEMORY[0x1A8583364](v43, -1, -1);
    }
    goto LABEL_15;
  }
  sub_1A216E884((void **)a1);
  if (*(_BYTE *)(a1 + 24) != 1)
    return;
  v9 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_12;
  aBlock[4] = (uint64_t)sub_1A216F818;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A216F824;
  aBlock[3] = (uint64_t)&unk_1E471E138;
  v10 = _Block_copy(aBlock);
  swift_release();
  v11 = objc_msgSend(v9, sel_synchronousRemoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1A219998C();
  swift_unknownObjectRelease();
  sub_1A1FFD920(&qword_1ECF121D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    if (qword_1ECF121D0 == -1)
      goto LABEL_13;
    goto LABEL_26;
  }
  v12 = aBlock[0];
  v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v14 = objc_msgSend(v13, sel_bundleIdentifier);

  if (!v14)
  {
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3A28]), sel_init);
    v14 = objc_msgSend(v15, sel_UUIDString);

  }
  v16 = sub_1A2199764();
  v18 = v17;

  v19 = *(_QWORD *)(a1 + 48);
  if (v19)
  {
    v20 = *(_QWORD *)(a1 + 40);
    v55 = *(_QWORD *)(a1 + 32);
    v21 = *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    sub_1A200EB2C(v19);
    if (qword_1ECF121D0 != -1)
      swift_once();
    v22 = sub_1A21996F8();
    sub_1A200A4C8(v22, (uint64_t)qword_1ECF12660);
    swift_bridgeObjectRetain_n();
    v23 = sub_1A21996E0();
    v24 = sub_1A2199890();
    v53 = v24;
    v25 = os_log_type_enabled(v23, v24);
    v54 = v16;
    if (v25)
    {
      v26 = swift_slowAlloc();
      v51 = v20;
      v27 = v26;
      v50 = swift_slowAlloc();
      aBlock[0] = v50;
      *(_DWORD *)v27 = 136315394;
      swift_bridgeObjectRetain();
      v57 = sub_1A200F6C8(v16, v18, aBlock);
      v52 = v21;
      v49[2] = (os_log_t)&v58;
      sub_1A2199968();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2080;
      v49[1] = (os_log_t)(v27 + 14);
      v28 = v55;
      v29 = (id)IMStringFromClientCapabilities();
      v30 = sub_1A2199764();
      v49[0] = v23;
      v31 = v12;
      v32 = v30;
      v34 = v33;

      v35 = v28;
      v36 = v32;
      v12 = v31;
      v57 = sub_1A200F6C8(v36, v34, aBlock);
      v21 = v52;
      sub_1A2199968();
      swift_bridgeObjectRelease();
      v37 = v49[0];
      _os_log_impl(&dword_1A1FF4000, v49[0], (os_log_type_t)v53, "Dispatching setup request with id: %s capabilities: %s", (uint8_t *)v27, 0x16u);
      v38 = v50;
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v38, -1, -1);
      v39 = v27;
      v20 = v51;
      MEMORY[0x1A8583364](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v35 = v55;
    }
    *(_BYTE *)(a1 + 24) = 0;
    v47 = (_QWORD *)swift_allocObject();
    v47[2] = v54;
    v47[3] = v18;
    v47[4] = v35;
    v47[5] = v12;
    v47[6] = v20;
    v47[7] = v19;
    v47[8] = v21;
    v47[9] = v2;
    sub_1A200EB2C(v19);
    swift_unknownObjectRetain();
    v48 = v2;
    sub_1A21996BC();
    swift_release();
    sub_1A200EB3C(v19);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (qword_1ECF121D0 != -1)
    swift_once();
  v44 = sub_1A21996F8();
  sub_1A200A4C8(v44, (uint64_t)qword_1ECF12660);
  v41 = sub_1A21996E0();
  v45 = sub_1A21998A8();
  if (os_log_type_enabled(v41, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_1A1FF4000, v41, v45, "No closure to handle setup complete, not requesting setup", v46, 2u);
    MEMORY[0x1A8583364](v46, -1, -1);
    swift_unknownObjectRelease();
LABEL_15:

    return;
  }

LABEL_23:
  swift_unknownObjectRelease();
}

void sub_1A216F818(void *a1)
{
  sub_1A2171018(a1, "Synchronous remote object got an error attempting to post setup, reason: %s");
}

void sub_1A216F824(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1A216F874(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  char *v46;
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t aBlock;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t (*v77)(uint64_t, void *);
  uint64_t v78;

  v56 = a8;
  v69 = a5;
  v57 = a1;
  v63 = sub_1A2199704();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1A219971C();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v58 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  v70 = v15;
  *(_BYTE *)(v15 + 16) = 0;
  v16 = (_BYTE *)(v15 + 16);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v68 = v17 + 16;
  if (qword_1ECF121D0 != -1)
    swift_once();
  v18 = sub_1A21996F8();
  v19 = sub_1A200A4C8(v18, (uint64_t)qword_1ECF12660);
  swift_bridgeObjectRetain_n();
  v20 = sub_1A21996E0();
  v21 = sub_1A2199890();
  v22 = os_log_type_enabled(v20, v21);
  v67 = a4;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v55 = v17;
    v24 = v23;
    v25 = swift_slowAlloc();
    v66 = v16;
    v54 = v25;
    aBlock = v25;
    *(_DWORD *)v24 = 136315394;
    v65 = v19;
    v64 = a2;
    swift_bridgeObjectRetain();
    v72 = sub_1A200F6C8(v64, a3, &aBlock);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    v53 = v24 + 14;
    v26 = a7;
    v27 = (id)IMStringFromClientCapabilities();
    v28 = sub_1A2199764();
    v30 = v29;

    a7 = v26;
    v72 = sub_1A200F6C8(v28, v30, &aBlock);
    v19 = v65;
    sub_1A2199968();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v20, v21, "Requesting setup with id: %s capabilities: %s", (uint8_t *)v24, 0x16u);
    v31 = v54;
    swift_arrayDestroy();
    v16 = v66;
    MEMORY[0x1A8583364](v31, -1, -1);
    v32 = v24;
    v17 = v55;
    MEMORY[0x1A8583364](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v33 = (void *)sub_1A2199758();
  v34 = (void *)sub_1A2199740();
  v35 = swift_allocObject();
  v36 = v70;
  *(_QWORD *)(v35 + 16) = v17;
  *(_QWORD *)(v35 + 24) = v36;
  v77 = sub_1A2173BCC;
  v78 = v35;
  aBlock = MEMORY[0x1E0C809B0];
  v74 = 1107296256;
  v75 = sub_1A200E7C4;
  v76 = &unk_1E471C9B0;
  v37 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v69, sel_requestSetupXPCObjectWithClientID_capabilities_context_reply_, v33, v67, v34, v37);
  _Block_release(v37);

  swift_beginAccess();
  v38 = *(_QWORD *)(v17 + 16);
  if (v38)
  {
    swift_beginAccess();
    if (*v16 == 1)
    {
      v66 = v16;
      v39 = (_QWORD *)swift_allocObject();
      v39[2] = a7;
      v39[3] = v56;
      v39[4] = v38;
      v40 = v57;
      v41 = *v57;
      v65 = v19;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A200EB3C(v41);
      *v40 = (uint64_t)sub_1A2173C00;
      v40[1] = (uint64_t)v39;
      sub_1A200E71C(0, (unint64_t *)&qword_1ECF121E8);
      v42 = (void *)sub_1A2199920();
      v43 = swift_allocObject();
      *(_QWORD *)(v43 + 16) = a9;
      v77 = (uint64_t (*)(uint64_t, void *))sub_1A2173F24;
      v78 = v43;
      aBlock = MEMORY[0x1E0C809B0];
      v74 = 1107296256;
      v75 = sub_1A200EB00;
      v76 = &unk_1E471C618;
      v44 = _Block_copy(&aBlock);
      v45 = a9;
      swift_release();
      v46 = v58;
      sub_1A2199710();
      aBlock = MEMORY[0x1E0DEE9D8];
      sub_1A2173E70((unint64_t *)&qword_1ECF121F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1A1FFD920(&qword_1ECF121F8);
      sub_1A2173EB0((unint64_t *)&qword_1ECF12200, &qword_1ECF121F8);
      v47 = v61;
      v48 = v63;
      sub_1A21999A4();
      MEMORY[0x1A8581B88](0, v46, v47, v44);
      _Block_release(v44);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v48);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v60);
    }
  }
  swift_retain();
  v49 = sub_1A21996E0();
  v50 = sub_1A2199890();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v51 = 67109120;
    swift_beginAccess();
    v71 = *(unsigned __int8 *)(v70 + 16);
    sub_1A2199968();
    swift_release();
    _os_log_impl(&dword_1A1FF4000, v49, v50, "Setup request concluded with success: %{BOOL}d", v51, 8u);
    MEMORY[0x1A8583364](v51, -1, -1);
    swift_release();

  }
  else
  {
    swift_release();

    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A216FFCC(uint64_t result, id a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;

  if ((result & 1) != 0)
  {
    v6 = objc_msgSend(a2, sel_dictionaryForKey_, "setupInfo");
    v7 = sub_1A219974C();

    swift_beginAccess();
    *(_QWORD *)(a3 + 16) = v7;
    swift_bridgeObjectRelease();
    result = swift_beginAccess();
    *(_BYTE *)(a4 + 16) = 1;
  }
  return result;
}

void sub_1A217009C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  uint64_t v12;

  v2 = sub_1A2199728();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v5 = sub_1A21996A4();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_1A2199734();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_1ECF121D0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v7 = sub_1A21996F8();
  sub_1A200A4C8(v7, (uint64_t)qword_1ECF12660);
  v8 = sub_1A21996E0();
  v9 = sub_1A2199890();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1A1FF4000, v8, v9, "Disconnecting from daemon", v10, 2u);
    MEMORY[0x1A8583364](v10, -1, -1);
  }

  v11 = *(id *)a1;
  objc_msgSend(*(id *)a1, sel_invalidate);

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 1;
}

void sub_1A2170228(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  _QWORD *v35;
  void *v36;
  id v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t aBlock[10];

  v8 = sub_1A2199704();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A219971C();
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  MEMORY[0x1E0C80A78]();
  v49 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a4 + 16;
  if (qword_1ECF121D0 != -1)
    swift_once();
  v15 = sub_1A21996F8();
  v47 = sub_1A200A4C8(v15, (uint64_t)qword_1ECF12660);
  v16 = sub_1A21996E0();
  v17 = sub_1A219989C();
  v18 = os_log_type_enabled(v16, v17);
  v48 = a1;
  if (v18)
  {
    v44 = a2;
    v19 = swift_slowAlloc();
    v45 = v11;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v43 = a4 + 16;
    v22 = v21;
    aBlock[0] = v21;
    v46 = v9;
    *(_DWORD *)v20 = 136315138;
    v42 = v20 + 4;
    v23 = a3;
    v24 = NSStringFromSelector(a1);
    v25 = v8;
    v26 = sub_1A2199764();
    v28 = v27;

    a3 = v23;
    v29 = v26;
    v8 = v25;
    a2 = v44;
    aBlock[6] = sub_1A200F6C8(v29, v28, aBlock);
    v9 = v46;
    sub_1A2199968();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v16, v17, "Receiving message from daemon %s, dispatching to main queue", v20, 0xCu);
    swift_arrayDestroy();
    v30 = v22;
    v14 = v43;
    MEMORY[0x1A8583364](v30, -1, -1);
    v31 = v20;
    v11 = v45;
    MEMORY[0x1A8583364](v31, -1, -1);
  }

  swift_beginAccess();
  v32 = MEMORY[0x1A85833E8](v14);
  if (v32)
  {
    v33 = (void *)v32;
    sub_1A200E71C(0, (unint64_t *)&qword_1ECF121E8);
    v34 = (void *)sub_1A2199920();
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = v48;
    v35[3] = a2;
    v35[4] = a3;
    v35[5] = v33;
    aBlock[4] = (uint64_t)sub_1A2173E40;
    aBlock[5] = (uint64_t)v35;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A200EB00;
    aBlock[3] = (uint64_t)&unk_1E471C7A8;
    v36 = _Block_copy(aBlock);
    swift_retain();
    v37 = v33;
    swift_release();
    v38 = v49;
    sub_1A2199710();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1A2173E70((unint64_t *)&qword_1ECF121F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1A1FFD920(&qword_1ECF121F8);
    sub_1A2173EB0((unint64_t *)&qword_1ECF12200, &qword_1ECF121F8);
    sub_1A21999A4();
    MEMORY[0x1A8581B88](0, v38, v11, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
  }
  else
  {
    v39 = sub_1A21996E0();
    v40 = sub_1A21998A8();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_1A1FF4000, v39, v40, "Got daemon request but daemon connection no longer exists!", v41, 2u);
      MEMORY[0x1A8583364](v41, -1, -1);
    }

  }
}

uint64_t sub_1A2170680(const char *a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSString *v12;
  uint64_t v13;
  void (*v14)(_QWORD);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21[4];

  if (qword_1ECF121D0 != -1)
    swift_once();
  v7 = sub_1A21996F8();
  sub_1A200A4C8(v7, (uint64_t)qword_1ECF12660);
  v8 = sub_1A21996E0();
  v9 = sub_1A2199890();
  if (os_log_type_enabled(v8, v9))
  {
    v20 = a4;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v21[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = NSStringFromSelector(a1);
    v13 = sub_1A2199764();
    v14 = a2;
    v16 = v15;

    v17 = v13;
    a4 = v20;
    sub_1A200F6C8(v17, v16, v21);
    sub_1A2199968();
    a2 = v14;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v8, v9, "Processing message from daemon %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v11, -1, -1);
    MEMORY[0x1A8583364](v10, -1, -1);
  }

  v18 = *(_QWORD *)(a4 + OBJC_IVAR___IMDaemonConnection_listener);
  v21[3] = swift_getObjectType();
  v21[0] = v18;
  swift_unknownObjectRetain();
  a2(v21);
  return sub_1A200A548((uint64_t)v21);
}

void sub_1A2170870(const char *a1, void (*a2)(_OWORD *), uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSString *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *);
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v30;
  int v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_OWORD *);
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _OWORD v54[2];
  _QWORD v55[4];

  v47 = a2;
  v48 = a3;
  v8 = sub_1A21996F8();
  v9 = *(_QWORD *)(v8 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a5 + 16;
  v13 = NSStringFromSelector(a1);
  v51 = sub_1A2199764();
  v15 = v14;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v16 = sub_1A200A4C8(v8, (uint64_t)qword_1ECF12660);
  v17 = *(void (**)(char *))(v9 + 16);
  v49 = v16;
  v17(v11);
  swift_bridgeObjectRetain_n();
  v18 = sub_1A21996E0();
  v19 = sub_1A219989C();
  v20 = os_log_type_enabled(v18, v19);
  v50 = a4;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v46 = v12;
    v22 = v21;
    v23 = swift_slowAlloc();
    v45 = v9;
    v24 = v23;
    *(_QWORD *)&v54[0] = v23;
    *(_DWORD *)v22 = 136315394;
    if ((a4 & 1) != 0)
      v25 = 0x6E6F7268636E7973;
    else
      v25 = 0x6F7268636E797361;
    if ((a4 & 1) != 0)
      v26 = 0xEB0000000073756FLL;
    else
      v26 = 0xEC00000073756F6ELL;
    v55[0] = sub_1A200F6C8(v25, v26, (uint64_t *)v54);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    v55[0] = sub_1A200F6C8(v51, v15, (uint64_t *)v54);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v18, v19, "Sending %s message to daemon %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v24, -1, -1);
    v27 = v22;
    v12 = v46;
    MEMORY[0x1A8583364](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_beginAccess();
  v28 = MEMORY[0x1A85833E8](v12);
  if (v28)
  {
    v29 = (void *)v28;
    ((void (*)(void))MEMORY[0x1E0C80A78])();
    v30 = v50;
    *((_BYTE *)&v45 - 16) = v50 & 1;
    swift_retain();
    sub_1A1FFD920((uint64_t *)&unk_1ECF12148);
    sub_1A21996B0();
    swift_release();
    v31 = LOBYTE(v54[0]);
    sub_1A2173CC8((uint64_t)v54 + 8, (uint64_t)v55);
    sub_1A2173D10((uint64_t)v55, (uint64_t)&v52);
    if (v53)
    {
      sub_1A200DB00(&v52, v54);
      if (v31)
      {
        sub_1A1FFDAC4((uint64_t)v54, (uint64_t)&v52);
        v32 = v30;
        v33 = swift_allocObject();
        v34 = v51;
        *(_QWORD *)(v33 + 16) = v51;
        *(_QWORD *)(v33 + 24) = v15;
        v35 = v48;
        *(_QWORD *)(v33 + 32) = v47;
        *(_QWORD *)(v33 + 40) = v35;
        v36 = sub_1A200DB00(&v52, (_OWORD *)(v33 + 48));
        MEMORY[0x1E0C80A78](v36);
        *(&v45 - 4) = v34;
        *(&v45 - 3) = v15;
        *(&v45 - 2) = (uint64_t)v29;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_1A21996B0();
        swift_release();
        v37 = swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
        {
          MEMORY[0x1E0C80A78](v37);
          *(&v45 - 2) = (uint64_t)sub_1A2173DCC;
          *(&v45 - 1) = v33;
          sub_1A21996B0();
          sub_1A200A548((uint64_t)v54);
          sub_1A2173D58((uint64_t)v55);

          swift_release();
        }
        else
        {
          v44 = swift_allocObject();
          *(_QWORD *)(v44 + 16) = sub_1A2173DCC;
          *(_QWORD *)(v44 + 24) = v33;
          swift_retain();
          sub_1A21996BC();
          swift_release();
          swift_release();
          sub_1A200A548((uint64_t)v54);
          sub_1A2173D58((uint64_t)v55);

        }
        return;
      }
      swift_bridgeObjectRelease();
      v47(v54);

      sub_1A200A548((uint64_t)v54);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A2173D58((uint64_t)&v52);
      v41 = sub_1A21996E0();
      v42 = sub_1A21998A8();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_1A1FF4000, v41, v42, "Attempted to send daemon request but proxy unavailable!", v43, 2u);
        MEMORY[0x1A8583364](v43, -1, -1);
      }

    }
    sub_1A2173D58((uint64_t)v55);
    return;
  }
  swift_bridgeObjectRelease();
  v38 = sub_1A21996E0();
  v39 = sub_1A21998A8();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_1A1FF4000, v38, v39, "Attempted to send daemon request but daemon connection no longer exists!", v40, 2u);
    MEMORY[0x1A8583364](v40, -1, -1);
  }

}

uint64_t sub_1A2170EC4@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  char v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  __int128 v10;
  __int128 v11;
  void (*v12)(void *);
  uint64_t v13;

  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(void **)a1;
  if ((a2 & 1) == 0)
  {
    if (v5)
    {
      v12 = sub_1A217100C;
      v13 = 0;
      *(_QWORD *)&v10 = MEMORY[0x1E0C809B0];
      *((_QWORD *)&v10 + 1) = 1107296256;
      *(_QWORD *)&v11 = sub_1A216F824;
      *((_QWORD *)&v11 + 1) = &unk_1E471C730;
      v6 = _Block_copy(&v10);
      v7 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v6);
      goto LABEL_6;
    }
LABEL_7:
    v10 = 0u;
    v11 = 0u;
    goto LABEL_8;
  }
  if (!v5)
    goto LABEL_7;
  v12 = sub_1A2171000;
  v13 = 0;
  *(_QWORD *)&v10 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v10 + 1) = 1107296256;
  *(_QWORD *)&v11 = sub_1A216F824;
  *((_QWORD *)&v11 + 1) = &unk_1E471C758;
  v6 = _Block_copy(&v10);
  v7 = objc_msgSend(v5, sel_synchronousRemoteObjectProxyWithErrorHandler_, v6);
LABEL_6:
  v8 = v7;
  _Block_release(v6);
  sub_1A219998C();
  swift_unknownObjectRelease();
LABEL_8:
  *a3 = v4;
  return sub_1A2173CC8((uint64_t)&v10, (uint64_t)(a3 + 8));
}

void sub_1A2171000(void *a1)
{
  sub_1A2171018(a1, "Synchronous remote object proxy for daemon connection received error: %s");
}

void sub_1A217100C(void *a1)
{
  sub_1A2171018(a1, "Remote object proxy for daemon connection received error: %s");
}

void sub_1A2171018(void *a1, const char *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v4 = sub_1A21996F8();
  sub_1A200A4C8(v4, (uint64_t)qword_1ECF12660);
  v5 = a1;
  v6 = a1;
  oslog = sub_1A21996E0();
  v7 = sub_1A21998A8();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v10 = sub_1A2199B78();
    sub_1A200F6C8(v10, v11, &v13);
    sub_1A2199968();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A1FF4000, oslog, v7, a2, v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v9, -1, -1);
    MEMORY[0x1A8583364](v8, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1A21711F0(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v9 = sub_1A21996F8();
  sub_1A200A4C8(v9, (uint64_t)qword_1ECF12660);
  swift_bridgeObjectRetain_n();
  v10 = sub_1A21996E0();
  v11 = sub_1A2199890();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(a1, a2, &v15);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v10, v11, "Completing deferred invocation of %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v13, -1, -1);
    MEMORY[0x1A8583364](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a3(a5);
}

uint64_t sub_1A21713C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v6 = sub_1A21996F8();
  sub_1A200A4C8(v6, (uint64_t)qword_1ECF12660);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A21996E0();
  v8 = sub_1A2199890();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(a2, a3, &v12);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v7, v8, "Setup has not been requested at time of proxy invocation, deferring invocation of %s to after setup complete", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v10, -1, -1);
    MEMORY[0x1A8583364](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_1A216F1D0(a1);
}

uint64_t sub_1A217157C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v5 = sub_1A2199704();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v18 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A219971C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A200E71C(0, (unint64_t *)&qword_1ECF121E8);
  v13 = (void *)sub_1A2199920();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  aBlock[4] = sub_1A200EAE0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A200EB00;
  aBlock[3] = &unk_1E471C708;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1A2199710();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A2173E70((unint64_t *)&qword_1ECF121F0, v6, MEMORY[0x1E0DEF510]);
  sub_1A1FFD920(&qword_1ECF121F8);
  sub_1A2173EB0((unint64_t *)&qword_1ECF12200, &qword_1ECF121F8);
  sub_1A21999A4();
  MEMORY[0x1A8581B88](0, v12, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A2171790(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v2 = sub_1A21996F8();
  sub_1A200A4C8(v2, (uint64_t)qword_1ECF12660);
  v3 = a1;
  v4 = sub_1A21996E0();
  v5 = sub_1A2199890();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 67109120;
    objc_msgSend(v3, sel_processIdentifier);
    sub_1A2199968();

    _os_log_impl(&dword_1A1FF4000, v4, v5, "Connection to PID %d was interrupted", v6, 8u);
    MEMORY[0x1A8583364](v6, -1, -1);

  }
  else
  {

  }
  return sub_1A21996BC();
}

uint64_t sub_1A21718F4(uint64_t result)
{
  *(_BYTE *)(result + 24) = 1;
  return result;
}

uint64_t sub_1A2171900(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v4 = sub_1A21996F8();
  sub_1A200A4C8(v4, (uint64_t)qword_1ECF12660);
  v5 = a1;
  v6 = sub_1A21996E0();
  v7 = sub_1A2199890();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 67109120;
    objc_msgSend(v5, sel_processIdentifier);
    sub_1A2199968();

    _os_log_impl(&dword_1A1FF4000, v6, v7, "Connection to PID %d was invalidated", v8, 8u);
    MEMORY[0x1A8583364](v8, -1, -1);

  }
  else
  {

  }
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v9 = a2;
  sub_1A21996BC();
  return swift_release();
}

Swift::Void __swiftcall DaemonConnection.disconnect()()
{
  sub_1A21721A0();
}

uint64_t DaemonConnection.isConnected.getter()
{
  unsigned __int8 v1;

  sub_1A21996B0();
  return v1;
}

_QWORD *sub_1A2171AEC@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t DaemonConnection.remoteObjectProxy.getter()
{
  return sub_1A2171B24();
}

uint64_t DaemonConnection.synchronousRemoteObjectProxy.getter()
{
  return sub_1A2171B24();
}

uint64_t sub_1A2171B24()
{
  uint64_t v1;

  sub_1A1FFD920(&qword_1ECF121E0);
  sub_1A21996B0();
  return v1;
}

uint64_t (*DaemonConnection.onSetupComplete.getter())(uint64_t a1)
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  sub_1A1FFD920(&qword_1EE65DF28);
  sub_1A21996B0();
  if (!v2)
    return 0;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return sub_1A2172F80;
}

uint64_t sub_1A2171CFC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1A219974C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_1A2171D68@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1A1FFD920(&qword_1EE65DF28);
  sub_1A21996B0();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1A2171DC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    a1 = (uint64_t *)swift_allocObject();
    a1[2] = v1;
    a1[3] = v2;
    v3 = sub_1A2173F48;
  }
  else
  {
    v3 = 0;
  }
  MEMORY[0x1E0C80A78](a1);
  sub_1A200EB2C(v1);
  sub_1A21996B0();
  return sub_1A200EB3C((uint64_t)v3);
}

uint64_t sub_1A2171E94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A2173E4C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1A200EB2C(v3);
}

void (*DaemonConnection.onSetupComplete.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + OBJC_IVAR___IMDaemonConnection_queue);
  sub_1A1FFD920(&qword_1EE65DF28);
  sub_1A21996B0();
  v4 = v3[2];
  if (v4)
  {
    v5 = v3[3];
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1A2173F48;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *v3 = v7;
  v3[1] = v6;
  return sub_1A2171FAC;
}

void sub_1A2171FAC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v2 = *a1;
  v3 = **a1;
  if ((a2 & 1) != 0)
  {
    sub_1A200EB2C(v3);
    sub_1A21996B0();
    sub_1A200EB3C(v3);
    sub_1A200EB3C(*v2);
  }
  else
  {
    sub_1A21996B0();
    sub_1A200EB3C(v3);
  }
  free(v2);
}

void sub_1A217206C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2;
  if (v7 != a2)
    *(_BYTE *)(a1 + 24) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = a3;
  if ((a4 & 1) != 0)
    *(_BYTE *)(a1 + 24) = 1;
  sub_1A216F1D0(a1);
}

uint64_t sub_1A21720FC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A200EAE0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_1A200EB2C(v3);
}

uint64_t sub_1A2172160(uint64_t *a1)
{
  uint64_t result;

  result = sub_1A200EB3C(*a1);
  *a1 = 0;
  a1[1] = 0;
  return result;
}

Swift::Void __swiftcall DaemonConnection.requestSetup()()
{
  sub_1A21721A0();
}

uint64_t sub_1A21721A0()
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  sub_1A21996BC();
  return swift_release();
}

uint64_t sub_1A2172210(void *a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = a1;
  sub_1A21996BC();

  return swift_release();
}

uint64_t DaemonConnection.requestSetupIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1A2172294()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1A217232C;
  return sub_1A2199B30();
}

uint64_t sub_1A217232C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2172388()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2172390(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v4 = sub_1A1FFD920(&qword_1ECF12128);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v9 = a2;
  sub_1A21996BC();
  return swift_release();
}

uint64_t sub_1A2172480(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v6 = sub_1A1FFD920(&qword_1ECF12128);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  sub_1A216F1D0(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(_QWORD *)(v10 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v11 = a2;
  sub_1A21996BC();
  return swift_release();
}

uint64_t sub_1A217258C(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v29 = a3;
  v5 = sub_1A2199704();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A219971C();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A1FFD920(&qword_1ECF12128);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  if (*a1)
  {
    sub_1A200E71C(0, (unint64_t *)&qword_1ECF121E8);
    v27 = sub_1A2199920();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v12);
    v15 = *(unsigned __int8 *)(v13 + 80);
    v28 = v6;
    v16 = (v15 + 24) & ~v15;
    v17 = swift_allocObject();
    v18 = v29;
    *(_QWORD *)(v17 + 16) = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    aBlock[4] = sub_1A2173AC4;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A200EB00;
    aBlock[3] = &unk_1E471E110;
    v19 = _Block_copy(aBlock);
    v20 = v18;
    sub_1A2199710();
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1A2173E70((unint64_t *)&qword_1ECF121F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1A1FFD920(&qword_1ECF121F8);
    sub_1A2173EB0((unint64_t *)&qword_1ECF12200, &qword_1ECF121F8);
    sub_1A21999A4();
    v21 = (void *)v27;
    MEMORY[0x1A8581B88](0, v11, v8, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    return swift_release();
  }
  else
  {
    if (qword_1ECF121D0 != -1)
      swift_once();
    v23 = sub_1A21996F8();
    sub_1A200A4C8(v23, (uint64_t)qword_1ECF12660);
    v24 = sub_1A21996E0();
    v25 = sub_1A2199890();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1A1FF4000, v24, v25, "Setup request should be complete, resuming continuation", v26, 2u);
      MEMORY[0x1A8583364](v26, -1, -1);
    }

    return sub_1A2199824();
  }
}

uint64_t sub_1A21728D4()
{
  DaemonConnection.waitForSetup()();
  sub_1A1FFD920(&qword_1ECF12128);
  return sub_1A2199824();
}

uint64_t sub_1A2172A2C(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_1A2172A74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_1A2172B0C;
  return sub_1A2199B30();
}

uint64_t sub_1A2172B0C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2172B68()
{
  uint64_t v0;
  void (**v1)(_QWORD);

  v1 = *(void (***)(_QWORD))(v0 + 24);

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1A2172BAC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *ObjectType;
  objc_super v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v19 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v17 = sub_1A2199914();
  v2 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A2199908();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1A219971C();
  MEMORY[0x1E0C80A78](v7);
  v18 = OBJC_IVAR___IMDaemonConnection_queue;
  v8 = v1;
  v9 = MEMORY[0x1E0DEE9D8];
  v16[0] = sub_1A200E884(MEMORY[0x1E0DEE9D8]);
  sub_1A2199710();
  v22 = v9;
  v16[2] = sub_1A2173E70(&qword_1ECF12228, v6, MEMORY[0x1E0DEF828]);
  v16[1] = sub_1A1FFD920(&qword_1ECF12210);
  sub_1A2173EB0(&qword_1ECF12218, &qword_1ECF12210);
  sub_1A21999A4();
  v10 = *MEMORY[0x1E0DEF8D0];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v12 = v4;
  v13 = v4;
  v14 = v17;
  v11(v13, v10, v17);
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 1;
  v26 = 0;
  v27 = v16[0];
  v28 = 0;
  v29 = 0;
  sub_1A1FFD920((uint64_t *)&unk_1ECF121A0);
  swift_allocObject();
  *(_QWORD *)(v16[3] + v18) = sub_1A21996C8();
  v18 = OBJC_IVAR___IMDaemonConnection_setupQueue;
  sub_1A2199710();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A21999A4();
  v11(v12, v10, v14);
  v22 = 0;
  v23 = 0;
  sub_1A1FFD920(&qword_1ECF12198);
  swift_allocObject();
  *(_QWORD *)&v8[v18] = sub_1A21996C8();
  LOBYTE(v22) = 0;
  sub_1A219968C();
  *(_QWORD *)&v8[OBJC_IVAR___IMDaemonConnection_listener] = v19;
  swift_unknownObjectRetain();

  v21.receiver = v8;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, sel_init);
}

void sub_1A2172EE4(uint64_t a1)
{
  sub_1A216F1D0(a1);
}

uint64_t sub_1A2172F04()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A2172F28()
{
  DaemonConnection.waitForSetup()();
}

uint64_t sub_1A2172F48()
{
  return swift_deallocObject();
}

void sub_1A2172F58(uint64_t a1)
{
  sub_1A217009C(a1);
}

uint64_t sub_1A2172F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

void sub_1A2172FB8(uint64_t a1)
{
  uint64_t v1;

  sub_1A217206C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

void sub_1A2172FC8(uint64_t a1)
{
  *(_BYTE *)(a1 + 24) = 1;
  sub_1A216F1D0(a1);
}

uint64_t sub_1A2172FF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A2172390(a1, *(void **)(v1 + 16));
}

uint64_t sub_1A2173000()
{
  return type metadata accessor for DaemonConnection();
}

uint64_t type metadata accessor for DaemonConnection()
{
  uint64_t result;

  result = qword_1ECF12178;
  if (!qword_1ECF12178)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A2173044()
{
  unint64_t v0;

  sub_1A21730DC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DaemonConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DaemonConnection.__allocating_init(listener:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1A21730DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF12188)
  {
    v0 = sub_1A2199698();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF12188);
  }
}

_QWORD *destroy for DaemonConnection.SetupState(_QWORD *result)
{
  if (*result)
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *_s6IMCore16DaemonConnectionC10SetupStateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  if (*a2)
  {
    v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for DaemonConnection.SetupState(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for DaemonConnection.SetupState(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for DaemonConnection.SetupState(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DaemonConnection.SetupState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DaemonConnection.SetupState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DaemonConnection.SetupState()
{
  return &type metadata for DaemonConnection.SetupState;
}

uint64_t initializeBufferWithCopyOfBuffer for DaemonConnection.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DaemonConnection.State(uint64_t a1)
{
  uint64_t result;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v8 = (_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 48);
  v9 = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v8;
  }
  return a1;
}

uint64_t assignWithCopy for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v7;
      *(_QWORD *)(a1 + 56) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v5;
      *(_QWORD *)(a1 + 56) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DaemonConnection.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DaemonConnection.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DaemonConnection.State()
{
  return &type metadata for DaemonConnection.State;
}

uint64_t sub_1A21736B4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A21736E0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A2173744;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EE65DF38 + dword_1EE65DF38))(v2, v3);
}

uint64_t sub_1A2173744()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A2173794()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A21737C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A2173EFC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE65E9E8 + dword_1EE65E9E8))(a1, v4, v5, v6);
}

uint64_t sub_1A2173848()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A2173874@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A216E884((void **)a1);
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_unknownObjectRetain();
}

uint64_t sub_1A21738AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A216E884((void **)a1);
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_unknownObjectRetain();
}

uint64_t sub_1A21738E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(a1 + 48);
  sub_1A200EB2C(v4);
  result = sub_1A200EB3C(v5);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v3;
  return result;
}

uint64_t sub_1A2173938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A1FFD920(&qword_1ECF12128) - 8) + 80);
  return sub_1A2172480(a1, *(void **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1A217397C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A1FFD920(&qword_1ECF12128);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A21739F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1A1FFD920(&qword_1ECF12128) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1A217258C(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A2173A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A1FFD920(&qword_1ECF12128);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A2173AC4()
{
  sub_1A1FFD920(&qword_1ECF12128);
  return sub_1A21728D4();
}

uint64_t sub_1A2173AF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2173B3C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A216F874(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72));
}

uint64_t sub_1A2173B6C()
{
  return swift_deallocObject();
}

uint64_t sub_1A2173B7C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A2173BA0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2173BCC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1A216FFCC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A2173BD4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A2173C00()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1A2173C28()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A2173C4C(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A2170228(a1, a2, a3, v3);
}

uint64_t sub_1A2173C54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A2173C80()
{
  uint64_t v0;

  return sub_1A2171790(*(void **)(v0 + 16));
}

uint64_t sub_1A2173C88()
{
  uint64_t v0;

  return sub_1A2171900(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1A2173C90()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A2173CB4(const char *a1, void (*a2)(_OWORD *), uint64_t a3)
{
  uint64_t v3;

  sub_1A2170870(a1, a2, a3, *(unsigned __int8 *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1A2173CC0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1A2170EC4(a1, *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_1A2173CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A1FFD920(&qword_1ECF12140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2173D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A1FFD920(&qword_1ECF12140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2173D58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A1FFD920(&qword_1ECF12140);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A2173D98()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_1A200A548(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_1A2173DCC()
{
  uint64_t v0;

  return sub_1A21711F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), v0 + 48);
}

uint64_t sub_1A2173DDC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A21713C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A2173DE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A217157C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A2173DF0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A2173E14()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2173E40()
{
  uint64_t v0;

  return sub_1A2170680(*(const char **)(v0 + 16), *(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A2173E4C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1A2173E70(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1A85832D4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A2173EB0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1A200A504(a2);
    result = MEMORY[0x1A85832D4](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

IMCore::CountStatistics::RootKeys_optional __swiftcall CountStatistics.RootKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IMCore::CountStatistics::RootKeys_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1A2199B54();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 5;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v5 = 1;
      goto LABEL_7;
    case 2:
      v5 = 2;
      goto LABEL_7;
    case 3:
      v5 = 3;
      goto LABEL_7;
    case 4:
      v5 = 4;
LABEL_7:
      v6 = v5;
      break;
    case 5:
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    default:
      v6 = 23;
      break;
  }
  *v2 = v6;
  return result;
}

IMCore::CountStatistics::RootKeys_optional __swiftcall CountStatistics.RootKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  IMCore::CountStatistics::RootKeys_optional result;
  char v4;

  v2 = v1;
  result.value = CountStatistics.RootKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

IMCore::CountStatistics::RootKeys_optional __swiftcall CountStatistics.RootKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 23;
  return (IMCore::CountStatistics::RootKeys_optional)intValue;
}

uint64_t CountStatistics.RootKeys.intValue.getter()
{
  return 0;
}

uint64_t CountStatistics.RootKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A2174170 + 4 * byte_1A21AE9E7[*v0]))(0xD000000000000012, 0x80000001A21D34E0);
}

uint64_t sub_1A2174170()
{
  return 0x756F436C61746F74;
}

uint64_t sub_1A2174190()
{
  return 0x65636E79536C6C61;
}

uint64_t sub_1A21741AC()
{
  return 0x766C6F7365726E75;
}

uint64_t sub_1A2174288()
{
  return 0x73654D6C61746F74;
}

uint64_t sub_1A21742AC()
{
  return 0x654D6465636E7973;
}

uint64_t sub_1A21742D0()
{
  return 0x4D646574656C6564;
}

uint64_t sub_1A21742F4(uint64_t a1)
{
  return a1 - 2;
}

uint64_t CountStatistics.RootKeys.stringValue.getter()
{
  return CountStatistics.RootKeys.rawValue.getter();
}

uint64_t sub_1A21743C8()
{
  return sub_1A2184FE4();
}

uint64_t sub_1A21743D4()
{
  sub_1A2199B84();
  CountStatistics.RootKeys.rawValue.getter();
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

void sub_1A2174438(char a1)
{
  sub_1A2199B84();
  __asm { BR              X10 }
}

uint64_t sub_1A2174494()
{
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

uint64_t sub_1A2174528()
{
  sub_1A2199B84();
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

void sub_1A21745BC(char a1)
{
  sub_1A2199B84();
  __asm { BR              X10 }
}

uint64_t sub_1A2174610()
{
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

uint64_t sub_1A21746A8()
{
  CountStatistics.RootKeys.rawValue.getter();
  sub_1A219977C();
  return swift_bridgeObjectRelease();
}

void sub_1A21746F8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A2174740()
{
  sub_1A219977C();
  return swift_bridgeObjectRelease();
}

void sub_1A21747BC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A2174804()
{
  sub_1A219977C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A21748BC()
{
  sub_1A219977C();
  return swift_bridgeObjectRelease();
}

void sub_1A2174928(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A217496C()
{
  sub_1A219977C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A21749F0()
{
  sub_1A2199B84();
  CountStatistics.RootKeys.rawValue.getter();
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

void sub_1A2174A50(uint64_t a1, char a2)
{
  sub_1A2199B84();
  __asm { BR              X10 }
}

uint64_t sub_1A2174AA0()
{
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

uint64_t sub_1A2174B38()
{
  sub_1A2199B84();
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

void sub_1A2174BC8(uint64_t a1, char a2)
{
  sub_1A2199B84();
  __asm { BR              X10 }
}

uint64_t sub_1A2174C20()
{
  sub_1A219977C();
  swift_bridgeObjectRelease();
  return sub_1A2199B9C();
}

IMCore::CountStatistics::RootKeys_optional sub_1A2174CB4(Swift::String *a1)
{
  return CountStatistics.RootKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A2174CC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CountStatistics.RootKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A2174CE4()
{
  return CountStatistics.RootKeys.rawValue.getter();
}

IMCore::CountStatistics::RootKeys_optional sub_1A2174D14@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  IMCore::CountStatistics::RootKeys_optional result;
  char v5;

  result.value = CountStatistics.RootKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1A2174D48()
{
  return 0;
}

void sub_1A2174D54(_BYTE *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_1A2174D60()
{
  sub_1A2176C18();
  return sub_1A2199BC0();
}

uint64_t sub_1A2174D88()
{
  sub_1A2176C18();
  return sub_1A2199BCC();
}

IMCore::CountStatistics::SyncStoreCountKeys_optional __swiftcall CountStatistics.SyncStoreCountKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IMCore::CountStatistics::SyncStoreCountKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A2199AB8();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

IMCore::CountStatistics::SyncStoreCountKeys_optional __swiftcall CountStatistics.SyncStoreCountKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  IMCore::CountStatistics::SyncStoreCountKeys_optional result;
  char v4;

  v2 = v1;
  result.value = CountStatistics.SyncStoreCountKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

IMCore::CountStatistics::SyncStoreCountKeys_optional __swiftcall CountStatistics.SyncStoreCountKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 10;
  return (IMCore::CountStatistics::SyncStoreCountKeys_optional)intValue;
}

uint64_t CountStatistics.SyncStoreCountKeys.intValue.getter()
{
  return 0;
}

uint64_t CountStatistics.SyncStoreCountKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A2174E8C + 4 * byte_1A21AEA26[*v0]))(0xD000000000000014, 0x80000001A21D3640);
}

unint64_t sub_1A2174E8C()
{
  return 0xD000000000000013;
}

uint64_t sub_1A2174EA8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

uint64_t CountStatistics.SyncStoreCountKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A2174F68 + 4 * byte_1A21AEA30[*v0]))(0xD000000000000014, 0x80000001A21D3640);
}

unint64_t sub_1A2174F68()
{
  return 0xD000000000000013;
}

uint64_t sub_1A2174F84@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

void sub_1A217500C(char *a1)
{
  sub_1A2185204(*a1);
}

uint64_t sub_1A2175018()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A2199B84();
  sub_1A21747BC((uint64_t)v3, v1);
  return sub_1A2199B9C();
}

void sub_1A217505C(uint64_t a1)
{
  char *v1;

  sub_1A21747BC(a1, *v1);
}

uint64_t sub_1A2175064()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A2199B84();
  sub_1A21747BC((uint64_t)v3, v1);
  return sub_1A2199B9C();
}

IMCore::CountStatistics::SyncStoreCountKeys_optional sub_1A21750A4(Swift::String *a1)
{
  return CountStatistics.SyncStoreCountKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A21750B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CountStatistics.SyncStoreCountKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

IMCore::CountStatistics::SyncStoreCountKeys_optional sub_1A21750D8@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  IMCore::CountStatistics::SyncStoreCountKeys_optional result;
  char v5;

  result.value = CountStatistics.SyncStoreCountKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A217510C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1A2175118()
{
  sub_1A2176C5C();
  return sub_1A2199BC0();
}

uint64_t sub_1A2175140()
{
  sub_1A2176C5C();
  return sub_1A2199BCC();
}

IMCore::CountStatistics::ServerZoneKeys_optional __swiftcall CountStatistics.ServerZoneKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IMCore::CountStatistics::ServerZoneKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A2199AB8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

IMCore::CountStatistics::ServerZoneKeys_optional __swiftcall CountStatistics.ServerZoneKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  IMCore::CountStatistics::ServerZoneKeys_optional result;
  char v4;

  v2 = v1;
  result.value = CountStatistics.ServerZoneKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

IMCore::CountStatistics::ServerZoneKeys_optional __swiftcall CountStatistics.ServerZoneKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 5;
  return (IMCore::CountStatistics::ServerZoneKeys_optional)intValue;
}

uint64_t CountStatistics.ServerZoneKeys.intValue.getter()
{
  return 0;
}

uint64_t CountStatistics.ServerZoneKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A2175244 + 4 * byte_1A21AEA3A[*v0]))(0xD000000000000012, 0x80000001A21D37B0);
}

uint64_t sub_1A2175244()
{
  return 0x616E614D74616863;
}

uint64_t sub_1A2175268@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

uint64_t CountStatistics.ServerZoneKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A21752E4 + 4 * byte_1A21AEA3F[*v0]))(0xD000000000000012, 0x80000001A21D37B0);
}

uint64_t sub_1A21752E4()
{
  return 0x616E614D74616863;
}

uint64_t sub_1A2175308@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

void sub_1A217534C(char *a1)
{
  sub_1A2185078(*a1);
}

void sub_1A2175358()
{
  char *v0;

  sub_1A2174438(*v0);
}

void sub_1A2175360(uint64_t a1)
{
  char *v1;

  sub_1A21746F8(a1, *v1);
}

void sub_1A2175368(uint64_t a1)
{
  char *v1;

  sub_1A2174BC8(a1, *v1);
}

IMCore::CountStatistics::ServerZoneKeys_optional sub_1A2175370(Swift::String *a1)
{
  return CountStatistics.ServerZoneKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A217537C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CountStatistics.ServerZoneKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

IMCore::CountStatistics::ServerZoneKeys_optional sub_1A21753A4@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  IMCore::CountStatistics::ServerZoneKeys_optional result;
  char v5;

  result.value = CountStatistics.ServerZoneKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A21753D8(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A21753E4()
{
  sub_1A2176CA0();
  return sub_1A2199BC0();
}

uint64_t sub_1A217540C()
{
  sub_1A2176CA0();
  return sub_1A2199BCC();
}

IMCore::CountStatistics::ServerCountKeys_optional __swiftcall CountStatistics.ServerCountKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IMCore::CountStatistics::ServerCountKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A2199AB8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

IMCore::CountStatistics::ServerCountKeys_optional __swiftcall CountStatistics.ServerCountKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IMCore::CountStatistics::ServerCountKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A2199AB8();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1)
      v5 = 1;
    else
      v5 = 2;
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

IMCore::CountStatistics::ServerCountKeys_optional __swiftcall CountStatistics.ServerCountKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (IMCore::CountStatistics::ServerCountKeys_optional)intValue;
}

uint64_t CountStatistics.ServerCountKeys.intValue.getter()
{
  return 0;
}

uint64_t CountStatistics.ServerCountKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6365725F6576696CLL;
  else
    return 0x65725F6C61746F74;
}

uint64_t CountStatistics.ServerCountKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6365725F6576696CLL;
  else
    return 0x65725F6C61746F74;
}

uint64_t sub_1A21755B8(char *a1, char *a2)
{
  return sub_1A2185408(*a1, *a2);
}

uint64_t sub_1A21755C4()
{
  return sub_1A2174528();
}

uint64_t sub_1A21755CC()
{
  return sub_1A21748BC();
}

uint64_t sub_1A21755D4()
{
  return sub_1A2174B38();
}

IMCore::CountStatistics::ServerCountKeys_optional sub_1A21755DC(Swift::String *a1)
{
  return CountStatistics.ServerCountKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A21755E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CountStatistics.ServerCountKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A2175614(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A2175620()
{
  sub_1A2176E84();
  return sub_1A2199BC0();
}

uint64_t sub_1A2175648()
{
  sub_1A2176E84();
  return sub_1A2199BCC();
}

uint64_t CountStatistics.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  char v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  char v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  __int128 v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  __int128 v251;
  char *v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char v261;
  _BYTE v262[16];
  char *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  unsigned __int8 v267;
  uint64_t v268;
  uint64_t v269;
  unsigned __int8 v270;
  _QWORD *v271;
  uint64_t v272;
  _BYTE v273[16];
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unsigned __int8 v278;
  uint64_t v279;
  uint64_t v280;
  unsigned __int8 v281;
  char *v282;
  uint64_t v283;
  _BYTE v284[16];
  __int128 v285;
  uint64_t v286;
  uint64_t v287;
  unsigned __int8 v288;
  uint64_t v289;
  uint64_t v290;
  unsigned __int8 v291;
  uint64_t v292;
  uint64_t v293;
  _BYTE v294[16];
  __int128 v295;
  uint64_t v296;
  uint64_t v297;
  unsigned __int8 v298;
  uint64_t v299;
  uint64_t v300;
  unsigned __int8 v301;
  uint64_t v302;
  uint64_t v303;
  _BYTE v304[16];
  __int128 v305;
  __int128 v306;
  char v307;
  __int128 v308;
  char v309;
  __int128 v310;
  _QWORD *v311;

  v259 = a2;
  v3 = sub_1A1FFD920(&qword_1EE65C198);
  v4 = MEMORY[0x1E0C80A78](v3);
  v254 = (char *)&v206 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  *(_QWORD *)&v251 = (char *)&v206 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v249 = (uint64_t)&v206 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v247 = (uint64_t)&v206 - v11;
  MEMORY[0x1E0C80A78](v10);
  v245 = (uint64_t)&v206 - v12;
  v257 = sub_1A1FFD920(&qword_1EE65C190);
  v253 = *(_QWORD *)(v257 - 8);
  v13 = MEMORY[0x1E0C80A78](v257);
  v252 = (char *)&v206 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v250 = (uint64_t)&v206 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v248 = (uint64_t)&v206 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v246 = (uint64_t)&v206 - v20;
  MEMORY[0x1E0C80A78](v19);
  v244 = (uint64_t)&v206 - v21;
  v22 = sub_1A1FFD920(&qword_1EE65C1B8);
  MEMORY[0x1E0C80A78](v22);
  v243 = (char *)&v206 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = sub_1A1FFD920(&qword_1EE65C1B0);
  v255 = *(_QWORD *)(v258 - 8);
  MEMORY[0x1E0C80A78](v258);
  v256 = (char *)&v206 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1A1FFD920(&qword_1EE65C1A8);
  MEMORY[0x1E0C80A78](v25);
  v241 = (uint64_t)&v206 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = (_QWORD *)sub_1A1FFD920(&qword_1EE65C1A0);
  v27 = *(v242 - 1);
  MEMORY[0x1E0C80A78](v242);
  v29 = (char *)&v206 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1A1FFD920(qword_1EE65C1C0);
  v31 = *(_BYTE **)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v206 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1[3];
  v311 = a1;
  sub_1A200A4E0(a1, v34);
  sub_1A2176C18();
  v35 = (uint64_t)v260;
  sub_1A2199BA8();
  if (!v35)
  {
    v240 = v27;
    v260 = v29;
    v36 = v31;
    v37 = v259;
    v261 = 0;
    v38 = v33;
    v39 = sub_1A2199AD0();
    if ((v40 & 1) != 0)
      v41 = 0;
    else
      v41 = v39;
    v261 = 1;
    v42 = sub_1A2199AD0();
    v43 = v36;
    if ((v44 & 1) != 0)
      v45 = 0;
    else
      v45 = v42;
    v261 = 2;
    v46 = sub_1A2199AD0();
    v239 = v30;
    if ((v47 & 1) != 0)
      v49 = 0;
    else
      v49 = v46;
    if (v41 < 0 || v45 < 0 || (v237 = v45, v238 = v38, v236 = v49, v49 < 0))
    {
      sub_1A2199A64();
      __break(1u);
      goto LABEL_99;
    }
    v261 = 5;
    v50 = sub_1A2199AD0();
    if ((v51 & 1) != 0)
      v52 = 0;
    else
      v52 = v50;
    v261 = 6;
    v53 = sub_1A2199AD0();
    v235 = v52;
    if ((v54 & 1) != 0)
      v55 = 0;
    else
      v55 = v53;
    v261 = 7;
    v56 = sub_1A2199AD0();
    v234 = v55;
    if ((v57 & 1) != 0)
      v58 = 0;
    else
      v58 = v56;
    v261 = 8;
    v59 = sub_1A2199AD0();
    v233 = v58;
    if ((v60 & 1) != 0)
      v30 = 0;
    else
      v30 = v59;
    v261 = 9;
    v61 = sub_1A2199AD0();
    if ((v62 & 1) != 0)
      v63 = 0;
    else
      v63 = v61;
    v232 = v63;
    v261 = 10;
    v64 = sub_1A2199AD0();
    if ((v65 & 1) != 0)
      v66 = 0;
    else
      v66 = v64;
    v231 = v66;
    v261 = 11;
    v67 = sub_1A2199AD0();
    if ((v68 & 1) != 0)
      v69 = 0;
    else
      v69 = v67;
    v230 = v69;
    v261 = 12;
    v70 = sub_1A2199AD0();
    if ((v71 & 1) != 0)
      v72 = 0;
    else
      v72 = v70;
    v229 = v72;
    v261 = 13;
    v73 = sub_1A2199AD0();
    if ((v74 & 1) != 0)
      v75 = 0;
    else
      v75 = v73;
    v228 = v75;
    v261 = 14;
    v76 = sub_1A2199AD0();
    if ((v77 & 1) != 0)
      v78 = 0;
    else
      v78 = v76;
    v227 = v78;
    v261 = 15;
    v79 = sub_1A2199AD0();
    if ((v80 & 1) != 0)
      v81 = 0;
    else
      v81 = v79;
    v226 = v81;
    v261 = 16;
    v82 = sub_1A2199AD0();
    if ((v83 & 1) != 0)
      v84 = 0;
    else
      v84 = v82;
    v225 = v84;
    v261 = 17;
    v85 = sub_1A2199AD0();
    if ((v86 & 1) != 0)
      v87 = 0;
    else
      v87 = v85;
    v224 = v87;
    v261 = 18;
    v88 = sub_1A2199AD0();
    if ((v89 & 1) != 0)
      v90 = 0;
    else
      v90 = v88;
    v223 = v90;
    v261 = 19;
    v91 = sub_1A2199AD0();
    if ((v92 & 1) != 0)
      v93 = 0;
    else
      v93 = v91;
    v222 = v93;
    v261 = 20;
    v94 = sub_1A2199AD0();
    if ((v95 & 1) != 0)
      v96 = 0;
    else
      v96 = v94;
    v221 = v96;
    v261 = 21;
    v97 = sub_1A2199AD0();
    if ((v98 & 1) != 0)
      v99 = 0;
    else
      v99 = v97;
    v220 = v99;
    v261 = 22;
    v100 = sub_1A2199AD0();
    if ((v101 & 1) != 0)
      v102 = 0;
    else
      v102 = v100;
    v219 = v102;
    v261 = 4;
    sub_1A2176C5C();
    sub_1A2199AC4();
    v125 = v240;
    v126 = v241;
    v127 = v242;
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v240 + 56))(v241, 0, 1, v242);
    (*(void (**)(char *, uint64_t, _QWORD *))(v125 + 32))(v260, v126, v127);
    v261 = 0;
    v128 = sub_1A2199AD0();
    if ((v129 & 1) != 0)
      v130 = 0;
    else
      v130 = v128;
    v241 = v130;
    v261 = 1;
    v131 = sub_1A2199AD0();
    if ((v132 & 1) != 0)
      v133 = 0;
    else
      v133 = v131;
    *(_QWORD *)&v218 = v133;
    v261 = 2;
    v134 = sub_1A2199AD0();
    if ((v135 & 1) != 0)
      v136 = 0;
    else
      v136 = v134;
    v217 = v136;
    v261 = 3;
    v137 = sub_1A2199AD0();
    if ((v138 & 1) != 0)
      v139 = 0;
    else
      v139 = v137;
    v216 = v139;
    v261 = 4;
    v140 = sub_1A2199AD0();
    if ((v141 & 1) != 0)
      v142 = 0;
    else
      v142 = v140;
    v215 = v142;
    v261 = 5;
    v143 = sub_1A2199AD0();
    if ((v144 & 1) != 0)
      v145 = 0;
    else
      v145 = v143;
    v214 = v145;
    v261 = 6;
    v146 = sub_1A2199AD0();
    if ((v147 & 1) != 0)
      v148 = 0;
    else
      v148 = v146;
    v213 = v148;
    v261 = 7;
    v149 = sub_1A2199AD0();
    if ((v150 & 1) != 0)
      v151 = 0;
    else
      v151 = v149;
    v212 = v151;
    v261 = 8;
    v152 = sub_1A2199AD0();
    v154 = v153;
    v261 = 9;
    v210 = sub_1A2199AD0();
    while (1)
    {
      v203 = v103;
      if ((v154 & 1) != 0)
        v204 = 0;
      else
        v204 = v152;
      v211 = v204;
      (*(void (**)(char *, _QWORD *))(v240 + 8))(v260, v242);
      v205 = v210;
      if ((v203 & 1) != 0)
        v205 = 0;
      v260 = (char *)v205;
      v261 = 3;
      sub_1A2176CA0();
      sub_1A2199AC4();
      v155 = v255;
      v156 = v243;
      v157 = v258;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v243, 0, 1, v258);
      (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v256, v156, v157);
      v261 = 0;
      v243 = (char *)sub_1A2176E84();
      sub_1A2199AC4();
      v158 = v253;
      v159 = v245;
      v160 = v257;
      v242 = *(_QWORD **)(v253 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v242)(v245, 0, 1, v257);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 32))(v244, v159, v160);
      v261 = 0;
      v161 = sub_1A2199AD0();
      v163 = v162;
      v261 = 1;
      v240 = sub_1A2199AD0();
      v185 = v184;
      if ((v163 & 1) != 0)
        v186 = 0;
      else
        v186 = v161;
      v245 = v186;
      (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v244, v257);
      v187 = v240;
      if ((v185 & 1) != 0)
        v187 = 0;
      v244 = v187;
      v261 = 1;
      sub_1A2199AC4();
      v43 = 0;
LABEL_99:
      v164 = v247;
      v165 = v257;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v242)(v247, 0, 1, v257);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v253 + 32))(v246, v164, v165);
      v261 = 0;
      v166 = sub_1A2199AD0();
      if (v43)
        break;
      v168 = v166;
      v169 = v167;
      v261 = 1;
      v240 = sub_1A2199AD0();
      v189 = v188;
      if ((v169 & 1) != 0)
        v190 = 0;
      else
        v190 = v168;
      v247 = v190;
      (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v246, v257);
      v191 = v240;
      if ((v189 & 1) != 0)
        v191 = 0;
      v246 = v191;
      v261 = 2;
      sub_1A2199AC4();
      v170 = v249;
      v171 = v257;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v242)(v249, 0, 1, v257);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v253 + 32))(v248, v170, v171);
      v261 = 0;
      v172 = sub_1A2199AD0();
      v174 = v173;
      v261 = 1;
      v240 = sub_1A2199AD0();
      v193 = v192;
      if ((v174 & 1) != 0)
        v194 = 0;
      else
        v194 = v172;
      v249 = v194;
      (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v248, v257);
      v195 = v240;
      if ((v193 & 1) != 0)
        v195 = 0;
      v248 = v195;
      v261 = 3;
      sub_1A2199AC4();
      v175 = v251;
      v176 = v257;
      ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))v242)(v251, 0, 1, v257);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v253 + 32))(v250, v175, v176);
      v261 = 0;
      v177 = sub_1A2199AD0();
      v179 = v178;
      v261 = 1;
      v240 = sub_1A2199AD0();
      v197 = v196;
      if ((v179 & 1) != 0)
        v198 = 0;
      else
        v198 = v177;
      *(_QWORD *)&v251 = v198;
      (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v250, v257);
      v199 = v240;
      if ((v197 & 1) != 0)
        v199 = 0;
      v250 = v199;
      v261 = 4;
      sub_1A2199AC4();
      v180 = v254;
      v181 = v257;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v242)(v254, 0, 1, v257);
      (*(void (**)(char *, char *, uint64_t))(v253 + 32))(v252, v180, v181);
      v261 = 0;
      v182 = sub_1A2199AD0();
      LODWORD(v254) = v183;
      v152 = v182;
      v261 = 1;
      v200 = sub_1A2199AD0();
      v154 = v201;
      if ((v254 & 1) != 0)
        v152 = 0;
      (*(void (**)(char *, uint64_t))(v253 + 8))(v252, v257);
      (*(void (**)(char *, uint64_t))(v255 + 8))(v256, v258);
      (*((void (**)(char *, uint64_t))v36 + 1))(v238, v239);
      if ((v154 & 1) != 0)
        v202 = 0;
      else
        v202 = v200;
      v210 = v202;
      v36 = v273;
      sub_1A2185AD4(0, v234, v235, v233, v30, v245, v244, v241, (uint64_t)v262, v218);
      LODWORD(v258) = v262[0];
      LODWORD(v257) = v262[8];
      v255 = v264;
      v256 = v263;
      v253 = v266;
      v254 = v265;
      LODWORD(v252) = v267;
      v244 = v269;
      v245 = v268;
      LODWORD(v243) = v270;
      v241 = v272;
      v242 = v271;
      sub_1A2185AD4(1, v231, v232, v230, v229, v247, v246, v217, (uint64_t)v273, v216);
      LODWORD(v234) = v273[0];
      LODWORD(v233) = v273[8];
      v231 = v275;
      v232 = v274;
      v229 = v277;
      v230 = v276;
      LODWORD(v247) = v278;
      v246 = v279;
      v240 = v280;
      LODWORD(v239) = v281;
      v238 = v282;
      v235 = v283;
      sub_1A2185AD4(2, v227, v228, v226, v225, v249, v248, v215, (uint64_t)v284, v214);
      v104 = v220 + v219;
      if (!__OFADD__(v220, v219))
      {
        v248 = v292;
        v249 = v293;
        LODWORD(v228) = v291;
        v226 = v289;
        v227 = v290;
        LODWORD(v225) = v288;
        v219 = v286;
        v220 = v287;
        v218 = v285;
        LODWORD(v217) = v284[8];
        LODWORD(v216) = v284[0];
        sub_1A2185AD4(3, 0, v104, 0, 0, v251, v250, v213, (uint64_t)v294, v212);
        v105 = v294[0];
        v106 = v294[8];
        v251 = v295;
        v250 = v296;
        v215 = v297;
        LODWORD(v214) = v298;
        v212 = v300;
        v213 = v299;
        v209 = v301;
        v207 = v303;
        v208 = v302;
        sub_1A2185AD4(4, v223, v224, v222, v221, v152, v210, v211, (uint64_t)v304, (uint64_t)v260);
        v107 = v237;
        *(_QWORD *)v37 = v41;
        *(_QWORD *)(v37 + 8) = v107;
        *(_QWORD *)(v37 + 16) = v236;
        *(_BYTE *)(v37 + 24) = v258;
        *(_BYTE *)(v37 + 32) = v257;
        v108 = v255;
        *(_QWORD *)(v37 + 40) = v256;
        *(_QWORD *)(v37 + 48) = v108;
        v109 = v253;
        *(_QWORD *)(v37 + 56) = v254;
        *(_QWORD *)(v37 + 64) = v109;
        *(_BYTE *)(v37 + 72) = (_BYTE)v252;
        v110 = v244;
        *(_QWORD *)(v37 + 80) = v245;
        *(_QWORD *)(v37 + 88) = v110;
        *(_BYTE *)(v37 + 96) = (_BYTE)v243;
        v111 = v241;
        *(_QWORD *)(v37 + 104) = v242;
        *(_QWORD *)(v37 + 112) = v111;
        *(_BYTE *)(v37 + 120) = v234;
        *(_BYTE *)(v37 + 128) = v233;
        v112 = v231;
        *(_QWORD *)(v37 + 136) = v232;
        *(_QWORD *)(v37 + 144) = v112;
        v113 = v229;
        *(_QWORD *)(v37 + 152) = v230;
        *(_QWORD *)(v37 + 160) = v113;
        LOBYTE(v113) = v304[0];
        *(_BYTE *)(v37 + 168) = v247;
        v114 = v304[8];
        *(_QWORD *)(v37 + 176) = v246;
        v115 = v307;
        *(_QWORD *)(v37 + 184) = v240;
        v116 = v309;
        *(_BYTE *)(v37 + 192) = v239;
        v117 = v235;
        *(_QWORD *)(v37 + 200) = v238;
        *(_QWORD *)(v37 + 208) = v117;
        *(_BYTE *)(v37 + 216) = v216;
        *(_BYTE *)(v37 + 224) = v217;
        *(_OWORD *)(v37 + 232) = v218;
        v118 = v220;
        *(_QWORD *)(v37 + 248) = v219;
        *(_QWORD *)(v37 + 256) = v118;
        *(_BYTE *)(v37 + 264) = v225;
        v119 = v227;
        *(_QWORD *)(v37 + 272) = v226;
        *(_QWORD *)(v37 + 280) = v119;
        *(_BYTE *)(v37 + 288) = v228;
        v120 = v249;
        *(_QWORD *)(v37 + 296) = v248;
        *(_QWORD *)(v37 + 304) = v120;
        *(_BYTE *)(v37 + 312) = v105;
        *(_BYTE *)(v37 + 320) = v106;
        *(_OWORD *)(v37 + 328) = v251;
        v121 = v215;
        *(_QWORD *)(v37 + 344) = v250;
        *(_QWORD *)(v37 + 352) = v121;
        *(_BYTE *)(v37 + 360) = v214;
        v122 = v212;
        *(_QWORD *)(v37 + 368) = v213;
        *(_QWORD *)(v37 + 376) = v122;
        *(_BYTE *)(v37 + 384) = v209;
        v123 = v207;
        *(_QWORD *)(v37 + 392) = v208;
        *(_QWORD *)(v37 + 400) = v123;
        *(_BYTE *)(v37 + 408) = v113;
        *(_BYTE *)(v37 + 416) = v114;
        v124 = v306;
        *(_OWORD *)(v37 + 424) = v305;
        *(_OWORD *)(v37 + 440) = v124;
        *(_BYTE *)(v37 + 456) = v115;
        *(_OWORD *)(v37 + 464) = v308;
        *(_BYTE *)(v37 + 480) = v116;
        *(_OWORD *)(v37 + 488) = v310;
        return sub_1A200A548((uint64_t)v311);
      }
      __break(1u);
    }
    (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v246, v257);
    (*(void (**)(char *, uint64_t))(v255 + 8))(v256, v258);
    (*((void (**)(char *, uint64_t))v36 + 1))(v238, v239);
  }
  return sub_1A200A548((uint64_t)v311);
}

unint64_t sub_1A2176C18()
{
  unint64_t result;

  result = qword_1EE65C168;
  if (!qword_1EE65C168)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.RootKeys, &type metadata for CountStatistics.RootKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C168);
  }
  return result;
}

unint64_t sub_1A2176C5C()
{
  unint64_t result;

  result = qword_1EE65C138;
  if (!qword_1EE65C138)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.SyncStoreCountKeys, &type metadata for CountStatistics.SyncStoreCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C138);
  }
  return result;
}

unint64_t sub_1A2176CA0()
{
  unint64_t result;

  result = qword_1EE65C150;
  if (!qword_1EE65C150)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerZoneKeys, &type metadata for CountStatistics.ServerZoneKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C150);
  }
  return result;
}

uint64_t CountStatistics.description.getter()
{
  uint64_t v1;

  v1 = sub_1A21854BC();
  sub_1A2199788();
  sub_1A21854BC();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A21854BC();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A21854BC();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A21854BC();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A2176E6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CountStatistics.init(from:)(a1, a2);
}

unint64_t sub_1A2176E84()
{
  unint64_t result;

  result = qword_1EE65C120;
  if (!qword_1EE65C120)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerCountKeys, &type metadata for CountStatistics.ServerCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C120);
  }
  return result;
}

unint64_t sub_1A2176ECC()
{
  unint64_t result;

  result = qword_1EE65E560;
  if (!qword_1EE65E560)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.RootKeys, &type metadata for CountStatistics.RootKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E560);
  }
  return result;
}

unint64_t sub_1A2176F14()
{
  unint64_t result;

  result = qword_1EE65C160;
  if (!qword_1EE65C160)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.RootKeys, &type metadata for CountStatistics.RootKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C160);
  }
  return result;
}

unint64_t sub_1A2176F5C()
{
  unint64_t result;

  result = qword_1EE65C158;
  if (!qword_1EE65C158)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.RootKeys, &type metadata for CountStatistics.RootKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C158);
  }
  return result;
}

unint64_t sub_1A2176FA4()
{
  unint64_t result;

  result = qword_1EE65E568;
  if (!qword_1EE65E568)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.SyncStoreCountKeys, &type metadata for CountStatistics.SyncStoreCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E568);
  }
  return result;
}

unint64_t sub_1A2176FEC()
{
  unint64_t result;

  result = qword_1EE65C130;
  if (!qword_1EE65C130)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.SyncStoreCountKeys, &type metadata for CountStatistics.SyncStoreCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C130);
  }
  return result;
}

unint64_t sub_1A2177034()
{
  unint64_t result;

  result = qword_1EE65C128;
  if (!qword_1EE65C128)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.SyncStoreCountKeys, &type metadata for CountStatistics.SyncStoreCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C128);
  }
  return result;
}

unint64_t sub_1A217707C()
{
  unint64_t result;

  result = qword_1EE65E570;
  if (!qword_1EE65E570)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerZoneKeys, &type metadata for CountStatistics.ServerZoneKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E570);
  }
  return result;
}

unint64_t sub_1A21770C4()
{
  unint64_t result;

  result = qword_1EE65C148;
  if (!qword_1EE65C148)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerZoneKeys, &type metadata for CountStatistics.ServerZoneKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C148);
  }
  return result;
}

unint64_t sub_1A217710C()
{
  unint64_t result;

  result = qword_1EE65C140;
  if (!qword_1EE65C140)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerZoneKeys, &type metadata for CountStatistics.ServerZoneKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C140);
  }
  return result;
}

unint64_t sub_1A2177154()
{
  unint64_t result;

  result = qword_1EE65E578;
  if (!qword_1EE65E578)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerCountKeys, &type metadata for CountStatistics.ServerCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E578);
  }
  return result;
}

unint64_t sub_1A217719C()
{
  unint64_t result;

  result = qword_1EE65C118;
  if (!qword_1EE65C118)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerCountKeys, &type metadata for CountStatistics.ServerCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C118);
  }
  return result;
}

unint64_t sub_1A21771E4()
{
  unint64_t result;

  result = qword_1EE65C110;
  if (!qword_1EE65C110)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics.ServerCountKeys, &type metadata for CountStatistics.ServerCountKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65C110);
  }
  return result;
}

void *initializeWithCopy for CountStatistics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F8uLL);
}

uint64_t getEnumTagSinglePayload for CountStatistics(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 504))
    return (*(_DWORD *)a1 + 251);
  if (*(unsigned __int8 *)(a1 + 24) <= 5u)
    v3 = 5;
  else
    v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 - 6;
  if (*(unsigned __int8 *)(a1 + 24) < 5u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CountStatistics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 504) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 504) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics()
{
  return &type metadata for CountStatistics;
}

_BYTE *initializeBufferWithCopyOfBuffer for SyncCountType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CountStatistics.RootKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CountStatistics.RootKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1A2177444 + 4 * byte_1A21AEA49[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1A2177478 + 4 * byte_1A21AEA44[v4]))();
}

uint64_t sub_1A2177478(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2177480(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2177488);
  return result;
}

uint64_t sub_1A2177494(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A217749CLL);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1A21774A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21774A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.RootKeys()
{
  return &type metadata for CountStatistics.RootKeys;
}

uint64_t getEnumTagSinglePayload for CountStatistics.SyncStoreCountKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CountStatistics.SyncStoreCountKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A21775A4 + 4 * byte_1A21AEA53[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A21775D8 + 4 * byte_1A21AEA4E[v4]))();
}

uint64_t sub_1A21775D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21775E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A21775E8);
  return result;
}

uint64_t sub_1A21775F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A21775FCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A2177600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2177608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2177614(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1A217761C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.SyncStoreCountKeys()
{
  return &type metadata for CountStatistics.SyncStoreCountKeys;
}

uint64_t getEnumTagSinglePayload for SyncCountType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CountStatistics.ServerZoneKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A2177710 + 4 * byte_1A21AEA5D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A2177744 + 4 * byte_1A21AEA58[v4]))();
}

uint64_t sub_1A2177744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A217774C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2177754);
  return result;
}

uint64_t sub_1A2177760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2177768);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A217776C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2177774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.ServerZoneKeys()
{
  return &type metadata for CountStatistics.ServerZoneKeys;
}

uint64_t getEnumTagSinglePayload for CountStatistics.ServerCountKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CountStatistics.ServerCountKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A217786C + 4 * byte_1A21AEA67[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A21778A0 + 4 * byte_1A21AEA62[v4]))();
}

uint64_t sub_1A21778A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21778A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A21778B0);
  return result;
}

uint64_t sub_1A21778BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A21778C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A21778C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21778D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1A21778DC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.ServerCountKeys()
{
  return &type metadata for CountStatistics.ServerCountKeys;
}

id sub_1A2177A48(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  v5 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  sub_1A2177B2C(a3, (uint64_t)v7);

  v9 = sub_1A21995CC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
  {
    v11 = (void *)sub_1A219959C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  return v11;
}

uint64_t sub_1A2177B2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2 + *a1))
  {
    v8 = sub_1A21995CC();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(v7, 1, 1, v8);
    sub_1A2179C74();
    sub_1A2199AAC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      v11 = a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
      v11 = a2;
      v12 = 0;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10)(v11, v12, 1, v8);
  }
  else
  {
    v13 = sub_1A21995CC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

uint64_t sub_1A2177C9C()
{
  void *v0;
  id v1;
  unsigned int v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  v2 = objc_msgSend(v1, sel_isMessagesIniCloudVersion2);

  if (!v2)
    __asm { BR              X10 }
  if (objc_msgSend(v0, sel_syncStatus) == (id)1)
    return objc_msgSend(v0, sel_syncingFailed) ^ 1;
  else
    return 0;
}

void sub_1A2177E04()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1A2177DF4);
}

void sub_1A2177E5C()
{
  __asm { BR              X11 }
}

uint64_t sub_1A2177EA8()
{
  char v0;

  v0 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

void sub_1A2177F68()
{
  __asm { BR              X9 }
}

uint64_t sub_1A2177FCC()
{
  char v0;
  char v2;

  v2 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    __asm { BR              X9 }
  return v0 & 1;
}

void sub_1A21781E8()
{
  __asm { BR              X9 }
}

uint64_t sub_1A217824C()
{
  char v0;
  char v2;

  v2 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    __asm { BR              X9 }
  return v0 & 1;
}

id sub_1A2178564()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_isSyncingAvailable);
  if ((_DWORD)result)
  {
    if ((objc_msgSend(v0, sel_isSyncingEnabled) & 1) != 0
      || objc_msgSend(v0, sel_changingEnabledState) == (id)1)
    {
      return 0;
    }
    else
    {
      return (id)(objc_msgSend(v0, sel_changingEnabledState) != (id)2);
    }
  }
  return result;
}

id sub_1A2178608()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_isSyncingEnabled);
  if ((_DWORD)result)
  {
    if ((objc_msgSend(v0, sel_isSyncing) & 1) != 0
      || objc_msgSend(v0, sel_changingEnabledState) == (id)1
      || objc_msgSend(v0, sel_changingEnabledState) == (id)2)
    {
      return 0;
    }
    else
    {
      return (id)(objc_msgSend(v0, sel_isDisablingDevices) ^ 1);
    }
  }
  return result;
}

uint64_t sub_1A2178730()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  int v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  unsigned __int8 v28;

  v1 = v0;
  v2 = sub_1A21996F8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_changingEnabledState);
  if (v6 != (id)2)
  {
    if (v6 == (id)1)
    {
      v28 = 1;
      goto LABEL_13;
    }
    if (v6)
    {
      if (qword_1EE65C0A8 != -1)
        swift_once();
      sub_1A200A4C8(v2, (uint64_t)qword_1EE6617D0);
      v7 = sub_1A21996E0();
      v8 = sub_1A21998A8();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1A1FF4000, v7, v8, "Encountered unnknown changing enabled state setting enabled to false", v9, 2u);
        MEMORY[0x1A8583364](v9, -1, -1);
      }

    }
    else if (!objc_msgSend(v0, sel_isDisablingDevices))
    {
      v28 = objc_msgSend(v0, sel_isSyncingEnabled);
      goto LABEL_13;
    }
  }
  v28 = 0;
LABEL_13:
  if (qword_1EE65C0A8 != -1)
    swift_once();
  v10 = sub_1A200A4C8(v2, (uint64_t)qword_1EE6617D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v11 = v28;
  v12 = v1;
  v13 = sub_1A21996E0();
  v14 = sub_1A21998C0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v25 = v3;
    v17 = (_QWORD *)v16;
    v18 = swift_slowAlloc();
    v27[0] = v18;
    *(_DWORD *)v15 = 136315394;
    if (v11)
      v19 = 5457241;
    else
      v19 = 20302;
    v24 = v5;
    if (v11)
      v20 = 0xE300000000000000;
    else
      v20 = 0xE200000000000000;
    v26 = sub_1A200F6C8(v19, v20, v27);
    v23 = v2;
    sub_1A2199968();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2112;
    v26 = (uint64_t)v12;
    v21 = v12;
    sub_1A2199968();
    *v17 = v12;

    _os_log_impl(&dword_1A1FF4000, v13, v14, "isSyncEnabledForDisplayOnly = %s, State: %@", (uint8_t *)v15, 0x16u);
    sub_1A1FFD920(&qword_1EE65C2C0);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v18, -1, -1);
    MEMORY[0x1A8583364](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_beginAccess();
  return v28;
}

void sub_1A2178B44()
{
  void *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;

  v1 = (char *)objc_msgSend(v0, sel_syncJobState);
  if ((unint64_t)(v1 - 1) < 3)
  {
LABEL_5:
    v5 = (void *)sub_1A2199758();
    v6 = (void *)sub_1A2199758();
    v7 = (void *)sub_1A2199758();
    v8 = IMCoreLocalizedString(v5, v6);

    if (v8)
    {
      sub_1A2199764();

    }
    return;
  }
  if ((unint64_t)(v1 - 4) >= 2)
  {
    if (v1
      || (objc_msgSend(v0, sel_isBetweenInitialAndFullSync) & 1) == 0
      && (!objc_msgSend(v0, sel_hasNotSyncedInLastSevenDays)
       || objc_msgSend(v0, sel_accountStatus) != (id)2 && !objc_msgSend(v0, sel_accountNeedsRepair)))
    {
      return;
    }
    goto LABEL_5;
  }
  v2 = objc_msgSend(v0, sel_statistics);
  if (v2)
  {
    v3 = v2;
    v4 = (uint64_t)objc_msgSend(v2, sel_remainingMessagesCount);

  }
  else
  {
    v4 = 0;
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v4);
  v10 = objc_msgSend((id)objc_opt_self(), sel___ck_defaultNumberFormatter);
  v11 = objc_msgSend(v10, sel_stringFromNumber_, v9);
  if (v11)
  {
    v12 = v11;
    v13 = sub_1A2199764();
    v15 = v14;

    if (v4 >= 1)
    {
      v16 = (void *)sub_1A2199758();
      v17 = (void *)sub_1A2199758();
      v18 = (void *)sub_1A2199758();
      v19 = IMCoreLocalizedString(v16, v17);

      if (v19)
      {
        sub_1A2199764();

        sub_1A1FFD920(&qword_1EE65E630);
        v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1A21AF150;
        v21 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v20 + 64) = v21;
        *(_QWORD *)(v20 + 32) = v4;
        *(_QWORD *)(v20 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v20 + 104) = sub_1A2179C30();
        *(_QWORD *)(v20 + 72) = v13;
        *(_QWORD *)(v20 + 80) = v15;
        sub_1A2199770();

        swift_bridgeObjectRelease();
      }
      else
      {
        __break(1u);
      }
      return;
    }
    swift_bridgeObjectRelease();
  }
  v22 = (void *)sub_1A2199758();
  v23 = (void *)sub_1A2199758();
  v24 = (void *)sub_1A2199758();
  v25 = IMCoreLocalizedString(v22, v23);

  if (v25)
  {
    sub_1A2199764();

  }
  else
  {

  }
}

id sub_1A2179034(uint64_t a1, uint64_t a2, id a3)
{
  void *v3;
  void *v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;

  v4 = v3;
  v7 = objc_msgSend(v4, sel_errors);
  if (v7)
  {
    sub_1A1FFD920((uint64_t *)&unk_1EE65C0D8);
    v8 = sub_1A21997D0();

    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      for (i = 0; v9 != i; ++i)
      {
        v7 = *(id *)(v8 + 8 * i + 32);
        v11 = v7;
        v12 = (void *)sub_1A2199560();
        v13 = objc_msgSend(v12, sel_domain);
        v14 = sub_1A2199764();
        v16 = v15;

        if (v14 == a1 && v16 == a2)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v18 = sub_1A2199B48();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {

            continue;
          }
        }
        v19 = objc_msgSend(v12, sel_code);

        if (v19 == a3)
        {
          swift_bridgeObjectRelease();
          return v7;
        }

      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

uint64_t IMCloudKitSyncState.description.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  unint64_t v16;
  id v17;
  void *v18;
  unint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  id v23;
  void *v24;
  unint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  id v32;
  void *v33;
  unint64_t v34;
  id v35;
  void *v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  unint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;

  v1 = v0;
  v2 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v53 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v53 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v53 - v12;
  objc_msgSend(v1, sel_changingEnabledState);
  v14 = (id)IMStringFromCloudKitChangingSettingState();
  if (v14)
  {
    v15 = v14;
    v66 = sub_1A2199764();
    v67 = v16;

  }
  else
  {
    v66 = 7104878;
    v67 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncType);
  v17 = (id)IMStringFromIMCloudKitSyncType();
  if (v17)
  {
    v18 = v17;
    v72 = sub_1A2199764();
    v73 = v19;

  }
  else
  {
    v72 = 7104878;
    v73 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncStatus);
  v20 = (id)IMStringFromIMCloudKitSyncStatus();
  if (v20)
  {
    v21 = v20;
    v70 = sub_1A2199764();
    v71 = v22;

  }
  else
  {
    v70 = 7104878;
    v71 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncJobState);
  v23 = (id)IMStringFromIMCloudKitSyncJobState();
  if (v23)
  {
    v24 = v23;
    v68 = sub_1A2199764();
    v69 = v25;

  }
  else
  {
    v68 = 7104878;
    v69 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_accountStatus);
  v26 = (id)IMStringFromIMCloudKitAccountStatus();
  if (v26)
  {
    v27 = v26;
    v64 = sub_1A2199764();
    v65 = v28;

  }
  else
  {
    v64 = 7104878;
    v65 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncControllerSyncState);
  v29 = (id)IMStringFromIMCloudKitSyncControllerSyncState();
  if (v29)
  {
    v30 = v29;
    v62 = sub_1A2199764();
    v63 = v31;

  }
  else
  {
    v62 = 7104878;
    v63 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncControllerSyncType);
  v32 = (id)IMStringFromIMCloudKitSyncControllerSyncType();
  if (v32)
  {
    v33 = v32;
    v60 = sub_1A2199764();
    v61 = v34;

  }
  else
  {
    v60 = 7104878;
    v61 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncControllerRecordType);
  v35 = (id)IMStringFromIMCloudKitSyncControllerSyncRecordType();
  if (v35)
  {
    v36 = v35;
    v58 = sub_1A2199764();
    v59 = v37;

  }
  else
  {
    v58 = 7104878;
    v59 = 0xE300000000000000;
  }
  v38 = objc_msgSend(v1, sel_exitDate);
  if (v38)
  {
    v39 = v38;
    sub_1A21995B4();

    v40 = sub_1A21995CC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v11, 0, 1, v40);
  }
  else
  {
    v40 = sub_1A21995CC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v11, 1, 1, v40);
  }
  sub_1A2179B30((uint64_t)v11, (uint64_t)v13);
  sub_1A21995CC();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v42(v13, 1, v40) == 1)
  {
    sub_1A200F818((uint64_t)v13, (uint64_t *)&unk_1EE65C098);
    v55 = 0xE300000000000000;
    v54 = 7104878;
  }
  else
  {
    v54 = sub_1A2199584();
    v55 = v43;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v40);
  }
  v44 = objc_msgSend(v1, sel_lastSyncDate);
  if (v44)
  {
    v45 = v44;
    sub_1A21995B4();

    v46 = 0;
  }
  else
  {
    v46 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v5, v46, 1, v40);
  sub_1A2179B30((uint64_t)v5, (uint64_t)v8);
  if (v42(v8, 1, v40) == 1)
  {
    sub_1A200F818((uint64_t)v8, (uint64_t *)&unk_1EE65C098);
    v53 = 7104878;
  }
  else
  {
    v53 = sub_1A2199584();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v40);
  }
  v47 = objc_msgSend(v1, sel_errors, v53, v54, v55);
  if (v47)
  {
    v48 = v47;
    v49 = sub_1A1FFD920((uint64_t *)&unk_1EE65C0D8);
    v50 = sub_1A21997D0();

    v56 = MEMORY[0x1A8581A38](v50, v49);
    v57 = v51;
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = 7104878;
    v57 = 0xE300000000000000;
  }
  v74 = 0;
  v75 = 0xE000000000000000;
  sub_1A2199A04();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  objc_msgSend(v1, sel_isDisablingDevices);
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  objc_msgSend(v1, sel_hasExited);
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  return v74;
}

uint64_t sub_1A2179B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void __swiftcall IMCloudKitSyncState.init()(IMCloudKitSyncState *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMCloudKitSyncState.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t type metadata accessor for IMCloudKitSyncState()
{
  unint64_t result;

  result = qword_1EE65E628;
  if (!qword_1EE65E628)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE65E628);
  }
  return result;
}

unint64_t sub_1A2179C30()
{
  unint64_t result;

  result = qword_1EE65E638;
  if (!qword_1EE65E638)
  {
    result = MEMORY[0x1A85832D4](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE65E638);
  }
  return result;
}

unint64_t sub_1A2179C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE65C090;
  if (!qword_1EE65C090)
  {
    v1 = sub_1A21995CC();
    result = MEMORY[0x1A85832D4](MEMORY[0x1E0CB08E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE65C090);
  }
  return result;
}

uint64_t sub_1A2179CBC(void *a1)
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  unsigned int v9;

  if (objc_msgSend(a1, sel_accountNeedsRepair) && objc_msgSend(a1, sel_accountStatus) != (id)4
    || objc_msgSend(a1, sel_accountStatus) == (id)2)
  {

    return 0;
  }
  else if ((objc_msgSend(a1, sel_isSyncingEnabled) & 1) != 0)
  {
    if (objc_msgSend(a1, sel_isSyncingPaused))
    {

      return 2;
    }
    else
    {
      sub_1A2199764();
      v3 = (void *)sub_1A2199758();
      v4 = objc_msgSend(a1, sel_syncErrorWithDomain_code_, v3, 4);

      if (v4)
      {

        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A2199764();
        v5 = (void *)sub_1A2199758();
        v6 = objc_msgSend(a1, sel_syncErrorWithDomain_code_, v5, 5);

        if (v6)
        {

          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1A2199764();
          v7 = (void *)sub_1A2199758();
          v8 = objc_msgSend(a1, sel_syncErrorWithDomain_code_, v7, 6);

          if (v8)
          {

            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            swift_bridgeObjectRelease();
            if (objc_msgSend(a1, sel_syncingFailed)
              || (objc_msgSend(a1, sel_isSyncing) & 1) == 0)
            {

              return 6;
            }
            else
            {
              v9 = objc_msgSend(a1, sel_hasNotSyncedInLastSevenDays);

              if (v9)
                return 8;
              else
                return 7;
            }
          }
        }
      }
    }
  }
  else
  {

    return 1;
  }
}

void sub_1A2179EEC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1A21996F8();
  v3 = MEMORY[0x1E0C80A78](v2);
  v4 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

id sub_1A2179FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (qword_1EE65C0A8 != -1)
    swift_once();
  v7 = sub_1A200A4C8(v2, (uint64_t)qword_1EE6617D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v7, v2);
  v8 = sub_1A21996E0();
  v9 = sub_1A21998C0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_QWORD *)(v6 - 112) = v4;
    v12 = v11;
    *(_QWORD *)(v6 - 104) = v5;
    *(_DWORD *)v10 = 136315138;
    *(_QWORD *)(v6 - 88) = v11;
    if (v3 == 7)
      v13 = 0xD000000000000012;
    else
      v13 = 0x6C696146636E7973;
    if (v3 == 7)
      v14 = 0x80000001A21D43F0;
    else
      v14 = 0xEA00000000006465;
    *(_QWORD *)(v6 - 96) = sub_1A200F6C8(v13, v14, (uint64_t *)(v6 - 88));
    v5 = *(_QWORD *)(v6 - 104);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v8, v9, "Creating Hidden SyncProgress %s", v10, 0xCu);
    swift_arrayDestroy();
    v15 = v12;
    v4 = *(_QWORD *)(v6 - 112);
    MEMORY[0x1A8583364](v15, -1, -1);
    MEMORY[0x1A8583364](v10, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  return objc_msgSend(objc_allocWithZone((Class)IMCloudKitSyncProgress), sel_initWithType_syncState_syncStatistics_, 2, v5, v4);
}

_QWORD *sub_1A217AA1C(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1A2199A70())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A8581C78](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_serviceName);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1A2199764();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1A218BDA8(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1A218BDA8((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A217AEAC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IMServiceReachabilityControllerLiveDelegate()
{
  return objc_opt_self();
}

_QWORD *sub_1A217AEDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1A217AFC0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A217B7D4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1A217AFC0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

id sub_1A217B1BC()
{
  void *v0;
  id v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t i;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_serviceWithName_, v0);

  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return (id)v2;
  v14 = sub_1A2199764();
  swift_bridgeObjectRetain();
  sub_1A21999D4();
  result = objc_msgSend(v1, sel_serviceProperties);
  if (result)
  {
    v4 = result;
    v5 = sub_1A219974C();
    swift_bridgeObjectRelease();

    if (*(_QWORD *)(v5 + 16) && (v6 = sub_1A1FFD960((uint64_t)v15), (v7 & 1) != 0))
    {
      sub_1A1FFDAC4(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v16);
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A1FFDA54((uint64_t)v15);
    if (*((_QWORD *)&v17 + 1))
    {
      sub_1A1FFD920((uint64_t *)&unk_1EE65C278);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v15[0] = v2;
        v8 = *(_QWORD *)(v14 + 16);
        if (v8)
        {
          v13 = v1;
          v9 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          for (i = 0; i != v8; ++i)
          {
            swift_bridgeObjectRetain();
            v11 = (void *)sub_1A2199740();
            swift_bridgeObjectRelease();
            v12 = objc_msgSend(v9, sel_preconditionWithDictionary_, v11);

            if (v12)
            {
              MEMORY[0x1A8581A14]();
              if (*(_QWORD *)((v15[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15[0] & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
                sub_1A21997F4();
              sub_1A2199800();
              sub_1A21997E8();
            }
          }
          swift_bridgeObjectRelease();
          v2 = v15[0];
          v1 = v13;
        }
        swift_bridgeObjectRelease();
      }

    }
    else
    {

      sub_1A2173D58((uint64_t)&v16);
    }
    return (id)v2;
  }
  __break(1u);
  return result;
}

void *sub_1A217B484()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1A2199758();
  v2 = objc_msgSend(v0, sel_serviceWithInternalName_, v1);

  if (!v2)
    return 0;
  v3 = IMPreferredAccountForService(v2);
  v4 = v3;
  if (!v3)
  {

    return v4;
  }
  v5 = objc_msgSend(v3, sel_uniqueID);

  if (!v5)
  {

    return 0;
  }
  v4 = (void *)sub_1A2199764();

  return v4;
}

uint64_t sub_1A217B568(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x1A8581C78](v3, a1);
LABEL_9:
        v6 = v5;
        v7 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        if (objc_msgSend(v5, sel__isUsableForSending))
        {
          sub_1A2199A34();
          sub_1A2199A4C();
          sub_1A2199A58();
          sub_1A2199A40();
          v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {

        }
        ++v3;
        if (v7 == v2)
          return v9;
      }
      if (v3 < *(_QWORD *)(v4 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_1A2199A70();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1A217B6CC()
{
  id v0;
  void *v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_accountsWithServiceCapability_, *MEMORY[0x1E0D38E30]);

    if (v2)
    {
      sub_1A200E71C(0, &qword_1EE65C378);
      v3 = sub_1A21997D0();

      v4 = sub_1A217B568(v3);
      swift_bridgeObjectRelease();
      v5 = sub_1A217AA1C(v4);
      swift_bridgeObjectRelease();
      v6 = sub_1A21940E0((uint64_t)v5);
      swift_bridgeObjectRelease();
      sub_1A217AEDC(v6);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A217B7D4()
{
  return swift_release();
}

id sub_1A217B7E0()
{
  id result;
  void *v1;
  void *v2;
  id v3;
  id v4;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    v2 = (void *)sub_1A2199758();
    v3 = objc_msgSend(v1, sel_transferForGUID_, v2);

    if (v3)
    {
      v4 = objc_msgSend(v3, sel_isAdaptiveImageGlyph);

      v1 = v3;
    }
    else
    {
      v4 = 0;
    }

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A217B898(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  char v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = sub_1A2199764();
  v3 = v1(v2);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

id sub_1A217B8DC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;

  v13 = sub_1A2199764();
  v15 = v14;
  v16 = sub_1A219974C();
  if (a8)
  {
    v17 = sub_1A2199764();
    a8 = v18;
  }
  else
  {
    v17 = 0;
  }
  v19 = a3;
  v20 = a1;
  v21 = (void *)sub_1A217B9DC(v13, v15, a5, a6, v16, v17, a8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1A217B9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v7;
  void *v8;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t result;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD aBlock[6];

  v8 = v7;
  v11 = (void *)sub_1A2199740();
  v12 = objc_msgSend(v8, sel_adjustMessageSummaryInfoForSending_, v11);

  sub_1A219974C();
  v13 = (void *)sub_1A2199740();
  aBlock[4] = sub_1A217B7E0;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A217B898;
  aBlock[3] = &unk_1E471DF40;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = objc_msgSend(v8, sel_backwardCompatibilityStringWithMessageSummaryInfo_isAdaptiveImageGlyphProvider_, v13, v14);

  _Block_release(v14);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v17 = (void *)IMCreateSuperFormatStringFromPlainTextString();

    v18 = (void *)sub_1A2199758();
    v19 = objc_msgSend(v8, sel_associatedMessageType);
    v20 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    if (a7)
      a7 = (void *)sub_1A2199758();
    v21 = objc_msgSend((id)objc_opt_self(), sel_instantMessageWithAssociatedMessageContent_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_, v17, v18, v19, a3, a4, 0, v20, a7);

    return (uint64_t)v21;
  }
  return result;
}

unint64_t sub_1A217BC28(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A1FFD920(&qword_1EE65C380);
  v2 = (_QWORD *)sub_1A2199A94();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A200DB60(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A217BD48(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A1FFD920(&qword_1EE65C3C0);
  v2 = sub_1A2199A94();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A217FC74(v6, (uint64_t)v15, &qword_1EE65E738);
    result = sub_1A1FFD960((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1A200DB00(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A217BE88(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A1FFD920(&qword_1EE65C388);
  v2 = (_QWORD *)sub_1A2199A94();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A200DB60(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A217BFA0(uint64_t a1)
{
  return sub_1A217BFAC(a1, &qword_1EE65E728);
}

unint64_t sub_1A217BFAC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A1FFD920(a2);
  v3 = (_QWORD *)sub_1A2199A94();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1A200DB60(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A217C0C0()
{
  uint64_t v0;

  v0 = sub_1A21996F8();
  sub_1A200A568(v0, qword_1EE6617E8);
  sub_1A200A4C8(v0, (uint64_t)qword_1EE6617E8);
  sub_1A21996D4();
  return sub_1A21996EC();
}

uint64_t sub_1A217C128()
{
  id v0;
  uint64_t result;

  type metadata accessor for IMServiceReachabilityControllerLiveDelegate();
  v0 = objc_msgSend(objc_allocWithZone((Class)IMServiceReachabilityController), sel_initWithDelegate_, swift_allocObject());
  result = swift_release();
  qword_1EE65C358 = (uint64_t)v0;
  return result;
}

void sub_1A217C2B8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  unint64_t v8;
  void *v9;
  id v10;
  void *v11;
  _QWORD v12[6];

  v7 = objc_msgSend(a1, sel_participants);
  sub_1A200E71C(0, (unint64_t *)&qword_1EE65C370);
  v8 = sub_1A21997D0();

  sub_1A217C414(v8);
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1A21997C4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v3, sel_reachabilityContextForChat_, a1);
  v12[4] = a2;
  v12[5] = a3;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A216F824;
  v12[3] = &unk_1E471C820;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_calculateServiceForSendingToHandles_withContext_completionBlock_, v9, v10, v11);
  _Block_release(v11);

}

uint64_t sub_1A217C414(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v15 = MEMORY[0x1E0DEE9D8];
    result = sub_1A217D5B4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1A8581C78](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, "ID");
      v9 = sub_1A2199764();
      v11 = v10;

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_1A217D5B4(v12 > 1, v13 + 1, 1);
      ++v5;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      v14 = v15 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1A2199A70();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t IMServiceReachabilityController.accountsForQuerying.getter()
{
  char *v0;
  id v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR___IMServiceReachabilityController_delegate], sel_serviceNamesForSending);
  v2 = sub_1A21997D0();

  v3 = v0;
  v4 = sub_1A217E6CC(v2, (uint64_t)v3);
  swift_bridgeObjectRelease();

  return v4;
}

void IMServiceReachabilityController.calculateServiceForSending(toHandles:servicesToAccountIDs:withContext:completionBlock:)(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id), uint64_t a5)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  char *v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  int64_t v73;
  char *v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  id v83;
  _QWORD aBlock[6];
  uint64_t v85;

  v79 = a1;
  v80 = a2;
  v9 = sub_1A21995F0();
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  MEMORY[0x1E0C80A78](v9);
  v76 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a3;
  if (objc_msgSend(a3, sel_shouldForceServerStatusRefresh))
  {
    v11 = objc_msgSend(v83, sel_chatIdentifier);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend((id)objc_opt_self(), sel_sharedRegistry);
      v14 = objc_msgSend(v13, sel_existingChatWithChatIdentifier_, v12);

      if (v14)
      {
        v15 = objc_msgSend(v14, sel_chatStyle);
        if (v15 == objc_msgSend(v83, sel_chatStyle))
          objc_msgSend(v14, sel__resetForceServerStatusRefresh);

      }
    }
  }
  if (!*(_QWORD *)(v80 + 16) || !*(_QWORD *)(v79 + 16))
  {
    v66 = (_QWORD *)sub_1A217BFAC(MEMORY[0x1E0DEE9D8], &qword_1EE65C188);
    swift_bridgeObjectRetain();
    sub_1A217EAF0(v66, v80);
    swift_bridgeObjectRelease();
    v67 = objc_allocWithZone(MEMORY[0x1E0D39A20]);
    sub_1A200E71C(0, &qword_1EE65C350);
    v68 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    v83 = objc_msgSend(v67, sel_initAsFinalResult_bestResult_resultsByAccountID_, 1, 0, v68);

    a4(v83);
    return;
  }
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1A2199950();
  v17 = *(void **)&v5[OBJC_IVAR___IMServiceReachabilityController_delegate];
  swift_getObjectType();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v16;
  v18[3] = v5;
  v18[4] = a4;
  v18[5] = a5;
  swift_unknownObjectRetain();
  v70 = v16;
  swift_retain();
  v19 = v5;
  swift_retain();
  v72 = v17;
  v20 = sub_1A217E614((uint64_t)v17, (uint64_t)sub_1A217E820, (uint64_t)v18);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v21 = objc_msgSend(v20, sel_taskID);
  v22 = sub_1A2199764();
  v24 = v23;

  v74 = v19;
  v25 = &v19[OBJC_IVAR___IMServiceReachabilityController_taskIDToTask];
  swift_beginAccess();
  v26 = v20;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v85 = *(_QWORD *)v25;
  *(_QWORD *)v25 = 0x8000000000000000;
  v75 = v26;
  sub_1A217E488((uint64_t)v26, v22, v24, isUniquelyReferenced_nonNull_native, &qword_1EE65C3A8);
  *(_QWORD *)v25 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v28 = *(_QWORD *)(v80 + 64);
  v71 = v80 + 64;
  v29 = 1 << *(_BYTE *)(v80 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v73 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  v32 = 0;
  while (v31)
  {
    v47 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    v82 = v32;
    v48 = v47 | (v32 << 6);
LABEL_30:
    v53 = 16 * v48;
    v54 = (uint64_t *)(*(_QWORD *)(v80 + 48) + v53);
    v56 = *v54;
    v55 = v54[1];
    v57 = (uint64_t *)(*(_QWORD *)(v80 + 56) + v53);
    v58 = v57[1];
    v81 = *v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = v76;
    sub_1A21995E4();
    v60 = sub_1A21995D8();
    v62 = v61;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v59, v78);
    v63 = objc_msgSend(v83, sel_preconditionsIgnoredForServices);
    if (!v63
      || (v64 = v63,
          v65 = sub_1A2199860(),
          v64,
          LOBYTE(v64) = sub_1A217D0BC(v56, v55, v65),
          swift_bridgeObjectRelease(),
          (v64 & 1) == 0))
    {
      v33 = (void *)sub_1A2199758();
      v34 = objc_msgSend(v72, sel_preconditionsForServiceName_, v33);

      sub_1A200E71C(0, &qword_1EE65C288);
      sub_1A21997D0();

    }
    v35 = (void *)sub_1A2199758();
    v36 = (void *)sub_1A2199758();
    sub_1A200E71C(0, &qword_1EE65C288);
    v37 = (void *)sub_1A21997C4();
    swift_bridgeObjectRelease();
    v38 = (_QWORD *)swift_allocObject();
    v38[2] = v79;
    v38[3] = v60;
    v38[4] = v62;
    v38[5] = v56;
    v39 = v81;
    v38[6] = v55;
    v38[7] = v39;
    v40 = v83;
    v38[8] = v58;
    v38[9] = v40;
    v41 = v74;
    v42 = v75;
    v38[10] = v74;
    v38[11] = v42;
    aBlock[4] = sub_1A217E830;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A200EB00;
    aBlock[3] = &unk_1E471DF68;
    v43 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v44 = v41;
    v45 = v42;
    v46 = v40;
    swift_release();
    objc_msgSend(v45, sel_submitRequestWithID_serviceName_preconditions_clearanceHandler_, v35, v36, v37, v43);
    _Block_release(v43);

    v32 = v82;
  }
  v49 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v49 >= v73)
    goto LABEL_34;
  v50 = *(_QWORD *)(v71 + 8 * v49);
  v51 = v32 + 1;
  if (v50)
    goto LABEL_29;
  v51 = v32 + 2;
  if (v32 + 2 >= v73)
    goto LABEL_34;
  v50 = *(_QWORD *)(v71 + 8 * v51);
  if (v50)
    goto LABEL_29;
  v51 = v32 + 3;
  if (v32 + 3 >= v73)
    goto LABEL_34;
  v50 = *(_QWORD *)(v71 + 8 * v51);
  if (v50)
  {
LABEL_29:
    v31 = (v50 - 1) & v50;
    v82 = v51;
    v48 = __clz(__rbit64(v50)) + (v51 << 6);
    goto LABEL_30;
  }
  v52 = v32 + 4;
  if (v32 + 4 >= v73)
  {
LABEL_34:
    swift_release();
    v69 = v75;
    objc_msgSend(v75, sel_allRequestsSubmitted);
    swift_release();

    return;
  }
  v50 = *(_QWORD *)(v71 + 8 * v52);
  if (v50)
  {
    v51 = v32 + 4;
    goto LABEL_29;
  }
  while (1)
  {
    v51 = v52 + 1;
    if (__OFADD__(v52, 1))
      break;
    if (v51 >= v73)
      goto LABEL_34;
    v50 = *(_QWORD *)(v71 + 8 * v51);
    ++v52;
    if (v50)
      goto LABEL_29;
  }
LABEL_36:
  __break(1u);
}

void __swiftcall IMServiceReachabilityController.init()(IMServiceReachabilityController *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMServiceReachabilityController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A217CFBC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (objc_msgSend(a1, sel_isFinal))
  {
    swift_beginAccess();
    v7 = (void *)MEMORY[0x1A85833E8](a2 + 16);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, sel_taskID);
      v10 = sub_1A2199764();
      v12 = v11;

      swift_beginAccess();
      v13 = (void *)sub_1A2194014(v10, v12);
      swift_endAccess();

      swift_bridgeObjectRelease();
    }
  }
  return a4(a1);
}

uint64_t sub_1A217D0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1A2199B84();
    sub_1A219977C();
    v6 = sub_1A2199B9C();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1A2199B48() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1A2199B48() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_1A217D1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v11 = objc_allocWithZone(MEMORY[0x1E0D39A48]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = a8;
  v13 = (void *)sub_1A21997C4();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v11, sel_initWithHandleIDs_requestID_serviceName_accountID_context_, v13, v14, v15, v16, v12);

  objc_msgSend(*(id *)(a9 + OBJC_IVAR___IMServiceReachabilityController_delegate), sel_calculateReachabilityWithRequest_responseHandler_, v17, a10);
}

void sub_1A217D35C(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *a1;
  v4 = a1[1];
  v6 = *(void **)(a2 + OBJC_IVAR___IMServiceReachabilityController_delegate);
  v7 = (void *)sub_1A2199758();
  v8 = objc_msgSend(v6, sel_preferredAccountIDForServiceName_, v7);

  if (!v8)
  {
    if (qword_1EE65D560 != -1)
      swift_once();
    v12 = sub_1A21996F8();
    sub_1A200A4C8(v12, (uint64_t)qword_1EE6617E8);
    swift_bridgeObjectRetain_n();
    v13 = sub_1A21996E0();
    v14 = sub_1A21998B4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A200F6C8(v5, v4, &v17);
      sub_1A2199968();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A1FF4000, v13, v14, "Couldn't find an account for service %s but attempted to check reachability over it!", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v16, -1, -1);
      MEMORY[0x1A8583364](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v11 = 0;
    goto LABEL_10;
  }
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_accountForUniqueID_, v8);

LABEL_10:
    *a3 = v11;
    return;
  }

  __break(1u);
}

uint64_t sub_1A217D5B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A217D5D0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A217D5D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A2199AA0();
  __break(1u);
  return result;
}

uint64_t sub_1A217D738(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1A1FFD920(&qword_1EE65C380);
  v42 = a2;
  v6 = sub_1A2199A88();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A2199B84();
    sub_1A219977C();
    result = sub_1A2199B9C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A217DA5C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  sub_1A1FFD920(a3);
  v39 = a2;
  v7 = sub_1A2199A88();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1A2199B84();
    sub_1A219977C();
    result = sub_1A2199B9C();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

unint64_t sub_1A217DD68(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A21999B0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A2199B84();
        swift_bridgeObjectRetain();
        sub_1A219977C();
        v9 = sub_1A2199B9C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A217DF3C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A21999B0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A2199B84();
        swift_bridgeObjectRetain();
        sub_1A219977C();
        v9 = sub_1A2199B9C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1A217E110()
{
  return sub_1A217E2D4(&qword_1EE65C3A8);
}

void *sub_1A217E11C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1A1FFD920(&qword_1EE65C380);
  v2 = *v0;
  v3 = sub_1A2199A7C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A217E2D4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_1A1FFD920(a1);
  v3 = *v1;
  v4 = sub_1A2199A7C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1A217E47C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A217E488(a1, a2, a3, a4, &qword_1EE65C3A0);
}

void sub_1A217E488(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1A200DB60(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1A217E2D4(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a2;
    v24[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1A217DA5C(v17, a4 & 1, a5);
  v22 = sub_1A200DB60(a2, a3);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1A2199B6C();
  __break(1u);
}

void sub_1A217E5FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A217E488(a1, a2, a3, a4, &qword_1EE65C398);
}

void sub_1A217E608(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A217E488(a1, a2, a3, a4, &qword_1EE65E730);
}

id sub_1A217E614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  _QWORD v10[6];

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10[4] = a2;
  v10[5] = a3;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A216F824;
  v10[3] = &unk_1E471C870;
  v7 = _Block_copy(v10);
  v8 = objc_msgSend(v6, sel_initWithDelegate_updateHandler_, a1, v7);
  swift_unknownObjectRelease();
  _Block_release(v7);
  swift_release();
  return v8;
}

uint64_t sub_1A217E6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[2];
  uint64_t v12;

  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v7 = (uint64_t *)(a1 + 40);
    do
    {
      v8 = *v7;
      v11[0] = *(v7 - 1);
      v11[1] = v8;
      swift_bridgeObjectRetain();
      sub_1A217D35C(v11, a2, &v10);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v9 = swift_bridgeObjectRelease();
      if (v10)
      {
        MEMORY[0x1A8581A14](v9);
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A21997F4();
        sub_1A2199800();
        sub_1A21997E8();
      }
      v7 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1A217E7F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A217E820(void *a1)
{
  uint64_t v1;

  return sub_1A217CFBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(void *))(v1 + 32));
}

id sub_1A217E834(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D39A30]), sel_init);
  v3 = objc_msgSend(a1, sel_chatIdentifier);
  objc_msgSend(v2, sel_setChatIdentifier_, v3);

  objc_msgSend(v2, sel_setChatStyle_, objc_msgSend(a1, sel_chatStyle));
  v4 = objc_msgSend(a1, sel_lastAddressedHandleID);
  objc_msgSend(v2, sel_setSenderLastAddressedHandle_, v4);

  v5 = objc_msgSend(a1, sel_lastAddressedSIMID);
  objc_msgSend(v2, sel_setSenderLastAddressedSIMID_, v5);

  v6 = objc_msgSend(a1, sel_account);
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_serviceName);

    if (v8)
    {
      sub_1A2199764();

      v7 = (void *)sub_1A2199758();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
  }
  objc_msgSend(v2, sel_setLastUsedServiceName_, v7);

  v9 = objc_msgSend(a1, sel__lastMessage);
  v10 = v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, sel_service);

    if (v11)
    {
      sub_1A2199764();

      v10 = (void *)sub_1A2199758();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = 0;
    }
  }
  objc_msgSend(v2, sel_setServiceOfLastMessage_, v10);

  objc_msgSend(v2, sel_setConversationWasDowngraded_, objc_msgSend(a1, sel_isDowngraded));
  objc_msgSend(v2, sel_setHasConversationHistory_, objc_msgSend(a1, sel_receivedResponseForChat));
  objc_msgSend(v2, sel_setShouldForceServerStatusRefresh_, objc_msgSend(a1, sel_shouldForceServerStatusRefresh));
  objc_msgSend(v2, sel_setForceMMS_, objc_msgSend(a1, sel_forceMMS));
  return v2;
}

uint64_t sub_1A217EAF0(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  char v21;
  char v22;
  void *v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  int64_t v41;
  int64_t v43;

  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v41 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  if (v5)
    goto LABEL_6;
LABEL_7:
  v9 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v9 < v41)
    {
      v10 = *(_QWORD *)(v40 + 8 * v9);
      v11 = v6 + 1;
      if (v10)
        goto LABEL_22;
      v11 = v6 + 2;
      if (v6 + 2 >= v41)
        goto LABEL_42;
      v10 = *(_QWORD *)(v40 + 8 * v11);
      if (v10)
        goto LABEL_22;
      v11 = v6 + 3;
      if (v6 + 3 >= v41)
        goto LABEL_42;
      v10 = *(_QWORD *)(v40 + 8 * v11);
      if (v10)
        goto LABEL_22;
      v11 = v6 + 4;
      if (v6 + 4 >= v41)
        goto LABEL_42;
      v10 = *(_QWORD *)(v40 + 8 * v11);
      if (v10)
      {
LABEL_22:
        v5 = (v10 - 1) & v10;
        v43 = v11;
        for (i = __clz(__rbit64(v10)) + (v11 << 6); ; i = v7 | (v6 << 6))
        {
          v13 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * i);
          v15 = *v13;
          v14 = v13[1];
          v16 = (void *)objc_opt_self();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v17 = (void *)sub_1A2199758();
          v18 = (void *)sub_1A21997C4();
          v19 = objc_msgSend(v16, sel_finalResultForService_handleIDs_allAreReachable_checkedServer_error_, v17, v18, 0, 0, 0);

          if (v19)
            break;
          swift_bridgeObjectRetain();
          v20 = sub_1A200DB60(v15, v14);
          v22 = v21;
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v6 = v43;
            if (!v5)
              goto LABEL_7;
            goto LABEL_6;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1A217E2D4(&qword_1EE65C188);
          swift_bridgeObjectRelease();
          v23 = *(void **)(a1[7] + 8 * v20);
          sub_1A217DF3C(v20, (uint64_t)a1);
          swift_bridgeObjectRelease();

LABEL_40:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v6 = v43;
          if (!v5)
            goto LABEL_7;
LABEL_6:
          v7 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
          v43 = v6;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26 = sub_1A200DB60(v15, v14);
        v27 = a1[2];
        v28 = (v25 & 1) == 0;
        v29 = v27 + v28;
        if (__OFADD__(v27, v28))
          goto LABEL_45;
        v30 = v25;
        if (a1[3] < v29)
        {
          sub_1A217DA5C(v29, isUniquelyReferenced_nonNull_native, &qword_1EE65C188);
          v31 = sub_1A200DB60(v15, v14);
          if ((v30 & 1) != (v32 & 1))
            goto LABEL_47;
          v26 = v31;
          if ((v30 & 1) == 0)
            goto LABEL_37;
LABEL_35:
          v33 = a1[7];
          v34 = 8 * v26;

          *(_QWORD *)(v33 + v34) = v19;
LABEL_39:
          swift_bridgeObjectRelease();
          goto LABEL_40;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v25 & 1) != 0)
            goto LABEL_35;
        }
        else
        {
          sub_1A217E2D4(&qword_1EE65C188);
          if ((v30 & 1) != 0)
            goto LABEL_35;
        }
LABEL_37:
        a1[(v26 >> 6) + 8] |= 1 << v26;
        v35 = (uint64_t *)(a1[6] + 16 * v26);
        *v35 = v15;
        v35[1] = v14;
        *(_QWORD *)(a1[7] + 8 * v26) = v19;
        v36 = a1[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_46;
        a1[2] = v38;
        swift_bridgeObjectRetain();
        goto LABEL_39;
      }
      v12 = v6 + 5;
      if (v6 + 5 < v41)
      {
        v10 = *(_QWORD *)(v40 + 8 * v12);
        if (v10)
        {
          v11 = v6 + 5;
          goto LABEL_22;
        }
        while (1)
        {
          v11 = v12 + 1;
          if (__OFADD__(v12, 1))
            goto LABEL_44;
          if (v11 >= v41)
            break;
          v10 = *(_QWORD *)(v40 + 8 * v11);
          ++v12;
          if (v10)
            goto LABEL_22;
        }
      }
    }
LABEL_42:
    swift_release();
    return (uint64_t)a1;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_1A2199B6C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for IMServiceReachabilityController(uint64_t a1)
{
  return sub_1A200E71C(a1, &qword_1EE65E720);
}

void sub_1A217EF2C(uint64_t a1, uint64_t a2, void *a3, char *a4, void (**a5)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  char *v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  void *v68;
  id v69;
  _QWORD v70[2];
  uint64_t v71;
  uint64_t v72;
  id v73;
  int64_t v74;
  char *v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  id v84;
  _QWORD aBlock[6];
  uint64_t v86;

  v80 = a1;
  v81 = a2;
  v8 = sub_1A21995F0();
  v78 = *(_QWORD *)(v8 - 8);
  v79 = v8;
  MEMORY[0x1E0C80A78](v8);
  v77 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = swift_allocObject();
  *(_QWORD *)(v71 + 16) = a5;
  _Block_copy(a5);
  v84 = a3;
  if (objc_msgSend(a3, sel_shouldForceServerStatusRefresh))
  {
    v10 = objc_msgSend(v84, sel_chatIdentifier);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend((id)objc_opt_self(), sel_sharedRegistry);
      v13 = objc_msgSend(v12, sel_existingChatWithChatIdentifier_, v11);

      if (v13)
      {
        v14 = objc_msgSend(v13, sel_chatStyle);
        if (v14 == objc_msgSend(v84, sel_chatStyle))
          objc_msgSend(v13, sel__resetForceServerStatusRefresh);

      }
    }
  }
  if (!*(_QWORD *)(v81 + 16) || !*(_QWORD *)(v80 + 16))
  {
    v66 = (_QWORD *)sub_1A217BFAC(MEMORY[0x1E0DEE9D8], &qword_1EE65C188);
    swift_bridgeObjectRetain();
    sub_1A217EAF0(v66, v81);
    swift_bridgeObjectRelease();
    v67 = objc_allocWithZone(MEMORY[0x1E0D39A20]);
    sub_1A200E71C(0, &qword_1EE65C350);
    v68 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    v84 = objc_msgSend(v67, sel_initAsFinalResult_bestResult_resultsByAccountID_, 1, 0, v68);

    ((void (**)(_QWORD, id))a5)[2](a5, v84);
    swift_release();

    return;
  }
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1A2199950();
  v16 = *(void **)&a4[OBJC_IVAR___IMServiceReachabilityController_delegate];
  swift_getObjectType();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v15;
  v17[3] = a4;
  v18 = v71;
  v17[4] = sub_1A217FB7C;
  v17[5] = v18;
  swift_unknownObjectRetain();
  v70[1] = v15;
  swift_retain();
  v19 = a4;
  swift_retain();
  v73 = v16;
  v20 = sub_1A217E614((uint64_t)v16, (uint64_t)sub_1A217FCB8, (uint64_t)v17);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v21 = objc_msgSend(v20, sel_taskID);
  v22 = sub_1A2199764();
  v24 = v23;

  v75 = v19;
  v25 = &v19[OBJC_IVAR___IMServiceReachabilityController_taskIDToTask];
  swift_beginAccess();
  v26 = v20;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v86 = *(_QWORD *)v25;
  *(_QWORD *)v25 = 0x8000000000000000;
  v76 = v26;
  sub_1A217E488((uint64_t)v26, v22, v24, isUniquelyReferenced_nonNull_native, &qword_1EE65C3A8);
  *(_QWORD *)v25 = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v28 = *(_QWORD *)(v81 + 64);
  v72 = v81 + 64;
  v29 = 1 << *(_BYTE *)(v81 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v74 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  v32 = 0;
  while (v31)
  {
    v47 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    v83 = v32;
    v48 = v47 | (v32 << 6);
LABEL_30:
    v53 = 16 * v48;
    v54 = (uint64_t *)(*(_QWORD *)(v81 + 48) + v53);
    v56 = *v54;
    v55 = v54[1];
    v57 = (uint64_t *)(*(_QWORD *)(v81 + 56) + v53);
    v58 = v57[1];
    v82 = *v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = v77;
    sub_1A21995E4();
    v60 = sub_1A21995D8();
    v62 = v61;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v59, v79);
    v63 = objc_msgSend(v84, sel_preconditionsIgnoredForServices);
    if (!v63
      || (v64 = v63,
          v65 = sub_1A2199860(),
          v64,
          LOBYTE(v64) = sub_1A217D0BC(v56, v55, v65),
          swift_bridgeObjectRelease(),
          (v64 & 1) == 0))
    {
      v33 = (void *)sub_1A2199758();
      v34 = objc_msgSend(v73, sel_preconditionsForServiceName_, v33);

      sub_1A200E71C(0, &qword_1EE65C288);
      sub_1A21997D0();

    }
    v35 = (void *)sub_1A2199758();
    v36 = (void *)sub_1A2199758();
    sub_1A200E71C(0, &qword_1EE65C288);
    v37 = (void *)sub_1A21997C4();
    swift_bridgeObjectRelease();
    v38 = (_QWORD *)swift_allocObject();
    v38[2] = v80;
    v38[3] = v60;
    v38[4] = v62;
    v38[5] = v56;
    v39 = v82;
    v38[6] = v55;
    v38[7] = v39;
    v38[8] = v58;
    v40 = v84;
    v41 = v75;
    v38[9] = v84;
    v38[10] = v41;
    v42 = v76;
    v38[11] = v76;
    aBlock[4] = sub_1A217E830;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A200EB00;
    aBlock[3] = &unk_1E4724820;
    v43 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v44 = v41;
    v45 = v42;
    v46 = v40;
    swift_release();
    objc_msgSend(v45, sel_submitRequestWithID_serviceName_preconditions_clearanceHandler_, v35, v36, v37, v43);
    _Block_release(v43);

    v32 = v83;
  }
  v49 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v49 >= v74)
    goto LABEL_34;
  v50 = *(_QWORD *)(v72 + 8 * v49);
  v51 = v32 + 1;
  if (v50)
    goto LABEL_29;
  v51 = v32 + 2;
  if (v32 + 2 >= v74)
    goto LABEL_34;
  v50 = *(_QWORD *)(v72 + 8 * v51);
  if (v50)
    goto LABEL_29;
  v51 = v32 + 3;
  if (v32 + 3 >= v74)
    goto LABEL_34;
  v50 = *(_QWORD *)(v72 + 8 * v51);
  if (v50)
  {
LABEL_29:
    v31 = (v50 - 1) & v50;
    v83 = v51;
    v48 = __clz(__rbit64(v50)) + (v51 << 6);
    goto LABEL_30;
  }
  v52 = v32 + 4;
  if (v32 + 4 >= v74)
  {
LABEL_34:
    swift_release();
    v69 = v76;
    objc_msgSend(v76, sel_allRequestsSubmitted);
    swift_release();
    swift_release();

    return;
  }
  v50 = *(_QWORD *)(v72 + 8 * v52);
  if (v50)
  {
    v51 = v32 + 4;
    goto LABEL_29;
  }
  while (1)
  {
    v51 = v52 + 1;
    if (__OFADD__(v52, 1))
      break;
    if (v51 >= v74)
      goto LABEL_34;
    v50 = *(_QWORD *)(v72 + 8 * v51);
    ++v52;
    if (v50)
      goto LABEL_29;
  }
LABEL_36:
  __break(1u);
}

void sub_1A217F760(uint64_t a1, void *a2, char *a3, void *aBlock)
{
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  char v37;
  uint64_t *v38;
  unint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v44 = a1;
  v45 = a2;
  v5 = *(void **)&a3[OBJC_IVAR___IMServiceReachabilityController_delegate];
  _Block_copy(aBlock);
  v6 = objc_msgSend(v5, sel_serviceNamesForSending);
  v7 = sub_1A21997D0();

  v8 = a3;
  v9 = sub_1A217E6CC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();
  v43 = v8;

  v10 = (_QWORD *)sub_1A217BC28(MEMORY[0x1E0DEE9D8]);
  if (v9 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain_n();
    v11 = sub_1A2199A70();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_3;
LABEL_33:
    swift_bridgeObjectRelease_n();
    _Block_copy(aBlock);
    sub_1A217EF2C(v44, (uint64_t)v10, v45, v43, (void (**)(_QWORD, _QWORD))aBlock);
    _Block_release(aBlock);
    swift_bridgeObjectRelease();
    _Block_release(aBlock);
    return;
  }
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_33;
LABEL_3:
  v48 = v11;
  v49 = v9 & 0xC000000000000001;
  v12 = 4;
  v47 = v9;
  while (1)
  {
    if (v49)
      v15 = (id)MEMORY[0x1A8581C78](v12 - 4, v9);
    else
      v15 = *(id *)(v9 + 8 * v12);
    v16 = v15;
    v14 = v12 - 3;
    if (__OFADD__(v12 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v17 = objc_msgSend(v15, sel_serviceName, v43, v44, v45);
    if (!v17)
      break;
    v18 = v17;
    v19 = sub_1A2199764();
    v21 = v20;

    v22 = objc_msgSend(v16, sel_uniqueID);
    if (!v22)
    {
      swift_bridgeObjectRetain();
      v35 = sub_1A200DB60(v19, v21);
      v37 = v36;
      swift_bridgeObjectRelease();
      if ((v37 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1A217E11C();
        swift_bridgeObjectRelease();
        sub_1A217DD68(v35, (uint64_t)v10);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      goto LABEL_6;
    }
    v23 = v22;
    v9 = sub_1A2199764();
    v25 = v24;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = sub_1A200DB60(v19, v21);
    v29 = v10[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      goto LABEL_30;
    v32 = v27;
    if (v10[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v27 & 1) == 0)
          goto LABEL_24;
      }
      else
      {
        sub_1A217E11C();
        if ((v32 & 1) == 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_1A217D738(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_1A200DB60(v19, v21);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_35;
      v28 = v33;
      if ((v32 & 1) == 0)
      {
LABEL_24:
        v10[(v28 >> 6) + 8] |= 1 << v28;
        v38 = (uint64_t *)(v10[6] + 16 * v28);
        *v38 = v19;
        v38[1] = v21;
        v39 = (unint64_t *)(v10[7] + 16 * v28);
        *v39 = v9;
        v39[1] = v25;
        v40 = v10[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_31;
        v10[2] = v42;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    v13 = (unint64_t *)(v10[7] + 16 * v28);
    swift_bridgeObjectRelease();
    *v13 = v9;
    v13[1] = v25;
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v47;
    v11 = v48;
    v14 = v12 - 3;
LABEL_6:
    ++v12;
    if (v14 == v11)
      goto LABEL_33;
  }
  _Block_release(aBlock);
  _Block_release(aBlock);
  __break(1u);
LABEL_35:
  _Block_release(aBlock);
  _Block_release(aBlock);
  sub_1A2199B6C();
  __break(1u);
}

uint64_t sub_1A217FB7C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A217FB90()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A217FBC8()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A217FC1C()
{
  uint64_t v0;

  sub_1A217D1F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1A217FC50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A217FC74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1A1FFD920(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *SyncedSettingsManager.__allocating_init(daemonController:connection:notificationCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SyncedSettingsManager.init(daemonController:connection:notificationCenter:)(a1, a2, a3);
}

char *SyncedSettingsManager.init(daemonController:connection:notificationCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  id v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  char *v10;
  objc_super v12;

  *(_QWORD *)&v3[OBJC_IVAR___IMSyncedSettingsManager_Impl_daemonController] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___IMSyncedSettingsManager_Impl_connection] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter] = a3;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for SyncedSettingsManager();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v5 = a3;
  v6 = (char *)objc_msgSendSuper2(&v12, sel_init);
  v7 = *(void **)&v6[OBJC_IVAR___IMSyncedSettingsManager_Impl_daemonController];
  v8 = v6;
  v9 = objc_msgSend(v7, sel_listener, v12.receiver, v12.super_class);
  v10 = v8;
  objc_msgSend(v9, sel_addHandler_, v10);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v10;
}

uint64_t type metadata accessor for SyncedSettingsManager()
{
  return objc_opt_self();
}

uint64_t sub_1A217FE9C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1A2199704();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A219971C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE65D568 != -1)
    swift_once();
  v11 = sub_1A21996F8();
  sub_1A200A4C8(v11, (uint64_t)qword_1EE661800);
  v12 = sub_1A21996E0();
  v13 = sub_1A21998C0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1A1FF4000, v12, v13, "didUpdateSettingsKeys", v14, 2u);
    MEMORY[0x1A8583364](v14, -1, -1);
  }

  sub_1A2180B70();
  v15 = (void *)sub_1A2199920();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = v2;
  aBlock[4] = sub_1A2180BD8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A200EB00;
  aBlock[3] = &unk_1E471DF90;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v18 = v2;
  swift_release();
  sub_1A2199710();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A2180BE0();
  sub_1A1FFD920(&qword_1ECF121F8);
  sub_1A2180C28();
  sub_1A21999A4();
  MEMORY[0x1A8581B88](0, v10, v6, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A2180124(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter;
    v5 = swift_bridgeObjectRetain() + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A2199938();
      if ((v6 & 1) == 0)
      {
        v7 = *(void **)(a2 + v4);
        v8 = (void *)sub_1A2199944();
        objc_msgSend(v7, sel_postNotificationName_object_, v8, 0);

      }
      v5 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id SyncedSettingsManager.__deallocating_deinit()
{
  char *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR___IMSyncedSettingsManager_Impl_daemonController], sel_listener);
  objc_msgSend(v1, sel_removeHandler_, v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SyncedSettingsManager();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1A218036C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[6];

  v7 = *(void **)(v3 + OBJC_IVAR___IMSyncedSettingsManager_Impl_connection);
  objc_msgSend(v7, sel_waitForSetup);
  v8 = objc_msgSend(v7, sel_synchronousRemoteProxy);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  v12[4] = sub_1A200EAE0;
  v12[5] = v9;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A2180478;
  v12[3] = &unk_1E471E0E8;
  v10 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_fetchSettingValueForKey_reply_, a1, v10);
  _Block_release(v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A2180478(uint64_t a1, uint64_t a2)
{
  void (*v3)(__int128 *);
  __int128 v5;
  __int128 v6;

  v3 = *(void (**)(__int128 *))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v6 + 1) = swift_getObjectType();
    *(_QWORD *)&v5 = a2;
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v3(&v5);
  swift_release();
  return sub_1A2173D58((uint64_t)&v5);
}

uint64_t sub_1A2180564(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;

  sub_1A2173D10(a1, (uint64_t)v10);
  v3 = v11;
  if (v11)
  {
    v4 = sub_1A200A4E0(v10, v11);
    v5 = *(_QWORD *)(v3 - 8);
    MEMORY[0x1E0C80A78](v4);
    v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    v8 = sub_1A2199B3C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    sub_1A200A548((uint64_t)v10);
  }
  else
  {
    v8 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, v8);
  return swift_unknownObjectRelease();
}

void sub_1A2180644(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t inited;
  uint64_t v10;
  void *v11;

  v5 = *(void **)(v2 + OBJC_IVAR___IMSyncedSettingsManager_Impl_connection);
  objc_msgSend(v5, sel_waitForSetup);
  v6 = objc_msgSend(v5, sel_remoteProxy);
  sub_1A200A4E0(a1, a1[3]);
  objc_msgSend(v6, sel_setSettingValue_forKey_, sub_1A2199B3C(), a2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v7 = *(void **)(v2 + OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter);
  v8 = (void *)sub_1A2199944();
  sub_1A1FFD920(&qword_1EE65E758);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A21AF1B0;
  v10 = MEMORY[0x1E0DEA968];
  sub_1A21999D4();
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 72) = 0x53796C6C61636F4CLL;
  *(_QWORD *)(inited + 80) = 0xEA00000000007465;
  sub_1A217BD48(inited);
  v11 = (void *)sub_1A2199740();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_postNotificationName_object_userInfo_, v8, 0, v11);

}

void sub_1A2180858(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;

  v4 = *(void **)(v2 + OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter);
  sub_1A200A4E0(a1, a1[3]);
  v5 = sub_1A2199B3C();
  v6 = (id)sub_1A2199944();
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v5, a2, v6, 0);
  swift_unknownObjectRelease();

}

void sub_1A21809B4(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(v1 + OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter);
  sub_1A200A4E0(a1, a1[3]);
  v3 = sub_1A2199B3C();
  v4 = (id)sub_1A2199944();
  objc_msgSend(v2, sel_removeObserver_name_object_, v3, v4, 0);
  swift_unknownObjectRelease();

}

id SyncedSettingsManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SyncedSettingsManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t sub_1A2180B70()
{
  unint64_t result;

  result = qword_1ECF121E8;
  if (!qword_1ECF121E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF121E8);
  }
  return result;
}

uint64_t sub_1A2180BAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A2180BD8()
{
  uint64_t v0;

  return sub_1A2180124(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1A2180BE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF121F0;
  if (!qword_1ECF121F0)
  {
    v1 = sub_1A2199704();
    result = MEMORY[0x1A85832D4](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF121F0);
  }
  return result;
}

unint64_t sub_1A2180C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF12200;
  if (!qword_1ECF12200)
  {
    v1 = sub_1A200A504(&qword_1ECF121F8);
    result = MEMORY[0x1A85832D4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF12200);
  }
  return result;
}

uint64_t sub_1A2180C74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t method lookup function for SyncedSettingsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncedSettingsManager.__allocating_init(daemonController:connection:notificationCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SyncedSettingsManager.didUpdate(settingsKeys:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SyncedSettingsManager.settingValue(for:reply:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SyncedSettingsManager.setSetting(value:key:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SyncedSettingsManager.addObserver(observer:selector:key:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SyncedSettingsManager.removeObserver(observer:key:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1A2180D38()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A2180D5C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A2180564(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A2180E28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (!*(_QWORD *)&v0[OBJC_IVAR___IMCloudKitSyncProgress_descriptor + 8])
    return 0;
  v1 = *(_QWORD *)&v0[OBJC_IVAR___IMCloudKitSyncProgress_descriptor];
  v2 = qword_1EE65C0A8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = sub_1A21996F8();
  sub_1A200A4C8(v3, (uint64_t)qword_1EE6617D0);
  v4 = v0;
  v5 = sub_1A21996E0();
  v6 = sub_1A21998A8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    objc_msgSend(v4, sel_type);
    sub_1A2199968();

    _os_log_impl(&dword_1A1FF4000, v5, v6, "Progress label is null for %ld", v7, 0xCu);
    MEMORY[0x1A8583364](v7, -1, -1);

  }
  else
  {

  }
  return v1;
}

id sub_1A21812A0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t IMCloudKitSyncProgress.description.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  objc_super v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_percentCompleteString);
  if (v2)
  {
    v3 = v2;
    sub_1A2199764();

  }
  v4 = objc_msgSend(v0, sel_userMessageLabel);
  if (v4)
  {
    v5 = v4;
    sub_1A2199764();

  }
  v6 = objc_msgSend(v0, sel_actionLabel);
  if (v6)
  {
    v7 = v6;
    sub_1A2199764();

  }
  sub_1A200E71C(0, (unint64_t *)&qword_1EE65E760);
  v8 = (void *)sub_1A21998E4();
  objc_msgSend(v0, sel_progressBarValue);
  v9 = (void *)sub_1A2199848();
  v10 = objc_msgSend(v8, sel_stringFromNumber_, v9);

  if (v10)
  {
    sub_1A2199764();

  }
  v11 = (void *)sub_1A21998E4();
  objc_msgSend(v0, sel_progressBarMax);
  v12 = (void *)sub_1A2199848();
  v13 = objc_msgSend(v11, sel_stringFromNumber_, v12);

  if (v13)
  {
    sub_1A2199764();

  }
  v14 = (void *)sub_1A21998E4();
  objc_msgSend(v0, sel_remainingItems);
  v15 = (void *)sub_1A2199848();
  v16 = objc_msgSend(v14, sel_stringFromNumber_, v15);

  if (v16)
  {
    sub_1A2199764();

  }
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_1A2199A04();
  v23.receiver = v1;
  v23.super_class = (Class)IMCloudKitSyncProgress;
  v17 = objc_msgSendSuper2(&v23, sel_description);
  sub_1A2199764();

  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  objc_msgSend(v1, sel_type);
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  v18 = objc_msgSend(v1, sel_progressLabel);
  sub_1A2199764();

  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  objc_msgSend(v1, sel_isHidden);
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  v19 = objc_msgSend(v1, sel_syncState);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_description);

    sub_1A2199764();
  }
  sub_1A2199788();
  swift_bridgeObjectRelease();
  return v24;
}

void __swiftcall IMCloudKitSyncProgress.init()(IMCloudKitSyncProgress *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMCloudKitSyncProgress.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t IMCloudKitSyncProgressType.description.getter(uint64_t a1)
{
  unint64_t result;

  result = 0xD000000000000012;
  switch(a1)
  {
    case 0:
      result = 0x6E69636E79537369;
      break;
    case 1:
      result = 0x646573756170;
      break;
    case 2:
      result = 0x6E6564646968;
      break;
    case 3:
      return result;
    case 4:
      result = 0xD000000000000015;
      break;
    case 5:
    case 6:
      result = 0xD000000000000013;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

unint64_t sub_1A2181BF8()
{
  uint64_t *v0;

  return IMCloudKitSyncProgressType.description.getter(*v0);
}

uint64_t type metadata accessor for IMCloudKitSyncProgress(uint64_t a1)
{
  return sub_1A200E71C(a1, &qword_1EE65E798);
}

id sub_1A2181C14(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  id v7;
  id v8;
  char *v9;
  id v10;
  double v11;
  char *v12;
  id v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  objc_super v18;
  _OWORD v19[4];

  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_type] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_syncState] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_syncStatistics] = a3;
  if (a3)
  {
    v7 = a2;
    v8 = a3;
    v9 = v3;
    v10 = objc_msgSend(v8, sel_syncedRecordCount);
    *(double *)&v9[OBJC_IVAR___IMCloudKitSyncProgress_progressBarValue] = (double)(uint64_t)v10;
    v11 = (double)(uint64_t)objc_msgSend(v8, sel_totalRecordCount);
  }
  else
  {
    *(_QWORD *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_progressBarValue] = 0;
    v12 = v3;
    v13 = a2;
    v11 = 0.0;
  }
  *(double *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_progressBarMax] = v11;
  sub_1A218E864(a1, a2, (uint64_t)v19);
  v14 = &v3[OBJC_IVAR___IMCloudKitSyncProgress_descriptor];
  v15 = v19[1];
  *(_OWORD *)v14 = v19[0];
  *((_OWORD *)v14 + 1) = v15;
  v16 = v19[3];
  *((_OWORD *)v14 + 2) = v19[2];
  *((_OWORD *)v14 + 3) = v16;

  v18.receiver = v3;
  v18.super_class = (Class)IMCloudKitSyncProgress;
  return objc_msgSendSuper2(&v18, sel_init);
}

id sub_1A2181D38()
{
  void *v0;
  id v1;
  unsigned int v2;
  id result;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  v2 = objc_msgSend(v1, sel_isMessagesIniCloudVersion2);

  if (v2)
  {
    if (objc_msgSend(v0, sel_syncStatus) == (id)1)
      return objc_msgSend(v0, sel_hasNotSyncedInLastSevenDays);
    else
      return 0;
  }
  else
  {
    result = objc_msgSend(v0, sel_isSyncing);
    if ((_DWORD)result)
    {
      result = objc_msgSend(v0, sel_hasNotSyncedInLastSevenDays);
      if ((_DWORD)result)
        return (id)(objc_msgSend(v0, sel_syncingFailed) ^ 1);
    }
  }
  return result;
}

id sub_1A2181E34()
{
  void *v0;
  id v1;
  unsigned int v2;
  id result;
  char **v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  v2 = objc_msgSend(v1, sel_isMessagesIniCloudVersion2);

  result = objc_msgSend(v0, sel_shouldSendSyncProgress);
  if ((_DWORD)result)
  {
    v4 = &selRef_syncJobState;
    if (!v2)
      v4 = &selRef_syncControllerSyncState;
    return (id)(objc_msgSend(v0, *v4) == (id)4);
  }
  return result;
}

BOOL sub_1A2181EFC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  unsigned int v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BOOL8 v32;
  char *v33;
  double v34;
  double v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  char *v39;

  v1 = v0;
  v2 = sub_1A21995CC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v38 - v7;
  v8 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v38 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v38 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - v18;
  v20 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  v21 = objc_msgSend(v20, sel_isMessagesIniCloudVersion2);

  if (v21)
  {
    v22 = objc_msgSend(v1, sel_lastFullSyncDate);
    if (v22)
    {
      v23 = v22;
      sub_1A21995B4();

      v24 = 0;
    }
    else
    {
      v24 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v17, v24, 1, v2);
  }
  else
  {
    v25 = objc_msgSend(v1, sel_lastSyncDate);
    if (v25)
    {
      v26 = v25;
      sub_1A21995B4();

      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, v27, 1, v2);
    v17 = v14;
  }
  sub_1A2179B30((uint64_t)v17, (uint64_t)v19);
  sub_1A21822EC((uint64_t)v19, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    sub_1A2182334((uint64_t)v11);
    if (qword_1EE65C0A8 != -1)
      swift_once();
    v28 = sub_1A21996F8();
    sub_1A200A4C8(v28, (uint64_t)qword_1EE6617D0);
    v29 = sub_1A21996E0();
    v30 = sub_1A21998C0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1A1FF4000, v29, v30, "No last sync date so we obviously haven't synced in the last week.", v31, 2u);
      MEMORY[0x1A8583364](v31, -1, -1);
    }

    v32 = 1;
  }
  else
  {
    v33 = v39;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v39, v11, v2);
    sub_1A21995C0();
    sub_1A2199590();
    v35 = v34;
    v36 = *(void (**)(char *, uint64_t))(v3 + 8);
    v36(v6, v2);
    v32 = v35 >= 604800.0;
    v36(v33, v2);
  }
  sub_1A2182334((uint64_t)v19);
  return v32;
}

uint64_t sub_1A21822EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2182334(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A2182374()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  unsigned __int8 v4;

  sub_1A218269C(v0, (uint64_t)&v3);
  sub_1A218269C((uint64_t)&v3, (uint64_t)&v4);
  v1 = v4;
  if (v4 != 5)
  {
    sub_1A21826E4();
    sub_1A21998FC();
    sub_1A2199A04();
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_1A218269C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A1FFD920(&qword_1EE65E7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A21826E4()
{
  unint64_t result;

  result = qword_1EE65E760;
  if (!qword_1EE65E760)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE65E760);
  }
  return result;
}

unint64_t sub_1A2182720()
{
  unint64_t result;

  result = qword_1EE65E7A8;
  if (!qword_1EE65E7A8)
  {
    result = MEMORY[0x1A85832D4](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE65E7A8);
  }
  return result;
}

__n128 initializeWithCopy for LiveDatabaseCounts(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for LiveDatabaseCounts(unsigned __int8 *a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && a1[40])
    return (*(_DWORD *)a1 + 251);
  if (*a1 <= 5u)
    v3 = 5;
  else
    v3 = *a1;
  v4 = v3 - 6;
  if (*a1 < 5u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveDatabaseCounts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveDatabaseCounts()
{
  return &type metadata for LiveDatabaseCounts;
}

uint64_t sub_1A2182828(char a1)
{
  return *(_QWORD *)&aCounttypsynced[8 * a1];
}

BOOL sub_1A2182848(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A218285C()
{
  sub_1A2199B84();
  sub_1A2199B90();
  return sub_1A2199B9C();
}

uint64_t sub_1A21828A0()
{
  return sub_1A2199B90();
}

uint64_t sub_1A21828C8()
{
  sub_1A2199B84();
  sub_1A2199B90();
  return sub_1A2199B9C();
}

uint64_t sub_1A2182908(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[14];
  char v11;
  char v12;

  v3 = v1;
  v5 = sub_1A1FFD920(&qword_1EE65E7C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A200A4E0(a1, a1[3]);
  sub_1A21830B8();
  sub_1A2199BB4();
  sub_1A218269C(v3, (uint64_t)&v12);
  sub_1A218269C((uint64_t)&v12, (uint64_t)&v11);
  v10[13] = 0;
  sub_1A2183140();
  sub_1A2199B00();
  if (!v2)
  {
    v10[12] = 1;
    sub_1A2199B0C();
    v10[11] = 2;
    sub_1A2199B0C();
    v10[10] = 3;
    sub_1A2199B0C();
    v10[9] = 4;
    sub_1A2199B0C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A2182ABC()
{
  char *v0;

  return sub_1A2182828(*v0);
}

uint64_t sub_1A2182AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2182CC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2182AE8()
{
  sub_1A21830B8();
  return sub_1A2199BC0();
}

uint64_t sub_1A2182B10()
{
  sub_1A21830B8();
  return sub_1A2199BCC();
}

double sub_1A2182B38@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1A2182EC4(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1A2182B7C(_QWORD *a1)
{
  return sub_1A2182908(a1);
}

BOOL sub_1A2182BB4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1A2182C34(v5, v7);
}

uint64_t sub_1A2182BFC()
{
  return sub_1A2182374();
}

BOOL sub_1A2182C34(_QWORD *a1, _QWORD *a2)
{
  int v4;
  int v5;
  char v6;

  v4 = *(unsigned __int8 *)a1;
  v5 = *(unsigned __int8 *)a2;
  if (v4 == 5)
  {
    if (v5 != 5)
      return 0;
  }
  else
  {
    if (v5 == 5)
      return 0;
    sub_1A2184E38(v4);
    if ((v6 & 1) == 0)
      return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3])
    return a1[4] == a2[4];
  return 0;
}

uint64_t sub_1A2182CC8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x707954746E756F63 && a2 == 0xE900000000000065;
  if (v3 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465636E7973 && a2 == 0xE600000000000000 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61746F74 && a2 == 0xE500000000000000 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736574656C6564 && a2 == 0xE700000000000000 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A2199B48();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A2182EC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v5 = sub_1A1FFD920(&qword_1EE65E7B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A200A4E0(a1, a1[3]);
  sub_1A21830B8();
  sub_1A2199BA8();
  if (v2)
    return sub_1A200A548((uint64_t)a1);
  v20 = 0;
  sub_1A21830FC();
  sub_1A2199ADC();
  v9 = v21;
  v19 = 1;
  v10 = sub_1A2199AE8();
  v18 = 2;
  v15 = sub_1A2199AE8();
  v17 = 3;
  v14 = sub_1A2199AE8();
  v16 = 4;
  v11 = sub_1A2199AE8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_1A200A548((uint64_t)a1);
  *(_BYTE *)a2 = v9;
  v13 = v15;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v11;
  return result;
}

unint64_t sub_1A21830B8()
{
  unint64_t result;

  result = qword_1EE65E7B8;
  if (!qword_1EE65E7B8)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF3B8, &type metadata for LiveDatabaseCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E7B8);
  }
  return result;
}

unint64_t sub_1A21830FC()
{
  unint64_t result;

  result = qword_1EE65E7C0;
  if (!qword_1EE65E7C0)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF548, &type metadata for SyncCountType);
    atomic_store(result, (unint64_t *)&qword_1EE65E7C0);
  }
  return result;
}

unint64_t sub_1A2183140()
{
  unint64_t result;

  result = qword_1EE65E7D0;
  if (!qword_1EE65E7D0)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF520, &type metadata for SyncCountType);
    atomic_store(result, (unint64_t *)&qword_1EE65E7D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LiveDatabaseCounts.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A21831D0 + 4 * byte_1A21AF235[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A2183204 + 4 * byte_1A21AF230[v4]))();
}

uint64_t sub_1A2183204(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A218320C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2183214);
  return result;
}

uint64_t sub_1A2183220(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2183228);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A218322C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2183234(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveDatabaseCounts.CodingKeys()
{
  return &type metadata for LiveDatabaseCounts.CodingKeys;
}

unint64_t sub_1A2183254()
{
  unint64_t result;

  result = qword_1EE65E7D8;
  if (!qword_1EE65E7D8)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF390, &type metadata for LiveDatabaseCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E7D8);
  }
  return result;
}

unint64_t sub_1A218329C()
{
  unint64_t result;

  result = qword_1EE65E7E0;
  if (!qword_1EE65E7E0)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF300, &type metadata for LiveDatabaseCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E7E0);
  }
  return result;
}

unint64_t sub_1A21832E4()
{
  unint64_t result;

  result = qword_1EE65E7E8;
  if (!qword_1EE65E7E8)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF328, &type metadata for LiveDatabaseCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E7E8);
  }
  return result;
}

uint64_t sub_1A2183328(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A2183360 + 4 * byte_1A21AF460[a1]))(0xD000000000000013, 0x80000001A21D3880);
}

uint64_t sub_1A2183360()
{
  return 0x7374616863;
}

uint64_t sub_1A2183374()
{
  return 0x736567617373656DLL;
}

uint64_t sub_1A218338C()
{
  return 0x656D686361747461;
}

uint64_t sub_1A21833AC()
{
  return 0x556567617373656DLL;
}

void sub_1A21833D0(char *a1)
{
  sub_1A2184E38(*a1);
}

void sub_1A21833DC()
{
  char *v0;

  sub_1A21745BC(*v0);
}

void sub_1A21833E4(uint64_t a1)
{
  char *v1;

  sub_1A2174928(a1, *v1);
}

void sub_1A21833EC(uint64_t a1)
{
  char *v1;

  sub_1A2174A50(a1, *v1);
}

uint64_t sub_1A21833F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A2183648();
  *a1 = result;
  return result;
}

uint64_t sub_1A2183420@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A2183328(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t storeEnumTagSinglePayload for SyncCountType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A2183494 + 4 * byte_1A21AF46A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A21834C8 + 4 * byte_1A21AF465[v4]))();
}

uint64_t sub_1A21834C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21834D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A21834D8);
  return result;
}

uint64_t sub_1A21834E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A21834ECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A21834F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21834F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncCountType()
{
  return &type metadata for SyncCountType;
}

unint64_t sub_1A2183518()
{
  unint64_t result;

  result = qword_1EE65E7F0;
  if (!qword_1EE65E7F0)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF4F8, &type metadata for SyncCountType);
    atomic_store(result, (unint64_t *)&qword_1EE65E7F0);
  }
  return result;
}

uint64_t sub_1A218355C()
{
  sub_1A2183604();
  return sub_1A21997AC();
}

uint64_t sub_1A21835B8()
{
  sub_1A2183604();
  return sub_1A21997A0();
}

unint64_t sub_1A2183604()
{
  unint64_t result;

  result = qword_1EE65E7F8;
  if (!qword_1EE65E7F8)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF480, &type metadata for SyncCountType);
    atomic_store(result, (unint64_t *)&qword_1EE65E7F8);
  }
  return result;
}

uint64_t sub_1A2183648()
{
  unint64_t v0;

  v0 = sub_1A2199AB8();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1A2183690(char a1)
{
  if (a1 != 5)
  {
    sub_1A2199A04();
    __asm { BR              X11 }
  }
  return 0;
}

__n128 initializeBufferWithCopyOfBuffer for SyncStoreCounts(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SyncStoreCounts(unsigned __int8 *a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && a1[24])
    return (*(_DWORD *)a1 + 251);
  if (*a1 <= 5u)
    v3 = 5;
  else
    v3 = *a1;
  v4 = v3 - 6;
  if (*a1 < 5u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncStoreCounts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerRecordCounts()
{
  return &type metadata for ServerRecordCounts;
}

uint64_t sub_1A2183958(char a1)
{
  return *(_QWORD *)&aCounttyptotal[8 * a1];
}

uint64_t sub_1A2183978(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;

  v11[1] = a3;
  v6 = sub_1A1FFD920(&qword_1EE65E810);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A200A4E0(a1, a1[3]);
  sub_1A2183EF8();
  sub_1A2199BB4();
  v15 = a2;
  v14 = 0;
  sub_1A2183140();
  sub_1A2199B00();
  if (!v3)
  {
    v13 = 1;
    sub_1A2199B0C();
    v12 = 2;
    sub_1A2199B0C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A2183AD8()
{
  char *v0;

  return sub_1A2183958(*v0);
}

uint64_t sub_1A2183AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2183C34(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A2183B04(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A2183B10()
{
  sub_1A2183EF8();
  return sub_1A2199BC0();
}

uint64_t sub_1A2183B38()
{
  sub_1A2183EF8();
  return sub_1A2199BCC();
}

uint64_t sub_1A2183B60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A2183D68(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A2183B8C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A2183978(a1, *(_BYTE *)v1, *(_QWORD *)(v1 + 8));
}

BOOL sub_1A2183BA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  char v12;
  char v13;

  v4 = *a1;
  v6 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v7 = *a2;
  v9 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  if (v4 == 5)
  {
    if (v7 != 5 || v6 != v9)
      return 0;
    return v5 == v8;
  }
  if (v7 == 5)
    return 0;
  sub_1A2184E38(v4);
  v13 = v12;
  result = 0;
  if ((v13 & 1) != 0 && v6 == v9)
    return v5 == v8;
  return result;
}

uint64_t sub_1A2183C28()
{
  char *v0;

  return sub_1A2183690(*v0);
}

uint64_t sub_1A2183C34(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x707954746E756F63 && a2 == 0xE900000000000065;
  if (v3 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61746F74 && a2 == 0xE500000000000000 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702259052 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2199B48();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2183D68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[16];

  v2 = sub_1A1FFD920(&qword_1EE65E800);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A200A4E0(a1, a1[3]);
  sub_1A2183EF8();
  sub_1A2199BA8();
  v8[14] = 0;
  sub_1A21830FC();
  sub_1A2199ADC();
  v6 = v8[15];
  v8[13] = 1;
  sub_1A2199AE8();
  v8[12] = 2;
  sub_1A2199AE8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A200A548((uint64_t)a1);
  return v6;
}

unint64_t sub_1A2183EF8()
{
  unint64_t result;

  result = qword_1EE65E808;
  if (!qword_1EE65E808)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF6F8, &type metadata for ServerRecordCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E808);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ServerRecordCounts.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerRecordCounts.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2184018 + 4 * byte_1A21AF57A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A218404C + 4 * byte_1A21AF575[v4]))();
}

uint64_t sub_1A218404C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2184054(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A218405CLL);
  return result;
}

uint64_t sub_1A2184068(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2184070);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2184074(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A218407C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerRecordCounts.CodingKeys()
{
  return &type metadata for ServerRecordCounts.CodingKeys;
}

unint64_t sub_1A218409C()
{
  unint64_t result;

  result = qword_1EE65E818;
  if (!qword_1EE65E818)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF6D0, &type metadata for ServerRecordCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E818);
  }
  return result;
}

unint64_t sub_1A21840E4()
{
  unint64_t result;

  result = qword_1EE65E820;
  if (!qword_1EE65E820)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF640, &type metadata for ServerRecordCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E820);
  }
  return result;
}

unint64_t sub_1A218412C()
{
  unint64_t result;

  result = qword_1EE65E828;
  if (!qword_1EE65E828)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF668, &type metadata for ServerRecordCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E828);
  }
  return result;
}

uint64_t sub_1A21845C0()
{
  uint64_t result;

  sub_1A219953C();
  swift_allocObject();
  result = sub_1A2199530();
  qword_1EE65C178 = result;
  return result;
}

id sub_1A21845FC()
{
  void *v0;
  void *v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;
  objc_super v17;
  id __src[64];

  __src[63] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = (void *)sub_1A2199740();
  swift_bridgeObjectRelease();
  __src[0] = 0;
  v4 = objc_msgSend(v1, sel_dataWithJSONObject_options_error_, v3, 0, __src);

  v5 = __src[0];
  if (v4)
  {
    v6 = sub_1A2199578();
    v8 = v7;

    if (qword_1EE65C180 != -1)
      swift_once();
    sub_1A2184CD4();
    sub_1A2199524();
    sub_1A2184D18(v6, v8);
    memcpy(&v2[OBJC_IVAR___IMCloudKitSyncStatistics_statistics], __src, 0x1F8uLL);
  }
  else
  {
    v9 = v5;
    v10 = (void *)sub_1A219956C();

    swift_willThrow();
    if (qword_1EE65C0A8 != -1)
      swift_once();
    v11 = sub_1A21996F8();
    sub_1A200A4C8(v11, (uint64_t)qword_1EE6617D0);
    v12 = sub_1A21996E0();
    v13 = sub_1A21998A8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A1FF4000, v12, v13, "Failed to get data from dictionary. Resetting statistic counts", v14, 2u);
      MEMORY[0x1A8583364](v14, -1, -1);
    }

    v15 = &v2[OBJC_IVAR___IMCloudKitSyncStatistics_statistics];
    *((_QWORD *)v15 + 2) = 0;
    *(_OWORD *)v15 = 0u;
    v15[24] = 5;
    v15[32] = 5;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    v15[72] = 5;
    *((_OWORD *)v15 + 5) = 0u;
    v15[96] = 5;
    *(_OWORD *)(v15 + 104) = 0u;
    v15[120] = 5;
    v15[128] = 5;
    *(_OWORD *)(v15 + 152) = 0u;
    *(_OWORD *)(v15 + 136) = 0u;
    v15[168] = 5;
    *((_QWORD *)v15 + 22) = 0;
    *((_QWORD *)v15 + 23) = 0;
    v15[192] = 5;
    *((_QWORD *)v15 + 25) = 0;
    *((_QWORD *)v15 + 26) = 0;
    v15[216] = 5;
    v15[224] = 5;
    *(_OWORD *)(v15 + 232) = 0u;
    *(_OWORD *)(v15 + 248) = 0u;
    v15[264] = 5;
    *((_QWORD *)v15 + 34) = 0;
    *((_QWORD *)v15 + 35) = 0;
    v15[288] = 5;
    *((_QWORD *)v15 + 37) = 0;
    *((_QWORD *)v15 + 38) = 0;
    v15[312] = 5;
    v15[320] = 5;
    *(_OWORD *)(v15 + 328) = 0u;
    *(_OWORD *)(v15 + 344) = 0u;
    v15[360] = 5;
    *((_QWORD *)v15 + 46) = 0;
    *((_QWORD *)v15 + 47) = 0;
    v15[384] = 5;
    *((_QWORD *)v15 + 49) = 0;
    *((_QWORD *)v15 + 50) = 0;
    v15[408] = 5;
    v15[416] = 5;
    *(_OWORD *)(v15 + 424) = 0u;
    *(_OWORD *)(v15 + 440) = 0u;
    v15[456] = 5;
    *((_QWORD *)v15 + 58) = 0;
    *((_QWORD *)v15 + 59) = 0;
    v15[480] = 5;
    *((_QWORD *)v15 + 61) = 0;
    *((_QWORD *)v15 + 62) = 0;
  }

  v17.receiver = v2;
  v17.super_class = (Class)IMCloudKitSyncStatistics;
  return objc_msgSendSuper2(&v17, sel_init);
}

unint64_t IMCloudKitSyncStatistics.description.getter()
{
  char *v0;
  char *v1;
  void *ObjCClassFromMetadata;
  id v3;
  void *v4;
  _QWORD __dst[63];
  unint64_t v7;
  unint64_t v8;

  v1 = v0;
  swift_getObjectType();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  objc_msgSend(v1, sel_percentSynced);
  v3 = objc_msgSend(ObjCClassFromMetadata, sel_percentStringFromDouble_);
  if (v3)
  {
    v4 = v3;
    sub_1A2199764();

  }
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  sub_1A2199A04();
  swift_bridgeObjectRelease();
  v7 = 0xD000000000000014;
  v8 = 0x80000001A21D4B30;
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  memcpy(__dst, &v1[OBJC_IVAR___IMCloudKitSyncStatistics_statistics], sizeof(__dst));
  CountStatistics.description.getter();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  return v7;
}

void __swiftcall IMCloudKitSyncStatistics.init()(IMCloudKitSyncStatistics *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMCloudKitSyncStatistics.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for IMCloudKitSyncStatistics(uint64_t a1)
{
  return sub_1A200E71C(a1, &qword_1EE65E838);
}

unint64_t sub_1A2184CD4()
{
  unint64_t result;

  result = qword_1EE65C170;
  if (!qword_1EE65C170)
  {
    result = MEMORY[0x1A85832D4](&protocol conformance descriptor for CountStatistics, &type metadata for CountStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE65C170);
  }
  return result;
}

uint64_t sub_1A2184D18(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

__n128 initializeWithCopy for OverallCounts(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for OverallCounts(unsigned __int8 *a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && a1[96])
    return (*(_DWORD *)a1 + 251);
  if (*a1 <= 5u)
    v3 = 5;
  else
    v3 = *a1;
  v4 = v3 - 6;
  if (*a1 < 5u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OverallCounts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for OverallCounts()
{
  return &type metadata for OverallCounts;
}

void sub_1A2184E38(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A2184E84(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A2184F10 + 4 * byte_1A21AF785[a2]))(0x7374616863);
}

uint64_t sub_1A2184F10(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7374616863 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A2184FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = CountStatistics.RootKeys.rawValue.getter();
  v2 = v1;
  if (v0 == CountStatistics.RootKeys.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1A2185078(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1A21850C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A218514C + 4 * byte_1A21AF78F[a2]))(0x616E614D74616863);
}

uint64_t sub_1A218514C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x616E614D74616863 && v1 == 0xEF656E6F5A656574)
    v2 = 1;
  else
    v2 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A2185204(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1A2185250(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A2185314 + 4 * byte_1A21AF79E[a2]))(0xD000000000000013);
}

uint64_t sub_1A2185314(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000013 && v1 == 0x80000001A21D3660)
    v2 = 1;
  else
    v2 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A2185408(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6365725F6576696CLL;
  else
    v3 = 0x65725F6C61746F74;
  if (v2)
    v4 = 0xED00007364726F63;
  else
    v4 = 0xEC0000007364726FLL;
  if ((a2 & 1) != 0)
    v5 = 0x6365725F6576696CLL;
  else
    v5 = 0x65725F6C61746F74;
  if ((a2 & 1) != 0)
    v6 = 0xEC0000007364726FLL;
  else
    v6 = 0xED00007364726F63;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1A2199B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A21854BC()
{
  uint64_t v0;
  uint64_t v2;

  v2 = sub_1A2182374();
  sub_1A2199788();
  sub_1A2183690(*(_BYTE *)(v0 + 72));
  sub_1A2199788();
  swift_bridgeObjectRelease();
  sub_1A2199788();
  sub_1A218949C(*(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_1A2199788();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A218556C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A21855A4 + 4 * byte_1A21AF7A8[a1]))(0xD000000000000012, 0x80000001A21D5080);
}

uint64_t sub_1A21855A4()
{
  return 0x707954746E756F63;
}

uint64_t sub_1A21855C0()
{
  return 0x726F7453636E7973;
}

uint64_t sub_1A21855E4()
{
  return 0x6F43726576726573;
}

uint64_t sub_1A2185604(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = sub_1A1FFD920(&qword_1EE65E868);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A200A4E0(a1, a1[3]);
  sub_1A2185FB0();
  sub_1A2199BB4();
  sub_1A218269C(v3, (uint64_t)&v15);
  sub_1A218269C((uint64_t)&v15, (uint64_t)&v11);
  v14 = 0;
  sub_1A2183140();
  sub_1A2199B00();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 24);
    v11 = *(_OWORD *)(v3 + 8);
    v12 = v9;
    v13 = *(_QWORD *)(v3 + 40);
    v14 = 1;
    sub_1A21860C0();
    sub_1A2199B18();
    v11 = *(_OWORD *)(v3 + 48);
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + 64);
    v14 = 2;
    sub_1A2186104();
    sub_1A2199B18();
    v11 = *(_OWORD *)(v3 + 72);
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + 88);
    v14 = 3;
    sub_1A2186148();
    sub_1A2199B18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A21857F4()
{
  unsigned __int8 *v0;

  return sub_1A218556C(*v0);
}

uint64_t sub_1A21857FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2185B78(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A2185820(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A218582C()
{
  sub_1A2185FB0();
  return sub_1A2199BC0();
}

uint64_t sub_1A2185854()
{
  sub_1A2185FB0();
  return sub_1A2199BCC();
}

double sub_1A218587C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[6];

  sub_1A2185D48(a1, (uint64_t)v8);
  if (!v2)
  {
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    result = *(double *)v8;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1A21858C4(_QWORD *a1)
{
  return sub_1A2185604(a1);
}

BOOL sub_1A2185904(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_1A2185960((unsigned __int8 *)v9, (unsigned __int8 *)v10);
}

BOOL sub_1A2185960(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  int v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL8 result;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v4 = *a1;
  v5 = *a2;
  if (v4 == 5)
  {
    if (v5 != 5)
      return 0;
  }
  else
  {
    if (v5 == 5)
      return 0;
    sub_1A2184E38(v4);
    if ((v6 & 1) == 0)
      return 0;
  }
  v7 = a1[8];
  v9 = *((_QWORD *)a1 + 2);
  v8 = *((_QWORD *)a1 + 3);
  v11 = *((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 5);
  v12 = a2[8];
  v14 = *((_QWORD *)a2 + 2);
  v13 = *((_QWORD *)a2 + 3);
  v16 = *((_QWORD *)a2 + 4);
  v15 = *((_QWORD *)a2 + 5);
  if (v7 == 5)
  {
    result = 0;
    if (v12 != 5)
      return result;
  }
  else
  {
    if (v12 == 5)
      return 0;
    sub_1A2184E38(v7);
    v19 = v18;
    result = 0;
    if ((v19 & 1) == 0)
      return result;
  }
  if (v9 != v14 || v8 != v13 || v11 != v16 || v10 != v15)
    return result;
  v20 = a1[48];
  v22 = *((_QWORD *)a1 + 7);
  v21 = *((_QWORD *)a1 + 8);
  v23 = a2[48];
  v25 = *((_QWORD *)a2 + 7);
  v24 = *((_QWORD *)a2 + 8);
  if (v20 == 5)
  {
    result = 0;
    if (v23 != 5)
      return result;
    goto LABEL_20;
  }
  if (v23 == 5)
    return 0;
  sub_1A2184E38(v20);
  v27 = v26;
  result = 0;
  if ((v27 & 1) == 0)
    return result;
LABEL_20:
  if (v22 == v25 && v21 == v24)
  {
    v28 = a1[72];
    v30 = *((_QWORD *)a1 + 10);
    v29 = *((_QWORD *)a1 + 11);
    v31 = a2[72];
    v33 = *((_QWORD *)a2 + 10);
    v32 = *((_QWORD *)a2 + 11);
    if (v28 == 5)
    {
      if (v31 != 5)
        return 0;
    }
    else
    {
      if (v31 == 5)
        return 0;
      sub_1A2184E38(v28);
      if ((v34 & 1) == 0)
        return 0;
    }
    return v30 == v33 && v29 == v32;
  }
  return result;
}

uint64_t sub_1A2185AD4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  if (a2 < 0 || a3 < 0 || a4 < 0 || a5 < 0 || a8 < 0 || a10 < 0 || a6 < 0 || a7 < 0)
  {
    result = sub_1A2199A64();
    __break(1u);
  }
  else
  {
    *(_BYTE *)a9 = result;
    *(_BYTE *)(a9 + 8) = result;
    *(_QWORD *)(a9 + 16) = a2;
    *(_QWORD *)(a9 + 24) = a3;
    *(_QWORD *)(a9 + 32) = a4;
    *(_QWORD *)(a9 + 40) = a5;
    *(_BYTE *)(a9 + 48) = result;
    *(_QWORD *)(a9 + 56) = a8;
    *(_QWORD *)(a9 + 64) = a10;
    *(_BYTE *)(a9 + 72) = result;
    *(_QWORD *)(a9 + 80) = a6;
    *(_QWORD *)(a9 + 88) = a7;
  }
  return result;
}

uint64_t sub_1A2185B78(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x707954746E756F63 && a2 == 0xE900000000000065;
  if (v3 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A21D5080 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7453636E7973 && a2 == 0xEF73746E756F4365 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F43726576726573 && a2 == 0xEC00000073746E75)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2199B48();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A2185D48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;

  v5 = sub_1A1FFD920(&qword_1EE65E840);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A200A4E0(a1, a1[3]);
  sub_1A2185FB0();
  sub_1A2199BA8();
  if (v2)
    return sub_1A200A548((uint64_t)a1);
  v33 = 0;
  sub_1A21830FC();
  sub_1A2199ADC();
  v9 = v27;
  v33 = 1;
  sub_1A2185FF4();
  sub_1A2199AF4();
  v25 = v9;
  v32 = v27;
  v26 = v28;
  v10 = v30;
  v24 = v29;
  v11 = v31;
  v33 = 2;
  sub_1A2186038();
  sub_1A2199AF4();
  v22 = v11;
  v23 = v10;
  LOBYTE(v11) = v27;
  v12 = v28;
  v21 = v29;
  v33 = 3;
  sub_1A218607C();
  sub_1A2199AF4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v27;
  v14 = v28;
  v15 = v29;
  result = sub_1A200A548((uint64_t)a1);
  *(_BYTE *)a2 = v25;
  *(_BYTE *)(a2 + 8) = v32;
  v17 = v24;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v17;
  v18 = v22;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v18;
  *(_BYTE *)(a2 + 48) = v11;
  v19 = v21;
  *(_QWORD *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v19;
  *(_BYTE *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v15;
  return result;
}

unint64_t sub_1A2185FB0()
{
  unint64_t result;

  result = qword_1EE65E848;
  if (!qword_1EE65E848)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF930, &type metadata for OverallCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E848);
  }
  return result;
}

unint64_t sub_1A2185FF4()
{
  unint64_t result;

  result = qword_1EE65E850;
  if (!qword_1EE65E850)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF2CC, &type metadata for LiveDatabaseCounts);
    atomic_store(result, (unint64_t *)&qword_1EE65E850);
  }
  return result;
}

unint64_t sub_1A2186038()
{
  unint64_t result;

  result = qword_1EE65E858;
  if (!qword_1EE65E858)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AFA74, &type metadata for SyncStoreCounts);
    atomic_store(result, (unint64_t *)&qword_1EE65E858);
  }
  return result;
}

unint64_t sub_1A218607C()
{
  unint64_t result;

  result = qword_1EE65E860;
  if (!qword_1EE65E860)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF60C, &type metadata for ServerRecordCounts);
    atomic_store(result, (unint64_t *)&qword_1EE65E860);
  }
  return result;
}

unint64_t sub_1A21860C0()
{
  unint64_t result;

  result = qword_1EE65E870;
  if (!qword_1EE65E870)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF2A4, &type metadata for LiveDatabaseCounts);
    atomic_store(result, (unint64_t *)&qword_1EE65E870);
  }
  return result;
}

unint64_t sub_1A2186104()
{
  unint64_t result;

  result = qword_1EE65E878;
  if (!qword_1EE65E878)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AFA4C, &type metadata for SyncStoreCounts);
    atomic_store(result, (unint64_t *)&qword_1EE65E878);
  }
  return result;
}

unint64_t sub_1A2186148()
{
  unint64_t result;

  result = qword_1EE65E880;
  if (!qword_1EE65E880)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF5E4, &type metadata for ServerRecordCounts);
    atomic_store(result, (unint64_t *)&qword_1EE65E880);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OverallCounts.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OverallCounts.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2186268 + 4 * byte_1A21AF7B1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A218629C + 4 * byte_1A21AF7AC[v4]))();
}

uint64_t sub_1A218629C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21862A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A21862ACLL);
  return result;
}

uint64_t sub_1A21862B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A21862C0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A21862C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A21862CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OverallCounts.CodingKeys()
{
  return &type metadata for OverallCounts.CodingKeys;
}

unint64_t sub_1A21862EC()
{
  unint64_t result;

  result = qword_1EE65E888;
  if (!qword_1EE65E888)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF908, &type metadata for OverallCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E888);
  }
  return result;
}

unint64_t sub_1A2186334()
{
  unint64_t result;

  result = qword_1EE65E890;
  if (!qword_1EE65E890)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF878, &type metadata for OverallCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E890);
  }
  return result;
}

unint64_t sub_1A218637C()
{
  unint64_t result;

  result = qword_1EE65E898;
  if (!qword_1EE65E898)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AF8A0, &type metadata for OverallCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E898);
  }
  return result;
}

uint64_t MultiplexedDaemonConnection.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___IMMultiplexedDaemonConnection_label);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MultiplexedDaemonConnection.capabilities.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___IMMultiplexedDaemonConnection_capabilities);
}

uint64_t MultiplexedDaemonConnection.context.getter()
{
  return swift_bridgeObjectRetain();
}

id MultiplexedDaemonConnection.remoteProxy.getter()
{
  return sub_1A2186510((SEL *)&selRef_remoteDaemon);
}

id sub_1A2186488(void *a1, uint64_t a2, SEL *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  v5 = (void *)objc_opt_self();
  v6 = a1;
  v7 = objc_msgSend(v5, sel_sharedController);
  v8 = objc_msgSend(v7, *a3);

  return v8;
}

id MultiplexedDaemonConnection.synchronousRemoteProxy.getter()
{
  return sub_1A2186510((SEL *)&selRef_synchronousRemoteDaemon);
}

id sub_1A2186510(SEL *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v3 = objc_msgSend(v2, *a1);

  return v3;
}

Swift::Void __swiftcall MultiplexedDaemonConnection.waitForSetup()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v1 = sub_1A21996F8();
  sub_1A200A4C8(v1, (uint64_t)qword_1ECF12660);
  v2 = v0;
  v3 = sub_1A21996E0();
  v4 = sub_1A2199890();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14 = v6;
    *(_DWORD *)v5 = 136315394;
    v7 = *(_QWORD *)&v2[OBJC_IVAR___IMMultiplexedDaemonConnection_label];
    v8 = *(_QWORD *)&v2[OBJC_IVAR___IMMultiplexedDaemonConnection_label + 8];
    swift_bridgeObjectRetain();
    sub_1A200F6C8(v7, v8, &v14);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    v9 = (id)IMStringFromClientCapabilities();
    v10 = sub_1A2199764();
    v12 = v11;

    sub_1A200F6C8(v10, v12, &v14);
    sub_1A2199968();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v3, v4, "Multiplexed connection %s is waiting for setup with capabilities %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v6, -1, -1);
    MEMORY[0x1A8583364](v5, -1, -1);

  }
  else
  {

  }
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  objc_msgSend(v13, sel_blockUntilConnected);

}

uint64_t MultiplexedDaemonConnection.connect()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_1A2186800()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v1 = v0 + 10;
  if (qword_1ECF121D0 != -1)
    swift_once();
  v2 = (void *)v0[15];
  v3 = sub_1A21996F8();
  sub_1A200A4C8(v3, (uint64_t)qword_1ECF12660);
  v4 = v2;
  v5 = sub_1A21996E0();
  v6 = sub_1A2199890();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (char *)v0[15];
  if (v7)
  {
    v9 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v9 = 136315394;
    v10 = *(_QWORD *)&v8[OBJC_IVAR___IMMultiplexedDaemonConnection_label];
    v11 = *(_QWORD *)&v8[OBJC_IVAR___IMMultiplexedDaemonConnection_label + 8];
    swift_bridgeObjectRetain();
    v0[10] = sub_1A200F6C8(v10, v11, &v20);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v12 = (id)IMStringFromClientCapabilities();
    v13 = sub_1A2199764();
    v15 = v14;

    v16 = v13;
    v1 = v0 + 10;
    v0[10] = sub_1A200F6C8(v16, v15, &v20);
    sub_1A2199968();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A1FF4000, v5, v6, "Multiplexed connection %s is requesting asynchronous connection with capabilities %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v19, -1, -1);
    MEMORY[0x1A8583364](v9, -1, -1);
  }
  else
  {

  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v0[16] = v17;
  v0[2] = v0;
  v0[3] = sub_1A2186AAC;
  v0[14] = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_1A2186B28;
  v0[13] = &unk_1E471DFB8;
  objc_msgSend(v17, sel__connectWithCompletion_, v1);
  return swift_continuation_await();
}

uint64_t sub_1A2186AAC()
{
  return swift_task_switch();
}

uint64_t sub_1A2186AF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2186B28()
{
  return swift_continuation_resume();
}

uint64_t sub_1A2186C4C(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1A2186CC4;
  v5[15] = v4;
  return swift_task_switch();
}

uint64_t sub_1A2186CC4()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

Swift::Void __swiftcall MultiplexedDaemonConnection.invalidate()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1ECF121D0 != -1)
    swift_once();
  v1 = sub_1A21996F8();
  sub_1A200A4C8(v1, (uint64_t)qword_1ECF12660);
  v2 = v0;
  v3 = sub_1A21996E0();
  v4 = sub_1A2199890();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = *(_QWORD *)&v2[OBJC_IVAR___IMMultiplexedDaemonConnection_label];
    v8 = *(_QWORD *)&v2[OBJC_IVAR___IMMultiplexedDaemonConnection_label + 8];
    swift_bridgeObjectRetain();
    sub_1A200F6C8(v7, v8, &v11);
    sub_1A2199968();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v3, v4, "Multiplexed connection %s was invalidated by caller", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v6, -1, -1);
    MEMORY[0x1A8583364](v5, -1, -1);

  }
  else
  {

  }
  (*(void (**)(uint64_t, uint64_t))&v2[OBJC_IVAR___IMMultiplexedDaemonConnection_onInvalidate])(v9, v10);
}

id MultiplexedDaemonConnection.__allocating_init(label:capabilities:context:onInvalidate:onDeinit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  objc_super v22;

  v17 = (char *)objc_allocWithZone(v8);
  v18 = &v17[OBJC_IVAR___IMMultiplexedDaemonConnection_label];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  *(_QWORD *)&v17[OBJC_IVAR___IMMultiplexedDaemonConnection_capabilities] = a3;
  *(_QWORD *)&v17[OBJC_IVAR___IMMultiplexedDaemonConnection_context] = a4;
  v19 = &v17[OBJC_IVAR___IMMultiplexedDaemonConnection_onInvalidate];
  *(_QWORD *)v19 = a5;
  *((_QWORD *)v19 + 1) = a6;
  v20 = &v17[OBJC_IVAR___IMMultiplexedDaemonConnection_onDeinit];
  *(_QWORD *)v20 = a7;
  *((_QWORD *)v20 + 1) = a8;
  v22.receiver = v17;
  v22.super_class = v8;
  return objc_msgSendSuper2(&v22, sel_init);
}

id MultiplexedDaemonConnection.init(label:capabilities:context:onInvalidate:onDeinit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  objc_class *ObjectType;
  char *v18;
  char *v19;
  char *v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v18 = &v8[OBJC_IVAR___IMMultiplexedDaemonConnection_label];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  *(_QWORD *)&v8[OBJC_IVAR___IMMultiplexedDaemonConnection_capabilities] = a3;
  *(_QWORD *)&v8[OBJC_IVAR___IMMultiplexedDaemonConnection_context] = a4;
  v19 = &v8[OBJC_IVAR___IMMultiplexedDaemonConnection_onInvalidate];
  *(_QWORD *)v19 = a5;
  *((_QWORD *)v19 + 1) = a6;
  v20 = &v8[OBJC_IVAR___IMMultiplexedDaemonConnection_onDeinit];
  *(_QWORD *)v20 = a7;
  *((_QWORD *)v20 + 1) = a8;
  v22.receiver = v8;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, sel_init);
}

id MultiplexedDaemonConnection.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  void (*v2)(uint64_t);
  uint64_t v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(void (**)(uint64_t))&v0[OBJC_IVAR___IMMultiplexedDaemonConnection_onDeinit];
  v3 = swift_retain();
  v2(v3);
  swift_release();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

id MultiplexedDaemonConnection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MultiplexedDaemonConnection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for MultiplexedDaemonConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for MultiplexedDaemonConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MultiplexedDaemonConnection.__allocating_init(label:capabilities:context:onInvalidate:onDeinit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1A2187290()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A21872B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A21872C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A21872EC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A2173744;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EE65E8D0 + dword_1EE65E8D0))(v2, v3);
}

uint64_t sub_1A2187354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1A2173EFC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EE65E9D8 + dword_1EE65E9D8))(v2, v3, v4);
}

uint64_t sub_1A21873D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A2187464(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A218763C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A218763C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A2187464(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A21875D8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A2199A10();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A2199A64();
      __break(1u);
LABEL_10:
      v2 = sub_1A2199794();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A2199AA0();
    __break(1u);
LABEL_14:
    result = sub_1A2199A64();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A21875D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1A1FFD920((uint64_t *)&unk_1ECF12230);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A218763C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A1FFD920((uint64_t *)&unk_1ECF12230);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A2199AA0();
  __break(1u);
  return result;
}

uint64_t sub_1A2187790()
{
  uint64_t v0;

  v0 = sub_1A21996F8();
  sub_1A200A568(v0, qword_1EE65C2C8);
  sub_1A200A4C8(v0, (uint64_t)qword_1EE65C2C8);
  sub_1A21996D4();
  return sub_1A21996EC();
}

uint64_t sub_1A21877F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v1 = sub_1A21995CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - v6;
  sub_1A21995C0();
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v10 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v11 + v10, v5, v1);
  aBlock[4] = sub_1A21888D4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A216F824;
  aBlock[3] = &unk_1E471DFD0;
  v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_calculateServiceForSendingToChat_completionBlock_, v0, v12);
  _Block_release(v12);

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
}

void sub_1A21879AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1A85833E8](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1A2187A18(a1, a3);

  }
}

id sub_1A2187A18(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, int64_t);
  id v25;
  void *v26;
  id v27;
  char **v28;
  unsigned int v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  id result;
  void *v56;
  void *v57;
  id v58;
  unint64_t v59;
  id v60;
  void *v61;
  id v62;
  void (*v63)(unint64_t, uint64_t, int64_t);
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(unint64_t, int64_t);
  char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void (*v76)(char *, int64_t);
  uint64_t v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  char **v84;
  id v85;
  char **v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char **v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v100 = a2;
  v4 = sub_1A21996F8();
  v102 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char **)((char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A21995CC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v99 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (unint64_t)&v97 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v97 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v97 - v20;
  v101 = v2;
  v22 = objc_msgSend(v2, sel_lastCompletedServiceReachabilityRequestStartTime);
  if (v22)
  {
    v23 = v22;
    sub_1A21995B4();

    v24 = *(void (**)(char *, char *, int64_t))(v11 + 32);
    v24(v9, v19, v10);
    (*(void (**)(char *, _QWORD, uint64_t, int64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, int64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v24(v21, v9, v10);
      if ((sub_1A21995A8() & 1) != 0)
      {
        v25 = objc_msgSend((id)a1, sel_bestResult);
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(v25, sel_service);

          a1 = sub_1A2199764();
          v6 = v28;

        }
        else
        {
          v6 = (char **)0xE300000000000000;
          a1 = 4999502;
        }
        if (qword_1EE65C2E8 != -1)
          goto LABEL_82;
        goto LABEL_59;
      }
      (*(void (**)(char *, int64_t))(v11 + 8))(v21, v10);
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, int64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  sub_1A200F818((uint64_t)v9, (uint64_t *)&unk_1EE65C098);
LABEL_8:
  v29 = objc_msgSend((id)a1, sel_isFinal);
  v10 = v102;
  if (v29)
  {
    v30 = (void *)sub_1A219959C();
    objc_msgSend(v101, sel_setLastCompletedServiceReachabilityRequestStartTime_, v30);

  }
  if (qword_1EE65C2E8 != -1)
LABEL_63:
    swift_once();
  v31 = sub_1A200A4C8(v4, (uint64_t)qword_1EE65C2C8);
  (*(void (**)(char **, uint64_t, uint64_t))(v10 + 16))(v6, v31, v4);
  v21 = (char *)(id)a1;
  v32 = sub_1A21996E0();
  v33 = sub_1A2199890();
  if (os_log_type_enabled(v32, v33))
  {
    v100 = v31;
    v34 = swift_slowAlloc();
    a1 = swift_slowAlloc();
    v104 = a1;
    *(_DWORD *)v34 = 136315394;
    v35 = objc_msgSend(v21, sel_bestResult);
    v98 = v4;
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend(v35, sel_service);

      v38 = sub_1A2199764();
      v40 = v39;

    }
    else
    {
      v40 = 0xE500000000000000;
      v38 = 0x3E6C696E3CLL;
    }
    v103 = sub_1A200F6C8(v38, v40, &v104);
    sub_1A2199968();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 1024;
    v41 = objc_msgSend(v21, sel_isFinal);

    LODWORD(v103) = v41;
    sub_1A2199968();

    _os_log_impl(&dword_1A1FF4000, v32, v33, "Preferred service for sending updated to %s isFinal %{BOOL}d", (uint8_t *)v34, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](a1, -1, -1);
    MEMORY[0x1A8583364](v34, -1, -1);

    (*(void (**)(char **, uint64_t))(v102 + 8))(v6, v98);
  }
  else
  {

    (*(void (**)(char **, uint64_t))(v10 + 8))(v6, v4);
  }
  v42 = objc_msgSend(v21, sel_resultsByAccountID);
  v4 = sub_1A200E71C(0, &qword_1EE65C350);
  v43 = sub_1A219974C();

  v44 = v43 + 64;
  v45 = 1 << *(_BYTE *)(v43 + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v16 = v46 & *(_QWORD *)(v43 + 64);
  v10 = (unint64_t)(v45 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  v6 = &selRef_clearServiceCaches;
  while (v16)
  {
    v47 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v48 = v47 | (v11 << 6);
LABEL_21:
    if (objc_msgSend(*(id *)(*(_QWORD *)(v43 + 56) + 8 * v48), sel_error) == (id)5)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v6 = (char **)v101;
      sub_1A2188914();
      if ((v52 & 1) != 0 || (v53 = sub_1A2188914(), (v54 & 1) == 0) && v53 == -1)
      {
        result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        if (!result)
          goto LABEL_84;
        v56 = result;
        objc_msgSend(result, sel_trackSpamEvent_, 2);

        v57 = (void *)sub_1A2199878();
        objc_msgSend(v6, sel_setValue_forChatProperty_, v57, CFSTR("smsHandshakeState"));

      }
LABEL_47:
      v58 = objc_msgSend(v21, sel_resultsForServiceName_, *MEMORY[0x1E0D38F68]);
      v59 = sub_1A21997D0();

      if (v59 >> 62)
      {
        swift_bridgeObjectRetain();
        v77 = sub_1A2199A70();
        swift_bridgeObjectRelease();
        if (v77)
          goto LABEL_49;
      }
      else if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_49:
        if ((v59 & 0xC000000000000001) != 0)
        {
          v60 = (id)MEMORY[0x1A8581C78](0, v59);
        }
        else
        {
          if (!*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_81;
          }
          v60 = *(id *)(v59 + 32);
        }
        v61 = v60;
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel__updateHybridGroupStateWithReachabilityResult_, v61);
        if (v61)
        {
          v62 = v61;
          sub_1A2189230(v62);
          if (objc_msgSend(v62, sel_allAreReachable))
            objc_msgSend(v6, sel_setHasHadSuccessfulQuery_, 1);

        }
        goto LABEL_66;
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel__updateHybridGroupStateWithReachabilityResult_, 0);
LABEL_66:
      if ((sub_1A2188EA8() & 1) != 0)
      {
        v78 = objc_msgSend(v21, sel_bestResult);
        if (v78)
        {
          v79 = v78;
          v80 = objc_msgSend(v78, sel_service);
          if (!v80)
          {
            sub_1A2199764();
            v80 = (id)sub_1A2199758();
            swift_bridgeObjectRelease();
          }
          v81 = objc_msgSend((id)objc_opt_self(), sel_serviceWithInternalName_, v80);

          if (!v81)
          {
            v83 = v79;
            v84 = v6;
            v85 = v83;
            v86 = v84;
            v87 = sub_1A21996E0();
            v88 = sub_1A21998B4();
            if (os_log_type_enabled(v87, v88))
            {
              v89 = swift_slowAlloc();
              v90 = (_QWORD *)swift_slowAlloc();
              v102 = swift_slowAlloc();
              v104 = v102;
              *(_DWORD *)v89 = 136315394;
              v91 = objc_msgSend(v85, sel_service);
              v92 = sub_1A2199764();
              v94 = v93;

              v103 = sub_1A200F6C8(v92, v94, &v104);
              sub_1A2199968();

              swift_bridgeObjectRelease();
              *(_WORD *)(v89 + 12) = 2112;
              v103 = (uint64_t)v86;
              v95 = v86;
              sub_1A2199968();
              *v90 = v86;

              _os_log_impl(&dword_1A1FF4000, v87, v88, "Daemon told us %s was the best service for sending on %@ but I can't find the service instance", (uint8_t *)v89, 0x16u);
              sub_1A1FFD920(&qword_1EE65C2C0);
              swift_arrayDestroy();
              MEMORY[0x1A8583364](v90, -1, -1);
              v96 = v102;
              swift_arrayDestroy();
              MEMORY[0x1A8583364](v96, -1, -1);
              MEMORY[0x1A8583364](v89, -1, -1);

            }
            else
            {

            }
            return objc_msgSend(v86, sel_setHasRefreshedServiceForSending_, 1);
          }
          objc_msgSend(v6, sel__targetToService_newComposition_, v81, 0);

        }
        return objc_msgSend(v6, sel_setHasRefreshedServiceForSending_, 1);
      }
      sub_1A200E71C(0, (unint64_t *)&qword_1ECF120F8);
      result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_iMessageService);
      if (result)
      {
        v82 = result;
        objc_msgSend(v6, sel__targetToService_newComposition_, result, 0);

        return objc_msgSend(v6, sel_setHasRefreshedServiceForSending_, 1);
      }
      __break(1u);
LABEL_84:
      __break(1u);
      return result;
    }
  }
  v49 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_63;
  }
  if (v49 >= v10)
  {
LABEL_46:
    swift_release();
    swift_bridgeObjectRelease();
    v6 = (char **)v101;
    goto LABEL_47;
  }
  v50 = *(_QWORD *)(v44 + 8 * v49);
  ++v11;
  if (v50)
    goto LABEL_40;
  v11 = v49 + 1;
  if (v49 + 1 >= v10)
    goto LABEL_46;
  v50 = *(_QWORD *)(v44 + 8 * v11);
  if (v50)
    goto LABEL_40;
  v11 = v49 + 2;
  if (v49 + 2 >= v10)
    goto LABEL_46;
  v50 = *(_QWORD *)(v44 + 8 * v11);
  if (v50)
    goto LABEL_40;
  v11 = v49 + 3;
  if (v49 + 3 >= v10)
    goto LABEL_46;
  v50 = *(_QWORD *)(v44 + 8 * v11);
  if (v50)
    goto LABEL_40;
  v11 = v49 + 4;
  if (v49 + 4 >= v10)
    goto LABEL_46;
  v50 = *(_QWORD *)(v44 + 8 * v11);
  if (v50)
  {
LABEL_40:
    v16 = (v50 - 1) & v50;
    v48 = __clz(__rbit64(v50)) + (v11 << 6);
    goto LABEL_21;
  }
  v51 = v49 + 5;
  if (v51 >= v10)
    goto LABEL_46;
  v50 = *(_QWORD *)(v44 + 8 * v51);
  if (v50)
  {
    v11 = v51;
    goto LABEL_40;
  }
  while (1)
  {
    v11 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v11 >= v10)
      goto LABEL_46;
    v50 = *(_QWORD *)(v44 + 8 * v11);
    ++v51;
    if (v50)
      goto LABEL_40;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  swift_once();
LABEL_59:
  sub_1A200A4C8(v4, (uint64_t)qword_1EE65C2C8);
  v63 = *(void (**)(unint64_t, uint64_t, int64_t))(v11 + 16);
  v63(v16, v100, v10);
  v64 = v99;
  v63((unint64_t)v99, (uint64_t)v21, v10);
  swift_bridgeObjectRetain();
  v65 = sub_1A21996E0();
  v66 = sub_1A2199890();
  v67 = v66;
  if (os_log_type_enabled(v65, v66))
  {
    v68 = swift_slowAlloc();
    v102 = swift_slowAlloc();
    v104 = v102;
    *(_DWORD *)v68 = 136315650;
    LODWORD(v101) = v67;
    swift_bridgeObjectRetain();
    v103 = sub_1A200F6C8(a1, (unint64_t)v6, &v104);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v68 + 12) = 2080;
    sub_1A2189454();
    v69 = sub_1A2199B24();
    v103 = sub_1A200F6C8(v69, v70, &v104);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    v71 = *(void (**)(unint64_t, int64_t))(v11 + 8);
    v71(v16, v10);
    *(_WORD *)(v68 + 22) = 2080;
    v72 = v99;
    v73 = sub_1A2199B24();
    v103 = sub_1A200F6C8(v73, v74, &v104);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    v71((unint64_t)v72, v10);
    _os_log_impl(&dword_1A1FF4000, v65, (os_log_type_t)v101, "Dropping service for sending result %s because task's startTime (%s) is older than the chat's last known start time (%s)", (uint8_t *)v68, 0x20u);
    v75 = v102;
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v75, -1, -1);
    MEMORY[0x1A8583364](v68, -1, -1);

    return (id)((uint64_t (*)(char *, int64_t))v71)(v21, v10);
  }
  else
  {

    v76 = *(void (**)(char *, int64_t))(v11 + 8);
    v76(v64, v10);
    v76((char *)v16, v10);
    swift_bridgeObjectRelease_n();
    return (id)((uint64_t (*)(char *, int64_t))v76)(v21, v10);
  }
}

uint64_t sub_1A218883C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A2188860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A21995CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1A21888D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A21995CC() - 8) + 80);
  sub_1A21879AC(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1A2188914()
{
  void *v0;
  uint64_t v2;
  _OWORD v3[2];
  _BYTE v4[24];
  uint64_t v5;

  if (objc_msgSend(v0, sel_valueForChatProperty_, CFSTR("smsHandshakeState")))
  {
    sub_1A219998C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1A2173CC8((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v2;
  }
  else
  {
    sub_1A200F818((uint64_t)v4, &qword_1ECF12140);
  }
  return 0;
}

uint64_t sub_1A21889DC()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v1 = objc_msgSend(v0, sel_participants);
  sub_1A200E71C(0, (unint64_t *)&qword_1EE65C370);
  v2 = sub_1A21997D0();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  v3 = sub_1A2199A70();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  v23 = (id)objc_opt_self();
  v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x1A8581C78](v4 - 4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4);
    v6 = v5;
    v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v8 = objc_msgSend(v5, "ID");
    sub_1A2199764();

    v9 = (void *)sub_1A2199758();
    swift_bridgeObjectRelease();
    sub_1A2199764();
    v10 = (void *)sub_1A2199758();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v23, sel_mapID_usingKey_, v9, v10);

    v12 = sub_1A2199764();
    v14 = v13;

    v15 = (void *)sub_1A2199758();
    LODWORD(v10) = IMStringIsEmail();

    if ((_DWORD)v10)
      break;
    swift_bridgeObjectRelease();
    ++v4;
    if (v7 == v3)
      goto LABEL_10;
  }
  if (qword_1EE65C2E8 != -1)
    swift_once();
  v18 = sub_1A21996F8();
  sub_1A200A4C8(v18, (uint64_t)qword_1EE65C2C8);
  swift_bridgeObjectRetain_n();
  v19 = sub_1A21996E0();
  v20 = sub_1A2199890();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v24 = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(v12, v14, &v24);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v19, v20, "%s was email, so not retargeting", v21, 0xCu);
    v16 = 1;
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v22, -1, -1);
    MEMORY[0x1A8583364](v21, -1, -1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    return 1;
  }
  return v16;
}

void *sub_1A2188D74()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *IsEmail;
  id v10;
  void *v11;

  v1 = objc_msgSend(v0, sel_lastAddressedHandleID);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_mapID_usingKey_, v1, *MEMORY[0x1E0D39C48]);

    v4 = sub_1A2199764();
    v6 = v5;

    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
LABEL_9:
      v11 = (void *)sub_1A2199758();
      swift_bridgeObjectRelease();
      IsEmail = (void *)IMStringIsEmail();

      return IsEmail;
    }
    swift_bridgeObjectRelease();
  }
  v8 = objc_msgSend(v0, sel_account);
  IsEmail = v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, sel_displayName);

    if (!v10)
      return 0;
    sub_1A2199764();

    goto LABEL_9;
  }
  return IsEmail;
}

uint64_t sub_1A2188EA8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  const char *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v17;
  id v18;

  v1 = v0;
  if (objc_msgSend(v0, sel_suppressAccountRetargetingForNamedGroupConversation))
  {
    if (qword_1EE65C2E8 != -1)
      swift_once();
    v2 = sub_1A21996F8();
    sub_1A200A4C8(v2, (uint64_t)qword_1EE65C2C8);
    v3 = v0;
    v4 = sub_1A21996E0();
    v5 = sub_1A2199890();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      v8 = v3;
      sub_1A2199968();
      *v7 = v3;

      v9 = "This was iMessage group, don't downgrade: %@";
LABEL_6:
      _os_log_impl(&dword_1A1FF4000, v4, v5, v9, v6, 0xCu);
      sub_1A1FFD920(&qword_1EE65C2C0);
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v7, -1, -1);
      MEMORY[0x1A8583364](v6, -1, -1);

      return 0;
    }
    goto LABEL_20;
  }
  v10 = objc_msgSend(v0, sel_account);
  v11 = objc_msgSend(v10, sel_service);

  sub_1A200E71C(0, (unint64_t *)&qword_1ECF120F8);
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_iMessageService);
  v13 = v12;
  if (!v11)
  {
    if (v12)
    {

      return 1;
    }
    goto LABEL_13;
  }
  if (v12)
  {
    v14 = v11;
    v15 = sub_1A219995C();

    if ((v15 & 1) == 0)
      return 1;
LABEL_13:
    if (objc_msgSend(v1, sel_isGroupChat)
      && ((sub_1A21889DC() & 1) != 0 || (sub_1A2188D74() & 1) != 0))
    {
      if (qword_1EE65C2E8 != -1)
        swift_once();
      v17 = sub_1A21996F8();
      sub_1A200A4C8(v17, (uint64_t)qword_1EE65C2C8);
      v3 = v1;
      v4 = sub_1A21996E0();
      v5 = sub_1A2199890();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v6 = 138412290;
        v18 = v3;
        sub_1A2199968();
        *v7 = v3;

        v9 = "This group contains emails, don't downgrade: %@";
        goto LABEL_6;
      }
LABEL_20:

      return 0;
    }
    return 1;
  }

  return 1;
}

void sub_1A2189230(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;

  v2 = objc_msgSend(a1, sel_ktData);
  if (v2)
  {
    v3 = v2;
    sub_1A200E71C(0, (unint64_t *)&unk_1EE65C320);
    v4 = sub_1A219974C();

    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
    sub_1A2189EA4(v4);
    swift_bridgeObjectRelease();
    v6 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setKTVerifierResultsFromIDSInfoResultsDictionary_, v6);

  }
  v7 = objc_msgSend(a1, sel_selfKTData);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
    sub_1A1FFD920(&qword_1EE65C3D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A21AF1B0;
    v11 = objc_msgSend(v8, sel_uri);
    v12 = sub_1A2199764();
    v14 = v13;

    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(inited + 40) = v14;
    *(_QWORD *)(inited + 72) = sub_1A200E71C(0, (unint64_t *)&unk_1EE65C320);
    *(_QWORD *)(inited + 48) = v8;
    v15 = v8;
    sub_1A200E884(inited);
    v16 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setKTVerifierResultsFromIDSInfoResultsDictionary_, v16);

  }
}

unint64_t sub_1A2189454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE65E8E8;
  if (!qword_1EE65E8E8)
  {
    v1 = sub_1A21995CC();
    result = MEMORY[0x1A85832D4](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE65E8E8);
  }
  return result;
}

uint64_t sub_1A218949C(char a1, uint64_t a2, uint64_t a3)
{
  if (a1 != 5)
  {
    if (!__CFADD__(a2, a3))
    {
      sub_1A21826E4();
      sub_1A21998FC();
      sub_1A2199A04();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1A2189768);
  }
  return 0;
}

ValueMetadata *type metadata accessor for SyncStoreCounts()
{
  return &type metadata for SyncStoreCounts;
}

uint64_t sub_1A2189790(char a1)
{
  return *(_QWORD *)&aCounttypwritab[8 * a1];
}

uint64_t sub_1A21897B0(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;

  v11[1] = a3;
  v6 = sub_1A1FFD920(&qword_1EE65E900);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A200A4E0(a1, a1[3]);
  sub_1A2189CBC();
  sub_1A2199BB4();
  v15 = a2;
  v14 = 0;
  sub_1A2183140();
  sub_1A2199B00();
  if (!v3)
  {
    v13 = 1;
    sub_1A2199B0C();
    v12 = 2;
    sub_1A2199B0C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A2189910()
{
  char *v0;

  return sub_1A2189790(*v0);
}

uint64_t sub_1A2189918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A21899E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A218993C()
{
  sub_1A2189CBC();
  return sub_1A2199BC0();
}

uint64_t sub_1A2189964()
{
  sub_1A2189CBC();
  return sub_1A2199BCC();
}

uint64_t sub_1A218998C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A2189B2C(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A21899B8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A21897B0(a1, *(_BYTE *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A21899D4()
{
  uint64_t v0;

  return sub_1A218949C(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A21899E0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x707954746E756F63 && a2 == 0xE900000000000065;
  if (v3 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C626174697277 && a2 == 0xE800000000000000 || (sub_1A2199B48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E657474697277 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2199B48();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2189B2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[16];

  v2 = sub_1A1FFD920(&qword_1EE65E8F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A200A4E0(a1, a1[3]);
  sub_1A2189CBC();
  sub_1A2199BA8();
  v8[14] = 0;
  sub_1A21830FC();
  sub_1A2199ADC();
  v6 = v8[15];
  v8[13] = 1;
  sub_1A2199AE8();
  v8[12] = 2;
  sub_1A2199AE8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A200A548((uint64_t)a1);
  return v6;
}

unint64_t sub_1A2189CBC()
{
  unint64_t result;

  result = qword_1EE65E8F8;
  if (!qword_1EE65E8F8)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AFB60, &type metadata for SyncStoreCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E8F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SyncStoreCounts.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2189D4C + 4 * byte_1A21AF9DD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2189D80 + 4 * byte_1A21AF9D8[v4]))();
}

uint64_t sub_1A2189D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2189D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2189D90);
  return result;
}

uint64_t sub_1A2189D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2189DA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2189DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2189DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncStoreCounts.CodingKeys()
{
  return &type metadata for SyncStoreCounts.CodingKeys;
}

unint64_t sub_1A2189DD0()
{
  unint64_t result;

  result = qword_1EE65E908;
  if (!qword_1EE65E908)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AFB38, &type metadata for SyncStoreCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E908);
  }
  return result;
}

unint64_t sub_1A2189E18()
{
  unint64_t result;

  result = qword_1EE65E910;
  if (!qword_1EE65E910)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AFAA8, &type metadata for SyncStoreCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E910);
  }
  return result;
}

unint64_t sub_1A2189E60()
{
  unint64_t result;

  result = qword_1EE65E918;
  if (!qword_1EE65E918)
  {
    result = MEMORY[0x1A85832D4](&unk_1A21AFAD0, &type metadata for SyncStoreCounts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE65E918);
  }
  return result;
}

unint64_t sub_1A2189EA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  void *v24;
  id v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A1FFD920((uint64_t *)&unk_1EE65C3B0);
    v2 = (_QWORD *)sub_1A2199A94();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v33 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v32 = (unint64_t)(63 - v3) >> 6;
  v6 = &v38;
  v7 = &v40;
  result = swift_bridgeObjectRetain();
  v34 = 0;
  v9 = (unint64_t *)&unk_1EE65C320;
  v10 = 0x1E0D34D88uLL;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v34 + 1;
  if (__OFADD__(v34, 1))
    goto LABEL_35;
  if (v19 >= v32)
    goto LABEL_32;
  v20 = *(_QWORD *)(v33 + 8 * v19);
  v21 = v34 + 1;
  if (!v20)
  {
    v21 = v34 + 2;
    if (v34 + 2 >= v32)
      goto LABEL_32;
    v20 = *(_QWORD *)(v33 + 8 * v21);
    if (!v20)
    {
      v21 = v34 + 3;
      if (v34 + 3 >= v32)
        goto LABEL_32;
      v20 = *(_QWORD *)(v33 + 8 * v21);
      if (!v20)
      {
        v21 = v34 + 4;
        if (v34 + 4 >= v32)
          goto LABEL_32;
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            v20 = *(_QWORD *)(v33 + 8 * v22);
            if (v20)
            {
              v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v32)
                break;
              v20 = *(_QWORD *)(v33 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1A217B7D4();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = v21;
  v35 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v24 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v36 = *v23;
    v37 = v23[1];
    sub_1A200E71C(0, v9);
    swift_bridgeObjectRetain();
    v25 = v24;
    swift_dynamicCast();
    sub_1A200DB00(v6, v7);
    sub_1A200DB00(v7, v41);
    sub_1A200DB00(v41, &v39);
    result = sub_1A200DB60(v36, v37);
    v26 = result;
    if ((v27 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = v10;
      v15 = v9;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v36;
      v16[1] = v37;
      v9 = v15;
      v10 = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v26);
      sub_1A200A548((uint64_t)v17);
      result = (unint64_t)sub_1A200DB00(&v39, v17);
      v5 = v35;
      if (!v35)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v28 = (uint64_t *)(v2[6] + 16 * result);
    *v28 = v36;
    v28[1] = v37;
    result = (unint64_t)sub_1A200DB00(&v39, (_OWORD *)(v2[7] + 32 * result));
    v29 = v2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_34;
    v2[2] = v31;
    v5 = v35;
    if (!v35)
      goto LABEL_11;
LABEL_10:
    v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A218A220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A1FFD920(&qword_1EE65C3C0);
    v2 = sub_1A2199A94();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1A1FFD920(&qword_1EE65C318);
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1A200DB00(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1A200DB00(v35, v36);
    sub_1A200DB00(v36, &v32);
    result = sub_1A21999BC();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1A200DB00(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1A217B7D4();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A218A5D4()
{
  uint64_t v0;

  v0 = sub_1A21996F8();
  sub_1A200A568(v0, qword_1EE65C410);
  sub_1A200A4C8(v0, (uint64_t)qword_1EE65C410);
  sub_1A21996D4();
  return sub_1A21996EC();
}

uint64_t sub_1A218A67C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  char v2;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___IMKeyTransparencyController_state);
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1 + 10);
  v2 = sub_1A218C95C();
  os_unfair_lock_unlock(v1 + 10);
  swift_release();
  swift_release_n();
  return v2 & 1;
}

uint64_t sub_1A218A718()
{
  unsigned __int8 v1;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1A218A7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___IMKeyTransparencyController_state);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 40));
  v6 = *(_QWORD *)(v5 + 24);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A200DB60(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
      v10 = v9;
    }
    else
    {
      v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 40));
  swift_release();
  return v9;
}

uint64_t sub_1A218A89C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;

  if (qword_1EE65C430 != -1)
    swift_once();
  v8 = sub_1A21996F8();
  sub_1A200A4C8(v8, (uint64_t)qword_1EE65C410);
  v9 = a2;
  swift_bridgeObjectRetain_n();
  v10 = v9;
  v11 = sub_1A21996E0();
  v12 = sub_1A2199890();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v19 = a3;
    v14 = swift_slowAlloc();
    v20 = v14;
    *(_DWORD *)v13 = 134218242;
    objc_msgSend(v10, sel_uiStatus);

    sub_1A2199968();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(v19, a4, &v20);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v11, v12, "Setting KTVerifierResult with uiStatus: %lu for handle: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    v15 = v14;
    a3 = v19;
    MEMORY[0x1A8583364](v15, -1, -1);
    MEMORY[0x1A8583364](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v16 = v10;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0x8000000000000000;
  sub_1A217E47C((uint64_t)v16, a3, a4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 8) = v20;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1A218AB20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___IMKeyTransparencyController_state);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 40));
  v6 = *(_QWORD *)(v5 + 32);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A200DB60(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
      v10 = v9;
    }
    else
    {
      v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 40));
  swift_release();
  return v9;
}

id sub_1A218ABD8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;

  v6 = sub_1A2199764();
  v8 = v7;
  v9 = a1;
  v10 = (void *)a4(v6, v8);

  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A218AC38(uint64_t a1, id a2, uint64_t a3, unint64_t a4)
{
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32[2];

  v32[1] = *MEMORY[0x1E0C80C00];
  v8 = objc_msgSend(a2, sel_ktData);
  if (v8
    && (v9 = v8, v10 = objc_msgSend(v8, sel_verifierResult), v9, v10))
  {
    objc_msgSend(v10, sel_uiStatus);

    if (qword_1EE65C430 != -1)
      swift_once();
    v11 = sub_1A21996F8();
    sub_1A200A4C8(v11, (uint64_t)qword_1EE65C410);
    swift_bridgeObjectRetain_n();
    v12 = sub_1A21996E0();
    v13 = sub_1A2199890();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v32[0] = v30;
      *(_DWORD *)v14 = 134218242;
      sub_1A2199968();
      *(_WORD *)(v14 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1A200F6C8(a3, a4, v32);
      sub_1A2199968();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A1FF4000, v12, v13, "Setting IDSIDInfoResult with uiStatus: %lu for handle: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v30, -1, -1);
      MEMORY[0x1A8583364](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1EE65C430 != -1)
      swift_once();
    v15 = sub_1A21996F8();
    sub_1A200A4C8(v15, (uint64_t)qword_1EE65C410);
    v16 = a2;
    swift_bridgeObjectRetain_n();
    v17 = v16;
    v18 = sub_1A21996E0();
    v19 = sub_1A2199890();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v32[0] = v28;
      *(_DWORD *)v20 = 136315650;
      swift_bridgeObjectRetain();
      v29 = a3;
      sub_1A200F6C8(a3, a4, v32);
      sub_1A2199968();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2112;
      v21 = objc_msgSend(v17, sel_ktData);
      sub_1A2199968();
      *v31 = v21;

      *(_WORD *)(v20 + 22) = 2112;
      v22 = objc_msgSend(v17, sel_ktData);
      if (v22
        && (v23 = v22,
            v24 = objc_msgSend(v22, sel_verifierResult),
            v23,
            v24))
      {
        sub_1A2199968();
      }
      else
      {
        sub_1A2199968();
        v24 = 0;
      }
      v31[1] = v24;

      _os_log_impl(&dword_1A1FF4000, v18, v19, "IDSIDInfoResult did not have a UIStatus for handle: %s. ktData %@ verifierResult %@", (uint8_t *)v20, 0x20u);
      sub_1A1FFD920(&qword_1EE65C2C0);
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v28, -1, -1);
      MEMORY[0x1A8583364](v20, -1, -1);

      a3 = v29;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  v25 = a2;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32[0] = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  sub_1A217E5FC((uint64_t)v25, a3, a4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 16) = v32[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A218B1D8(char *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(os_unfair_lock_s *, id, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  id v12;
  char *v13;

  v8 = sub_1A2199764();
  v10 = v9;
  v11 = *(os_unfair_lock_s **)&a1[OBJC_IVAR___IMKeyTransparencyController_state];
  v12 = a3;
  v13 = a1;
  swift_retain();
  os_unfair_lock_lock(v11 + 10);
  a5(v11 + 4, v12, v8, v10);
  os_unfair_lock_unlock(v11 + 10);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1A218B29C(uint64_t a1, unint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = v3;
  v8 = (void *)sub_1A2199758();
  v9 = objc_msgSend(v4, sel_ktVerifierResultForHandleID_, v8);

  if (v9)
  {
    v10 = objc_msgSend(v4, sel_verifier);
    sub_1A1FFD920(&qword_1EE65E940);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1A21AFBF0;
    *(_QWORD *)(v11 + 32) = v9;
    v23 = v11;
    sub_1A21997E8();
    sub_1A200E71C(0, &qword_1EE65E948);
    v12 = v9;
    v13 = (void *)sub_1A21997C4();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v10, sel_getDisplayStatusForResults_isSelfOptedIn_, v13, objc_msgSend(v4, sel_selfOptedIn));

    if (a3)
      v15 = objc_msgSend(a3, sel_isLastIncomingFinishedMessageNotiMessage) ^ 1;
    else
      v15 = 1;
    v21 = IMKeyTransparencyStatusFromKTUIStatus((uint64_t)v14, v15);

    return v21;
  }
  else
  {
    if (qword_1EE65C430 != -1)
      swift_once();
    v16 = sub_1A21996F8();
    sub_1A200A4C8(v16, (uint64_t)qword_1EE65C410);
    swift_bridgeObjectRetain_n();
    v17 = sub_1A21996E0();
    v18 = sub_1A2199890();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v23 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A200F6C8(a1, a2, &v23);
      sub_1A2199968();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A1FF4000, v17, v18, "Could not find a verifier result for handleID: %s returning pending status", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v20, -1, -1);
      MEMORY[0x1A8583364](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 2;
  }
}

void sub_1A218B5E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  void *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  int64_t v46;
  void *v47;
  uint64_t v48[4];
  __int128 v49;
  _OWORD v50[2];
  _QWORD v51[2];
  __int128 v52;

  v44 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  v40 = v5 - 1;
  v6 = 0;
  v46 = v5;
  v41 = swift_bridgeObjectRetain() + 104;
  v42 = v5 - 5;
  v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v8 = v7 | (v6 << 6);
      goto LABEL_9;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v12 >= v46)
    {
      v14 = v6;
LABEL_15:
      v4 = 0;
      memset(v50, 0, sizeof(v50));
      v6 = v14;
      v49 = 0u;
      goto LABEL_16;
    }
    v13 = *(_QWORD *)(v44 + 8 * v12);
    if (!v13)
    {
      v14 = v6 + 1;
      if ((uint64_t)(v6 + 2) >= v46)
        goto LABEL_15;
      v13 = *(_QWORD *)(v44 + 8 * (v6 + 2));
      if (v13)
      {
        v12 = v6 + 2;
      }
      else
      {
        v14 = v6 + 2;
        if ((uint64_t)(v6 + 3) >= v46)
          goto LABEL_15;
        v13 = *(_QWORD *)(v44 + 8 * (v6 + 3));
        if (v13)
        {
          v12 = v6 + 3;
        }
        else
        {
          v12 = v6 + 4;
          v14 = v6 + 3;
          if ((uint64_t)(v6 + 4) >= v46)
            goto LABEL_15;
          v13 = *(_QWORD *)(v44 + 8 * v12);
          if (!v13)
          {
            while (v42 != v6)
            {
              v13 = *(_QWORD *)(v41 + 8 * v6++);
              if (v13)
              {
                v12 = v6 + 4;
                goto LABEL_13;
              }
            }
            v14 = v40;
            goto LABEL_15;
          }
        }
      }
    }
LABEL_13:
    v4 = (v13 - 1) & v13;
    v8 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
LABEL_9:
    v9 = *(_QWORD *)(a1 + 56);
    v10 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v8);
    v11 = v10[1];
    *(_QWORD *)&v49 = *v10;
    *((_QWORD *)&v49 + 1) = v11;
    sub_1A1FFDAC4(v9 + 32 * v8, (uint64_t)v50);
    swift_bridgeObjectRetain();
LABEL_16:
    sub_1A218BD60((uint64_t)&v49, (uint64_t)v51);
    if (!v51[1])
    {
      swift_release();
      sub_1A218C5D4((uint64_t)v43);
      swift_bridgeObjectRelease();
      return;
    }
    sub_1A200DB00(&v52, &v49);
    v15 = (void *)sub_1A2199758();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v15, sel__stripFZIDPrefix);

    if (v16)
    {
      v17 = sub_1A2199764();
      v19 = v18;
      sub_1A1FFDAC4((uint64_t)&v49, (uint64_t)v48);
      sub_1A200E71C(0, (unint64_t *)&unk_1EE65C320);
      if (!swift_dynamicCast())
      {

        if (qword_1EE65C430 != -1)
          swift_once();
        v28 = sub_1A21996F8();
        sub_1A200A4C8(v28, (uint64_t)qword_1EE65C410);
        swift_bridgeObjectRetain();
        v29 = sub_1A21996E0();
        v30 = sub_1A2199890();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = swift_slowAlloc();
          v32 = swift_slowAlloc();
          v48[0] = v32;
          *(_DWORD *)v31 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v31 + 4) = sub_1A200F6C8(v17, v19, v48);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A1FF4000, v29, v30, "No IDSIDInfoResult found in IDS query results for handle: %s", (uint8_t *)v31, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A8583364](v32, -1, -1);
          MEMORY[0x1A8583364](v31, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        goto LABEL_6;
      }
      objc_msgSend(v45, sel_setIDSIDInfoResult_forHandleID_, v47, v16);
      v20 = objc_msgSend(v47, sel_ktData);
      if (!v20
        || (v21 = v20,
            v22 = objc_msgSend(v20, sel_verifierResult),
            v21,
            !v22))
      {

        if (qword_1EE65C430 != -1)
          swift_once();
        v23 = sub_1A21996F8();
        sub_1A200A4C8(v23, (uint64_t)qword_1EE65C410);
        swift_bridgeObjectRetain();
        v24 = sub_1A21996E0();
        v25 = sub_1A2199890();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = swift_slowAlloc();
          v27 = swift_slowAlloc();
          v48[0] = v27;
          *(_DWORD *)v26 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v26 + 4) = sub_1A200F6C8(v17, v19, v48);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A1FF4000, v24, v25, "No KTVerifierResult in IDS query results for handle: %s", (uint8_t *)v26, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A8583364](v27, -1, -1);
          MEMORY[0x1A8583364](v26, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        goto LABEL_6;
      }
      v33 = objc_msgSend(v45, sel_ktVerifierResultForHandleID_, v16);
      if ((objc_msgSend(v22, sel_isEqual_, v33) & 1) == 0)
      {
        v39 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v43 = sub_1A218BDA8(0, v43[2] + 1, 1, v43);
        v35 = v43[2];
        v34 = v43[3];
        v36 = v35 + 1;
        if (v35 >= v34 >> 1)
        {
          v38 = sub_1A218BDA8((_QWORD *)(v34 > 1), v35 + 1, 1, v43);
          v36 = v35 + 1;
          v43 = v38;
        }
        v43[2] = v36;
        v37 = &v43[2 * v35];
        v37[4] = v17;
        v37[5] = v19;
        objc_msgSend(v45, sel_setKTVerifierResult_forHandleID_, v22, v16);

        goto LABEL_6;
      }
      sub_1A200A548((uint64_t)&v49);

      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_6:
      sub_1A200A548((uint64_t)&v49);
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for IMKeyTransparencyController(uint64_t a1)
{
  return sub_1A200E71C(a1, &qword_1EE65E938);
}

uint64_t sub_1A218BD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A1FFD920(&qword_1EE65C300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A218BDA8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A218BEB4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A218BEB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A2199AA0();
  __break(1u);
  return result;
}

void sub_1A218BFA4(id a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  BOOL v22;
  void *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  id v40;
  void *v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  unint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51[2];

  if (qword_1EE65C430 != -1)
    goto LABEL_40;
  while (1)
  {
    v4 = sub_1A21996F8();
    sub_1A200A4C8(v4, (uint64_t)qword_1EE65C410);
    swift_bridgeObjectRetain_n();
    v5 = sub_1A21996E0();
    v6 = sub_1A2199890();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v51[0] = v8;
      *(_DWORD *)v7 = 136380675;
      swift_bridgeObjectRetain();
      sub_1A200F6C8((uint64_t)a1, a2, v51);
      sub_1A2199968();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A1FF4000, v5, v6, "Received flushed cache for KT Peer URI %{private}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A8583364](v8, -1, -1);
      MEMORY[0x1A8583364](v7, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v9 = (void *)sub_1A2199758();
    v10 = objc_msgSend(v9, sel__stripFZIDPrefix);

    if (!v10)
      break;
    v11 = sub_1A2199764();
    a2 = v12;

    sub_1A1FFD920(&qword_1EE65E758);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A21AF1B0;
    v51[0] = sub_1A2199764();
    v51[1] = v14;
    v15 = MEMORY[0x1E0DEA968];
    sub_1A21999D4();
    *(_QWORD *)(inited + 96) = v15;
    v50 = v11;
    *(_QWORD *)(inited + 72) = v11;
    *(_QWORD *)(inited + 80) = a2;
    swift_bridgeObjectRetain();
    sub_1A217BD48(inited);
    v16 = objc_msgSend((id)objc_opt_self(), sel_sharedRegistry);
    v17 = objc_msgSend(v16, sel_cachedChats);

    sub_1A200E71C(0, (unint64_t *)&unk_1EE65E950);
    v18 = sub_1A21997D0();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = (id)sub_1A2199A70();
      swift_bridgeObjectRelease();
      if (!a1)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      a1 = *(id *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!a1)
        goto LABEL_42;
    }
    v19 = 0;
    v47 = v18 & 0xC000000000000001;
    v44 = v18 & 0xFFFFFFFFFFFFFF8;
    v43 = v18 + 32;
    v45 = v18;
    v46 = a1;
    while (1)
    {
      if (v47)
      {
        v20 = (id)MEMORY[0x1A8581C78](v19, v18);
      }
      else
      {
        if (v19 >= *(_QWORD *)(v44 + 16))
          goto LABEL_39;
        v20 = *(id *)(v43 + 8 * v19);
      }
      v21 = v20;
      v22 = __OFADD__(v19, 1);
      v23 = (void *)(v19 + 1);
      if (v22)
        goto LABEL_38;
      v24 = objc_msgSend(v20, sel_participants);
      sub_1A200E71C(0, (unint64_t *)&qword_1EE65C370);
      v25 = sub_1A21997D0();

      v48 = v21;
      v49 = v23;
      if (v25 >> 62)
        break;
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v26)
        goto LABEL_18;
LABEL_9:

      swift_bridgeObjectRelease_n();
LABEL_10:
      v18 = v45;
      v19 = (unint64_t)v49;
      if (v49 == v46)
        goto LABEL_42;
    }
    swift_bridgeObjectRetain();
    v26 = sub_1A2199A70();
    if (!v26)
      goto LABEL_9;
LABEL_18:
    a1 = (id)(v25 & 0xC000000000000001);
    v27 = 4;
    while (1)
    {
      v28 = v27 - 4;
      if (!a1)
        break;
      v29 = (id)MEMORY[0x1A8581C78](v27 - 4, v25);
      v30 = v27 - 3;
      if (__OFADD__(v28, 1))
        goto LABEL_37;
LABEL_26:
      v31 = v29;
      v32 = objc_msgSend(v31, "ID");
      sub_1A2199764();

      v33 = (void *)sub_1A2199758();
      v34 = objc_msgSend(v33, sel__stripFZIDPrefix);

      if (v34)
      {
        v35 = sub_1A2199764();
        v37 = v36;
        swift_bridgeObjectRelease();

        if (v35 == v50 && v37 == a2)
        {
          swift_bridgeObjectRelease();
LABEL_34:
          swift_bridgeObjectRelease();
          v40 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
          sub_1A2199764();
          v41 = (void *)sub_1A2199758();
          swift_bridgeObjectRelease();
          a1 = v48;
          v42 = (void *)sub_1A2199740();
          objc_msgSend(v40, sel___mainThreadPostNotificationName_object_userInfo_, v41, a1, v42);

          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        v39 = sub_1A2199B48();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
          goto LABEL_34;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v27;
      if (v30 == v26)
        goto LABEL_9;
    }
    v29 = *(id *)(v25 + 8 * v27);
    v30 = v27 - 3;
    if (!__OFADD__(v28, 1))
      goto LABEL_26;
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_once();
  }
}

void sub_1A218C5D4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t inited;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;

  if (qword_1EE65C430 != -1)
    swift_once();
  v2 = sub_1A21996F8();
  sub_1A200A4C8(v2, (uint64_t)qword_1EE65C410);
  swift_bridgeObjectRetain();
  v3 = sub_1A21996E0();
  v4 = sub_1A2199890();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    v20 = *(_QWORD *)(a1 + 16);
    sub_1A2199968();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v3, v4, "Notifying clients of %ld handles with updated KT status'.", v5, 0xCu);
    MEMORY[0x1A8583364](v5, -1, -1);

    if (!*(_QWORD *)(a1 + 16))
      return;
  }
  else
  {

    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a1 + 16))
      return;
  }
  swift_bridgeObjectRetain_n();
  v6 = sub_1A21996E0();
  v7 = sub_1A2199890();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v20 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = swift_bridgeObjectRetain();
    v11 = MEMORY[0x1A8581A38](v10, MEMORY[0x1E0DEA968]);
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_1A200F6C8(v11, v13, &v20);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A1FF4000, v6, v7, "Handles with updated kt status: %s.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v9, -1, -1);
    MEMORY[0x1A8583364](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A1FFD920(&qword_1EE65C3C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A21AF1B0;
  *(_QWORD *)(inited + 32) = sub_1A2199764();
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 48) = a1;
  swift_bridgeObjectRetain();
  v16 = sub_1A217BE88(inited);
  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1A2199764();
  v18 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  sub_1A218A220(v16);
  swift_bridgeObjectRelease();
  v19 = (void *)sub_1A2199740();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel___mainThreadPostNotificationName_object_userInfo_, v18, 0, v19);

}

uint64_t sub_1A218C95C()
{
  return sub_1A218A718();
}

uint64_t _s5StateVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5StateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5StateVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

id sub_1A218CB48()
{
  char *v0;
  char *v1;
  char *v2;
  objc_super v4;
  uint64_t v5;
  unint64_t v6;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR___IMSPICollaborationMessageListener_connection] = 0;
  v5 = 0;
  v6 = 0xE000000000000000;
  v1 = v0;
  sub_1A2199A04();
  sub_1A2199788();
  sub_1A2199788();
  swift_bridgeObjectRelease();
  v2 = &v1[OBJC_IVAR___IMSPICollaborationMessageListener_listenerID];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;

  v4.receiver = v1;
  v4.super_class = (Class)IMSPICollaborationMessageListener;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1A218CC50()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  objc_msgSend(v0, sel_stopListening);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_sharedController);
  v3 = objc_msgSend(v2, sel_listener);

  objc_msgSend(v3, sel_addHandler_, v0);
  v4 = objc_msgSend(v1, sel_sharedController);
  v5 = (void *)sub_1A2199758();
  v6 = objc_msgSend(v4, sel_multiplexedConnectionWithLabel_capabilities_context_, v5, 0x80000000, 0);

  *(_QWORD *)&v0[OBJC_IVAR___IMSPICollaborationMessageListener_connection] = v6;
  return swift_unknownObjectRelease();
}

void __swiftcall IMSPICollaborationMessageListener.init()(IMSPICollaborationMessageListener *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void IMSPICollaborationMessageListener.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t type metadata accessor for IMSPICollaborationMessageListener()
{
  unint64_t result;

  result = qword_1EE65E980;
  if (!qword_1EE65E980)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE65E980);
  }
  return result;
}

uint64_t sub_1A218D06C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

id sub_1A218D090()
{
  void *v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if ((objc_msgSend(v0, sel_isGroupChat) & 1) != 0)
    return 0;
  v2 = objc_msgSend(v0, sel_participants);
  sub_1A218D2F4();
  v3 = sub_1A21997D0();

  if (v3 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1A2199A70())
  {
    v5 = 4;
    while (1)
    {
      v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A8581C78](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v1 = objc_msgSend(v6, sel_isChatBot);

      if ((v1 & 1) == 0)
      {
        ++v5;
        if (v8 != v4)
          continue;
      }
      goto LABEL_16;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
  v1 = 0;
LABEL_16:
  swift_bridgeObjectRelease_n();
  return v1;
}

unint64_t sub_1A218D2F4()
{
  unint64_t result;

  result = qword_1EE65C370;
  if (!qword_1EE65C370)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE65C370);
  }
  return result;
}

id sub_1A218D330()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  id v9;
  id v10;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_account);
  v3 = objc_msgSend(v2, sel_service);

  v4 = objc_msgSend((id)objc_opt_self(), sel_rcsService);
  v5 = v4;
  if (!v3)
  {
    if (!v4)
    {
LABEL_7:
      v9 = objc_msgSend(v1, sel_chatBot);
      if (v9)
      {
        v3 = v9;
        v8 = objc_msgSend(v9, sel_BOOLValue);
      }
      else
      {
        v10 = objc_msgSend(v1, "ID");
        if (!v10)
        {
          sub_1A2199764();
          v10 = (id)sub_1A2199758();
          swift_bridgeObjectRelease();
        }
        v8 = objc_msgSend(v10, sel___im_isChatBot);

        v3 = (id)sub_1A219980C();
        objc_msgSend(v1, sel_setChatBot_, v3);
      }
      goto LABEL_13;
    }
    v8 = 0;
    v3 = v4;
LABEL_13:

    return v8;
  }
  if (!v4)
  {
    v8 = 0;
    goto LABEL_13;
  }
  sub_1A218D4F0();
  v6 = v3;
  v7 = sub_1A219995C();

  if ((v7 & 1) != 0)
    goto LABEL_7;
  return 0;
}

unint64_t sub_1A218D4F0()
{
  unint64_t result;

  result = qword_1ECF120F8;
  if (!qword_1ECF120F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF120F8);
  }
  return result;
}

void __swiftcall IMStickerTapback.message(for:messageGUID:messagePart:messageSummaryInfo:threadIdentifier:)(IMMessage_optional *__return_ptr retstr, IMChat *a2, Swift::String messageGUID, _NSRange messagePart, Swift::OpaquePointer messageSummaryInfo, Swift::String_optional threadIdentifier)
{
  sub_1A218D978(messageGUID._countAndFlagsBits, (uint64_t)messageGUID._object, messagePart.location, messagePart.length, (uint64_t)messageSummaryInfo._rawValue, threadIdentifier.value._countAndFlagsBits, (uint64_t)threadIdentifier.value._object);
}

id sub_1A218D54C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;

  v13 = sub_1A2199764();
  v15 = v14;
  v16 = sub_1A219974C();
  if (a8)
  {
    v17 = sub_1A2199764();
    a8 = v18;
  }
  else
  {
    v17 = 0;
  }
  v19 = a3;
  v20 = a1;
  v21 = (void *)sub_1A218D978(v13, v15, a5, a6, v16, v17, a8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

id IMStickerTapback.transferExistsLocally.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  unsigned __int8 v5;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(v0, sel_transferGUID);
    if (!v3)
    {
      sub_1A2199764();
      v3 = (id)sub_1A2199758();
      swift_bridgeObjectRelease();
    }
    v4 = objc_msgSend(v2, sel_transferForGUID_, v3);

    result = 0;
    if (v4)
    {
      v5 = objc_msgSend(v4, sel_existsAtLocalPath);

      if ((v5 & 1) != 0)
        return (id)1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A218D724(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v33;
  void *v34;
  void *v35;
  id v37;

  v21 = sub_1A21995CC();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(a2, 1, v21) != 1)
  {
    v23 = (void *)sub_1A219959C();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a2, v21);
  }
  if (a5)
  {
    v34 = (void *)sub_1A21997C4();
    swift_bridgeObjectRelease();
    v24 = a9;
    if (a7)
      goto LABEL_5;
  }
  else
  {
    v34 = 0;
    v24 = a9;
    if (a7)
    {
LABEL_5:
      v33 = (void *)sub_1A2199560();

      v25 = a12;
      if (v24)
        goto LABEL_6;
      goto LABEL_11;
    }
  }
  v33 = 0;
  v25 = a12;
  if (v24)
  {
LABEL_6:
    v26 = (void *)sub_1A2199758();
    swift_bridgeObjectRelease();
    v27 = a16;
    if (v25)
      goto LABEL_7;
LABEL_12:
    v28 = 0;
    v29 = a18;
    if (v27)
      goto LABEL_8;
    goto LABEL_13;
  }
LABEL_11:
  v26 = 0;
  v27 = a16;
  if (!v25)
    goto LABEL_12;
LABEL_7:
  v28 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v29 = a18;
  if (v27)
  {
LABEL_8:
    v30 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_13:
  v30 = 0;
LABEL_14:
  if (v29)
  {
    v31 = (void *)sub_1A2199758();
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
  }
  v37 = objc_msgSend(v35, sel_initWithSender_time_text_messageSubject_fileTransferGUIDs_flags_error_guid_subject_associatedMessageGUID_associatedMessageType_associatedMessageRange_messageSummaryInfo_threadIdentifier_, a1, v23, a3, a4, v34, a6, v33, v26, a10, v28, a13, a14, a15, v30, v31);

  return v37;
}

uint64_t sub_1A218D978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t result;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD aBlock[6];

  v8 = v7;
  v54 = a7;
  v55 = a6;
  v56 = a4;
  v57 = a3;
  v11 = sub_1A1FFD920((uint64_t *)&unk_1EE65C098);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)sub_1A2199740();
  v15 = objc_msgSend(v7, sel_adjustMessageSummaryInfoForSending_, v14);

  v16 = sub_1A219974C();
  v17 = (void *)sub_1A2199740();
  aBlock[4] = sub_1A217B7E0;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A217B898;
  aBlock[3] = &unk_1E471DFF8;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(v8, sel_backwardCompatibilityStringWithMessageSummaryInfo_isAdaptiveImageGlyphProvider_, v17, v18);

  _Block_release(v18);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v52 = a2;
    v53 = a1;
    if (v19)
    {
      v21 = objc_msgSend(v19, sel___stringByStrippingControlCharacters);

      if (v21)
      {
        sub_1A2199764();

      }
    }
    v22 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v23 = (void *)sub_1A2199758();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v22, sel_initWithString_, v23);

    sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
    v25 = swift_allocObject();
    v50 = xmmword_1A21AF1B0;
    *(_OWORD *)(v25 + 16) = xmmword_1A21AF1B0;
    v26 = objc_msgSend(v8, sel_transferGUID);
    v27 = sub_1A2199764();
    v29 = v28;

    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v29;
    v30 = (void *)sub_1A21997C4();
    swift_bridgeObjectRelease();
    v51 = v24;
    v31 = objc_msgSend(v24, sel___im_attributedStringByAppendingFileTransfers_, v30);

    v32 = objc_msgSend(v31, sel___im_attributedStringByAssigningMessagePartNumbers);
    sub_1A21995C0();
    v33 = sub_1A21995CC();
    v34 = (uint64_t)v13;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v13, 0, 1, v33);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v50;
    v36 = objc_msgSend(v8, sel_transferGUID);
    v37 = sub_1A2199764();
    v39 = v38;

    *(_QWORD *)(v35 + 32) = v37;
    *(_QWORD *)(v35 + 40) = v39;
    v40 = objc_msgSend((id)objc_opt_self(), sel_stringGUID);
    if (v40)
    {
      v41 = v40;
      v42 = v16;
      v43 = sub_1A2199764();
      v45 = v44;

    }
    else
    {
      v42 = v16;
      v43 = 0;
      v45 = 0;
    }
    v46 = objc_msgSend(v8, sel_associatedMessageType);
    objc_allocWithZone((Class)IMMessage);
    v47 = v54;
    swift_bridgeObjectRetain();
    v48 = swift_bridgeObjectRetain();
    v49 = sub_1A218D724(0, v34, v32, 0, v35, 5, 0, v43, v45, 0, v53, v48, (uint64_t)v46, v57, v56, v42, v55, v47);

    return (uint64_t)v49;
  }
  return result;
}

void sub_1A218DDF4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A218DE3C()
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;

  v1 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1A2199758();
  v4 = IMCoreLocalizedString(v1, v2);

  if (v4)
  {
    v5 = sub_1A2199764();

  }
  else
  {
    if (qword_1EE65C0A8 != -1)
      swift_once();
    v6 = sub_1A21996F8();
    sub_1A200A4C8(v6, (uint64_t)qword_1EE6617D0);
    v7 = sub_1A21996E0();
    v8 = sub_1A21998A8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (_DWORD *)swift_slowAlloc();
      swift_slowAlloc();
      *v9 = 136315138;
      __asm { BR              X10 }
    }

    return 0;
  }
  return v5;
}

void sub_1A218E1AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A218E1F4()
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;

  v1 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1A2199758();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1A2199758();
  v4 = IMCoreLocalizedString(v1, v2);

  if (v4)
  {
    v5 = sub_1A2199764();

  }
  else
  {
    if (qword_1EE65C0A8 != -1)
      swift_once();
    v6 = sub_1A21996F8();
    sub_1A200A4C8(v6, (uint64_t)qword_1EE6617D0);
    v7 = sub_1A21996E0();
    v8 = sub_1A21998A8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (_DWORD *)swift_slowAlloc();
      swift_slowAlloc();
      *v9 = 136315138;
      __asm { BR              X10 }
    }

    return 0;
  }
  return v5;
}

void sub_1A218E51C(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedFeatureFlags);
  v5 = objc_msgSend(v4, sel_isMessagesIniCloudVersion2);

  if (v5)
  {
    if (a1 && (char *)objc_msgSend(a1, sel_syncJobState) - 1 <= (char *)4)
    {
      sub_1A218DDF4(0);
      v8 = 0;
    }
    else
    {
      v8 = 0;
      v6 = 0;
      v7 = 0;
    }
    v11 = 0;
    v13 = 0;
  }
  else if (a1 && (v9 = objc_msgSend(a1, sel_syncControllerSyncState), (unint64_t)v9 >= 4))
  {
    if (v9 == (id)4)
    {
      sub_1A218E1AC(1);
      v11 = v14;
      v13 = v15;
      v8 = 0;
      v6 = 0;
      v7 = 0;
    }
    else
    {
      v6 = 0;
      v7 = 0;
      v11 = 0;
      v13 = 0;
      v8 = 1;
    }
  }
  else
  {
    sub_1A218E1AC(0);
    v11 = v10;
    v13 = v12;
    v6 = 0;
    v7 = 0;
    v8 = 1;
  }
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = v5 ^ 1;
  *(_BYTE *)(a2 + 49) = v8;
  *(_QWORD *)(a2 + 56) = 0;
}

void sub_1A218E658(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A218E1AC(3);
  v3 = v2;
  v5 = v4;
  v6 = (void *)sub_1A2199758();
  v7 = (void *)sub_1A2199758();
  v8 = (void *)sub_1A2199758();
  v9 = IMCoreLocalizedString(v6, v7);

  if (v9)
  {
    v10 = sub_1A2199764();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v12;
  *(_WORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
}

void sub_1A218E754(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1A218E1AC(2);
  v5 = v4;
  v7 = v6;
  sub_1A218DDF4(a1);
  v9 = v8;
  v11 = v10;
  v12 = (void *)sub_1A2199758();
  v13 = (void *)sub_1A2199758();
  v14 = (void *)sub_1A2199758();
  v15 = IMCoreLocalizedString(v12, v13);

  if (v15)
  {
    v16 = sub_1A2199764();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v18;
  *(_WORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
}

void sub_1A218E864(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  __int128 v7;
  double v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v24[3];
  __int128 v25;
  uint64_t v26;
  char v27;
  char v28;
  double v29;

  v5 = 0;
  v6 = 0;
  v7 = 0uLL;
  v8 = 0.0;
  v9 = a1;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  switch(v9)
  {
    case 0:
      sub_1A218E51C(a2, (uint64_t)v24);
      goto LABEL_13;
    case 1:
      if ((IMDeviceIsGreenTea() & 1) != 0 || objc_msgSend((id)objc_opt_self(), sel_IMDeviceIsChinaRegion))
        v15 = 4;
      else
        v15 = 3;
      sub_1A218DDF4(v15);
      v12 = v18;
      v20 = v19;
      sub_1A218E1AC(2);
      v13 = 0;
      v5 = 0;
      v14 = 0;
      v7 = v20;
      v8 = 10.0;
      break;
    case 2:
      break;
    case 3:
      sub_1A218E658((uint64_t)v24);
      goto LABEL_13;
    case 4:
      v17 = 2;
      goto LABEL_12;
    case 5:
      v17 = 1;
LABEL_12:
      sub_1A218E754(v17, (uint64_t)v24);
LABEL_13:
      v8 = v29;
      v14 = v28;
      v5 = v27;
      v13 = v26;
      v11 = v24[1];
      v12 = v24[2];
      v7 = v25;
      v6 = v24[0];
      break;
    case 6:
      if ((IMDeviceIsGreenTea() & 1) != 0 || objc_msgSend((id)objc_opt_self(), sel_IMDeviceIsChinaRegion))
        v16 = 4;
      else
        v16 = 3;
      sub_1A218DDF4(v16);
      v12 = v21;
      v23 = v22;
      sub_1A218E1AC(2);
      v13 = 0;
      v5 = 0;
      v14 = 0;
      v7 = v23;
      break;
    default:
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      break;
  }
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 16) = v12;
  *(_OWORD *)(a3 + 24) = v7;
  *(_QWORD *)(a3 + 40) = v13;
  *(_BYTE *)(a3 + 48) = v5;
  *(_BYTE *)(a3 + 49) = v14;
  *(double *)(a3 + 56) = v8;
}

uint64_t sub_1A218EA1C(uint64_t a1)
{
  return sub_1A200F61C(a1, qword_1EE661800);
}

uint64_t sub_1A218EA40()
{
  uint64_t v0;

  v0 = sub_1A21996F8();
  sub_1A200A568(v0, qword_1ECF12648);
  sub_1A200A4C8(v0, (uint64_t)qword_1ECF12648);
  sub_1A21996D4();
  return sub_1A21996EC();
}

unint64_t sub_1A218EAB0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A1FFD920((uint64_t *)&unk_1EE65C3B0);
    v2 = (_QWORD *)sub_1A2199A94();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_1A217B7D4();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1A1FFDA88(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_1A1FFDAC4(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1A1FFDA88((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_1A200F818((uint64_t)v30, &qword_1EE65C450);
      swift_bridgeObjectRelease();
      sub_1A217B7D4();
      swift_release();
      return 0;
    }
    sub_1A1FFDAC4((uint64_t)v31 + 8, (uint64_t)v25);
    sub_1A200F818((uint64_t)v30, &qword_1EE65C450);
    sub_1A200DB00(v25, v26);
    v27 = v24;
    sub_1A200DB00(v26, v28);
    v16 = v27;
    sub_1A200DB00(v28, v29);
    sub_1A200DB00(v29, &v27);
    result = sub_1A200DB60(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      sub_1A200A548((uint64_t)v9);
      result = (unint64_t)sub_1A200DB00(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_1A200DB00(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1A218EE80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  unint64_t result;
  int64_t v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[40];
  _OWORD v32[2];
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  uint64_t v37;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A1FFD920(&qword_1EE65C458);
    v2 = (_QWORD *)sub_1A2199A94();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v28 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v27 = (unint64_t)(63 - v4) >> 6;
  v6 = (char *)v36 + 8;
  v7 = (char *)v33 + 8;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v26 = v1;
  while (1)
  {
    if (v5)
    {
      v14 = (v5 - 1) & v5;
      v15 = __clz(__rbit64(v5)) | (v9 << 6);
      v16 = v9;
    }
    else
    {
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v17 >= v27)
      {
LABEL_36:
        sub_1A217B7D4();
        return (unint64_t)v2;
      }
      v18 = *(_QWORD *)(v28 + 8 * v17);
      v16 = v9 + 1;
      if (!v18)
      {
        v16 = v9 + 2;
        if (v9 + 2 >= v27)
          goto LABEL_36;
        v18 = *(_QWORD *)(v28 + 8 * v16);
        if (!v18)
        {
          v16 = v9 + 3;
          if (v9 + 3 >= v27)
            goto LABEL_36;
          v18 = *(_QWORD *)(v28 + 8 * v16);
          if (!v18)
          {
            v16 = v9 + 4;
            if (v9 + 4 >= v27)
              goto LABEL_36;
            v18 = *(_QWORD *)(v28 + 8 * v16);
            if (!v18)
            {
              v19 = v9 + 5;
              if (v9 + 5 >= v27)
                goto LABEL_36;
              v18 = *(_QWORD *)(v28 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v16 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_41;
                  if (v16 >= v27)
                    goto LABEL_36;
                  v18 = *(_QWORD *)(v28 + 8 * v16);
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v16 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v14 = (v18 - 1) & v18;
      v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_1A1FFDA88(*(_QWORD *)(v1 + 48) + 40 * v15, (uint64_t)v35);
    sub_1A1FFDAC4(*(_QWORD *)(v1 + 56) + 32 * v15, (uint64_t)v6);
    v33[0] = v36[0];
    v33[1] = v36[1];
    v34 = v37;
    v32[0] = v35[0];
    v32[1] = v35[1];
    sub_1A1FFDA88((uint64_t)v32, (uint64_t)v31);
    if (!swift_dynamicCast())
    {
      sub_1A200F818((uint64_t)v32, &qword_1EE65C450);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_1A217B7D4();
      swift_release();
      return 0;
    }
    sub_1A1FFDAC4((uint64_t)v7, (uint64_t)v31);
    sub_1A200F818((uint64_t)v32, &qword_1EE65C450);
    sub_1A1FFD920((uint64_t *)&unk_1EE65C440);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    result = sub_1A200DB60(v29, v30);
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v10 = v7;
      v11 = v6;
      v12 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v12 = v29;
      v12[1] = v30;
      v13 = v2[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v13 + 8 * v20) = v29;
      v6 = v11;
      v7 = v10;
      v1 = v26;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v22 = (uint64_t *)(v2[6] + 16 * result);
    *v22 = v29;
    v22[1] = v30;
    *(_QWORD *)(v2[7] + 8 * result) = v29;
    v23 = v2[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_39;
    v2[2] = v25;
LABEL_8:
    v9 = v16;
    v5 = v14;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id NicknameProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id NicknameProvider.init()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  objc_class *v9;
  objc_class *ObjCClassFromMetadata;
  NSString *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  _QWORD v20[6];
  objc_super v21;

  swift_unknownObjectWeakInit();
  v1 = OBJC_IVAR___IMNicknameProvider_Impl_nicknameController;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_sharedInstance);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v4 = sub_1A21996F8();
  sub_1A200A4C8(v4, (uint64_t)qword_1ECF12648);
  v5 = sub_1A21996E0();
  v6 = sub_1A21998C0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A1FF4000, v5, v6, "Opening Daemon connection", v7, 2u);
    MEMORY[0x1A8583364](v7, -1, -1);
  }

  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedController);
  v9 = (objc_class *)type metadata accessor for NicknameProvider();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v11 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v11)
  {
    sub_1A2199764();
    v11 = (NSString *)sub_1A2199758();
    swift_bridgeObjectRelease();
  }
  v12 = objc_msgSend(v8, sel_multiplexedConnectionWithLabel_capabilities_context_, v11, 512, 0);

  *(_QWORD *)&v3[OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection] = v12;
  v21.receiver = v3;
  v21.super_class = v9;
  v13 = objc_msgSendSuper2(&v21, sel_init);
  v20[4] = sub_1A218F590;
  v20[5] = 0;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1A200EB00;
  v20[3] = &unk_1E471E020;
  v14 = _Block_copy(v20);
  v15 = v13;
  objc_msgSend((id)swift_unknownObjectRetain(), sel_connectWithCompletion_, v14);
  _Block_release(v14);
  swift_unknownObjectRelease();
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_defaultCenter);
  objc_msgSend(v17, sel_addObserver_selector_name_object_, v15, sel_nicknamesDidChangeWithNotification_, CFSTR("__kIMPendingNicknamesDidChangeNotification"), 0);

  v18 = objc_msgSend(v16, sel_defaultCenter);
  objc_msgSend(v18, sel_addObserver_selector_name_object_, v15, sel_connectionStartedWithNotification_, CFSTR("__kIMDaemonDidConnectNotification"), 0);

  return v15;
}

uint64_t type metadata accessor for NicknameProvider()
{
  return objc_opt_self();
}

void sub_1A218F590()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1ECF11FD0 != -1)
    swift_once();
  v0 = sub_1A21996F8();
  sub_1A200A4C8(v0, (uint64_t)qword_1ECF12648);
  oslog = sub_1A21996E0();
  v1 = sub_1A21998C0();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1A1FF4000, oslog, v1, "Opened Daemon connection", v2, 2u);
    MEMORY[0x1A8583364](v2, -1, -1);
  }

}

id sub_1A218F694()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController), sel_isInitialLoadComplete);
}

id sub_1A218F6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v2 = sub_1A21996F8();
  sub_1A200A4C8(v2, (uint64_t)qword_1ECF12648);
  v3 = sub_1A21996E0();
  v4 = sub_1A21998C0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A1FF4000, v3, v4, "Connection started, updating local nickname store.", v5, 2u);
    MEMORY[0x1A8583364](v5, -1, -1);
  }

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController), sel_updateLocalNicknameStore);
}

id NicknameProvider.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  objc_super v7;

  v1 = v0;
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v2 = sub_1A21996F8();
  sub_1A200A4C8(v2, (uint64_t)qword_1ECF12648);
  v3 = sub_1A21996E0();
  v4 = sub_1A21998C0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A1FF4000, v3, v4, "Closing Daemon connection", v5, 2u);
    MEMORY[0x1A8583364](v5, -1, -1);
  }

  objc_msgSend(*(id *)&v1[OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection], sel_invalidate);
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for NicknameProvider();
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1A218F9AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_1A218F9C4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;

  v1 = *(void **)(v0[17] + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v2 = MEMORY[0x1E0C809B0];
  v0[10] = MEMORY[0x1E0C809B0];
  v0[14] = nullsub_31;
  v0[15] = 0;
  v0[11] = 1107296256;
  v0[12] = sub_1A200EB00;
  v0[13] = &unk_1E471E0C0;
  v3 = _Block_copy(v0 + 10);
  objc_msgSend(v1, sel_connectWithCompletion_, v3);
  _Block_release(v3);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v4 = sub_1A21996F8();
  v0[18] = sub_1A200A4C8(v4, (uint64_t)qword_1ECF12648);
  v5 = sub_1A21996E0();
  v6 = sub_1A21998C0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A1FF4000, v5, v6, "Asked to get the nickname for the current user", v7, 2u);
    MEMORY[0x1A8583364](v7, -1, -1);
  }
  v8 = v0[17];

  v9 = *(void **)(v8 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v10 = objc_msgSend(v9, sel_personalNickname);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1A21996E0();
    v13 = sub_1A21998C0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A1FF4000, v12, v13, "Personal nickname found", v14, 2u);
      MEMORY[0x1A8583364](v14, -1, -1);
    }

    return ((uint64_t (*)(id))v0[1])(v11);
  }
  else
  {
    v0[7] = v0 + 16;
    v0[2] = v0;
    v0[3] = sub_1A218FC3C;
    v16 = swift_continuation_init();
    v0[10] = v2;
    v0[11] = 0x40000000;
    v0[12] = sub_1A218FD30;
    v0[13] = &unk_1E4724D60;
    v0[14] = v16;
    objc_msgSend(v9, sel_fetchPersonalNicknameWithCompletion_, v0 + 10);
    return swift_continuation_await();
  }
}

uint64_t sub_1A218FC3C()
{
  return swift_task_switch();
}

uint64_t sub_1A218FC88()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = sub_1A21996E0();
  v3 = sub_1A21998C0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A1FF4000, v2, v3, "Personal nickname found after fetch", v4, 2u);
    MEMORY[0x1A8583364](v4, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A218FD30(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  v4 = a2;
  sub_1A21946E4((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t sub_1A218FE94(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1A218FF0C;
  v5[17] = v4;
  return swift_task_switch();
}

uint64_t sub_1A218FF0C(void *a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc();

  ((void (**)(_QWORD, void *))v3)[2](v3, a1);
  _Block_release(v3);

  return (*(uint64_t (**)(void))(v6 + 8))();
}

id sub_1A218FF84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  void *v7;
  uint64_t inited;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  v5 = *(void **)(v2 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  aBlock[4] = nullsub_31;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A200EB00;
  aBlock[3] = &unk_1E471C988;
  v6 = _Block_copy(aBlock);
  objc_msgSend(v5, sel_connectWithCompletion_, v6);
  _Block_release(v6);
  v7 = *(void **)(v2 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A21AF1B0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1A2194174(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v9 = (void *)sub_1A2199854();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_nicknameForHandleIDs_, v9);

  return v10;
}

id sub_1A2190140(uint64_t a1)
{
  return sub_1A2190214(a1, (uint64_t)&unk_1E471C5F0, (SEL *)&selRef_nicknameForHandleIDs_);
}

id sub_1A21901A0(uint64_t a1)
{
  return sub_1A2190214(a1, (uint64_t)&unk_1E471C690, (SEL *)&selRef_currentNicknameForHandleIDs_);
}

id sub_1A2190200(uint64_t a1)
{
  return sub_1A2190214(a1, (uint64_t)&unk_1E471C780, (SEL *)&selRef_pendingNicknameForHandleIDs_);
}

id sub_1A2190214(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[6];

  v6 = *(void **)(v3 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v15[4] = nullsub_31;
  v15[5] = 0;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1A200EB00;
  v15[3] = a2;
  v7 = _Block_copy(v15);
  objc_msgSend(v6, sel_connectWithCompletion_, v7);
  _Block_release(v7);
  sub_1A2190894(a1);
  v8 = *(void **)(v3 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v9 = (void *)sub_1A2199854();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, *a3, v9);

  if (!v10)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_emailsForCNContact_, a1);
    v12 = sub_1A21997D0();

    sub_1A21940E0(v12);
    swift_bridgeObjectRelease();
    v13 = (void *)sub_1A2199854();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v8, *a3, v13);

  }
  return v10;
}

id sub_1A21903F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v7[6];

  v1 = *(void **)(v0 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v7[4] = nullsub_31;
  v7[5] = 0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1A200EB00;
  v7[3] = &unk_1E471E098;
  v2 = _Block_copy(v7);
  objc_msgSend(v1, sel_connectWithCompletion_, v2);
  _Block_release(v2);
  v3 = *(void **)(v0 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v4 = (void *)sub_1A2199758();
  v5 = objc_msgSend(v3, sel_hasObservedTransitionForHandleID_, v4);

  return v5;
}

void sub_1A21905D0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t aBlock[6];

  v4 = v3;
  v8 = *(void **)(v3 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  aBlock[4] = (uint64_t)nullsub_31;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A200EB00;
  aBlock[3] = (uint64_t)&unk_1E471C7D0;
  v9 = _Block_copy(aBlock);
  objc_msgSend(v8, sel_connectWithCompletion_, v9);
  _Block_release(v9);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v10 = sub_1A21996F8();
  sub_1A200A4C8(v10, (uint64_t)qword_1ECF12648);
  swift_bridgeObjectRetain_n();
  v11 = sub_1A21996E0();
  v12 = sub_1A21998C0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    aBlock[0] = v14;
    *(_DWORD *)v13 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(a1, a2, aBlock);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 1024;
    sub_1A2199968();
    _os_log_impl(&dword_1A1FF4000, v11, v12, "Marking handle ID %s as transitioned with auto-update: %{BOOL}d", (uint8_t *)v13, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v14, -1, -1);
    MEMORY[0x1A8583364](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v15 = *(void **)(v4 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v16 = (void *)sub_1A2199758();
  objc_msgSend(v15, sel_markTransitionAsObservedForHandleID_isAutoUpdate_, v16, a3 & 1);

}

uint64_t sub_1A2190894(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v20[6];

  v3 = *(void **)(v1 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v20[4] = nullsub_31;
  v20[5] = 0;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1A200EB00;
  v20[3] = &unk_1E4724E40;
  v4 = _Block_copy(v20);
  objc_msgSend(v3, sel_connectWithCompletion_, v4);
  _Block_release(v4);
  v5 = objc_msgSend((id)objc_opt_self(), sel_phoneNumbersForCNContact_, a1);
  v6 = sub_1A21997D0();

  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = v6 + 40;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      swift_bridgeObjectRetain();
      v10 = (void *)sub_1A2199758();
      v11 = (id)IMInternationalForPhoneNumberWithOptions();

      if (v11)
      {
        v12 = sub_1A2199764();
        v14 = v13;
        swift_bridgeObjectRelease();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1A218BDA8(0, v9[2] + 1, 1, v9);
        v16 = v9[2];
        v15 = v9[3];
        if (v16 >= v15 >> 1)
          v9 = sub_1A218BDA8((_QWORD *)(v15 > 1), v16 + 1, 1, v9);
        v9[2] = v16 + 1;
        v17 = &v9[2 * v16];
        v17[4] = v12;
        v17[5] = v14;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v18 = sub_1A21940E0((uint64_t)v9);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1A2190AA4(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  void *v33;
  _QWORD v35[6];

  v3 = *(void **)(v1 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v35[4] = nullsub_31;
  v35[5] = 0;
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 1107296256;
  v35[2] = sub_1A200EB00;
  v35[3] = &unk_1E471C7F8;
  v4 = _Block_copy(v35);
  objc_msgSend(v3, sel_connectWithCompletion_, v4);
  _Block_release(v4);
  sub_1A2190894(a1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_emailsForCNContact_, a1);
  v6 = sub_1A21997D0();

  sub_1A21940E0(v6);
  swift_bridgeObjectRelease();
  v7 = *(void **)(v1 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v8 = (void *)sub_1A2199854();
  v9 = objc_msgSend(v7, sel_pendingNicknameForHandleIDs_, v8);

  if (!v9)
  {
    v10 = (void *)sub_1A2199854();
    v9 = objc_msgSend(v7, sel_pendingNicknameForHandleIDs_, v10);

  }
  v11 = (void *)sub_1A2199854();
  v12 = objc_msgSend(v7, sel_currentNicknameForHandleIDs_, v11);

  if (!v12)
  {
    v13 = (void *)sub_1A2199854();
    v12 = objc_msgSend(v7, sel_currentNicknameForHandleIDs_, v13);

  }
  v14 = (void *)sub_1A2199854();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v7, sel_archivedNicknameForHandleIDs_, v14);

  if (v15)
  {
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_7;
  }
  else
  {
    v33 = (void *)sub_1A2199854();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v7, sel_archivedNicknameForHandleIDs_, v33);

    if (v9)
    {
LABEL_7:
      v16 = MEMORY[0x1E0DEE9E0];
      v17 = sub_1A2199764();
      v19 = v18;
      v20 = v9;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35[0] = v16;
      sub_1A217E608((uint64_t)v20, v17, v19, isUniquelyReferenced_nonNull_native);
      v22 = v35[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v12)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  v22 = MEMORY[0x1E0DEE9E0];
  if (v12)
  {
LABEL_8:
    v23 = sub_1A2199764();
    v25 = v24;
    v26 = v12;
    v27 = swift_isUniquelyReferenced_nonNull_native();
    v35[0] = v22;
    sub_1A217E608((uint64_t)v26, v23, v25, v27);
    v22 = v35[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  if (v15)
  {
    v28 = sub_1A2199764();
    v30 = v29;
    v31 = v15;
    v32 = swift_isUniquelyReferenced_nonNull_native();
    v35[0] = v22;
    sub_1A217E608((uint64_t)v31, v28, v30, v32);
    v22 = v35[0];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return v22;
}

void sub_1A2190F14(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  NSObject *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _QWORD v19[6];

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v19[4] = nullsub_31;
  v19[5] = 0;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1A200EB00;
  v19[3] = &unk_1E471C848;
  v5 = _Block_copy(v19);
  objc_msgSend(v4, sel_connectWithCompletion_, v5);
  _Block_release(v5);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v6 = sub_1A21996F8();
  sub_1A200A4C8(v6, (uint64_t)qword_1ECF12648);
  v7 = a1;
  v8 = sub_1A21996E0();
  v9 = sub_1A21998C0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v19[0] = v7;
    v12 = v7;
    sub_1A2199968();
    *v11 = v7;

    _os_log_impl(&dword_1A1FF4000, v8, v9, "Update pending nickname with contact %@", v10, 0xCu);
    sub_1A1FFD920(&qword_1EE65C2C0);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v11, -1, -1);
    MEMORY[0x1A8583364](v10, -1, -1);
  }
  else
  {

    v8 = v7;
  }

  v13 = sub_1A2190894((uint64_t)v7);
  v14 = objc_msgSend((id)objc_opt_self(), sel_emailsForCNContact_, v7);
  v15 = sub_1A21997D0();

  v16 = sub_1A21940E0(v15);
  swift_bridgeObjectRelease();
  sub_1A21911D0(v16, v13);
  v17 = *(void **)(v2 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v18 = (void *)sub_1A2199854();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_updatePendingNicknameForHandleIDs_, v18);

}

uint64_t sub_1A21911D0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A2193598(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1A21913A0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  NSObject *v12;
  id v13;
  _QWORD v14[6];

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v14[4] = nullsub_31;
  v14[5] = 0;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1A200EB00;
  v14[3] = &unk_1E471C898;
  v5 = _Block_copy(v14);
  objc_msgSend(v4, sel_connectWithCompletion_, v5);
  _Block_release(v5);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v6 = sub_1A21996F8();
  sub_1A200A4C8(v6, (uint64_t)qword_1ECF12648);
  v7 = a1;
  v8 = sub_1A21996E0();
  v9 = sub_1A21998C0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v14[0] = v7;
    v12 = v7;
    sub_1A2199968();
    *v11 = v7;

    _os_log_impl(&dword_1A1FF4000, v8, v9, "Setting personal nickname with contact %@", v10, 0xCu);
    sub_1A1FFD920(&qword_1EE65C2C0);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v11, -1, -1);
    MEMORY[0x1A8583364](v10, -1, -1);
  }
  else
  {

    v8 = v7;
  }

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D39980]), sel_initWithMeContact_, v7);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController), sel_setPersonalNickname_, v13);

}

id sub_1A2191638(void *a1)
{
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  result = objc_msgSend(a1, sel_userInfo);
  if (result)
  {
    v3 = result;
    v4 = sub_1A219974C();

    v5 = sub_1A218EE80(v4);
    result = (id)swift_bridgeObjectRelease();
    if (v5)
    {
      if (*(_QWORD *)(v5 + 16) && (v6 = MEMORY[0x1A85833E8](v1 + OBJC_IVAR___IMNicknameProvider_Impl_listener)) != 0)
      {
        v7 = (void *)v6;
        sub_1A1FFD920((uint64_t *)&unk_1EE65C440);
        v8 = (void *)sub_1A2199740();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_nicknameStoreDidChange_, v8);

        return (id)swift_unknownObjectRelease();
      }
      else
      {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1A219179C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD v4[6];

  v1 = *(void **)(v0 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  v4[4] = nullsub_31;
  v4[5] = 0;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 1107296256;
  v4[2] = sub_1A200EB00;
  v4[3] = &unk_1E471C8C0;
  v2 = _Block_copy(v4);
  objc_msgSend(v1, sel_connectWithCompletion_, v2);
  _Block_release(v2);
  return swift_unknownObjectWeakAssign();
}

void sub_1A2191914(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t aBlock[6];

  v3 = v2;
  v6 = *(void **)(v2 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  aBlock[4] = (uint64_t)nullsub_31;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A200EB00;
  aBlock[3] = (uint64_t)&unk_1E471C8E8;
  v7 = _Block_copy(aBlock);
  objc_msgSend(v6, sel_connectWithCompletion_, v7);
  _Block_release(v7);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v8 = sub_1A21996F8();
  sub_1A200A4C8(v8, (uint64_t)qword_1ECF12648);
  swift_bridgeObjectRetain_n();
  v9 = sub_1A21996E0();
  v10 = sub_1A21998C0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(a1, a2, aBlock);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v9, v10, "Sending personal nickname to handle %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v12, -1, -1);
    MEMORY[0x1A8583364](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v13 = *(void **)(v3 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v14 = (void *)sub_1A2199758();
  objc_msgSend(v13, sel_sendPersonalNicknameToHandle_, v14);

}

void sub_1A2191BB0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v5 = v4;
  v10 = *(void **)(v4 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  aBlock[4] = (uint64_t)nullsub_31;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A200EB00;
  aBlock[3] = (uint64_t)&unk_1E471C910;
  v11 = _Block_copy(aBlock);
  objc_msgSend(v10, sel_connectWithCompletion_, v11);
  _Block_release(v11);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v12 = sub_1A21996F8();
  sub_1A200A4C8(v12, (uint64_t)qword_1ECF12648);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = sub_1A21996E0();
  v14 = sub_1A21998C0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v21 = v5;
    v16 = a1;
    v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(a3, a4, aBlock);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(v16, a2, aBlock);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v13, v14, "Sending personal nickname update from handle %s to handle %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    v5 = v21;
    MEMORY[0x1A8583364](v17, -1, -1);
    MEMORY[0x1A8583364](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v18 = *(void **)(v5 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v19 = (void *)sub_1A2199758();
  v20 = (void *)sub_1A2199758();
  objc_msgSend(v18, sel_sendPersonalNicknameToHandle_fromHandle_, v19, v20);

}

void sub_1A2191F00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t aBlock[6];

  v4 = v3;
  v7 = *(void **)(v3 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  aBlock[4] = (uint64_t)nullsub_31;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A200EB00;
  aBlock[3] = (uint64_t)&unk_1E471C938;
  v8 = _Block_copy(aBlock);
  objc_msgSend(v7, sel_connectWithCompletion_, v8);
  _Block_release(v8);
  if (qword_1ECF11FD0 != -1)
    swift_once();
  v9 = sub_1A21996F8();
  sub_1A200A4C8(v9, (uint64_t)qword_1ECF12648);
  swift_bridgeObjectRetain_n();
  v10 = sub_1A21996E0();
  v11 = sub_1A21998C0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A200F6C8(a2, a3, aBlock);
    sub_1A2199968();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A1FF4000, v10, v11, "Sending name only update from handle %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A8583364](v13, -1, -1);
    MEMORY[0x1A8583364](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = *(void **)(v4 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
  v15 = (void *)sub_1A21997C4();
  v16 = (void *)sub_1A2199758();
  objc_msgSend(v14, sel_sendNameOnlyToHandleIDs_fromHandleID_, v15, v16);

}

void sub_1A21921DC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t inited;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  const char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t aBlock[7];

  v4 = v3;
  v8 = *(void **)(v3 + OBJC_IVAR___IMNicknameProvider_Impl_daemonConnection);
  aBlock[4] = (uint64_t)nullsub_31;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A200EB00;
  aBlock[3] = (uint64_t)&unk_1E471C960;
  v9 = _Block_copy(aBlock);
  objc_msgSend(v8, sel_connectWithCompletion_, v9);
  _Block_release(v9);
  v10 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v10 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    if (qword_1ECF11FD0 != -1)
      swift_once();
    v11 = sub_1A21996F8();
    sub_1A200A4C8(v11, (uint64_t)qword_1ECF12648);
    v12 = sub_1A21996E0();
    v13 = sub_1A21998C0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A1FF4000, v12, v13, "No handle is found when update banner is tapped", v14, 2u);
      MEMORY[0x1A8583364](v14, -1, -1);
    }

  }
  switch(a3)
  {
    case 1:
      if (qword_1ECF11FD0 != -1)
        swift_once();
      v15 = sub_1A21996F8();
      sub_1A200A4C8(v15, (uint64_t)qword_1ECF12648);
      swift_bridgeObjectRetain_n();
      v16 = sub_1A21996E0();
      v17 = sub_1A21998C0();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        aBlock[0] = v19;
        *(_DWORD *)v18 = 136315138;
        swift_bridgeObjectRetain();
        sub_1A200F6C8(a1, a2, aBlock);
        sub_1A2199968();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A1FF4000, v16, v17, "Accept nickname action received for handle ID: %s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A8583364](v19, -1, -1);
        MEMORY[0x1A8583364](v18, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v35 = *(void **)(v4 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
      v36 = (void *)sub_1A2199758();
      objc_msgSend(v35, sel_acceptPendingNicknameForHandleID_updateType_, v36, 12);

      sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A21AF1B0;
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = a2;
      swift_bridgeObjectRetain();
      sub_1A21940E0(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      v38 = (void *)sub_1A2199854();
      swift_bridgeObjectRelease();
      v39 = objc_msgSend(v35, sel_archivedNicknameForHandleIDs_, v38);

      if (!v39)
        goto LABEL_37;
      objc_msgSend(v35, sel_markNickname_asActive_, v39, 0);
      goto LABEL_43;
    case 2:
      if (qword_1ECF11FD0 != -1)
        swift_once();
      v20 = sub_1A21996F8();
      sub_1A200A4C8(v20, (uint64_t)qword_1ECF12648);
      swift_bridgeObjectRetain_n();
      v21 = sub_1A21996E0();
      v22 = sub_1A21998C0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        aBlock[0] = v24;
        *(_DWORD *)v23 = 136315138;
        swift_bridgeObjectRetain();
        sub_1A200F6C8(a1, a2, aBlock);
        sub_1A2199968();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A1FF4000, v21, v22, "Revert nickname action received for handle ID: %s", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A8583364](v24, -1, -1);
        MEMORY[0x1A8583364](v23, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v35 = *(void **)(v4 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
      sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
      v40 = swift_initStackObject();
      *(_OWORD *)(v40 + 16) = xmmword_1A21AF1B0;
      *(_QWORD *)(v40 + 32) = a1;
      *(_QWORD *)(v40 + 40) = a2;
      swift_bridgeObjectRetain();
      sub_1A21940E0(v40);
      swift_setDeallocating();
      swift_arrayDestroy();
      v41 = (void *)sub_1A2199854();
      swift_bridgeObjectRelease();
      v42 = objc_msgSend(v35, sel_archivedNicknameForHandleIDs_, v41);

      if (v42)
      {
        objc_msgSend(v35, sel_markNickname_asActive_, v42, 1);

      }
      else
      {
        swift_bridgeObjectRetain_n();
        v52 = sub_1A21996E0();
        v53 = sub_1A21998C0();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = (uint8_t *)swift_slowAlloc();
          v55 = swift_slowAlloc();
          aBlock[0] = v55;
          *(_DWORD *)v54 = 136315138;
          swift_bridgeObjectRetain();
          sub_1A200F6C8(a1, a2, aBlock);
          sub_1A2199968();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A1FF4000, v52, v53, "No archived nickname found for handle ID: %s", v54, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A8583364](v55, -1, -1);
          MEMORY[0x1A8583364](v54, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      v56 = swift_initStackObject();
      *(_OWORD *)(v56 + 16) = xmmword_1A21AF1B0;
      *(_QWORD *)(v56 + 32) = a1;
      *(_QWORD *)(v56 + 40) = a2;
      swift_bridgeObjectRetain();
      sub_1A21940E0(v56);
      swift_setDeallocating();
      swift_arrayDestroy();
      v57 = (void *)sub_1A2199854();
      swift_bridgeObjectRelease();
      v39 = objc_msgSend(v35, sel_pendingNicknameForHandleIDs_, v57);

      if (v39)
        goto LABEL_43;
      goto LABEL_44;
    case 3:
      if (qword_1ECF11FD0 != -1)
        swift_once();
      v25 = sub_1A21996F8();
      sub_1A200A4C8(v25, (uint64_t)qword_1ECF12648);
      swift_bridgeObjectRetain_n();
      v26 = sub_1A21996E0();
      v27 = sub_1A21998C0();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        aBlock[0] = v29;
        *(_DWORD *)v28 = 136315138;
        swift_bridgeObjectRetain();
        sub_1A200F6C8(a1, a2, aBlock);
        sub_1A2199968();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A1FF4000, v26, v27, "Ignore dismiss update received for handle ID: %s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A8583364](v29, -1, -1);
        MEMORY[0x1A8583364](v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v35 = *(void **)(v4 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
      sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
      v43 = swift_initStackObject();
      *(_OWORD *)(v43 + 16) = xmmword_1A21AF1B0;
      *(_QWORD *)(v43 + 32) = a1;
      *(_QWORD *)(v43 + 40) = a2;
      swift_bridgeObjectRetain();
      sub_1A21940E0(v43);
      swift_setDeallocating();
      swift_arrayDestroy();
      v44 = (void *)sub_1A2199854();
      swift_bridgeObjectRelease();
      v39 = objc_msgSend(v35, sel_pendingNicknameForHandleIDs_, v44);

      if (v39)
        goto LABEL_43;
LABEL_44:
      swift_bridgeObjectRetain_n();
      v47 = sub_1A21996E0();
      v48 = sub_1A21998C0();
      if (!os_log_type_enabled(v47, v48))
        goto LABEL_47;
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      aBlock[0] = v50;
      *(_DWORD *)v49 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A200F6C8(a1, a2, aBlock);
      sub_1A2199968();
      swift_bridgeObjectRelease_n();
      v51 = "No pending nickname found for handle ID: %s";
      goto LABEL_46;
    case 4:
      if (qword_1ECF11FD0 != -1)
        swift_once();
      v30 = sub_1A21996F8();
      sub_1A200A4C8(v30, (uint64_t)qword_1ECF12648);
      swift_bridgeObjectRetain_n();
      v31 = sub_1A21996E0();
      v32 = sub_1A21998C0();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        aBlock[0] = v34;
        *(_DWORD *)v33 = 136315138;
        swift_bridgeObjectRetain();
        sub_1A200F6C8(a1, a2, aBlock);
        sub_1A2199968();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A1FF4000, v31, v32, "Ignore dismiss revert received for handle ID: %s", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A8583364](v34, -1, -1);
        MEMORY[0x1A8583364](v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v35 = *(void **)(v4 + OBJC_IVAR___IMNicknameProvider_Impl_nicknameController);
      sub_1A1FFD920((uint64_t *)&unk_1ECF12010);
      v45 = swift_initStackObject();
      *(_OWORD *)(v45 + 16) = xmmword_1A21AF1B0;
      *(_QWORD *)(v45 + 32) = a1;
      *(_QWORD *)(v45 + 40) = a2;
      swift_bridgeObjectRetain();
      sub_1A21940E0(v45);
      swift_setDeallocating();
      swift_arrayDestroy();
      v46 = (void *)sub_1A2199854();
      swift_bridgeObjectRelease();
      v39 = objc_msgSend(v35, sel_archivedNicknameForHandleIDs_, v46);

      if (v39)
      {
LABEL_43:
        objc_msgSend(v35, sel_markNicknameAsIgnored_, v39);

      }
      else
      {
LABEL_37:
        swift_bridgeObjectRetain_n();
        v47 = sub_1A21996E0();
        v48 = sub_1A21998C0();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          v50 = swift_slowAlloc();
          aBlock[0] = v50;
          *(_DWORD *)v49 = 136315138;
          swift_bridgeObjectRetain();
          sub_1A200F6C8(a1, a2, aBlock);
          sub_1A2199968();
          swift_bridgeObjectRelease_n();
          v51 = "No archived nickname found for handle ID: %s";
LABEL_46:
          _os_log_impl(&dword_1A1FF4000, v47, v48, v51, v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A8583364](v50, -1, -1);
          MEMORY[0x1A8583364](v49, -1, -1);

        }
        else
        {
LABEL_47:

          swift_bridgeObjectRelease_n();
        }
      }
      return;
    default:
      return;
  }
}

id IMNickname.isEqual(to:options:)(uint64_t a1, uint64_t a2)
{
  void *v2;

  return objc_msgSend(v2, sel_isUpdateFromNickname_withOptions_, a1, a2);
}

id sub_1A2193088(void *a1)
{
  return objc_msgSend(a1, sel_isUpdateFromNickname_withOptions_);
}

id sub_1A2193094(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  v4 = objc_msgSend(v2, sel_sharedInstance);
  v5 = objc_msgSend(v3, sel_handle);
  if (!v5)
  {
    sub_1A2199764();
    v5 = (id)sub_1A2199758();
    swift_bridgeObjectRelease();
  }
  v6 = objc_msgSend(v4, sel_hasObservedTransitionForHandleID_, v5);

  return v6;
}

id IMNickname.hasObservedTransition.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v0, sel_handle);
  if (!v2)
  {
    sub_1A2199764();
    v2 = (id)sub_1A2199758();
    swift_bridgeObjectRelease();
  }
  v3 = objc_msgSend(v1, sel_hasObservedTransitionForHandleID_, v2);

  return v3;
}

id sub_1A21931EC(void *a1, uint64_t a2)
{
  return sub_1A2193210(a1, a2, (SEL *)&selRef_isActiveForNickname_);
}

id IMNickname.isActive.getter()
{
  return sub_1A2193294((SEL *)&selRef_isActiveForNickname_);
}

id sub_1A2193204(void *a1, uint64_t a2)
{
  return sub_1A2193210(a1, a2, (SEL *)&selRef_isIgnoredForNickname_);
}

id sub_1A2193210(void *a1, uint64_t a2, SEL *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  v5 = (void *)objc_opt_self();
  v6 = a1;
  v7 = objc_msgSend(v5, sel_sharedInstance);
  v8 = objc_msgSend(v7, *a3, v6);

  return v8;
}

id IMNickname.isIgnored.getter()
{
  return sub_1A2193294((SEL *)&selRef_isIgnoredForNickname_);
}

id sub_1A2193294(SEL *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v4 = objc_msgSend(v3, *a1, v1);

  return v4;
}

uint64_t sub_1A21932F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1A2173EFC;
  return v6();
}

uint64_t sub_1A2193348(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1A2173EFC;
  return v7();
}

uint64_t sub_1A219339C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A219983C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A2199830();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A200F818(a1, (uint64_t *)&unk_1ECF12130);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A2199818();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A21934E8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A219354C;
  return v6(a1);
}

uint64_t sub_1A219354C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A2193598(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1A2199B84();
  swift_bridgeObjectRetain();
  sub_1A219977C();
  v8 = sub_1A2199B9C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A2199B48() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A2199B48() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A2193A20(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1A2193744()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1A1FFD920(&qword_1EE65EA10);
  v3 = sub_1A21999EC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A2199B84();
      sub_1A219977C();
      result = sub_1A2199B9C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A2193A20(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A2193744();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A2193BB8();
      goto LABEL_22;
    }
    sub_1A2193D68();
  }
  v11 = *v4;
  sub_1A2199B84();
  sub_1A219977C();
  result = sub_1A2199B9C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1A2199B48(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1A2199B60();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1A2199B48();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_1A2193BB8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1A1FFD920(&qword_1EE65EA10);
  v2 = *v0;
  v3 = sub_1A21999E0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A2193D68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1A1FFD920(&qword_1EE65EA10);
  v3 = sub_1A21999EC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1A2199B84();
    swift_bridgeObjectRetain();
    sub_1A219977C();
    result = sub_1A2199B9C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A2194014(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A200DB60(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A217E110();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1A217DD64(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A21940E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1A219986C();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A2193598(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A2194174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1A1FFD920(&qword_1EE65EA10);
    v3 = sub_1A21999F8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1A2199B84();
      swift_bridgeObjectRetain();
      sub_1A219977C();
      result = sub_1A2199B9C();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1A2199B48(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1A2199B48();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t method lookup function for NicknameProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NicknameProvider.haveNicknamesLoaded.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NicknameProvider.nicknameForCurrentUser()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A21943A4;
  return v5();
}

uint64_t sub_1A21943A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of NicknameProvider.nickname(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of NicknameProvider.currentNickname(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of NicknameProvider.pendingNickname(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of NicknameProvider.hasObservedTransition(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of NicknameProvider.markTransitionAsObserved(for:isAutoUpdate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of NicknameProvider.allNicknames(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of NicknameProvider.updatePendingNickname(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of NicknameProvider.setPersonalNickname(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of NicknameProvider.setNicknameListener(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of NicknameProvider.sendPersonalNickname(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of NicknameProvider.sendPersonalNickname(to:from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of NicknameProvider.sendNameOnly(to:from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of NicknameProvider.bannerActionTapped(from:on:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

unint64_t sub_1A219457C()
{
  unint64_t result;

  result = qword_1ECF12008;
  if (!qword_1ECF12008)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF12008);
  }
  return result;
}

uint64_t sub_1A21945B8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A21945E4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A2173744;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EE65E9C8 + dword_1EE65E9C8))(v2, v3);
}

uint64_t sub_1A2194650()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2194674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A2173744;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE65E9F8 + dword_1EE65E9F8))(a1, v4);
}

uint64_t sub_1A21946E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A1FFD920(&qword_1EE65C088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void __swiftcall IMEmojiTapback.message(for:messageGUID:messagePart:messageSummaryInfo:threadIdentifier:)(IMMessage_optional *__return_ptr retstr, IMChat *a2, Swift::String messageGUID, _NSRange messagePart, Swift::OpaquePointer messageSummaryInfo, Swift::String_optional threadIdentifier)
{
  sub_1A21948D4(messageGUID._countAndFlagsBits, (uint64_t)messageGUID._object, messagePart.location, messagePart.length, (uint64_t)messageSummaryInfo._rawValue, threadIdentifier.value._countAndFlagsBits, threadIdentifier.value._object);
}

id sub_1A21947D4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;

  v13 = sub_1A2199764();
  v15 = v14;
  v16 = sub_1A219974C();
  if (a8)
  {
    v17 = sub_1A2199764();
    a8 = v18;
  }
  else
  {
    v17 = 0;
  }
  v19 = a3;
  v20 = a1;
  v21 = (void *)sub_1A21948D4(v13, v15, a5, a6, v16, v17, a8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1A21948D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v7;
  void *v8;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t result;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  _QWORD aBlock[6];

  v8 = v7;
  v11 = (void *)sub_1A2199740();
  v12 = objc_msgSend(v8, sel_adjustMessageSummaryInfoForSending_, v11);

  sub_1A219974C();
  v13 = (void *)sub_1A2199740();
  aBlock[4] = sub_1A217B7E0;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A217B898;
  aBlock[3] = &unk_1E471E048;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = objc_msgSend(v8, sel_backwardCompatibilityStringWithMessageSummaryInfo_isAdaptiveImageGlyphProvider_, v13, v14);

  _Block_release(v14);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v17 = (void *)IMCreateSuperFormatStringFromPlainTextString();

    v18 = (void *)sub_1A2199758();
    v19 = objc_msgSend(v8, sel_associatedMessageType);
    v20 = objc_msgSend(v8, sel_associatedMessageEmoji);
    if (!v20)
    {
      sub_1A2199764();
      v20 = (id)sub_1A2199758();
      swift_bridgeObjectRelease();
    }
    v21 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    if (a7)
      a7 = (void *)sub_1A2199758();
    v22 = objc_msgSend((id)objc_opt_self(), sel_instantMessageWithAssociatedMessageContent_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_, v17, v18, v19, a3, a4, v20, v21, a7);

    return (uint64_t)v22;
  }
  return result;
}

id IMCoreHelloWorldClass.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IMCoreHelloWorldClass.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  objc_super v6;

  v1 = OBJC_IVAR___IMCoreHelloWorldClass_Impl_sharedUtilitiesHelloWorld;
  v2 = objc_allocWithZone((Class)sub_1A2199668());
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  v4 = OBJC_IVAR___IMCoreHelloWorldClass_Impl_persistenceHelloWorld;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)sub_1A219962C()), sel_init);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for IMCoreHelloWorldClass();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for IMCoreHelloWorldClass()
{
  return objc_opt_self();
}

uint64_t sub_1A2194CE0()
{
  sub_1A219965C();
  return sub_1A2199620();
}

id IMCoreHelloWorldClass.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMCoreHelloWorldClass();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t IMCoreHelloWorld.init()()
{
  sub_1A2199608();
  type metadata accessor for IMCoreHelloWorld();
  return sub_1A2199608();
}

uint64_t type metadata accessor for IMCoreHelloWorld()
{
  uint64_t result;

  result = qword_1EE65EA28;
  if (!qword_1EE65EA28)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall IMCoreHelloWorld.printGreeting()()
{
  sub_1A21995FC();
  type metadata accessor for IMCoreHelloWorld();
  sub_1A21995FC();
}

uint64_t method lookup function for IMCoreHelloWorldClass()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IMCoreHelloWorldClass.printGreeting()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t *initializeBufferWithCopyOfBuffer for IMCoreHelloWorld(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A2199650();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A2199614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for IMCoreHelloWorld(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A2199650();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1A2199614();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for IMCoreHelloWorld(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A2199650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2199614();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for IMCoreHelloWorld(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A2199650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2199614();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for IMCoreHelloWorld(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A2199650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2199614();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for IMCoreHelloWorld(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A2199650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2199614();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for IMCoreHelloWorld()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A219519C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1A2199650();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1A2199614();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IMCoreHelloWorld()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A219521C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1A2199650();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1A2199614();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1A2195298()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A2199650();
  if (v1 <= 0x3F)
  {
    result = sub_1A2199614();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_1A2195474()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v13;
  id v14;
  void *ObjCClassFromMetadata;

  swift_getObjectType();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v14 = objc_msgSend(v0, sel_totalMessageCount);
  v13 = objc_msgSend(v0, sel_syncedMessageCount);
  v1 = objc_msgSend(v0, sel_unresolvedMessageCount);
  v2 = objc_msgSend(v0, sel_totalChatCount);
  v3 = objc_msgSend(v0, sel_syncedChatCount);
  v4 = objc_msgSend(v0, sel_unresolvedChatCount);
  v5 = objc_msgSend(v0, sel_totalAttachmentCount);
  v6 = objc_msgSend(v0, sel_syncedAttachmentCount);
  v7 = objc_msgSend(v0, sel_unresolvedAttachmentCount);
  v8 = MEMORY[0x1E0DEE9D8];
  sub_1A217BD48(MEMORY[0x1E0DEE9D8]);
  v9 = (void *)sub_1A2199740();
  swift_bridgeObjectRelease();
  sub_1A217BFA0(v8);
  sub_1A200E71C(0, &qword_1EE65EA38);
  v10 = (void *)sub_1A2199740();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(ObjCClassFromMetadata, sel__createSyncStatisticsDictionary_messageSyncCount_messageUnresolvedCount_chatCount_chatSyncCount_chatUnresolvedCount_attachmentCount_attachmentSyncCount_attachmentUnresolvedCount_serverRecordCounts_syncStoreCounts_, v14, v13, v1, v2, v3, v4, v5, v6, v7, v9, v10);

  return v11;
}

uint64_t sub_1A219567C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1A1FFD920(&qword_1EE65EA40);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A21AFCD0;
  v19 = sub_1A2199764();
  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v21;
  v22 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v18 + 88) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v18 + 56) = v20;
  *(_QWORD *)(v18 + 64) = a1;
  *(_QWORD *)(v18 + 96) = sub_1A2199764();
  *(_QWORD *)(v18 + 104) = v23;
  *(_QWORD *)(v18 + 152) = v22;
  *(_QWORD *)(v18 + 120) = v20;
  *(_QWORD *)(v18 + 128) = a2;
  *(_QWORD *)(v18 + 160) = sub_1A2199764();
  *(_QWORD *)(v18 + 168) = v24;
  *(_QWORD *)(v18 + 216) = v22;
  *(_QWORD *)(v18 + 184) = v20;
  *(_QWORD *)(v18 + 192) = a3;
  *(_QWORD *)(v18 + 224) = sub_1A2199764();
  *(_QWORD *)(v18 + 232) = v25;
  *(_QWORD *)(v18 + 280) = v22;
  *(_QWORD *)(v18 + 248) = v20;
  *(_QWORD *)(v18 + 256) = a4;
  *(_QWORD *)(v18 + 288) = sub_1A2199764();
  *(_QWORD *)(v18 + 296) = v26;
  *(_QWORD *)(v18 + 344) = v22;
  *(_QWORD *)(v18 + 312) = v20;
  *(_QWORD *)(v18 + 320) = a5;
  *(_QWORD *)(v18 + 352) = sub_1A2199764();
  *(_QWORD *)(v18 + 360) = v27;
  *(_QWORD *)(v18 + 408) = v22;
  *(_QWORD *)(v18 + 376) = v20;
  *(_QWORD *)(v18 + 384) = a6;
  *(_QWORD *)(v18 + 416) = sub_1A2199764();
  *(_QWORD *)(v18 + 424) = v28;
  *(_QWORD *)(v18 + 472) = v22;
  *(_QWORD *)(v18 + 440) = v20;
  *(_QWORD *)(v18 + 448) = a7;
  *(_QWORD *)(v18 + 480) = sub_1A2199764();
  *(_QWORD *)(v18 + 488) = v29;
  *(_QWORD *)(v18 + 536) = v22;
  *(_QWORD *)(v18 + 504) = v20;
  *(_QWORD *)(v18 + 512) = a8;
  v30 = sub_1A2199764();
  *(_QWORD *)(v18 + 568) = v20;
  *(_QWORD *)(v18 + 544) = v30;
  *(_QWORD *)(v18 + 552) = v31;
  *(_QWORD *)(v18 + 600) = v22;
  *(_QWORD *)(v18 + 576) = a9;
  result = sub_1A2199764();
  *(_QWORD *)(v18 + 632) = v20;
  *(_QWORD *)(v18 + 608) = result;
  *(_QWORD *)(v18 + 616) = v33;
  v34 = a5 + a2;
  if (__OFADD__(a5, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  v35 = __OFADD__(v34, a8);
  v36 = v34 + a8;
  if (v35)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(_QWORD *)(v18 + 664) = v22;
  *(_QWORD *)(v18 + 640) = v36;
  result = sub_1A2199764();
  *(_QWORD *)(v18 + 696) = v20;
  *(_QWORD *)(v18 + 672) = result;
  *(_QWORD *)(v18 + 680) = v37;
  v38 = a4 + a1;
  if (__OFADD__(a4, a1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v35 = __OFADD__(v38, a7);
  v39 = v38 + a7;
  if (!v35)
  {
    *(_QWORD *)(v18 + 728) = v22;
    *(_QWORD *)(v18 + 704) = v39;
    *(_QWORD *)(v18 + 760) = v20;
    strcpy((char *)(v18 + 736), "serverCounts");
    *(_BYTE *)(v18 + 749) = 0;
    *(_WORD *)(v18 + 750) = -5120;
    *(_QWORD *)(v18 + 792) = sub_1A1FFD920((uint64_t *)&unk_1EE65C2F0);
    *(_QWORD *)(v18 + 768) = a10;
    *(_QWORD *)(v18 + 824) = v20;
    *(_QWORD *)(v18 + 800) = 0x726F7453636E7973;
    *(_QWORD *)(v18 + 808) = 0xEF73746E756F4365;
    *(_QWORD *)(v18 + 856) = sub_1A1FFD920(&qword_1EE65EA48);
    *(_QWORD *)(v18 + 832) = a11;
    sub_1A200E71C(0, (unint64_t *)&unk_1EE65EA50);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1A2199884();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1A2195960(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t result;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;

  if (a1 == 2)
  {
    result = swift_getObjCClassFromMetadata();
    if (a3 > -9.22337204e18)
    {
      if (a3 < 9.22337204e18)
      {
        if (a2 > -9.22337204e18)
        {
          if (a2 < 9.22337204e18)
          {
            if ((*(_QWORD *)&a2 & 0x7FF0000000000000) != 0x7FF0000000000000
              && (*(_QWORD *)&a3 & 0x7FF0000000000000) != 0x7FF0000000000000
              && (*(_QWORD *)&a4 & 0x7FF0000000000000) != 0x7FF0000000000000)
            {
              if (a4 > -9.22337204e18)
              {
                if (a4 < 9.22337204e18)
                {
                  v16 = (void *)result;
                  v17 = MEMORY[0x1E0DEE9D8];
                  sub_1A217BD48(MEMORY[0x1E0DEE9D8]);
                  v10 = (void *)sub_1A2199740();
                  swift_bridgeObjectRelease();
                  sub_1A217BFA0(v17);
                  sub_1A200E71C(0, &qword_1EE65EA38);
                  v11 = (void *)sub_1A2199740();
                  swift_bridgeObjectRelease();
                  v18 = objc_msgSend(v16, sel__createSyncStatisticsDictionary_messageSyncCount_messageUnresolvedCount_chatCount_chatSyncCount_chatUnresolvedCount_attachmentCount_attachmentSyncCount_attachmentUnresolvedCount_serverRecordCounts_syncStoreCounts_, 0, 0, 0, (uint64_t)a3, (uint64_t)a2, (uint64_t)a4, 0, 0, 0, v10, v11);
LABEL_34:
                  v21 = v18;

                  return (uint64_t)v21;
                }
                goto LABEL_48;
              }
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
              goto LABEL_49;
            }
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (a1 == 3)
  {
    result = swift_getObjCClassFromMetadata();
    if (a3 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (a3 < 9.22337204e18)
    {
      if (a2 > -9.22337204e18)
      {
        if (a2 < 9.22337204e18)
        {
          if ((*(_QWORD *)&a2 & 0x7FF0000000000000) != 0x7FF0000000000000
            && (*(_QWORD *)&a3 & 0x7FF0000000000000) != 0x7FF0000000000000
            && (*(_QWORD *)&a4 & 0x7FF0000000000000) != 0x7FF0000000000000)
          {
            if (a4 > -9.22337204e18)
            {
              if (a4 < 9.22337204e18)
              {
                v8 = (void *)result;
                v9 = MEMORY[0x1E0DEE9D8];
                sub_1A217BD48(MEMORY[0x1E0DEE9D8]);
                v10 = (void *)sub_1A2199740();
                swift_bridgeObjectRelease();
                sub_1A217BFA0(v9);
                sub_1A200E71C(0, &qword_1EE65EA38);
                v11 = (void *)sub_1A2199740();
                swift_bridgeObjectRelease();
                v25 = v10;
                v26 = v11;
                v23 = (uint64_t)a2;
                v24 = (uint64_t)a4;
                v22 = (uint64_t)a3;
                v12 = v8;
                v13 = 0;
                v14 = 0;
                v15 = 0;
LABEL_33:
                v18 = objc_msgSend(v12, sel__createSyncStatisticsDictionary_messageSyncCount_messageUnresolvedCount_chatCount_chatSyncCount_chatUnresolvedCount_attachmentCount_attachmentSyncCount_attachmentUnresolvedCount_serverRecordCounts_syncStoreCounts_, v13, v14, v15, 0, 0, 0, v22, v23, v24, v25, v26);
                goto LABEL_34;
              }
              goto LABEL_41;
            }
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    __break(1u);
    goto LABEL_37;
  }
  result = swift_getObjCClassFromMetadata();
  if (a3 <= -9.22337204e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (a3 >= 9.22337204e18)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if ((*(_QWORD *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&a3 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&a4 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_53;
  }
  if (a4 <= -9.22337204e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (a4 < 9.22337204e18)
  {
    v19 = (void *)result;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1A217BD48(MEMORY[0x1E0DEE9D8]);
    v10 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    sub_1A217BFA0(v20);
    sub_1A200E71C(0, &qword_1EE65EA38);
    v11 = (void *)sub_1A2199740();
    swift_bridgeObjectRelease();
    v22 = 0;
    v23 = 0;
    v25 = v10;
    v26 = v11;
    v24 = 0;
    v12 = v19;
    v13 = (uint64_t)a3;
    v14 = (uint64_t)a2;
    v15 = (uint64_t)a4;
    goto LABEL_33;
  }
LABEL_55:
  __break(1u);
  return result;
}

void sub_1A2195E94(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Process that does not support pinning attempted to initialize IMPinnedConversationController", a5, a6, a7, a8, 0);
}

void sub_1A2195EC8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "migratedPinConfig is nil, but localPinConfig was not. localPinConfig: %@", (uint8_t *)&v2, 0xCu);
  sub_1A20335EC();
}

void sub_1A2195F38()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A20335C4();
  sub_1A20335B0(&dword_1A1FF4000, v0, v1, "Pin config migration failed. We migrated the given pin config, but the migrated pin config had a different version. given config: %@, migrated config: %@");
  sub_1A20335EC();
}

void sub_1A2195F98()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A20335C4();
  sub_1A20335B0(&dword_1A1FF4000, v0, v1, "Pin config migration failed. We migrated the given pin config, but the migrated pin config was not valid. given config: %@, migrated config: %@");
  sub_1A20335EC();
}

void sub_1A2195FF8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Pin config migration from version 1 to higher versions is not supported. If some of the chats in the pin config were group SMS chats, they may not pin properly. Please update all of your devices to the latest build and re-pin the offending group SMS chats.", a5, a6, a7, a8, 0);
}

void sub_1A219602C(uint64_t a1, NSObject *a2)
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "account");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "service");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "internalName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412290;
  v7 = v5;
  _os_log_fault_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_FAULT, "Assuming hybrid groups are eligible for unexpected service %@", (uint8_t *)&v6, 0xCu);

}

void sub_1A21960EC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "IMService ******* This is unexpected. atSign > [email length]. Email %@ doman %@", (uint8_t *)&v3, 0x16u);
}

void sub_1A2196170(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "Failed to find conversation with requested UUID %@", (uint8_t *)&v2, 0xCu);
}

void sub_1A21961E4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "tapback descriptor is nil", v1, 2u);
}

void sub_1A2196224(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *WebPrivacyLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMWebPrivacyUtilities.m"), 32, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1A21962A0(uint64_t a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "unrecognized KT status received: %@", (uint8_t *)&v4, 0xCu);

}

void sub_1A2196340(uint64_t a1, void *a2, NSObject *a3)
{
  void *v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "vettedAliases");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412546;
  v7 = a1;
  v8 = 2112;
  v9 = v5;
  _os_log_error_impl(&dword_1A1FF4000, a3, OS_LOG_TYPE_ERROR, " Attempted to change display name to %@, but it wasn't in vetted set (%@)", (uint8_t *)&v6, 0x16u);

}

void sub_1A21963F4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A205D6E4(&dword_1A1FF4000, a1, a3, "Fetching sync statistics", a5, a6, a7, a8, 0);
  sub_1A205D70C();
}

void sub_1A2196424(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "statistics dictionary is unexpectedly nil", v1, 2u);
  sub_1A205D70C();
}

void sub_1A2196460(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "description");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = 138412290;
  v6 = v3;
  sub_1A205D700(&dword_1A1FF4000, a2, v4, "fetched sync state statistics: %@", (uint8_t *)&v5);

  sub_1A205D6F4();
}

void sub_1A21964E4(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "error");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "Got error fetching sync statistics: %@", (uint8_t *)&v4, 0xCu);

  sub_1A205D6F4();
}

void sub_1A2196570(NSObject *a1, double a2, uint64_t a3, uint64_t a4)
{
  int v4;
  double v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v4 = 134217984;
  v5 = a2;
  sub_1A205D700(&dword_1A1FF4000, a1, a4, "Deferring send progress to event listeners for %f sec", (uint8_t *)&v4);
}

void sub_1A21965E0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A205D6E4(&dword_1A1FF4000, a1, a3, "We have progress listeners, attempting to send progress...", a5, a6, a7, a8, 0);
  sub_1A205D70C();
}

void sub_1A2196610(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "No handle ID provided", a5, a6, a7, a8, 0);
}

void sub_1A2196644(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Nickname feature is not enabled", a5, a6, a7, a8, 0);
}

void sub_1A2196678(os_log_t log)
{
  int v1;
  const char *v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = 136315138;
  v2 = "-[IMNicknameController createSharedProfileStateOracleForHandles:]";
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "No recipients provided for %s", (uint8_t *)&v1, 0xCu);
}

void sub_1A21966F8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "Cache miss lookup failed with error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1A219676C()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPXPhotoKitMomentShareStatusClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMMomentSharePresentationCache.m"), 26, CFSTR("Unable to find class %s"), "PXPhotoKitMomentShareStatus");

  __break(1u);
}

void sub_1A21967E4(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PhotosUICoreLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMMomentSharePresentationCache.m"), 25, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1A2196860()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPXMomentShareStatusPresentationClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMMomentSharePresentationCache.m"), 27, CFSTR("Unable to find class %s"), "PXMomentShareStatusPresentation");

  __break(1u);
}

void sub_1A21968D8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Failed to create SyndicationAction", a5, a6, a7, a8, 0);
}

void sub_1A219690C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "CMM state was zero in the client!", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2196938(void *a1)
{

  objc_end_catch();
}

void sub_1A2196954()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Message text contains a part index that has been retracted, ignoring it.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2196980()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "File transfer missing for multi-character message with a first character transfer, assuming that character is a genmoji.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21969AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Message part references a non-genmoji file transfer at the first character, followed by other text content. The text content will not be displayed.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21969D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "File transfer missing for message with a first character transfer, assuming that character is a genmoji.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2196A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1A2094848();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
}

void sub_1A2196A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1A2094848();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
}

void sub_1A2196B0C(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = 138412290;
  v5 = v3;
  _os_log_fault_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_FAULT, "transferGUID is nil. ChatItem's GUID is %@", (uint8_t *)&v4, 0xCu);

}

void sub_1A2196BA0(void *a1, NSObject *a2)
{
  void *v4;
  id v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v4 = (void *)objc_opt_class();
  v5 = v4;
  objc_msgSend(a1, "guid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412546;
  v8 = v4;
  v9 = 2112;
  v10 = v6;
  _os_log_fault_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_FAULT, "%@ transferGUIDs is nil. ChatItem's GUID is %@", (uint8_t *)&v7, 0x16u);

}

void sub_1A2196C64(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20A2E48(&dword_1A1FF4000, a2, a3, "Error sharing off grid mode with handle: %@", a5, a6, a7, a8, 2u);
}

void sub_1A2196CCC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20A2E48(&dword_1A1FF4000, a2, a3, "Error sharing availbaility with handle: %@", a5, a6, a7, a8, 2u);
}

void sub_1A2196D34(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "BrandURI cannot be nil", v1, 2u);
}

void sub_1A2196D74(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Attempted to register a nil listener", a5, a6, a7, a8, 0);
}

void sub_1A2196DA8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Attempted to unregister a nil listener", a5, a6, a7, a8, 0);
}

void sub_1A2196DDC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "Error prewarming the opening of sharedPhotoLibrary: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1A2196E50()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPHAssetClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMPhotoLibraryPersistenceManager.m"), 21, CFSTR("Unable to find class %s"), "PHAsset");

  __break(1u);
}

void sub_1A2196EC8(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PhotosLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMPhotoLibraryPersistenceManager.m"), 20, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1A2196F44()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPHPhotoLibraryClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMPhotoLibraryPersistenceManager.m"), 22, CFSTR("Unable to find class %s"), "PHPhotoLibrary");

  __break(1u);
}

void sub_1A2196FBC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AC318();
  sub_1A2094838(&dword_1A1FF4000, v0, v1, "Failed to find a sending handle. Dropping notice %@ to %@", v2, v3, v4, v5, v6);
}

void sub_1A2197024()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AC318();
  sub_1A2094838(&dword_1A1FF4000, v0, v1, "Failed to find a sending handle. Dropping clear notice %@ to %@", v2, v3, v4, v5, v6);
}

void sub_1A219708C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "Invalid chat identifier: %@, can't open application", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A21970EC(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "localizedDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A20AD854();
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "Request Stewie error: %@", v4, 0xCu);

}

void sub_1A2197180()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "DialRequest isn't valid %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A21971E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "Requesting to place emergency call: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A2197240()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "Failed to trigger dialRequest: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A21972A0(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "No providers are available right now", v1, 2u);
}

void sub_1A21972E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "fetchRoadsideProvidersWithContext failed with error: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A2197340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A20B1BEC();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1A20335EC();
}

void sub_1A21973C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A20B1BEC();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1A20335EC();
}

void sub_1A2197440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A20B1BEC();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, 2u);
  sub_1A20335EC();
}

void sub_1A21974C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "tapback descriptor cannot be nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21974EC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "chat cannot be nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2197518()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "messageGUID cannot be nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2197544()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "message summary info cannot be nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2197570()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "message content type must be set on message summary info", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A219759C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Backward compatibility string cannot be nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21975C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Attributed content string cannot be nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21975F4()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_1A209482C();
  _os_log_fault_impl(&dword_1A1FF4000, v0, OS_LOG_TYPE_FAULT, "chatItemRules are nil", v1, 2u);
  sub_1A205D70C();
}

void sub_1A219762C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Stewie chat has no participants", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2197658()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1A20AD854();
  sub_1A20DC670(&dword_1A1FF4000, v0, v1, "Failed to decode summary from chat properties %@", v2);
  sub_1A20335EC();
}

void sub_1A21976BC()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1A20AD854();
  sub_1A20DC670(&dword_1A1FF4000, v0, v1, "Invalid businessID: %@", v2);
  sub_1A20335EC();
}

void sub_1A2197720()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Setting associated bizID is not supported", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A219774C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Not updating sortID of edited message item, the previous message had a sortID of 0", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2197778()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  sub_1A20AD854();
  sub_1A20DC670(&dword_1A1FF4000, v0, v1, "Did not find a valid date to send the message. Date: %@", v2);
  sub_1A20335EC();
}

void sub_1A21977DC(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A20AD854();
  sub_1A20DC670(&dword_1A1FF4000, a2, v4, "**Bailing**, Tried to Edit the schedule time of a non-scheduled message with guid %@ ", v5);

  sub_1A20DC690();
}

void sub_1A2197860()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Not resending group photo for chat that did not have a group photo", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A219788C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "No chat property specified, aborting.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21978B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Not able share focus status in non 1-1 chat, this method should not have been called", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21978E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Focus Status authorization status is restricted. Treating as not authorized.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2197910()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  os_log_t v3;
  uint8_t v4[14];
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  sub_1A20DC67C();
  v5 = v0;
  v6 = v1;
  v7 = v2;
  _os_log_error_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_ERROR, "Query failed for fetchMessageHistoryForDateInterval: %@ chatGUIDs: %@, error: %@", v4, 0x20u);
  sub_1A20DC690();
}

void sub_1A2197990()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[14];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  sub_1A20DC67C();
  v3 = v0;
  _os_log_error_impl(&dword_1A1FF4000, v1, OS_LOG_TYPE_ERROR, "Query failed for fetchOldestMessageDate chatGUID: %@, error: %@", v2, 0x16u);
  sub_1A20335EC();
}

void sub_1A2197A08(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A20AD854();
  sub_1A20DC670(&dword_1A1FF4000, a2, v4, "Chat %@ is ending holds on updates for all keys", v5);

  sub_1A20DC690();
}

void sub_1A2197A8C(void *a1)
{

  objc_end_catch();
}

void sub_1A2197AAC(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "chatItemAssociatedWithMessageGUID included exactly 1 IMAggregateAttachmentMessagePartChatItem, but we found an item in toDeleteChatItems that was not associated with the stack", buf, 2u);
}

void sub_1A2197AE8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "Could not get chat from notification: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1A2197B5C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_FAULT, "Not allowing IMChatRegistry to be instantiated from IMDPersistenceAgent. If this is a shared code path, consider using sharedRegistryIfAvailable.", v1, 2u);
}

void sub_1A2197B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1A20E7580();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1A20335EC();
}

void sub_1A2197C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1A20E7580();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1A20335EC();
}

void sub_1A2197C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_1A20E7580();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v0, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v1, v2, v3, v4, v5);
  sub_1A20335EC();
}

void sub_1A2197CF8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  objc_msgSend(0, "guid");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A20E7580();
  sub_1A2094838(&dword_1A1FF4000, MEMORY[0x1E0C81028], v1, "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s", v2, v3, v4, v5, v6);

}

void sub_1A2197D8C()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A20EB404();
  sub_1A20EB424(&dword_1A1FF4000, v0, v1, "Error retaining transient subscription assertion for subscription: \"%@\" and handle: \"%@\". Error: %@");
}

void sub_1A2197DF4()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A20EB438();
  sub_1A20335B0(&dword_1A1FF4000, v0, v1, "Error releasing transient subscription assertion for handle %@. Error: %@");
}

void sub_1A2197E5C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "Invalid phone number found, not adding number changed chat item.", v1, 2u);
}

void sub_1A2197E9C(uint8_t *a1, void *a2, _QWORD *a3, NSObject *a4)
{
  void *v7;

  objc_msgSend(a2, "localizedDescription");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl(&dword_1A1FF4000, a4, OS_LOG_TYPE_ERROR, "momentShareForURLString error: %@", a1, 0xCu);

}

void sub_1A2197F10()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A211B5AC(*MEMORY[0x1E0C80C00]);
  sub_1A20AC318();
  sub_1A211B598(&dword_1A1FF4000, v0, v1, "Edited status items to insert: %@ did not match indexes: %@");
}

void sub_1A2197F74()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A211B5AC(*MEMORY[0x1E0C80C00]);
  sub_1A20AC318();
  sub_1A211B598(&dword_1A1FF4000, v0, v1, "Edited status items to replace: %@ did not match indexes: %@");
}

void sub_1A2197FD8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "messageSummaryInfo is a required overide", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198004()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "contentType is a required overide", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198030()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Failed to get content type", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A219805C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20A2E48(&dword_1A1FF4000, a2, a3, "summary text for tapback is nil for type: %@", a5, a6, a7, a8, 2u);
  sub_1A20335EC();
}

void sub_1A21980C0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20A2E48(&dword_1A1FF4000, a2, a3, "Failed to unarchive the data source pluginPayload. Error: %@", a5, a6, a7, a8, 2u);
  sub_1A20335EC();
}

void sub_1A2198124(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_DEBUG, "strict-decoding 017 exception/error after _enableStrictSecureDecodingMode: [%@]", (uint8_t *)&v2, 0xCu);
  sub_1A20335EC();
}

void sub_1A2198194()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_1A209482C();
  _os_log_debug_impl(&dword_1A1FF4000, v0, OS_LOG_TYPE_DEBUG, "strict-decoding 017 _enableStrictSecureDecodingMode called", v1, 2u);
  sub_1A205D70C();
}

void sub_1A21981CC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Couldn't get a message guid to recover from junk", a5, a6, a7, a8, 0);
  sub_1A205D70C();
}

void sub_1A21981FC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Trying to send nil syndicationAction", a5, a6, a7, a8, 0);
  sub_1A205D70C();
}

void sub_1A219822C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "Trying to send nil collaborationMetadata", a5, a6, a7, a8, 0);
  sub_1A205D70C();
}

void sub_1A219825C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession class not found! Is FindMyLocate installed correctly? This breaks FindMy functionality in Messages, please file a radar.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198288()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Attempted to initialize IMFMFSession in a non-Messages process, or when lockdown is enabled. This check is in place to prevent FindMyLocate from crashing your process with a fatalError if you do not have the required entitlement.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21982B4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession could not set a me device update callback because the FindMyLocateSession did not respond to the expected selector. This breaks FindMy functionality in Messages! Please file a radar.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21982E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession could not set a friendship update callback because the FindMyLocateSession did not respond to the expected selector. This breaks FindMy functionality in Messages! Please file a radar.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A219830C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession could not set a location update callback because the FindMyLocateSession did not respond to the expected selector. This breaks FindMy functionality in Messages! Please file a radar.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198338(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20A2E48(&dword_1A1FF4000, a2, a3, "FindMyLocateSession friendShipUpdateCallback: Not posting a status change because the updateFriend did not respond to the expected selectors: %@", a5, a6, a7, a8, 2u);
  sub_1A20335EC();
}

void sub_1A21983A0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession did not respond to the expected selector: startMonitoringActiveLocationSharingDeviceChangeWithCompletion. Is FindMyLocate installed correctly? This breaks our ability to detect when the active FindMy device changes. If you see this error, please file a radar to the FindMy team.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21983CC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession did not respond to the expected selector: getFriendsSharingLocationsWithMeWithCompletion. Is FindMyLocate installed correctly? This breaks our ability to get FindMy friendship updates throughout the app. If you see this error, please file a radar to the FindMy team.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21983F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession did not respond to the expected selector: startUpdatingFriendsWithCompletion. Is FindMyLocate installed correctly? This breaks our ability to get FindMy friendship updates throughout the app. If you see this error, please file a radar to the FindMy team.", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198424()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "FindMyLocateSession startUpdatingFriendsWithCompletion failed with an error. This breaks our ability to get FindMy friendship updates throughout the app. If you see this error, please file a radar to the FindMy team. Error: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A2198484()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "FindMyLocateSession startMonitoringActiveLocationSharingDeviceChangeWithCompletion failed with an error. This breaks our ability to detect when the active FindMy device changes. If you see this error, please file a radar to the FindMy team. Error: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A21984E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "Could not call FindMyLocateSession startRefreshingLocationForHandles either because there are no handles, or because fmlSession didn't respond to the selector", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198510(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = *(_QWORD *)(a1 + 32);
  sub_1A2139B24();
  sub_1A20335B0(&dword_1A1FF4000, v1, v2, "Error with FindMyLocateSession startRefreshingLocationForHandles. Handles: %@, error: %@", (_QWORD)v3, DWORD2(v3));
  sub_1A20335EC();
}

void sub_1A219857C(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = *(_QWORD *)(a1 + 32);
  sub_1A2139B24();
  sub_1A20335B0(&dword_1A1FF4000, v1, v2, "Error with FindMyLocateSession stopRefreshingLocationForHandles: %@, error: %@", (_QWORD)v3, DWORD2(v3));
  sub_1A20335EC();
}

void sub_1A21985E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "findMyLocationForFindMyHandle: No location to retrieve because the fmlHandle is nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198614()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "findMyLocationForFindMyHandle: fmlSession did not respond to the selector cachedLocationForHandle:", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A2198640()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "findMyLocationForFindMyHandle: No location to retrieve because the fmfHandle is nil", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A219866C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "refreshLocationForHandles - Failed to generate FMFHandle for %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A21986CC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A20A2E48(&dword_1A1FF4000, v0, v1, "_canShareLocationWithFMLHandle: could not call FindMyLocate SPI for handle: %@. Either the handle is nil or the FMLSession did not respond to the expected selector.", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A219872C()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A20AD854();
  sub_1A2139B24();
  sub_1A20335B0(&dword_1A1FF4000, v0, v1, "FindMyLocateSession getActiveLocationSharingDeviceWithCompletion device: %@ error %@");
  sub_1A20335EC();
}

void sub_1A2198790()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A209482C();
  sub_1A20335DC(&dword_1A1FF4000, v0, v1, "FindMyLocateSession makeThisDeviceActiveDevice is not implemented", v2, v3, v4, v5, v6);
  sub_1A205D70C();
}

void sub_1A21987BC()
{
  uint64_t v0;
  os_log_t v1;

  sub_1A20AD854();
  sub_1A20EB424(&dword_1A1FF4000, v0, v1, "sendFriendshipOfferToHandles returned error: %@, handles: %@, duration: %ld");
}

void sub_1A219883C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  const __CFString *v3;
  _BYTE v4[24];

  *(_DWORD *)v4 = 138412802;
  if (*(_BYTE *)(a2 + 40))
    v3 = CFSTR("YES");
  else
    v3 = CFSTR("NO");
  *(_QWORD *)&v4[4] = a1;
  *(_WORD *)&v4[12] = 2112;
  *(_QWORD *)&v4[14] = *(_QWORD *)(a2 + 32);
  *(_WORD *)&v4[22] = 2112;
  sub_1A20EB424(&dword_1A1FF4000, a2, a3, "FindMyLocateSession stopSharingLocationWith returned error: %@, handles: %@, isFromGroup: %@", *(_QWORD *)v4, *(_QWORD *)&v4[8], *(_QWORD *)&v4[16], v3);
}

void sub_1A21988D8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  const char *v4;
  __int16 v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 136315650;
  v4 = "void _IMReplaceChatItemsInRange(NSMutableArray<IMChatItem *> *__strong, __strong id<IMChatItemRules>, NSRange, IMItem *__strong)";
  v5 = 2112;
  v6 = a1;
  v7 = 2112;
  v8 = a2;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "%s Failed to generate chatItems for newItem: %@ with prevItem: %@", (uint8_t *)&v3, 0x20u);
}

void sub_1A219896C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  uint64_t v6;
  int v7;
  void *v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "handleString");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412546;
  v8 = v5;
  v9 = 2112;
  v10 = a2;
  sub_1A215002C(&dword_1A1FF4000, a3, v6, "Error fetching subscription service for handle: \"%@\" Error: %@", (uint8_t *)&v7);

}

void sub_1A2198A18(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20A2E48(&dword_1A1FF4000, a2, a3, "Availability could not be decoded for handle \"%@\", returning unknown availability", a5, a6, a7, a8, 2u);
  sub_1A20335EC();
}

void sub_1A2198A7C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  os_log_t v3;
  uint8_t v4[14];
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  sub_1A20DC67C();
  v5 = v0;
  v6 = v1;
  v7 = v2;
  _os_log_error_impl(&dword_1A1FF4000, v3, OS_LOG_TYPE_ERROR, "Error retaining transient subscription assertion for subscription: \"%@\" and handle: \"%@\". Error: %@", v4, 0x20u);
}

void sub_1A2198B00()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t v2[14];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  sub_1A20DC67C();
  v3 = v0;
  sub_1A215002C(&dword_1A1FF4000, v1, (uint64_t)v1, "Error releasing transient subscription assertion for handle %@. Error: %@", v2);
  sub_1A20335EC();
}

void sub_1A2198B70(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20A2E48(&dword_1A1FF4000, a2, a3, "No normalizedID available for handle, falling back to regular ID. Handle: %@", a5, a6, a7, a8, 2u);
  sub_1A20335EC();
}

void sub_1A2198BD4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "No message item provided", v1, 2u);
}

void sub_1A2198C14(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "IMSPIGetGroupPhotosForChatsWithGroupIDs resulting 'groupIDsToGroupPhotos' is NIL", a5, a6, a7, a8, 0);
}

void sub_1A2198C48(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_ERROR, "Unable to access group photo file for groupID: '%@', sandboxedFileURL: '%@'", (uint8_t *)&v3, 0x16u);
}

void sub_1A2198CCC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A20335DC(&dword_1A1FF4000, a1, a3, "NIL resource returned by accessResourceByConsumingSandboxExtensionWithBlock", a5, a6, a7, a8, 0);
}

void sub_1A2198D00(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "description");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl(&dword_1A1FF4000, a2, OS_LOG_TYPE_ERROR, "Failed to load groupPhotoData with error: '%@'", (uint8_t *)&v4, 0xCu);

}

void sub_1A2198D94()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A2168E98(&dword_1A1FF4000, v0, v1, "Will fetch moment share for URL: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A2198DF4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A2168E98(&dword_1A1FF4000, v0, v1, "Waiting for already executing fetch of moment share for URL: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A2198E54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A2168E98(&dword_1A1FF4000, v0, v1, "Returning a generic error while fetching moment share for URL: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A2198EB4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1A20AD854();
  sub_1A2168E98(&dword_1A1FF4000, v0, v1, "Will fetch local moment share for URL: %@", v2, v3, v4, v5, v6);
  sub_1A20335EC();
}

void sub_1A2198F14(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  *(_DWORD *)a3 = 138543618;
  *(_QWORD *)(a3 + 4) = a1;
  *(_WORD *)(a3 + 12) = 2112;
  *(_QWORD *)(a3 + 14) = a2;
  sub_1A2168EBC(&dword_1A1FF4000, a4, a3, "Returning cached moment share: %{public}@, for URL: %@", (uint8_t *)a3);

}

void sub_1A2198F70()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL SOFT_LINKED_PXIsMomentShareErrorPermanent(NSError *__strong)");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMMomentShareCache.m"), 31, CFSTR("%s"), dlerror());

  __break(1u);
}

void sub_1A2198FE4()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[14];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  sub_1A2168EA8();
  v3 = v0;
  _os_log_error_impl(&dword_1A1FF4000, v1, OS_LOG_TYPE_ERROR, "Failed to fetch moment share for URL: %@, error: %@", v2, 0x16u);
  sub_1A20335EC();
}

void sub_1A2199058(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  uint64_t v6;
  uint8_t v7[14];
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "uuid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A2168EA8();
  v8 = a2;
  sub_1A2168EBC(&dword_1A1FF4000, a3, v6, "Returning fetched moment share: %{public}@, for URL: %@", v7);

  sub_1A2168EC8();
}

void sub_1A21990E8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_DEBUG, "Posting the IMMomentShareCacheDidChangeNotification", v1, 2u);
}

void sub_1A2199128(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  uint64_t v6;
  uint8_t v7[14];
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "uuid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_1A2168EA8();
  v8 = a2;
  sub_1A2168EBC(&dword_1A1FF4000, a3, v6, "Moment share was changed: %{public}@, URL: %@", v7);

  sub_1A2168EC8();
}

void sub_1A21991B4()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPHPhotoLibraryClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMMomentShareCache.m"), 24, CFSTR("Unable to find class %s"), "PHPhotoLibrary");

  __break(1u);
}

void sub_1A219922C(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PhotosLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMMomentShareCache.m"), 23, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1A21992A8()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPHMomentShareClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMMomentShareCache.m"), 25, CFSTR("Unable to find class %s"), "PHMomentShare");

  __break(1u);
}

void sub_1A2199320(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PhotosUICoreLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("IMMomentShareCache.m"), 29, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_1A219939C()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPXTwoTupleClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("IMMomentShareCache.m"), 30, CFSTR("Unable to find class %s"), "PXTwoTuple");

  __break(1u);
}

void sub_1A2199414(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A2168E98(&dword_1A1FF4000, a2, a3, "updateCloudKitState was updated by the daemon with %@", a5, a6, a7, a8, 2u);
}

void sub_1A219947C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A2168E98(&dword_1A1FF4000, a2, a3, "updateCloudKitProgress was updated by the daemon with %@", a5, a6, a7, a8, 2u);
}

void sub_1A21994E4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl(&dword_1A1FF4000, log, OS_LOG_TYPE_DEBUG, "updateCloudKitState was updated by the daemon, clients should values", v1, 2u);
}

uint64_t sub_1A2199524()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1A2199530()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1A219953C()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1A2199548()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1A2199554()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1A2199560()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1A219956C()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1A2199578()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1A2199584()
{
  return MEMORY[0x1E0CB0580]();
}

uint64_t sub_1A2199590()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1A219959C()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1A21995A8()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1A21995B4()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1A21995C0()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1A21995CC()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1A21995D8()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1A21995E4()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1A21995F0()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1A21995FC()
{
  return MEMORY[0x1E0D35A50]();
}

uint64_t sub_1A2199608()
{
  return MEMORY[0x1E0D35A68]();
}

uint64_t sub_1A2199614()
{
  return MEMORY[0x1E0D35A70]();
}

uint64_t sub_1A2199620()
{
  return MEMORY[0x1E0D35A98]();
}

uint64_t sub_1A219962C()
{
  return MEMORY[0x1E0D35AA0]();
}

uint64_t sub_1A2199638()
{
  return MEMORY[0x1E0D370E8]();
}

uint64_t sub_1A2199644()
{
  return MEMORY[0x1E0D370F0]();
}

uint64_t sub_1A2199650()
{
  return MEMORY[0x1E0D370F8]();
}

uint64_t sub_1A219965C()
{
  return MEMORY[0x1E0D37108]();
}

uint64_t sub_1A2199668()
{
  return MEMORY[0x1E0D37110]();
}

uint64_t sub_1A2199674()
{
  return MEMORY[0x1E0D37170]();
}

uint64_t sub_1A2199680()
{
  return MEMORY[0x1E0D37178]();
}

uint64_t sub_1A219968C()
{
  return MEMORY[0x1E0D37180]();
}

uint64_t sub_1A2199698()
{
  return MEMORY[0x1E0D37188]();
}

uint64_t sub_1A21996A4()
{
  return MEMORY[0x1E0D37198]();
}

uint64_t sub_1A21996B0()
{
  return MEMORY[0x1E0D371A0]();
}

uint64_t sub_1A21996BC()
{
  return MEMORY[0x1E0D371A8]();
}

uint64_t sub_1A21996C8()
{
  return MEMORY[0x1E0D371B0]();
}

uint64_t sub_1A21996D4()
{
  return MEMORY[0x1E0D372B8]();
}

uint64_t sub_1A21996E0()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1A21996EC()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1A21996F8()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1A2199704()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1A2199710()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1A219971C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1A2199728()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1A2199734()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1A2199740()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1A219974C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1A2199758()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1A2199764()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1A2199770()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1A219977C()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1A2199788()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1A2199794()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1A21997A0()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1A21997AC()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1A21997B8()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1A21997C4()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1A21997D0()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1A21997DC()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1A21997E8()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1A21997F4()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1A2199800()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1A219980C()
{
  return MEMORY[0x1E0CB1B28]();
}

uint64_t sub_1A2199818()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1A2199824()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1A2199830()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1A219983C()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1A2199848()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1A2199854()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1A2199860()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1A219986C()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1A2199878()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1A2199884()
{
  return MEMORY[0x1E0CB1CB0]();
}

uint64_t sub_1A2199890()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1A219989C()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1A21998A8()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1A21998B4()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1A21998C0()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1A21998CC()
{
  return MEMORY[0x1E0D372D8]();
}

uint64_t sub_1A21998D8()
{
  return MEMORY[0x1E0D372E0]();
}

uint64_t sub_1A21998E4()
{
  return MEMORY[0x1E0D372F0]();
}

uint64_t sub_1A21998F0()
{
  return MEMORY[0x1E0D372F8]();
}

uint64_t sub_1A21998FC()
{
  return MEMORY[0x1E0D37300]();
}

uint64_t sub_1A2199908()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1A2199914()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1A2199920()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1A219992C()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1A2199938()
{
  return MEMORY[0x1E0D37308]();
}

uint64_t sub_1A2199944()
{
  return MEMORY[0x1E0D37320]();
}

uint64_t sub_1A2199950()
{
  return MEMORY[0x1E0D37338]();
}

uint64_t sub_1A219995C()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1A2199968()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1A2199974()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1A2199980()
{
  return MEMORY[0x1E0CB2430]();
}

uint64_t sub_1A219998C()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1A2199998()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1A21999A4()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1A21999B0()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1A21999BC()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1A21999C8()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1A21999D4()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1A21999E0()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1A21999EC()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1A21999F8()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1A2199A04()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1A2199A10()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1A2199A1C()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1A2199A28()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1A2199A34()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1A2199A40()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1A2199A4C()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1A2199A58()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1A2199A64()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1A2199A70()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1A2199A7C()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1A2199A88()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1A2199A94()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1A2199AA0()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1A2199AAC()
{
  return MEMORY[0x1E0DECEF8]();
}

uint64_t sub_1A2199AB8()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1A2199AC4()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1A2199AD0()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1A2199ADC()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1A2199AE8()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1A2199AF4()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1A2199B00()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1A2199B0C()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1A2199B18()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1A2199B24()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1A2199B30()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1A2199B3C()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1A2199B48()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1A2199B54()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1A2199B60()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1A2199B6C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1A2199B78()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1A2199B84()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1A2199B90()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1A2199B9C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1A2199BA8()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1A2199BB4()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1A2199BC0()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1A2199BCC()
{
  return MEMORY[0x1E0DEE8E8]();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x1E0C97CF8](theArray, value);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D38](allocator, capacity, callBacks);
}

CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D50](allocator, capacity, theArray);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

CFIndex CFArrayGetLastIndexOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D80](theArray, range.location, range.length, value);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
  MEMORY[0x1E0C97DB0](theArray, idx, value);
}

void CFArrayRemoveAllValues(CFMutableArrayRef theArray)
{
  MEMORY[0x1E0C97DB8](theArray);
}

void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx)
{
  MEMORY[0x1E0C97DC0](theArray, idx);
}

void CFArrayReplaceValues(CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount)
{
  MEMORY[0x1E0C97DC8](theArray, range.location, range.length, newValues, newCount);
}

void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context)
{
  MEMORY[0x1E0C97DE0](theArray, range.location, range.length, comparator, context);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BE8](rl, observer, mode);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C40]();
}

CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void *block)
{
  return (CFRunLoopObserverRef)MEMORY[0x1E0C98C68](allocator, activities, repeats, order, block);
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C98CC8](allocator, order, context);
}

void CFRunLoopSourceSignal(CFRunLoopSourceRef source)
{
  MEMORY[0x1E0C98CF0](source);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D68](rl);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x1E0C98D98](allocator, capacity, callBacks);
}

CFComparisonResult CFStringCompareWithOptionsAndLocale(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions, CFLocaleRef locale)
{
  return MEMORY[0x1E0C98F20](theString1, theString2, rangeToCompare.location, rangeToCompare.length, compareOptions, locale);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1E0C99100](theString);
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x1E0CFA6C0]();
}

uint64_t ExtractURLQueries()
{
  return MEMORY[0x1E0D36170]();
}

uint64_t IDSCopyIDForEmailAddress()
{
  return MEMORY[0x1E0D33DF0]();
}

uint64_t IDSCopyIDForPhoneNumber()
{
  return MEMORY[0x1E0D33DF8]();
}

uint64_t IDSCopyIDForPhoneNumberWithOptions()
{
  return MEMORY[0x1E0D33E00]();
}

uint64_t IMAdditionalChatRegistryLoggingEnabled()
{
  return MEMORY[0x1E0D373B0]();
}

uint64_t IMAppBundleRootDirectory()
{
  return MEMORY[0x1E0D37418]();
}

uint64_t IMAreEmailsLogicallyTheSame()
{
  return MEMORY[0x1E0D362E8]();
}

uint64_t IMAreObjectsLogicallySame()
{
  return MEMORY[0x1E0D362F0]();
}

uint64_t IMAssociatedMessageDecodeGUID()
{
  return MEMORY[0x1E0D37430]();
}

uint64_t IMAssociatedMessageDecodePartIndex()
{
  return MEMORY[0x1E0D37438]();
}

uint64_t IMBagIntValueWithDefault()
{
  return MEMORY[0x1E0D374B0]();
}

uint64_t IMBalloonBundleIDFromExtensionID()
{
  return MEMORY[0x1E0D374B8]();
}

uint64_t IMBalloonExtensionIDWithSuffix()
{
  return MEMORY[0x1E0D37510]();
}

uint64_t IMBalloonProviderBundlePaths()
{
  return MEMORY[0x1E0D37640]();
}

uint64_t IMBalloonProviderBundleRootDirectory()
{
  return MEMORY[0x1E0D37648]();
}

uint64_t IMBundleIdentifiersShowingMessagesTranscript()
{
  return MEMORY[0x1E0D37660]();
}

uint64_t IMCanonicalFormForEmail()
{
  return MEMORY[0x1E0D36340]();
}

uint64_t IMCanonicalFormOfIDWithSensitivity()
{
  return MEMORY[0x1E0D37700]();
}

uint64_t IMCanonicalizeFormattedString()
{
  return MEMORY[0x1E0D36348]();
}

uint64_t IMChatCanonicalIDSIDsForAddress()
{
  return MEMORY[0x1E0D37710]();
}

uint64_t IMCleanupPhoneNumber()
{
  return MEMORY[0x1E0D36358]();
}

uint64_t IMCloudKitGetSyncStateDictionary()
{
  return MEMORY[0x1E0D37A38]();
}

uint64_t IMComponentsFromChatGUID()
{
  return MEMORY[0x1E0D36360]();
}

uint64_t IMCopyGUIDForChat()
{
  return MEMORY[0x1E0D36370]();
}

uint64_t IMCopyStringWithLocalizedNumbers()
{
  return MEMORY[0x1E0D36380]();
}

uint64_t IMCopyThreadNameForChat()
{
  return MEMORY[0x1E0D36388]();
}

uint64_t IMCountryCodeForIncomingTextMessage()
{
  return MEMORY[0x1E0D36398]();
}

uint64_t IMCountryCodeForNumber()
{
  return MEMORY[0x1E0D363A0]();
}

uint64_t IMCreateItemsFromSerializedArray()
{
  return MEMORY[0x1E0D37C80]();
}

uint64_t IMCreateSerializedItemsFromArray()
{
  return MEMORY[0x1E0D37C90]();
}

uint64_t IMCreateSimpleComponentString()
{
  return MEMORY[0x1E0D363B0]();
}

uint64_t IMCreateSuperFormatStringFromPlainTextString()
{
  return MEMORY[0x1E0D37C98]();
}

uint64_t IMCroppedImageDataFromDataWithCropRect()
{
  return MEMORY[0x1E0D37CA8]();
}

uint64_t IMCurrentLocationURLFromLocation()
{
  return MEMORY[0x1E0D37CB0]();
}

uint64_t IMDAttachmentFindLargestConversations()
{
  return MEMORY[0x1E0D35B08]();
}

uint64_t IMDAttachmentRecordCopyAttachmentForGUID()
{
  return MEMORY[0x1E0D35B38]();
}

uint64_t IMDAttachmentRecordCopyFilename()
{
  return MEMORY[0x1E0D35B70]();
}

uint64_t IMDAttachmentRecordCopyUTIType()
{
  return MEMORY[0x1E0D35B98]();
}

uint64_t IMDAttachmentRecordGetIsOutgoing()
{
  return MEMORY[0x1E0D35BC0]();
}

uint64_t IMDAttachmentRecordIsSticker()
{
  return MEMORY[0x1E0D35BD8]();
}

uint64_t IMDChatGetChatsThatContainRecipient()
{
  return MEMORY[0x1E0D35C50]();
}

uint64_t IMDChatGetMessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles()
{
  return MEMORY[0x1E0D35C58]();
}

uint64_t IMDChatGetMessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs()
{
  return MEMORY[0x1E0D35C60]();
}

uint64_t IMDChatRecordCopyChatForGUID()
{
  return MEMORY[0x1E0D35CB0]();
}

uint64_t IMDChatRemapChatsWithLastAddressedSIMIDToNewLastAddressedIDs()
{
  return MEMORY[0x1E0D35D60]();
}

uint64_t IMDDScanAttributedStringWithContext()
{
  return MEMORY[0x1E0D363E0]();
}

uint64_t IMDHandleRecordGetIdentifier()
{
  return MEMORY[0x1E0D35E30]();
}

uint64_t IMDMessageRecordClearDeleteTombStones()
{
  return MEMORY[0x1E0D35EA0]();
}

uint64_t IMDMessageRecordCopyAttachments()
{
  return MEMORY[0x1E0D35EB8]();
}

uint64_t IMDMessageRecordCopyMessageForGUID()
{
  return MEMORY[0x1E0D35EF8]();
}

uint64_t IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier()
{
  return MEMORY[0x1E0D35F58]();
}

uint64_t IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesWithOnlyUnreadAndLimit()
{
  return MEMORY[0x1E0D35F68]();
}

uint64_t IMDMessageRecordGetIdentifier()
{
  return MEMORY[0x1E0D35FC0]();
}

uint64_t IMDeviceIsGreenTea()
{
  return MEMORY[0x1E0D37DA8]();
}

uint64_t IMDispatchForNotify()
{
  return MEMORY[0x1E0D36400]();
}

uint64_t IMEnumerateArrayInRange()
{
  return MEMORY[0x1E0D36410]();
}

uint64_t IMExtensionPayloadUnarchivingClasses()
{
  return MEMORY[0x1E0D37E70]();
}

uint64_t IMFileLocationTrimFileName()
{
  return MEMORY[0x1E0D36428]();
}

uint64_t IMFileTransferGUIDForAttachmentMessagePartAtMessageGUIDAndMessagePartIndex()
{
  return MEMORY[0x1E0D37F90]();
}

uint64_t IMFileTransferGUIDIsTemporary()
{
  return MEMORY[0x1E0D37FB0]();
}

uint64_t IMFileTransferStateIsNotActive()
{
  return MEMORY[0x1E0D37FD0]();
}

uint64_t IMFileURLIsActuallyAnimated()
{
  return MEMORY[0x1E0D37FE8]();
}

uint64_t IMFormatPhoneNumber()
{
  return MEMORY[0x1E0D36458]();
}

uint64_t IMFormattedDisplayStringForIDWithCountryCode()
{
  return MEMORY[0x1E0D36468]();
}

uint64_t IMFormattedDisplayStringForNumber()
{
  return MEMORY[0x1E0D36470]();
}

uint64_t IMFormattedNumberForUnformattedNumber()
{
  return MEMORY[0x1E0D36478]();
}

uint64_t IMGenerateLoginID()
{
  return MEMORY[0x1E0D36488]();
}

uint64_t IMGetAssertionFailureHandler()
{
  return MEMORY[0x1E0D364B0]();
}

uint64_t IMGetCachedDomainBoolForKey()
{
  return MEMORY[0x1E0D364B8]();
}

uint64_t IMGetCachedDomainBoolForKeyWithDefaultValue()
{
  return MEMORY[0x1E0D364C0]();
}

uint64_t IMGetCachedDomainIntForKey()
{
  return MEMORY[0x1E0D364C8]();
}

uint64_t IMGetCachedDomainValueForKey()
{
  return MEMORY[0x1E0D364D8]();
}

uint64_t IMGetDomainBoolForKey()
{
  return MEMORY[0x1E0D364E8]();
}

uint64_t IMGetDomainBoolForKeyWithDefaultValue()
{
  return MEMORY[0x1E0D364F0]();
}

uint64_t IMGetDomainIntForKey()
{
  return MEMORY[0x1E0D364F8]();
}

uint64_t IMGetDomainValueForKey()
{
  return MEMORY[0x1E0D36500]();
}

uint64_t IMGetEnvironmentName()
{
  return MEMORY[0x1E0D36508]();
}

uint64_t IMGetKeychainPassword()
{
  return MEMORY[0x1E0D36528]();
}

uint64_t IMGetMainBundleIdentifier()
{
  return MEMORY[0x1E0D36530]();
}

uint64_t IMGreenTeaMessageReadLog()
{
  return MEMORY[0x1E0D38028]();
}

uint64_t IMInternationalForPhoneNumberWithOptions()
{
  return MEMORY[0x1E0D365E0]();
}

uint64_t IMIsRunningInAutomation()
{
  return MEMORY[0x1E0D380D8]();
}

uint64_t IMIsRunningInDebugMode()
{
  return MEMORY[0x1E0D380E0]();
}

uint64_t IMIsRunningInGameCenter()
{
  return MEMORY[0x1E0D380E8]();
}

uint64_t IMIsRunningInIDSAccountCapableClient()
{
  return MEMORY[0x1E0D380F0]();
}

uint64_t IMIsRunningInIMDPersistenceAgent()
{
  return MEMORY[0x1E0D380F8]();
}

uint64_t IMIsRunningInImagent()
{
  return MEMORY[0x1E0D38100]();
}

uint64_t IMIsRunningInMessages()
{
  return MEMORY[0x1E0D38108]();
}

uint64_t IMIsRunningInMessagesComposeViewService()
{
  return MEMORY[0x1E0D38110]();
}

uint64_t IMIsRunningInMessagesTranscriptExtension()
{
  return MEMORY[0x1E0D38120]();
}

uint64_t IMIsRunningInMessagesUIProcess()
{
  return MEMORY[0x1E0D38128]();
}

uint64_t IMIsRunningInMessagesViewService()
{
  return MEMORY[0x1E0D38130]();
}

uint64_t IMIsRunningInMobileSMS()
{
  return MEMORY[0x1E0D38138]();
}

uint64_t IMIsRunningInPhotosPersistenceDependentClient()
{
  return MEMORY[0x1E0D38140]();
}

uint64_t IMIsRunningInUnitTesting()
{
  return MEMORY[0x1E0D38150]();
}

uint64_t IMIsRunningOnAudioAccessory()
{
  return MEMORY[0x1E0D38168]();
}

uint64_t IMIsStringStewieEmergency()
{
  return MEMORY[0x1E0D38178]();
}

uint64_t IMIsStringStewieRoadside()
{
  return MEMORY[0x1E0D38180]();
}

uint64_t IMLogBacktrace()
{
  return MEMORY[0x1E0D36610]();
}

uint64_t IMLogExceptionBacktrace()
{
  return MEMORY[0x1E0D36618]();
}

uint64_t IMLogGenerateStackshotWithReason()
{
  return MEMORY[0x1E0D36620]();
}

uint64_t IMLogHandleForCategory()
{
  return MEMORY[0x1E0D381A8]();
}

uint64_t IMLogSimulateCrashForException()
{
  return MEMORY[0x1E0D36628]();
}

uint64_t IMLoggingStringForMessageData()
{
  return MEMORY[0x1E0D36650]();
}

uint64_t IMMMSPartCombinationCanBeSent()
{
  return MEMORY[0x1E0D36690]();
}

uint64_t IMMentionContactKeysForMe()
{
  return MEMORY[0x1E0D381F8]();
}

uint64_t IMMentionMeTokensForContact()
{
  return MEMORY[0x1E0D38200]();
}

uint64_t IMMessageCreateAssociatedMessageGUIDFromThreadIdentifier()
{
  return MEMORY[0x1E0D38220]();
}

uint64_t IMMessageCreateThreadIdentifierWithOriginatorGUID()
{
  return MEMORY[0x1E0D38230]();
}

uint64_t IMMessageItemShouldAutomaticallySave()
{
  return MEMORY[0x1E0D38260]();
}

uint64_t IMMessageItemTimeIntervalSinceStartedExpiring()
{
  return MEMORY[0x1E0D38268]();
}

uint64_t IMMessagePartDescriptionGetMessagePartIndex()
{
  return MEMORY[0x1E0D38270]();
}

uint64_t IMMessageThreadIdentifierGetComponents()
{
  return MEMORY[0x1E0D383E0]();
}

uint64_t IMMessageThreadIdentifierGetOriginatorGUID()
{
  return MEMORY[0x1E0D383E8]();
}

uint64_t IMMessageThreadIdentifierGetOriginatorMessagePart()
{
  return MEMORY[0x1E0D383F0]();
}

uint64_t IMMessageThreadIdentifierGetOriginatorRange()
{
  return MEMORY[0x1E0D383F8]();
}

uint64_t IMMetricsValueForAssociatedMessageContentType()
{
  return MEMORY[0x1E0D38AF0]();
}

uint64_t IMNormalizeFormattedString()
{
  return MEMORY[0x1E0D366D8]();
}

uint64_t IMNormalizePhoneNumber()
{
  return MEMORY[0x1E0D38BC8]();
}

uint64_t IMNormalizedPhoneNumberForCFPhoneNumberRef()
{
  return MEMORY[0x1E0D366E0]();
}

uint64_t IMOSLoggingEnabled()
{
  return MEMORY[0x1E0D366F0]();
}

uint64_t IMPhoneNumberRefCopyForPhoneNumber()
{
  return MEMORY[0x1E0D36718]();
}

uint64_t IMPreferredAccountMap()
{
  return MEMORY[0x1E0D36750]();
}

uint64_t IMReadMMSUserOverride()
{
  return MEMORY[0x1E0D36770]();
}

uint64_t IMRegisterForPreferredAccountChangeNotificationsInternal()
{
  return MEMORY[0x1E0D36780]();
}

uint64_t IMRemoveKeychainPassword()
{
  return MEMORY[0x1E0D367B8]();
}

uint64_t IMRemoveTemporaryKeychainPassword()
{
  return MEMORY[0x1E0D367C0]();
}

uint64_t IMRescaledImageDataFromDataForBiomeDonation()
{
  return MEMORY[0x1E0D38CC8]();
}

uint64_t IMSHA1HashFromStrings()
{
  return MEMORY[0x1E0D38CE0]();
}

uint64_t IMSMSFallbackEnabled()
{
  return MEMORY[0x1E0D367E0]();
}

uint64_t IMSMSReportSpamActivateExtensions()
{
  return MEMORY[0x1E0D38D00]();
}

uint64_t IMSMSReportSpamExtensionAvailable()
{
  return MEMORY[0x1E0D38D08]();
}

uint64_t IMSSMSReportSpamShouldShowReportMessagesForItems()
{
  return MEMORY[0x1E0D38D18]();
}

uint64_t IMSafeTemporaryDirectory()
{
  return MEMORY[0x1E0D38D20]();
}

uint64_t IMSanitizedSessionIdentifierForIMExtensionPayloadUserSessionIdentifierKey()
{
  return MEMORY[0x1E0D38D48]();
}

uint64_t IMServiceNameForCanonicalIDSAddresses()
{
  return MEMORY[0x1E0D38F48]();
}

uint64_t IMSetAlwaysUseSingletonProxies()
{
  return MEMORY[0x1E0D39018]();
}

uint64_t IMSetDomainBoolForKey()
{
  return MEMORY[0x1E0D367F8]();
}

uint64_t IMSetDomainValueForKey()
{
  return MEMORY[0x1E0D36808]();
}

uint64_t IMSetKeychainPassword()
{
  return MEMORY[0x1E0D36820]();
}

uint64_t IMSetUserRegistrationFailureIntent()
{
  return MEMORY[0x1E0D39048]();
}

uint64_t IMSharedDDScanner()
{
  return MEMORY[0x1E0D36828]();
}

uint64_t IMSharedHelperAppBlocklisted()
{
  return MEMORY[0x1E0D39118]();
}

uint64_t IMSharedHelperAreObjectsLogicallySame()
{
  return MEMORY[0x1E0D39120]();
}

uint64_t IMSharedHelperBusinessAllowlist()
{
  return MEMORY[0x1E0D39128]();
}

uint64_t IMSharedHelperCombinedPluginPayloadDictionaryData()
{
  return MEMORY[0x1E0D39140]();
}

uint64_t IMSharedHelperContactsBasedMergingEnabled()
{
  return MEMORY[0x1E0D39150]();
}

uint64_t IMSharedHelperDeviceHasMultipleActiveSubscriptions()
{
  return MEMORY[0x1E0D39158]();
}

uint64_t IMSharedHelperDeviceHasMultipleSubscriptions()
{
  return MEMORY[0x1E0D39160]();
}

uint64_t IMSharedHelperDeviceHasMultipleSubscriptionsWithAtLeastOneActive()
{
  return MEMORY[0x1E0D39168]();
}

uint64_t IMSharedHelperDeviceIsAltAccount()
{
  return MEMORY[0x1E0D39170]();
}

uint64_t IMSharedHelperEnsureDirectoryExistsAtPath()
{
  return MEMORY[0x1E0D39188]();
}

uint64_t IMSharedHelperExternalLocationForFile()
{
  return MEMORY[0x1E0D39190]();
}

uint64_t IMSharedHelperGet_IMDaemonRequestConnectionWithSync()
{
  return MEMORY[0x1E0D39198]();
}

uint64_t IMSharedHelperIsAppleURI()
{
  return MEMORY[0x1E0D391A0]();
}

uint64_t IMSharedHelperIsMakoURI()
{
  return MEMORY[0x1E0D391A8]();
}

uint64_t IMSharedHelperMD5OfData()
{
  return MEMORY[0x1E0D391C0]();
}

uint64_t IMSharedHelperMD5OfDataInBytes()
{
  return MEMORY[0x1E0D391C8]();
}

uint64_t IMSharedHelperNickNameEnabled()
{
  return MEMORY[0x1E0D391E8]();
}

uint64_t IMSharedHelperPayloadFromCombinedPluginPayloadData()
{
  return MEMORY[0x1E0D391F8]();
}

uint64_t IMSharedHelperPersonCentricMergingEnabled()
{
  return MEMORY[0x1E0D39210]();
}

uint64_t IMSharedHelperPinUnsentMessagesToBottom()
{
  return MEMORY[0x1E0D39218]();
}

uint64_t IMSharedHelperStickerAppsTemporarilyDisplayedInSendMenu()
{
  return MEMORY[0x1E0D39238]();
}

uint64_t IMSharedHelperTruncatedGroupDisplayName()
{
  return MEMORY[0x1E0D39240]();
}

uint64_t IMSharedMessageSummaryCreate()
{
  return MEMORY[0x1E0D39250]();
}

uint64_t IMSharedUtilitiesFrameworkBundle()
{
  return MEMORY[0x1E0D39260]();
}

uint64_t IMShouldHandleInternalPhishingAttempts()
{
  return MEMORY[0x1E0D39270]();
}

uint64_t IMShouldShowEmotes()
{
  return MEMORY[0x1E0D39278]();
}

uint64_t IMSingleObjectArray()
{
  return MEMORY[0x1E0D36838]();
}

uint64_t IMStringFromClientCapabilities()
{
  return MEMORY[0x1E0D39350]();
}

uint64_t IMStringFromCloudKitChangingSettingState()
{
  return MEMORY[0x1E0D39358]();
}

uint64_t IMStringFromIMCloudKitAccountStatus()
{
  return MEMORY[0x1E0D39368]();
}

uint64_t IMStringFromIMCloudKitSyncControllerSyncRecordType()
{
  return MEMORY[0x1E0D39370]();
}

uint64_t IMStringFromIMCloudKitSyncControllerSyncState()
{
  return MEMORY[0x1E0D39378]();
}

uint64_t IMStringFromIMCloudKitSyncControllerSyncType()
{
  return MEMORY[0x1E0D39380]();
}

uint64_t IMStringFromIMCloudKitSyncJobState()
{
  return MEMORY[0x1E0D39388]();
}

uint64_t IMStringFromIMCloudKitSyncStatus()
{
  return MEMORY[0x1E0D39390]();
}

uint64_t IMStringFromIMCloudKitSyncType()
{
  return MEMORY[0x1E0D39398]();
}

uint64_t IMStringFromTransferState()
{
  return MEMORY[0x1E0D393A8]();
}

uint64_t IMStringIsBusinessID()
{
  return MEMORY[0x1E0D36860]();
}

uint64_t IMStringIsEmail()
{
  return MEMORY[0x1E0D36868]();
}

uint64_t IMStringIsPhoneNumber()
{
  return MEMORY[0x1E0D36890]();
}

uint64_t IMStringIsStewie()
{
  return MEMORY[0x1E0D368A0]();
}

uint64_t IMStripFormattingFromAddress()
{
  return MEMORY[0x1E0D368B0]();
}

uint64_t IMStripLoginID()
{
  return MEMORY[0x1E0D368B8]();
}

uint64_t IMSyncronizeAppPreferences()
{
  return MEMORY[0x1E0D368C8]();
}

uint64_t IMTemporaryFileTransferGUIDForNewOutgoingTransfer()
{
  return MEMORY[0x1E0D393E0]();
}

uint64_t IMTimingStartTimingForKey()
{
  return MEMORY[0x1E0D368E0]();
}

uint64_t IMTimingStopTimingForKey()
{
  return MEMORY[0x1E0D368E8]();
}

uint64_t IMUTITypeForFilename()
{
  return MEMORY[0x1E0D394D8]();
}

uint64_t IMUTITypeIsPhoto()
{
  return MEMORY[0x1E0D394F0]();
}

uint64_t IMUTITypeIsSupportedByPhotos()
{
  return MEMORY[0x1E0D394F8]();
}

uint64_t IMUTITypeIsVideo()
{
  return MEMORY[0x1E0D39508]();
}

uint64_t IMUTTypeIsAudio()
{
  return MEMORY[0x1E0D39510]();
}

uint64_t IMUTTypeIsCalendar()
{
  return MEMORY[0x1E0D39518]();
}

uint64_t IMUTTypeIsImage()
{
  return MEMORY[0x1E0D39520]();
}

uint64_t IMUTTypeIsMap()
{
  return MEMORY[0x1E0D39528]();
}

uint64_t IMUTTypeIsMovie()
{
  return MEMORY[0x1E0D39530]();
}

uint64_t IMUTTypeIsPass()
{
  return MEMORY[0x1E0D39538]();
}

uint64_t IMUTTypeIsSupportedAnimatedImage()
{
  return MEMORY[0x1E0D39540]();
}

uint64_t IMUTTypeIsVCard()
{
  return MEMORY[0x1E0D39550]();
}

uint64_t IMUTTypeIsWalletOrder()
{
  return MEMORY[0x1E0D39558]();
}

uint64_t IMUnformattedDisplayStringForIDWithCountryCode()
{
  return MEMORY[0x1E0D368F8]();
}

uint64_t IMUpdatePreferredAccountForService()
{
  return MEMORY[0x1E0D36908]();
}

uint64_t IMVCardDataFromLocation()
{
  return MEMORY[0x1E0D39598]();
}

uint64_t IMWeakLinkClass()
{
  return MEMORY[0x1E0D36970]();
}

uint64_t IMWeakLinkSymbol()
{
  return MEMORY[0x1E0D36978]();
}

uint64_t JWDecodeCodableObjectWithStandardAllowlist()
{
  return MEMORY[0x1E0D369D8]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGCopyMultipleAnswers()
{
  return MEMORY[0x1E0DE2B40]();
}

uint64_t MarcoLoggingStringForMessageData()
{
  return MEMORY[0x1E0D47420]();
}

uint64_t MarcoSyncLoggingsPreferences()
{
  return MEMORY[0x1E0D47448]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1E0CB3220](range.location, range.length);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

NSRange NSUnionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x1E0CB3400](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

uint64_t OSLogHandleForIMEventCategory()
{
  return MEMORY[0x1E0D36B30]();
}

uint64_t OSLogHandleForIMFoundationCategory()
{
  return MEMORY[0x1E0D36B38]();
}

uint64_t StringGUID()
{
  return MEMORY[0x1E0D36B50]();
}

uint64_t TUHandlesAreCanonicallyEqual()
{
  return MEMORY[0x1E0DBD638]();
}

uint64_t TUOpenURL()
{
  return MEMORY[0x1E0DBD6A0]();
}

uint64_t _AXSReduceMotionAutoplayMessagesEffectsEnabled()
{
  return MEMORY[0x1E0DDDB10]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFURLCopySecurityScopeFromFileURL()
{
  return MEMORY[0x1E0C9A678]();
}

uint64_t _IDSCopyCallerID()
{
  return MEMORY[0x1E0D34EE0]();
}

uint64_t _IDSCopyOrderedAliasStrings()
{
  return MEMORY[0x1E0D34F18]();
}

uint64_t _IMAlwaysLog()
{
  return MEMORY[0x1E0D36B60]();
}

uint64_t _IMDAttachmentRecordBulkCopy()
{
  return MEMORY[0x1E0D36140]();
}

uint64_t _IMDaemonIsRunning()
{
  return MEMORY[0x1E0D36B70]();
}

uint64_t _IMFrameworkBundle()
{
  return MEMORY[0x1E0D36B78]();
}

uint64_t _IMShouldProcessURLForPhotosExtension()
{
  return MEMORY[0x1E0D39BB0]();
}

uint64_t _IMStringFromFZCapabilities()
{
  return MEMORY[0x1E0D36B98]();
}

uint64_t _IMStringFromFZListenerCapabilities()
{
  return MEMORY[0x1E0D36BA0]();
}

uint64_t _IMWarn()
{
  return MEMORY[0x1E0D36BA8]();
}

uint64_t _IMWillLog()
{
  return MEMORY[0x1E0D36BB0]();
}

uint64_t _NSNewStringByAppendingStrings()
{
  return MEMORY[0x1E0CB3C40]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _signpostSendFileMessage()
{
  return MEMORY[0x1E0D39BD0]();
}

uint64_t _signpostSendMessage()
{
  return MEMORY[0x1E0D39BD8]();
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void abort(void)
{
  MEMORY[0x1E0C813A8]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

Method class_getClassMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7A98](cls, name);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C48](queue, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C68](flags, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

uint64_t im_dispatch_after()
{
  return MEMORY[0x1E0D36BB8]();
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

uint64_t localizedTextForAppName()
{
  return MEMORY[0x1E0D39CA8]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

void method_exchangeImplementations(Method m1, Method m2)
{
  MEMORY[0x1E0DE7B50](m1, m2);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1E0DE7FF8](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x1E0C84930](log, ptr);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x1E0C849B8]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x1E0C849D0]();
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

