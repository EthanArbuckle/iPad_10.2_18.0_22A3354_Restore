uint64_t sub_21FABDCF8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_21FABDDC8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_21FA2DB6C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_21FA2DB6C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_21FABDDC8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21FC5BACC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_21FABDF80(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_21FC5BBD4();
  if (!v8)
  {
    sub_21FC5BC64();
    __break(1u);
LABEL_17:
    result = sub_21FC5BCB8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_21FABDF80(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_21FABE014(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21FABE278(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21FABE278(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21FABE014(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_21FABE188(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_21FC5BB80();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_21FC5BC64();
      __break(1u);
LABEL_10:
      v2 = sub_21FC5B6B8();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_21FC5BCB8();
    __break(1u);
LABEL_14:
    result = sub_21FC5BC64();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_21FABE188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_21FA80754(0, (unint64_t *)&qword_25406BB48, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21FABE200(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_21FC5B6F4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2207D00C0](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_21FABE278(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_21FA80754(0, (unint64_t *)&qword_25406BB48, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

unint64_t sub_21FABE3D8()
{
  unint64_t result;

  result = qword_255540C20;
  if (!qword_255540C20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255540C20);
  }
  return result;
}

uint64_t sub_21FABE414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_21FABE45C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25553FE58)
  {
    v0 = sub_21FC5B580();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25553FE58);
  }
}

uint64_t sub_21FABE4BC(uint64_t a1)
{
  uint64_t v2;

  sub_21FABE4F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21FABE4F8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255540C30)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255540C30);
  }
}

uint64_t sub_21FABE564(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t Strong;
  uint64_t v5;
  _QWORD *v6;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return a1();
  v5 = Strong;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_retain();
  sub_21FABF0E0(0, (uint64_t)sub_21FAC1690, (uint64_t)v6);
  swift_release();
  return swift_release();
}

uint64_t sub_21FABE61C(uint64_t *a1, id a2, uint64_t *a3, uint64_t (*a4)(id))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  if (v7)
  {
    if (v7 == 1)
      goto LABEL_8;
    if ((*a1 & 0x8000000000000000) == 0)
    {
      v24 = *a1;
      v25 = v7;
      sub_21FABF9E8(&v24, 1);
      swift_bridgeObjectRelease();
    }
  }
  if (v9 && (v8 & 0x8000000000000000) == 0)
  {
    v24 = v8;
    v25 = v9;
    sub_21FAC08DC(&v24, 1);
    swift_bridgeObjectRelease();
  }
LABEL_8:
  if (a2)
  {
    v10 = a2;
    if (qword_25406B7F8 != -1)
      swift_once();
    v11 = sub_21FC5AFD4();
    __swift_project_value_buffer(v11, (uint64_t)qword_25406D830);
    v12 = a2;
    swift_retain();
    v13 = a2;
    swift_retain();
    v14 = sub_21FC5AFC8();
    v15 = sub_21FC5B97C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v26 = v17;
      *(_DWORD *)v16 = 136315394;
      v24 = *a3;
      swift_getMetatypeMetadata();
      v18 = sub_21FC5B64C();
      v24 = sub_21FABDCF8(v18, v19, &v26);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v24 = (uint64_t)a2;
      v20 = a2;
      sub_21FA2CDB4();
      v21 = sub_21FC5B64C();
      v24 = sub_21FABDCF8(v21, v22, &v26);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v14, v15, "%s: performIssuerDirectoryDownloadTask returned error: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v17, -1, -1);
      MEMORY[0x2207D105C](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  return a4(a2);
}

uint64_t sub_21FABE8F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getMetatypeMetadata();
  v1 = sub_21FC5B64C();
  v3 = v2;
  sub_21FA720B8();
  v4 = (void *)swift_allocError();
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = 1;
  sub_21FC44B5C(v4);

  v7 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
}

void sub_21FABE9A4(uint64_t *a1, id a2, uint64_t a3, char a4, void (*a5)(unint64_t, id, void *))
{
  unint64_t v6;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27[2];
  uint64_t v28;

  v6 = a1[1];
  if (v6 >= 2)
  {
    v21 = *a1;
    if (*a1 < 0)
    {
      sub_21FA322D0();
      v24 = (void *)swift_allocError();
      *v25 = 4;
      a5(0, 0, v24);

      return;
    }
    v27[0] = *a1;
    v27[1] = v6;
    v22 = sub_21FABF9E8(v27, a4 & 1);
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      v26 = sub_21FC5BC7C();
      swift_bridgeObjectRelease();
      if (v26)
        goto LABEL_11;
    }
    else if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_11:
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v21);
      a5(v22, v23, 0);

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    v22 = 0;
    goto LABEL_11;
  }
  if (a2)
  {
    v8 = a2;
    if (qword_25406B7F8 != -1)
      swift_once();
    v9 = sub_21FC5AFD4();
    __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
    v10 = a2;
    swift_retain();
    v11 = a2;
    swift_retain();
    v12 = sub_21FC5AFC8();
    v13 = sub_21FC5B97C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v28 = v15;
      *(_DWORD *)v14 = 136315394;
      swift_getMetatypeMetadata();
      v16 = sub_21FC5B64C();
      sub_21FABDCF8(v16, v17, &v28);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      v18 = a2;
      sub_21FA2CDB4();
      v19 = sub_21FC5B64C();
      v27[0] = sub_21FABDCF8(v19, v20, &v28);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v12, v13, "%s: performIssuerDirectoryDownloadTask returned error: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v15, -1, -1);
      MEMORY[0x2207D105C](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  a5(0, 0, a2);
}

void sub_21FABED54(_QWORD *a1, void *a2, uint64_t a3, char a4, void (*a5)(unint64_t, id, void *))
{
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14[2];

  v6 = a1[3];
  if (a1[1] == 1 || v6 == 0)
  {
    a5(0, 0, a2);
    return;
  }
  v8 = a1[2];
  if ((v8 & 0x8000000000000000) == 0)
  {
    v14[0] = a1[2];
    v14[1] = v6;
    v9 = sub_21FAC08DC(v14, a4 & 1);
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_21FC5BC7C();
      swift_bridgeObjectRelease();
      if (v13)
        goto LABEL_11;
    }
    else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_11:
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v8);
      a5(v9, v10, 0);

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    v9 = 0;
    goto LABEL_11;
  }
  sub_21FA322D0();
  v11 = (void *)swift_allocError();
  *v12 = 7;
  a5(0, 0, v11);

}

uint64_t sub_21FABF01C(int a1, int a2, void *aBlock)
{
  uint64_t v3;
  void (**v4)(void *, uint64_t, _QWORD);

  v4 = (void (**)(void *, uint64_t, _QWORD))_Block_copy(aBlock);
  v4[2](v4, 1, 0);
  _Block_release(v4);
  return sub_21FAC1850(*(uint64_t (**)(void))(v3 + 8));
}

id sub_21FABF0AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IssuerDirectoryDownloadTaskManager.URLSessionNoCustomCertVerificationDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21FABF0E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[8];
  uint64_t v30;
  void *v31;
  uint64_t v32;

  v4 = v3;
  v7 = a1 & 1;
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      v9 = *(_QWORD *)(v4 + 56);
      swift_retain();
      goto LABEL_6;
    }
  }
  v10 = *(_QWORD *)(v4 + 56);
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IssuerDirectoryDownloadTaskManager.URLSessionNoCustomCertVerificationDelegate()), sel_init);
  v12 = objc_msgSend(*(id *)(v10 + 16), sel_configuration);
  type metadata accessor for WebRequestPerformer();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 24) = MEMORY[0x24BEE4B08];
  v13 = (void *)objc_opt_self();
  v14 = v11;
  v15 = objc_msgSend(v13, sel_sessionWithConfiguration_delegate_delegateQueue_, v12, v14, 0);

  *(_QWORD *)(v9 + 16) = v15;
LABEL_6:
  v16 = *(void **)(v4 + 64);
  sub_21FA2CEA0(v4 + 16, (uint64_t)&v32);
  v29[0] = v7;
  v30 = v9;
  v31 = v16;
  v17 = qword_25406B7F8;
  swift_retain();
  v18 = v16;
  if (v17 != -1)
    swift_once();
  v19 = sub_21FC5AFD4();
  __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
  swift_retain_n();
  v20 = sub_21FC5AFC8();
  v21 = sub_21FC5B994();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v22 = 136315394;
    swift_getMetatypeMetadata();
    v23 = sub_21FC5B64C();
    sub_21FABDCF8(v23, v24, &v28);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
    sub_21FAA6830();
    sub_21FC5ACB0();
    swift_release();
    sub_21FC5BAC0();
    swift_release();
    _os_log_impl(&dword_21FA27000, v20, v21, "%s: Enqueuing Issuer directory download task: (%ld tasks already enqueued)", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v27, -1, -1);
    MEMORY[0x2207D105C](v22, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v4;
  v25[3] = a2;
  v25[4] = a3;
  swift_retain();
  swift_retain();
  sub_21FC45288((uint64_t)v29, (uint64_t)sub_21FAC1A24, (uint64_t)v25);
  swift_release();
  swift_release();
  return sub_21FAC1A30((uint64_t)v29);
}

void sub_21FABF4D0(uint64_t a1, _QWORD *a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  os_log_type_t type;
  void (*v39)(_QWORD, _QWORD);
  void (*v40)(_QWORD, _QWORD);
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v9 = v6;
    if (qword_25406B7F8 != -1)
      swift_once();
    v10 = sub_21FC5AFD4();
    __swift_project_value_buffer(v10, (uint64_t)qword_25406D830);
    sub_21FAC1AB0(v6, v5, v8, v7, 1);
    swift_retain();
    sub_21FAC1AB0(v6, v5, v8, v7, 1);
    swift_retain();
    v11 = sub_21FC5AFC8();
    v12 = sub_21FC5B97C();
    if (os_log_type_enabled(v11, v12))
    {
      type = v12;
      v13 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      *(_DWORD *)v13 = 136315394;
      v41 = v37;
      *(_QWORD *)&v42 = *a2;
      swift_getMetatypeMetadata();
      v14 = sub_21FC5B64C();
      v39 = a3;
      *(_QWORD *)&v42 = sub_21FABDCF8(v14, v15, &v41);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v16 = (void *)sub_21FC5A8D8();
      v17 = objc_msgSend(v16, sel_hrs_safelyLoggableDescription);

      v18 = sub_21FC5B604();
      v20 = v19;

      v21 = v18;
      a3 = v39;
      *(_QWORD *)&v42 = sub_21FABDCF8(v21, v20, &v41);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      sub_21FAC1AE0(v6, v5, v8, v7, 1);
      sub_21FAC1AE0(v6, v5, v8, v7, 1);
      _os_log_impl(&dword_21FA27000, v11, type, "%s: Issuer directory download task failed: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v37, -1, -1);
      MEMORY[0x2207D105C](v13, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_21FAC1AE0(v6, v5, v8, v7, 1);
      sub_21FAC1AE0(v6, v5, v8, v7, 1);
    }

    v42 = xmmword_21FC61770;
    v43 = 0;
    v44 = 0;
    v31 = v6;
    a3(&v42, v6);
    sub_21FAC1AE0(v6, v5, v8, v7, 1);
    v32 = v6;
    v33 = v5;
    v34 = v8;
    v35 = v7;
    v36 = 1;
  }
  else
  {
    v22 = qword_25406B7F8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = sub_21FC5AFD4();
    __swift_project_value_buffer(v23, (uint64_t)qword_25406D830);
    swift_retain_n();
    v24 = sub_21FC5AFC8();
    v25 = sub_21FC5B994();
    if (os_log_type_enabled(v24, v25))
    {
      v40 = a3;
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v41 = v27;
      *(_DWORD *)v26 = 136315138;
      *(_QWORD *)&v42 = *a2;
      swift_getMetatypeMetadata();
      v28 = sub_21FC5B64C();
      *(_QWORD *)&v42 = sub_21FABDCF8(v28, v29, &v41);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v24, v25, "%s: Issuer directory download task finished successfully", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v27, -1, -1);
      v30 = v26;
      a3 = v40;
      MEMORY[0x2207D105C](v30, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *(_QWORD *)&v42 = v6;
    *((_QWORD *)&v42 + 1) = v5;
    v43 = v8;
    v44 = v7;
    a3(&v42, 0);
    v32 = v6;
    v33 = v5;
    v34 = v8;
    v35 = v7;
    v36 = 0;
  }
  sub_21FAC1AE0(v32, v33, v34, v35, v36);
}

uint64_t sub_21FABF9E8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v4 = a1[1];
  v33 = *a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = MEMORY[0x24BEE4AF8];
  v6 = (_QWORD *)(v5 + 16);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0;
  v7 = *(_QWORD *)(v4 + 16);
  if (v7)
  {
    v29 = a2;
    v31 = v2;
    v32 = v5;
    v8 = type metadata accessor for VHRDirectoryIssuer();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = v4;
    v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v12 = *(_QWORD *)(v9 + 72);
    v30 = v10;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21FC5A8FC();
      v13 = (uint64_t *)(v11 + *(int *)(v8 + 20));
      v15 = *v13;
      v14 = v13[1];
      v16 = objc_allocWithZone(MEMORY[0x24BE48A80]);
      swift_bridgeObjectRetain();
      v17 = (void *)sub_21FC5B5E0();
      swift_bridgeObjectRelease();
      v18 = (void *)sub_21FC5B5E0();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_initWithIdentifier_title_, v17, v18);

      MEMORY[0x2207D0180]();
      if (*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_21FC5B7CC();
      sub_21FC5B7E4();
      result = sub_21FC5B7C0();
      v20 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0)
        v20 = v15 & 0xFFFFFFFFFFFFLL;
      if (!v20)
      {
        v21 = *(_QWORD *)(v34 + 16);
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v34 + 16) = v23;
      }
      v11 += v12;
      if (!--v7)
      {
        v4 = v30;
        swift_bridgeObjectRelease();
        v2 = v31;
        v5 = v32;
        a2 = v29;
        break;
      }
    }
  }
  if ((a2 & 1) != 0)
  {
    v24 = *(void **)(v2 + 64);
    sub_21FA5BE58(0, &qword_255540D18);
    swift_bridgeObjectRetain();
    v25 = (void *)sub_21FC5B79C();
    swift_bridgeObjectRelease();
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v2;
    v26[3] = v5;
    v26[4] = v34;
    v26[5] = v33;
    v26[6] = v4;
    aBlock[4] = sub_21FAC19B8;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21FBB5FDC;
    aBlock[3] = &block_descriptor_34;
    v27 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_insertOrReplaceIssuerRegistryEntries_completion_, v25, v27);
    _Block_release(v27);

    swift_beginAccess();
    v28 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    v28 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  swift_release();
  return v28;
}

void sub_21FABFD2C(char a1, id a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v9;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];
  uint64_t v52[2];

  v9 = &unk_25406B000;
  if ((a1 & 1) != 0)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v14 = sub_21FC5AFD4();
    __swift_project_value_buffer(v14, (uint64_t)qword_25406D830);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    v15 = sub_21FC5AFC8();
    v16 = sub_21FC5B970();
    if (os_log_type_enabled(v15, v16))
    {
      v47 = v16;
      v48 = a6;
      v49 = a7;
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v52[0] = v18;
      *(_DWORD *)v17 = 136315650;
      swift_getMetatypeMetadata();
      v19 = sub_21FC5B64C();
      aBlock[0] = sub_21FABDCF8(v19, v20, v52);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      swift_beginAccess();
      v21 = *(_QWORD *)(a4 + 16);
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        v22 = sub_21FC5BC7C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_beginAccess();
      v23 = *(_QWORD *)(a5 + 16);
      swift_release();
      swift_release();
      if (__OFSUB__(v22, v23))
      {
        __break(1u);
        return;
      }
      aBlock[0] = v22 - v23;
      sub_21FC5BAC0();
      swift_release();
      swift_release();
      *(_WORD *)(v17 + 22) = 2048;
      swift_beginAccess();
      v24 = *(_QWORD *)(a5 + 16);
      swift_release();
      aBlock[0] = v24;
      sub_21FC5BAC0();
      swift_release();
      _os_log_impl(&dword_21FA27000, v15, v47, "%s: HKSignedClinicalDataStore.insertOrReplaceIssuerRegistryEntries completed sucessfully. Inserted %ld entries. Deleted %ld entries.", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v18, -1, -1);
      MEMORY[0x2207D105C](v17, -1, -1);

      v9 = (_QWORD *)&unk_25406B000;
      a6 = v48;
      a7 = v49;
    }
    else
    {

      swift_release_n();
      swift_release_n();
      swift_release_n();
    }
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v25 = sub_21FC5AFC8();
    v26 = sub_21FC5B994();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v52[0] = v50;
      *(_DWORD *)v27 = 136315394;
      swift_getMetatypeMetadata();
      v28 = sub_21FC5B64C();
      sub_21FABDCF8(v28, v29, v52);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2048;
      swift_bridgeObjectRelease();
      aBlock[0] = a6;
      v9 = (_QWORD *)&unk_25406B000;
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v25, v26, "%s: Updating RegistryIssuerContentVersion to %ld", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v50, -1, -1);
      MEMORY[0x2207D105C](v27, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    v30 = (void *)a3[8];
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a6);
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = a3;
    v32[3] = a6;
    v32[4] = a7;
    aBlock[4] = sub_21FAC19D4;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21FBB5FDC;
    aBlock[3] = &block_descriptor_40;
    v33 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v30, sel_setRegistryIssuerContentVersion_completion_, v31, v33);
    _Block_release(v33);

  }
  if (a2)
  {
    v34 = a2;
    if (v9[255] != -1)
      swift_once();
    v35 = sub_21FC5AFD4();
    __swift_project_value_buffer(v35, (uint64_t)qword_25406D830);
    swift_retain();
    v36 = a2;
    swift_retain();
    v37 = a2;
    v38 = sub_21FC5AFC8();
    v39 = sub_21FC5B97C();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v52[0] = v41;
      *(_DWORD *)v40 = 136315394;
      aBlock[0] = *a3;
      swift_getMetatypeMetadata();
      v42 = sub_21FC5B64C();
      aBlock[0] = sub_21FABDCF8(v42, v43, v52);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      aBlock[0] = a2;
      v44 = a2;
      sub_21FA2CDB4();
      v45 = sub_21FC5B64C();
      aBlock[0] = sub_21FABDCF8(v45, v46, v52);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v38, v39, "%s: HKSignedClinicalDataStore.insertOrReplaceIssuerRegistryEntries failed: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v41, -1, -1);
      MEMORY[0x2207D105C](v40, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_21FAC04B4(char a1, id a2, id *a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if ((a1 & 1) != 0)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v7 = sub_21FC5AFD4();
    __swift_project_value_buffer(v7, (uint64_t)qword_25406D830);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v8 = sub_21FC5AFC8();
    v9 = sub_21FC5B994();
    if (!os_log_type_enabled(v8, v9))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (!a2)
        return;
      goto LABEL_7;
    }
    v27 = a4;
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v28 = v11;
    *(_DWORD *)v10 = 136315394;
    v29 = (uint64_t)*a3;
    swift_getMetatypeMetadata();
    v12 = sub_21FC5B64C();
    v29 = sub_21FABDCF8(v12, v13, &v28);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2048;
    swift_bridgeObjectRelease();
    v29 = v27;
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v8, v9, "%s: Updated RegistryIssuerContentVersion to %ld successfully", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v11, -1, -1);
    MEMORY[0x2207D105C](v10, -1, -1);

  }
  if (!a2)
    return;
LABEL_7:
  v14 = a2;
  if (qword_25406B7F8 != -1)
    swift_once();
  v15 = sub_21FC5AFD4();
  __swift_project_value_buffer(v15, (uint64_t)qword_25406D830);
  swift_retain();
  v16 = a2;
  swift_retain();
  v17 = a2;
  v18 = sub_21FC5AFC8();
  v19 = sub_21FC5B97C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v28 = v21;
    *(_DWORD *)v20 = 136315394;
    v29 = (uint64_t)*a3;
    swift_getMetatypeMetadata();
    v22 = sub_21FC5B64C();
    v29 = sub_21FABDCF8(v22, v23, &v28);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v29 = (uint64_t)a2;
    v24 = a2;
    sub_21FA2CDB4();
    v25 = sub_21FC5B64C();
    v29 = sub_21FABDCF8(v25, v26, &v28);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FA27000, v18, v19, "%s: HKSignedClinicalDataStore.setRegistryIssuerContentVersion failed: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v21, -1, -1);
    MEMORY[0x2207D105C](v20, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_21FAC08DC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = type metadata accessor for EUDCCPublicKey();
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v24 = v11;
    v13 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v14 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_21FAC1858(v13, (uint64_t)v9);
      v15 = sub_21FC1D634();
      v16 = sub_21FAC189C((uint64_t)v9);
      if (v15)
      {
        MEMORY[0x2207D0180](v16);
        if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_21FC5B7CC();
        sub_21FC5B7E4();
        sub_21FC5B7C0();
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    v11 = v24;
    v17 = aBlock[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v17 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    v18 = *(void **)(v3 + 64);
    sub_21FA5BE58(0, (unint64_t *)&unk_25554BAC0);
    v19 = (void *)sub_21FC5B79C();
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = v3;
    v20[3] = v17;
    v20[4] = v11;
    v20[5] = v10;
    aBlock[4] = sub_21FAC190C;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21FBB5FDC;
    aBlock[3] = &block_descriptor_6;
    v21 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v18, sel_insertOrReplacePublicKeyEntries_completion_, v19, v21);
    _Block_release(v21);

  }
  return v17;
}

void sub_21FAC0B08(char a1, id a2, uint64_t a3, unint64_t a4, NSObject *a5, uint64_t a6)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  _QWORD *v39;
  void *v40;
  os_log_t oslog;
  NSObject *osloga;
  _QWORD aBlock[6];
  uint64_t v44;

  if ((a1 & 1) != 0)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v10 = sub_21FC5AFD4();
    __swift_project_value_buffer(v10, (uint64_t)qword_25406D830);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v11 = sub_21FC5AFC8();
    v12 = sub_21FC5B970();
    if (os_log_type_enabled(v11, v12))
    {
      oslog = a5;
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v44 = v14;
      *(_DWORD *)v13 = 136315394;
      swift_getMetatypeMetadata();
      v15 = sub_21FC5B64C();
      aBlock[0] = sub_21FABDCF8(v15, v16, &v44);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2048;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = sub_21FC5BC7C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      aBlock[0] = v17;
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v11, v12, "%s: HKSignedClinicalDataStore.insertOrReplacePublicKeyEntries completed sucessfully. Inserted %ld entries", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v14, -1, -1);
      MEMORY[0x2207D105C](v13, -1, -1);

      a5 = oslog;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v31 = sub_21FC5AFC8();
    v32 = sub_21FC5B994();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v44 = v34;
      *(_DWORD *)v33 = 136315394;
      swift_getMetatypeMetadata();
      v35 = sub_21FC5B64C();
      sub_21FABDCF8(v35, v36, &v44);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2048;
      swift_bridgeObjectRelease();
      aBlock[0] = a5;
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v31, v32, "%s: Updating RegistryPublicKeyContentVersion to %ld", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v34, -1, -1);
      MEMORY[0x2207D105C](v33, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    v37 = *(void **)(a3 + 64);
    v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a5);
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = a3;
    v39[3] = a5;
    v39[4] = a6;
    aBlock[4] = sub_21FAC193C;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21FBB5FDC;
    aBlock[3] = &block_descriptor_22;
    v40 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v37, sel_setRegistryPublicKeyContentVersion_completion_, v38, v40);
    _Block_release(v40);

  }
  else if (a2)
  {
    v19 = a2;
    if (qword_25406B7F8 != -1)
      swift_once();
    v20 = sub_21FC5AFD4();
    __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
    swift_retain();
    v21 = a2;
    swift_retain();
    v22 = a2;
    osloga = sub_21FC5AFC8();
    v23 = sub_21FC5B97C();
    if (os_log_type_enabled(osloga, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v44 = v25;
      *(_DWORD *)v24 = 136315394;
      swift_getMetatypeMetadata();
      v26 = sub_21FC5B64C();
      sub_21FABDCF8(v26, v27, &v44);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v28 = a2;
      sub_21FA2CDB4();
      v29 = sub_21FC5B64C();
      aBlock[0] = sub_21FABDCF8(v29, v30, &v44);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, osloga, v23, "%s: HKSignedClinicalDataStore.insertOrReplaceIssuerRegistryEntries failed: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v25, -1, -1);
      MEMORY[0x2207D105C](v24, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_21FAC11C8(char a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  id v15;
  id v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *oslog;
  uint64_t v26;
  uint64_t v27;

  if ((a1 & 1) != 0)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v6 = sub_21FC5AFD4();
    __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v7 = sub_21FC5AFC8();
    v8 = sub_21FC5B994();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v26 = v10;
      *(_DWORD *)v9 = 136315394;
      v27 = *a3;
      swift_getMetatypeMetadata();
      v11 = sub_21FC5B64C();
      v27 = sub_21FABDCF8(v11, v12, &v26);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      swift_bridgeObjectRelease();
      v27 = a4;
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v7, v8, "%s: Updated RegistryPublicKeyContentVersion to %ld successfully", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v10, -1, -1);
      MEMORY[0x2207D105C](v9, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v14 = sub_21FC5AFD4();
    __swift_project_value_buffer(v14, (uint64_t)qword_25406D830);
    swift_retain();
    v15 = a2;
    swift_retain();
    v16 = a2;
    oslog = sub_21FC5AFC8();
    v17 = sub_21FC5B97C();
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v26 = v19;
      *(_DWORD *)v18 = 136315394;
      v27 = *a3;
      swift_getMetatypeMetadata();
      v20 = sub_21FC5B64C();
      v27 = sub_21FABDCF8(v20, v21, &v26);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      v27 = (uint64_t)a2;
      v22 = a2;
      sub_21FA2D1A0(0, &qword_25406BB60, (uint64_t (*)(uint64_t))sub_21FA2CDB4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v23 = sub_21FC5B64C();
      v27 = sub_21FABDCF8(v23, v24, &v26);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, oslog, v17, "%s: HKSignedClinicalDataStore.setRegistryPublicKeyContentVersion failed: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v19, -1, -1);
      MEMORY[0x2207D105C](v18, -1, -1);

    }
    else
    {
      swift_release_n();

    }
  }
}

uint64_t sub_21FAC15FC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IssuerDirectoryDownloadTaskManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for IssuerDirectoryDownloadTaskManager.URLSessionNoCustomCertVerificationDelegate()
{
  return objc_opt_self();
}

uint64_t sub_21FAC1678()
{
  return MEMORY[0x24BEE3F20];
}

uint64_t sub_21FAC1684()
{
  return objectdestroyTm_4((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_21FAC1690(uint64_t *a1, void *a2)
{
  uint64_t v2;

  return sub_21FABE61C(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t (**)(id))(v2 + 24));
}

uint64_t sub_21FAC169C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_21FAC16D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21FAC1750;
  return ((uint64_t (*)(int, int, void *))((char *)&dword_255540CF8 + dword_255540CF8))(v2, v3, v4);
}

uint64_t sub_21FAC1750()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t objectdestroy_7Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FAC17CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21FAC1B10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_255541468 + dword_255541468))(a1, v4, v5, v6);
}

uint64_t sub_21FAC1850(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21FAC1858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EUDCCPublicKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAC189C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EUDCCPublicKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21FAC18D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21FAC190C(char a1, void *a2)
{
  uint64_t v2;

  sub_21FAC0B08(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_21FAC1930()
{
  return objectdestroyTm_4((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_21FAC193C(char a1, void *a2)
{
  uint64_t v2;

  sub_21FAC11C8(a1, a2, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_21FAC1948()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FAC196C()
{
  return swift_deallocObject();
}

uint64_t sub_21FAC197C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21FAC19B8(char a1, void *a2)
{
  uint64_t v2;

  sub_21FABFD2C(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_21FAC19C8()
{
  return objectdestroyTm_4((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_21FAC19D4(char a1, void *a2)
{
  uint64_t v2;

  sub_21FAC04B4(a1, a2, *(id **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_21FAC19E0()
{
  return objectdestroyTm_4((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroyTm_4(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_21FAC1A24(uint64_t a1)
{
  uint64_t v1;

  sub_21FABF4D0(a1, *(_QWORD **)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24));
}

uint64_t sub_21FAC1A30(uint64_t a1)
{
  destroy for IssuerDirectoryDownloadTask(a1);
  return a1;
}

uint64_t sub_21FAC1A64@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = swift_beginAccess();
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
  if (*(_QWORD *)(v1 + 32))
    ++v4;
  *a1 = v4;
  return result;
}

id sub_21FAC1AB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return a1;
  swift_bridgeObjectRetain();
  return (id)swift_bridgeObjectRetain();
}

void sub_21FAC1AE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21FAC1B2C(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B38(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B44(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B50(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B5C(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B68(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B74(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B80(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1B8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_21FC5BC04();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_21FA2DB6C(i, (uint64_t)v5);
    type metadata accessor for SecCertificate(0);
    if (!swift_dynamicCast())
      break;
    sub_21FC5BBE0();
    sub_21FC5BC10();
    sub_21FC5BC1C();
    sub_21FC5BBEC();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

uint64_t sub_21FAC1C84(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1C90(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1C9C(unint64_t a1)
{
  return sub_21FAC1CA8(a1);
}

uint64_t sub_21FAC1CA8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_21FC5BC04();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x2207D057C](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_21FC5BBE0();
        sub_21FC5BC10();
        sub_21FC5BC1C();
        sub_21FC5BBEC();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_21FC5BBE0();
        sub_21FC5BC10();
        sub_21FC5BC1C();
        sub_21FC5BBEC();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_21FC5BC7C();
    swift_bridgeObjectRelease();
    sub_21FC5BC04();
    swift_bridgeObjectRetain();
    v2 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_21FAC1E88(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_21FAC1F70;
  *(_QWORD *)(v15 + 24) = v14;
  swift_retain();
  sub_21FAC2278(a4, a5, a6, a7, (uint64_t)sub_21FAC2270, v15);
  return swift_release();
}

uint64_t sub_21FAC1F4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FAC1F70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD v7[3];
  char v8;

  v5 = *(uint64_t (**)(_QWORD *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v8 = a4 & 1;
  return v5(v7);
}

void sub_21FAC1FAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, void (*a7)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_21FA32314(a2, a3);
    a7(a1, a2, a3, 0);
    sub_21FAC3254(a1, a2, a3);
  }
  if (a6 != 0xFF)
  {
    sub_21FAC3210(a4, a5, a6);
    if (qword_25406B7F8 != -1)
      swift_once();
    v14 = sub_21FC5AFD4();
    __swift_project_value_buffer(v14, (uint64_t)qword_25406D830);
    sub_21FAC3210(a4, a5, a6);
    sub_21FAC3210(a4, a5, a6);
    v15 = sub_21FC5AFC8();
    v16 = sub_21FC5B97C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      v23 = v18;
      sub_21FAC3210(a4, a5, a6);
      v19 = sub_21FC5B64C();
      sub_21FABDCF8(v19, v20, &v23);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      sub_21FAC3228(a4, a5, a6);
      sub_21FAC3228(a4, a5, a6);
      _os_log_impl(&dword_21FA27000, v15, v16, "Could not generate BAA Cert Signature. Error: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v18, -1, -1);
      MEMORY[0x2207D105C](v17, -1, -1);
    }
    else
    {
      sub_21FAC3228(a4, a5, a6);
      sub_21FAC3228(a4, a5, a6);
    }

    sub_21FAAF6EC();
    v21 = (void *)swift_allocError();
    *(_QWORD *)v22 = a4;
    *(_QWORD *)(v22 + 8) = a5;
    *(_BYTE *)(v22 + 16) = a6;
    a7((uint64_t)v21, 0, 0, 1);

  }
}

void sub_21FAC2270(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v6;

  sub_21FAC1FAC(a1, a2, a3, a4, a5, a6, *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t))(v6 + 16));
}

void sub_21FAC2278(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD aBlock[6];

  if (a3 < 1)
  {
    sub_21FC5BB74();
    swift_bridgeObjectRelease();
    sub_21FC5BDCC();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    sub_21FC5B6AC();
    sub_21FC5BC70();
    __break(1u);
  }
  else
  {
    v12 = (void *)sub_21FC5B55C();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a3;
    v13[3] = a1;
    v13[4] = a2;
    v13[5] = a4;
    v13[6] = a5;
    v13[7] = a6;
    aBlock[4] = sub_21FAC30C0;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21FAC30EC;
    aBlock[3] = &block_descriptor_7;
    v14 = _Block_copy(aBlock);
    sub_21FA32314(a1, a2);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    DeviceIdentityIssueClientCertificateWithCompletion();
    _Block_release(v14);

  }
}

uint64_t sub_21FAC245C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD), uint64_t a8)
{
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  if (a3 < 2)
    return a7(0, 0, 0, a1, a2, 0);
  if (qword_25406B7F8 != -1)
    swift_once();
  v14 = sub_21FC5AFD4();
  __swift_project_value_buffer(v14, (uint64_t)qword_25406D830);
  v15 = sub_21FC5AFC8();
  v16 = sub_21FC5B970();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v17 = 134217984;
    v18 = a3 - 1;
    sub_21FC5BAC0();
    _os_log_impl(&dword_21FA27000, v15, v16, "Retrying generating the BAA signature. Retries left: %ld", v17, 0xCu);
    MEMORY[0x2207D105C](v17, -1, -1);

  }
  else
  {

    v18 = a3 - 1;
  }
  return sub_21FAC2278(a4, a5, v18, a6, a7, a8);
}

uint64_t sub_21FAC25E0(__SecKey *a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __SecCertificate *v33;
  CFDataRef v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t result;
  id *v53;
  __SecCertificate *v54;
  CFDataRef v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  const __CFString *v62;
  const __CFData *v63;
  CFDataRef Signature;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  __SecKey *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v96[3];
  CFErrorRef v97;
  uint64_t v98;
  BOOL v99;
  CFErrorRef error[2];

  v13 = a4;
  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v16 = a3;
    if (qword_25406B7F8 != -1)
      swift_once();
    v17 = sub_21FC5AFD4();
    __swift_project_value_buffer(v17, (uint64_t)qword_25406D830);
    v18 = a3;
    v19 = a3;
    v20 = sub_21FC5AFC8();
    v21 = sub_21FC5B97C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v93 = v13;
      v23 = (id)swift_slowAlloc();
      v98 = (uint64_t)v23;
      *(_DWORD *)v22 = 136315138;
      v24 = a3;
      sub_21FA2CDB4();
      v25 = sub_21FC5B64C();
      v96[0] = sub_21FABDCF8(v25, v26, &v98);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v20, v21, "Could not retrieve BAA private key caused. Error: %s", v22, 0xCu);
      swift_arrayDestroy();
      v27 = v23;
      v13 = v93;
      MEMORY[0x2207D105C](v27, -1, -1);
      MEMORY[0x2207D105C](v22, -1, -1);

    }
    else
    {

    }
    v98 = (uint64_t)a3;
    v41 = a3;
    sub_21FA2CDB4();
    v42 = sub_21FC5B64C();
    sub_21FAC245C(v42, v43, v13, a5, a6, a7, a8, a9);
    swift_bridgeObjectRelease();

    return HKReleaseSecKey();
  }
  if (!a2 || (v29 = sub_21FAC1B8C(a2)) == 0)
  {
LABEL_21:
    if (qword_25406B7F8 != -1)
      swift_once();
    v44 = sub_21FC5AFD4();
    __swift_project_value_buffer(v44, (uint64_t)qword_25406D830);
    swift_bridgeObjectRetain_n();
    v45 = sub_21FC5AFC8();
    v46 = sub_21FC5B97C();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v96[0] = v48;
      *(_DWORD *)v47 = 136315138;
      if (a2)
        v49 = *(_QWORD *)(a2 + 16);
      else
        v49 = 0;
      v98 = v49;
      v99 = a2 == 0;
      sub_21FAC31A0();
      v50 = sub_21FC5B64C();
      v98 = sub_21FABDCF8(v50, v51, v96);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v45, v46, "Could not retrieve BAA private key caused by incorrect certs. Count: %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v48, -1, -1);
      MEMORY[0x2207D105C](v47, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_21FAC245C(0xD000000000000011, 0x800000021FC76570, a4, a5, a6, a7, a8, a9);
    return HKReleaseSecKey();
  }
  v30 = v29;
  if (*(_QWORD *)(a2 + 16) != 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v29 >> 62)
  {
    v31 = sub_21FC5BC7C();
    v91 = a9;
    if (v31)
      goto LABEL_11;
LABEL_37:
    result = swift_bridgeObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
    goto LABEL_38;
  }
  v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v91 = a9;
  if (!v31)
    goto LABEL_37;
LABEL_11:
  v98 = MEMORY[0x24BEE4AF8];
  sub_21FC01CAC(0, v31 & ~(v31 >> 63), 0);
  if (v31 < 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  v92 = a5;
  v89 = a6;
  v90 = a1;
  v9 = v98;
  if ((v30 & 0xC000000000000001) != 0)
  {
    v32 = 0;
    do
    {
      v33 = (__SecCertificate *)MEMORY[0x2207D057C](v32, v30);
      v34 = SecCertificateCopyData(v33);
      v35 = sub_21FC5A9EC();
      v37 = v36;
      swift_unknownObjectRelease();

      v98 = v9;
      v39 = *(_QWORD *)(v9 + 16);
      v38 = *(_QWORD *)(v9 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_21FC01CAC(v38 > 1, v39 + 1, 1);
        v9 = v98;
      }
      ++v32;
      *(_QWORD *)(v9 + 16) = v39 + 1;
      v40 = v9 + 16 * v39;
      *(_QWORD *)(v40 + 32) = v35;
      *(_QWORD *)(v40 + 40) = v37;
    }
    while (v31 != v32);
  }
  else
  {
    v53 = (id *)(v30 + 32);
    do
    {
      v54 = (__SecCertificate *)*v53;
      v55 = SecCertificateCopyData(v54);
      v56 = sub_21FC5A9EC();
      v58 = v57;

      v98 = v9;
      v60 = *(_QWORD *)(v9 + 16);
      v59 = *(_QWORD *)(v9 + 24);
      if (v60 >= v59 >> 1)
      {
        sub_21FC01CAC(v59 > 1, v60 + 1, 1);
        v9 = v98;
      }
      *(_QWORD *)(v9 + 16) = v60 + 1;
      v61 = v9 + 16 * v60;
      *(_QWORD *)(v61 + 32) = v56;
      *(_QWORD *)(v61 + 40) = v58;
      ++v53;
      --v31;
    }
    while (v31);
  }
  result = swift_bridgeObjectRelease();
  a6 = v89;
  a1 = v90;
  a5 = v92;
LABEL_38:
  error[0] = 0;
  v30 = a4;
  if (a1)
  {
    v62 = (const __CFString *)*MEMORY[0x24BDE92D0];
    v63 = (const __CFData *)sub_21FC5A9D4();
    Signature = SecKeyCreateSignature(a1, v62, v63, error);

    if (Signature)
    {
      v65 = sub_21FC5A9EC();
      v67 = v66;

      if (!error[0])
      {
        sub_21FA32314(v65, v67);
        a8(v9, v65, v67, 0, 0, 255);
        sub_21FA2D770(v65, v67);
        swift_bridgeObjectRelease();
        sub_21FA2D770(v65, v67);
        return HKReleaseSecKey();
      }
    }
    else
    {
      v65 = 0;
      v67 = 0xF000000000000000;
    }
    v87 = v65;
    v88 = v67;
    if (!*(_QWORD *)(v9 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_49:
      if (qword_25406B7F8 != -1)
        swift_once();
      v74 = sub_21FC5AFD4();
      __swift_project_value_buffer(v74, (uint64_t)qword_25406D830);
      v75 = sub_21FC5AFC8();
      v76 = sub_21FC5B97C();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v77 = 0;
        _os_log_impl(&dword_21FA27000, v75, v76, "BAA Signature failed with nil, but referenceKey populated", v77, 2u);
        MEMORY[0x2207D105C](v77, -1, -1);
      }

      if (error[0])
      {
        v78 = sub_21FC5AFC8();
        v79 = sub_21FC5B97C();
        if (os_log_type_enabled(v78, v79))
        {
          v80 = (uint8_t *)swift_slowAlloc();
          v81 = (id)swift_slowAlloc();
          v98 = (uint64_t)v81;
          *(_DWORD *)v80 = 136315138;
          swift_beginAccess();
          sub_21FA2D1A0(0, &qword_255540D30, (uint64_t (*)(uint64_t))sub_21FAC31F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          v82 = sub_21FC5BA9C();
          v97 = (CFErrorRef)sub_21FABDCF8(v82, v83, &v98);
          sub_21FC5BAC0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21FA27000, v78, v79, "Failed to sign the payload. Error: %s", v80, 0xCu);
          swift_arrayDestroy();
          v84 = v81;
          v30 = a4;
          MEMORY[0x2207D105C](v84, -1, -1);
          MEMORY[0x2207D105C](v80, -1, -1);
        }

      }
      swift_beginAccess();
      v97 = error[0];
      sub_21FA2D1A0(0, &qword_255540D30, (uint64_t (*)(uint64_t))sub_21FAC31F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v85 = sub_21FC5BA9C();
      sub_21FAC245C(v85, v86, v30, a5, a6, a7, a8, v91);
      sub_21FA3239C(v87, v88);
      swift_bridgeObjectRelease();
      return HKReleaseSecKey();
    }
    if (qword_25406B7F8 == -1)
    {
LABEL_45:
      v68 = sub_21FC5AFD4();
      __swift_project_value_buffer(v68, (uint64_t)qword_25406D830);
      swift_bridgeObjectRetain();
      v69 = sub_21FC5AFC8();
      v70 = sub_21FC5B97C();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v71 = 134217984;
        v72 = a6;
        v73 = *(_QWORD *)(v9 + 16);
        swift_bridgeObjectRelease();
        v98 = v73;
        a6 = v72;
        v30 = a4;
        sub_21FC5BAC0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21FA27000, v69, v70, "BAA Signature failed with nil, but certs populated. Count: %ld", v71, 0xCu);
        MEMORY[0x2207D105C](v71, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_49;
    }
LABEL_59:
    swift_once();
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_21FAC308C()
{
  uint64_t v0;

  sub_21FA2D770(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FAC30C0(__SecKey *a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_21FAC25E0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_21FAC30EC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v6)(void *, uint64_t, void *);
  uint64_t v7;
  id v8;
  id v9;

  v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3)
    v7 = sub_21FC5B7A8();
  else
    v7 = 0;
  swift_retain();
  v8 = a2;
  v9 = a4;
  v6(a2, v7, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_21FAC31A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554BAB0)
  {
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554BAB0);
  }
}

void sub_21FAC31F4(uint64_t a1)
{
  sub_21FA2D1A0(a1, &qword_255540D38, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BEE4A78]);
}

uint64_t sub_21FAC3210(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 6u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_21FAC3228(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_21FAC323C(a1, a2, a3);
  return a1;
}

uint64_t sub_21FAC323C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 6u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21FAC3254(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_21FA2D770(a2, a3);
  }
  return result;
}

ValueMetadata *_s35DeviceIdentityBAASignatureGeneratorVMa()
{
  return &_s35DeviceIdentityBAASignatureGeneratorVN;
}

uint64_t sub_21FAC329C@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  id v64;
  char *v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  id v74;
  void *v75;
  uint64_t v76;
  void *v77;
  id v78;
  char *v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  id v88;
  void *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  id v95;
  void *v96;
  uint64_t v97;
  void *v98;
  id v99;
  char *v100;
  id v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  id v109;
  id v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  id v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  void *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t *v147;
  uint64_t v149;
  void (*v150)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t *v167;
  char v168[8];
  char v169[8];

  v159 = a3;
  v167 = a2;
  v160 = a4;
  sub_21FA2ED54(0, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v155 = (uint64_t)&v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v154 = (uint64_t)&v149 - v8;
  v153 = type metadata accessor for PBHKInspectableValueCollection(0);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v157 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_21FC5AAAC();
  v161 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156);
  v162 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v165 = (uint64_t)&v149 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v164 = (uint64_t)&v149 - v14;
  v163 = type metadata accessor for PBHKConcept(0);
  v15 = *(_QWORD *)(v163 - 8);
  v16 = MEMORY[0x24BDAC7A8](v163);
  v151 = (uint64_t)&v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v149 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v149 - v21;
  v23 = type metadata accessor for PBHKDiagnosticTestResult(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v158 = (uint64_t)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v149 - v26;
  v28 = *a1;
  sub_21FC5AD10();
  v29 = *(int *)(v23 + 20);
  if (qword_25553D990 != -1)
    swift_once();
  *(_QWORD *)&v27[v29] = qword_255543C98;
  swift_retain();
  v166 = v28;
  v30 = objc_msgSend(v28, sel_bodySite);
  if (v30)
  {
    v31 = v30;
    sub_21FAA1BD0(v30, 1, (uint64_t)v22);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v32 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v32);
      swift_release();
    }
    v33 = *(_QWORD *)&v27[v29];
    v34 = v164;
    sub_21FA2D23C((uint64_t)v22, v164, type metadata accessor for PBHKConcept);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v34, 0, 1, v163);
    v35 = v34;
    v36 = v165;
    sub_21FA87DBC(v35, v165, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    v37 = v33
        + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
    swift_beginAccess();
    swift_retain();
    sub_21FA87E08(v36, v37, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    swift_release();
  }
  v38 = v166;
  v39 = objc_msgSend(v166, sel_category);
  v40 = sub_21FC5B604();
  v42 = v41;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v43 = swift_retain();
    *(_QWORD *)&v27[v29] = sub_21FB695E0(v43);
    swift_release();
  }
  v44 = (uint64_t *)(*(_QWORD *)&v27[v29]
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  *v44 = v40;
  v44[1] = v42;
  swift_bridgeObjectRelease();
  v45 = objc_msgSend(v38, sel_comments);
  if (v45)
  {
    v46 = v45;
    v47 = sub_21FC5B604();
    v49 = v48;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v50 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v50);
      swift_release();
    }
    v51 = (uint64_t *)(*(_QWORD *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
    swift_beginAccess();
    *v51 = v47;
    v51[1] = v49;
    swift_bridgeObjectRelease();
  }
  v52 = objc_msgSend(v38, sel_diagnosticTest);
  sub_21FAA1BD0(v52, 1, (uint64_t)v20);

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v53 = swift_retain();
    *(_QWORD *)&v27[v29] = sub_21FB695E0(v53);
    swift_release();
  }
  v54 = *(_QWORD *)&v27[v29];
  v55 = v164;
  sub_21FA2D23C((uint64_t)v20, v164, type metadata accessor for PBHKConcept);
  v150 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56);
  v150(v55, 0, 1, v163);
  v56 = v165;
  sub_21FA87DBC(v55, v165, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  v57 = v54
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_21FA87E08(v56, v57, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
  v58 = objc_msgSend(v38, sel_effectiveEndDate);
  v59 = v156;
  v60 = v161;
  if (v58)
  {
    v61 = v58;
    v62 = *v167;
    v63 = (void *)sub_21FC5AB6C();
    v64 = objc_msgSend(v61, sel_adjustedDateForCalendar_, v63);

    v65 = v162;
    sub_21FC5AA94();

    v66 = *(id *)(v62 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v67 = (void *)sub_21FC5AA64();
    v68 = objc_msgSend(v66, sel_stringFromDate_, v67);

    v69 = sub_21FC5B604();
    v71 = v70;

    (*(void (**)(char *, uint64_t))(v60 + 8))(v65, v59);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v72 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v72);
      swift_release();
    }
    v73 = (uint64_t *)(*(_QWORD *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
    swift_beginAccess();
    *v73 = v69;
    v73[1] = v71;

    swift_bridgeObjectRelease();
    v38 = v166;
  }
  v74 = objc_msgSend(v38, sel_effectiveStartDate);
  if (v74)
  {
    v75 = v74;
    v76 = *v167;
    v77 = (void *)sub_21FC5AB6C();
    v78 = objc_msgSend(v75, sel_adjustedDateForCalendar_, v77);

    v79 = v162;
    sub_21FC5AA94();

    v80 = *(id *)(v76 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v81 = (void *)sub_21FC5AA64();
    v82 = objc_msgSend(v80, sel_stringFromDate_, v81);

    v83 = sub_21FC5B604();
    v85 = v84;

    (*(void (**)(char *, uint64_t))(v60 + 8))(v79, v59);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v86 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v86);
      swift_release();
    }
    v87 = (uint64_t *)(*(_QWORD *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
    swift_beginAccess();
    *v87 = v83;
    v87[1] = v85;

    swift_bridgeObjectRelease();
    v38 = v166;
    v60 = v161;
  }
  v88 = objc_msgSend(v38, sel_interpretation);
  if (v88)
  {
    v89 = v88;
    sub_21FA5BE58(0, (unint64_t *)&qword_255540D40);
    v90 = sub_21FC5B7A8();

    MEMORY[0x24BDAC7A8](v91);
    *(&v149 - 2) = (uint64_t)v167;
    v92 = sub_21FC41DA0((void (*)(id *))sub_21FAC44A0, (uint64_t)(&v149 - 4), v90, (uint64_t)v168);
    v149 = 0;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v93 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v93);
      swift_release();
    }
    v94 = (uint64_t *)(*(_QWORD *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
    swift_beginAccess();
    *v94 = v92;
    swift_bridgeObjectRelease();
  }
  else
  {
    v149 = 0;
  }
  v95 = objc_msgSend(v38, sel_issueDate, v149);
  if (v95)
  {
    v96 = v95;
    v97 = *v167;
    v98 = (void *)sub_21FC5AB6C();
    v99 = objc_msgSend(v96, sel_adjustedDateForCalendar_, v98);

    v100 = v162;
    sub_21FC5AA94();

    v101 = *(id *)(v97 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v102 = (void *)sub_21FC5AA64();
    v103 = objc_msgSend(v101, sel_stringFromDate_, v102);

    v104 = sub_21FC5B604();
    v106 = v105;

    (*(void (**)(char *, uint64_t))(v60 + 8))(v100, v59);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v107 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v107);
      swift_release();
    }
    v108 = (uint64_t *)(*(_QWORD *)&v27[v29]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
    swift_beginAccess();
    *v108 = v104;
    v108[1] = v106;

    swift_bridgeObjectRelease();
  }
  v109 = v166;
  v110 = objc_msgSend(v166, sel_method);
  v111 = (uint64_t)v157;
  if (v110)
  {
    v112 = v110;
    v113 = v151;
    sub_21FAA1BD0(v110, 1, v151);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v114 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v114);
      swift_release();
    }
    v115 = *(_QWORD *)&v27[v29];
    v116 = v113;
    v117 = v164;
    sub_21FA2D23C(v116, v164, type metadata accessor for PBHKConcept);
    v150(v117, 0, 1, v163);
    v118 = v165;
    sub_21FA87DBC(v117, v165, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    v119 = v115
         + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
    swift_beginAccess();
    swift_retain();
    sub_21FA87E08(v118, v119, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    swift_release();
  }
  v120 = objc_msgSend(v109, sel_performers);
  if (v120)
  {
    v121 = v120;
    v122 = sub_21FC5B7A8();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v123 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v123);
      swift_release();
    }
    v124 = (uint64_t *)(*(_QWORD *)&v27[v29]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
    swift_beginAccess();
    *v124 = v122;
    swift_bridgeObjectRelease();
  }
  v125 = objc_msgSend(v109, sel_value);
  if (v125)
  {
    v126 = v125;
    sub_21FA9F4E0(v125, v111);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v127 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v127);
      swift_release();
    }
    v128 = *(_QWORD *)&v27[v29];
    v129 = v154;
    sub_21FA2D23C(v111, v154, type metadata accessor for PBHKInspectableValueCollection);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v152 + 56))(v129, 0, 1, v153);
    v130 = v155;
    sub_21FA87DBC(v129, v155, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    v131 = v128
         + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
    swift_beginAccess();
    swift_retain();
    sub_21FA87E08(v130, v131, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    swift_endAccess();

    swift_release();
  }
  v132 = objc_msgSend(v109, sel_referenceRanges);
  if (v132)
  {
    v133 = v132;
    sub_21FA5BE58(0, &qword_2555405C0);
    v134 = sub_21FC5B7A8();

    MEMORY[0x24BDAC7A8](v135);
    *(&v149 - 2) = (uint64_t)v167;
    v136 = sub_21FC41D7C((void (*)(id *))sub_21FAA432C, (uint64_t)(&v149 - 4), v134, (uint64_t)v169);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      v137 = swift_retain();
      *(_QWORD *)&v27[v29] = sub_21FB695E0(v137);
      swift_release();
    }
    v138 = (uint64_t *)(*(_QWORD *)&v27[v29]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
    swift_beginAccess();
    *v138 = v136;
    swift_bridgeObjectRelease();
  }
  v139 = v160;
  sub_21FAA23C8(v109, v159, v160);
  v140 = v158;
  sub_21FAC4420((uint64_t)v27, v158);
  PBClinicalRecord.diagnosticTestResult.setter(v140);
  v141 = sub_21FC57788();
  v143 = v142;
  v144 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v145 = (_QWORD *)swift_retain();
    v146 = sub_21FB8E53C(v145);
    swift_release();
    *(_QWORD *)(v139 + v144) = v146;
    swift_release();
  }
  v147 = (uint64_t *)(*(_QWORD *)(v139 + v144)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  *v147 = v141;
  v147[1] = v143;
  swift_bridgeObjectRelease();
  return sub_21FAC4464((uint64_t)v27);
}

uint64_t sub_21FAC4420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PBHKDiagnosticTestResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAC4464(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PBHKDiagnosticTestResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_21FAC44A0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FAA1BD0(*a1, 1, a2);
}

uint64_t sub_21FAC44D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];

  v1 = v0;
  v2 = type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  sub_21FAC47D4();
  v6 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  v21 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2CEA0(v0, (uint64_t)v22);
  v9 = swift_allocObject();
  sub_21FA3175C(v22, v9 + 16);
  v10 = MEMORY[0x24BDB9E38];
  sub_21FAC4C48(0, (unint64_t *)&qword_25406B9C8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  *(_QWORD *)&v22[0] = sub_21FC5B25C();
  sub_21FAC4CC0((unint64_t *)&qword_25406B9C0, (unint64_t *)&qword_25406B9C8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))v10, MEMORY[0x24BDB9E58]);
  v11 = sub_21FC5B280();
  swift_release();
  *(_QWORD *)&v22[0] = v11;
  sub_21FAC4D00(v1, (uint64_t)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  sub_21FAC4E38((uint64_t)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  sub_21FC5B184();
  v14 = MEMORY[0x24BDB9AE0];
  sub_21FAC4C48(0, (unint64_t *)&qword_25406B980, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FA50724(0, &qword_25406AE10);
  sub_21FA95F24();
  v15 = MEMORY[0x24BDB9AF8];
  sub_21FAC4CC0((unint64_t *)&qword_25406B970, (unint64_t *)&qword_25406B980, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))v14, MEMORY[0x24BDB9AF8]);
  sub_21FA2A08C(&qword_25406B8F0, (uint64_t (*)(uint64_t))sub_21FA95F24, v15);
  sub_21FC5B34C();
  swift_release();
  swift_release();
  sub_21FA2A08C(&qword_25406B868, (uint64_t (*)(uint64_t))sub_21FAC47D4, MEMORY[0x24BDB98F0]);
  v16 = v20;
  v17 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v16);
  return v17;
}

uint64_t type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask()
{
  uint64_t result;

  result = qword_25406C6F8;
  if (!qword_25406C6F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21FAC47D4()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if (!qword_25406B870)
  {
    sub_21FA95F24();
    v0 = MEMORY[0x24BDB9AE0];
    sub_21FAC4C48(255, (unint64_t *)&qword_25406B980, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    v1 = MEMORY[0x24BDB9AF8];
    sub_21FA2A08C(&qword_25406B8F0, (uint64_t (*)(uint64_t))sub_21FA95F24, MEMORY[0x24BDB9AF8]);
    sub_21FAC4CC0((unint64_t *)&qword_25406B970, (unint64_t *)&qword_25406B980, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))v0, v1);
    v2 = sub_21FC5B100();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_25406B870);
  }
}

uint64_t sub_21FAC48B8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t result;
  _BYTE v20[4];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v24 = a3;
  sub_21FA9594C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21FAC4EC8();
  v11 = v10;
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21FAC4F78();
  v15 = v14;
  v23 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = *a1;
  v27 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask() + 28));
  sub_21FA2D1A0(0, &qword_25406BA38, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_21FA959C8();
  sub_21FC5B748();
  sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
  sub_21FC5B118();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v25 = a2;
  v26 = v21;
  sub_21FA50724(0, &qword_25406AE10);
  sub_21FC5B124();
  (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v13, v11);
  sub_21FA2A08C(&qword_25406C9F8, (uint64_t (*)(uint64_t))sub_21FAC4F78, MEMORY[0x24BDB9970]);
  v18 = sub_21FC5B280();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v23 + 8))(v17, v15);
  *v24 = v18;
  return result;
}

uint64_t sub_21FAC4AF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *boxed_opaque_existential_1;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  _QWORD *v15;

  v6 = *a1;
  v7 = (int *)type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  v8 = *(_QWORD *)(a2 + v7[8]);
  v9 = a2 + v7[5];
  v10 = (int *)type metadata accessor for ClinicalSharingOperationalMetric(0);
  a4[3] = (uint64_t)v10;
  a4[4] = (uint64_t)&off_24E48CBF8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  v12 = (char *)boxed_opaque_existential_1 + v10[6];
  v13 = sub_21FC5AAAC();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v12, v9, v13);
  sub_21FA7187C(a2 + v7[9], (uint64_t)boxed_opaque_existential_1 + v10[7]);
  v14((char *)boxed_opaque_existential_1 + v10[8], a2 + v7[10], v13);
  *boxed_opaque_existential_1 = v6;
  boxed_opaque_existential_1[1] = v8;
  *((_BYTE *)boxed_opaque_existential_1 + v10[9]) = a3;
  *((_BYTE *)boxed_opaque_existential_1 + v10[10]) = 0;
  v15 = (uint64_t *)((char *)boxed_opaque_existential_1 + v10[11]);
  *v15 = 0xD000000000000032;
  v15[1] = 0x800000021FC76590;
  return swift_retain();
}

uint64_t sub_21FAC4C1C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_21FAC4C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21FC18620(a1, a2, (_QWORD *)(v2 + 16));
}

void sub_21FAC4C48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    v7 = a3(a1, MEMORY[0x24BEE1328], v6, MEMORY[0x24BEE3F20]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_21FAC4CC0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_21FAC4C48(255, a2, a3);
    result = MEMORY[0x2207D0F78](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FAC4D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAC4D44()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v1 = (int *)type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  __swift_destroy_boxed_opaque_existential_1(v3);
  v4 = v3 + v1[5];
  v5 = sub_21FC5AAAC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);

  swift_bridgeObjectRelease();
  v8 = v3 + v1[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  v7(v3 + v1[10], v5);
  return swift_deallocObject();
}

uint64_t sub_21FAC4E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAC4E7C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask()
                                      - 8)
                          + 80);
  return sub_21FAC48B8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

void sub_21FAC4EC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406B8B0)
  {
    sub_21FA2D1A0(255, &qword_25406BA38, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    sub_21FA959C8();
    v0 = sub_21FC5B130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406B8B0);
  }
}

void sub_21FAC4F78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406CA00)
  {
    sub_21FAC502C();
    sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    sub_21FA2A08C(&qword_25406CB08, (uint64_t (*)(uint64_t))sub_21FAC502C, MEMORY[0x24BEE12C8]);
    v0 = sub_21FC5B130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406CA00);
  }
}

void sub_21FAC502C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406CB00)
  {
    sub_21FA50724(255, &qword_25406AE10);
    v0 = sub_21FC5B7F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406CB00);
  }
}

uint64_t sub_21FAC5090@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_21FAC4AF4(a1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), a2);
}

char *sub_21FAC509C(uint64_t a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = &v4[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = sub_21FC5AAAC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = *(void **)((char *)a2 + v14);
    *(_QWORD *)&v4[v14] = v16;
    *(_QWORD *)&v4[v15] = *(uint64_t *)((char *)a2 + v15);
    v17 = a3[9];
    *(_QWORD *)&v4[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    v18 = &v4[v17];
    v19 = (char *)a2 + v17;
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v21 = v16;
    swift_bridgeObjectRetain();
    if (v20(v19, 1, v11))
    {
      sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v13(v18, (uint64_t)v19, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    v13(&v4[a3[10]], (uint64_t)a2 + a3[10], v11);
  }
  return v4;
}

uint64_t sub_21FAC5220(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + a2[5];
  v5 = sub_21FC5AAAC();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);

  swift_bridgeObjectRelease();
  v7 = a1 + a2[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5))
    v9(v7, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + a2[10], v5);
}

uint64_t sub_21FAC52E0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21FC5AAAC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = a3[7];
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v16 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v20 = v15;
  swift_bridgeObjectRetain();
  if (v19(v18, 1, v10))
  {
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v12(v17, v18, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  }
  v12((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v10);
  return a1;
}

uint64_t *sub_21FAC5430(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AAAC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = *(void **)((char *)a2 + v12);
  v14 = *(void **)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
  v15 = v13;

  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  v16 = a3[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v20 = v19((char *)a1 + v16, 1, v9);
  v21 = v19(v18, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      v11(v17, v18, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
LABEL_7:
  v11((char *)a1 + a3[10], (char *)a2 + a3[10], v9);
  return a1;
}

uint64_t sub_21FAC55C8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_21FC5AAAC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v14, 1, v10))
  {
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v12((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v10);
  return a1;
}

uint64_t sub_21FAC56FC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AAAC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v15 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v19 = v18(a1 + v15, 1, v10);
  v20 = v18((uint64_t)v17, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      v12((uint64_t)v16, (uint64_t)v17, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v16, v10);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v16, v17, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
LABEL_7:
  v12(a1 + a3[10], a2 + a3[10], v10);
  return a1;
}

uint64_t sub_21FAC5894()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAC58A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AAAC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_21FAC5958()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAC5964(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_21FC5AAAC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_21FAC5A18()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FC5AAAC();
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *sub_21FAC5AE8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  char *result;

  v2 = v1;
  result = (char *)objc_msgSend(v2, sel_collectionType);
  if ((unint64_t)result >= 4)
  {
    sub_21FC5BB74();
    sub_21FC5B6AC();
    objc_msgSend(v2, sel_collectionType);
    type metadata accessor for HKInspectableValueCollectionType(0);
    sub_21FC5BC4C();
    sub_21FC5B6AC();
    result = (char *)sub_21FC5BC70();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = result + 1;
    *(_BYTE *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_21FAC5C10(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v13 = a4;
  v14 = a5;
  sub_21FAC6500(0, &qword_255540D60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FAC6478();
  sub_21FC5BEEC();
  LOBYTE(v15) = 0;
  sub_21FC5BD78();
  if (!v5)
  {
    v15 = v13;
    v16 = v14;
    v17 = 1;
    sub_21FAC655C();
    sub_21FC5BD9C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_21FAC5D5C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 25705;
}

uint64_t sub_21FAC5D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21FAC61C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21FAC5DB4()
{
  sub_21FAC6478();
  return sub_21FC5BF10();
}

uint64_t sub_21FAC5DDC()
{
  sub_21FAC6478();
  return sub_21FC5BF1C();
}

uint64_t sub_21FAC5E04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_21FAC6298(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_21FAC5E30(_QWORD *a1)
{
  uint64_t *v1;

  return sub_21FAC5C10(a1, *v1, v1[1], v1[2], v1[3]);
}

void sub_21FAC5E4C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_21FC5BDF0() & 1) != 0)
    sub_21FB13260(v2, v3);
}

uint64_t sub_21FAC5EC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_21FC5BE8C();
  swift_bridgeObjectRetain();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  sub_21FA32314(v2, v1);
  sub_21FC5A9F8();
  sub_21FA2D770(v2, v1);
  return sub_21FC5BEB0();
}

uint64_t sub_21FAC5F50()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  sub_21FA32314(v2, v1);
  sub_21FC5A9F8();
  return sub_21FA2D770(v2, v1);
}

uint64_t sub_21FAC5FC8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_21FC5BE8C();
  swift_bridgeObjectRetain();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  sub_21FA32314(v2, v1);
  sub_21FC5A9F8();
  sub_21FA2D770(v2, v1);
  return sub_21FC5BEB0();
}

uint64_t destroy for ClinicalSharingNodeMetadata(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_21FA2D770(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for ClinicalSharingNodeMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_21FA32314(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingNodeMetadata(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  v4 = a2[3];
  sub_21FA32314(v5, v4);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_21FA2D770(v6, v7);
  return a1;
}

_QWORD *assignWithTake for ClinicalSharingNodeMetadata(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_21FA2D770(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingNodeMetadata()
{
  return &type metadata for ClinicalSharingNodeMetadata;
}

unint64_t sub_21FAC6180()
{
  unint64_t result;

  result = qword_25406CC00;
  if (!qword_25406CC00)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC618FC, &type metadata for ClinicalSharingNodeMetadata);
    atomic_store(result, (unint64_t *)&qword_25406CC00);
  }
  return result;
}

uint64_t sub_21FAC61C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21FC5BDF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000021FC76680)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21FAC6298(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  unint64_t v14;

  sub_21FAC6500(0, &qword_255540D48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v12[-v6];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FAC6478();
  sub_21FC5BEE0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v13) = 0;
    v8 = sub_21FC5BD18();
    v12[15] = 1;
    sub_21FAC64BC();
    swift_bridgeObjectRetain();
    sub_21FC5BD30();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v10 = v13;
    v11 = v14;
    swift_bridgeObjectRetain();
    sub_21FA32314(v10, v11);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_21FA2D770(v10, v11);
  }
  return v8;
}

unint64_t sub_21FAC6478()
{
  unint64_t result;

  result = qword_255540D50;
  if (!qword_255540D50)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC61A78, &type metadata for ClinicalSharingNodeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540D50);
  }
  return result;
}

unint64_t sub_21FAC64BC()
{
  unint64_t result;

  result = qword_255540D58;
  if (!qword_255540D58)
  {
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255540D58);
  }
  return result;
}

void sub_21FAC6500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_21FAC6478();
    v7 = a3(a1, &type metadata for ClinicalSharingNodeMetadata.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_21FAC655C()
{
  unint64_t result;

  result = qword_255540D68;
  if (!qword_255540D68)
  {
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255540D68);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingNodeMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FAC65EC + 4 * byte_21FC618D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FAC6620 + 4 * byte_21FC618D0[v4]))();
}

uint64_t sub_21FAC6620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FAC6628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FAC6630);
  return result;
}

uint64_t sub_21FAC663C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FAC6644);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FAC6648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FAC6650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingNodeMetadata.CodingKeys()
{
  return &type metadata for ClinicalSharingNodeMetadata.CodingKeys;
}

unint64_t sub_21FAC6670()
{
  unint64_t result;

  result = qword_255540D70;
  if (!qword_255540D70)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC61A50, &type metadata for ClinicalSharingNodeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540D70);
  }
  return result;
}

unint64_t sub_21FAC66B8()
{
  unint64_t result;

  result = qword_255540D78;
  if (!qword_255540D78)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC619C0, &type metadata for ClinicalSharingNodeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540D78);
  }
  return result;
}

unint64_t sub_21FAC6700()
{
  unint64_t result;

  result = qword_255540D80;
  if (!qword_255540D80)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC619E8, &type metadata for ClinicalSharingNodeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540D80);
  }
  return result;
}

void sub_21FAC6744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_21FA5F86C;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = objc_allocWithZone(MEMORY[0x24BE46B78]);
  v15[4] = sub_21FAC6944;
  v15[5] = v11;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_21FAC694C;
  v15[3] = &block_descriptor_8;
  v13 = _Block_copy(v15);
  swift_retain();
  v14 = objc_msgSend(v12, sel_initWithDayIndexRange_ascending_limit_resultsHandler_, a3, a4, 1, 0, v13);
  _Block_release(v13);
  swift_release();
  objc_msgSend(a5, sel_executeQuery_, v14);

}

uint64_t sub_21FAC6880()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21FAC68A4(int a1, void *a2, int a3, id a4, void (*a5)(id, BOOL))
{
  id v7;
  uint64_t v9;
  id v10;

  v7 = a2;
  if (!a2)
  {
    v7 = a4;
    if (!a4)
    {
      sub_21FA720B8();
      v7 = (id)swift_allocError();
      *(_QWORD *)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
      *(_BYTE *)(v9 + 16) = 2;
    }
    v10 = a4;
  }
  swift_bridgeObjectRetain();
  a5(v7, a2 == 0);
  sub_21FAC6A4C(v7, a2 == 0);
}

void sub_21FAC6944(int a1, void *a2, int a3, void *a4)
{
  uint64_t v4;

  sub_21FAC68A4(a1, a2, a3, a4, *(void (**)(id, BOOL))(v4 + 16));
}

uint64_t sub_21FAC694C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7;
  void (*v9)(id, uint64_t, void *, void *);
  id v10;
  id v11;
  id v12;

  v7 = a3;
  v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_21FAC6A10();
    v7 = sub_21FC5B7A8();
  }
  swift_retain();
  v10 = a2;
  v11 = a4;
  v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

unint64_t sub_21FAC6A10()
{
  unint64_t result;

  result = qword_255540D88;
  if (!qword_255540D88)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255540D88);
  }
  return result;
}

void sub_21FAC6A4C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_21FAC6A5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v78;
  void (*v79)(unint64_t, char *, uint64_t);
  uint64_t v80;
  int v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  char *v88;
  unint64_t v89;
  char v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t result;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int v102;
  uint64_t v103;
  unint64_t v104;
  __int128 v105;
  char *v106;
  void (*v107)(char *, unint64_t, uint64_t);
  char *v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  char v121;

  v2 = sub_21FC5AAAC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v100 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v97 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v116 = (char *)&v97 - v9;
  sub_21FA2ED54(0, (unint64_t *)&qword_25406AAE8, v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v98 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v101 = (char *)&v97 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v99 = (uint64_t)&v97 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v97 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v112 = (char *)&v97 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v113 = (uint64_t)&v97 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v118 = (uint64_t)&v97 - v25;
  v119 = type metadata accessor for ClinicalSharingDataNodeInfo();
  MEMORY[0x24BDAC7A8](v119);
  v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(a1 + 16);
  if (!v30)
    return MEMORY[0x24BEE4B00];
  v106 = v20;
  v108 = v8;
  v31 = a1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  v115 = MEMORY[0x24BEE4B00];
  v117 = *(_QWORD *)(v26 + 72);
  *(_QWORD *)&v27 = 136315394;
  v105 = v27;
  v104 = 0x800000021FC766F0;
  v103 = MEMORY[0x24BEE4AD8] + 8;
  v114 = v3;
  while (1)
  {
    sub_21FA2D120(v31, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDataNodeInfo);
    v33 = &v29[*(int *)(v119 + 28)];
    v34 = *(_QWORD *)&v33[*(int *)(type metadata accessor for PBTypedData(0) + 20)];
    swift_beginAccess();
    if ((*(_BYTE *)(v34 + 24) & 1) == 0)
    {
      v120 = *(_QWORD **)(v34 + 16);
      v121 = 0;
      v120 = (_QWORD *)PBDataType.rawValue.getter();
      sub_21FAC7BF4();
      v40 = sub_21FC5BAE4();
      v42 = v41;
      sub_21FAC7C38();
      v43 = (void *)swift_allocError();
      *(_QWORD *)v44 = v40;
      *(_QWORD *)(v44 + 8) = v42;
      *(_BYTE *)(v44 + 16) = 6;
      swift_willThrow();
      if (qword_25406B7F8 != -1)
        swift_once();
      v45 = sub_21FC5AFD4();
      __swift_project_value_buffer(v45, (uint64_t)qword_25406D830);
      v46 = v43;
      v47 = v43;
      v48 = sub_21FC5AFC8();
      v49 = sub_21FC5B97C();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v51 = (_QWORD *)swift_slowAlloc();
        v52 = swift_slowAlloc();
        v120 = (_QWORD *)v52;
        *(_DWORD *)v50 = v105;
        *(_QWORD *)(v50 + 4) = sub_21FABDCF8(0xD000000000000023, v104, (uint64_t *)&v120);
        *(_WORD *)(v50 + 12) = 2112;
        v53 = v43;
        v54 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v50 + 14) = v54;
        *v51 = v54;

        _os_log_impl(&dword_21FA27000, v48, v49, "%s %@", (uint8_t *)v50, 0x16u);
        sub_21FA2ED54(0, (unint64_t *)&qword_25406BE28, (void (*)(uint64_t))sub_21FAC7C7C);
        swift_arrayDestroy();
        v55 = v51;
        v3 = v114;
        MEMORY[0x2207D105C](v55, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v52, -1, -1);
        MEMORY[0x2207D105C](v50, -1, -1);

      }
      else
      {

      }
      v32 = (uint64_t)v29;
      goto LABEL_5;
    }
    v35 = qword_21FC61AC8[*(_QWORD *)(v34 + 16)];
    v36 = v118;
    sub_21FA65B30(v118);
    v37 = v113;
    sub_21FA7187C(v36, v113);
    v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v38(v37, 1, v2) != 1)
      break;
    v39 = v37;
LABEL_41:
    sub_21FA71828(v39);
    sub_21FA71828(v118);
    v32 = (uint64_t)v29;
LABEL_5:
    sub_21FA326EC(v32, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDataNodeInfo);
    v31 += v117;
    if (!--v30)
      return v115;
  }
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  v56(v116, v37, v2);
  v57 = v115;
  v58 = *(_QWORD *)(v115 + 16);
  v59 = (uint64_t)v112;
  v107 = (void (*)(char *, unint64_t, uint64_t))v56;
  v110 = v35;
  if (v58 && (v60 = sub_21FA73EB0(v35, 1), (v61 & 1) != 0))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v59, *(_QWORD *)(v57 + 56) + *(_QWORD *)(v3 + 72) * v60, v2);
    v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v111(v59, 0, 1, v2);
    v62 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v38)(v59, 1, v2) == 1;
  }
  else
  {
    v62 = 1;
    v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v111(v59, 1, 1, v2);
  }
  v63 = (uint64_t)v106;
  sub_21FA7187C(v59, (uint64_t)v106);
  v64 = v3;
  v65 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v66 = v108;
  v65(v108, v116, v2);
  if (v62)
  {
    v109 = *(void (**)(char *, uint64_t))(v64 + 8);
    v109(v66, v2);
    sub_21FA71828(v63);
  }
  else
  {
    v67 = v29;
    v68 = v99;
    sub_21FA7187C(v63, v99);
    if (v38(v68, 1, v2) == 1)
      goto LABEL_46;
    v69 = v108;
    v102 = sub_21FC5AA7C();
    v70 = *(void (**)(char *, uint64_t))(v114 + 8);
    v70(v69, v2);
    sub_21FA71828(v63);
    v109 = v70;
    v70((char *)v68, v2);
    v29 = v67;
    if ((v102 & 1) == 0)
    {
      v3 = v114;
      v88 = v112;
LABEL_40:
      v109(v116, v2);
      v39 = (uint64_t)v88;
      goto LABEL_41;
    }
  }
  v71 = (uint64_t)v101;
  v65(v101, v116, v2);
  v111(v71, 0, 1, v2);
  if (v38(v71, 1, v2) == 1)
  {
    sub_21FA71828(v71);
    v72 = v115;
    swift_bridgeObjectRetain();
    v73 = 1;
    v74 = sub_21FA73EB0(v110, 1);
    v76 = v75;
    swift_bridgeObjectRelease();
    if ((v76 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v120 = (_QWORD *)v72;
      v3 = v114;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_21FA79C98();
        v72 = (uint64_t)v120;
      }
      v78 = (uint64_t)v98;
      v107(v98, *(_QWORD *)(v72 + 56) + *(_QWORD *)(v3 + 72) * v74, v2);
      v115 = v72;
      sub_21FBAE884(v74, v72);
      swift_bridgeObjectRelease();
      v73 = 0;
    }
    else
    {
      v3 = v114;
      v78 = (uint64_t)v98;
    }
    v111(v78, v73, 1, v2);
    sub_21FA71828(v78);
    v88 = v112;
    goto LABEL_40;
  }
  v79 = (void (*)(unint64_t, char *, uint64_t))v107;
  v107(v100, v71, v2);
  v80 = v115;
  v81 = swift_isUniquelyReferenced_nonNull_native();
  v120 = (_QWORD *)v80;
  v83 = sub_21FA73EB0(v110, 1);
  v84 = *(_QWORD *)(v80 + 16);
  v85 = (v82 & 1) == 0;
  v86 = v84 + v85;
  if (!__OFADD__(v84, v85))
  {
    v87 = v82;
    v88 = v112;
    if (*(_QWORD *)(v80 + 24) >= v86)
    {
      if ((v81 & 1) == 0)
        sub_21FA79C98();
    }
    else
    {
      sub_21FA75724(v86, v81);
      v89 = sub_21FA73EB0(v110, 1);
      if ((v87 & 1) != (v90 & 1))
        goto LABEL_47;
      v83 = v89;
    }
    v3 = v114;
    v91 = v120;
    if ((v87 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v114 + 40))(v120[7] + *(_QWORD *)(v114 + 72) * v83, v100, v2);
    }
    else
    {
      v120[(v83 >> 6) + 8] |= 1 << v83;
      v92 = v91[6] + 16 * v83;
      *(_QWORD *)v92 = v110;
      *(_BYTE *)(v92 + 8) = 1;
      v79(v91[7] + *(_QWORD *)(v3 + 72) * v83, v100, v2);
      v93 = v91[2];
      v94 = __OFADD__(v93, 1);
      v95 = v93 + 1;
      if (v94)
        goto LABEL_45;
      v91[2] = v95;
    }
    v115 = (uint64_t)v120;
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_21FC5BE20();
  __break(1u);
  return result;
}

uint64_t sub_21FAC7410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  unint64_t v46;
  char v47;
  _BOOL4 v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  _BOOL8 v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t, uint64_t);
  void (*v100)(char *, uint64_t);
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char *v107;
  _QWORD *v108;

  v2 = sub_21FC5AAAC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v92 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v82 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v107 = (char *)&v82 - v9;
  sub_21FA2ED54(0, (unint64_t *)&qword_25406AAE8, v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v93 = (char *)&v82 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v91 = (uint64_t)&v82 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v90 = (char *)&v82 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v82 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v96 = (char *)&v82 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v82 - v26;
  v83 = type metadata accessor for ClinicalSharingCategoryNodeInfo();
  MEMORY[0x24BDAC7A8](v83);
  v30 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = *(_QWORD *)(a1 + 16);
  if (!v86)
    return MEMORY[0x24BEE4B00];
  v31 = 0;
  v85 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v84 = *(_QWORD *)(v29 + 72);
  v104 = MEMORY[0x24BEE4B00];
  v97 = v3;
  v98 = v8;
  v101 = v27;
  v102 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = v14;
  v95 = v23;
  while (1)
  {
    sub_21FA2D120(v85 + v84 * v31, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingCategoryNodeInfo);
    if (qword_25553D620 != -1)
      swift_once();
    v32 = *(_QWORD *)(qword_255572F38 + 16);
    if (v32)
      break;
LABEL_4:
    ++v31;
    sub_21FA326EC((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingCategoryNodeInfo);
    if (v31 == v86)
      return v104;
  }
  v88 = v31;
  v103 = *(int *)(v83 + 28);
  v87 = swift_bridgeObjectRetain();
  v33 = (char *)(v87 + 40);
  v34 = (uint64_t)v90;
  v35 = (uint64_t)v96;
  while (1)
  {
    v37 = *((_QWORD *)v33 - 1);
    v38 = *v33;
    v39 = *(_QWORD *)&v30[v103];
    v40 = *(_QWORD *)(v39 + 16);
    v106 = *v33;
    v105 = v37;
    if (v40 && (v41 = sub_21FA73EB0(v37, v38), (v42 & 1) != 0))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v27, *(_QWORD *)(v39 + 56) + *(_QWORD *)(v3 + 72) * v41, v2);
      v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v43(v27, 0, 1, v2);
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v43(v27, 1, 1, v2);
    }
    sub_21FA7187C((uint64_t)v27, v35);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v44(v35, 1, v2) != 1)
      break;
    v36 = v35;
    v27 = v101;
    v30 = v102;
LABEL_10:
    sub_21FA71828(v36);
    sub_21FA71828((uint64_t)v27);
    v33 += 16;
    if (!--v32)
    {
      swift_bridgeObjectRelease();
      v31 = v88;
      goto LABEL_4;
    }
  }
  v99 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  v99(v107, v35, v2);
  v45 = v104;
  if (*(_QWORD *)(v104 + 16) && (v46 = sub_21FA73EB0(v105, v106), (v47 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v23, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v3 + 72) * v46, v2);
    v43(v23, 0, 1, v2);
    v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v44)(v23, 1, v2) == 1;
  }
  else
  {
    v48 = 1;
    v43(v23, 1, 1, v2);
  }
  sub_21FA7187C((uint64_t)v23, v34);
  v49 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v50 = v34;
  v51 = v98;
  v49(v98, v107, v2);
  if (v48)
  {
    v100 = *(void (**)(char *, uint64_t))(v3 + 8);
    v100(v51, v2);
    sub_21FA71828(v50);
    v34 = v50;
  }
  else
  {
    v52 = v32;
    v53 = v43;
    v54 = v91;
    sub_21FA7187C(v50, v91);
    if (v44(v54, 1, v2) == 1)
      goto LABEL_49;
    v55 = v98;
    v94 = sub_21FC5AA7C();
    v56 = *(void (**)(char *, uint64_t))(v97 + 8);
    v56(v55, v2);
    sub_21FA71828(v50);
    v100 = v56;
    v56((char *)v54, v2);
    v34 = v50;
    v43 = v53;
    v32 = v52;
    if ((v94 & 1) == 0)
    {
      v35 = (uint64_t)v96;
      v3 = v97;
      v23 = v95;
LABEL_43:
      v27 = v101;
      v30 = v102;
LABEL_44:
      v100(v107, v2);
      v36 = (uint64_t)v23;
      goto LABEL_10;
    }
  }
  v57 = (uint64_t)v93;
  v49(v93, v107, v2);
  v43((char *)v57, 0, 1, v2);
  v58 = v44(v57, 1, v2);
  v23 = v95;
  if (v58 == 1)
  {
    sub_21FA71828(v57);
    v59 = v104;
    swift_bridgeObjectRetain();
    v60 = sub_21FA73EB0(v105, v106);
    v62 = v61;
    swift_bridgeObjectRelease();
    if ((v62 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v108 = (_QWORD *)v59;
      v3 = v97;
      v27 = v101;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_21FA79C98();
        v59 = (uint64_t)v108;
      }
      v64 = (uint64_t)v89;
      v99(v89, *(_QWORD *)(v59 + 56) + *(_QWORD *)(v3 + 72) * v60, v2);
      v104 = v59;
      sub_21FBAE884(v60, v59);
      swift_bridgeObjectRelease();
      v65 = 0;
    }
    else
    {
      v65 = 1;
      v3 = v97;
      v64 = (uint64_t)v89;
      v27 = v101;
    }
    v43((char *)v64, v65, 1, v2);
    sub_21FA71828(v64);
    v35 = (uint64_t)v96;
    v30 = v102;
    v34 = (uint64_t)v90;
    goto LABEL_44;
  }
  v99(v92, v57, v2);
  v66 = (_QWORD *)v104;
  v67 = swift_isUniquelyReferenced_nonNull_native();
  v108 = v66;
  v69 = sub_21FA73EB0(v105, v106);
  v70 = v66[2];
  v71 = (v68 & 1) == 0;
  v72 = v70 + v71;
  if (!__OFADD__(v70, v71))
  {
    v73 = v68;
    if (v66[3] >= v72)
    {
      v35 = (uint64_t)v96;
      if ((v67 & 1) == 0)
        sub_21FA79C98();
    }
    else
    {
      sub_21FA75724(v72, v67);
      v74 = sub_21FA73EB0(v105, v106);
      v35 = (uint64_t)v96;
      if ((v73 & 1) != (v75 & 1))
        goto LABEL_50;
      v69 = v74;
    }
    v3 = v97;
    v76 = v108;
    if ((v73 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v97 + 40))(v108[7] + *(_QWORD *)(v97 + 72) * v69, v92, v2);
    }
    else
    {
      v108[(v69 >> 6) + 8] |= 1 << v69;
      v77 = v76[6] + 16 * v69;
      *(_QWORD *)v77 = v105;
      *(_BYTE *)(v77 + 8) = v106;
      v99((char *)(v76[7] + *(_QWORD *)(v3 + 72) * v69), (uint64_t)v92, v2);
      v78 = v76[2];
      v79 = __OFADD__(v78, 1);
      v80 = v78 + 1;
      if (v79)
        goto LABEL_48;
      v76[2] = v80;
    }
    v104 = (uint64_t)v108;
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  result = sub_21FC5BE20();
  __break(1u);
  return result;
}

unint64_t sub_21FAC7BF4()
{
  unint64_t result;

  result = qword_25406B9D8;
  if (!qword_25406B9D8)
  {
    result = MEMORY[0x2207D0F78](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25406B9D8);
  }
  return result;
}

unint64_t sub_21FAC7C38()
{
  unint64_t result;

  result = qword_255540D90;
  if (!qword_255540D90)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6E978, &type metadata for ClinicalSharingDocumentReferenceInfoError);
    atomic_store(result, (unint64_t *)&qword_255540D90);
  }
  return result;
}

unint64_t sub_21FAC7C7C()
{
  unint64_t result;

  result = qword_25406BAD0;
  if (!qword_25406BAD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25406BAD0);
  }
  return result;
}

uint64_t HTTPMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21FAC7CE8 + 4 * byte_21FC61EF0[*v0]))(0x5443454E4E4F43, 0xE700000000000000);
}

uint64_t sub_21FAC7CE8()
{
  return 0x4554454C4544;
}

uint64_t sub_21FAC7CFC()
{
  return 5522759;
}

uint64_t sub_21FAC7D0C()
{
  return 1145128264;
}

uint64_t sub_21FAC7D1C()
{
  return 0x534E4F4954504FLL;
}

uint64_t sub_21FAC7D30()
{
  return 1414745936;
}

uint64_t sub_21FAC7D40()
{
  return 5526864;
}

uint64_t sub_21FAC7D50()
{
  return 0x4543415254;
}

HealthRecordsDaemon::HTTPMethod_optional __swiftcall HTTPMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthRecordsDaemon::HTTPMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_21FC5BCD0();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_21FAC7DBC(char *a1)
{
  sub_21FA2E104(*a1);
}

unint64_t sub_21FAC7DCC()
{
  unint64_t result;

  result = qword_255540D98;
  if (!qword_255540D98)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for HTTPMethod, &type metadata for HTTPMethod);
    atomic_store(result, (unint64_t *)&qword_255540D98);
  }
  return result;
}

void sub_21FAC7E10()
{
  char *v0;

  sub_21FC3E9F4(0, *v0);
}

void sub_21FAC7E1C(uint64_t a1)
{
  char *v1;

  sub_21FC3E924(a1, *v1);
}

void sub_21FAC7E24(uint64_t a1)
{
  char *v1;

  sub_21FC3E9F4(a1, *v1);
}

HealthRecordsDaemon::HTTPMethod_optional sub_21FAC7E2C(Swift::String *a1)
{
  return HTTPMethod.init(rawValue:)(*a1);
}

uint64_t sub_21FAC7E38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_21FAC7E68 + 4 * byte_21FC61EF8[*v0]))();
}

void sub_21FAC7E68(_QWORD *a1@<X8>)
{
  *a1 = 0x4554454C4544;
  a1[1] = 0xE600000000000000;
}

void sub_21FAC7E80(_QWORD *a1@<X8>)
{
  *a1 = 5522759;
  a1[1] = 0xE300000000000000;
}

void sub_21FAC7EE0(_QWORD *a1@<X8>)
{
  *a1 = 0x4543415254;
  a1[1] = 0xE500000000000000;
}

uint64_t storeEnumTagSinglePayload for HTTPMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_21FAC7F44 + 4 * byte_21FC61F05[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_21FAC7F78 + 4 * byte_21FC61F00[v4]))();
}

uint64_t sub_21FAC7F78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FAC7F80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FAC7F88);
  return result;
}

uint64_t sub_21FAC7F94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FAC7F9CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_21FAC7FA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FAC7FA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HTTPMethod()
{
  return &type metadata for HTTPMethod;
}

uint64_t Catalog.content.getter()
{
  return swift_bridgeObjectRetain();
}

HealthRecordsDaemon::Catalog __swiftcall Catalog.init(entries:)(HealthRecordsDaemon::Catalog entries)
{
  HealthRecordsDaemon::Catalog *v1;

  v1->content._rawValue = entries.content._rawValue;
  return entries;
}

uint64_t sub_21FAC7FD4()
{
  return 0x746E65746E6F63;
}

uint64_t sub_21FAC7FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_21FC5BDF0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21FAC8080()
{
  sub_21FAC81FC();
  return sub_21FC5BF10();
}

uint64_t sub_21FAC80A8()
{
  sub_21FAC81FC();
  return sub_21FC5BF1C();
}

uint64_t Catalog.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_21FAC83F4(0, &qword_255540DA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FAC81FC();
  sub_21FC5BEEC();
  v10[1] = v8;
  sub_21FAC8240();
  sub_21FAC8450(&qword_255540DB8, &qword_255540DC0, (uint64_t)&protocol conformance descriptor for CatalogEntry, MEMORY[0x24BEE12A0]);
  sub_21FC5BD9C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_21FAC81FC()
{
  unint64_t result;

  result = qword_255540DA8;
  if (!qword_255540DA8)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC62110, &type metadata for Catalog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540DA8);
  }
  return result;
}

void sub_21FAC8240()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255540DB0)
  {
    type metadata accessor for CatalogEntry();
    v0 = sub_21FC5B7F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255540DB0);
  }
}

uint64_t Catalog.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_21FAC83F4(0, &qword_255540DC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FAC81FC();
  sub_21FC5BEE0();
  if (!v2)
  {
    sub_21FAC8240();
    sub_21FAC8450(&qword_255540DD0, &qword_255540DD8, (uint64_t)&protocol conformance descriptor for CatalogEntry, MEMORY[0x24BEE12D0]);
    sub_21FC5BD30();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_21FAC83F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_21FAC81FC();
    v7 = a3(a1, &type metadata for Catalog.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_21FAC8450(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_21FAC8240();
    v10 = v9;
    v11 = sub_21FAC84C8(a2, a3);
    result = MEMORY[0x2207D0F78](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FAC84C8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CatalogEntry();
    result = MEMORY[0x2207D0F78](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FAC8508@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Catalog.init(from:)(a1, a2);
}

uint64_t sub_21FAC851C(_QWORD *a1)
{
  return Catalog.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Catalog()
{
  return &type metadata for Catalog;
}

uint64_t storeEnumTagSinglePayload for Catalog.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21FAC8580 + 4 * byte_21FC61FE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21FAC85A0 + 4 * byte_21FC61FE5[v4]))();
}

_BYTE *sub_21FAC8580(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21FAC85A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21FAC85A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21FAC85B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21FAC85B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21FAC85C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Catalog.CodingKeys()
{
  return &type metadata for Catalog.CodingKeys;
}

unint64_t sub_21FAC85E0()
{
  unint64_t result;

  result = qword_255540DE0;
  if (!qword_255540DE0)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC620E8, &type metadata for Catalog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540DE0);
  }
  return result;
}

unint64_t sub_21FAC8628()
{
  unint64_t result;

  result = qword_255540DE8;
  if (!qword_255540DE8)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC62058, &type metadata for Catalog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540DE8);
  }
  return result;
}

unint64_t sub_21FAC8670()
{
  unint64_t result;

  result = qword_255540DF0;
  if (!qword_255540DF0)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC62080, &type metadata for Catalog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255540DF0);
  }
  return result;
}

uint64_t sub_21FAC86B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_21FC5A764();
  if (!result || (result = sub_21FC5A788(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_21FC5A77C();
      sub_21FC5B514();
      sub_21FA2A08C(&qword_25553FFE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_21FC5B3D0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_21FAC8778(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[10];

  v7[9] = *MEMORY[0x24BDAC8D0];
  v3 = sub_21FC5B514();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_21FC5B3F4();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v7[3] = (char *)v7 - v6;
  __asm { BR              X9 }
}

void sub_21FAC8CFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25553FE08)
  {
    sub_21FAC8D50();
    v0 = sub_21FC5BDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25553FE08);
  }
}

unint64_t sub_21FAC8D50()
{
  unint64_t result;

  result = qword_25553FE10;
  if (!qword_25553FE10)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25553FE10);
  }
  return result;
}

void sub_21FAC8DA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BA60)
  {
    v0 = sub_21FC5B7F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BA60);
  }
}

uint64_t sub_21FAC8DF8@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (**v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v29)(void (**)(char *, uint64_t), char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  void (**v47)(char *, uint64_t);
  uint64_t v48;

  v44 = a1;
  v41 = a2;
  v2 = sub_21FC5ABF0();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_21FC5A83C();
  v47 = *(void (***)(char *, uint64_t))(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - v11;
  v13 = sub_21FC5AAAC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v40 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v38 = (char *)&v38 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v39 = (uint64_t)&v38 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v43 = (char *)&v38 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (void (**)(char *, uint64_t))((char *)&v38 - v23);
  v42 = (id)sub_21FC5A7A0();
  v25 = objc_msgSend(v42, sel_hk_negativeComponents);
  sub_21FC5A7AC();

  sub_21FC5AB90();
  v26 = v14;
  v47[1](v6, v48);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  result = v27(v12, 1, v13);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v48 = v26;
  v29 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v26 + 32);
  v47 = v24;
  v29(v24, v12, v13);
  v31 = v45;
  v30 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v4, *MEMORY[0x24BDCF220], v46);
  sub_21FC5AB9C();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v30);
  result = v27(v10, 1, v13);
  if ((_DWORD)result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v32 = v43;
  v29((void (**)(char *, uint64_t))v43, v10, v13);
  if (v44 == 9)
  {
    v33 = v39;
    v35 = (uint64_t)v47;
    sub_21FAC96CC((uint64_t)v47, v39);
    v34 = v38;
  }
  else
  {
    v34 = v38;
    v33 = v39;
    v35 = (uint64_t)v47;
    if (v44 == 8)
    {
      sub_21FC5AB30();
    }
    else if (v44 == 7)
    {
      sub_21FC5AB30();
      sub_21FC5AA4C();
      sub_21FC5AA58();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v13);
    }
    else
    {
      sub_21FAC9234(v44, (uint64_t)v47, v39);
    }
  }
  v36 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v34, v33, v13);
  sub_21FC5AB30();
  sub_21FC5A68C();

  v37 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v37(v33, v13);
  v37((uint64_t)v32, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v35, v13);
}

uint64_t sub_21FAC9234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v52 = a1;
  v5 = sub_21FC5AB60();
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21FC5AB54();
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_21FC5AB3C();
  v9 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)&v41 - v14;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553F0B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], v12);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v41 - v16;
  sub_21FA2D1A0(0, &qword_25553F0B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v12);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v41 - v19;
  v21 = sub_21FC5A83C();
  v42 = *(_QWORD *)(v21 - 8);
  v43 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v50 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_21FC5ABF0();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x24BDCF278], v23);
  v54 = a2;
  v27 = sub_21FC5ABFC();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if (v27 == v52 + 1)
    return sub_21FC5AB30();
  v52 = a3;
  v29 = sub_21FC5AC08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v20, 1, 1, v29);
  v30 = sub_21FC5AC5C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 1, 1, v30);
  sub_21FC5A824();
  v31 = *MEMORY[0x24BDCF020];
  v41 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v11, v31, v53);
  v33 = v44;
  v32 = v45;
  v34 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, *MEMORY[0x24BDCF070], v46);
  v36 = v47;
  v35 = v48;
  v37 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x24BDCF0B0], v49);
  v38 = v51;
  sub_21FC5ABCC();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v53);
  v39 = sub_21FC5AAAC();
  v40 = *(_QWORD *)(v39 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v50, v43);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v52, v51, v39);
  }
  return result;
}

uint64_t sub_21FAC96CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a2;
  v21 = a1;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - v3;
  v19 = sub_21FC5A83C();
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, qword_255540490, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = sub_21FC5ABF0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21FC60A70;
  v13 = v12 + v11;
  v14 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x24BDCF228], v8);
  v14(v13 + v10, *MEMORY[0x24BDCF240], v8);
  v14(v13 + 2 * v10, *MEMORY[0x24BDCF250], v8);
  sub_21FAC98F8(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_21FC5AB48();
  swift_bridgeObjectRelease();
  sub_21FC5AB84();
  v15 = sub_21FC5AAAC();
  v16 = *(_QWORD *)(v15 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v20, v4, v15);
  }
  return result;
}

uint64_t sub_21FAC98F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_21FC5ABF0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_21FAC9E28(0, &qword_255540E00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], &qword_255540E08, MEMORY[0x24BDCF2A8]);
    v9 = sub_21FC5BB5C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_21FA2A08C(&qword_255540E08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v14 = sub_21FC5B58C();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_21FA2A08C(&qword_255540E10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_21FC5B5D4();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

unint64_t sub_21FAC9B78(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21FC5BC7C();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_21FAC9E28(0, &qword_255540E18, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], &qword_255540E20, MEMORY[0x24BDB9B70]);
      result = sub_21FC5BB5C();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_21FC5BC7C();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2207D057C](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_21FC5B1B4();
    sub_21FA2A08C(&qword_255540E20, v8, MEMORY[0x24BDB9B70]);
    result = sub_21FC5B58C();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_21FA2A08C(&qword_255540E28, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_21FC5B5D4();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_21FAC9E28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_21FA2A08C(a4, a3, a5);
    v9 = sub_21FC5BB68();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_21FAC9EA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  *(_BYTE *)(v4 + 392) = a3;
  *(_QWORD *)(v4 + 232) = a1;
  *(_QWORD *)(v4 + 240) = a2;
  *(_QWORD *)(v4 + 248) = type metadata accessor for HTTPError();
  *(_QWORD *)(v4 + 256) = swift_task_alloc();
  *(_QWORD *)(v4 + 264) = swift_task_alloc();
  *(_QWORD *)(v4 + 272) = swift_task_alloc();
  *(_QWORD *)(v4 + 280) = swift_task_alloc();
  *(_QWORD *)(v4 + 288) = swift_task_alloc();
  *(_QWORD *)(v4 + 296) = swift_task_alloc();
  *(_QWORD *)(v4 + 304) = type metadata accessor for ClinicalDocumentDownloadRequest();
  v7 = swift_task_alloc();
  v8 = *v3;
  v9 = v3[1];
  *(_QWORD *)(v4 + 312) = v7;
  *(_QWORD *)(v4 + 320) = v8;
  v10 = v3[2];
  *(_QWORD *)(v4 + 328) = v9;
  *(_QWORD *)(v4 + 336) = v10;
  *(_QWORD *)(v4 + 144) = v8;
  *(_QWORD *)(v4 + 152) = v9;
  *(_QWORD *)(v4 + 160) = v10;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 344) = v11;
  *v11 = v4;
  v11[1] = sub_21FAC9FBC;
  return sub_21FACBD68(v7, a2, a3, 0);
}

uint64_t sub_21FAC9FBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FACA020()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v3;

  v1 = v0[39];
  v0[5] = v0[38];
  v0[6] = (uint64_t)&off_24E48CEB8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_21FA2D120(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
  v3 = (_QWORD *)swift_task_alloc();
  v0[45] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_21FACA0C4;
  return WebRequestPerformer.performFileDownload(for:timeoutInterval:cachePolicy:attribution:)(v0[29], (uint64_t)(v0 + 2), 0, 1, 0, 1, 1);
}

uint64_t sub_21FACA0C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 368) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_21FACA130()
{
  uint64_t v0;

  sub_21FA326EC(*(_QWORD *)(v0 + 312), (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FACA1C0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FACA248()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  void *v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51[2];

  v1 = *(void **)(v0 + 368);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(_QWORD *)(v0 + 216) = v1;
  v2 = v1;
  sub_21FA2CDB4();
  if (!swift_dynamicCast())
  {

    if (qword_25406B7F8 != -1)
      swift_once();
    v14 = *(void **)(v0 + 368);
    v15 = sub_21FC5AFD4();
    __swift_project_value_buffer(v15, (uint64_t)qword_25406D830);
    v16 = v14;
    v17 = v14;
    v18 = sub_21FC5AFC8();
    v19 = sub_21FC5B97C();
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(void **)(v0 + 368);
    if (v20)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v51[0] = v23;
      *(_DWORD *)v22 = 136315138;
      *(_QWORD *)(v0 + 208) = v21;
      v24 = v21;
      v25 = v21;
      sub_21FC5BE08();
      v26 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_21FC5BAF0();
      swift_unknownObjectRelease();
      v27 = sub_21FC5B64C();
      v29 = v28;

      *(_QWORD *)(v0 + 224) = sub_21FABDCF8(v27, v29, v51);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v18, v19, "ClinicalDocumentDownloadHandler performFileDownload Error %s : re-throwing error", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v23, -1, -1);
      MEMORY[0x2207D105C](v22, -1, -1);
    }
    else
    {

    }
    v44 = *(_QWORD *)(v0 + 312);
    swift_willThrow();
    sub_21FA326EC(v44, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
    goto LABEL_21;
  }
  v3 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 280);

  sub_21FA2D23C(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  sub_21FA2D120(v3, v5, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v7 = *(_QWORD **)(v0 + 280);
  if (EnumCaseMultiPayload != 2)
  {
    sub_21FA326EC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
LABEL_12:
    if (qword_25406B7F8 != -1)
      swift_once();
    v30 = *(_QWORD *)(v0 + 288);
    v31 = *(_QWORD *)(v0 + 272);
    v32 = sub_21FC5AFD4();
    __swift_project_value_buffer(v32, (uint64_t)qword_25406D830);
    sub_21FA2D120(v30, v31, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    v33 = sub_21FC5AFC8();
    v34 = sub_21FC5B97C();
    v35 = os_log_type_enabled(v33, v34);
    v36 = *(_QWORD *)(v0 + 272);
    if (v35)
    {
      v38 = *(_QWORD *)(v0 + 256);
      v37 = *(_QWORD *)(v0 + 264);
      v39 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v51[0] = v50;
      *(_DWORD *)v39 = 136315138;
      sub_21FA2D120(v36, v37, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
      sub_21FA2D120(v37, v38, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
      sub_21FC5BE08();
      v40 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_21FC5BAF0();
      swift_unknownObjectRelease();
      v41 = sub_21FC5B64C();
      v43 = v42;
      sub_21FA326EC(v37, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
      *(_QWORD *)(v0 + 200) = sub_21FABDCF8(v41, v43, v51);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      sub_21FA326EC(v36, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
      _os_log_impl(&dword_21FA27000, v33, v34, "ClinicalDocumentDownloadHandler performFileDownload HTTPError %s : re-throwing error", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v50, -1, -1);
      MEMORY[0x2207D105C](v39, -1, -1);
    }
    else
    {
      sub_21FA326EC(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    }

    v10 = *(_QWORD *)(v0 + 312);
    v45 = *(_QWORD *)(v0 + 288);
    sub_21FA2A08C(&qword_255540E68, (uint64_t (*)(uint64_t))type metadata accessor for HTTPError, (uint64_t)&protocol conformance descriptor for HTTPError);
    swift_allocError();
    sub_21FA2D120(v45, v46, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    swift_willThrow();
    v13 = v45;
    goto LABEL_20;
  }
  v8 = v7[1];
  if (!v8)
    goto LABEL_12;
  *(_QWORD *)(v0 + 184) = *v7;
  *(_QWORD *)(v0 + 192) = v8;
  *(_QWORD *)(v0 + 168) = 0x20726572616542;
  *(_QWORD *)(v0 + 176) = 0xE700000000000000;
  sub_21FACD1BC();
  sub_21FACD200();
  v9 = sub_21FC5B5A4();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
    goto LABEL_12;
  if ((*(_BYTE *)(v0 + 392) & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 312);
    v11 = *(_QWORD *)(v0 + 288);
    sub_21FACD244();
    swift_allocError();
    *v12 = 2;
    swift_willThrow();
    v13 = v11;
LABEL_20:
    sub_21FA326EC(v13, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    sub_21FA326EC(v10, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);

LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v48 = *(_QWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 136) = v48;
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v49;
  *v49 = v0;
  v49[1] = sub_21FACA950;
  return sub_21FAC9EA8(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), 1);
}

uint64_t sub_21FACA950()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FACA9B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 312);
  sub_21FA326EC(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  sub_21FA326EC(v1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FACAA60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 312);
  sub_21FA326EC(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  sub_21FA326EC(v1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FACAB14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  *(_BYTE *)(v3 + 456) = a2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = type metadata accessor for WebRequestResponseError.ErrorType(0);
  *(_QWORD *)(v3 + 264) = swift_task_alloc();
  *(_QWORD *)(v3 + 272) = type metadata accessor for HTTPError();
  *(_QWORD *)(v3 + 280) = swift_task_alloc();
  *(_QWORD *)(v3 + 288) = swift_task_alloc();
  *(_QWORD *)(v3 + 296) = type metadata accessor for WebRequestResponseError(0);
  *(_QWORD *)(v3 + 304) = swift_task_alloc();
  *(_QWORD *)(v3 + 312) = swift_task_alloc();
  *(_QWORD *)(v3 + 320) = swift_task_alloc();
  *(_QWORD *)(v3 + 328) = swift_task_alloc();
  *(_QWORD *)(v3 + 336) = swift_task_alloc();
  *(_QWORD *)(v3 + 344) = type metadata accessor for ClinicalDocumentDownloadRequest();
  v6 = swift_task_alloc();
  v7 = *v2;
  v8 = v2[1];
  *(_QWORD *)(v3 + 352) = v6;
  *(_QWORD *)(v3 + 360) = v7;
  v9 = v2[2];
  *(_QWORD *)(v3 + 368) = v8;
  *(_QWORD *)(v3 + 376) = v9;
  *(_QWORD *)(v3 + 152) = v7;
  *(_QWORD *)(v3 + 160) = v8;
  *(_QWORD *)(v3 + 168) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 384) = v10;
  *v10 = v3;
  v10[1] = sub_21FACAC74;
  return sub_21FACBD68(v6, a1, a2, 1);
}

uint64_t sub_21FACAC74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FACACD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[44];
  v2 = v0[45];
  v0[13] = v0[43];
  v0[14] = (uint64_t)&off_24E48CEB8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 10);
  sub_21FA2D120(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
  v4 = swift_task_alloc();
  v0[50] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v0 + 10;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 1;
  *(_QWORD *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 56) = 1;
  *(_QWORD *)(v4 + 64) = 1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[51] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_21FACADC8;
  return sub_21FC5BDFC();
}

uint64_t sub_21FACADC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 416) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 80);
  }
  return swift_task_switch();
}

uint64_t sub_21FACAE40()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  _BYTE *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1 >> 60 != 15)
  {
    v22 = *(_QWORD *)(v0 + 352);
    v42 = *(_QWORD *)(v0 + 56);
    sub_21FA32314(v42, v1);
    sub_21FACD288(v0 + 16);
    sub_21FA326EC(v22, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v42, v1);
  }
  sub_21FACD244();
  v2 = (void *)swift_allocError();
  *v3 = 1;
  swift_willThrow();
  sub_21FACD288(v0 + 16);
  *(_QWORD *)(v0 + 232) = v2;
  v4 = v2;
  sub_21FA2CDB4();
  if (!swift_dynamicCast())
  {
    v17 = *(_QWORD *)(v0 + 352);
LABEL_21:
    sub_21FA326EC(v17, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 264);

  sub_21FA2D23C(v5, v6, type metadata accessor for WebRequestResponseError);
  v9 = type metadata accessor for WebRequestResponseError.ErrorType;
  sub_21FA2D120(v6 + *(int *)(v7 + 20), v8, type metadata accessor for WebRequestResponseError.ErrorType);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v10 = (uint64_t *)(v0 + 264);
LABEL_14:
    sub_21FA326EC(*v10, v9);
    if (qword_25406B7F8 != -1)
      swift_once();
    v24 = *(_QWORD *)(v0 + 320);
    v25 = *(_QWORD *)(v0 + 328);
    v26 = sub_21FC5AFD4();
    __swift_project_value_buffer(v26, (uint64_t)qword_25406D830);
    sub_21FA2D120(v25, v24, type metadata accessor for WebRequestResponseError);
    v27 = sub_21FC5AFC8();
    v28 = sub_21FC5B97C();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 320);
    if (v29)
    {
      v32 = *(_QWORD *)(v0 + 304);
      v31 = *(_QWORD *)(v0 + 312);
      v33 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v44 = v43;
      *(_DWORD *)v33 = 136315138;
      sub_21FA2D120(v30, v31, type metadata accessor for WebRequestResponseError);
      sub_21FA2D120(v31, v32, type metadata accessor for WebRequestResponseError);
      sub_21FC5BE08();
      v34 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_21FC5BAF0();
      swift_unknownObjectRelease();
      v35 = sub_21FC5B64C();
      v37 = v36;
      sub_21FA326EC(v31, type metadata accessor for WebRequestResponseError);
      *(_QWORD *)(v0 + 240) = sub_21FABDCF8(v35, v37, &v44);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      sub_21FA326EC(v30, type metadata accessor for WebRequestResponseError);
      _os_log_impl(&dword_21FA27000, v27, v28, "ClinicalDocumentDownloadHandler performDataRequest WebRequestResponseError %s : re-throwing error", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v43, -1, -1);
      MEMORY[0x2207D105C](v33, -1, -1);
    }
    else
    {
      sub_21FA326EC(*(_QWORD *)(v0 + 320), type metadata accessor for WebRequestResponseError);
    }

    v17 = *(_QWORD *)(v0 + 352);
    v38 = *(_QWORD *)(v0 + 328);
    sub_21FA2A08C(&qword_25553E2A8, type metadata accessor for WebRequestResponseError, (uint64_t)&protocol conformance descriptor for WebRequestResponseError);
    swift_allocError();
    sub_21FA2D120(v38, v39, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    v21 = v38;
    goto LABEL_20;
  }
  v10 = (uint64_t *)(v0 + 288);
  v12 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 288);
  sub_21FA2D23C(*(_QWORD *)(v0 + 264), v11, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  sub_21FA2D120(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v14 = *(_QWORD **)(v0 + 280);
  if (EnumCaseMultiPayload != 2)
  {
    v9 = (uint64_t (*)(_QWORD))type metadata accessor for HTTPError;
    sub_21FA326EC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    goto LABEL_14;
  }
  v15 = v14[1];
  if (!v15)
    goto LABEL_13;
  *(_QWORD *)(v0 + 200) = *v14;
  *(_QWORD *)(v0 + 208) = v15;
  *(_QWORD *)(v0 + 216) = 0x20726572616542;
  *(_QWORD *)(v0 + 224) = 0xE700000000000000;
  sub_21FACD1BC();
  sub_21FACD200();
  v16 = sub_21FC5B5A4();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
LABEL_13:
    v9 = (uint64_t (*)(_QWORD))type metadata accessor for HTTPError;
    goto LABEL_14;
  }
  if ((*(_BYTE *)(v0 + 456) & 1) != 0)
  {
    v17 = *(_QWORD *)(v0 + 352);
    v18 = *(_QWORD *)(v0 + 328);
    v19 = *(_QWORD *)(v0 + 288);
    swift_allocError();
    *v20 = 2;
    swift_willThrow();
    sub_21FA326EC(v19, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    v21 = v18;
LABEL_20:
    sub_21FA326EC(v21, type metadata accessor for WebRequestResponseError);
    goto LABEL_21;
  }
  v40 = *(_QWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 192) = v40;
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v41;
  *v41 = v0;
  v41[1] = sub_21FACBB04;
  return sub_21FACAB14(*(_QWORD *)(v0 + 248), 1);
}

uint64_t sub_21FACB4C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  v1 = *(void **)(v0 + 416);
  *(_QWORD *)(v0 + 232) = v1;
  v2 = v1;
  sub_21FA2CDB4();
  if (!swift_dynamicCast())
  {
    v15 = *(_QWORD *)(v0 + 352);
LABEL_19:
    sub_21FA326EC(v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 264);

  sub_21FA2D23C(v3, v4, type metadata accessor for WebRequestResponseError);
  v7 = type metadata accessor for WebRequestResponseError.ErrorType;
  sub_21FA2D120(v4 + *(int *)(v5 + 20), v6, type metadata accessor for WebRequestResponseError.ErrorType);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v8 = (uint64_t *)(v0 + 264);
LABEL_12:
    sub_21FA326EC(*v8, v7);
    if (qword_25406B7F8 != -1)
      swift_once();
    v21 = *(_QWORD *)(v0 + 320);
    v20 = *(_QWORD *)(v0 + 328);
    v22 = sub_21FC5AFD4();
    __swift_project_value_buffer(v22, (uint64_t)qword_25406D830);
    sub_21FA2D120(v20, v21, type metadata accessor for WebRequestResponseError);
    v23 = sub_21FC5AFC8();
    v24 = sub_21FC5B97C();
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(_QWORD *)(v0 + 320);
    if (v25)
    {
      v28 = *(_QWORD *)(v0 + 304);
      v27 = *(_QWORD *)(v0 + 312);
      v29 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v40 = v39;
      *(_DWORD *)v29 = 136315138;
      sub_21FA2D120(v26, v27, type metadata accessor for WebRequestResponseError);
      sub_21FA2D120(v27, v28, type metadata accessor for WebRequestResponseError);
      sub_21FC5BE08();
      v30 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_21FC5BAF0();
      swift_unknownObjectRelease();
      v31 = sub_21FC5B64C();
      v33 = v32;
      sub_21FA326EC(v27, type metadata accessor for WebRequestResponseError);
      *(_QWORD *)(v0 + 240) = sub_21FABDCF8(v31, v33, &v40);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      sub_21FA326EC(v26, type metadata accessor for WebRequestResponseError);
      _os_log_impl(&dword_21FA27000, v23, v24, "ClinicalDocumentDownloadHandler performDataRequest WebRequestResponseError %s : re-throwing error", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v39, -1, -1);
      MEMORY[0x2207D105C](v29, -1, -1);
    }
    else
    {
      sub_21FA326EC(*(_QWORD *)(v0 + 320), type metadata accessor for WebRequestResponseError);
    }

    v15 = *(_QWORD *)(v0 + 352);
    v34 = *(_QWORD *)(v0 + 328);
    sub_21FA2A08C(&qword_25553E2A8, type metadata accessor for WebRequestResponseError, (uint64_t)&protocol conformance descriptor for WebRequestResponseError);
    swift_allocError();
    sub_21FA2D120(v34, v35, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    v19 = v34;
    goto LABEL_18;
  }
  v8 = (uint64_t *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 288);
  sub_21FA2D23C(*(_QWORD *)(v0 + 264), v9, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  sub_21FA2D120(v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v12 = *(_QWORD **)(v0 + 280);
  if (EnumCaseMultiPayload != 2)
  {
    v7 = (uint64_t (*)(_QWORD))type metadata accessor for HTTPError;
    sub_21FA326EC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    goto LABEL_12;
  }
  v13 = v12[1];
  if (!v13)
    goto LABEL_11;
  *(_QWORD *)(v0 + 200) = *v12;
  *(_QWORD *)(v0 + 208) = v13;
  *(_QWORD *)(v0 + 216) = 0x20726572616542;
  *(_QWORD *)(v0 + 224) = 0xE700000000000000;
  sub_21FACD1BC();
  sub_21FACD200();
  v14 = sub_21FC5B5A4();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_11:
    v7 = (uint64_t (*)(_QWORD))type metadata accessor for HTTPError;
    goto LABEL_12;
  }
  if ((*(_BYTE *)(v0 + 456) & 1) != 0)
  {
    v15 = *(_QWORD *)(v0 + 352);
    v16 = *(_QWORD *)(v0 + 328);
    v17 = *(_QWORD *)(v0 + 288);
    sub_21FACD244();
    swift_allocError();
    *v18 = 2;
    swift_willThrow();
    sub_21FA326EC(v17, (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
    v19 = v16;
LABEL_18:
    sub_21FA326EC(v19, type metadata accessor for WebRequestResponseError);
    goto LABEL_19;
  }
  v37 = *(_QWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 192) = v37;
  v38 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v38;
  *v38 = v0;
  v38[1] = sub_21FACBB04;
  return sub_21FACAB14(*(_QWORD *)(v0 + 248), 1);
}

uint64_t sub_21FACBA5C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FACBB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 432) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 440) = a2;
    *(_QWORD *)(v6 + 448) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21FACBB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 328);
  sub_21FA326EC(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  sub_21FA326EC(v2, type metadata accessor for WebRequestResponseError);
  sub_21FA326EC(v1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);

  v3 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v3);
}

uint64_t sub_21FACBC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 328);
  sub_21FA326EC(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for HTTPError);
  sub_21FA326EC(v2, type metadata accessor for WebRequestResponseError);
  sub_21FA326EC(v1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ClinicalDocumentDownloadHandler.init(performer:accountStore:credential:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_21FACBD68(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 361) = a4;
  *(_BYTE *)(v5 + 360) = a3;
  *(_QWORD *)(v5 + 192) = a1;
  *(_QWORD *)(v5 + 200) = a2;
  sub_21FA2ED54(0, (unint64_t *)&qword_25406AAC8, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  *(_QWORD *)(v5 + 208) = swift_task_alloc();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_QWORD *)(v5 + 224) = swift_task_alloc();
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  *(_QWORD *)(v5 + 240) = type metadata accessor for ClinicalDocumentDownloadRequest();
  *(_QWORD *)(v5 + 248) = swift_task_alloc();
  sub_21FA2ED54(0, &qword_25406BE78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  *(_QWORD *)(v5 + 256) = swift_task_alloc();
  v6 = sub_21FC5AAF4();
  *(_QWORD *)(v5 + 264) = v6;
  *(_QWORD *)(v5 + 272) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 280) = swift_task_alloc();
  *(_QWORD *)(v5 + 288) = swift_task_alloc();
  *(_OWORD *)(v5 + 296) = *(_OWORD *)(v4 + 8);
  return swift_task_switch();
}

uint64_t sub_21FACBEA0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  char v8;
  _QWORD *v9;
  _BYTE *v11;
  uint64_t (*v12)(void);
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD **v18;
  uint64_t (*v19)();
  _QWORD *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = objc_msgSend(*(id *)(v0 + 200), sel_accountIdentifier);
  if (!v1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 56))(*(_QWORD *)(v0 + 256), 1, 1, *(_QWORD *)(v0 + 264));
    goto LABEL_6;
  }
  v2 = v1;
  v4 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  sub_21FC5AADC();

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v7(v6, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) == 1)
  {
LABEL_6:
    sub_21FA2EDA0(*(_QWORD *)(v0 + 256), &qword_25406BE78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    sub_21FACD244();
    swift_allocError();
    *v11 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  v8 = *(_BYTE *)(v0 + 360);
  v7(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  if ((v8 & 1) != 0)
  {
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v9;
    *v9 = v0;
    v9[1] = sub_21FACC360;
    return sub_21FBB968C(*(_QWORD *)(v0 + 288));
  }
  v13 = *(void **)(v0 + 304);
  *(_QWORD *)(v0 + 336) = v13;
  v14 = *(_QWORD *)(v0 + 248);
  v15 = *(void **)(v0 + 200);
  v16 = v13;
  sub_21FBC1E8C(v15, v14);
  if ((*(_BYTE *)(v0 + 361) & 1) != 0)
  {
    HKFHIRCredential.asAuthorizationHeader()();
    if (v43)
    {
      v17 = *(_QWORD *)(v0 + 248);
      if (*(_QWORD *)(v17 + 8))
      {
        v19 = sub_21FA31448();
        v20 = *v18;
        if (*v18)
        {
          v21 = v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v21 = v20;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v20 = sub_21FA7E100(0, v20[2] + 1, 1, v20);
            *v21 = v20;
          }
          v23 = v20[2];
          v24 = v20[3];
          v25 = v23 + 1;
          if (v23 >= v24 >> 1)
          {
            v41 = v23 + 1;
            v38 = v20;
            v39 = v20[2];
            v40 = sub_21FA7E100((_QWORD *)(v24 > 1), v23 + 1, 1, v38);
            v23 = v39;
            v25 = v41;
            v20 = v40;
            *v21 = v40;
          }
          v20[2] = v25;
          v26 = &v20[4 * v23];
          v26[4] = v42;
          v26[5] = v43;
          v26[6] = v44;
          v26[7] = v45;
        }
        ((void (*)(uint64_t, _QWORD))v19)(v0 + 120, 0);
      }
      else
      {
        sub_21FACD2EC();
        v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_21FC5EE30;
        *(_QWORD *)(v34 + 32) = v42;
        *(_QWORD *)(v34 + 40) = v43;
        *(_QWORD *)(v34 + 48) = v44;
        *(_QWORD *)(v34 + 56) = v45;
        *(_QWORD *)(v17 + 8) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v35 = *(_QWORD *)(v0 + 288);
      v36 = *(_QWORD *)(v0 + 264);
      v37 = *(_QWORD *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      sub_21FACD2BC(v42, v43);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 288);
      v32 = *(_QWORD *)(v0 + 264);
      v33 = *(_QWORD *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    }
    sub_21FA2D23C(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  v27 = *(void **)(v0 + 296);
  v28 = sub_21FC5AAC4();
  *(_QWORD *)(v0 + 344) = v28;
  *(_QWORD *)(v0 + 56) = v0 + 184;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_21FACC74C;
  v29 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v30 = (_QWORD *)(v0 + 80);
  v30[1] = 0x40000000;
  v30[2] = sub_21FAA9320;
  v30[3] = &block_descriptor_9;
  v30[4] = v29;
  objc_msgSend(v27, sel_fetchAccountWithIdentifier_completion_, v28, v30);
  return swift_continuation_await();
}

uint64_t sub_21FACC360(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 320) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 328) = a1;
  return swift_task_switch();
}

uint64_t sub_21FACC3D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  _QWORD **v8;
  uint64_t (*v9)();
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(void **)(v0 + 328);
  *(_QWORD *)(v0 + 336) = v2;
  sub_21FBC1E8C(*(id *)(v0 + 200), *(_QWORD *)(v0 + 248));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 288);
    v4 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v6 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    if ((*(_BYTE *)(v0 + 361) & 1) == 0)
    {
      v17 = *(void **)(v0 + 296);
      v18 = sub_21FC5AAC4();
      *(_QWORD *)(v0 + 344) = v18;
      *(_QWORD *)(v0 + 56) = v0 + 184;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_21FACC74C;
      v19 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v20 = (_QWORD *)(v0 + 80);
      v20[1] = 0x40000000;
      v20[2] = sub_21FAA9320;
      v20[3] = &block_descriptor_9;
      v20[4] = v19;
      objc_msgSend(v17, sel_fetchAccountWithIdentifier_completion_, v18, v20);
      return swift_continuation_await();
    }
    HKFHIRCredential.asAuthorizationHeader()();
    if (v34)
    {
      v7 = *(_QWORD *)(v0 + 248);
      if (*(_QWORD *)(v7 + 8))
      {
        v9 = sub_21FA31448();
        v10 = *v8;
        if (*v8)
        {
          v11 = v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v11 = v10;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v10 = sub_21FA7E100(0, v10[2] + 1, 1, v10);
            *v11 = v10;
          }
          v13 = v10[2];
          v14 = v10[3];
          v15 = v13 + 1;
          if (v13 >= v14 >> 1)
          {
            v32 = v13 + 1;
            v29 = v10;
            v30 = v10[2];
            v31 = sub_21FA7E100((_QWORD *)(v14 > 1), v13 + 1, 1, v29);
            v13 = v30;
            v15 = v32;
            v10 = v31;
            *v11 = v31;
          }
          v10[2] = v15;
          v16 = &v10[4 * v13];
          v16[4] = v33;
          v16[5] = v34;
          v16[6] = v35;
          v16[7] = v36;
        }
        ((void (*)(uint64_t, _QWORD))v9)(v0 + 120, 0);
      }
      else
      {
        sub_21FACD2EC();
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_21FC5EE30;
        *(_QWORD *)(v25 + 32) = v33;
        *(_QWORD *)(v25 + 40) = v34;
        *(_QWORD *)(v25 + 48) = v35;
        *(_QWORD *)(v25 + 56) = v36;
        *(_QWORD *)(v7 + 8) = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v26 = *(_QWORD *)(v0 + 288);
      v27 = *(_QWORD *)(v0 + 264);
      v28 = *(_QWORD *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      sub_21FACD2BC(v33, v34);
    }
    else
    {
      v22 = *(_QWORD *)(v0 + 288);
      v23 = *(_QWORD *)(v0 + 264);
      v24 = *(_QWORD *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    sub_21FA2D23C(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v6 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v6();
}

uint64_t sub_21FACC74C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 352) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21FACC7AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(void);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD **v37;
  uint64_t (*v38)();
  _QWORD *v39;
  _QWORD *v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(void **)(v0 + 184);

  v2 = objc_msgSend(v1, sel_gateway);
  if (!v2)
    goto LABEL_7;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_baseURL);

  v5 = *(_QWORD *)(v0 + 224);
  if (v4)
  {
    sub_21FC5A950();

    v6 = sub_21FC5A98C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  }
  else
  {
    v6 = sub_21FC5A98C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  v7 = *(_QWORD *)(v0 + 232);
  sub_21FAA95B4(*(_QWORD *)(v0 + 224), v7);
  sub_21FC5A98C();
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v7, 1, v6);
  v11 = *(_QWORD *)(v0 + 232);
  if (v10 != 1)
  {
    v19 = *(void **)(v0 + 200);
    v20 = sub_21FC5A8FC();
    v22 = v21;
    v23 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v23(v11, v6);
    v24 = objc_msgSend(v19, sel_webURL);
    if (v24)
    {
      v25 = v24;
      sub_21FC5A950();

      v26 = 0;
    }
    else
    {
      v26 = 1;
    }
    v28 = *(_QWORD *)(v0 + 208);
    v27 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v28, v26, 1, v6);
    sub_21FAA95B4(v28, v27);
    v29 = v9(v27, 1, v6);
    v30 = *(_QWORD *)(v0 + 216);
    if (v29 == 1)
    {

      swift_bridgeObjectRelease();
      sub_21FA2EDA0(v30, (unint64_t *)&qword_25406AAC8, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    }
    else
    {
      v31 = sub_21FC5A8FC();
      v32 = v22;
      v34 = v33;
      v23(v30, v6);
      *(_QWORD *)(v0 + 152) = v31;
      *(_QWORD *)(v0 + 160) = v34;
      *(_QWORD *)(v0 + 168) = v20;
      *(_QWORD *)(v0 + 176) = v32;
      sub_21FACD1BC();
      sub_21FACD200();
      v35 = sub_21FC5B5A4();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) != 0)
      {
        HKFHIRCredential.asAuthorizationHeader()();
        if (v56)
        {
          v36 = *(_QWORD *)(v0 + 248);
          if (*(_QWORD *)(v36 + 8))
          {
            v38 = sub_21FA31448();
            v39 = *v37;
            if (*v37)
            {
              v40 = v37;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *v40 = v39;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v39 = sub_21FA7E100(0, v39[2] + 1, 1, v39);
                *v40 = v39;
              }
              v43 = v39[2];
              v42 = v39[3];
              v44 = v43 + 1;
              if (v43 >= v42 >> 1)
              {
                v54 = sub_21FA7E100((_QWORD *)(v42 > 1), v43 + 1, 1, v39);
                v44 = v43 + 1;
                v39 = v54;
                *v40 = v54;
              }
              v39[2] = v44;
              v45 = &v39[4 * v43];
              v45[4] = v55;
              v45[5] = v56;
              v45[6] = v57;
              v45[7] = v58;
            }
            ((void (*)(uint64_t, _QWORD))v38)(v0 + 120, 0);
          }
          else
          {
            sub_21FACD2EC();
            v50 = swift_allocObject();
            *(_OWORD *)(v50 + 16) = xmmword_21FC5EE30;
            *(_QWORD *)(v50 + 32) = v55;
            *(_QWORD *)(v50 + 40) = v56;
            *(_QWORD *)(v50 + 48) = v57;
            *(_QWORD *)(v50 + 56) = v58;
            *(_QWORD *)(v36 + 8) = v50;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          v51 = *(_QWORD *)(v0 + 288);
          v52 = *(_QWORD *)(v0 + 264);
          v53 = *(_QWORD *)(v0 + 272);

          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
          sub_21FACD2BC(v55, v56);
          goto LABEL_24;
        }
      }
    }
    v46 = *(_QWORD *)(v0 + 288);
    v47 = *(_QWORD *)(v0 + 264);
    v48 = *(_QWORD *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
LABEL_24:
    sub_21FA2D23C(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  sub_21FA2EDA0(*(_QWORD *)(v0 + 232), (unint64_t *)&qword_25406AAC8, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
LABEL_7:
  v12 = *(void **)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 264);
  v15 = *(_QWORD *)(v0 + 272);
  v16 = *(_QWORD *)(v0 + 248);
  sub_21FACD244();
  swift_allocError();
  *v17 = 3;
  swift_willThrow();

  sub_21FA326EC(v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_21FACCCCC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FACCD6C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 344);
  v2 = *(void **)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 248);
  swift_willThrow();

  sub_21FA326EC(v6, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalDocumentDownloadRequest);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL static ClinicalDocumentDownloadHandlerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ClinicalDocumentDownloadHandlerError.hash(into:)()
{
  return sub_21FC5BE98();
}

uint64_t ClinicalDocumentDownloadHandlerError.hashValue.getter()
{
  sub_21FC5BE8C();
  sub_21FC5BE98();
  return sub_21FC5BEB0();
}

unint64_t sub_21FACCEC8()
{
  unint64_t result;

  result = qword_255540E30;
  if (!qword_255540E30)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for ClinicalDocumentDownloadHandlerError, &type metadata for ClinicalDocumentDownloadHandlerError);
    atomic_store(result, &qword_255540E30);
  }
  return result;
}

void destroy for ClinicalDocumentDownloadHandler(uint64_t a1)
{
  swift_release();

}

_QWORD *_s19HealthRecordsDaemon31ClinicalDocumentDownloadHandlerVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain();
  v5 = v3;
  v6 = v4;
  return a1;
}

_QWORD *assignWithCopy for ClinicalDocumentDownloadHandler(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for ClinicalDocumentDownloadHandler(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalDocumentDownloadHandler(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalDocumentDownloadHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalDocumentDownloadHandler()
{
  return &type metadata for ClinicalDocumentDownloadHandler;
}

uint64_t storeEnumTagSinglePayload for ClinicalDocumentDownloadHandlerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21FACD120 + 4 * byte_21FC62175[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21FACD154 + 4 * byte_21FC62170[v4]))();
}

uint64_t sub_21FACD154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FACD15C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FACD164);
  return result;
}

uint64_t sub_21FACD170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FACD178);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21FACD17C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FACD184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalDocumentDownloadHandlerError()
{
  return &type metadata for ClinicalDocumentDownloadHandlerError;
}

uint64_t sub_21FACD1A0(uint64_t a1)
{
  uint64_t v1;

  return sub_21FC55398(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

unint64_t sub_21FACD1BC()
{
  unint64_t result;

  result = qword_255540E48;
  if (!qword_255540E48)
  {
    result = MEMORY[0x2207D0F78](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255540E48);
  }
  return result;
}

unint64_t sub_21FACD200()
{
  unint64_t result;

  result = qword_255540E50;
  if (!qword_255540E50)
  {
    result = MEMORY[0x2207D0F78](MEMORY[0x24BEE5E60], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255540E50);
  }
  return result;
}

unint64_t sub_21FACD244()
{
  unint64_t result;

  result = qword_255540E58;
  if (!qword_255540E58)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for ClinicalDocumentDownloadHandlerError, &type metadata for ClinicalDocumentDownloadHandlerError);
    atomic_store(result, &qword_255540E58);
  }
  return result;
}

uint64_t sub_21FACD288(uint64_t a1)
{
  destroy for WebRequestResponse(a1);
  return a1;
}

uint64_t sub_21FACD2BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_21FACD2EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25553FE48)
  {
    v0 = sub_21FC5BDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25553FE48);
  }
}

uint64_t sub_21FACD344()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21FACD3A0()
{
  uint64_t v0;

  MEMORY[0x2207D105C](*(_QWORD *)(v0 + 16), -1, -1);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_21FACD3D4()
{
  sub_21FACD3A0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SingleValuePublisherTaskQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SingleValuePublisherTaskQueue);
}

uint64_t sub_21FACD400()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_21FACD484()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  sub_21FA97DF0(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)));
  sub_21FACDA94(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  return v0;
}

uint64_t sub_21FACD4D8()
{
  sub_21FACD484();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SingleValuePublisherTaskQueue.ActiveTaskWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SingleValuePublisherTaskQueue.ActiveTaskWrapper);
}

uint64_t sub_21FACD508()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21FACD510()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21FACD588(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_21FACD638(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_21FACD678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_21FACD6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21FACD744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21FACD7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_21FACD804(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21FACD880 + 4 * byte_21FC62290[v10]))();
  }
}

void sub_21FACD904(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_21FACD9F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21FACDA70);
}

void sub_21FACDA00(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21FACDA08);
  JUMPOUT(0x21FACDA70);
}

void sub_21FACDA48()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21FACDA70);
}

void sub_21FACDA50()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21FACDA70);
}

uint64_t sub_21FACDA58(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x21FACDA70);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x21FACDA6CLL);
    JUMPOUT(0x21FACDA64);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
}

uint64_t sub_21FACDA94(uint64_t a1)
{
  uint64_t v2;

  sub_21FACDAD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21FACDAD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406B8C0)
  {
    sub_21FACDB24();
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406B8C0);
  }
}

unint64_t sub_21FACDB24()
{
  unint64_t result;

  result = qword_25406B8B8;
  if (!qword_25406B8B8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25406B8B8);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2207D0F0C](a1, v6, a5);
}

uint64_t PBDataTypeShared.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  type metadata accessor for PBDataTypeShared(0);
  return sub_21FC5AD10();
}

uint64_t type metadata accessor for PBDataTypeShared(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255540F80);
}

void PBDaiDataCategory.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t PBDaiDataCategory.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 8;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBDaiDataCategory.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_21FACDC30()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_21FACDC38@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBDaiDataCategory.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FACDC40()
{
  sub_21FACE6C8();
  return sub_21FC5AD7C();
}

BOOL sub_21FACDC78(uint64_t a1, uint64_t *a2)
{
  return sub_21FA2EDE0(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_21FACDC94()
{
  qword_255540E70 = (uint64_t)&unk_24E4808F8;
}

uint64_t static PBDaiDataCategory.allCases.getter()
{
  if (qword_25553D5F8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PBDaiDataCategory.allCases.setter(uint64_t a1)
{
  if (qword_25553D5F8 != -1)
    swift_once();
  swift_beginAccess();
  qword_255540E70 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PBDaiDataCategory.allCases.modify())()
{
  if (qword_25553D5F8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21FACDDF4@<X0>(_QWORD *a1@<X8>)
{
  if (qword_25553D5F8 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_255540E70;
  return swift_bridgeObjectRetain();
}

uint64_t (*PBDataTypeShared.latestUpdateDate.modify())()
{
  return nullsub_1;
}

void PBDataTypeShared.dataType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBDataTypeShared.dataType.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 24) = v2;
  return result;
}

uint64_t (*PBDataTypeShared.dataType.modify())()
{
  return nullsub_1;
}

uint64_t PBDataTypeShared.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBDataTypeShared(0) + 24);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBDataTypeShared.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBDataTypeShared(0) + 24);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBDataTypeShared.unknownFields.modify())()
{
  type metadata accessor for PBDataTypeShared(0);
  return nullsub_1;
}

uint64_t PBDaiPayload.currentSyncDate.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDaiPayload.currentSyncDate.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBDaiPayload.currentSyncDate.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.dataTypeShared.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBDaiPayload.dataTypeShared.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PBDaiPayload.dataTypeShared.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.gatewayID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDaiPayload.gatewayID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PBDaiPayload.gatewayID.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBDaiPayload(0) + 28);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PBDaiPayload(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255541018);
}

uint64_t PBDaiPayload.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBDaiPayload(0) + 28);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBDaiPayload.unknownFields.modify())()
{
  type metadata accessor for PBDaiPayload(0);
  return nullsub_1;
}

uint64_t PBDaiPayload.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  type metadata accessor for PBDaiPayload(0);
  return sub_21FC5AD10();
}

uint64_t sub_21FACE19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255540E78);
  __swift_project_value_buffer(v0, (uint64_t)qword_255540E78);
  sub_21FA8AF38();
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC623E0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "ACTIVITY";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "VITALS_AND_MES";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "ALERTS_AND_ECG";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "CHR";
  *((_QWORD *)v16 + 1) = 3;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "CYCLE_TRACKING";
  *((_QWORD *)v18 + 1) = 14;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "SLEEP";
  *((_QWORD *)v20 + 1) = 5;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "DEVICE_GENERATED";
  *((_QWORD *)v22 + 1) = 16;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 7;
  *(_QWORD *)v24 = "PATIENT_GENERATED";
  *((_QWORD *)v24 + 1) = 17;
  v24[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBDaiDataCategory._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D600, (uint64_t)qword_255540E78, a1);
}

uint64_t sub_21FACE44C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D600, (uint64_t)qword_255540E78, a1);
}

unint64_t static PBDataTypeShared.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FACE484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255540E90);
  __swift_project_value_buffer(v0, (uint64_t)qword_255540E90);
  sub_21FA8AF38();
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "latest_update_date";
  *(_QWORD *)(v8 + 8) = 18;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "data_type";
  *((_QWORD *)v12 + 1) = 9;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBDataTypeShared._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D608, (uint64_t)qword_255540E90, a1);
}

uint64_t PBDataTypeShared.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_21FACE6C8();
        sub_21FC5ADC4();
      }
      else if (result == 1)
      {
        sub_21FC5AE3C();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

unint64_t sub_21FACE6C8()
{
  unint64_t result;

  result = qword_255540EC0;
  if (!qword_255540EC0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBDaiDataCategory, &type metadata for PBDaiDataCategory);
    atomic_store(result, (unint64_t *)&qword_255540EC0);
  }
  return result;
}

uint64_t PBDataTypeShared.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    if (!v0[2] || (sub_21FACE6C8(), result = sub_21FC5AED8(), !v1))
    {
      type metadata accessor for PBDataTypeShared(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t PBDataTypeShared.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBDataTypeShared, &qword_255540EC8, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
}

uint64_t sub_21FACE81C@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  return sub_21FC5AD10();
}

unint64_t sub_21FACE84C()
{
  return 0xD000000000000029;
}

uint64_t sub_21FACE868()
{
  return PBDataTypeShared.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FACE87C()
{
  return PBDataTypeShared.traverse<A>(visitor:)();
}

uint64_t sub_21FACE890()
{
  sub_21FA2A08C(&qword_255541060, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
  return sub_21FC5AD70();
}

uint64_t sub_21FACE8E0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D608, (uint64_t)qword_255540E90, a1);
}

uint64_t sub_21FACE8FC()
{
  sub_21FA2A08C(&qword_255540ED0, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
  return sub_21FC5AE9C();
}

uint64_t sub_21FACE93C()
{
  sub_21FA2A08C(&qword_255540ED0, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
  return sub_21FC5AEA8();
}

unint64_t static PBDaiPayload.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_21FACE9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255540EA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255540EA8);
  sub_21FA8AF38();
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "current_sync_date";
  *(_QWORD *)(v8 + 8) = 17;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "data_type_shared";
  *((_QWORD *)v12 + 1) = 16;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "gateway_id";
  *(_QWORD *)(v13 + 8) = 10;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBDaiPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(qword_25553D610, (uint64_t)qword_255540EA8, a1);
}

uint64_t PBDaiPayload.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        type metadata accessor for PBDataTypeShared(0);
        sub_21FA2A08C(&qword_255540ED0, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
        sub_21FC5AE54();
      }
      else if (result == 1)
      {
        break;
      }
LABEL_11:
      result = sub_21FC5AD88();
    }
    sub_21FC5AE3C();
    goto LABEL_11;
  }
  return result;
}

uint64_t PBDaiPayload.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16)
      || (type metadata accessor for PBDataTypeShared(0),
          sub_21FA2A08C(&qword_255540ED0, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared), result = sub_21FC5AF44(), !v1))
    {
      v5 = v0[4];
      v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v6 = v0[3] & 0xFFFFFFFFFFFFLL;
      if (!v6 || (result = sub_21FC5AF2C(), !v1))
      {
        type metadata accessor for PBDaiPayload(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t PBDaiPayload.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBDaiPayload, &qword_255540ED8, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
}

uint64_t sub_21FACEDD0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = v1;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FACEE04()
{
  return 0xD000000000000025;
}

uint64_t sub_21FACEE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FACEE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_21FACEEA0())()
{
  return nullsub_1;
}

uint64_t sub_21FACEEB4()
{
  return PBDaiPayload.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FACEEC8()
{
  return PBDaiPayload.traverse<A>(visitor:)();
}

uint64_t sub_21FACEEDC()
{
  sub_21FA2A08C(&qword_255541058, type metadata accessor for PBDaiPayload, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
  return sub_21FC5AD70();
}

uint64_t sub_21FACEF2C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(qword_25553D610, (uint64_t)qword_255540EA8, a1);
}

uint64_t sub_21FACEF48()
{
  sub_21FA2A08C(&qword_255540F18, type metadata accessor for PBDaiPayload, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
  return sub_21FC5AE9C();
}

uint64_t sub_21FACEF88()
{
  sub_21FA2A08C(&qword_255540F18, type metadata accessor for PBDaiPayload, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
  return sub_21FC5AEA8();
}

uint64_t _s19HealthRecordsDaemon16PBDataTypeSharedV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v13 = *(_QWORD *)(a2 + 16);
    if (*(_BYTE *)(a2 + 24) == 1)
      __asm { BR              X11 }
    if (a1[2] == v13)
    {
      v14 = type metadata accessor for PBDataTypeShared(0);
      v15 = (char *)a1 + *(int *)(v14 + 24);
      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, (char *)(a2 + *(int *)(v14 + 24)), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon12PBDaiPayloadV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if ((sub_21FB105EC(a1[2], *((_QWORD *)a2 + 2)) & 1) != 0)
    {
      if (a1[3] == *((_QWORD *)a2 + 3) && a1[4] == *((_QWORD *)a2 + 4) || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        v13 = type metadata accessor for PBDaiPayload(0);
        v14 = (char *)a1 + *(int *)(v13 + 28);
        v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v15(v10, v14, v4);
        v15(v8, &a2[*(int *)(v13 + 28)], v4);
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_21FC5B5D4();
        v16 = *(void (**)(char *, uint64_t))(v5 + 8);
        v16(v8, v4);
        v16(v10, v4);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

unint64_t sub_21FACF338()
{
  unint64_t result;

  result = qword_255540EE0;
  if (!qword_255540EE0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBDaiDataCategory, &type metadata for PBDaiDataCategory);
    atomic_store(result, (unint64_t *)&qword_255540EE0);
  }
  return result;
}

unint64_t sub_21FACF380()
{
  unint64_t result;

  result = qword_255540EE8;
  if (!qword_255540EE8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBDaiDataCategory, &type metadata for PBDaiDataCategory);
    atomic_store(result, (unint64_t *)&qword_255540EE8);
  }
  return result;
}

uint64_t sub_21FACF3C4()
{
  return sub_21FA2A08C(&qword_255540EF0, (uint64_t (*)(uint64_t))sub_21FACF3F0, MEMORY[0x24BEE12E0]);
}

void sub_21FACF3F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255540EF8)
  {
    v0 = sub_21FC5B7F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255540EF8);
  }
}

uint64_t sub_21FACF444()
{
  return sub_21FA2A08C(&qword_255540F00, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
}

uint64_t sub_21FACF470()
{
  return sub_21FA2A08C(&qword_255540ED0, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
}

uint64_t sub_21FACF49C()
{
  return sub_21FA2A08C(&qword_255540EC8, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
}

uint64_t sub_21FACF4C8()
{
  return sub_21FA2A08C(&qword_255540F08, type metadata accessor for PBDataTypeShared, (uint64_t)&protocol conformance descriptor for PBDataTypeShared);
}

uint64_t sub_21FACF4F4()
{
  return sub_21FA2A08C(&qword_255540F10, type metadata accessor for PBDaiPayload, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
}

uint64_t sub_21FACF520()
{
  return sub_21FA2A08C(&qword_255540F18, type metadata accessor for PBDaiPayload, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
}

uint64_t sub_21FACF54C()
{
  return sub_21FA2A08C(&qword_255540ED8, type metadata accessor for PBDaiPayload, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
}

uint64_t sub_21FACF578()
{
  return sub_21FA2A08C(&qword_255540F20, type metadata accessor for PBDaiPayload, (uint64_t)&protocol conformance descriptor for PBDaiPayload);
}

ValueMetadata *type metadata accessor for PBDaiDataCategory()
{
  return &type metadata for PBDaiDataCategory;
}

_QWORD *initializeBufferWithCopyOfBuffer for PBDataTypeShared(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_21FC5AD1C();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBDataTypeShared(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21FC5AD1C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBDataTypeShared()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FACF8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBDataTypeShared()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FACF930(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FACF9A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBHistogramSeries.Value(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    v10 = sub_21FC5AD1C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for PBHistogramSeries.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PBHistogramSeries.Value(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for PBHistogramSeries.Value(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBHistogramSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for PBHistogramSeries.Value(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBDaiPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FACFD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBDaiPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FACFE14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FACFE88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t HKClinicalSharingQueryDiagnosticOptions.description.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_21FACFFF8((uint64_t)&unk_24E480480, a1);
  sub_21FAD0254(0, (unint64_t *)&qword_255541770, type metadata accessor for HKClinicalSharingQueryDiagnosticOptions);
  swift_arrayDestroy();
  return v1;
}

uint64_t HKClinicalSharingOptions.description.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_21FACFFF8((uint64_t)&unk_24E480448, a1);
  sub_21FAD0254(0, &qword_25406BAC0, type metadata accessor for HKClinicalSharingOptions);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_21FACFFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!a2)
      goto LABEL_19;
    goto LABEL_14;
  }
  v4 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = a2;
  do
  {
    v8 = *(v4 - 2);
    if ((v8 & ~a2) == 0)
    {
      v10 = *(v4 - 1);
      v9 = *v4;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_21FA7DD0C(0, v5[2] + 1, 1, v5);
      v12 = v5[2];
      v11 = v5[3];
      if (v12 >= v11 >> 1)
        v5 = sub_21FA7DD0C((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
      v5[2] = v12 + 1;
      v7 = &v5[2 * v12];
      v7[4] = v10;
      v7[5] = v9;
      if ((v8 & v6) != 0)
        v6 &= ~v8;
    }
    v4 += 3;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_14:
    sub_21FC5B6AC();
    sub_21FC5BC4C();
    sub_21FC5B6AC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_21FA7DD0C(0, v5[2] + 1, 1, v5);
    v14 = v5[2];
    v13 = v5[3];
    if (v14 >= v13 >> 1)
      v5 = sub_21FA7DD0C((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
    v5[2] = v14 + 1;
    v15 = &v5[2 * v14];
    v15[4] = 0;
    v15[5] = 0xE000000000000000;
  }
LABEL_19:
  sub_21FAC8DA4();
  sub_21FA80314();
  sub_21FC5B5B0();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  return 91;
}

void sub_21FAD0254(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_21FAD02B0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_21FACFFF8((uint64_t)&unk_24E480448, *v0);
  sub_21FAD0254(0, &qword_25406BAC0, type metadata accessor for HKClinicalSharingOptions);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_21FAD0320()
{
  uint64_t *v0;

  return HKClinicalSharingQueryDiagnosticOptions.description.getter(*v0);
}

unint64_t HKClinicalSharingReason.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 1;
  result = 0x7A69726F68747561;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x617461642D77656ELL;
      break;
    case 2:
      result = 0x756F72676B636162;
      break;
    case 3:
      result = 0x676E6974736574;
      break;
    case 4:
      result = 0x696E692D72657375;
      break;
    case 5:
      result = 0xD000000000000010;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

unint64_t sub_21FAD0410()
{
  uint64_t *v0;

  return HKClinicalSharingReason.description.getter(*v0);
}

uint64_t sub_21FAD0418@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  sub_21FA5B8F8();
  result = a2(a1, *(_QWORD *)(a1 + *(int *)(v6 + 48)));
  *a3 = result;
  return result;
}

uint64_t sub_21FAD0464@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(void);
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t (*v45)(void);
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56[3];
  uint64_t v57;
  uint64_t v58;

  v47 = a2;
  v54 = a3;
  sub_21FA5B848();
  v51 = v4;
  v49 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAD1388(0, (unint64_t *)&qword_25553F110, v6, (void (*)(void))sub_21FAD0A64);
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v46 - v8;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553F0D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v46 - v12;
  v14 = MEMORY[0x24BDBA1B0];
  sub_21FA5B0CC(0, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - v18;
  v20 = *a1;
  v56[0] = v20;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_21FC5B22C();
  sub_21FA2CDB4();
  sub_21FC5B208();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_21FA5B13C((unint64_t *)&qword_25553F0E8, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v14, MEMORY[0x24BDBA1D0]);
  v21 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v22 = v20 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_21FA2CEA0(v22, (uint64_t)v56);
  v23 = v57;
  v24 = v58;
  __swift_project_boxed_opaque_existential_1(v56, v57);
  (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  v26 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  swift_bridgeObjectRelease();
  if (v26)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v27 = sub_21FC5AFD4();
    __swift_project_value_buffer(v27, (uint64_t)qword_25406D830);
    swift_retain_n();
    v28 = sub_21FC5AFC8();
    v29 = sub_21FC5B970();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      *(_DWORD *)v30 = 136315138;
      v56[0] = v31;
      sub_21FC5AAF4();
      sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v32 = sub_21FC5BDCC();
      v55 = sub_21FABDCF8(v32, v33, v56);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v28, v29, "No DocRef creation required. DocRef already exists. Account: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v31, -1, -1);
      MEMORY[0x2207D105C](v30, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v56[0] = v21;
    v45 = MEMORY[0x24BDB9AE0];
    sub_21FA5B0CC(0, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v45, MEMORY[0x24BDB9AF8]);
    v43 = sub_21FC5B280();
    result = swift_release();
  }
  else
  {
    v56[0] = v21;
    v34 = MEMORY[0x24BDB9AE0];
    sub_21FA5B0CC(0, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FA5B8F8();
    sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v34, MEMORY[0x24BDB9AF8]);
    v35 = v48;
    sub_21FC5B31C();
    v36 = swift_allocObject();
    v37 = v47;
    *(_QWORD *)(v36 + 16) = v47;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_21FAD11D8;
    *(_QWORD *)(v38 + 24) = v36;
    v39 = v37;
    sub_21FC5B184();
    sub_21FAD0A64();
    v41 = v50;
    v40 = v51;
    sub_21FC5B34C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v40);
    sub_21FAD124C(&qword_25553F128, (unint64_t *)&qword_25553F110, (void (*)(uint64_t))sub_21FA5B848, (void (*)(void))sub_21FAD0A64);
    v42 = v53;
    v43 = sub_21FC5B280();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v41, v42);
  }
  *v54 = v43;
  return result;
}

uint64_t sub_21FAD0A64()
{
  return sub_21FA2A08C(&qword_25553F118, (uint64_t (*)(uint64_t))sub_21FA5B848, MEMORY[0x24BDB98C8]);
}

uint64_t sub_21FAD0A80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v6 = sub_21FC5AFD4();
  __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
  swift_retain_n();
  v7 = sub_21FC5AFC8();
  v8 = sub_21FC5B970();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v19[0] = v10;
    v22 = a2;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v11 = sub_21FC5BDCC();
    sub_21FABDCF8(v11, v12, v19);
    a2 = v22;
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v7, v8, "Preparing create request. Account: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v10, -1, -1);
    v13 = v9;
    v3 = v2;
    MEMORY[0x2207D105C](v13, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = v5 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_21FA2CEA0(v14, (uint64_t)v19);
  v15 = v20;
  v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_21FBA6010(v15, v16, a2);
  if (!v3)
  {
    sub_21FA5B8F8();
    *(_QWORD *)(a2 + *(int *)(v17 + 48)) = v5;
    swift_retain();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_21FAD0D00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_21FC5A5D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  sub_21FA5BD2C();
  v10 = v9;
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAD128C();
  v32 = v13;
  v34 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAD1388(0, &qword_255541078, v16, (void (*)(void))sub_21FAD1450);
  v33 = v17;
  v35 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v31 = (char *)&v29 - v18;
  v36 = sub_21FC531A8(a1, a2, 3, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_21FA5C118;
  *(_QWORD *)(v21 + 24) = v20;
  sub_21FA5BFD8(0, (unint64_t *)&qword_25553F148, (unint64_t *)&qword_25553F150, (unint64_t *)&qword_25553F158);
  sub_21FA5BDDC(0, &qword_25553F160, (unint64_t *)&qword_25553F168);
  sub_21FA5BE90();
  sub_21FC5B31C();
  swift_release();
  swift_release();
  sub_21FA2A08C(&qword_25553F190, (uint64_t (*)(uint64_t))sub_21FA5BD2C, MEMORY[0x24BDB98C8]);
  v22 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
  v36 = v22;
  sub_21FA5BFD8(0, &qword_25553F180, &qword_25553F160, (unint64_t *)&qword_25553F168);
  sub_21FAD1324();
  sub_21FA5C050();
  sub_21FC5B31C();
  swift_release();
  sub_21FC5B184();
  type metadata accessor for ClinicalSharingSyncContext();
  v23 = MEMORY[0x24BDB9AE0];
  sub_21FA5B0CC(0, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAD1450();
  sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v23, MEMORY[0x24BDB9AF8]);
  v24 = v31;
  v25 = v32;
  sub_21FC5B34C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v25);
  sub_21FAD124C(&qword_255541088, &qword_255541078, (void (*)(uint64_t))sub_21FAD128C, (void (*)(void))sub_21FAD1450);
  v26 = v33;
  v27 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v26);
  return v27;
}

uint64_t sub_21FAD110C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_21FAD1508(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_21FAD1140@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  sub_21FAD23A0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  result = sub_21FAD1C28();
  *a2 = result;
  return result;
}

uint64_t sub_21FAD1174@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = a2(*a1, a1[1], a1[2], a1[3]);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
    a3[2] = v7;
    a3[3] = v8;
  }
  return result;
}

uint64_t sub_21FAD11B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21FAD11D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21FAD0D00(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_21FAD11E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FAD1204@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, _QWORD);
  uint64_t v6;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16);
  sub_21FA5B8F8();
  result = v5(a1, *(_QWORD *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  return result;
}

uint64_t sub_21FAD124C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_21FAD1388(255, a2, a3, a4);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB98F0], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_21FAD128C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255541068)
  {
    sub_21FA5BFD8(255, &qword_25553F180, &qword_25553F160, (unint64_t *)&qword_25553F168);
    sub_21FAD1324();
    sub_21FA5C050();
    v0 = sub_21FC5B0E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255541068);
  }
}

void sub_21FAD1324()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255541070)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255541070);
  }
}

void sub_21FAD1388(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t (*v7)(void);
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = MEMORY[0x24BDB9AE0];
    sub_21FA5B0CC(255, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a3(255);
    sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x24BDB9AF8]);
    a4();
    v8 = sub_21FC5B100();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_21FAD1450()
{
  return sub_21FA2A08C(&qword_255541080, (uint64_t (*)(uint64_t))sub_21FAD128C, MEMORY[0x24BDB98C8]);
}

uint64_t sub_21FAD146C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_21FC5A5D8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_21FAD14CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, a1[1], a1[2], a1[3]);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_21FAD1508(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint8_t *v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - v6;
  v8 = (void *)sub_21FC5B5E0();
  v9 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v8);

  if (!v9)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v19 = sub_21FC5AFD4();
    __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
    swift_retain_n();
    v20 = sub_21FC5AFC8();
    v21 = sub_21FC5B97C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_DWORD *)v22 = 136315138;
      v42 = v23;
      sub_21FC5AAF4();
      sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v24 = sub_21FC5BDCC();
      v41 = sub_21FABDCF8(v24, v25, &v42);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v20, v21, "No Location header found while creating DocRef. Account: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v23, -1, -1);
      MEMORY[0x2207D105C](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_21FAD1BE0();
    swift_allocError();
    v27 = 1;
    goto LABEL_17;
  }
  sub_21FC5B604();

  sub_21FC5A980();
  swift_bridgeObjectRelease();
  v10 = sub_21FC5A98C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_21FAA51C8((uint64_t)v7);
    if (qword_25406B7F8 != -1)
      swift_once();
    v12 = sub_21FC5AFD4();
    __swift_project_value_buffer(v12, (uint64_t)qword_25406D830);
    swift_retain_n();
    v13 = sub_21FC5AFC8();
    v14 = sub_21FC5B97C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_DWORD *)v15 = 136315138;
      v42 = v16;
      sub_21FC5AAF4();
      sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v17 = sub_21FC5BDCC();
      v41 = sub_21FABDCF8(v17, v18, &v42);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v13, v14, "Could not parse location url from header while creating DocRef. Account: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v16, -1, -1);
      MEMORY[0x2207D105C](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_21FAD1BE0();
    swift_allocError();
    v27 = 2;
LABEL_17:
    *(_QWORD *)(v26 + 8) = 0;
    *(_QWORD *)(v26 + 16) = 0;
    *(_QWORD *)v26 = v27;
    *(_BYTE *)(v26 + 24) = 3;
    swift_willThrow();
    return a2;
  }
  sub_21FC0A590();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    if (qword_25406B7F8 != -1)
      swift_once();
    v29 = sub_21FC5AFD4();
    __swift_project_value_buffer(v29, (uint64_t)qword_25406D830);
    swift_retain_n();
    v30 = sub_21FC5AFC8();
    v31 = sub_21FC5B970();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v40 = v33;
      v39 = v32;
      *(_DWORD *)v32 = 136315138;
      v42 = v33;
      v38 = v32 + 4;
      sub_21FC5AAF4();
      sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v34 = sub_21FC5BDCC();
      v41 = sub_21FABDCF8(v34, v35, &v42);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v36 = v39;
      _os_log_impl(&dword_21FA27000, v30, v31, "Successfully created DocRef. Account: %s", v39, 0xCu);
      v37 = v40;
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v37, -1, -1);
      MEMORY[0x2207D105C](v36, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_retain();
  }
  return a2;
}

unint64_t sub_21FAD1BE0()
{
  unint64_t result;

  result = qword_255541090;
  if (!qword_255541090)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC62D40, &type metadata for ClinicalSharingFHIRAPIError);
    atomic_store(result, (unint64_t *)&qword_255541090);
  }
  return result;
}

uint64_t sub_21FAD1C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[5];

  v1 = v0;
  v2 = sub_21FC5AAF4();
  v49 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAD455C();
  v6 = v5;
  v52 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v43 - v12;
  if (qword_25406B7F8 != -1)
    swift_once();
  v14 = sub_21FC5AFD4();
  __swift_project_value_buffer(v14, (uint64_t)qword_25406D830);
  swift_retain_n();
  v15 = sub_21FC5AFC8();
  v16 = sub_21FC5B970();
  v17 = os_log_type_enabled(v15, v16);
  v50 = v13;
  v47 = v11;
  v48 = v4;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v54[0] = v19;
    *(_DWORD *)v18 = 136315138;
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_21FC5BDCC();
    v53 = sub_21FABDCF8(v20, v21, v54);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v15, v16, "Updating syncSuccessful info. Account: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v19, -1, -1);
    MEMORY[0x2207D105C](v18, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v22 = (_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
  v23 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
  if (v23)
  {
    v24 = v22[9];
    v43 = v22[7];
    v44 = v2;
    v45 = v0;
    v46 = v6;
    v25 = v22[5];
    v26 = v22[3];
    v27 = v22[4];
    v28 = v22[1];
    v29 = v22[2];
    sub_21FA81324(v23, v28, v29, v26, v27, v25);
    swift_bridgeObjectRetain();
    v30 = v29;
    v31 = v26;
    v6 = v46;
    v2 = v44;
    v1 = v45;
    sub_21FA813A8(v23, v28, v30, v31, v27, v25);
  }
  else
  {
    v24 = 0;
  }
  v32 = (uint64_t)v47;
  v33 = (uint64_t)v50;
  sub_21FBE5788(v24, (uint64_t)v50);
  swift_bridgeObjectRelease();
  sub_21FA2CEA0(v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore, (uint64_t)v54);
  v34 = __swift_project_boxed_opaque_existential_1(v54, v54[3]);
  v36 = (uint64_t)v48;
  v35 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID, v2);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare) == 1)
  {
    sub_21FA44968(v33, v32, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    v37 = sub_21FC5AAAC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v32, 1, 1, v37);
  }
  v38 = sub_21FA70ED4(v36, v32, v33, *v34);
  v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_21FA2D1F8(v32, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v2);
  v53 = v38;
  sub_21FAD45F0();
  type metadata accessor for ClinicalSharingSyncContext();
  sub_21FA2A08C((unint64_t *)&qword_25406B970, (uint64_t (*)(uint64_t))sub_21FAD45F0, MEMORY[0x24BDB9AF8]);
  swift_retain();
  v40 = v51;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_21FA2A08C(&qword_2555410A0, (uint64_t (*)(uint64_t))sub_21FAD455C, MEMORY[0x24BDB96C0]);
  v41 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v6);
  sub_21FA2D1F8(v33, (unint64_t *)&qword_25406AAE8, v39);
  return v41;
}

void sub_21FAD2198(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;

  v2 = v1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v4 = sub_21FC5AFD4();
  __swift_project_value_buffer(v4, (uint64_t)qword_25406D830);
  swift_retain_n();
  v5 = sub_21FC5AFC8();
  v6 = sub_21FC5B970();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v13 = v8;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v9 = sub_21FC5BDCC();
    sub_21FABDCF8(v9, v10, &v13);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v5, v6, "Updating error info. Account: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v8, -1, -1);
    MEMORY[0x2207D105C](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error) = a1;
  v12 = a1;

}

uint64_t sub_21FAD23A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;

  if (qword_25406B7F8 != -1)
    swift_once();
  v5 = sub_21FC5AFD4();
  __swift_project_value_buffer(v5, (uint64_t)qword_25406D830);
  swift_retain_n();
  v6 = sub_21FC5AFC8();
  v7 = sub_21FC5B970();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v18 = a1;
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v19[0] = v9;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v10 = sub_21FC5BDCC();
    sub_21FABDCF8(v10, v11, v19);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v6, v7, "Updating resource ID. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    v12 = v9;
    a1 = v18;
    MEMORY[0x2207D105C](v12, -1, -1);
    MEMORY[0x2207D105C](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
  swift_beginAccess();
  sub_21FA2CEA0((uint64_t)v13, (uint64_t)v19);
  v14 = v20;
  v15 = v21;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24);
  swift_bridgeObjectRetain();
  v16(a1, a2, v14, v15);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v13, v19);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_21FAD2624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  ValueMetadata *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  ValueMetadata *v62;
  _UNKNOWN **v63;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  __int128 v69[3];
  uint64_t v70;

  v3 = v1;
  v56 = *(_QWORD *)(a1 + 24);
  v57 = *(_QWORD *)(a1 + 16);
  v54 = *(_QWORD *)(a1 + 40);
  v55 = *(_QWORD *)(a1 + 32);
  v52 = *(_QWORD *)(a1 + 56);
  v53 = *(_QWORD *)(a1 + 48);
  v51 = *(_QWORD *)(a1 + 64);
  v58 = *(_OWORD *)(a1 + 72);
  v59 = *(_OWORD *)a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v5 = sub_21FC5AFD4();
  __swift_project_value_buffer(v5, (uint64_t)qword_25406D830);
  swift_retain_n();
  v6 = sub_21FC5AFC8();
  v7 = sub_21FC5B970();
  v70 = v2;
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)&v60 = v49;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v9 = sub_21FC5BDCC();
    *(_QWORD *)&v69[0] = sub_21FABDCF8(v9, v10, (uint64_t *)&v60);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v6, v7, "Updating root node. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v49, -1, -1);
    MEMORY[0x2207D105C](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v11 = v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_21FA2CEA0(v11, (uint64_t)v69);
  sub_21FA50724(0, (unint64_t *)&qword_2555410B0);
  if (swift_dynamicCast())
  {
    v48 = v11;
    v12 = *((_QWORD *)&v60 + 1);
    v13 = v62;
    v40 = v61;
    v41 = v60;
    v39 = v63;
    v14 = v65;
    v15 = v66;
    v16 = v67;
    v17 = v68;
    v18 = v3;
    v19 = *(void **)(v3 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus);
    v46 = v64;
    swift_bridgeObjectRetain();
    v45 = v14;
    v44 = v15;
    v43 = v16;
    v42 = v17;
    v20 = v19;
    v47 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (objc_msgSend(v20, sel_userStatus) == (id)4)
    {

    }
    else
    {
      v26 = objc_msgSend(v20, sel_userStatus);

      if (v26 != (id)5)
      {
        v38 = *(_QWORD *)(a1 + 48);
        v27 = *(_QWORD *)(a1 + 56);
        goto LABEL_15;
      }
    }
    v38 = 0;
    v27 = 0;
LABEL_15:
    v50 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(a1 + 24);
    v37 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode;
    v29 = *(_QWORD *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
    v30 = *(_QWORD *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8);
    v31 = *(_QWORD *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16);
    v32 = *(_QWORD *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24);
    v33 = *(_QWORD *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32);
    v34 = *(_QWORD *)(v28 + 40);
    *(_OWORD *)v28 = v59;
    *(_QWORD *)(v28 + 16) = v57;
    *(_QWORD *)(v28 + 24) = v56;
    *(_QWORD *)(v28 + 32) = v55;
    *(_QWORD *)(v28 + 40) = v54;
    *(_QWORD *)(v28 + 48) = v53;
    *(_QWORD *)(v28 + 56) = v52;
    *(_QWORD *)(v28 + 64) = v51;
    *(_OWORD *)(v28 + 72) = v58;
    sub_21FAD4790(a1);
    sub_21FA813A8(v29, v30, v31, v32, v33, v34);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = &type metadata for ClinicalSharingDocumentReferenceForLookupInfo;
    v63 = &off_24E488E90;
    v35 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v60 = v35;
    v35[2] = v41;
    v35[3] = v47;
    v35[4] = v40;
    v35[5] = v13;
    v35[6] = v39;
    v35[7] = v46;
    v35[8] = v38;
    v35[9] = v50;
    v35[10] = v37;
    v35[11] = v36;
    v35[12] = v45;
    v35[13] = v44;
    v35[14] = v43;
    v35[15] = v42;
    sub_21FA3175C(&v60, (uint64_t)v69);
    swift_beginAccess();
    __swift_destroy_boxed_opaque_existential_1(v48);
    sub_21FA3175C(v69, v48);
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v21 = sub_21FC5AFC8();
  v22 = sub_21FC5B97C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_21FA27000, v21, v22, "Attempting to update rootNodeInfo when docRefInfo is not for lookupInfo", v23, 2u);
    MEMORY[0x2207D105C](v23, -1, -1);
  }

  sub_21FAC7C38();
  swift_allocError();
  *(_OWORD *)v24 = xmmword_21FC62980;
  *(_BYTE *)(v24 + 16) = 4;
  return swift_willThrow();
}

uint64_t sub_21FAD2C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_25406B7F8 != -1)
    swift_once();
  v5 = sub_21FC5AFD4();
  __swift_project_value_buffer(v5, (uint64_t)qword_25406D830);
  swift_retain_n();
  v6 = sub_21FC5AFC8();
  v7 = sub_21FC5B970();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v14 = v9;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v10 = sub_21FC5BDCC();
    sub_21FABDCF8(v10, v11, &v14);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v6, v7, "Updating access token. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v9, -1, -1);
    MEMORY[0x2207D105C](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken);
  *v12 = a1;
  v12[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FAD2E74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;

  if (qword_25406B7F8 != -1)
    swift_once();
  v5 = sub_21FC5AFD4();
  __swift_project_value_buffer(v5, (uint64_t)qword_25406D830);
  swift_retain_n();
  v6 = sub_21FC5AFC8();
  v7 = sub_21FC5B970();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v18 = a1;
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v19[0] = v9;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v10 = sub_21FC5BDCC();
    sub_21FABDCF8(v10, v11, v19);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v6, v7, "Updating eTag. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    v12 = v9;
    a1 = v18;
    MEMORY[0x2207D105C](v12, -1, -1);
    MEMORY[0x2207D105C](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
  swift_beginAccess();
  sub_21FA2CEA0((uint64_t)v13, (uint64_t)v19);
  v14 = v20;
  v15 = v21;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  v16(a1, a2, v14, v15);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v13, v19);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_21FAD30F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[3];
  uint64_t v100;
  uint64_t v101;

  v2 = v1;
  v92 = a1;
  sub_21FAD455C();
  v97 = v3;
  v96 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v95 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v94 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v93 = (char *)&v85 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v85 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v91 = (char *)&v85 - v14;
  sub_21FA2D1A0(0, &qword_2555410A8, type metadata accessor for PBLookupInfo, v5);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v85 - v16;
  v18 = type metadata accessor for PBLookupInfo(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v89 = (uint64_t)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v85 - v22;
  if (qword_25406B7F8 != -1)
    swift_once();
  v24 = sub_21FC5AFD4();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_25406D830);
  swift_retain_n();
  v26 = sub_21FC5AFC8();
  v27 = sub_21FC5B970();
  v28 = os_log_type_enabled(v26, v27);
  v90 = (uint64_t)v13;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v88 = v25;
    v87 = v23;
    v30 = (uint8_t *)v29;
    v31 = swift_slowAlloc();
    v85 = v19;
    v32 = v31;
    v99[0] = v31;
    v86 = v18;
    *(_DWORD *)v30 = 136315138;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v33 = sub_21FC5BDCC();
    v98 = sub_21FABDCF8(v33, v34, v99);
    v18 = v86;
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v26, v27, "Updating multi device info. Account: %s", v30, 0xCu);
    swift_arrayDestroy();
    v35 = v32;
    v19 = v85;
    MEMORY[0x2207D105C](v35, -1, -1);
    v36 = v30;
    v23 = v87;
    MEMORY[0x2207D105C](v36, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v37 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus;
  v38 = (char *)objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus), sel_multiDeviceStatus);
  sub_21FA44968(v92, (uint64_t)v17, &qword_2555410A8, type metadata accessor for PBLookupInfo);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_21FA2D1F8((uint64_t)v17, &qword_2555410A8, type metadata accessor for PBLookupInfo);
    v92 = 0;
    v39 = 0;
  }
  else
  {
    v92 = v37;
    sub_21FAD4670((uint64_t)v17, (uint64_t)v23);
    v40 = v89;
    sub_21FAD46B4((uint64_t)v23, v89);
    v41 = *(_QWORD *)(v40 + *(int *)(v18 + 20));
    swift_beginAccess();
    v43 = *(_QWORD *)(v41 + 80);
    v42 = *(_QWORD *)(v41 + 88);
    swift_beginAccess();
    v44 = *(_QWORD *)(v41 + 96);
    v45 = *(_QWORD *)(v41 + 104);
    swift_beginAccess();
    v46 = *(int *)(v41 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21FAD46F8(v40);
    v47 = (_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
    v48 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
    v49 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8);
    *v47 = v43;
    v47[1] = v42;
    v47[2] = v44;
    v47[3] = v45;
    v47[4] = v46;
    sub_21FACD2BC(v48, v49);
    v50 = *(int *)(v18 + 20);
    swift_beginAccess();
    v51 = qword_25553DC90;
    swift_bridgeObjectRetain();
    if (v51 != -1)
      swift_once();
    v52 = (void *)qword_255572F60;
    v53 = (void *)sub_21FC5B5E0();
    v54 = objc_msgSend(v52, sel_dateFromString_, v53);

    if (v54)
    {
      v55 = v90;
      sub_21FC5AA94();

      v56 = sub_21FC5AAAC();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 0, 1, v56);
    }
    else
    {
      v57 = sub_21FC5AAAC();
      v55 = v90;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v90, 1, 1, v57);
    }
    v37 = v92;
    v58 = v55;
    v59 = (uint64_t)v91;
    sub_21FA6A41C(v58, (uint64_t)v91);
    swift_bridgeObjectRelease();
    v60 = v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
    swift_beginAccess();
    sub_21FAD4734(v59, v60);
    swift_endAccess();
    v61 = *(_QWORD **)&v23[v50];
    swift_beginAccess();
    if (v61[10] == *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID)
      && v61[11] == *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8))
    {
      v62 = 1;
    }
    else if ((sub_21FC5BDF0() & 1) != 0)
    {
      v62 = 1;
    }
    else
    {
      v62 = 2;
    }
    swift_beginAccess();
    v39 = v61[13];
    v63 = HIBYTE(v39) & 0xF;
    if ((v39 & 0x2000000000000000) == 0)
      v63 = v61[12] & 0xFFFFFFFFFFFFLL;
    if (v63)
    {
      v92 = v61[12];
      swift_bridgeObjectRetain();
    }
    else
    {
      v92 = 0;
      v39 = 0;
    }
    v38 = (char *)v62;
    sub_21FAD46F8((uint64_t)v23);
  }
  swift_retain_n();
  v64 = sub_21FC5AFC8();
  v65 = sub_21FC5B970();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = swift_slowAlloc();
    v67 = (_QWORD *)swift_slowAlloc();
    v90 = swift_slowAlloc();
    v101 = v90;
    *(_DWORD *)v66 = 136315394;
    v91 = v38;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v68 = sub_21FC5BDCC();
    v100 = sub_21FABDCF8(v68, v69, &v101);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2112;
    v70 = *(void **)(v2 + v37);
    v100 = (uint64_t)v70;
    v71 = v70;
    sub_21FC5BAC0();
    *v67 = v70;
    swift_release_n();
    _os_log_impl(&dword_21FA27000, v64, v65, "Updated multi device info. Account: %s HKClinicalSharingStatus: %@", (uint8_t *)v66, 0x16u);
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406BE28, (uint64_t (*)(uint64_t))sub_21FAC7C7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v67, -1, -1);
    v72 = v90;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v72, -1, -1);
    MEMORY[0x2207D105C](v66, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore), *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore + 24));
  v73 = v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
  v74 = (void *)sub_21FC5B8B0();
  v75 = sub_21FC5AAAC();
  v76 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56);
  v78 = (uint64_t)v93;
  v77(v93, 1, 1, v75);
  v79 = (uint64_t)v94;
  v77(v94, 1, 1, v75);
  v80 = sub_21FBB9444(v73, v78, v79, 0, v74, v92, v39);
  sub_21FA2D1F8(v79, (unint64_t *)&qword_25406AAE8, v76);
  sub_21FA2D1F8(v78, (unint64_t *)&qword_25406AAE8, v76);

  swift_bridgeObjectRelease();
  v101 = v80;
  sub_21FAD45F0();
  type metadata accessor for ClinicalSharingSyncContext();
  sub_21FA2A08C((unint64_t *)&qword_25406B970, (uint64_t (*)(uint64_t))sub_21FAD45F0, MEMORY[0x24BDB9AF8]);
  swift_retain();
  v81 = v95;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  sub_21FA2A08C(&qword_2555410A0, (uint64_t (*)(uint64_t))sub_21FAD455C, MEMORY[0x24BDB96C0]);
  v82 = v97;
  v83 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v81, v82);
  return v83;
}

uint64_t sub_21FAD3BDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553F0D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v54 - v5;
  sub_21FAD44E0();
  v8 = v7;
  v59 = *(uint8_t **)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAD455C();
  v12 = v11;
  v56 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(id *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus);
  if (objc_msgSend(v15, sel_userStatus) == (id)4)
  {

LABEL_4:
    v17 = v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
    if (*(_QWORD *)(a1 + 16)
      && (v18 = sub_21FA73E18(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID),
          (v19 & 1) != 0))
    {
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = 0;
    }
    v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
    swift_bridgeObjectRelease();
    if (v21)
      v22 = v20 == 0;
    else
      v22 = 1;
    if (v22)
    {
      if (qword_25406B7F8 != -1)
        swift_once();
      v23 = sub_21FC5AFD4();
      __swift_project_value_buffer(v23, (uint64_t)qword_25406D830);
      swift_retain_n();
      v24 = sub_21FC5AFC8();
      v25 = sub_21FC5B970();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v61 = v27;
        *(_DWORD *)v26 = 136315138;
        v59 = v26 + 4;
        sub_21FC5AAF4();
        sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v28 = sub_21FC5BDCC();
        v60 = sub_21FABDCF8(v28, v29, &v61);
        sub_21FC5BAC0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21FA27000, v24, v25, "Updating User status to revoked. Account: %s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v27, -1, -1);
        MEMORY[0x2207D105C](v26, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v46 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore), *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore + 24));
      v47 = (void *)sub_21FC5B8B0();
      v48 = sub_21FA7145C(v17, v47, *v46);

      v61 = v48;
      sub_21FAD45F0();
      type metadata accessor for ClinicalSharingSyncContext();
      sub_21FA2A08C((unint64_t *)&qword_25406B970, (uint64_t (*)(uint64_t))sub_21FAD45F0, MEMORY[0x24BDB9AF8]);
      swift_retain();
      sub_21FC5B2C8();
      swift_release();
      swift_release();
      sub_21FA2A08C(&qword_2555410A0, (uint64_t (*)(uint64_t))sub_21FAD455C, MEMORY[0x24BDB96C0]);
      v49 = sub_21FC5B280();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v12);
    }
    else
    {
      v56 = v8;
      if (qword_25406B7F8 != -1)
        swift_once();
      v30 = sub_21FC5AFD4();
      __swift_project_value_buffer(v30, (uint64_t)qword_25406D830);
      swift_retain_n();
      v31 = sub_21FC5AFC8();
      v32 = sub_21FC5B970();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        v61 = v34;
        *(_DWORD *)v33 = 136315138;
        v55 = v33 + 4;
        sub_21FC5AAF4();
        sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v35 = sub_21FC5BDCC();
        v60 = sub_21FABDCF8(v35, v36, &v61);
        sub_21FC5BAC0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21FA27000, v31, v32, "User status not updated to revoked due to failed sync. Account: %s", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v34, -1, -1);
        MEMORY[0x2207D105C](v33, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v61 = v2;
      type metadata accessor for ClinicalSharingSyncContext();
      swift_retain();
      sub_21FC5B22C();
      sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
      v50 = v58;
      sub_21FC5B208();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v6, v50);
      sub_21FA2A08C((unint64_t *)&qword_25553F0E8, (uint64_t (*)(uint64_t))sub_21FAD44E0, MEMORY[0x24BDBA1D0]);
      v51 = v56;
      v49 = sub_21FC5B280();
      (*((void (**)(char *, uint64_t))v59 + 1))(v10, v51);
    }
    return v49;
  }
  v16 = objc_msgSend(v15, sel_userStatus);

  if (v16 == (id)5)
    goto LABEL_4;
  if (qword_25406B7F8 != -1)
    swift_once();
  v37 = sub_21FC5AFD4();
  __swift_project_value_buffer(v37, (uint64_t)qword_25406D830);
  swift_retain_n();
  v38 = sub_21FC5AFC8();
  v39 = sub_21FC5B970();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v56 = v8;
    v42 = v41;
    *(_DWORD *)v40 = 136315138;
    v61 = v41;
    v55 = v40 + 4;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v43 = sub_21FC5BDCC();
    v60 = sub_21FABDCF8(v43, v44, &v61);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v38, v39, "User status does not need to be updated. Account: %s", v40, 0xCu);
    swift_arrayDestroy();
    v45 = v42;
    v8 = v56;
    MEMORY[0x2207D105C](v45, -1, -1);
    MEMORY[0x2207D105C](v40, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v61 = v2;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_21FC5B22C();
  sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
  v52 = v58;
  sub_21FC5B208();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v6, v52);
  sub_21FA2A08C((unint64_t *)&qword_25553F0E8, (uint64_t (*)(uint64_t))sub_21FAD44E0, MEMORY[0x24BDBA1D0]);
  v49 = sub_21FC5B280();
  (*((void (**)(char *, uint64_t))v59 + 1))(v10, v8);
  return v49;
}

void sub_21FAD44E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25553F0E0)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    v0 = sub_21FC5BEC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25553F0E0);
  }
}

void sub_21FAD455C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255541098)
  {
    sub_21FAD45F0();
    type metadata accessor for ClinicalSharingSyncContext();
    sub_21FA2A08C((unint64_t *)&qword_25406B970, (uint64_t (*)(uint64_t))sub_21FAD45F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_21FC5B064();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255541098);
  }
}

void sub_21FAD45F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406B980)
  {
    sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    v0 = sub_21FC5B190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406B980);
  }
}

uint64_t sub_21FAD4664@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_retain();
}

uint64_t sub_21FAD4670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PBLookupInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAD46B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PBLookupInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAD46F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PBLookupInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21FAD4734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAD4790(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21FA32314(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21FAD4818()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_21FAD4880(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v9 = a2[5];
    v10 = a3[8];
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v13 = sub_21FC5AAAC();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[10];
    *(_BYTE *)(v7 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *(_BYTE *)(v7 + v15) = *((_BYTE *)a2 + v15);
    v16 = a3[12];
    *(_QWORD *)(v7 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v17 = (_QWORD *)(v7 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_21FAD4994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FAD4A10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v11 = sub_21FC5AAAC();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21FAD4AFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[12];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FAD4C20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_21FAD4CCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v12 = a3[12];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FAD4DB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAD4DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21FC5AAAC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 32), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 48) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_21FAD4E44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAD4E50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21FC5AAAC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 32), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 48) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ClinicalSharingDailyMetric()
{
  uint64_t result;

  result = qword_25406AF68;
  if (!qword_25406AF68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21FAD4F0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AAAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21FAD4FAC()
{
  uint64_t *v0;
  uint64_t inited;
  int *v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406BE50, (uint64_t (*)(uint64_t))sub_21FAD5334, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FC62990;
  *(_QWORD *)(inited + 32) = 0xD000000000000021;
  *(_QWORD *)(inited + 40) = 0x800000021FC76900;
  v2 = (int *)type metadata accessor for ClinicalSharingDailyMetric();
  v3 = *((_BYTE *)v0 + v2[9]);
  *(_QWORD *)(inited + 72) = &type metadata for IHAMetricField;
  *(_QWORD *)(inited + 80) = &off_24E484FA0;
  *(_BYTE *)(inited + 48) = v3;
  *(_QWORD *)(inited + 88) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 96) = 0x800000021FC76930;
  v4 = *((_BYTE *)v0 + v2[10]);
  *(_QWORD *)(inited + 128) = &type metadata for IHRMetricField;
  *(_QWORD *)(inited + 136) = &off_24E485000;
  *(_BYTE *)(inited + 104) = v4;
  *(_QWORD *)(inited + 144) = 0xD000000000000016;
  *(_QWORD *)(inited + 152) = 0x800000021FC76950;
  *(_QWORD *)(inited + 184) = &type metadata for PairedWatchSystemVersionMetricField;
  *(_QWORD *)(inited + 192) = &off_24E488678;
  *(_QWORD *)(inited + 200) = 6645601;
  *(_QWORD *)(inited + 208) = 0xE300000000000000;
  v5 = v0[2];
  v6 = *((_BYTE *)v0 + 24);
  *(_QWORD *)(inited + 240) = &type metadata for AgeMetricField;
  *(_QWORD *)(inited + 248) = &off_24E484FB8;
  *(_QWORD *)(inited + 216) = v5;
  *(_BYTE *)(inited + 224) = v6;
  *(_QWORD *)(inited + 256) = 7890291;
  *(_QWORD *)(inited + 264) = 0xE300000000000000;
  v7 = v0[4];
  v8 = v0[5];
  *(_QWORD *)(inited + 296) = &type metadata for SexMetricField;
  *(_QWORD *)(inited + 304) = &off_24E484F88;
  *(_QWORD *)(inited + 272) = v7;
  *(_QWORD *)(inited + 280) = v8;
  *(_QWORD *)(inited + 312) = 0xD00000000000002ALL;
  *(_QWORD *)(inited + 320) = 0x800000021FC76970;
  *(_QWORD *)(inited + 352) = &type metadata for AvgDataTypesMetricField;
  *(_QWORD *)(inited + 360) = &off_24E488660;
  v9 = *v0;
  v10 = v0[1];
  *(_QWORD *)(inited + 328) = *v0;
  *(_QWORD *)(inited + 368) = 0xD000000000000019;
  *(_QWORD *)(inited + 376) = 0x800000021FC769A0;
  *(_QWORD *)(inited + 408) = &type metadata for ProvidersSharedWithMetricField;
  *(_QWORD *)(inited + 416) = &off_24E488648;
  *(_QWORD *)(inited + 384) = v10;
  *(_QWORD *)(inited + 424) = 0xD000000000000018;
  *(_QWORD *)(inited + 432) = 0x800000021FC769C0;
  *(_QWORD *)(inited + 464) = &type metadata for SharingEnabledMetricField;
  *(_QWORD *)(inited + 472) = &off_24E488630;
  *(_QWORD *)(inited + 440) = v10;
  *(_QWORD *)(inited + 480) = 0xD000000000000020;
  *(_QWORD *)(inited + 488) = 0x800000021FC769E0;
  *(_QWORD *)(inited + 520) = &type metadata for CHROnboardedMetricField;
  *(_QWORD *)(inited + 528) = &off_24E488618;
  *(_QWORD *)(inited + 496) = v10;
  *(_QWORD *)(inited + 544) = 0x800000021FC76A10;
  *(_QWORD *)(inited + 576) = &type metadata for MaxConceptsSharedMetricField;
  *(_QWORD *)(inited + 536) = 0xD000000000000020;
  *(_QWORD *)(inited + 584) = &off_24E488600;
  *(_QWORD *)(inited + 600) = 0x800000021FC76A40;
  *(_QWORD *)(inited + 632) = &type metadata for MinConceptsSharedMetricField;
  *(_QWORD *)(inited + 552) = v9;
  *(_QWORD *)(inited + 640) = &off_24E4885E8;
  *(_QWORD *)(inited + 648) = 0xD000000000000012;
  *(_QWORD *)(inited + 592) = 0xD000000000000020;
  *(_QWORD *)(inited + 656) = 0x800000021FC76A70;
  *(_QWORD *)(inited + 608) = v9;
  *(_QWORD *)(inited + 688) = &type metadata for TimeSinceLastShareMetricField;
  *(_QWORD *)(inited + 696) = &off_24E4885D0;
  *(_QWORD *)(inited + 664) = v10;
  *(_QWORD *)(inited + 704) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 712) = 0x800000021FC76A90;
  v11 = *(uint64_t *)((char *)v0 + v2[11]);
  *(_QWORD *)(inited + 744) = &type metadata for NoOfSharesMetricField;
  *(_QWORD *)(inited + 752) = &off_24E4885B8;
  *(_QWORD *)(inited + 720) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return sub_21FA7C580(inited);
}

uint64_t sub_21FAD52F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FAD5328(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

void sub_21FAD5334()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25406BE00)
  {
    sub_21FAD5398();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25406BE00);
  }
}

unint64_t sub_21FAD5398()
{
  unint64_t result;

  result = qword_25406BC20;
  if (!qword_25406BC20)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25406BC20);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoOfSharesMetricField()
{
  return &type metadata for NoOfSharesMetricField;
}

ValueMetadata *type metadata accessor for TimeSinceLastShareMetricField()
{
  return &type metadata for TimeSinceLastShareMetricField;
}

ValueMetadata *type metadata accessor for MinConceptsSharedMetricField()
{
  return &type metadata for MinConceptsSharedMetricField;
}

ValueMetadata *type metadata accessor for MaxConceptsSharedMetricField()
{
  return &type metadata for MaxConceptsSharedMetricField;
}

ValueMetadata *type metadata accessor for CHROnboardedMetricField()
{
  return &type metadata for CHROnboardedMetricField;
}

ValueMetadata *type metadata accessor for SharingEnabledMetricField()
{
  return &type metadata for SharingEnabledMetricField;
}

ValueMetadata *type metadata accessor for ProvidersSharedWithMetricField()
{
  return &type metadata for ProvidersSharedWithMetricField;
}

ValueMetadata *type metadata accessor for AvgDataTypesMetricField()
{
  return &type metadata for AvgDataTypesMetricField;
}

ValueMetadata *type metadata accessor for PairedWatchSystemVersionMetricField()
{
  return &type metadata for PairedWatchSystemVersionMetricField;
}

uint64_t sub_21FAD547C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v36 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  v11 = sub_21FC5AAAC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v38 = (char *)&v36 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - v17;
  if (!a1)
    return 0;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21FC5BC7C();
    v19 = result;
    if (result)
      goto LABEL_4;
LABEL_22:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
    goto LABEL_23;
  }
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v19)
    goto LABEL_22;
LABEL_4:
  if (v19 < 1)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v40 = v19;
  v36 = v10;
  v37 = v18;
  v21 = 0;
  v22 = a1;
  v39 = a1 & 0xC000000000000001;
  v23 = MEMORY[0x24BEE4AF8];
  do
  {
    if (v39)
      v24 = (id)MEMORY[0x2207D057C](v21, v22);
    else
      v24 = *(id *)(v22 + 8 * v21 + 32);
    v25 = v24;
    v26 = objc_msgSend(v24, sel_clinicalSharingStatus, v36, v37);
    v27 = objc_msgSend(v26, sel_lastSharedDate);

    if (v27)
    {
      sub_21FC5AA94();

      v28 = 0;
    }
    else
    {
      v28 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v5, v28, 1, v11);
    sub_21FA6A41C((uint64_t)v5, (uint64_t)v8);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    {
      sub_21FA71828((uint64_t)v8);
    }
    else
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v30 = v38;
      v29(v38, v8, v11);
      v29(v41, v30, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v23 = sub_21FA7DE84(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
      v32 = *(_QWORD *)(v23 + 16);
      v31 = *(_QWORD *)(v23 + 24);
      if (v32 >= v31 >> 1)
        v23 = sub_21FA7DE84(v31 > 1, v32 + 1, 1, v23);
      *(_QWORD *)(v23 + 16) = v32 + 1;
      v29((char *)(v23+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v32), v41, v11);
    }
    ++v21;
  }
  while (v40 != v21);
  swift_bridgeObjectRelease();
  v10 = v36;
  v18 = v37;
LABEL_23:
  sub_21FBDF208(v23, v10);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_21FA71828((uint64_t)v10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v10, v11);
  result = sub_21FC5AA88();
  if (v33 >= 0.0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    return 0;
  }
  v34 = v33 / -3600.0;
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
    goto LABEL_38;
  if (v34 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!__OFADD__((uint64_t)v34, 1))
  {
    if ((uint64_t)v34 + 1 >= 49)
      v35 = 49;
    else
      v35 = (uint64_t)v34 + 1;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    return v35;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21FAD58D0()
{
  id v0;
  id v1;
  void *v2;
  _OWORD v4[2];
  __int128 v5;
  __int128 v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_getActivePairedDevice);
  if (!v1)
  {

    v5 = 0u;
    v6 = 0u;
LABEL_11:
    sub_21FA2DA9C((uint64_t)&v5);
    return 0;
  }
  v2 = v1;
  if (objc_msgSend(v1, sel_valueForProperty_, *MEMORY[0x24BE6B3F0]))
  {
    sub_21FC5BAF0();
    swift_unknownObjectRelease();

  }
  else
  {

    memset(v4, 0, sizeof(v4));
  }
  sub_21FAAF8D8((uint64_t)v4, (uint64_t)&v5);
  if (!*((_QWORD *)&v6 + 1))
    goto LABEL_11;
  if (swift_dynamicCast())
    return *(_QWORD *)&v4[0];
  else
    return 0;
}

uint64_t sub_21FAD5A04@<X0>(unint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t result;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;

  v64 = a3;
  sub_21FAA333C(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_21FC5A6C8();
  v10 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a2, sel_identifier);
  v14 = sub_21FC5B604();
  v16 = v15;

  if (v14 == sub_21FC5B604() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v19 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v65 = 0;
      v66 = 0xE000000000000000;
      sub_21FC5BB74();
      sub_21FC5B6AC();
      v20 = objc_msgSend(a2, sel_identifier);
      sub_21FC5B604();

      sub_21FC5B6AC();
      swift_bridgeObjectRelease();
      sub_21FC5B6AC();
      v61 = 0;
      v60 = 17;
      goto LABEL_32;
    }
  }
  v21 = sub_21FAC1B44(a1);
  if (v21)
  {
    v22 = v21;
    sub_21FC5AD10();
    v23 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
    if (qword_25553D7F8 != -1)
      swift_once();
    *(_QWORD *)(a4 + v23) = qword_2555438F0;
    if (v64 >= 2u)
    {
      if (v64 == 2)
      {
        v39 = (void *)objc_opt_self();
        swift_retain();
        v48 = objc_msgSend(v39, sel_poundUnit);
        v40 = objc_msgSend(v48, sel_unitString);
        v41 = sub_21FC5B604();
        v43 = v42;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for PBTimeSeries._StorageClass(0);
          swift_allocObject();
          v44 = swift_retain();
          *(_QWORD *)(a4 + v23) = sub_21FB49070(v44);
          swift_release();
        }
        v45 = (uint64_t *)(*(_QWORD *)(a4 + v23)
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
        swift_beginAccess();
        *v45 = v41;
        v45[1] = v43;
        swift_bridgeObjectRelease();
        v46 = 49948;
      }
      else
      {
        swift_retain();
        v47 = (void *)sub_21FC5B5E0();
        v48 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v47);

        v49 = objc_msgSend(v48, sel_unitString);
        v50 = sub_21FC5B604();
        v52 = v51;

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          type metadata accessor for PBTimeSeries._StorageClass(0);
          swift_allocObject();
          v54 = swift_retain();
          *(_QWORD *)(a4 + v23) = sub_21FB49070(v54);
          swift_release();
        }
        v55 = (uint64_t *)(*(_QWORD *)(a4 + v23)
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
        swift_beginAccess();
        *v55 = v50;
        v55[1] = v52;
        swift_bridgeObjectRelease();
        v46 = 52725;
      }
      v56 = sub_21FAD6D58(v46, v22, (uint64_t)v48);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTimeSeries._StorageClass(0);
        swift_allocObject();
        v57 = swift_retain();
        *(_QWORD *)(a4 + v23) = sub_21FB49070(v57);
        swift_release();
      }
      v58 = (uint64_t *)(*(_QWORD *)(a4 + v23)
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
      swift_beginAccess();
      *v58 = v56;

    }
    else
    {
      v24 = (void *)objc_opt_self();
      swift_retain();
      v25 = objc_msgSend(v24, sel_millimeterOfMercuryUnit);
      v26 = objc_msgSend(v25, sel_unitString);

      v27 = sub_21FC5B604();
      v29 = v28;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTimeSeries._StorageClass(0);
        swift_allocObject();
        v30 = swift_retain();
        *(_QWORD *)(a4 + v23) = sub_21FB49070(v30);
        swift_release();
      }
      v31 = (uint64_t *)(*(_QWORD *)(a4 + v23)
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
      swift_beginAccess();
      *v31 = v27;
      v31[1] = v29;
      swift_bridgeObjectRelease();
      v32 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
      v33 = v63;
      sub_21FA2D120(v63 + *(int *)(v32 + 28), (uint64_t)v9, (uint64_t (*)(_QWORD))sub_21FAA333C);
      v34 = v62;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v62) == 1)
      {
        sub_21FA326EC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_21FAA333C);
        v61 = 0;
        v60 = 44;
        goto LABEL_32;
      }
      v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v34);
      MEMORY[0x24BDAC7A8](v35);
      *((_BYTE *)&v62 - 32) = v64;
      *(&v62 - 3) = v33;
      v60 = (uint64_t)v12;
      v36 = sub_21FBF7FB8((void (*)(id *))sub_21FAD8390, (uint64_t)(&v62 - 6), v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v34);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTimeSeries._StorageClass(0);
        swift_allocObject();
        v37 = swift_retain();
        *(_QWORD *)(a4 + v23) = sub_21FB49070(v37);
        swift_release();
      }
      v38 = (unint64_t *)(*(_QWORD *)(a4 + v23)
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
      swift_beginAccess();
      *v38 = v36;
    }
    return swift_bridgeObjectRelease();
  }
  v61 = 0;
  v60 = 21;
LABEL_32:
  result = sub_21FC5BC70();
  __break(1u);
  return result;
}

uint64_t sub_21FAD6170(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v16 = a1;
  v6 = a1;
  if (a4 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_21FC5BC7C())
  {
    v8 = 4;
    while (1)
    {
      v9 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207D057C](v8 - 4, a4) : *(id *)(a4 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      a2(&v14, &v16, &v15);
      swift_bridgeObjectRelease();
      if (v4)
      {
        swift_bridgeObjectRelease();

        return v6;
      }

      v6 = v14;
      v16 = v14;
      ++v8;
      if (v11 == v7)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v6;
}

void sub_21FAD62B4(id *a1@<X0>, int a2@<W1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t i;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t j;
  uint64_t v37;
  id v38;
  id v39;
  id v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  unsigned __int8 v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  unsigned __int8 v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  char *v61;
  id v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  char *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  char *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  unint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _QWORD *v105;
  char *v106;
  id v107;
  unint64_t v108;
  uint64_t v109;

  v6 = v5;
  v102 = a4;
  v105 = a3;
  LODWORD(v103) = a2;
  v109 = *MEMORY[0x24BDAC8D0];
  v9 = type metadata accessor for PBTimeSeries.Value(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21FC5AAAC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v104 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v106 = (char *)&v85 - v17;
  v101 = *a1;
  v18 = objc_msgSend(v101, sel_value);
  if (!v18)
    goto LABEL_23;
  v19 = v18;
  v20 = objc_msgSend(v18, sel_inspectableValue);

  if (!v20)
    goto LABEL_23;
  if (objc_msgSend(v20, sel_valueType) != (id)8
    || (v21 = objc_msgSend(v20, sel_codedValueCollection)) == 0)
  {
LABEL_22:

LABEL_23:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, 1, 1, v9);
    return;
  }
  v22 = v21;
  if ((objc_msgSend(v21, sel_representsCanonicalBloodPressure) & 1) == 0
    && !objc_msgSend(v22, sel_representsSingleBloodPressurePoint))
  {

    v20 = v22;
    goto LABEL_22;
  }
  v91 = v14;
  v87 = v13;
  v86 = v12;
  v95 = v10;
  v96 = a5;
  v97 = v9;
  v90 = v22;
  v23 = objc_msgSend(v22, sel_codedValues);
  sub_21FA5BE58(0, &qword_2555405B8);
  v24 = sub_21FC5B7A8();

  v108 = MEMORY[0x24BEE4AF8];
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_21FC5BC7C();
    v100 = v20;
    if (v25)
      goto LABEL_9;
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v100 = v20;
    if (v25)
    {
LABEL_9:
      if (v25 < 1)
        __break(1u);
      for (i = 0; i != v25; ++i)
      {
        if ((v24 & 0xC000000000000001) != 0)
          v29 = (id)MEMORY[0x2207D057C](i, v24);
        else
          v29 = *(id *)(v24 + 8 * i + 32);
        v30 = v29;
        v107 = 0;
        if (objc_msgSend(v29, sel_chartableCodedQuantityWithError_, &v107))
        {
          v31 = v107;

          MEMORY[0x2207D0180]();
          if (*(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_21FC5B7CC();
          sub_21FC5B7E4();
          sub_21FC5B7C0();
        }
        else
        {
          v27 = v107;
          v28 = (void *)sub_21FC5A8E4();

          swift_willThrow();
          v6 = 0;
        }
      }
      swift_bridgeObjectRelease();
      v32 = v108;
      v20 = v100;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  v32 = MEMORY[0x24BEE4AF8];
LABEL_26:
  swift_bridgeObjectRelease();
  if (v32 >> 62)
    goto LABEL_72;
  v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v35 = v96;
  v34 = v97;
  for (j = v95; v33; j = v95)
  {
    v37 = 0;
    v99 = v32 & 0xC000000000000001;
    v88 = v32 + 32;
    v98 = v103;
    v92 = v32;
    v89 = v33;
    while (1)
    {
      v39 = v99 ? (id)MEMORY[0x2207D057C](v37, v32) : *(id *)(v88 + 8 * v37);
      v38 = v39;
      if (__OFADD__(v37++, 1))
        break;
      if (v98 == 1)
      {
        v94 = v37;
        v49 = objc_msgSend(v39, sel_codings);
        sub_21FA5BE58(0, &qword_2555405B0);
        v50 = sub_21FC5B7A8();

        v103 = v6;
        if (v50 >> 62)
        {
          swift_bridgeObjectRetain();
          v51 = sub_21FC5BC7C();
          if (v51)
          {
LABEL_50:
            v93 = v38;
            v20 = (id)objc_opt_self();
            v6 = 4;
            while (1)
            {
              v32 = v6 - 4;
              v52 = (v50 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x2207D057C](v6 - 4, v50)
                  : *(id *)(v50 + 8 * v6);
              v45 = v52;
              v53 = v6 - 3;
              if (__OFADD__(v32, 1))
                goto LABEL_70;
              v54 = objc_msgSend(v20, sel_loinc_diastolicBloodPressureCoding);
              v55 = objc_msgSend(v45, sel_isEquivalent_, v54);

              if ((v55 & 1) != 0)
              {
LABEL_62:
                v56 = v100;

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                objc_msgSend(v93, sel_doubleValue);
                v58 = v57;
                v59 = v101;
                v60 = objc_msgSend(v101, sel__creationDate);
                v61 = v106;
                sub_21FC5AA94();

                v62 = objc_msgSend(v59, sel_issueDate);
                v63 = v87;
                if (v62)
                {
                  v64 = v62;
                  v65 = (void *)sub_21FC5AB6C();
                  v66 = objc_msgSend(v64, sel_adjustedDateForCalendar_, v65);

                  v67 = v104;
                  sub_21FC5AA94();

                  v61 = v106;
                  v68 = v91;
                  (*(void (**)(char *, uint64_t))(v91 + 8))(v106, v63);
                  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v61, v67, v63);
                }
                v69 = objc_msgSend(v59, sel_effectiveEndDate);
                v70 = v97;
                if (v69)
                {
                  v71 = v69;
                  v72 = (void *)sub_21FC5AB6C();
                  v73 = objc_msgSend(v71, sel_adjustedDateForCalendar_, v72);

                  v74 = v104;
                  sub_21FC5AA94();

                  v61 = v106;
                  v75 = v91;
                  (*(void (**)(char *, uint64_t))(v91 + 8))(v106, v63);
                  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v61, v74, v63);
                }
                if ((sub_21FC5A6B0() & 1) != 0)
                {
                  v76 = (uint64_t)v86;
                  *((_DWORD *)v86 + 10) = 0;
                  *(_QWORD *)v76 = 0;
                  *(_QWORD *)(v76 + 8) = 0;
                  *(_DWORD *)(v76 + 16) = 0;
                  *(_QWORD *)(v76 + 48) = 0;
                  *(_QWORD *)(v76 + 56) = 0xE000000000000000;
                  *(_QWORD *)(v76 + 64) = 0;
                  *(_QWORD *)(v76 + 72) = 0xE000000000000000;
                  *(_OWORD *)(v76 + 80) = 0u;
                  *(_OWORD *)(v76 + 96) = 0u;
                  *(_QWORD *)(v76 + 120) = MEMORY[0x24BEE4AF8];
                  *(_QWORD *)(v76 + 128) = 0;
                  *(_WORD *)(v76 + 136) = 256;
                  sub_21FC5AD10();
                  *(_QWORD *)(v76 + 112) = v58;
                  v77 = objc_retain(*(id *)(*v105
                                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
                  v78 = (void *)sub_21FC5AA64();
                  v79 = v61;
                  v80 = objc_msgSend(v77, sel_stringFromDate_, v78);

                  v81 = sub_21FC5B604();
                  v83 = v82;

                  *(_QWORD *)(v76 + 24) = v81;
                  *(_QWORD *)(v76 + 32) = v83;

                  (*(void (**)(char *, uint64_t))(v91 + 8))(v79, v63);
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v76 + 48) = 1732799853;
                  *(_QWORD *)(v76 + 56) = 0xE400000000000000;
                  v84 = v96;
                  sub_21FA2D120(v76, v96, type metadata accessor for PBTimeSeries.Value);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v84, 0, 1, v70);
                  sub_21FA326EC(v76, type metadata accessor for PBTimeSeries.Value);
                }
                else
                {
                  (*(void (**)(char *, uint64_t))(v91 + 8))(v61, v63);

                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v96, 1, 1, v70);
                }
                return;
              }

              ++v6;
              if (v53 == v51)
              {
LABEL_29:
                v35 = v96;
                v34 = v97;
                j = v95;
                v38 = v93;
                break;
              }
            }
          }
        }
        else
        {
          v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v51)
            goto LABEL_50;
        }
      }
      else
      {
        if (v98)
          goto LABEL_31;
        v94 = v37;
        v41 = objc_msgSend(v39, sel_codings);
        sub_21FA5BE58(0, &qword_2555405B0);
        v42 = sub_21FC5B7A8();

        v103 = v6;
        if (v42 >> 62)
        {
          swift_bridgeObjectRetain();
          v43 = sub_21FC5BC7C();
          if (v43)
          {
LABEL_40:
            v93 = v38;
            v20 = (id)objc_opt_self();
            v6 = 4;
            while (1)
            {
              v32 = v6 - 4;
              v44 = (v42 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x2207D057C](v6 - 4, v42)
                  : *(id *)(v42 + 8 * v6);
              v45 = v44;
              v46 = v6 - 3;
              if (__OFADD__(v32, 1))
                break;
              v47 = objc_msgSend(v20, sel_loinc_systolicBloodPressureCoding);
              v48 = objc_msgSend(v45, sel_isEquivalent_, v47);

              if ((v48 & 1) != 0)
                goto LABEL_62;

              ++v6;
              if (v46 == v43)
                goto LABEL_29;
            }
            __break(1u);
LABEL_70:
            __break(1u);
            break;
          }
        }
        else
        {
          v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v43)
            goto LABEL_40;
        }
      }
      swift_bridgeObjectRelease_n();
      v6 = v103;
      v20 = v100;
      v32 = v92;
      v33 = v89;
      v37 = v94;
LABEL_31:

      if (v37 == v33)
        goto LABEL_73;
    }
    __break(1u);
LABEL_72:
    swift_bridgeObjectRetain();
    v33 = sub_21FC5BC7C();
    v35 = v96;
    v34 = v97;
  }
LABEL_73:
  swift_bridgeObjectRelease_n();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(j + 56))(v35, 1, 1, v34);

}

uint64_t sub_21FAD6D58(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE *v18;
  uint64_t v19;
  _BYTE v20[16];

  sub_21FAA333C(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_21FC5A6C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
  sub_21FA2D120(v3 + *(int *)(v14 + 28), (uint64_t)v9, (uint64_t (*)(_QWORD))sub_21FAA333C);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_21FA326EC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_21FAA333C);
    result = sub_21FC5BC70();
    __break(1u);
  }
  else
  {
    v15 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
    MEMORY[0x24BDAC7A8](v15);
    *(_QWORD *)&v20[-32] = a1;
    *(_QWORD *)&v20[-24] = a3;
    v18 = v13;
    v19 = v3;
    v16 = sub_21FAD6170(MEMORY[0x24BEE4AF8], (void (*)(uint64_t *__return_ptr, uint64_t *, id *))sub_21FAD83AC, (uint64_t)&v20[-48], a2);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    return v16;
  }
  return result;
}

void sub_21FAD6F28(uint64_t *a1@<X0>, id *a2@<X1>, id a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;

  v24 = a6;
  v11 = *a1;
  v12 = *a2;
  v13 = objc_msgSend(*a2, sel_primaryConcept);
  v14 = objc_msgSend(v13, sel_groupByConcept);

  v15 = objc_msgSend(v14, sel_identifier);
  v16 = objc_msgSend(v15, sel_rawIdentifier);

  if (v16 == a3)
  {
    v17 = objc_msgSend(v12, sel_chartableCodedQuantitySet);
    if (v17)
    {
      v18 = v17;
      if (objc_msgSend(v17, sel_isCompatibleWithUnit_, a4))
      {
        v19 = objc_msgSend(v18, sel_quantities);
        sub_21FA5BE58(0, (unint64_t *)&unk_255541220);
        v20 = sub_21FC5B7A8();

        MEMORY[0x24BDAC7A8](v21);
        v23[2] = v18;
        v23[3] = a5;
        v23[4] = a4;
        v23[5] = v24;
        v22 = sub_21FBF7FB8((void (*)(id *))sub_21FAD83C8, (uint64_t)v23, v20);
        swift_bridgeObjectRelease();
        v25 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21FBDFF1C(v22);
        swift_bridgeObjectRelease();

        *a7 = v25;
        return;
      }

    }
  }
  *a7 = v11;
  swift_bridgeObjectRetain();
}

uint64_t sub_21FAD7120@<X0>(void **a1@<X0>, void *a2@<X1>, void *a3@<X3>, _QWORD *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;

  v32 = a4;
  v33 = a3;
  v34 = a5;
  v7 = type metadata accessor for PBTimeSeries.Value(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21FC5AAAC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = objc_msgSend(a2, sel_date);
  sub_21FC5AA94();

  if ((sub_21FC5A6B0() & 1) != 0)
  {
    *((_DWORD *)v10 + 10) = 0;
    *(_QWORD *)v10 = 0;
    *((_QWORD *)v10 + 1) = 0;
    *((_DWORD *)v10 + 4) = 0;
    *((_QWORD *)v10 + 6) = 0;
    *((_QWORD *)v10 + 7) = 0xE000000000000000;
    *((_QWORD *)v10 + 8) = 0;
    *((_QWORD *)v10 + 9) = 0xE000000000000000;
    *((_OWORD *)v10 + 5) = 0u;
    *((_OWORD *)v10 + 6) = 0u;
    *((_QWORD *)v10 + 15) = MEMORY[0x24BEE4AF8];
    *((_QWORD *)v10 + 16) = 0;
    *((_WORD *)v10 + 68) = 256;
    sub_21FC5AD10();
    v31 = v8;
    v17 = v33;
    objc_msgSend(v15, sel_doubleValueForUnit_, v33);
    *((_QWORD *)v10 + 14) = v18;
    v19 = *(id *)(*v32 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v20 = (void *)sub_21FC5AA64();
    v21 = objc_msgSend(v19, sel_stringFromDate_, v20);

    v22 = sub_21FC5B604();
    v24 = v23;

    *((_QWORD *)v10 + 3) = v22;
    *((_QWORD *)v10 + 4) = v24;
    v25 = objc_msgSend(v17, sel_unitString);
    v26 = sub_21FC5B604();
    v28 = v27;

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
    *((_QWORD *)v10 + 6) = v26;
    *((_QWORD *)v10 + 7) = v28;
    v29 = v34;
    sub_21FA2D120((uint64_t)v10, v34, type metadata accessor for PBTimeSeries.Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v7);
    return sub_21FA326EC((uint64_t)v10, type metadata accessor for PBTimeSeries.Value);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v34, 1, 1, v7);
  }
}

BOOL sub_21FAD73A8(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = sub_21FAD73D8();

  return v2;
}

BOOL sub_21FAD73D8()
{
  void *v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  BOOL v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  unsigned int v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  void *v34;
  void *v35;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;

  v1 = (uint64_t)&selRef_predicateForDiagnosticTestResultCategory_;
  v2 = objc_msgSend(v0, sel_codedValues);
  sub_21FA5BE58(0, &qword_2555405B8);
  v3 = sub_21FC5B7A8();

  if (v3 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v4 != 2)
    return 0;
  v5 = objc_msgSend(v0, *(SEL *)(v1 + 152));
  v6 = sub_21FC5B7A8();

  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_6;
LABEL_31:
    swift_bridgeObjectRelease_n();
    v47 = 0;
    goto LABEL_32;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  v7 = sub_21FC5BC7C();
  if (!v7)
    goto LABEL_31;
LABEL_6:
  v37 = v0;
  v8 = 0;
  v43 = v6;
  v45 = v6 & 0xC000000000000001;
  v39 = v6 + 32;
  v41 = v7;
  do
  {
    if (v45)
      v9 = (id)MEMORY[0x2207D057C](v8, v6);
    else
      v9 = *(id *)(v39 + 8 * v8);
    v10 = v9;
    v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      goto LABEL_30;
    }
    v12 = objc_msgSend(v9, sel_codings);
    sub_21FA5BE58(0, &qword_2555405B0);
    v13 = sub_21FC5B7A8();

    v47 = v10;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v14 = sub_21FC5BC7C();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_14:
        v15 = (void *)objc_opt_self();
        v1 = 4;
        while (1)
        {
          v16 = (v13 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2207D057C](v1 - 4, v13)
              : *(id *)(v13 + 8 * v1);
          v17 = v16;
          v0 = (void *)(v1 - 3);
          if (__OFADD__(v1 - 4, 1))
            break;
          v18 = objc_msgSend(v15, sel_loinc_systolicBloodPressureCoding);
          v19 = objc_msgSend(v17, sel_isEquivalent_, v18);

          if (v19)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_25;
          }
          ++v1;
          if (v0 == (void *)v14)
            goto LABEL_7;
        }
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        v4 = sub_21FC5BC7C();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14)
        goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease_n();

    v6 = v43;
  }
  while (v8 != v41);
  swift_bridgeObjectRelease_n();
  v47 = 0;
LABEL_25:
  v0 = v37;
  v1 = 0x24E498000;
LABEL_32:
  v20 = objc_msgSend(v0, *(SEL *)(v1 + 152));
  v21 = sub_21FC5B7A8();

  if (v21 >> 62)
  {
LABEL_56:
    swift_bridgeObjectRetain();
    v40 = sub_21FC5BC7C();
    if (v40)
      goto LABEL_34;
    goto LABEL_57;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v40 = v22;
  if (!v22)
  {
LABEL_57:
    swift_bridgeObjectRelease_n();
    v34 = 0;
    v35 = v47;
    if (v47)
      goto LABEL_53;
LABEL_58:

    return 0;
  }
LABEL_34:
  v23 = 0;
  v42 = v21;
  v44 = v21 & 0xC000000000000001;
  v38 = v21 + 32;
  while (1)
  {
    if (v44)
      v24 = (id)MEMORY[0x2207D057C](v23, v21);
    else
      v24 = *(id *)(v38 + 8 * v23);
    v21 = (unint64_t)v24;
    v11 = __OFADD__(v23++, 1);
    if (v11)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v25 = objc_msgSend(v24, sel_codings);
    sub_21FA5BE58(0, &qword_2555405B0);
    v26 = sub_21FC5B7A8();

    v46 = (void *)v21;
    if (v26 >> 62)
      break;
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27)
      goto LABEL_42;
LABEL_35:
    swift_bridgeObjectRelease_n();

    v21 = v42;
    if (v23 == v40)
      goto LABEL_57;
  }
  swift_bridgeObjectRetain_n();
  v27 = sub_21FC5BC7C();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_35;
LABEL_42:
  v28 = (void *)objc_opt_self();
  v29 = 4;
  while (1)
  {
    if ((v26 & 0xC000000000000001) != 0)
      v30 = (id)MEMORY[0x2207D057C](v29 - 4, v26);
    else
      v30 = *(id *)(v26 + 8 * v29);
    v31 = v30;
    v21 = v29 - 3;
    if (__OFADD__(v29 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    v32 = objc_msgSend(v28, sel_loinc_diastolicBloodPressureCoding);
    v33 = objc_msgSend(v31, sel_isEquivalent_, v32);

    if (v33)
      break;
    ++v29;
    if (v21 == v27)
      goto LABEL_35;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v34 = v46;
  v35 = v47;
  if (!v47)
    goto LABEL_58;
LABEL_53:

  return v34 != 0;
}

BOOL sub_21FAD7968(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = sub_21FAD7998();

  return v2;
}

BOOL sub_21FAD7998()
{
  void *v0;
  uint64_t v1;
  char **v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  BOOL v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  void *v34;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t i;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  void *v46;
  void *v47;

  v1 = (uint64_t)v0;
  v2 = &selRef_predicateForDiagnosticTestResultCategory_;
  v3 = objc_msgSend(v0, sel_codedValues);
  sub_21FA5BE58(0, &qword_2555405B8);
  v4 = sub_21FC5B7A8();

  if (v4 >> 62)
    goto LABEL_28;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v5 != 1)
    return 0;
  v6 = objc_msgSend((id)v1, v2[19]);
  v7 = sub_21FC5B7A8();

  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_6;
LABEL_31:
    swift_bridgeObjectRelease_n();
    v20 = 0;
    goto LABEL_32;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  v8 = sub_21FC5BC7C();
  if (!v8)
    goto LABEL_31;
LABEL_6:
  v36 = v1;
  v9 = 0;
  v42 = v7;
  v44 = v7 & 0xC000000000000001;
  v38 = v7 + 32;
  v40 = v8;
  do
  {
    if (v44)
      v10 = (id)MEMORY[0x2207D057C](v9, v7);
    else
      v10 = *(id *)(v38 + 8 * v9);
    v7 = (unint64_t)v10;
    v11 = __OFADD__(v9++, 1);
    if (v11)
    {
      __break(1u);
      goto LABEL_30;
    }
    v12 = objc_msgSend(v10, sel_codings);
    sub_21FA5BE58(0, &qword_2555405B0);
    v13 = sub_21FC5B7A8();

    v46 = (void *)v7;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v14 = sub_21FC5BC7C();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_14:
        v15 = (void *)objc_opt_self();
        v1 = 4;
        while (1)
        {
          v16 = (v13 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2207D057C](v1 - 4, v13)
              : *(id *)(v13 + 8 * v1);
          v17 = v16;
          v18 = v1 - 3;
          if (__OFADD__(v1 - 4, 1))
            break;
          v19 = objc_msgSend(v15, sel_loinc_systolicBloodPressureCoding);
          v2 = (char **)objc_msgSend(v17, sel_isEquivalent_, v19);

          if ((_DWORD)v2)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            v20 = v46;
            goto LABEL_25;
          }
          ++v1;
          if (v18 == v14)
            goto LABEL_7;
        }
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        v5 = sub_21FC5BC7C();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14)
        goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease_n();

    v7 = v42;
  }
  while (v9 != v40);
  swift_bridgeObjectRelease_n();
  v20 = 0;
LABEL_25:
  v1 = v36;
  v2 = &selRef_predicateForDiagnosticTestResultCategory_;
LABEL_32:
  v21 = objc_msgSend((id)v1, v2[19]);
  v22 = sub_21FC5B7A8();

  if (v22 >> 62)
    goto LABEL_57;
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = v23; i; i = sub_21FC5BC7C())
  {
    v47 = v20;
    v24 = 0;
    v41 = v22;
    v43 = v22 & 0xC000000000000001;
    v37 = v22 + 32;
    while (1)
    {
      if (v43)
      {
        v25 = (id)MEMORY[0x2207D057C](v24, v22);
        v11 = __OFADD__(v24++, 1);
        if (v11)
          goto LABEL_56;
      }
      else
      {
        v25 = *(id *)(v37 + 8 * v24);
        v11 = __OFADD__(v24++, 1);
        if (v11)
          goto LABEL_56;
      }
      v45 = v25;
      v26 = objc_msgSend(v25, sel_codings);
      sub_21FA5BE58(0, &qword_2555405B0);
      v27 = sub_21FC5B7A8();

      if (v27 >> 62)
        break;
      v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v28)
        goto LABEL_43;
LABEL_35:
      swift_bridgeObjectRelease_n();

      v22 = v41;
      if (v24 == i)
      {
        swift_bridgeObjectRelease_n();
        v34 = 0;
        v20 = v47;
        goto LABEL_59;
      }
    }
    swift_bridgeObjectRetain_n();
    v28 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
    if (!v28)
      goto LABEL_35;
LABEL_43:
    v29 = (void *)objc_opt_self();
    v22 = 4;
    while (1)
    {
      v30 = (v27 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x2207D057C](v22 - 4, v27)
          : *(id *)(v27 + 8 * v22);
      v31 = v30;
      v20 = (void *)(v22 - 3);
      if (__OFADD__(v22 - 4, 1))
        break;
      v32 = objc_msgSend(v29, sel_loinc_diastolicBloodPressureCoding);
      v33 = objc_msgSend(v31, sel_isEquivalent_, v32);

      if (v33)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v34 = v45;
        v20 = v47;
        goto LABEL_59;
      }
      ++v22;
      if (v20 == (void *)v28)
        goto LABEL_35;
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  v34 = 0;
LABEL_59:
  if (v20)
  {
    if (v34)
    {

      return 0;
    }

    return 1;
  }

  return v34 != 0;
}

id sub_21FAD7F54()
{
  return 0;
}

id sub_21FAD7F5C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void (*v30)(_BYTE *, uint64_t);
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  _BYTE v37[16];
  id v38[2];

  v1 = v0;
  v38[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_21FC5AAAC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v37[-v7];
  v9 = objc_msgSend(v1, sel_value);
  if (!v9)
    return 0;
  v10 = v9;
  v11 = objc_msgSend(v9, sel_inspectableValue);

  if (!v11)
    return 0;
  v12 = objc_msgSend(v1, sel_sortDate);
  v13 = objc_msgSend(v12, sel_keyPath);

  v14 = sub_21FC5B604();
  v16 = v15;

  if (v14 == sub_21FC5B604() && v16 == v17)
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  v18 = sub_21FC5BDF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {

    return 0;
  }
  v19 = objc_msgSend(v1, sel_diagnosticTestCodingCollection);
  v20 = objc_msgSend(v19, sel_codings);

  sub_21FA5BE58(0, &qword_2555405B0);
  sub_21FC5B7A8();

  v21 = objc_msgSend(v1, sel_referenceRanges);
  if (v21)
  {
    v22 = v21;
    sub_21FA5BE58(0, &qword_2555405C0);
    v23 = sub_21FC5B7A8();

  }
  else
  {
    v23 = 0;
  }
  v24 = v11;
  v25 = (void *)sub_21FC5B79C();
  swift_bridgeObjectRelease();
  if (v23)
  {
    sub_21FA5BE58(0, &qword_2555405C0);
    v26 = (void *)sub_21FC5B79C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
  }
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3A18]), sel_initWithCodings_value_referenceRanges_, v25, v24, v26);

  v28 = objc_msgSend(v1, sel_sortDate);
  v29 = objc_msgSend(v28, sel_date);

  sub_21FC5AA94();
  sub_21FAA2DB8((uint64_t)v8);
  v30 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v30(v6, v2);
  v31 = (void *)sub_21FC5AA64();
  v38[0] = 0;
  v32 = objc_msgSend(v27, sel_chartableCodedQuantitySetWithDate_error_, v31, v38);

  v33 = v38[0];
  if (!v32)
  {
    v34 = v33;
    v35 = (void *)sub_21FC5A8E4();

    swift_willThrow();
    v30(v8, v2);

    return 0;
  }
  v30(v8, v2);

  return v32;
}

id sub_21FAD8360(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = sub_21FAD7F5C();

  return v2;
}

void sub_21FAD8390(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_21FAD62B4(a1, *(unsigned __int8 *)(v2 + 16), *(_QWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_21FAD83AC(uint64_t *a1@<X0>, id *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_21FAD6F28(a1, a2, *(id *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), a3);
}

uint64_t sub_21FAD83C8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAD7120(a1, *(void **)(v2 + 16), *(void **)(v2 + 32), *(_QWORD **)(v2 + 40), a2);
}

uint64_t sub_21FAD83E4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_21FC5B604();
  qword_25406D890 = result;
  *(_QWORD *)algn_25406D898 = v1;
  return result;
}

uint64_t sub_21FAD8410()
{
  uint64_t v1;

  swift_getObjectType();
  swift_getMetatypeMetadata();
  v1 = sub_21FC5B64C();
  swift_bridgeObjectRetain();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  return v1;
}

id sub_21FAD84DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VerifiableHealthRecordsParsingServiceServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VerifiableHealthRecordsParsingServiceServer()
{
  return objc_opt_self();
}

uint64_t sub_21FAD8564(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  id v20;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v9 = sub_21FC5AFD4();
  __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
  v10 = v4;
  v11 = sub_21FC5AFC8();
  v12 = sub_21FC5B994();
  if (os_log_type_enabled(v11, v12))
  {
    v23 = a3;
    v13 = (uint8_t *)swift_slowAlloc();
    v22 = a1;
    v14 = swift_slowAlloc();
    v24 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getMetatypeMetadata();
    v25 = sub_21FC5B64C();
    v26 = v15;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    v25 = sub_21FABDCF8(v25, v26, &v24);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v11, v12, "%s starting", v13, 0xCu);
    swift_arrayDestroy();
    v16 = v14;
    a1 = v22;
    MEMORY[0x2207D105C](v16, -1, -1);
    v17 = v13;
    a3 = v23;
    MEMORY[0x2207D105C](v17, -1, -1);

  }
  else
  {

  }
  type metadata accessor for VerifiableHealthRecordsParsingService();
  *(_QWORD *)(swift_initStackObject() + 16) = 0;
  v25 = sub_21FBB1188(a1, a2);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v10;
  v18[3] = a3;
  v18[4] = a4;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v10;
  v19[3] = a3;
  v19[4] = a4;
  sub_21FAD9074();
  sub_21FAD911C();
  v20 = v10;
  swift_retain_n();
  v20;
  sub_21FC5B2D4();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_21FC5B19C();
  swift_endAccess();
  swift_release();
  swift_setDeallocating();
  return swift_release();
}

void sub_21FAD88D0(void **a1, void *a2, void (*a3)(_QWORD, id))
{
  void *v4;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *a1;
  if (*a1)
  {
    v6 = v4;
    if (qword_25406B7F8 != -1)
      swift_once();
    v7 = sub_21FC5AFD4();
    __swift_project_value_buffer(v7, (uint64_t)qword_25406D830);
    v8 = v4;
    v9 = a2;
    v10 = v4;
    v11 = v9;
    v12 = sub_21FC5AFC8();
    v13 = sub_21FC5B97C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v31 = v15;
      *(_DWORD *)v14 = 136315394;
      v16 = sub_21FAD8410();
      sub_21FABDCF8(v16, v17, &v31);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      v18 = v4;
      sub_21FA2CDB4();
      v19 = sub_21FC5B64C();
      sub_21FABDCF8(v19, v20, &v31);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v12, v13, "%s failed with %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v15, -1, -1);
      MEMORY[0x2207D105C](v14, -1, -1);
    }
    else
    {

    }
    swift_getErrorValue();
    v28 = sub_21FBADCD8(v30);
    a3(0, v28);

  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v21 = sub_21FC5AFD4();
    __swift_project_value_buffer(v21, (uint64_t)qword_25406D830);
    v29 = a2;
    v22 = sub_21FC5AFC8();
    v23 = sub_21FC5B994();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = sub_21FAD8410();
      sub_21FABDCF8(v26, v27, &v31);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v22, v23, "%s finished successfully", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v25, -1, -1);
      MEMORY[0x2207D105C](v24, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_21FAD8D00(uint64_t *a1, void *a2, uint64_t (*a3)(uint64_t, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v5 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v6 = sub_21FC5AFD4();
  __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
  v7 = a2;
  v8 = sub_21FC5AFC8();
  v9 = sub_21FC5B970();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_21FAD8410();
    sub_21FABDCF8(v12, v13, &v15);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v8, v9, "%s received a parsing result", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v11, -1, -1);
    MEMORY[0x2207D105C](v10, -1, -1);

  }
  else
  {

  }
  return a3(v5, 0);
}

void sub_21FAD8F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_21FC5A8D8();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_21FAD8FFC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_21FAD9020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FAD8F7C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_21FAD902C(void **a1)
{
  uint64_t v1;

  sub_21FAD88D0(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, id))(v1 + 24));
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FAD9068(uint64_t *a1)
{
  uint64_t v1;

  return sub_21FAD8D00(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t, _QWORD))(v1 + 24));
}

void sub_21FAD9074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2555412C8)
  {
    sub_21FAD90E0();
    sub_21FA2CDB4();
    v0 = sub_21FC5B190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2555412C8);
  }
}

unint64_t sub_21FAD90E0()
{
  unint64_t result;

  result = qword_2555412D0;
  if (!qword_2555412D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2555412D0);
  }
  return result;
}

unint64_t sub_21FAD911C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2555412E0;
  if (!qword_2555412E0)
  {
    sub_21FAD9074();
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2555412E0);
  }
  return result;
}

uint64_t sub_21FAD9164@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t (*v33)(void);
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t (*v44)(void);
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55[3];
  uint64_t v56;
  uint64_t v57;

  v46 = a2;
  v53 = a3;
  sub_21FA5B848();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA5B964();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA59CF0();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDBA1B0];
  sub_21FA5B0CC(0, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v45 - v17;
  v19 = *a1;
  v55[0] = v19;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_21FC5B22C();
  sub_21FA2CDB4();
  sub_21FC5B208();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_21FA5B13C((unint64_t *)&qword_25553F0E8, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v13, MEMORY[0x24BDBA1D0]);
  v20 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v21 = v19 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_21FA2CEA0(v21, (uint64_t)v55);
  v22 = v56;
  v23 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v25 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  swift_bridgeObjectRelease();
  if (v25)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v26 = sub_21FC5AFD4();
    __swift_project_value_buffer(v26, (uint64_t)qword_25406D830);
    swift_retain_n();
    v27 = sub_21FC5AFC8();
    v28 = sub_21FC5B970();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      *(_DWORD *)v29 = 136315138;
      v55[0] = v30;
      sub_21FC5AAF4();
      sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v31 = sub_21FC5BDCC();
      v54 = sub_21FABDCF8(v31, v32, v55);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v27, v28, "No search required. DocRef already exists. Account: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v30, -1, -1);
      MEMORY[0x2207D105C](v29, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v55[0] = v20;
    v44 = MEMORY[0x24BDB9AE0];
    sub_21FA5B0CC(0, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v44, MEMORY[0x24BDB9AF8]);
    v42 = sub_21FC5B280();
    result = swift_release();
  }
  else
  {
    v55[0] = v20;
    v33 = MEMORY[0x24BDB9AE0];
    sub_21FA5B0CC(0, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FA5B8F8();
    sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v33, MEMORY[0x24BDB9AF8]);
    v34 = v47;
    sub_21FC5B31C();
    v35 = swift_allocObject();
    v36 = v46;
    *(_QWORD *)(v35 + 16) = v46;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_21FADA208;
    *(_QWORD *)(v37 + 24) = v35;
    v38 = v36;
    sub_21FC5B184();
    sub_21FA2A08C(&qword_25553F118, (uint64_t (*)(uint64_t))sub_21FA5B848, MEMORY[0x24BDB98C8]);
    v40 = v49;
    v39 = v50;
    sub_21FC5B34C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v40);
    sub_21FA2A08C(&qword_25553F128, (uint64_t (*)(uint64_t))sub_21FA5B964, MEMORY[0x24BDB98F0]);
    v41 = v52;
    v42 = sub_21FC5B280();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v39, v41);
  }
  *v53 = v42;
  return result;
}

uint64_t sub_21FAD9744@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v6 = sub_21FC5AFD4();
  __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
  swift_retain_n();
  v7 = sub_21FC5AFC8();
  v8 = sub_21FC5B970();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v19[0] = v10;
    v22 = a2;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v11 = sub_21FC5BDCC();
    sub_21FABDCF8(v11, v12, v19);
    a2 = v22;
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v7, v8, "Preparing search request. Account: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v10, -1, -1);
    v13 = v9;
    v3 = v2;
    MEMORY[0x2207D105C](v13, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = v5 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_21FA2CEA0(v14, (uint64_t)v19);
  v15 = v20;
  v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_21FBA6090(v15, v16, a2);
  if (!v3)
  {
    sub_21FA5B8F8();
    *(_QWORD *)(a2 + *(int *)(v17 + 48)) = v5;
    swift_retain();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_21FAD99C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a3;
  v5 = sub_21FC5A5D8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  sub_21FA5BD2C();
  v9 = v8;
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FADA234(0, &qword_2555412F0, (void (*)(uint64_t))sub_21FADA2C8);
  v30 = v12;
  v32 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  sub_21FADA234(0, &qword_255541300, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
  v29 = v15;
  v31 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - v16;
  v33 = sub_21FC531A8(a1, a2, 3, v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v18 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v19 + v18, (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_21FA5C118;
  *(_QWORD *)(v20 + 24) = v19;
  sub_21FA5BFD8(0, (unint64_t *)&qword_25553F148, (unint64_t *)&qword_25553F150, (unint64_t *)&qword_25553F158);
  sub_21FA5BDDC(0, &qword_25553F160, (unint64_t *)&qword_25553F168);
  sub_21FA5BE90();
  sub_21FC5B31C();
  swift_release();
  swift_release();
  sub_21FA2A08C(&qword_25553F190, (uint64_t (*)(uint64_t))sub_21FA5BD2C, MEMORY[0x24BDB98C8]);
  v21 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  v33 = v21;
  sub_21FA5BFD8(0, &qword_25553F180, &qword_25553F160, (unint64_t *)&qword_25553F168);
  sub_21FADA2C8();
  sub_21FA5C050();
  sub_21FC5B31C();
  swift_release();
  type metadata accessor for ClinicalSharingSyncContext();
  v22 = v30;
  sub_21FC5B0DC();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v22);
  sub_21FADA38C();
  v23 = v29;
  v24 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v23);
  return v24;
}

uint64_t sub_21FAD9D48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 24);
  sub_21FC5A614();
  swift_allocObject();
  sub_21FC5A608();
  sub_21FADBC6C();
  sub_21FC5A5FC();
  result = swift_release();
  if (!v2)
  {
    *a2 = v6;
    a2[1] = v4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_21FAD9DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22[4];
  uint64_t v23;

  v3 = a1;
  if (a1)
  {
    v4 = swift_bridgeObjectRetain();
    v5 = sub_21FADBA84(v4, 0xD000000000000011, 0x800000021FC76D40);
    swift_bridgeObjectRelease();
    v22[0] = v5;
    swift_bridgeObjectRetain();
    sub_21FADA3E4(v22);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v22[0] + 16))
    {
      v3 = *(_QWORD *)(v22[0] + 32);
      v6 = *(_QWORD *)(v22[0] + 40);
      v7 = *(_QWORD *)(v22[0] + 72);
      v8 = *(_QWORD *)(v22[0] + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21FADBC44(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_21FADBC58(v7, v8);
      goto LABEL_6;
    }
    swift_release();
    v3 = 0;
  }
  v6 = 0;
LABEL_6:
  if (qword_25406B7F8 != -1)
    swift_once();
  v9 = sub_21FC5AFD4();
  __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v10 = sub_21FC5AFC8();
  v11 = sub_21FC5B970();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v23 = v21;
    *(_DWORD *)v12 = 136315394;
    sub_21FC5AAF4();
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v13 = sub_21FC5BDCC();
    v22[0] = sub_21FABDCF8(v13, v14, &v23);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v22[0] = v3;
    v22[1] = v6;
    sub_21FA32728();
    swift_bridgeObjectRetain_n();
    sub_21FC5BE08();
    v15 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_21FC5BAF0();
    swift_unknownObjectRelease();
    v16 = sub_21FC5B64C();
    v17 = v3;
    v19 = v18;
    swift_bridgeObjectRelease();
    v22[0] = sub_21FABDCF8(v16, v19, &v23);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease_n();
    v3 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v10, v11, "Received search response. Account: %s ResourceID: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v21, -1, -1);
    MEMORY[0x2207D105C](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_21FAD23A0(v3, v6);
  swift_retain();
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_21FADA1B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_21FAD9DF8(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_21FADA1E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21FADA208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21FAD99C4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_21FADA210()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21FADA234(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_21FA5BFD8(255, &qword_25553F180, &qword_25553F160, (unint64_t *)&qword_25553F168);
    a3(255);
    sub_21FA5C050();
    v5 = sub_21FC5B0E8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_21FADA2C8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2555412F8)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2555412F8);
  }
}

uint64_t sub_21FADA32C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_21FC5A5D8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

unint64_t sub_21FADA38C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255541308;
  if (!qword_255541308)
  {
    sub_21FADA234(255, &qword_255541300, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB98C8], v1);
    atomic_store(result, (unint64_t *)&qword_255541308);
  }
  return result;
}

uint64_t sub_21FADA3E4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21FBF27A0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_21FADA44C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21FADA44C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  char v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t v145;

  v3 = a1[1];
  result = sub_21FC5BDC0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_165;
    if (v3)
      return sub_21FADB0D0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_173;
  v136 = v3;
  v131 = result;
  v139 = v1;
  v129 = a1;
  if (v3 < 2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    v138 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v9 = (char *)MEMORY[0x24BEE4AF8];
LABEL_131:
      v133 = v7;
      if (v11 >= 2)
      {
        v122 = *v129;
        do
        {
          v123 = v11 - 2;
          if (v11 < 2)
            goto LABEL_160;
          if (!v122)
            goto LABEL_172;
          v124 = *(_QWORD *)&v9[16 * v123 + 32];
          v125 = *(_QWORD *)&v9[16 * v11 + 24];
          sub_21FADB3C8((char *)(v122 + 56 * v124), (char *)(v122 + 56 * *(_QWORD *)&v9[16 * v11 + 16]), v122 + 56 * v125, v138);
          if (v139)
            goto LABEL_128;
          if (v125 < v124)
            goto LABEL_161;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_21FBF2764((uint64_t)v9);
          if (v123 >= *((_QWORD *)v9 + 2))
            goto LABEL_162;
          v126 = &v9[16 * v123 + 32];
          *(_QWORD *)v126 = v124;
          *((_QWORD *)v126 + 1) = v125;
          v127 = *((_QWORD *)v9 + 2);
          if (v11 > v127)
            goto LABEL_163;
          memmove(&v9[16 * v11 + 16], &v9[16 * v11 + 32], 16 * (v127 - v11));
          *((_QWORD *)v9 + 2) = v127 - 1;
          v11 = v127 - 1;
        }
        while (v127 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v133 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_21FC5B7D8();
    *(_QWORD *)(v7 + 16) = v6;
    v138 = (char *)(v7 + 32);
  }
  v133 = v7;
  v8 = 0;
  v130 = *a1 + 80;
  v140 = *a1;
  v128 = *a1 - 56;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v10 = v136;
  while (2)
  {
    v12 = v8;
    v13 = v8 + 1;
    if (v8 + 1 >= v10)
    {
      v22 = v140;
      goto LABEL_54;
    }
    v14 = v140 + 56 * v13;
    v15 = *(_QWORD *)(v14 + 40);
    v16 = *(_QWORD *)(v14 + 48);
    v17 = v140 + 56 * v8;
    v18 = *(_QWORD *)(v17 + 40);
    v19 = *(_QWORD *)(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21FADBC44(v15, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21FADBC44(v18, v19);
    if (v16 >= 2)
    {
      sub_21FADBC44(v15, v16);
      v20 = v15;
      v21 = v16;
    }
    else
    {
      sub_21FADBC58(v15, v16);
      v20 = 0;
      v21 = 0xE000000000000000;
    }
    v135 = v12;
    if (v19 >= 2)
    {
      swift_bridgeObjectRetain();
      v23 = v18;
      v24 = v19;
    }
    else
    {
      sub_21FADBC58(v18, v19);
      v23 = 0;
      v24 = 0xE000000000000000;
    }
    if (v23 == v20 && v24 == v21)
      v144 = 0;
    else
      v144 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21FADBC58(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21FADBC58(v15, v16);
    v12 = v135;
    v13 = v135 + 2;
    if (v135 + 2 >= v136)
      goto LABEL_46;
    v26 = (_QWORD *)(v130 + 56 * v135);
    while (1)
    {
      v141 = v13;
      v27 = v26[9];
      v28 = v26[10];
      v30 = v26[2];
      v29 = v26[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21FADBC44(v27, v28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21FADBC44(v30, v29);
      if (v28 >= 2)
      {
        sub_21FADBC44(v27, v28);
        v31 = v27;
        v32 = v28;
      }
      else
      {
        sub_21FADBC58(v27, v28);
        v31 = 0;
        v32 = 0xE000000000000000;
      }
      if (v29 >= 2)
      {
        swift_bridgeObjectRetain();
        v33 = v29;
        if (v30 != v31)
          goto LABEL_40;
      }
      else
      {
        sub_21FADBC58(v30, v29);
        v33 = 0xE000000000000000;
        if (v31)
          goto LABEL_40;
      }
      if (v33 == v32)
      {
        v34 = 0;
        goto LABEL_41;
      }
LABEL_40:
      v34 = sub_21FC5BDF0();
LABEL_41:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21FADBC58(v30, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21FADBC58(v27, v28);
      if (((v144 ^ v34) & 1) != 0)
        break;
      v13 = v141 + 1;
      v26 += 7;
      if (v136 == v141 + 1)
      {
        v13 = v136;
        goto LABEL_45;
      }
    }
    v13 = v141;
LABEL_45:
    v12 = v135;
LABEL_46:
    v22 = v140;
    if ((v144 & 1) != 0)
    {
      if (v13 < v12)
        goto LABEL_166;
      if (v12 < v13)
      {
        v35 = 56 * v13;
        v36 = v13;
        v37 = v12;
        v38 = 56 * v12;
        do
        {
          if (v37 != --v36)
          {
            if (!v140)
              goto LABEL_171;
            v39 = v140 + v38;
            v40 = *(_OWORD *)(v140 + v38);
            v41 = v140 + v35;
            v42 = *(_QWORD *)(v140 + v38 + 16);
            v43 = *(_QWORD *)(v140 + v38 + 24);
            v44 = *(_QWORD *)(v140 + v38 + 48);
            v45 = *(_OWORD *)(v140 + v38 + 32);
            v46 = *(_OWORD *)(v140 + v35 - 40);
            v47 = *(_OWORD *)(v140 + v35 - 24);
            v48 = *(_OWORD *)(v140 + v35 - 56);
            *(_QWORD *)(v39 + 48) = *(_QWORD *)(v140 + v35 - 8);
            *(_OWORD *)(v39 + 16) = v46;
            *(_OWORD *)(v39 + 32) = v47;
            *(_OWORD *)v39 = v48;
            *(_OWORD *)(v41 - 56) = v40;
            *(_QWORD *)(v41 - 40) = v42;
            *(_QWORD *)(v41 - 32) = v43;
            *(_OWORD *)(v41 - 24) = v45;
            *(_QWORD *)(v41 - 8) = v44;
          }
          ++v37;
          v35 -= 56;
          v38 += 56;
        }
        while (v37 < v36);
      }
    }
LABEL_54:
    if (v13 >= v136)
      goto LABEL_81;
    if (__OFSUB__(v13, v12))
      goto LABEL_164;
    if (v13 - v12 >= v131)
      goto LABEL_81;
    if (__OFADD__(v12, v131))
      goto LABEL_167;
    if (v12 + v131 >= v136)
      v49 = v136;
    else
      v49 = v12 + v131;
    if (v49 >= v12)
    {
      if (v13 == v49)
        goto LABEL_81;
      v134 = v49;
      v132 = v9;
      v50 = v128 + 56 * v13;
      while (2)
      {
        v52 = v22 + 56 * v13;
        v53 = *(_QWORD *)(v52 + 40);
        v54 = *(_QWORD *)(v52 + 48);
        v55 = v12;
        v137 = v50;
        v142 = v13;
        while (2)
        {
          v56 = v53;
          v58 = *(_QWORD *)(v50 + 40);
          v57 = *(_QWORD *)(v50 + 48);
          v145 = v55;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21FADBC44(v56, v54);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v59 = v58;
          sub_21FADBC44(v58, v57);
          if (v54 >= 2)
          {
            sub_21FADBC44(v56, v54);
            v60 = v56;
            v61 = v54;
          }
          else
          {
            sub_21FADBC58(v56, v54);
            v60 = 0;
            v61 = 0xE000000000000000;
          }
          if (v57 >= 2)
          {
            swift_bridgeObjectRetain();
            v62 = v57;
            if (v59 == v60)
              goto LABEL_75;
            goto LABEL_76;
          }
          sub_21FADBC58(v59, v57);
          v62 = 0xE000000000000000;
          if (v60)
            goto LABEL_76;
LABEL_75:
          if (v62 != v61)
          {
LABEL_76:
            v63 = sub_21FC5BDF0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21FADBC58(v59, v57);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21FADBC58(v56, v54);
            if ((v63 & 1) == 0)
              goto LABEL_65;
            v22 = v140;
            v51 = v142;
            if (!v140)
              goto LABEL_169;
            v64 = v50 + 56;
            v66 = *(_QWORD *)(v50 + 64);
            v65 = *(_QWORD *)(v50 + 72);
            v68 = *(_QWORD *)(v50 + 80);
            v67 = *(_QWORD *)(v50 + 88);
            v53 = *(_QWORD *)(v50 + 96);
            v54 = *(_QWORD *)(v50 + 104);
            v69 = *(_OWORD *)(v50 + 16);
            v71 = *(_QWORD *)(v50 + 48);
            v70 = *(_QWORD *)(v50 + 56);
            *(_OWORD *)(v50 + 56) = *(_OWORD *)v50;
            *(_OWORD *)(v50 + 72) = v69;
            *(_OWORD *)(v50 + 88) = *(_OWORD *)(v50 + 32);
            *(_QWORD *)v50 = v70;
            *(_QWORD *)(v50 + 8) = v66;
            *(_QWORD *)(v50 + 16) = v65;
            *(_QWORD *)(v50 + 24) = v68;
            *(_QWORD *)(v50 + 32) = v67;
            *(_QWORD *)(v50 + 40) = v53;
            *(_QWORD *)(v50 + 48) = v54;
            v50 -= 56;
            v55 = v145 + 1;
            *(_QWORD *)(v64 + 48) = v71;
            if (v142 == v145 + 1)
              goto LABEL_66;
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_21FADBC58(v59, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21FADBC58(v56, v54);
LABEL_65:
        v22 = v140;
        v51 = v142;
LABEL_66:
        v13 = v51 + 1;
        v50 = v137 + 56;
        if (v13 != v134)
          continue;
        break;
      }
      v13 = v134;
      v9 = v132;
LABEL_81:
      if (v13 < v12)
        goto LABEL_159;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_21FBF2344(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v73 = *((_QWORD *)v9 + 2);
      v72 = *((_QWORD *)v9 + 3);
      v11 = v73 + 1;
      if (v73 >= v72 >> 1)
        v9 = sub_21FBF2344((char *)(v72 > 1), v73 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v11;
      v74 = v9 + 32;
      v75 = &v9[16 * v73 + 32];
      *(_QWORD *)v75 = v12;
      *((_QWORD *)v75 + 1) = v13;
      v143 = v13;
      if (v73)
      {
        while (2)
        {
          v76 = v11 - 1;
          if (v11 >= 4)
          {
            v81 = &v74[16 * v11];
            v82 = *((_QWORD *)v81 - 8);
            v83 = *((_QWORD *)v81 - 7);
            v87 = __OFSUB__(v83, v82);
            v84 = v83 - v82;
            if (v87)
              goto LABEL_148;
            v86 = *((_QWORD *)v81 - 6);
            v85 = *((_QWORD *)v81 - 5);
            v87 = __OFSUB__(v85, v86);
            v79 = v85 - v86;
            v80 = v87;
            if (v87)
              goto LABEL_149;
            v88 = v11 - 2;
            v89 = &v74[16 * v11 - 32];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v87 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v87)
              goto LABEL_151;
            v87 = __OFADD__(v79, v92);
            v93 = v79 + v92;
            if (v87)
              goto LABEL_154;
            if (v93 >= v84)
            {
              v111 = &v74[16 * v76];
              v113 = *(_QWORD *)v111;
              v112 = *((_QWORD *)v111 + 1);
              v87 = __OFSUB__(v112, v113);
              v114 = v112 - v113;
              if (v87)
                goto LABEL_158;
              v104 = v79 < v114;
            }
            else
            {
LABEL_100:
              if ((v80 & 1) != 0)
                goto LABEL_150;
              v88 = v11 - 2;
              v94 = &v74[16 * v11 - 32];
              v96 = *(_QWORD *)v94;
              v95 = *((_QWORD *)v94 + 1);
              v97 = __OFSUB__(v95, v96);
              v98 = v95 - v96;
              v99 = v97;
              if (v97)
                goto LABEL_153;
              v100 = &v74[16 * v76];
              v102 = *(_QWORD *)v100;
              v101 = *((_QWORD *)v100 + 1);
              v87 = __OFSUB__(v101, v102);
              v103 = v101 - v102;
              if (v87)
                goto LABEL_156;
              if (__OFADD__(v98, v103))
                goto LABEL_157;
              if (v98 + v103 < v79)
                goto LABEL_112;
              v104 = v79 < v103;
            }
            if (v104)
              v76 = v88;
          }
          else
          {
            if (v11 == 3)
            {
              v78 = *((_QWORD *)v9 + 4);
              v77 = *((_QWORD *)v9 + 5);
              v87 = __OFSUB__(v77, v78);
              v79 = v77 - v78;
              v80 = v87;
              goto LABEL_100;
            }
            v105 = *((_QWORD *)v9 + 4);
            v106 = *((_QWORD *)v9 + 5);
            v87 = __OFSUB__(v106, v105);
            v98 = v106 - v105;
            v99 = v87;
LABEL_112:
            if ((v99 & 1) != 0)
              goto LABEL_152;
            v107 = &v74[16 * v76];
            v109 = *(_QWORD *)v107;
            v108 = *((_QWORD *)v107 + 1);
            v87 = __OFSUB__(v108, v109);
            v110 = v108 - v109;
            if (v87)
              goto LABEL_155;
            if (v110 < v98)
              goto LABEL_14;
          }
          v115 = v76 - 1;
          if (v76 - 1 >= v11)
          {
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
            goto LABEL_168;
          }
          if (!v140)
            goto LABEL_170;
          v116 = v9;
          v117 = &v74[16 * v115];
          v118 = *(_QWORD *)v117;
          v119 = &v74[16 * v76];
          v120 = *((_QWORD *)v119 + 1);
          sub_21FADB3C8((char *)(v140 + 56 * *(_QWORD *)v117), (char *)(v140 + 56 * *(_QWORD *)v119), v140 + 56 * v120, v138);
          if (v139)
          {
LABEL_128:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v133 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v120 < v118)
            goto LABEL_145;
          if (v76 > *((_QWORD *)v116 + 2))
            goto LABEL_146;
          *(_QWORD *)v117 = v118;
          *(_QWORD *)&v74[16 * v115 + 8] = v120;
          v121 = *((_QWORD *)v116 + 2);
          if (v76 >= v121)
            goto LABEL_147;
          v9 = v116;
          v139 = 0;
          v11 = v121 - 1;
          memmove(&v74[16 * v76], v119 + 16, 16 * (v121 - 1 - v76));
          *((_QWORD *)v116 + 2) = v121 - 1;
          if (v121 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v11 = 1;
LABEL_14:
      v10 = v136;
      v8 = v143;
      v7 = v133;
      if (v143 >= v136)
        goto LABEL_131;
      continue;
    }
    break;
  }
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  result = sub_21FC5BC64();
  __break(1u);
  return result;
}

uint64_t sub_21FADB0D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = result;
  if (a3 != a2)
  {
    v27 = *a4;
    v4 = *a4 + 56 * a3 - 56;
LABEL_6:
    v6 = v27 + 56 * a3;
    v8 = *(_QWORD *)(v6 + 40);
    v7 = *(_QWORD *)(v6 + 48);
    v9 = v25;
    v26 = v4;
    v28 = a3;
    while (1)
    {
      v11 = *(_QWORD *)(v4 + 40);
      v10 = *(_QWORD *)(v4 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21FADBC44(v8, v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21FADBC44(v11, v10);
      if (v7 >= 2)
      {
        sub_21FADBC44(v8, v7);
        v12 = v8;
        v13 = v7;
      }
      else
      {
        sub_21FADBC58(v8, v7);
        v12 = 0;
        v13 = 0xE000000000000000;
      }
      v29 = v11;
      if (v10 >= 2)
      {
        swift_bridgeObjectRetain();
        v15 = v11;
        v14 = v10;
        if (v15 != v12)
          goto LABEL_15;
      }
      else
      {
        sub_21FADBC58(v11, v10);
        v14 = 0xE000000000000000;
        if (v12)
          goto LABEL_15;
      }
      if (v14 == v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_21FADBC58(v29, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = sub_21FADBC58(v8, v7);
        v5 = v28;
LABEL_5:
        a3 = v5 + 1;
        v4 = v26 + 56;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
LABEL_15:
      v16 = sub_21FC5BDF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21FADBC58(v29, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_21FADBC58(v8, v7);
      v5 = v28;
      if ((v16 & 1) == 0)
        goto LABEL_5;
      if (!v27)
      {
        __break(1u);
        return result;
      }
      v17 = v4 + 56;
      v19 = *(_QWORD *)(v4 + 64);
      v18 = *(_QWORD *)(v4 + 72);
      v20 = *(_QWORD *)(v4 + 80);
      result = *(_QWORD *)(v4 + 88);
      v8 = *(_QWORD *)(v4 + 96);
      v7 = *(_QWORD *)(v4 + 104);
      v21 = *(_OWORD *)(v4 + 16);
      v23 = *(_QWORD *)(v4 + 48);
      v22 = *(_QWORD *)(v4 + 56);
      *(_OWORD *)(v4 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v4 + 72) = v21;
      *(_OWORD *)(v4 + 88) = *(_OWORD *)(v4 + 32);
      *(_QWORD *)v4 = v22;
      *(_QWORD *)(v4 + 8) = v19;
      *(_QWORD *)(v4 + 16) = v18;
      *(_QWORD *)(v4 + 24) = v20;
      *(_QWORD *)(v4 + 32) = result;
      *(_QWORD *)(v4 + 40) = v8;
      *(_QWORD *)(v4 + 48) = v7;
      v4 -= 56;
      ++v9;
      *(_QWORD *)(v17 + 48) = v23;
      if (v28 == v9)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_21FADB3C8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  char *v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  _OWORD *v36;
  char *v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t result;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  const void *v57;
  char *v58;

  v4 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 56;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  v58 = __src;
  v57 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -55)
    {
      if (__dst != a2 || &a2[56 * v10] <= __dst)
        memmove(__dst, a2, 56 * v10);
      v26 = &v4[56 * v10];
      v56 = v26;
      v58 = v5;
      if (v6 < v5 && v9 >= 56)
      {
        v27 = a3 - 56;
        v55 = v6;
        do
        {
          v28 = *((_QWORD *)v26 - 2);
          v29 = *((_QWORD *)v26 - 1);
          v31 = *((_QWORD *)v5 - 2);
          v30 = *((_QWORD *)v5 - 1);
          v53 = v28;
          v49 = (unint64_t)v26;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21FADBC44(v28, v29);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21FADBC44(v31, v30);
          if (v29 >= 2)
          {
            sub_21FADBC44(v28, v29);
            v32 = v29;
          }
          else
          {
            sub_21FADBC58(v28, v29);
            v28 = 0;
            v32 = 0xE000000000000000;
          }
          v51 = v31;
          if (v30 >= 2)
          {
            swift_bridgeObjectRetain();
            v33 = v31;
            v34 = v30;
          }
          else
          {
            sub_21FADBC58(v31, v30);
            v33 = 0;
            v34 = 0xE000000000000000;
          }
          v52 = v5;
          if (v33 == v28 && v34 == v32)
            v35 = 0;
          else
            v35 = sub_21FC5BDF0();
          v36 = (_OWORD *)(v27 + 56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21FADBC58(v51, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21FADBC58(v53, v29);
          if ((v35 & 1) != 0)
          {
            v37 = (char *)v52 - 56;
            v38 = (unint64_t)v55;
            v26 = (char *)v49;
            if (v36 != v52 || v27 >= (unint64_t)v52)
            {
              v39 = *(_OWORD *)v37;
              v40 = *(_OWORD *)((char *)v52 - 40);
              v41 = *(_OWORD *)((char *)v52 - 24);
              *(_QWORD *)(v27 + 48) = *((_QWORD *)v52 - 1);
              *(_OWORD *)(v27 + 16) = v40;
              *(_OWORD *)(v27 + 32) = v41;
              *(_OWORD *)v27 = v39;
            }
            v58 = (char *)v52 - 56;
            if (v49 <= (unint64_t)v4)
              break;
          }
          else
          {
            v42 = (char *)(v49 - 56);
            v56 = (char *)(v49 - 56);
            v38 = (unint64_t)v55;
            if ((unint64_t)v36 < v49 || v27 >= v49 || v36 != (_OWORD *)v49)
            {
              v43 = *(_OWORD *)v42;
              v44 = *(_OWORD *)(v49 - 40);
              v45 = *(_OWORD *)(v49 - 24);
              *(_QWORD *)(v27 + 48) = *(_QWORD *)(v49 - 8);
              *(_OWORD *)(v27 + 16) = v44;
              *(_OWORD *)(v27 + 32) = v45;
              *(_OWORD *)v27 = v43;
            }
            v37 = (char *)v52;
            v26 = (char *)(v49 - 56);
            if (v42 <= v4)
              break;
          }
          v27 -= 56;
          v5 = v37;
        }
        while ((unint64_t)v37 > v38);
      }
LABEL_59:
      sub_21FBF258C((void **)&v58, &v57, &v56);
      return 1;
    }
  }
  else if (v7 >= -55)
  {
    if (__dst != __src || &__src[56 * v8] <= __dst)
      memmove(__dst, __src, 56 * v8);
    v48 = &v4[56 * v8];
    v56 = v48;
    if ((unint64_t)v5 < a3 && v7 >= 56)
    {
      v11 = v4;
      while (1)
      {
        v47 = v4;
        v54 = v6;
        v13 = *((_QWORD *)v5 + 5);
        v12 = *((_QWORD *)v5 + 6);
        v14 = *((_QWORD *)v11 + 5);
        v15 = *((_QWORD *)v11 + 6);
        if (v12 >= 2)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21FADBC44(v13, v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21FADBC44(v14, v15);
          sub_21FADBC44(v13, v12);
          v16 = v13;
          v17 = v12;
          if (v15 >= 2)
          {
LABEL_11:
            swift_bridgeObjectRetain();
            v18 = v15;
            if (v14 != v16)
              goto LABEL_17;
            goto LABEL_15;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21FADBC44(v13, v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21FADBC44(v14, v15);
          sub_21FADBC58(v13, v12);
          v16 = 0;
          v17 = 0xE000000000000000;
          if (v15 >= 2)
            goto LABEL_11;
        }
        sub_21FADBC58(v14, v15);
        v18 = 0xE000000000000000;
        if (v16)
          goto LABEL_17;
LABEL_15:
        if (v18 == v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_21FADBC58(v14, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21FADBC58(v13, v12);
          goto LABEL_21;
        }
LABEL_17:
        v19 = sub_21FC5BDF0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21FADBC58(v14, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21FADBC58(v13, v12);
        if ((v19 & 1) != 0)
        {
          v20 = v5 + 56;
          v21 = v54;
          v22 = v5;
          if (v54 == v5)
          {
            v4 = v47;
            if (v54 < v20)
              goto LABEL_27;
          }
          else
          {
            v4 = v47;
          }
          goto LABEL_26;
        }
LABEL_21:
        v4 = v11 + 56;
        v21 = v54;
        v22 = v11;
        v20 = v5;
        if (v54 == v11)
        {
          v11 += 56;
          if (v54 < v4)
            goto LABEL_27;
        }
        else
        {
          v11 += 56;
        }
LABEL_26:
        v23 = *(_OWORD *)v22;
        v24 = *((_OWORD *)v22 + 1);
        v25 = *((_OWORD *)v22 + 2);
        *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
        *((_OWORD *)v21 + 1) = v24;
        *((_OWORD *)v21 + 2) = v25;
        *(_OWORD *)v21 = v23;
LABEL_27:
        v6 = v21 + 56;
        if (v11 < v48)
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        v57 = v4;
        v58 = v6;
        goto LABEL_59;
      }
    }
    goto LABEL_59;
  }
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

uint64_t sub_21FADBA84(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = 0;
  v4 = *(_QWORD *)(result + 16);
  v5 = result + 80;
  v26 = -(uint64_t)v4;
  v21 = v4;
  v22 = MEMORY[0x24BEE4AF8];
  v20 = result + 80;
LABEL_2:
  if (v3 > v4)
    v4 = v3;
  v27 = -(uint64_t)v4;
  v6 = v3 + 1;
  v7 = (uint64_t *)(v5 + 56 * v3);
  while (1)
  {
    if (v26 + v6 == 1)
      return v22;
    v3 = v6++;
    if (v27 + v6 == 2)
      break;
    v8 = *(v7 - 5);
    v25 = *(v7 - 6);
    v10 = *(v7 - 4);
    v9 = *(v7 - 3);
    v11 = *(v7 - 2);
    v12 = *(v7 - 1);
    v13 = *v7;
    if (v10 == a2 && v9 == a3)
    {
      v10 = a2;
      v9 = a3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21FADBC44(v12, v13);
      v15 = v22;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_21FC01B88(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v15 = v22;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        result = sub_21FC01B88(v16 > 1, v17 + 1, 1);
        v18 = v17 + 1;
        v15 = v22;
      }
      *(_QWORD *)(v15 + 16) = v18;
      v22 = v15;
      v19 = (_QWORD *)(v15 + 56 * v17);
      v19[4] = v25;
      v19[5] = v8;
      v19[6] = v10;
      v19[7] = v9;
      v19[8] = v11;
      v19[9] = v12;
      v19[10] = v13;
      v5 = v20;
      v4 = v21;
      goto LABEL_2;
    }
    v7 += 7;
    result = sub_21FC5BDF0();
    if ((result & 1) != 0)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_21FADBC44(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_21FADBC58(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_21FADBC6C()
{
  unint64_t result;

  result = qword_255541310;
  if (!qword_255541310)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC61300, &type metadata for ClinicalSharingFHIRSearchResult);
    atomic_store(result, (unint64_t *)&qword_255541310);
  }
  return result;
}

void sub_21FADBCB8(uint64_t a1)
{
  sub_21FADC238(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_21FADBCDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_21FADBD1C()
{
  swift_bridgeObjectRetain();
  sub_21FC5BB74();
  sub_21FC5B6AC();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  return 0;
}

void sub_21FADBEEC()
{
  JUMPOUT(0x21FADBED4);
}

void sub_21FADBF7C()
{
  uint64_t v0;

  sub_21FADBCDC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_21FADBF8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255541318)
  {
    sub_21FAAB274();
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255541318);
  }
}

uint64_t sub_21FADBFE0(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v4;
  uint64_t result;

  if (a4 && a4 != 2)
  {
    if (a4 != 1)
      return result;
    v4 = a3;
  }
  return swift_bridgeObjectRetain();
}

void destroy for ClinicalSharingFHIRAPIError(uint64_t a1)
{
  sub_21FA5BB74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for ClinicalSharingFHIRAPIError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_21FADBFE0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingFHIRAPIError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_21FADBFE0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_21FA5BB74(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingFHIRAPIError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_21FA5BB74(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingFHIRAPIError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingFHIRAPIError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_21FADC1F4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_21FADC20C(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRAPIError()
{
  return &type metadata for ClinicalSharingFHIRAPIError;
}

void sub_21FADC238(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

BOOL sub_21FADC26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  void *v8;

  if (a8)
    return 0;
  if (a2)
    return a6 && (a1 == a5 && a2 == a6 || (sub_21FC5BDF0() & 1) != 0);
  if (!a6)
    return 1;
  sub_21FA5BB74(a1, 0, v8, 0);
  return 0;
}

unint64_t sub_21FADC41C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  unint64_t result;

  v2 = v1;
  result = (unint64_t)objc_msgSend(v2, sel_valueType);
  if (result >= 0xC)
  {
    sub_21FC5BB74();
    sub_21FC5B6AC();
    objc_msgSend(v2, sel_valueType);
    type metadata accessor for HKInspectableValueType(0);
    sub_21FC5BC4C();
    sub_21FC5B6AC();
    result = sub_21FC5BC70();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = qword_21FC62DC8[result];
    *(_BYTE *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_21FADC54C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  void (*v33)(void);
  _QWORD *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  id v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  id v84;
  __int128 v85;
  ValueMetadata *v86;
  _UNKNOWN **v87;
  _OWORD v88[7];
  uint64_t v89;

  v6 = v5;
  v76 = a4;
  v83 = a3;
  v10 = sub_21FC5AAAC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v73 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA8D544();
  MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_21FC5AAF4();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v15 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_QWORD *)(v15 + 80) = 0;
  v16 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_QWORD *)(v16 + 32) = 0;
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v78(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync, 1, 1, v10);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error) = 0;
  v75 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare) = 0;
  v84 = a1;
  v17 = objc_msgSend(a1, sel_gateway);
  v82 = a2;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    sub_21FAC7C38();
    swift_allocError();
    *(_OWORD *)v42 = xmmword_21FC62E40;
    *(_BYTE *)(v42 + 16) = 8;
    swift_willThrow();
LABEL_8:
    v44 = v83;

    __swift_destroy_boxed_opaque_existential_1(v44);
    goto LABEL_18;
  }
  v18 = v17;
  v74 = a5;
  v19 = objc_msgSend(a2, sel_accessToken);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    sub_21FAC7C38();
    swift_allocError();
    *(_OWORD *)v43 = xmmword_21FC62E30;
    *(_BYTE *)(v43 + 16) = 8;
    swift_willThrow();

    goto LABEL_8;
  }
  v20 = v19;
  v21 = sub_21FC5B604();
  v22 = v18;
  v24 = v23;

  v25 = (uint64_t *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken);
  *v25 = v21;
  v25[1] = v24;
  v71 = v22;
  v26 = objc_msgSend(v22, sel_externalID);
  v27 = sub_21FC5B604();
  v29 = v28;

  *(_QWORD *)(v6 + 40) = v27;
  *(_QWORD *)(v6 + 48) = v29;
  v31 = v83;
  v30 = v84;
  v32 = objc_msgSend(v84, sel_identifier);
  sub_21FC5AADC();

  v33 = *(void (**)(void))(v80 + 32);
  v72 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
  v33();
  v70 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore;
  sub_21FA2CEA0(v31, v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore);
  v34 = (_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID);
  v35 = v74;
  *v34 = v76;
  v34[1] = v35;
  v36 = objc_msgSend(v30, sel_clinicalSharingStatus);
  v37 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus) = v36;
  v38 = objc_msgSend(v30, sel_clinicalSharingStatus);
  v39 = objc_msgSend(v38, sel_firstSharedDate);

  if (!v39)
  {
    v41 = (uint64_t)v77;
    v78((uint64_t)v77, 1, 1, v10);
    goto LABEL_10;
  }
  v40 = v73;
  sub_21FC5AA94();

  v41 = (uint64_t)v77;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v77, v40, v10);
  v78(v41, 0, 1, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v41, 1, v10) == 1)
  {
LABEL_10:
    sub_21FA326EC(v41, (uint64_t (*)(_QWORD))sub_21FA8D544);
    *(_BYTE *)(v6 + v75) = 1;
    goto LABEL_11;
  }
  sub_21FA326EC(v41, (uint64_t (*)(_QWORD))sub_21FA8D544);
LABEL_11:
  if (qword_25406B7F8 != -1)
    swift_once();
  v45 = sub_21FC5AFD4();
  __swift_project_value_buffer(v45, (uint64_t)qword_25406D830);
  swift_retain_n();
  v46 = sub_21FC5AFC8();
  v47 = sub_21FC5B970();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v49 = (_QWORD *)swift_slowAlloc();
    v78 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_slowAlloc();
    *(_QWORD *)&v85 = v78;
    *(_DWORD *)v48 = 136315394;
    sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v50 = sub_21FC5BDCC();
    v89 = sub_21FABDCF8(v50, v51, (uint64_t *)&v85);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2112;
    v52 = *(void **)(v6 + v37);
    v89 = (uint64_t)v52;
    v53 = v52;
    v31 = v83;
    sub_21FC5BAC0();
    *v49 = v52;
    swift_release_n();
    _os_log_impl(&dword_21FA27000, v46, v47, "ClinicalSharingSyncContext initialized. Account: %s HKClinicalSharingStatus: %@", (uint8_t *)v48, 0x16u);
    sub_21FADEAA0();
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v49, -1, -1);
    v54 = v78;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v54, -1, -1);
    MEMORY[0x2207D105C](v48, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v55 = v82;
  v56 = v71;
  *(_QWORD *)(v6 + 16) = v71;
  v57 = v56;
  v58 = objc_msgSend(v55, sel_patientID);
  v59 = (void *)sub_21FC5B604();
  v61 = v60;

  *(_QWORD *)(v6 + 24) = v59;
  *(_QWORD *)(v6 + 32) = v61;
  v62 = v57;
  swift_bridgeObjectRetain();
  v63 = v79;
  sub_21FAE6C08(v62, v59, v61, (uint64_t)v88);
  if (!v63)
  {
    v86 = &type metadata for ClinicalSharingDocumentReferenceForLookupInfo;
    v87 = &off_24E488E90;
    v65 = (_OWORD *)swift_allocObject();
    *(_QWORD *)&v85 = v65;

    v66 = v88[5];
    v65[5] = v88[4];
    v65[6] = v66;
    v65[7] = v88[6];
    v67 = v88[1];
    v65[1] = v88[0];
    v65[2] = v67;
    v68 = v88[3];
    v65[3] = v88[2];
    v65[4] = v68;
    __swift_destroy_boxed_opaque_existential_1(v31);
    sub_21FA3175C(&v85, v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
    return v6;
  }

  __swift_destroy_boxed_opaque_existential_1(v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v72, v81);
  __swift_destroy_boxed_opaque_existential_1(v70);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_18:
  sub_21FA813A8(*(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode), *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8), *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16), *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24), *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32), *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40));
  sub_21FACD2BC(*(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo), *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8));
  sub_21FA326EC(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync, (uint64_t (*)(_QWORD))sub_21FA8D544);

  type metadata accessor for ClinicalSharingSyncContext();
  swift_deallocPartialClassInstance();
  return v6;
}

uint64_t sub_21FADCE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  BOOL v4;

  v1 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus;
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus), sel_featureStatus) != (id)1|| objc_msgSend(*(id *)(v0 + v1), sel_userStatus) != (id)2)
  {
    return 0;
  }
  if (objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)2
    || objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)4)
  {
    return objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)3;
  }
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo) == *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID)
      && v3 == *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8);
    if (!v4 && (sub_21FC5BDF0() & 1) == 0)
      return objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)3;
  }
  return 1;
}

uint64_t sub_21FADCF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
  v2 = sub_21FC5AAF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
  sub_21FA813A8(*(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode), *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40));
  sub_21FACD2BC(*(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo), *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8));
  sub_21FA326EC(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync, (uint64_t (*)(_QWORD))sub_21FA8D544);

  return v0;
}

uint64_t sub_21FADD074()
{
  sub_21FADCF44();
  return swift_deallocClassInstance();
}

uint64_t sub_21FADD098()
{
  return type metadata accessor for ClinicalSharingSyncContext();
}

uint64_t type metadata accessor for ClinicalSharingSyncContext()
{
  uint64_t result;

  result = qword_25406B018;
  if (!qword_25406B018)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21FADD0DC()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FC5AAF4();
  if (v0 <= 0x3F)
  {
    sub_21FA8D544();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FADD1BC(_QWORD **a1, _QWORD **a2)
{
  return sub_21FADD1C8(*a1, *a2);
}

uint64_t sub_21FADD1C8(_QWORD *a1, _QWORD *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  char v21;
  void *v22;
  id v23;
  id v24;
  char v25;
  void *v26;
  void *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  unsigned int (*v82)(_QWORD, _QWORD, _QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v88;
  void (*v89)(_QWORD, _QWORD);
  uint64_t v90;
  uint64_t ErrorValue;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char *v108;
  _QWORD *v109;
  void *v110;
  void *v111;
  char *v112;
  uint64_t v113;
  void *v114;
  void *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void *v121;
  void *v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  void *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  id v138;
  void *v139;
  void *v140;
  char *v141;
  char *v142;
  void *v143;
  char *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  void *v165;
  void *v166;
  void *v167;
  id v168;
  id v169;
  id v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  void *v184;
  void *v185;
  _QWORD v186[2];
  int v187;
  void *v188;
  void *v189;
  char *v190;
  void *v191;
  char *v192;
  char *v193;
  void *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  void *v198;
  void *v199;
  void *v200;
  uint64_t v201;
  void *v202;
  void *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  _QWORD *v208;
  char *v209;
  void *v210;
  void *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  void *v216;
  char *v217;
  void *v218;
  _QWORD *v219;
  char *v220;
  char *v221;
  char *v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  void *v232;
  uint64_t v233;
  char *v234;
  id v235;
  void *v236;
  id v237;
  _BYTE v238[40];
  _BYTE v239[96];
  uint64_t v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  void *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  void *v254;
  void *v255;
  _QWORD v256[11];
  _QWORD v257[12];

  v4 = (char *)sub_21FC5AAAC();
  v208 = (_QWORD *)*((_QWORD *)v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v186 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FADE618();
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v209 = (char *)v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA8D544();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v186 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v186 - v14;
  v16 = (void *)a1[2];
  v17 = (void *)a2[2];
  if (v16)
  {
    if (!v17)
      goto LABEL_47;
    v207 = v4;
    sub_21FA5BE58(0, (unint64_t *)&unk_255541328);
    v18 = v17;
    v19 = v16;
    v20 = sub_21FC5BA60();

    if ((v20 & 1) == 0)
      goto LABEL_47;
  }
  else
  {
    v207 = v4;
    if (v17)
      goto LABEL_47;
  }
  if (a1[3] == a2[3] && a1[4] == a2[4] || (v21 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if (a1[5] == a2[5] && a1[6] == a2[6] || (v21 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if ((sub_21FC5AAD0() & 1) == 0)
        goto LABEL_47;
      sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
      v22 = *(void **)((char *)a2
                     + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus);
      v23 = objc_retain(*(id *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus));
      v24 = v22;
      v25 = sub_21FC5BA60();

      if ((v25 & 1) == 0)
        goto LABEL_47;
      if (*(_QWORD *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken) == *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken)
        && *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken + 8) == *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken + 8)
        || (v21 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        if (*(_QWORD *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID) == *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID)
          && *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8) == *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8)
          || (v21 = 0, (sub_21FC5BDF0() & 1) != 0))
        {
          v26 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
          v27 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8);
          v28 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16);
          v29 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24);
          v30 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32);
          v31 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40);
          v32 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 48);
          v33 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 56);
          v34 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 64);
          v35 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 72);
          v36 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 80);
          v37 = *(void **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
          v38 = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8);
          v40 = *(void **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16);
          v39 = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24);
          v42 = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32);
          v41 = *(void **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40);
          v44 = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 48);
          v43 = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 56);
          v46 = *(char **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 64);
          v45 = *(char **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 72);
          v47 = *(char **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 80);
          if (v26)
          {
            if (v37)
            {
              v256[0] = *(_QWORD *)((char *)a1
                                  + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
              v256[1] = v27;
              v256[2] = v28;
              v256[3] = v29;
              v256[4] = v30;
              v256[5] = v31;
              v256[6] = v32;
              v256[7] = v33;
              v256[8] = v34;
              v256[9] = v35;
              v256[10] = v36;
              v257[0] = v37;
              v257[1] = v38;
              v186[1] = v38;
              v257[2] = v40;
              v257[3] = v39;
              v257[4] = v42;
              v257[5] = v41;
              v257[6] = v44;
              v257[7] = v43;
              v257[8] = v46;
              v257[9] = v45;
              v204 = v45;
              v257[10] = v47;
              v191 = v27;
              v192 = v26;
              v193 = v28;
              v194 = v29;
              v195 = v30;
              v196 = v31;
              v197 = v32;
              v198 = (void *)v33;
              v202 = v37;
              v203 = v41;
              v205 = (char *)v44;
              v206 = v43;
              v200 = (void *)v39;
              v201 = v42;
              v189 = v35;
              v190 = v34;
              v199 = v40;
              v188 = v36;
              sub_21FA81324((uint64_t)v26, (uint64_t)v27, (uint64_t)v28, (uint64_t)v29, (uint64_t)v30, (unint64_t)v31);
              sub_21FA81324((uint64_t)v202, v38, (uint64_t)v199, (uint64_t)v200, v201, (unint64_t)v203);
              v187 = sub_21FB134D8((uint64_t)v256, (uint64_t)v257);
              sub_21FA813A8((uint64_t)v202, v38, (uint64_t)v199, (uint64_t)v200, v201, (unint64_t)v203);
              sub_21FA813A8((uint64_t)v192, (uint64_t)v191, (uint64_t)v193, (uint64_t)v194, (uint64_t)v195, (unint64_t)v196);
              if ((v187 & 1) == 0)
                goto LABEL_47;
LABEL_26:
              v53 = *(_QWORD *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              v52 = *(_QWORD *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 8);
              v54 = *(char **)((char *)a1
                             + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                             + 16);
              v55 = *(_QWORD *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 24);
              v56 = *(void **)((char *)a1
                             + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                             + 32);
              v57 = *(void **)((char *)a2
                             + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              v58 = *(_QWORD *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 8);
              v60 = *(char **)((char *)a2
                             + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                             + 16);
              v59 = *(_QWORD *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 24);
              v61 = *(_QWORD *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 32);
              if (v52)
              {
                if (v58)
                {
                  v201 = *(_QWORD *)((char *)a2
                                   + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                                   + 24);
                  v202 = (void *)v61;
                  v203 = v56;
                  v204 = v54;
                  v205 = (char *)v52;
                  v206 = v53;
                  if ((void *)v53 == v57 && v52 == v58)
                    goto LABEL_31;
                  v62 = (uint64_t)v57;
                  v200 = (void *)v55;
                  v63 = v58;
                  v64 = sub_21FC5BDF0();
                  v58 = v63;
                  v57 = (void *)v62;
                  v54 = v204;
                  v55 = (uint64_t)v200;
                  v59 = v201;
                  v52 = (uint64_t)v205;
                  v53 = v206;
                  if ((v64 & 1) != 0)
                  {
LABEL_31:
                    v198 = (void *)v58;
                    v199 = v57;
                    if (v54 == v60 && v55 == v59)
                    {
                      v65 = v52;
                      v200 = (void *)v55;
                      v66 = v53;
                      sub_21FADE734(v53, v52);
                      sub_21FADE734(v66, v65);
                      sub_21FADE734((uint64_t)v199, (uint64_t)v198);
                      swift_bridgeObjectRelease();
                      goto LABEL_37;
                    }
                    v196 = v60;
                    v74 = v53;
                    LODWORD(v197) = sub_21FC5BDF0();
                    sub_21FADE734(v74, (uint64_t)v205);
                    sub_21FADE734(v74, (uint64_t)v205);
                    sub_21FADE734((uint64_t)v199, (uint64_t)v198);
                    swift_bridgeObjectRelease();
                    if ((v197 & 1) != 0)
                    {
LABEL_37:
                      swift_bridgeObjectRelease();
                      v75 = (uint64_t)v205;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v76 = v75;
                      v77 = v203;
                      sub_21FACD2BC(v206, v76);
                      v67 = (uint64_t)v209;
                      if (v77 != v202)
                        goto LABEL_47;
LABEL_38:
                      v78 = (uint64_t)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
                      swift_beginAccess();
                      sub_21FA7187C(v78, (uint64_t)v15);
                      v79 = (uint64_t)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
                      swift_beginAccess();
                      v80 = v67 + *(int *)(v8 + 48);
                      sub_21FA7187C((uint64_t)v15, v67);
                      sub_21FA7187C(v79, v80);
                      v81 = v207;
                      v82 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v208[6];
                      if (v82(v67, 1, v207) == 1)
                      {
                        sub_21FA326EC((uint64_t)v15, (uint64_t (*)(_QWORD))sub_21FA8D544);
                        if (v82(v80, 1, v81) == 1)
                        {
                          sub_21FA326EC(v67, (uint64_t (*)(_QWORD))sub_21FA8D544);
                          goto LABEL_50;
                        }
                      }
                      else
                      {
                        sub_21FA7187C(v67, (uint64_t)v13);
                        if (v82(v80, 1, v81) != 1)
                        {
                          v88 = v208;
                          ((void (*)(char *, uint64_t, void *))v208[4])(v6, v80, v81);
                          sub_21FA2A08C(&qword_25553FC38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                          LODWORD(v206) = sub_21FC5B5D4();
                          v89 = (void (*)(_QWORD, _QWORD))v88[1];
                          v89(v6, v81);
                          sub_21FA326EC((uint64_t)v15, (uint64_t (*)(_QWORD))sub_21FA8D544);
                          v89(v13, v81);
                          sub_21FA326EC(v67, (uint64_t (*)(_QWORD))sub_21FA8D544);
                          if ((v206 & 1) == 0)
                            goto LABEL_47;
LABEL_50:
                          v90 = *(_QWORD *)((char *)a1
                                          + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
                          v209 = (char *)OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
                          if (v90)
                          {
                            ErrorValue = swift_getErrorValue();
                            v92 = v241;
                            v93 = *(_QWORD *)(v241 - 8);
                            MEMORY[0x24BDAC7A8](ErrorValue);
                            v95 = (char *)v186 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
                            (*(void (**)(char *))(v93 + 16))(v95);
                            v208 = (_QWORD *)sub_21FC5BE44();
                            v97 = v96;
                            (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v92);
                            v98 = (_QWORD *)((char *)a2
                                           + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
                            if (!*(_QWORD *)((char *)a2
                                            + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error))
                            {
                              if (!v97)
                                goto LABEL_65;
                              goto LABEL_63;
                            }
                            v207 = (char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
                          }
                          else
                          {
                            v98 = (_QWORD *)((char *)a2
                                           + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
                            if (!*(_QWORD *)((char *)a2
                                            + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error))
                              goto LABEL_65;
                            v207 = (char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
                            v208 = 0;
                            v97 = 0;
                          }
                          v99 = swift_getErrorValue();
                          v100 = v240;
                          v101 = *(_QWORD *)(v240 - 8);
                          MEMORY[0x24BDAC7A8](v99);
                          v103 = (char *)v186 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
                          (*(void (**)(char *))(v101 + 16))(v103);
                          v104 = (_QWORD *)sub_21FC5BE44();
                          v106 = v105;
                          (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v100);
                          if (v97)
                          {
                            if (v106)
                            {
                              if (v208 == v104 && v97 == v106)
                              {
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                v98 = v207;
                              }
                              else
                              {
                                v107 = sub_21FC5BDF0();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                v21 = 0;
                                v98 = v207;
                                if ((v107 & 1) == 0)
                                  return v21 & 1;
                              }
LABEL_65:
                              if ((*(_QWORD *)&v209[(_QWORD)a1] != 0) == (*v98 == 0)
                                || *((unsigned __int8 *)a1
                                   + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare) != *((unsigned __int8 *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare))
                              {
                                goto LABEL_47;
                              }
                              v108 = (char *)a1
                                   + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
                              swift_beginAccess();
                              v209 = v108;
                              sub_21FA2CEA0((uint64_t)v108, (uint64_t)&v242);
                              v109 = (_QWORD *)sub_21FADE764();
                              if (swift_dynamicCast())
                              {
                                v110 = v220;
                                v208 = v219;
                                v112 = v221;
                                v111 = v222;

                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                v113 = (uint64_t)a2
                                     + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
                                swift_beginAccess();
                                sub_21FA2CEA0(v113, (uint64_t)&v242);
                                v208 = v109;
                                if ((swift_dynamicCast() & 1) != 0)
                                {
                                  v114 = v220;
                                  v116 = v221;
                                  v115 = v222;

                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  sub_21FA2CEA0((uint64_t)v209, (uint64_t)v239);
                                  if ((swift_dynamicCast() & 1) != 0)
                                  {
                                    v117 = (uint64_t)v211;
                                    v201 = v212;
                                    v202 = v210;
                                    v205 = v215;
                                    v206 = (uint64_t)v213;
                                    v199 = v216;
                                    v200 = (void *)v214;
                                    v198 = v218;
                                    v118 = v220;
                                    v209 = (char *)v219;
                                    v119 = v221;
                                    v207 = v222;
                                    v203 = v223;
                                    v204 = v217;
                                  }
                                  else
                                  {
                                    v201 = 0;
                                    v202 = 0;
                                    v117 = 0;
                                    v205 = 0;
                                    v206 = 0;
                                    v199 = 0;
                                    v200 = 0;
                                    v203 = 0;
                                    v204 = 0;
                                    v198 = 0;
                                    v209 = 0;
                                    v118 = 0;
                                    v119 = 0;
                                    v207 = 0;
                                  }
                                  sub_21FA2CEA0(v113, (uint64_t)v238);
                                  if (swift_dynamicCast())
                                  {
                                    v127 = (uint64_t)v210;
                                    v126 = (uint64_t)v211;
                                    v129 = v212;
                                    v128 = (uint64_t)v213;
                                    v131 = v214;
                                    v130 = v215;
                                    v133 = (char *)v216;
                                    v132 = v217;
                                    v134 = v218;
                                    v135 = (uint64_t)v219;
                                    v137 = v220;
                                    v136 = v221;
                                    v139 = v222;
                                    v138 = v223;
                                    if (v117)
                                    {
                                      if (v211)
                                      {
                                        v242 = v202;
                                        v197 = v117;
                                        v243 = v117;
                                        v244 = v201;
                                        v245 = (void *)v206;
                                        v246 = (uint64_t)v200;
                                        v247 = (uint64_t)v205;
                                        v248 = v199;
                                        v140 = v203;
                                        v249 = v204;
                                        v250 = (uint64_t)v198;
                                        v251 = v209;
                                        v252 = v118;
                                        v195 = v119;
                                        v196 = v118;
                                        v253 = v119;
                                        v254 = v207;
                                        v255 = v203;
                                        v193 = v215;
                                        v194 = v216;
                                        v208 = v217;
                                        v191 = v220;
                                        v192 = v218;
                                        v189 = v222;
                                        v190 = v221;
                                        v188 = v223;
                                        swift_bridgeObjectRetain();
                                        v141 = v118;
                                        v142 = v119;
                                        v143 = v207;
                                        v144 = v207;
                                        v145 = v140;
                                        v203 = v140;
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        v21 = sub_21FAE65C8(&v242, &v210);
                                        sub_21FADE9B8(v127, v126, v129, v128, v131, (uint64_t)v193, (uint64_t)v194, (uint64_t)v208, (uint64_t)v192, v135, v191, v190, v189, v188);
                                        v183 = v143;
                                        v184 = v140;
                                        v146 = (uint64_t)v198;
                                        v147 = v201;
                                        v148 = (uint64_t)v202;
                                        v150 = (uint64_t)v205;
                                        v149 = v206;
                                        v152 = (uint64_t)v199;
                                        v151 = (uint64_t)v200;
                                        v153 = (uint64_t)v204;
                                        sub_21FADE9B8((uint64_t)v202, v197, v201, v206, (uint64_t)v200, (uint64_t)v205, (uint64_t)v199, (uint64_t)v204, (uint64_t)v198, (uint64_t)v209, v196, v195, v183, v184);
                                        sub_21FADE9B8(v148, v197, v147, v149, v151, v150, v152, v153, v146, (uint64_t)v209, v196, v195, v207, v203);
                                        return v21 & 1;
                                      }
                                      goto LABEL_89;
                                    }
                                    if (v211)
                                    {
LABEL_89:
                                      v210 = v202;
                                      v211 = (void *)v117;
                                      v212 = v201;
                                      v213 = (char *)v206;
                                      v214 = (uint64_t)v200;
                                      v215 = v205;
                                      v216 = v199;
                                      v217 = v204;
                                      v218 = v198;
                                      v219 = v209;
                                      v220 = v118;
                                      v221 = v119;
                                      v222 = v207;
                                      v223 = v203;
                                      v224 = v127;
                                      v225 = v126;
                                      v226 = v129;
                                      v227 = v128;
                                      v228 = v131;
                                      v229 = v130;
                                      v230 = v133;
                                      v231 = v132;
                                      v232 = v134;
                                      v233 = v135;
                                      v234 = v137;
                                      v235 = v136;
                                      v236 = v139;
                                      v237 = v138;
                                      sub_21FADE8F0((uint64_t)&v210);
                                      goto LABEL_47;
                                    }
                                  }
                                  else if (v117)
                                  {
                                    v138 = 0;
                                    v139 = 0;
                                    v136 = 0;
                                    v137 = 0;
                                    v135 = 0;
                                    v134 = 0;
                                    v132 = 0;
                                    v133 = 0;
                                    v130 = 0;
                                    v131 = 0;
                                    v128 = 0;
                                    v129 = 0;
                                    v126 = 0;
                                    v127 = 0;
                                    goto LABEL_89;
                                  }
LABEL_92:
                                  v21 = 1;
                                  return v21 & 1;
                                }
                              }
                              else
                              {
                                v120 = (uint64_t)a2
                                     + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
                                swift_beginAccess();
                                sub_21FA2CEA0(v120, (uint64_t)&v242);
                                if ((swift_dynamicCast() & 1) != 0)
                                {
                                  v121 = v218;
                                  v122 = v219;
                                  v123 = v220;

                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  sub_21FA2CEA0((uint64_t)v209, (uint64_t)v239);
                                  if ((swift_dynamicCast() & 1) != 0)
                                  {
                                    v124 = (uint64_t)v211;
                                    v202 = (void *)v212;
                                    v203 = v210;
                                    v206 = (uint64_t)v215;
                                    v207 = v213;
                                    v200 = v216;
                                    v201 = v214;
                                    v125 = v218;
                                    v204 = (char *)v219;
                                    v205 = v217;
                                    v208 = v221;
                                    v209 = v220;
                                  }
                                  else
                                  {
                                    v202 = 0;
                                    v203 = 0;
                                    v124 = 0;
                                    v206 = 0;
                                    v207 = 0;
                                    v200 = 0;
                                    v201 = 0;
                                    v204 = 0;
                                    v205 = 0;
                                    v125 = 0;
                                    v208 = 0;
                                    v209 = 0;
                                  }
                                  sub_21FA2CEA0(v120, (uint64_t)v238);
                                  if (swift_dynamicCast())
                                  {
                                    v154 = (uint64_t)v210;
                                    v155 = v211;
                                    v157 = v212;
                                    v156 = (uint64_t)v213;
                                    v159 = v214;
                                    v158 = (uint64_t)v215;
                                    v161 = (uint64_t)v216;
                                    v160 = v217;
                                    v163 = (char *)v218;
                                    v162 = (char *)v219;
                                    v165 = v220;
                                    v164 = (uint64_t)v221;
                                    if (v124)
                                    {
                                      if (v211)
                                      {
                                        v166 = v204;
                                        v242 = v203;
                                        v198 = (void *)v124;
                                        v199 = v125;
                                        v243 = v124;
                                        v244 = (uint64_t)v202;
                                        v245 = v207;
                                        v246 = v201;
                                        v247 = v206;
                                        v248 = v200;
                                        v249 = v205;
                                        v250 = (uint64_t)v125;
                                        v251 = v204;
                                        v167 = v209;
                                        v252 = v209;
                                        v253 = (char *)v208;
                                        v195 = v215;
                                        v196 = (char *)v216;
                                        v197 = (uint64_t)v217;
                                        v193 = (char *)v219;
                                        v194 = v218;
                                        v192 = v221;
                                        swift_bridgeObjectRetain();
                                        v168 = v125;
                                        v169 = v166;
                                        v170 = v167;
                                        v171 = v208;
                                        v172 = v208;
                                        v173 = (uint64_t)v198;
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        v21 = sub_21FAE6764(&v242, &v210);
                                        sub_21FADE878(v154, (uint64_t)v155, v157, v156, v159, (uint64_t)v195, (uint64_t)v196, v197, v194, v193, v165, v192);
                                        v185 = v171;
                                        v174 = v204;
                                        v175 = (uint64_t)v203;
                                        v176 = v173;
                                        v178 = v201;
                                        v177 = (uint64_t)v202;
                                        v180 = v206;
                                        v179 = (uint64_t)v207;
                                        v181 = (uint64_t)v200;
                                        v182 = (uint64_t)v205;
                                        sub_21FADE878((uint64_t)v203, v176, (uint64_t)v202, (uint64_t)v207, v201, v206, (uint64_t)v200, (uint64_t)v205, v199, v204, v209, v185);
                                        sub_21FADE878(v175, (uint64_t)v198, v177, v179, v178, v180, v181, v182, v199, v174, v209, v208);
                                        return v21 & 1;
                                      }
                                    }
                                    else if (!v211)
                                    {
                                      goto LABEL_92;
                                    }
                                  }
                                  else
                                  {
                                    if (!v124)
                                      goto LABEL_92;
                                    v164 = 0;
                                    v165 = 0;
                                    v162 = 0;
                                    v163 = 0;
                                    v160 = 0;
                                    v161 = 0;
                                    v158 = 0;
                                    v159 = 0;
                                    v156 = 0;
                                    v157 = 0;
                                    v155 = 0;
                                    v154 = 0;
                                  }
                                  v210 = v203;
                                  v211 = (void *)v124;
                                  v212 = (uint64_t)v202;
                                  v213 = v207;
                                  v214 = v201;
                                  v215 = (char *)v206;
                                  v216 = v200;
                                  v217 = v205;
                                  v218 = v125;
                                  v219 = v204;
                                  v220 = v209;
                                  v221 = (char *)v208;
                                  v222 = (char *)v154;
                                  v223 = v155;
                                  v224 = v157;
                                  v225 = v156;
                                  v226 = v159;
                                  v227 = v158;
                                  v228 = v161;
                                  v229 = v160;
                                  v230 = v163;
                                  v231 = v162;
                                  v232 = v165;
                                  v233 = v164;
                                  sub_21FADE7B8((uint64_t)&v210);
                                }
                              }
LABEL_47:
                              v21 = 0;
                              return v21 & 1;
                            }
                          }
                          else
                          {
                            v98 = v207;
                            if (!v106)
                              goto LABEL_65;
                          }
LABEL_63:
                          swift_bridgeObjectRelease();
                          goto LABEL_47;
                        }
                        sub_21FA326EC((uint64_t)v15, (uint64_t (*)(_QWORD))sub_21FA8D544);
                        ((void (*)(char *, void *))v208[1])(v13, v81);
                      }
                      sub_21FA326EC(v67, (uint64_t (*)(_QWORD))sub_21FADE618);
                      goto LABEL_47;
                    }
                  }
                  else
                  {
                    v83 = (uint64_t)v205;
                    v84 = v58;
                    v85 = v206;
                    sub_21FADE734(v206, (uint64_t)v205);
                    sub_21FADE734(v85, v83);
                    sub_21FADE734(v62, v84);
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  v86 = (uint64_t)v205;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v72 = v206;
                  v73 = v86;
LABEL_46:
                  sub_21FACD2BC(v72, v73);
                  goto LABEL_47;
                }
              }
              else
              {
                v67 = (uint64_t)v209;
                if (!v58)
                  goto LABEL_38;
              }
              v68 = *(_QWORD *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              v69 = *(_QWORD *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 8);
              v70 = *(_QWORD *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              v71 = *(_QWORD *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 8);
              v206 = v53;
              sub_21FADE734(v68, v52);
              sub_21FADE734(v70, v71);
              sub_21FACD2BC(v206, v69);
              v72 = v70;
              v73 = v71;
              goto LABEL_46;
            }
          }
          else if (!v37)
          {
            goto LABEL_26;
          }
          v210 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
          v211 = v27;
          v212 = (uint64_t)v28;
          v213 = v29;
          v214 = (uint64_t)v30;
          v215 = v31;
          v216 = (void *)v32;
          v217 = (char *)v33;
          v218 = v34;
          v219 = v35;
          v220 = v36;
          v221 = (char *)v37;
          v222 = (char *)v38;
          v223 = v40;
          v224 = v39;
          v225 = v42;
          v226 = (uint64_t)v41;
          v227 = v44;
          v228 = v43;
          v229 = v46;
          v230 = v45;
          v231 = v47;
          v205 = (char *)v44;
          v206 = v43;
          v48 = (unint64_t)v41;
          v49 = v42;
          v50 = v39;
          v51 = (uint64_t)v40;
          sub_21FA81324((uint64_t)v26, (uint64_t)v27, (uint64_t)v28, (uint64_t)v29, (uint64_t)v30, (unint64_t)v31);
          sub_21FA81324((uint64_t)v37, v38, v51, v50, v49, v48);
          sub_21FADE678((uint64_t *)&v210);
          goto LABEL_47;
        }
      }
    }
  }
  return v21 & 1;
}

void sub_21FADE618()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255541320)
  {
    sub_21FA8D544();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255541320);
  }
}

uint64_t *sub_21FADE678(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = a1[11];
  v3 = a1[12];
  v4 = a1[13];
  v5 = a1[14];
  v6 = a1[15];
  v7 = a1[16];
  sub_21FA813A8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_21FA813A8(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_21FADE734(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21FADE764()
{
  unint64_t result;

  result = qword_2555410B0;
  if (!qword_2555410B0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2555410B0);
  }
  return result;
}

uint64_t sub_21FADE7B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v12 = *(_OWORD *)(a1 + 160);
  v10 = *(void **)(a1 + 176);
  v9 = *(void **)(a1 + 184);
  sub_21FADE878(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(void **)(a1 + 88));
  sub_21FADE878(v13, v2, v3, v4, v5, v6, v7, v8, (void *)v12, *((void **)&v12 + 1), v10, v9);
  return a1;
}

uint64_t sub_21FADE878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21FADE8F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 120);
  v14 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_QWORD *)(a1 + 168);
  v12 = *(_OWORD *)(a1 + 192);
  v13 = *(_OWORD *)(a1 + 176);
  v10 = *(void **)(a1 + 208);
  v9 = *(void **)(a1 + 216);
  sub_21FADE9B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(void **)(a1 + 88), *(void **)(a1 + 96), *(void **)(a1 + 104));
  sub_21FADE9B8(v14, v2, v3, v4, v5, v6, v7, v8, v13, *((uint64_t *)&v13 + 1), (void *)v12, *((void **)&v12 + 1), v10, v9);
  return a1;
}

uint64_t sub_21FADE9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21FADEA3C()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_21FADEAA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BE28)
  {
    sub_21FA5BE58(255, (unint64_t *)&qword_25406BAD0);
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BE28);
  }
}

id sub_21FADEB30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalDocumentDownloader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalDocumentDownloader()
{
  return objc_opt_self();
}

uint64_t sub_21FADED1C(int a1, char a2, void *aBlock, void *a4)
{
  uint64_t v4;
  id v6;

  *(_QWORD *)(v4 + 16) = a4;
  *(_BYTE *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 24) = _Block_copy(aBlock);
  sub_21FADFEF4();
  *(_QWORD *)(v4 + 32) = sub_21FC5B7A8();
  v6 = a4;
  return swift_task_switch();
}

uint64_t sub_21FADED88()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_21FADEDE8;
  return sub_21FBA1544(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 56));
}

uint64_t sub_21FADEDE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD *)(v2 + 24);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 16))(v4, 1, 0);
  _Block_release(*(const void **)(v2 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21FADEE90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);

  swift_bridgeObjectRelease();
  v3 = (void *)sub_21FC5A8D8();

  (*(void (**)(uint64_t, _QWORD, void *))(v2 + 16))(v2, 0, v3);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FADF038(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  return swift_task_switch();
}

uint64_t sub_21FADF08C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_21FADF0E8;
  return sub_21FBA4510(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21FADF0E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = *(void **)(v2 + 24);
  v4 = *(_QWORD *)(v2 + 32);

  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 16))(v4, 1, 0);
  _Block_release(*(const void **)(v2 + 32));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21FADF18C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 48);
  v3 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);

  v4 = (void *)sub_21FC5A8D8();
  (*(void (**)(uint64_t, _QWORD, void *))(v2 + 16))(v2, 0, v4);

  _Block_release(*(const void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FADF31C(const void *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = _Block_copy(a1);
  return swift_task_switch();
}

uint64_t sub_21FADF358()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD, _QWORD);

  v1 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 16);
  v1[2](v1, 1, 0);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FADF4CC(uint64_t a1, const void *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;

  v3[2] = a3;
  v6 = sub_21FC5AAF4();
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v3[5] = swift_task_alloc();
  v3[6] = _Block_copy(a2);
  sub_21FC5AADC();
  v7 = a3;
  return swift_task_switch();
}

uint64_t sub_21FADF560()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_21FADF5BC;
  return sub_21FBA3AEC(*(_QWORD *)(v0 + 40));
}

uint64_t sub_21FADF5BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(void **)(v2 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 32) + 8))(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 24));

  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 16))(v4, 1, 0);
  _Block_release(*(const void **)(v2 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21FADF670()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(void **)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));

  v4 = (void *)sub_21FC5A8D8();
  (*(void (**)(uint64_t, _QWORD, void *))(v2 + 16))(v2, 0, v4);

  _Block_release(*(const void **)(v0 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FADF720(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_21FAC1B10;
  return v6();
}

uint64_t sub_21FADF774(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_21FAC1B10;
  return v7();
}

uint64_t sub_21FADF7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21FC5B844();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21FC5B838();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21FADFC28(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21FC5B808();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_21FADF90C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21FADF970;
  return v6(a1);
}

uint64_t sub_21FADF970()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_21FADF9BC(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_client] = a1;
  v3 = objc_allocWithZone(MEMORY[0x24BDD3C40]);
  v4 = v1;
  v5 = a1;
  v6 = objc_msgSend(v3, sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_healthStore] = v6;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489F8]), sel_initWithHealthStore_, v6);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_documentStore] = v7;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489E0]), sel_initWithHealthStore_, v6);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_accountStore] = v8;
  type metadata accessor for ClinicalDocumentDownloadTaskCoordinator();
  swift_allocObject();
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_taskCoordinator] = sub_21FBA14F0((uint64_t)v7, (uint64_t)v8);

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ClinicalDocumentDownloader();
  return objc_msgSendSuper2(&v10, sel_init);
}

void sub_21FADFAE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255540CF0)
  {
    sub_21FC5B844();
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255540CF0);
  }
}

uint64_t sub_21FADFB3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (const void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21FAC1B10;
  return ((uint64_t (*)(uint64_t, const void *, void *))((char *)&dword_255541448 + dword_255541448))(v2, v3, v4);
}

uint64_t sub_21FADFBAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21FAC1B10;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_255541458 + dword_255541458))(v2, v3, v4);
}

uint64_t sub_21FADFC28(uint64_t a1)
{
  uint64_t v2;

  sub_21FADFAE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21FADFC64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FADFC88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21FAC1750;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255541478 + dword_255541478))(a1, v4);
}

uint64_t sub_21FADFCF8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_21FADFD24()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21FAC1750;
  return ((uint64_t (*)(const void *))((char *)&dword_255541488 + dword_255541488))(v2);
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_21FADFDC8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21FAC1B10;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_2555414A8 + dword_2555414A8))(v2, v3, v4);
}

uint64_t sub_21FADFE3C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_21FADFE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_21FAC1B10;
  return ((uint64_t (*)(int, char, void *, void *))((char *)&dword_2555414C8 + dword_2555414C8))(v2, v3, v5, v4);
}

unint64_t sub_21FADFEF4()
{
  unint64_t result;

  result = qword_2555414E8;
  if (!qword_2555414E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2555414E8);
  }
  return result;
}

uint64_t *sub_21FADFF30(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  id v18;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21FC5A6C8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + v13) = (uint64_t)v15;
    v16 = (char *)v7 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    *(uint64_t *)((char *)v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v18 = v15;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_21FAE0014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21FC5A6C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

_QWORD *sub_21FAE007C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  char *v15;
  id v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v13;
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v16 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_21FAE0138(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)v16;
  v15[8] = v16[8];
  *(_QWORD *)v15 = v17;
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_21FAE0204(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_21FAE02A0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);

  v12 = a3[7];
  v13 = a3[8];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FAE0354()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAE0360(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5A6C8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_21FAE03DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FAE03E8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5A6C8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingHistogramQuery()
{
  uint64_t result;

  result = qword_255541548;
  if (!qword_255541548)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21FAE0498()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5A6C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21FAE0534@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v3 = sub_21FC5AAAC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21FC5AC08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, *v1 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v11 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date, v3);
  v12 = (char *)v1 + *(int *)(type metadata accessor for ClinicalSharingHistogramQuery() + 28);
  if (v12[8] == 1 && (v13 = *(_QWORD *)v12, ((1 << v13) & 0x67) == 0))
  {
    if (v13 == 3)
      sub_21FAC9234(0, (uint64_t)v6, a1);
    else
      sub_21FAC96CC((uint64_t)v6, a1);
  }
  else
  {
    sub_21FC5AB30();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_21FAE06C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  void (*v19)(char *, uint64_t);
  void *v20;
  id v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t *v48;
  void (*v49)(char *, uint64_t);
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;

  v0 = type metadata accessor for ClinicalSharingHistogramQuery();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 - 8) + 64);
  v52 = *(_QWORD *)(v0 - 8);
  v53 = v1;
  MEMORY[0x24BDAC7A8](v0);
  v51 = (uint64_t)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAE1720(0, &qword_255541590, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  v58 = v3;
  v60 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v54 = (char *)&v47 - v4;
  sub_21FAE1720(0, &qword_2555415B0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  v59 = v5;
  v61 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v47 - v6;
  sub_21FA2ED54(0, &qword_25553F0B8, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - v8;
  v10 = sub_21FC5A83C();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v62 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21FC5AAAC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v0;
  v16 = (void *)objc_opt_self();
  sub_21FC5A6A4();
  v17 = (void *)sub_21FC5AA64();
  v18 = *(void (**)(char *, uint64_t))(v13 + 8);
  v18(v15, v12);
  v19 = v18;
  v49 = v18;
  sub_21FC5A680();
  v20 = (void *)sub_21FC5AA64();
  v19(v15, v12);
  v21 = objc_msgSend(v16, sel_predicateForSamplesWithStartDate_endDate_options_, v17, v20, 0);
  v50 = v21;

  v22 = v48;
  v23 = (char *)v48 + *(int *)(v0 + 28);
  v24 = *(_QWORD *)v23;
  LOBYTE(v23) = v23[8];
  v63 = v24;
  v64 = (char)v23;
  v25 = v62;
  sub_21FAAD8F0();
  v26 = *v22;
  v27 = *v22 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
  v28 = sub_21FC5AC08();
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v9, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v9, 0, 1, v28);
  v30 = (uint64_t)v25;
  sub_21FC5A830();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 40));
  v31 = v47;
  v32 = *(void **)((char *)v22 + *(int *)(v47 + 24));
  v33 = (uint64_t)v22;
  sub_21FAE0534((uint64_t)v15);
  v34 = sub_21FC1FF7C(v32, v21, (uint64_t)v15, v30, *(uint64_t *)((char *)v22 + *(int *)(v31 + 32)));
  v49(v15, v12);
  v63 = v34;
  v35 = (uint64_t)v22;
  v36 = v51;
  sub_21FA2D120(v35, v51, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery);
  v37 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v38 = swift_allocObject();
  sub_21FA2D23C(v36, v38 + v37, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_21FAE1798;
  *(_QWORD *)(v39 + 24) = v38;
  sub_21FAE165C();
  type metadata accessor for PBTypedData(0);
  sub_21FAE16D8();
  v40 = v54;
  sub_21FC5B28C();
  swift_release();
  swift_release();
  sub_21FA2D120(v33, v36, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery);
  v41 = swift_allocObject();
  sub_21FA2D23C(v36, v41 + v37, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  v42 = v55;
  v43 = v58;
  sub_21FC5AFF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v43);
  sub_21FAE1908();
  v44 = v59;
  v45 = sub_21FC5B280();

  (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v44);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v62, v57);
  return v45;
}

uint64_t sub_21FAE0BD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  char v90[24];

  v87 = a2;
  v84 = type metadata accessor for ClinicalSharingHistogramQuery();
  MEMORY[0x24BDAC7A8](v84);
  v77 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_25553E498, (void (*)(uint64_t))type metadata accessor for PBTypedData.OneOf_Raw);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v81 = (uint64_t)&v73 - v8;
  sub_21FA2ED54(0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v73 - v10;
  v12 = type metadata accessor for PBTypedData(0);
  v85 = *(_QWORD *)(v12 - 8);
  v86 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v83 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_25553E0E8, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v73 - v15;
  v17 = type metadata accessor for PBDateRange(0);
  v78 = *(_QWORD *)(v17 - 8);
  v79 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PBHistogramSeries(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v80 = (uint64_t)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (uint64_t *)((char *)&v73 - v22);
  v24 = objc_msgSend(a1, sel_valueHistograms);
  sub_21FA5BE58(0, &qword_2555415C0);
  v25 = sub_21FC5B7A8();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v26)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v87, 1, 1, v86);
  v76 = v7;
  v27 = v84;
  v28 = v88;
  v75 = *(int *)(v84 + 24);
  v29 = (char *)sub_21FC20F30();
  if (v29)
  {
    v74 = v11;
    v30 = v29;
    v31 = objc_msgSend(a1, sel_valueHistograms);
    v32 = v27;
    v33 = sub_21FC5B7A8();

    MEMORY[0x24BDAC7A8](v34);
    *(&v73 - 2) = (uint64_t)v30;
    *(&v73 - 1) = v28;
    v35 = sub_21FC41DC4((void (*)(id *))sub_21FAE1960, (uint64_t)(&v73 - 4), v33, (uint64_t)v90);
    swift_bridgeObjectRelease();
    sub_21FC5AD10();
    *v23 = v35;
    v77 = v30;
    v36 = objc_msgSend(v30, sel_unitString);
    v37 = sub_21FC5B604();
    v39 = v38;

    v23[1] = v37;
    v23[2] = v39;
    v40 = v28 + *(int *)(v32 + 28);
    v41 = *(_QWORD *)v40;
    v42 = *(unsigned __int8 *)(v40 + 8);
    v43 = v28 + *(int *)(v32 + 20);
    v44 = sub_21FC5A6C8();
    v45 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    v46 = *(_QWORD *)(v44 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v16, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v16, 0, 1, v44);
    v47 = (uint64_t)v82;
    sub_21FBE7E8C(v41, v42, v16);
    sub_21FA2EDA0((uint64_t)v16, &qword_25553E0E8, v45);
    v48 = (uint64_t)v74;
    sub_21FA2D120(v47, (uint64_t)v74, type metadata accessor for PBDateRange);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v48, 0, 1, v79);
    v49 = v83;
    sub_21FBE8D24(v48, v83);
    sub_21FA2EDA0(v48, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    v50 = v80;
    sub_21FA2D120((uint64_t)v23, v80, type metadata accessor for PBHistogramSeries);
    v51 = v86;
    v52 = *(int *)(v86 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v53 = swift_retain();
      *(_QWORD *)(v49 + v52) = sub_21FA3A458(v53);
      swift_release();
    }
    v54 = *(_QWORD *)(v49 + v52);
    v55 = v50;
    v56 = v81;
    sub_21FA2D23C(v55, v81, type metadata accessor for PBHistogramSeries);
    v57 = type metadata accessor for PBTypedData.OneOf_Raw(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
    v58 = v56;
    v59 = (uint64_t)v76;
    sub_21FAE197C(v58, (uint64_t)v76);
    v60 = v54
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__raw;
    swift_beginAccess();
    swift_retain();
    sub_21FAE19D0(v59, v60);
    swift_endAccess();
    swift_release();
    if (objc_msgSend(*(id *)(v88 + v75), sel_code) == (id)15)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTypedData._StorageClass(0);
        swift_allocObject();
        v61 = swift_retain();
        *(_QWORD *)(v49 + v52) = sub_21FA3A458(v61);
        swift_release();
      }
      v62 = *(_QWORD *)(v49 + v52);
      swift_beginAccess();
      *(_QWORD *)(v62 + 16) = 130;
      *(_BYTE *)(v62 + 24) = 1;

      sub_21FA326EC(v47, type metadata accessor for PBDateRange);
    }
    else
    {
      sub_21FA326EC(v47, type metadata accessor for PBDateRange);

    }
    v72 = v87;
    sub_21FA2D23C(v49, v87, type metadata accessor for PBTypedData);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v85 + 56))(v72, 0, 1, v51);
    return sub_21FA326EC((uint64_t)v23, type metadata accessor for PBHistogramSeries);
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v64 = sub_21FC5AFD4();
    __swift_project_value_buffer(v64, (uint64_t)qword_25406D830);
    v65 = v77;
    sub_21FA2D120(v28, (uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery);
    v66 = sub_21FC5AFC8();
    v67 = sub_21FC5B988();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v68 = 138412290;
      v70 = *(void **)&v65[*(int *)(v84 + 24)];
      v89 = v70;
      v71 = v70;
      sub_21FC5BAC0();
      *v69 = v70;
      sub_21FA326EC((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery);
      _os_log_impl(&dword_21FA27000, v66, v67, "Missing encoding unit for %@", v68, 0xCu);
      sub_21FADEAA0();
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v69, -1, -1);
      MEMORY[0x2207D105C](v68, -1, -1);
    }
    else
    {
      sub_21FA326EC((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v87, 1, 1, v86);
  }
}

uint64_t sub_21FAE1430@<X0>(void **a1@<X0>, void *a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v7 = sub_21FC5AAAC();
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21FC5A6C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  a4[3] = 0;
  a4[4] = 0xE000000000000000;
  type metadata accessor for PBHistogramSeries.Value(0);
  sub_21FC5AD10();
  v15 = objc_msgSend(v14, sel_segments);
  sub_21FA5BE58(0, &qword_2555415C8);
  v16 = sub_21FC5B7A8();

  v17 = a2;
  v18 = v28;
  v19 = sub_21FAE1A24(v16, (uint64_t)v17);
  v28 = v18;
  swift_bridgeObjectRelease();

  a4[2] = v19;
  v20 = objc_msgSend(v14, sel_dateInterval);
  sub_21FC5A674();

  sub_21FC5A6A4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = *(id *)(*v29 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  v22 = (void *)sub_21FC5AA64();
  v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

  v24 = sub_21FC5B604();
  v26 = v25;

  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  result = swift_bridgeObjectRelease();
  *a4 = v24;
  a4[1] = v26;
  return result;
}

void sub_21FAE165C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255541598)
  {
    sub_21FA5BE58(255, &qword_2555415A0);
    sub_21FA2CDB4();
    v0 = sub_21FC5B190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255541598);
  }
}

unint64_t sub_21FAE16D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2555415A8;
  if (!qword_2555415A8)
  {
    sub_21FAE165C();
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2555415A8);
  }
  return result;
}

void sub_21FAE1720(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_21FAE165C();
    a3(255);
    sub_21FAE16D8();
    v5 = sub_21FC5B004();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_21FAE1798@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ClinicalSharingHistogramQuery();
  return sub_21FAE0BD4(a1, a2);
}

uint64_t sub_21FAE17E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ClinicalSharingHistogramQuery();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_21FC5A6C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FAE18B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ClinicalSharingHistogramQuery();
  return sub_21FBE70F0(a1, 0, a2);
}

unint64_t sub_21FAE1908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2555415B8;
  if (!qword_2555415B8)
  {
    sub_21FAE1720(255, &qword_2555415B0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB94C8], v1);
    atomic_store(result, (unint64_t *)&qword_2555415B8);
  }
  return result;
}

uint64_t sub_21FAE1960@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_21FAE1430(a1, *(void **)(v2 + 16), *(_QWORD **)(v2 + 24), a2);
}

uint64_t sub_21FAE197C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2ED54(0, &qword_25553E498, (void (*)(uint64_t))type metadata accessor for PBTypedData.OneOf_Raw);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAE19D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2ED54(0, &qword_25553E498, (void (*)(uint64_t))type metadata accessor for PBTypedData.OneOf_Raw);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAE1A24(unint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v29 = a2;
  v30 = type metadata accessor for PBBucket(0);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_19;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    if (!v7)
      return v8;
    v31 = MEMORY[0x24BEE4AF8];
    result = sub_21FC01D20(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v24 = v3;
    v25 = v7;
    v10 = 0;
    v8 = v31;
    v26 = a1;
    v27 = a1 & 0xC000000000000001;
    while (v7 != v10)
    {
      if (v27)
        v11 = (id)MEMORY[0x2207D057C](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v3 = v11;
      sub_21FC5AD10();
      v12 = (uint64_t)objc_msgSend(v3, sel_count);
      if (v12 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_17;
      if (v12 > 0x7FFFFFFF)
        goto LABEL_18;
      *((_DWORD *)v6 + 4) = v12;
      v13 = objc_msgSend(v3, sel_quantityRange);
      v14 = objc_msgSend(v13, sel_minimum);

      v15 = v29;
      objc_msgSend(v14, sel_doubleValueForUnit_, v29);
      v17 = v16;

      *(_QWORD *)v6 = v17;
      v18 = objc_msgSend(v3, sel_quantityRange);
      v19 = objc_msgSend(v18, sel_maximum);

      objc_msgSend(v19, sel_doubleValueForUnit_, v15);
      v21 = v20;

      *((_QWORD *)v6 + 1) = v21;
      v31 = v8;
      v23 = *(_QWORD *)(v8 + 16);
      v22 = *(_QWORD *)(v8 + 24);
      v3 = (void *)(v23 + 1);
      if (v23 >= v22 >> 1)
      {
        sub_21FC01D20(v22 > 1, v23 + 1, 1);
        v8 = v31;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v3;
      sub_21FA2D23C((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v23, type metadata accessor for PBBucket);
      v7 = v25;
      a1 = v26;
      if (v25 == v10)
        return v8;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    v7 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t CatalogEntry.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CatalogEntry.v.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CatalogEntry.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CatalogEntry() + 24);
  v4 = sub_21FC5A98C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CatalogEntry()
{
  uint64_t result;

  result = qword_255541650;
  if (!qword_255541650)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CatalogEntry.bytes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CatalogEntry() + 28));
}

uint64_t CatalogEntry.init(id:version:url:bytes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char *v15;

  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  v11 = type metadata accessor for CatalogEntry();
  v12 = (char *)a7 + *(int *)(v11 + 24);
  v13 = sub_21FC5A98C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a4, v13);
  v15 = (char *)a7 + *(int *)(v11 + 28);
  *(_QWORD *)v15 = a5;
  v15[8] = a6 & 1;
  return result;
}

uint64_t sub_21FAE1E44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21FAE1E68 + 4 * byte_21FC63000[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_21FAE1E68()
{
  return 118;
}

uint64_t sub_21FAE1E74()
{
  return 7107189;
}

uint64_t sub_21FAE1E84()
{
  return 0x7365747962;
}

uint64_t sub_21FAE1E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21FAE2C20(a1, a2);
  *a3 = result;
  return result;
}

void sub_21FAE1EBC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_21FAE1EC8()
{
  sub_21FAE20CC();
  return sub_21FC5BF10();
}

uint64_t sub_21FAE1EF0()
{
  sub_21FAE20CC();
  return sub_21FC5BF1C();
}

uint64_t CatalogEntry.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_21FAE241C(0, &qword_2555415D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FAE20CC();
  sub_21FC5BEEC();
  v9[15] = 0;
  sub_21FC5BD78();
  if (!v1)
  {
    v9[14] = 1;
    sub_21FC5BD90();
    type metadata accessor for CatalogEntry();
    v9[13] = 2;
    sub_21FC5A98C();
    sub_21FAE2478(&qword_2555415E0, MEMORY[0x24BDCDAE0]);
    sub_21FC5BD9C();
    v9[12] = 3;
    sub_21FC5BD60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_21FAE20CC()
{
  unint64_t result;

  result = qword_2555415D8;
  if (!qword_2555415D8)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6318C, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2555415D8);
  }
  return result;
}

uint64_t CatalogEntry.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v25 = a2;
  v3 = sub_21FC5A98C();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAE241C(0, &qword_2555415E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v28 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - v8;
  v10 = type metadata accessor for CatalogEntry();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FAE20CC();
  v29 = v9;
  v13 = (uint64_t)v30;
  sub_21FC5BEE0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v7;
  v30 = a1;
  v15 = v26;
  v16 = v27;
  v34 = 0;
  v17 = v28;
  *v12 = sub_21FC5BD18();
  v12[1] = v18;
  v33 = 1;
  v12[2] = sub_21FC5BD24();
  v32 = 2;
  sub_21FAE2478(&qword_2555415F0, MEMORY[0x24BDCDB10]);
  v24 = v5;
  sub_21FC5BD30();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v12 + *(int *)(v10 + 24), v24, v16);
  v31 = 3;
  v19 = sub_21FC5BD00();
  LOBYTE(v16) = v20;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v17);
  v21 = (char *)v12 + *(int *)(v10 + 28);
  *(_QWORD *)v21 = v19;
  v21[8] = v16 & 1;
  sub_21FAE24B8((uint64_t)v12, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_21FAE24FC((uint64_t)v12);
}

void sub_21FAE241C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_21FAE20CC();
    v7 = a3(a1, &type metadata for CatalogEntry.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_21FAE2478(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_21FC5A98C();
    result = MEMORY[0x2207D0F78](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FAE24B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAE24FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CatalogEntry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21FAE2538@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CatalogEntry.init(from:)(a1, a2);
}

uint64_t sub_21FAE254C(_QWORD *a1)
{
  return CatalogEntry.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for CatalogEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21FC5A98C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 28);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
  }
  return v4;
}

uint64_t destroy for CatalogEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5A98C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for CatalogEntry(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21FC5A98C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  return a1;
}

_QWORD *assignWithCopy for CatalogEntry(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A98C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v13;
  return a1;
}

uint64_t initializeWithTake for CatalogEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5A98C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

_QWORD *assignWithTake for CatalogEntry(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21FC5A98C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for CatalogEntry()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAE28F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5A98C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CatalogEntry()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAE2980(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5A98C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FAE29F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5A98C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CatalogEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21FAE2AC8 + 4 * byte_21FC63009[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21FAE2AFC + 4 * byte_21FC63004[v4]))();
}

uint64_t sub_21FAE2AFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FAE2B04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FAE2B0CLL);
  return result;
}

uint64_t sub_21FAE2B18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FAE2B20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21FAE2B24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FAE2B2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CatalogEntry.CodingKeys()
{
  return &type metadata for CatalogEntry.CodingKeys;
}

unint64_t sub_21FAE2B4C()
{
  unint64_t result;

  result = qword_255541690;
  if (!qword_255541690)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC63164, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255541690);
  }
  return result;
}

unint64_t sub_21FAE2B94()
{
  unint64_t result;

  result = qword_255541698;
  if (!qword_255541698)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC630D4, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255541698);
  }
  return result;
}

unint64_t sub_21FAE2BDC()
{
  unint64_t result;

  result = qword_2555416A0;
  if (!qword_2555416A0)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC630FC, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2555416A0);
  }
  return result;
}

uint64_t sub_21FAE2C20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21FC5BDF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 118 && a2 == 0xE100000000000000 || (sub_21FC5BDF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_21FC5BDF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365747962 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_21FAE2D8C()
{
  qword_255572F38 = (uint64_t)&unk_24E4808A8;
}

id static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter()
{
  id v0;
  uint64_t inited;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_ephemeralSessionConfiguration);
  sub_21FAE2EE4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FC5EE30;
  v2 = MEMORY[0x24BEE0D00];
  sub_21FC5BB38();
  v3 = (id)HDHealthRecordsPublicUserAgentString();
  v4 = sub_21FC5B604();
  v6 = v5;

  *(_QWORD *)(inited + 96) = v2;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = v6;
  sub_21FA7C2D8(inited);
  v7 = (void *)sub_21FC5B55C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setHTTPAdditionalHeaders_, v7);

  objc_msgSend(v0, sel_set_sourceApplicationBundleIdentifier_, *MEMORY[0x24BDD4608]);
  return v0;
}

void sub_21FAE2EE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406CB88)
  {
    sub_21FAE2F38();
    v0 = sub_21FC5BDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406CB88);
  }
}

void sub_21FAE2F38()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25406CB78)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25406CB78);
  }
}

uint64_t static Catalog.simpleCatalog()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v15;
  unint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  char *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v24 = a1;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - v5;
  sub_21FA2D1A0(0, &qword_2555416A8, (uint64_t (*)(uint64_t))type metadata accessor for CatalogEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v7 = type metadata accessor for CatalogEntry();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = *(_QWORD *)(v8 + 72);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_21FC5F720;
  sub_21FC5A980();
  v11 = sub_21FC5A98C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  result = v13(v6, 1, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v22 = v10;
    v15 = (_QWORD *)(v10 + v9);
    *v15 = 0xD000000000000014;
    v15[1] = 0x800000021FC75270;
    v15[2] = 1;
    v16 = v10 + v9 + *(int *)(v7 + 24);
    v17 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
    v17(v16, v6, v11);
    v18 = (char *)v15 + *(int *)(v7 + 28);
    *(_QWORD *)v18 = 0;
    v18[8] = 1;
    sub_21FC5A980();
    result = v13(v4, 1, v11);
    if ((_DWORD)result != 1)
    {
      v19 = (_QWORD *)((char *)v15 + v23);
      *v19 = 0xD000000000000012;
      v19[1] = 0x800000021FC75230;
      v19[2] = 1;
      result = ((uint64_t (*)(char *, char *, uint64_t))v17)((char *)v19 + *(int *)(v7 + 24), v4, v11);
      v20 = (char *)v19 + *(int *)(v7 + 28);
      *(_QWORD *)v20 = 0;
      v20[8] = 1;
      *v24 = v22;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t static Catalog.simpleCatalogData()()
{
  uint64_t v0;
  uint64_t v2;

  sub_21FC5A65C();
  swift_allocObject();
  sub_21FC5A650();
  static Catalog.simpleCatalog()(&v2);
  sub_21FAE32B4();
  v0 = sub_21FC5A644();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_21FAE32B4()
{
  unint64_t result;

  result = qword_2555416B0;
  if (!qword_2555416B0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for Catalog, &type metadata for Catalog);
    atomic_store(result, (unint64_t *)&qword_2555416B0);
  }
  return result;
}

uint64_t sub_21FAE32F8@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  id v75;
  void *v76;
  uint64_t v77;
  void *v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unsigned __int8 v88;
  uint64_t v89;
  unsigned __int8 *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t *v128;
  uint64_t v130;
  void (*v131)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  id v143;
  uint64_t *v144;
  uint64_t v145;
  char v146[16];
  uint64_t v147;
  char v148;

  v134 = a3;
  v135 = a4;
  v144 = a2;
  v5 = sub_21FC5AAAC();
  v136 = *(_QWORD *)(v5 - 8);
  v137 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v132 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v141 = (uint64_t)&v130 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v140 = (uint64_t)&v130 - v13;
  v14 = type metadata accessor for PBGeneralMedication(0);
  v138 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v142 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v130 - v17;
  v19 = type metadata accessor for PBHKMedicationRecord(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v133 = (uint64_t)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v130 - v22;
  v24 = *a1;
  sub_21FC5AD10();
  v25 = *(int *)(v19 + 20);
  if (qword_25553D958 != -1)
    swift_once();
  v139 = v14;
  *(_QWORD *)&v23[v25] = qword_255543C20;
  swift_retain();
  v26 = objc_msgSend(v24, sel_medication);
  v27 = objc_msgSend(v24, sel_earliestDosageDate);
  v143 = v24;
  v28 = objc_msgSend(v24, sel_dosages);
  if (v28)
  {
    v29 = v28;
    sub_21FA5BE58(0, &qword_2555416C0);
    v30 = sub_21FC5B7A8();

  }
  else
  {
    v30 = 0;
  }
  v31 = objc_msgSend(v143, sel_status);
  sub_21FAE4238(v26, v27, v30, v31, (uint64_t)v18);

  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    v32 = swift_retain();
    *(_QWORD *)&v23[v25] = sub_21FB638BC(v32);
    swift_release();
  }
  v33 = *(_QWORD *)&v23[v25];
  v34 = v140;
  sub_21FA2D23C((uint64_t)v18, v140, type metadata accessor for PBGeneralMedication);
  v131 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v138 + 56);
  v131(v34, 0, 1, v139);
  v35 = v141;
  sub_21FA87DBC(v34, v141, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  v36 = v33
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA87E08(v35, v36, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  v37 = v143;
  v38 = objc_msgSend(v143, sel_asserter);
  if (v38)
  {
    v39 = v38;
    v40 = sub_21FC5B604();
    v42 = v41;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      v43 = swift_retain();
      *(_QWORD *)&v23[v25] = sub_21FB638BC(v43);
      swift_release();
    }
    v44 = (uint64_t *)(*(_QWORD *)&v23[v25]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
    swift_beginAccess();
    *v44 = v40;
    v44[1] = v42;
    swift_bridgeObjectRelease();
  }
  v45 = objc_msgSend(v37, sel_assertionDate);
  if (v45)
  {
    v46 = v45;
    v47 = *v144;
    v48 = (void *)sub_21FC5AB6C();
    v49 = objc_msgSend(v46, sel_adjustedDateForCalendar_, v48);

    sub_21FC5AA94();
    v50 = *(id *)(v47 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v51 = (void *)sub_21FC5AA64();
    v52 = objc_msgSend(v50, sel_stringFromDate_, v51);

    v53 = sub_21FC5B604();
    v55 = v54;

    (*(void (**)(char *, uint64_t))(v136 + 8))(v7, v137);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      v56 = swift_retain();
      *(_QWORD *)&v23[v25] = sub_21FB638BC(v56);
      swift_release();
    }
    v57 = (uint64_t *)(*(_QWORD *)&v23[v25]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
    swift_beginAccess();
    *v57 = v53;
    v57[1] = v55;

    swift_bridgeObjectRelease();
    v37 = v143;
  }
  sub_21FBAF208((unint64_t)objc_msgSend(v37, sel_assertionType), (uint64_t)&v147);
  v58 = v147;
  v59 = v148;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    v60 = swift_retain();
    *(_QWORD *)&v23[v25] = sub_21FB638BC(v60);
    swift_release();
  }
  v61 = *(_QWORD *)&v23[v25]
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  swift_beginAccess();
  *(_QWORD *)v61 = v58;
  *(_BYTE *)(v61 + 8) = v59;
  v62 = objc_msgSend(v37, sel_effectiveStartDate);
  if (v62)
  {
    v63 = v62;
    v64 = *v144;
    v65 = (void *)sub_21FC5AB6C();
    v66 = objc_msgSend(v63, sel_adjustedDateForCalendar_, v65);

    sub_21FC5AA94();
    v67 = *(id *)(v64 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v68 = (void *)sub_21FC5AA64();
    v69 = objc_msgSend(v67, sel_stringFromDate_, v68);

    v70 = sub_21FC5B604();
    v72 = v71;

    (*(void (**)(char *, uint64_t))(v136 + 8))(v7, v137);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      v73 = swift_retain();
      *(_QWORD *)&v23[v25] = sub_21FB638BC(v73);
      swift_release();
    }
    v74 = (uint64_t *)(*(_QWORD *)&v23[v25]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
    swift_beginAccess();
    *v74 = v70;
    v74[1] = v72;

    swift_bridgeObjectRelease();
    v37 = v143;
  }
  v75 = objc_msgSend(v37, sel_effectiveEndDate);
  if (v75)
  {
    v76 = v75;
    v77 = *v144;
    v78 = (void *)sub_21FC5AB6C();
    v79 = objc_msgSend(v76, sel_adjustedDateForCalendar_, v78);

    sub_21FC5AA94();
    v80 = *(id *)(v77 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v81 = (void *)sub_21FC5AA64();
    v82 = objc_msgSend(v80, sel_stringFromDate_, v81);

    v83 = sub_21FC5B604();
    v85 = v84;

    (*(void (**)(char *, uint64_t))(v136 + 8))(v7, v137);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      v86 = swift_retain();
      *(_QWORD *)&v23[v25] = sub_21FB638BC(v86);
      swift_release();
    }
    v87 = (uint64_t *)(*(_QWORD *)&v23[v25]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
    swift_beginAccess();
    *v87 = v83;
    v87[1] = v85;

    swift_bridgeObjectRelease();
    v37 = v143;
  }
  v88 = objc_msgSend(v37, sel_notTaken);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    v89 = swift_retain();
    *(_QWORD *)&v23[v25] = sub_21FB638BC(v89);
    swift_release();
  }
  v90 = (unsigned __int8 *)(*(_QWORD *)&v23[v25]
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  *v90 = v88;
  v91 = objc_msgSend(v37, sel_reasonForUse);
  v92 = v135;
  v93 = v139;
  if (v91)
  {
    v94 = v91;
    sub_21FA5BE58(0, (unint64_t *)&qword_255540D40);
    v95 = sub_21FC5B7A8();

    MEMORY[0x24BDAC7A8](v96);
    *(&v130 - 2) = (uint64_t)v144;
    v97 = sub_21FC41DA0((void (*)(id *))sub_21FAE609C, (uint64_t)(&v130 - 4), v95, (uint64_t)&v145);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      v98 = swift_retain();
      *(_QWORD *)&v23[v25] = sub_21FB638BC(v98);
      swift_release();
    }
    v99 = (uint64_t *)(*(_QWORD *)&v23[v25]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
    swift_beginAccess();
    *v99 = v97;
    swift_bridgeObjectRelease();
  }
  v100 = objc_msgSend(v37, sel_reasonsNotTaken);
  v101 = (uint64_t)v142;
  v102 = (uint64_t)v132;
  if (v100)
  {
    v103 = v100;
    sub_21FA5BE58(0, (unint64_t *)&qword_255540D40);
    v104 = sub_21FC5B7A8();

    MEMORY[0x24BDAC7A8](v105);
    *(&v130 - 2) = (uint64_t)v144;
    v106 = sub_21FC41DA0((void (*)(id *))sub_21FAE609C, (uint64_t)(&v130 - 4), v104, (uint64_t)v146);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      v107 = swift_retain();
      *(_QWORD *)&v23[v25] = sub_21FB638BC(v107);
      swift_release();
    }
    v108 = (uint64_t *)(*(_QWORD *)&v23[v25]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
    swift_beginAccess();
    *v108 = v106;
    swift_bridgeObjectRelease();
    v101 = (uint64_t)v142;
  }
  v109 = objc_msgSend(v37, sel_medicationCodingCollection);
  v110 = sub_21FC18858();

  v111 = *(_QWORD *)&v23[v25]
       + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FAE601C(v111, v102);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v102, 1, v93) == 1)
  {
    sub_21FC5AD10();
    v112 = *(int *)(v93 + 20);
    if (qword_25553D948 != -1)
      swift_once();
    *(_QWORD *)(v101 + v112) = qword_255543C00;
    swift_retain();
    sub_21FA2EDA0(v102, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_21FA2D23C(v102, v101, type metadata accessor for PBGeneralMedication);
  }
  v113 = *(int *)(v93 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    v114 = swift_retain();
    v101 = (uint64_t)v142;
    *(_QWORD *)(v101 + v113) = sub_21FB61F74(v114);
    swift_release();
  }
  v115 = (uint64_t *)(*(_QWORD *)(v101 + v113)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  swift_beginAccess();
  *v115 = v110;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    v116 = swift_retain();
    *(_QWORD *)&v23[v25] = sub_21FB638BC(v116);
    swift_release();
  }
  v117 = *(_QWORD *)&v23[v25];
  v118 = v140;
  sub_21FA2D23C(v101, v140, type metadata accessor for PBGeneralMedication);
  v131(v118, 0, 1, v93);
  v119 = v141;
  sub_21FA87DBC(v118, v141, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  v120 = v117
       + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA87E08(v119, v120, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  sub_21FAA23C8(v37, v134, v92);
  v121 = v133;
  sub_21FA2D120((uint64_t)v23, v133, type metadata accessor for PBHKMedicationRecord);
  PBClinicalRecord.medicationRecord.setter(v121);
  v122 = sub_21FC57788();
  v124 = v123;
  v125 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v126 = (_QWORD *)swift_retain();
    v127 = sub_21FB8E53C(v126);
    swift_release();
    *(_QWORD *)(v92 + v125) = v127;
    swift_release();
  }
  v128 = (uint64_t *)(*(_QWORD *)(v92 + v125)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  *v128 = v122;
  v128[1] = v124;
  swift_bridgeObjectRelease();
  return sub_21FA326EC((uint64_t)v23, type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_21FAE4238@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  _BYTE v58[16];

  v55 = a4;
  v53 = a3;
  v9 = sub_21FC5AAAC();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v50 - v16;
  v56 = type metadata accessor for PBHKConcept(0);
  v18 = *(_QWORD *)(v56 - 8);
  v19 = MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v50 - v21;
  sub_21FC5AD10();
  v23 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if (qword_25553D948 != -1)
    swift_once();
  *(_QWORD *)(a5 + v23) = qword_255543C00;
  swift_retain();
  v57 = v5;
  sub_21FAA1BD0(a1, 1, (uint64_t)v22);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    v24 = swift_retain();
    *(_QWORD *)(a5 + v23) = sub_21FB61F74(v24);
    swift_release();
  }
  v25 = *(_QWORD *)(a5 + v23);
  sub_21FA2D23C((uint64_t)v22, (uint64_t)v17, type metadata accessor for PBHKConcept);
  v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v52(v17, 0, 1, v56);
  sub_21FA87DBC((uint64_t)v17, (uint64_t)v15, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  v26 = v25
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  swift_retain();
  sub_21FA87E08((uint64_t)v15, v26, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  swift_endAccess();
  result = swift_release();
  if (a2)
  {
    v28 = *v57;
    v29 = a2;
    v30 = (void *)sub_21FC5AB6C();
    v31 = objc_msgSend(v29, sel_adjustedDateForCalendar_, v30);

    sub_21FC5AA94();
    v32 = *(id *)(v28 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v33 = (void *)sub_21FC5AA64();
    v34 = objc_msgSend(v32, sel_stringFromDate_, v33);

    v35 = sub_21FC5B604();
    v37 = v36;

    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBGeneralMedication._StorageClass(0);
      swift_allocObject();
      v38 = swift_retain();
      *(_QWORD *)(a5 + v23) = sub_21FB61F74(v38);
      swift_release();
    }
    v39 = *(_QWORD *)(a5 + v23);
    swift_beginAccess();
    *(_QWORD *)(v39 + 16) = v35;
    *(_QWORD *)(v39 + 24) = v37;

    result = swift_bridgeObjectRelease();
  }
  v40 = v57;
  v41 = (uint64_t)v54;
  if (v53)
  {
    MEMORY[0x24BDAC7A8](result);
    *(&v50 - 2) = (uint64_t)v40;
    v43 = sub_21FC41DE8((void (*)(id *))sub_21FAE6070, (uint64_t)(&v50 - 4), v42, (uint64_t)v58);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBGeneralMedication._StorageClass(0);
      swift_allocObject();
      v44 = swift_retain();
      *(_QWORD *)(a5 + v23) = sub_21FB61F74(v44);
      swift_release();
    }
    v45 = (uint64_t *)(*(_QWORD *)(a5 + v23)
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
    swift_beginAccess();
    *v45 = v43;
    result = swift_bridgeObjectRelease();
  }
  if (v55)
  {
    v46 = v55;
    sub_21FAA1BD0(v46, 1, v41);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBGeneralMedication._StorageClass(0);
      swift_allocObject();
      v47 = swift_retain();
      *(_QWORD *)(a5 + v23) = sub_21FB61F74(v47);
      swift_release();
    }
    v48 = *(_QWORD *)(a5 + v23);
    sub_21FA2D23C(v41, (uint64_t)v17, type metadata accessor for PBHKConcept);
    v52(v17, 0, 1, v56);
    sub_21FA87DBC((uint64_t)v17, (uint64_t)v15, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    v49 = v48
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
    swift_beginAccess();
    swift_retain();
    sub_21FA87E08((uint64_t)v15, v49, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    return swift_release();
  }
  return result;
}

uint64_t sub_21FAE47D8@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  char *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t result;
  int v52;
  uint64_t v53;
  _DWORD *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  id v62;
  void *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  void *v80;
  id v81;
  char *v82;
  id v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t *v114;
  char v115[16];

  v106 = a3;
  v114 = a2;
  sub_21FA2ED54(0, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v104 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v103 = (uint64_t)&v100 - v9;
  v102 = type metadata accessor for PBHKConcept(0);
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v100 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_21FC5AAAC();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v110 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v100 - v16;
  v109 = type metadata accessor for PBGeneralMedication(0);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for PBHKMedicationOrder(0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v105 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v100 - v23;
  v25 = *a1;
  sub_21FC5AD10();
  v26 = *(int *)(v20 + 20);
  if (qword_25553D980 != -1)
    swift_once();
  *(_QWORD *)&v24[v26] = qword_255543C78;
  swift_retain();
  v27 = objc_msgSend(v25, sel_medication);
  v28 = objc_msgSend(v25, sel_earliestDosageDate);
  v113 = v25;
  v29 = objc_msgSend(v25, sel_dosages);
  v107 = a4;
  if (v29)
  {
    v30 = v29;
    sub_21FA5BE58(0, &qword_2555416C0);
    v31 = sub_21FC5B7A8();

  }
  else
  {
    v31 = 0;
  }
  v32 = objc_msgSend(v113, sel_status);
  sub_21FAE4238(v27, v28, v31, v32, (uint64_t)v19);

  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v33 = swift_retain();
    *(_QWORD *)&v24[v26] = sub_21FB672FC(v33);
    swift_release();
  }
  v34 = *(_QWORD *)&v24[v26];
  sub_21FA2D23C((uint64_t)v19, (uint64_t)v17, type metadata accessor for PBGeneralMedication);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v17, 0, 1, v109);
  sub_21FA87DBC((uint64_t)v17, (uint64_t)v15, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  v35 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA87E08((uint64_t)v15, v35, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  v36 = v113;
  v37 = objc_msgSend(v113, sel_endedDate);
  if (v37)
  {
    v38 = v37;
    v39 = *v114;
    v40 = (void *)sub_21FC5AB6C();
    v41 = objc_msgSend(v38, sel_adjustedDateForCalendar_, v40);

    v42 = v110;
    sub_21FC5AA94();

    v43 = *(id *)(v39 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v44 = (void *)sub_21FC5AA64();
    v45 = objc_msgSend(v43, sel_stringFromDate_, v44);

    v46 = sub_21FC5B604();
    v48 = v47;

    (*(void (**)(char *, uint64_t))(v111 + 8))(v42, v112);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      v49 = swift_retain();
      *(_QWORD *)&v24[v26] = sub_21FB672FC(v49);
      swift_release();
    }
    v50 = (uint64_t *)(*(_QWORD *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
    swift_beginAccess();
    *v50 = v46;
    v50[1] = v48;

    swift_bridgeObjectRelease();
    v36 = v113;
  }
  result = (uint64_t)objc_msgSend(v36, sel_numberOfFills);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_36;
  }
  v52 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v53 = swift_retain();
    *(_QWORD *)&v24[v26] = sub_21FB672FC(v53);
    swift_release();
  }
  v54 = (_DWORD *)(*(_QWORD *)&v24[v26]
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  *v54 = v52;
  v55 = objc_msgSend(v36, sel_prescriber);
  if (v55)
  {
    v56 = v55;
    v57 = sub_21FC5B604();
    v59 = v58;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      v60 = swift_retain();
      *(_QWORD *)&v24[v26] = sub_21FB672FC(v60);
      swift_release();
    }
    v61 = (uint64_t *)(*(_QWORD *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
    swift_beginAccess();
    *v61 = v57;
    v61[1] = v59;
    swift_bridgeObjectRelease();
  }
  v62 = objc_msgSend(v36, sel_reason);
  if (v62)
  {
    v63 = v62;
    sub_21FA5BE58(0, (unint64_t *)&qword_255540D40);
    v64 = sub_21FC5B7A8();

    MEMORY[0x24BDAC7A8](v65);
    *(&v100 - 2) = (uint64_t)v114;
    v66 = sub_21FC41DA0((void (*)(id *))sub_21FAC44A0, (uint64_t)(&v100 - 4), v64, (uint64_t)v115);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      v67 = swift_retain();
      *(_QWORD *)&v24[v26] = sub_21FB672FC(v67);
      swift_release();
    }
    v68 = (uint64_t *)(*(_QWORD *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
    swift_beginAccess();
    *v68 = v66;
    swift_bridgeObjectRelease();
  }
  v69 = objc_msgSend(v36, sel_reasonEnded);
  if (v69)
  {
    v70 = v69;
    v71 = v100;
    sub_21FAA1BD0(v69, 1, v100);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      v72 = swift_retain();
      *(_QWORD *)&v24[v26] = sub_21FB672FC(v72);
      swift_release();
    }
    v73 = *(_QWORD *)&v24[v26];
    v74 = v103;
    sub_21FA2D23C(v71, v103, type metadata accessor for PBHKConcept);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v74, 0, 1, v102);
    v75 = v104;
    sub_21FA87DBC(v74, v104, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    v76 = v73
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
    swift_beginAccess();
    swift_retain();
    sub_21FA87E08(v75, v76, &qword_255540590, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    swift_release();
    v36 = v113;
  }
  v77 = objc_msgSend(v36, sel_writtenDate);
  if (v77)
  {
    v78 = v77;
    v79 = *v114;
    v80 = (void *)sub_21FC5AB6C();
    v81 = objc_msgSend(v78, sel_adjustedDateForCalendar_, v80);

    v82 = v110;
    sub_21FC5AA94();

    v83 = *(id *)(v79 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v84 = (void *)sub_21FC5AA64();
    v85 = objc_msgSend(v83, sel_stringFromDate_, v84);

    v86 = sub_21FC5B604();
    v88 = v87;

    (*(void (**)(char *, uint64_t))(v111 + 8))(v82, v112);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      v89 = swift_retain();
      *(_QWORD *)&v24[v26] = sub_21FB672FC(v89);
      swift_release();
    }
    v90 = (uint64_t *)(*(_QWORD *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
    swift_beginAccess();
    *v90 = v86;
    v90[1] = v88;

    swift_bridgeObjectRelease();
    v36 = v113;
  }
  v91 = v107;
  sub_21FAA23C8(v36, v106, v107);
  v92 = v105;
  sub_21FA2D120((uint64_t)v24, v105, type metadata accessor for PBHKMedicationOrder);
  PBClinicalRecord.medicationOrder.setter(v92);
  v93 = sub_21FC57788();
  v95 = v94;
  v96 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v97 = (_QWORD *)swift_retain();
    v98 = sub_21FB8E53C(v97);
    swift_release();
    *(_QWORD *)(v91 + v96) = v98;
    swift_release();
  }
  v99 = (uint64_t *)(*(_QWORD *)(v91 + v96)
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  *v99 = v93;
  v99[1] = v95;
  swift_bridgeObjectRelease();
  return sub_21FA326EC((uint64_t)v24, type metadata accessor for PBHKMedicationOrder);
}

uint64_t sub_21FAE53E0@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  char *v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;

  v75 = a3;
  v80 = a2;
  v6 = sub_21FC5AAAC();
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v77 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v71 - v11;
  v13 = type metadata accessor for PBGeneralMedication(0);
  v71 = *(_QWORD *)(v13 - 8);
  v72 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v74 = (uint64_t)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v71 - v19;
  v21 = *a1;
  sub_21FC5AD10();
  v22 = *(int *)(v16 + 20);
  if (qword_25553D970 != -1)
    swift_once();
  *(_QWORD *)&v20[v22] = qword_255543C58;
  swift_retain();
  v23 = objc_msgSend(v21, sel_medication);
  v24 = objc_msgSend(v21, sel_earliestDosageDate);
  v25 = objc_msgSend(v21, sel_dosages);
  v76 = a4;
  if (v25)
  {
    v26 = v25;
    sub_21FA5BE58(0, &qword_2555416C0);
    v27 = sub_21FC5B7A8();

  }
  else
  {
    v27 = 0;
  }
  v28 = objc_msgSend(v21, sel_status);
  sub_21FAE4238(v23, v24, v27, v28, (uint64_t)v15);

  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    v29 = swift_retain();
    *(_QWORD *)&v20[v22] = sub_21FB65540(v29);
    swift_release();
  }
  v30 = *(_QWORD *)&v20[v22];
  sub_21FA2D23C((uint64_t)v15, (uint64_t)v12, type metadata accessor for PBGeneralMedication);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v12, 0, 1, v72);
  v31 = v73;
  sub_21FA87DBC((uint64_t)v12, v73, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  v32 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA87E08(v31, v32, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  v33 = objc_msgSend(v21, sel_handOverDate);
  if (v33)
  {
    v34 = v33;
    v35 = *v80;
    v36 = (void *)sub_21FC5AB6C();
    v37 = objc_msgSend(v34, sel_adjustedDateForCalendar_, v36);

    v38 = v77;
    sub_21FC5AA94();

    v39 = *(id *)(v35 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v40 = (void *)sub_21FC5AA64();
    v41 = objc_msgSend(v39, sel_stringFromDate_, v40);

    v42 = sub_21FC5B604();
    v44 = v43;

    (*(void (**)(char *, uint64_t))(v78 + 8))(v38, v79);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
      swift_allocObject();
      v45 = swift_retain();
      *(_QWORD *)&v20[v22] = sub_21FB65540(v45);
      swift_release();
    }
    v46 = (uint64_t *)(*(_QWORD *)&v20[v22]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
    swift_beginAccess();
    *v46 = v42;
    v46[1] = v44;

    swift_bridgeObjectRelease();
  }
  v47 = objc_msgSend(v21, sel_preparationDate);
  if (v47)
  {
    v48 = v47;
    v49 = *v80;
    v50 = (void *)sub_21FC5AB6C();
    v51 = objc_msgSend(v48, sel_adjustedDateForCalendar_, v50);

    v52 = v77;
    sub_21FC5AA94();

    v53 = *(id *)(v49 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v54 = (void *)sub_21FC5AA64();
    v55 = objc_msgSend(v53, sel_stringFromDate_, v54);

    v56 = sub_21FC5B604();
    v58 = v57;

    (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v79);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
      swift_allocObject();
      v59 = swift_retain();
      *(_QWORD *)&v20[v22] = sub_21FB65540(v59);
      swift_release();
    }
    v60 = (uint64_t *)(*(_QWORD *)&v20[v22]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
    swift_beginAccess();
    *v60 = v56;
    v60[1] = v58;

    swift_bridgeObjectRelease();
  }
  v61 = v76;
  sub_21FAA23C8(v21, v75, v76);
  v62 = v74;
  sub_21FA2D120((uint64_t)v20, v74, type metadata accessor for PBHKMedicationDispenseRecord);
  PBClinicalRecord.medicationDispenseRecord.setter(v62);
  v63 = sub_21FC57788();
  v65 = v64;
  v66 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v67 = (_QWORD *)swift_retain();
    v68 = sub_21FB8E53C(v67);
    swift_release();
    *(_QWORD *)(v61 + v66) = v68;
    swift_release();
  }
  v69 = (uint64_t *)(*(_QWORD *)(v61 + v66)
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  *v69 = v63;
  v69[1] = v65;
  swift_bridgeObjectRelease();
  return sub_21FA326EC((uint64_t)v20, type metadata accessor for PBHKMedicationDispenseRecord);
}

id sub_21FAE5B10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id result;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_21FA2ED54(0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v50 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (uint64_t)&v46 - v7;
  sub_21FA2ED54(0, (unint64_t *)&qword_25406AAE8, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for PBDateRange(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FC5AD10();
  v17 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if (qword_25553D930 != -1)
    swift_once();
  *(_QWORD *)(a2 + v17) = qword_255543BC8;
  swift_retain();
  v18 = objc_msgSend(a1, sel_instruction);
  if (v18)
  {
    v19 = v18;
    v20 = v16;
    v21 = sub_21FC5B604();
    v23 = v22;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBMedicationDosage._StorageClass(0);
      swift_allocObject();
      v24 = swift_retain();
      *(_QWORD *)(a2 + v17) = sub_21FB60EB4(v24);
      swift_release();
    }
    v25 = *(_QWORD *)(a2 + v17);
    swift_beginAccess();
    *(_QWORD *)(v25 + 16) = v21;
    *(_QWORD *)(v25 + 24) = v23;
    swift_bridgeObjectRelease();
    v16 = v20;
  }
  result = objc_msgSend(a1, sel_timingPeriod);
  if (result)
  {
    v27 = result;
    v28 = objc_msgSend(result, sel_startDate);
    if (v28)
    {
      v29 = v28;
      v30 = (void *)sub_21FC5AB6C();
      v31 = objc_msgSend(v29, sel_adjustedDateForCalendar_, v30);

      sub_21FC5AA94();
      v32 = sub_21FC5AAAC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v13, 0, 1, v32);
    }
    else
    {
      v33 = sub_21FC5AAAC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v13, 1, 1, v33);
    }
    v34 = objc_msgSend(v27, sel_endDate);
    if (v34)
    {
      v35 = v34;
      v36 = (void *)sub_21FC5AB6C();
      v37 = objc_msgSend(v35, sel_adjustedDateForCalendar_, v36);

      sub_21FC5AA94();
      v38 = sub_21FC5AAAC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v11, 0, 1, v38);
    }
    else
    {
      v39 = sub_21FC5AAAC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v11, 1, 1, v39);
    }
    sub_21FC0329C(v13, v11);
    v40 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_21FA2EDA0((uint64_t)v11, (unint64_t *)&qword_25406AAE8, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_21FA2EDA0((uint64_t)v13, (unint64_t *)&qword_25406AAE8, v40);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBMedicationDosage._StorageClass(0);
      swift_allocObject();
      v41 = swift_retain();
      *(_QWORD *)(a2 + v17) = sub_21FB60EB4(v41);
      swift_release();
    }
    v42 = *(_QWORD *)(a2 + v17);
    v43 = v47;
    sub_21FA2D23C((uint64_t)v16, v47, type metadata accessor for PBDateRange);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v43, 0, 1, v49);
    v44 = v50;
    sub_21FA87DBC(v43, v50, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    v45 = v42
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    swift_retain();
    sub_21FA87E08(v44, v45, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    swift_endAccess();

    return (id)swift_release();
  }
  return result;
}

uint64_t sub_21FAE601C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2ED54(0, &qword_2555416B8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_21FAE6070@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FAE5B10(*a1, a2);
}

id sub_21FAE609C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FAC44A0(a1, a2);
}

unint64_t sub_21FAE60B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t inited;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v1 = v0;
  sub_21FAE7810();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FC5EE30;
  *(_QWORD *)(inited + 32) = 0x746E6569746170;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v3 = v1[1];
  *(_QWORD *)(inited + 48) = *v1;
  *(_QWORD *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  v4 = sub_21FA7C090(inited);
  v5 = v1[5];
  if (v5)
  {
    v6 = v1[4];
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_21FA7858C(v6, v5, 1734431845, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  v8 = v1[3];
  if (v8)
  {
    v9 = v1[2];
    swift_bridgeObjectRetain();
    v10 = swift_isUniquelyReferenced_nonNull_native();
    sub_21FA7858C(v9, v8, 0x656372756F736572, 0xEA00000000004449, v10);
    swift_bridgeObjectRelease();
  }
  v11 = v1[9];
  if (v11)
  {
    v12 = v1[8];
    swift_bridgeObjectRetain();
    v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_21FA7858C(v12, v11, 0x44494C44746F6F72, 0xE800000000000000, v13);
    swift_bridgeObjectRelease();
  }
  v14 = v1[7];
  if (v14)
  {
    v15 = v1[6];
    v16 = v14;
  }
  else
  {
    v16 = 0xE100000000000000;
    v15 = 45;
  }
  swift_bridgeObjectRetain();
  v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_21FA7858C(v15, v16, 0xD000000000000015, 0x800000021FC74A40, v17);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21FAE628C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21FAE62B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21FAE62E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t sub_21FAE6318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

id sub_21FAE634C()
{
  uint64_t v0;

  return *(id *)(v0 + 80);
}

id sub_21FAE6354()
{
  uint64_t v0;

  return *(id *)(v0 + 88);
}

id sub_21FAE635C()
{
  uint64_t v0;

  return *(id *)(v0 + 96);
}

id sub_21FAE6364()
{
  uint64_t v0;

  return *(id *)(v0 + 104);
}

uint64_t sub_21FAE6370(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[7];
  _OWORD v14[7];

  v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  v3 = a1[6];
  v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v6 = *a2;
  v7 = a2[1];
  v13[6] = v3;
  v14[0] = v6;
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[6];
  v14[5] = a2[5];
  v14[6] = v10;
  v11 = a2[4];
  v14[3] = v9;
  v14[4] = v11;
  v14[1] = v7;
  v14[2] = v8;
  return sub_21FAE65C8(v13, v14) & 1;
}

unint64_t sub_21FAE63D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t inited;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v1 = v0;
  sub_21FAE7810();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FC5EE30;
  *(_QWORD *)(inited + 32) = 0x746E6569746170;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v3 = v1[1];
  *(_QWORD *)(inited + 48) = *v1;
  *(_QWORD *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  v4 = sub_21FA7C090(inited);
  v5 = v1[5];
  if (v5)
  {
    v6 = v1[4];
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_21FA7858C(v6, v5, 1734431845, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  v8 = v1[3];
  if (v8)
  {
    v9 = v1[2];
    swift_bridgeObjectRetain();
    v10 = swift_isUniquelyReferenced_nonNull_native();
    sub_21FA7858C(v9, v8, 0x656372756F736572, 0xEA00000000004449, v10);
    swift_bridgeObjectRelease();
  }
  v11 = v1[7];
  if (v11)
  {
    v12 = v1[6];
    v13 = v11;
  }
  else
  {
    v13 = 0xE100000000000000;
    v12 = 45;
  }
  swift_bridgeObjectRetain();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_21FA7858C(v12, v13, 0xD000000000000015, 0x800000021FC74A40, v14);
  swift_bridgeObjectRelease();
  return v4;
}

id sub_21FAE655C()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

id sub_21FAE6564()
{
  uint64_t v0;

  return *(id *)(v0 + 72);
}

uint64_t sub_21FAE6570(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_21FAE6764(v9, v10) & 1;
}

uint64_t sub_21FAE65C8(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_21FC5BDF0() & 1) == 0)
    return 0;
  v5 = a1[3];
  v6 = a2[3];
  if (v5)
  {
    if (!v6)
      return 0;
    v7 = a1[2] == a2[2] && v5 == v6;
    if (!v7 && (sub_21FC5BDF0() & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  v8 = a1[5];
  v9 = a2[5];
  if (v8)
  {
    if (!v9 || (a1[4] != a2[4] || v8 != v9) && (sub_21FC5BDF0() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  v10 = a1[7];
  v11 = a2[7];
  if (v10)
  {
    if (!v11 || (a1[6] != a2[6] || v10 != v11) && (sub_21FC5BDF0() & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  v12 = a1[9];
  v13 = a2[9];
  if (v12)
  {
    if (!v13 || (a1[8] != a2[8] || v12 != v13) && (sub_21FC5BDF0() & 1) == 0)
      return 0;
  }
  else if (v13)
  {
    return 0;
  }
  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  if ((sub_21FC5BA60() & 1) != 0 && (sub_21FC5BA60() & 1) != 0 && (sub_21FC5BA60() & 1) != 0)
    return sub_21FC5BA60() & 1;
  return 0;
}

uint64_t sub_21FAE6764(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_21FC5BDF0() & 1) == 0)
    return 0;
  v5 = a1[3];
  v6 = a2[3];
  if (v5)
  {
    if (!v6)
      return 0;
    v7 = a1[2] == a2[2] && v5 == v6;
    if (!v7 && (sub_21FC5BDF0() & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  v8 = a1[5];
  v9 = a2[5];
  if (v8)
  {
    if (!v9 || (a1[4] != a2[4] || v8 != v9) && (sub_21FC5BDF0() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  v10 = a1[7];
  v11 = a2[7];
  if (v10)
  {
    if (!v11 || (a1[6] != a2[6] || v10 != v11) && (sub_21FC5BDF0() & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  if ((sub_21FC5BA60() & 1) != 0 && (sub_21FC5BA60() & 1) != 0 && (sub_21FC5BA60() & 1) != 0)
    return sub_21FC5BA60() & 1;
  return 0;
}

void *sub_21FAE68C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v8 = sub_21FC5BC7C();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v22 = v4;
      v23 = v7;
      v24 = v7 & 0xC000000000000001;
      v4 = 4;
      do
      {
        v9 = v4 - 4;
        if (v24)
        {
          v10 = (id)MEMORY[0x2207D057C](v4 - 4, v7);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_19;
        }
        else
        {
          v10 = *(id *)(v7 + 8 * v4);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v12 = v8;
        v13 = v10;
        v14 = a3;
        v15 = objc_msgSend(v10, sel_name, v22);
        v16 = sub_21FC5B604();
        v18 = v17;

        a3 = v14;
        v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        v20 = sub_21FC5BDF0();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_18;

        ++v4;
        v8 = v12;
        v19 = v11 == v12;
        v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_21FAE6A68(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  if (a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_21FC5BC7C())
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207D057C](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_name);
      v8 = sub_21FC5B604();
      v10 = v9;
      if (v8 == sub_21FC5B604() && v10 == v11)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return v5;
      }
      v13 = sub_21FC5BDF0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_16;

      ++v3;
      if (v6 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_21FAE6C08(void *a1@<X0>, id a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  id v6;
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;

  v10 = (void *)*MEMORY[0x24BE48870];
  v11 = objc_msgSend(a1, sel_features);
  if (!v11)
    goto LABEL_8;
  v12 = v11;
  sub_21FA5BE58(0, &qword_2555416C8);
  v13 = sub_21FC5B7A8();

  v14 = v10;
  v5 = sub_21FAE6A68(v13);
  swift_bridgeObjectRelease();

  if (!v5)
  {
LABEL_8:
    sub_21FAC7C38();
    swift_allocError();
    *(_QWORD *)v28 = v10;
    *(_QWORD *)(v28 + 8) = 0;
    *(_BYTE *)(v28 + 16) = 2;
    v29 = v10;
    swift_willThrow();
    LODWORD(v17) = 0;
LABEL_9:
    v30 = 0;
    v31 = 0;
    goto LABEL_10;
  }
  v37 = a2;
  v15 = objc_msgSend(v5, sel_interactions);
  sub_21FA5BE58(0, (unint64_t *)&qword_2555416D0);
  v16 = sub_21FC5B7A8();

  v6 = (id)0xD000000000000015;
  v17 = sub_21FAE68C4(v16, 0xD000000000000015, 0x800000021FC772C0);
  a2 = v4;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    sub_21FAC7C38();
    swift_allocError();
    *(_QWORD *)v32 = 0xD000000000000015;
    *(_QWORD *)(v32 + 8) = 0x800000021FC772C0;
    *(_BYTE *)(v32 + 16) = 3;
    swift_willThrow();

    goto LABEL_9;
  }
  v36 = a4;
  v38 = v17;
  v18 = objc_msgSend(v5, sel_interactions);
  v19 = sub_21FC5B7A8();

  v20 = sub_21FAE68C4(v19, 0xD000000000000017, 0x800000021FC772E0);
  v6 = v4;
  swift_bridgeObjectRelease();
  if (v20)
  {
    a2 = v20;
    v21 = objc_msgSend(v5, sel_interactions);
    v22 = sub_21FC5B7A8();

    v6 = sub_21FAE68C4(v22, 0xD000000000000017, 0x800000021FC77300);
    swift_bridgeObjectRelease();
    if (v6)
    {
      v6 = v6;
      v23 = objc_msgSend(v5, sel_interactions);
      v24 = sub_21FC5B7A8();

      v25 = sub_21FAE68C4(v24, 0xD000000000000017, 0x800000021FC77320);
      swift_bridgeObjectRelease();
      if (v25)
      {

        swift_bridgeObjectRetain_n();
        v26 = v38;
        v27 = a2;

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        *(_QWORD *)v36 = v37;
        *(_QWORD *)(v36 + 8) = a3;
        *(_OWORD *)(v36 + 16) = 0u;
        *(_OWORD *)(v36 + 32) = 0u;
        *(_OWORD *)(v36 + 48) = 0u;
        *(_OWORD *)(v36 + 64) = 0u;
        *(_QWORD *)(v36 + 80) = v26;
        *(_QWORD *)(v36 + 88) = v27;
        *(_QWORD *)(v36 + 96) = v6;
        *(_QWORD *)(v36 + 104) = v25;
        return;
      }
      sub_21FAC7C38();
      swift_allocError();
      *(_QWORD *)v35 = 0xD000000000000017;
      *(_QWORD *)(v35 + 8) = 0x800000021FC77320;
      *(_BYTE *)(v35 + 16) = 3;
      swift_willThrow();

      v5 = v38;
      LODWORD(v17) = 1;
      v30 = 1;
      v31 = 1;
    }
    else
    {
      sub_21FAC7C38();
      swift_allocError();
      *(_QWORD *)v34 = 0xD000000000000017;
      *(_QWORD *)(v34 + 8) = 0x800000021FC77300;
      *(_BYTE *)(v34 + 16) = 3;
      swift_willThrow();

      v5 = v38;
      v31 = 0;
      LODWORD(v17) = 1;
      v30 = 1;
    }
  }
  else
  {
    sub_21FAC7C38();
    swift_allocError();
    *(_QWORD *)v33 = 0xD000000000000017;
    *(_QWORD *)(v33 + 8) = 0x800000021FC772E0;
    *(_BYTE *)(v33 + 16) = 3;
    swift_willThrow();

    v5 = v38;
    v30 = 0;
    v31 = 0;
    LODWORD(v17) = 1;
  }
LABEL_10:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if ((_DWORD)v17)
  {

    if (!v30)
      goto LABEL_12;
  }
  else if (!v30)
  {
LABEL_12:
    if (!v31)
      return;
    goto LABEL_13;
  }

  if (v31)
LABEL_13:

}

void destroy for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = (void *)a2[8];
  v8 = (void *)a2[9];
  a1[8] = v7;
  a1[9] = v8;
  v9 = (void *)a2[10];
  v10 = (void *)a2[11];
  a1[10] = v9;
  a1[11] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[8];
  v5 = (void *)a1[8];
  a1[8] = v4;
  v6 = v4;

  v7 = (void *)a2[9];
  v8 = (void *)a1[9];
  a1[9] = v7;
  v9 = v7;

  v10 = (void *)a2[10];
  v11 = (void *)a1[10];
  a1[10] = v10;
  v12 = v10;

  v13 = (void *)a2[11];
  v14 = (void *)a1[11];
  a1[11] = v13;
  v15 = v13;

  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v9 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator()
{
  return &type metadata for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator;
}

void destroy for ClinicalSharingDocumentReferenceForLookupInfo(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for ClinicalSharingDocumentReferenceForLookupInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = (void *)a2[10];
  v9 = (void *)a2[11];
  a1[10] = v8;
  a1[11] = v9;
  v10 = (void *)a2[12];
  v11 = (void *)a2[13];
  a1[12] = v10;
  a1[13] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v11;
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingDocumentReferenceForLookupInfo(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[10];
  v5 = (void *)a1[10];
  a1[10] = v4;
  v6 = v4;

  v7 = (void *)a2[11];
  v8 = (void *)a1[11];
  a1[11] = v7;
  v9 = v7;

  v10 = (void *)a2[12];
  v11 = (void *)a1[12];
  a1[12] = v10;
  v12 = v10;

  v13 = (void *)a2[13];
  v14 = (void *)a1[13];
  a1[13] = v13;
  v15 = v13;

  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDocumentReferenceForLookupInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v9 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  v10 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingDocumentReferenceForLookupInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingDocumentReferenceForLookupInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDocumentReferenceForLookupInfo()
{
  return &type metadata for ClinicalSharingDocumentReferenceForLookupInfo;
}

void sub_21FAE7810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2555416D8)
  {
    sub_21FAE7864();
    v0 = sub_21FC5BDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2555416D8);
  }
}

void sub_21FAE7864()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2555416E0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2555416E0);
  }
}

id sub_21FAE78C4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id result;
  char v4;
  char v5;
  uint64_t v6;

  result = objc_msgSend(v1, sel_code);
  v4 = 0;
  v5 = 1;
  v6 = 12;
  switch((unint64_t)result)
  {
    case 0uLL:
      v4 = 0;
      v6 = 1;
      break;
    case 3uLL:
      v4 = 0;
      v6 = 4;
      break;
    case 5uLL:
      v4 = 0;
      v6 = 32;
      break;
    case 7uLL:
      v4 = 0;
      v6 = 7;
      break;
    case 0xAuLL:
      break;
    case 0xFuLL:
      v4 = 0;
      v6 = 30;
      break;
    case 0x10uLL:
      v4 = 0;
      v6 = 27;
      break;
    case 0x11uLL:
      v4 = 0;
      v6 = 28;
      break;
    case 0x39uLL:
      v4 = 0;
      v6 = 83;
      break;
    case 0x3FuLL:
      v4 = 0;
      v6 = 84;
      break;
    case 0x4BuLL:
      v4 = 0;
      v6 = 15;
      break;
    case 0x64uLL:
      v4 = 0;
      v6 = 111;
      break;
    case 0x76uLL:
      v4 = 0;
      v6 = 34;
      break;
    case 0x7CuLL:
      v4 = 0;
      v6 = 19;
      break;
    case 0x7EuLL:
    case 0x7FuLL:
    case 0x80uLL:
      v4 = 0;
      v6 = 103;
      break;
    case 0x81uLL:
      v4 = 0;
      v6 = 102;
      break;
    case 0x83uLL:
      v4 = 0;
      v6 = 101;
      break;
    case 0x89uLL:
      v4 = 0;
      v6 = 35;
      break;
    case 0x8CuLL:
      v4 = 0;
      v6 = 92;
      break;
    case 0x90uLL:
      v4 = 0;
      v6 = 97;
      break;
    case 0x93uLL:
      v4 = 0;
      v6 = 93;
      break;
    case 0x9CuLL:
      v4 = 0;
      v6 = 94;
      break;
    case 0xB6uLL:
      v4 = 0;
      v6 = 119;
      break;
    case 0xB7uLL:
      v4 = 0;
      v6 = 122;
      break;
    case 0xBBuLL:
      v4 = 0;
      v6 = 117;
      break;
    case 0xBCuLL:
      v4 = 0;
      v6 = 118;
      break;
    case 0xC2uLL:
      v4 = 0;
      v6 = 124;
      break;
    case 0xC3uLL:
      v4 = 0;
      v6 = 120;
      break;
    case 0xC4uLL:
      v4 = 0;
      v6 = 121;
      break;
    case 0xF9uLL:
      v4 = 0;
      v6 = 123;
      break;
    case 0xFAuLL:
      v4 = 0;
      v6 = 126;
      break;
    default:
      v6 = 0;
      v5 = 0;
      v4 = 1;
      break;
  }
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v4;
  return result;
}

id sub_21FAE7AC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingServer()
{
  return objc_opt_self();
}

void sub_21FAE7B60(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id))
{
  id v5;
  uint64_t v6;

  if (a2)
  {
    swift_getErrorValue();
    v5 = sub_21FBADCD8(v6);
  }
  else
  {
    v5 = 0;
  }
  a3(a1, v5);

}

void sub_21FAE7E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - v8;
  sub_21FA44968(a1, (uint64_t)&v14 - v8, (unint64_t *)&qword_25406AAC8, v6);
  v10 = sub_21FC5A98C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    v12 = (void *)sub_21FC5A920();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  if (a2)
    v13 = (void *)sub_21FC5A8D8();
  else
    v13 = 0;
  (*(void (**)(uint64_t, void *, void *))(a3 + 16))(a3, v12, v13);

}

uint64_t sub_21FAE7F80(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[5];

  v48 = a2;
  v52 = a1;
  sub_21FA95EA4();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAE8E98();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21FC5AAAC();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25406B7F8 != -1)
    swift_once();
  v16 = sub_21FC5AFD4();
  __swift_project_value_buffer(v16, (uint64_t)qword_25406D830);
  v17 = v2;
  v18 = sub_21FC5AFC8();
  v19 = sub_21FC5B994();
  if (os_log_type_enabled(v18, v19))
  {
    v45 = v12;
    v20 = swift_slowAlloc();
    v46 = v7;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    v44 = v22;
    v47 = v6;
    *(_DWORD *)v21 = 136315138;
    v54[0] = v22;
    v42[1] = v21 + 4;
    v43 = v21;
    v23 = *(id *)&v17[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    v24 = objc_msgSend(v23, sel_description);
    v25 = v17;
    v26 = v9;
    v27 = sub_21FC5B604();
    v29 = v28;

    v12 = v45;
    v30 = v27;
    v9 = v26;
    v17 = v25;
    v53 = sub_21FABDCF8(v30, v29, v54);
    v6 = v47;
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    v31 = v19;
    v32 = v43;
    _os_log_impl(&dword_21FA27000, v18, v31, "Submitting clinical sharing daily analytics on behalf of %s", v43, 0xCu);
    v33 = v44;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v33, -1, -1);
    v7 = v46;
    MEMORY[0x2207D105C](v32, -1, -1);

  }
  else
  {

  }
  v34 = __swift_project_boxed_opaque_existential_1(&v17[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(_QWORD *)&v17[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
  sub_21FA2CEA0(*v34 + 16, (uint64_t)v54);
  sub_21FC5AAA0();
  sub_21FAEB860(v54, (uint64_t)v12, (uint64_t)v15);
  v54[0] = sub_21FAEBAD4();
  sub_21FA95F24();
  v35 = MEMORY[0x24BDB9AF8];
  sub_21FA2A08C(&qword_25406B8F0, (uint64_t (*)(uint64_t))sub_21FA95F24, MEMORY[0x24BDB9AF8]);
  v36 = v49;
  sub_21FC5B2C8();
  swift_release();
  sub_21FA2A08C((unint64_t *)&unk_25406B830, (uint64_t (*)(uint64_t))sub_21FA95EA4, MEMORY[0x24BDB96C0]);
  v37 = v51;
  v38 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v37);
  v54[0] = v38;
  sub_21FAD45F0();
  sub_21FA2A08C((unint64_t *)&qword_25406B970, (uint64_t (*)(uint64_t))sub_21FAD45F0, v35);
  sub_21FC5B2A4();
  swift_release();
  v39 = swift_allocObject();
  v40 = v48;
  *(_QWORD *)(v39 + 16) = v52;
  *(_QWORD *)(v39 + 24) = v40;
  sub_21FA2A08C((unint64_t *)&unk_25406BC38, (uint64_t (*)(uint64_t))sub_21FAE8E98, MEMORY[0x24BDB9580]);
  swift_retain();
  sub_21FC5B2D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_21FC5B19C();
  swift_endAccess();
  swift_release();
  return sub_21FA326EC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
}

uint64_t sub_21FAE84F4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[6];

  v62 = a6;
  v63 = a3;
  v59 = a5;
  v56 = a1;
  sub_21FA95EA4();
  v55 = v9;
  v60 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAE8E98();
  v12 = v11;
  v61 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21FC5AAAC();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)((char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_25406B7F8 != -1)
    swift_once();
  v20 = sub_21FC5AFD4();
  __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
  v21 = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v22 = (char *)v21;
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B994();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v51 = v25;
    v27 = v26;
    v50 = swift_slowAlloc();
    v65[0] = v50;
    *(_DWORD *)v27 = 136315650;
    v28 = *(id *)&v22[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    v54 = v12;
    v29 = v28;
    v30 = objc_msgSend(v28, sel_description);
    v52 = v16;
    v31 = v30;
    v32 = sub_21FC5B604();
    v53 = a4;
    v33 = v32;
    v34 = a2;
    v36 = v35;

    v64 = sub_21FABDCF8(v33, v36, v65);
    sub_21FC5BAC0();

    a2 = v34;
    v37 = v63;
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain();
    v38 = v56;
    v64 = sub_21FABDCF8(v56, a2, v65);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 22) = 2080;
    a4 = v53;
    swift_bridgeObjectRetain();
    v64 = sub_21FABDCF8(v37, a4, v65);
    v12 = v54;
    v16 = v52;
    sub_21FC5BAC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21FA27000, v23, (os_log_type_t)v51, "Submitting clinical sharing onboarding analytics on behalf of %s: \"%s:%s\"", (uint8_t *)v27, 0x20u);
    v39 = v50;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v39, -1, -1);
    MEMORY[0x2207D105C](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v38 = v56;
  }
  v40 = __swift_project_boxed_opaque_existential_1(&v22[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(_QWORD *)&v22[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
  sub_21FA2CEA0(*v40 + 16, (uint64_t)v65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21FC5AAA0();
  sub_21FBE1D2C((uint64_t)v65, v38, a2, v63, a4, (uint64_t)v16, v19);
  v65[0] = sub_21FBE1EFC();
  sub_21FA95F24();
  v41 = MEMORY[0x24BDB9AF8];
  sub_21FA2A08C(&qword_25406B8F0, (uint64_t (*)(uint64_t))sub_21FA95F24, MEMORY[0x24BDB9AF8]);
  v42 = v58;
  sub_21FC5B2C8();
  swift_release();
  sub_21FA2A08C((unint64_t *)&unk_25406B830, (uint64_t (*)(uint64_t))sub_21FA95EA4, MEMORY[0x24BDB96C0]);
  v43 = v55;
  v44 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v43);
  v65[0] = v44;
  sub_21FAD45F0();
  sub_21FA2A08C((unint64_t *)&qword_25406B970, (uint64_t (*)(uint64_t))sub_21FAD45F0, v41);
  v45 = v57;
  sub_21FC5B2A4();
  swift_release();
  v46 = swift_allocObject();
  v47 = v62;
  *(_QWORD *)(v46 + 16) = v59;
  *(_QWORD *)(v46 + 24) = v47;
  sub_21FA2A08C((unint64_t *)&unk_25406BC38, (uint64_t (*)(uint64_t))sub_21FAE8E98, MEMORY[0x24BDB9580]);
  swift_retain();
  sub_21FC5B2D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v12);
  swift_beginAccess();
  sub_21FC5B19C();
  swift_endAccess();
  swift_release();
  return sub_21FA326EC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
}

void sub_21FAE8AF4(void **a1, void (*a2)(uint64_t, void *), uint64_t a3, const char *a4)
{
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;

  v6 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v7 = sub_21FC5AFD4();
  __swift_project_value_buffer(v7, (uint64_t)qword_25406D830);
  v8 = v6;
  v9 = v6;
  v10 = sub_21FC5AFC8();
  v11 = sub_21FC5B994();
  if (!os_log_type_enabled(v10, v11))
  {

    if (v6)
      goto LABEL_5;
LABEL_8:
    a2(1, 0);
    return;
  }
  v12 = (uint8_t *)swift_slowAlloc();
  v13 = swift_slowAlloc();
  v22 = v13;
  *(_DWORD *)v12 = 136315138;
  v14 = v6;
  sub_21FAE8F30();
  v15 = sub_21FC5B64C();
  sub_21FABDCF8(v15, v16, &v22);
  sub_21FC5BAC0();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_21FA27000, v10, v11, a4, v12, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2207D105C](v13, -1, -1);
  MEMORY[0x2207D105C](v12, -1, -1);

  if (!v6)
    goto LABEL_8;
LABEL_5:
  v22 = (uint64_t)v6;
  v17 = v6;
  v18 = v6;
  sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
  v19 = sub_21FC5BDE4();
  if (v19)
  {
    v20 = (void *)v19;

  }
  else
  {
    v20 = (void *)swift_allocError();
    *v21 = v22;
  }
  a2(0, v20);

}

uint64_t sub_21FAE8E6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_21FAE8E90(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FBC498C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_21FAE8E98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BC48)
  {
    sub_21FAD45F0();
    sub_21FA2A08C((unint64_t *)&qword_25406B970, (uint64_t (*)(uint64_t))sub_21FAD45F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_21FC5B028();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BC48);
  }
}

void sub_21FAE8F10(void **a1)
{
  uint64_t v1;

  sub_21FAE8AF4(a1, *(void (**)(uint64_t, void *))(v1 + 16), *(_QWORD *)(v1 + 24), "Finished submitting clinical sharing onboarding analytics: %s");
}

void sub_21FAE8F30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406B8D0)
  {
    sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    v0 = sub_21FC5B16C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406B8D0);
  }
}

void sub_21FAE8F9C(void **a1)
{
  uint64_t v1;

  sub_21FAE8AF4(a1, *(void (**)(uint64_t, void *))(v1 + 16), *(_QWORD *)(v1 + 24), "Finished submitting clinical sharing daily analytics: %s");
}

void sub_21FAE8FBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v40 = a1;
  v41 = a2;
  v8 = sub_21FC5AAAC();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - v14;
  sub_21FA44968(a3, (uint64_t)&v35 - v14, (unint64_t *)&qword_25406AAE8, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v8) == 1)
  {
    _Block_copy(a5);
    v16 = 0;
    v17 = 0xE000000000000000;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v8);
    v42 = 0x2065746164202CLL;
    v43 = 0xE700000000000000;
    _Block_copy(a5);
    sub_21FA2A08C(&qword_255540840, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    sub_21FC5BDCC();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    v16 = v42;
    v17 = v43;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  }
  if (qword_25406B7F8 != -1)
    swift_once();
  v18 = sub_21FC5AFD4();
  __swift_project_value_buffer(v18, (uint64_t)qword_25406D830);
  v19 = a4;
  swift_bridgeObjectRetain();
  v20 = sub_21FC5AFC8();
  v21 = sub_21FC5B994();
  if (os_log_type_enabled(v20, (os_log_type_t)v21))
  {
    v36 = v16;
    v38 = v21;
    v39 = a3;
    v22 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v42 = v37;
    *(_DWORD *)v22 = 136315906;
    v23 = sub_21FACFFF4(&unk_24E480998, v40);
    v25 = v24;
    sub_21FAD0254(0, &qword_25406BAC0, type metadata accessor for HKClinicalSharingOptions);
    swift_arrayDestroy();
    v44 = sub_21FABDCF8(v23, v25, &v42);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    v26 = 0xED00006E6F697461;
    v27 = 0x7A69726F68747561;
    switch(v41)
    {
      case 1:
        break;
      case 2:
        v26 = 0xE800000000000000;
        v27 = 0x617461642D77656ELL;
        break;
      case 3:
        v26 = 0xEA0000000000646ELL;
        v27 = 0x756F72676B636162;
        break;
      case 4:
        v26 = 0xE700000000000000;
        v27 = 0x676E6974736574;
        break;
      case 5:
        v26 = 0xEE00646574616974;
        v27 = 0x696E692D72657375;
        break;
      case 6:
        v26 = 0x800000021FC75C40;
        v27 = 0xD000000000000010;
        break;
      default:
        v26 = 0xE700000000000000;
        v27 = 0x6E776F6E6B6E75;
        break;
    }
    v44 = sub_21FABDCF8(v27, v26, &v42);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    swift_bridgeObjectRetain();
    v44 = sub_21FABDCF8(v36, v17, &v42);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 32) = 2080;
    v28 = *(id *)&v19[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    v29 = objc_msgSend(v28, sel_description);
    v30 = sub_21FC5B604();
    v32 = v31;

    v44 = sub_21FABDCF8(v30, v32, &v42);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v20, (os_log_type_t)v38, "Sharing health data with options %s, reason \"%s\"%s on behalf of %s", (uint8_t *)v22, 0x2Au);
    v33 = v37;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v33, -1, -1);
    MEMORY[0x2207D105C](v22, -1, -1);

    a3 = v39;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v34 = *(_QWORD **)(*__swift_project_boxed_opaque_existential_1(&v19[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(_QWORD *)&v19[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider+ 24])+ 56);
  _Block_copy(a5);
  swift_retain();
  sub_21FC4A9F8(v40, v41, a3, v34, (void (**)(_QWORD, _QWORD, _QWORD))a5);
  _Block_release(a5);
  swift_release();
  _Block_release(a5);
}

uint64_t sub_21FAE9578(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_25406B7F8 != -1)
    swift_once();
  v6 = sub_21FC5AFD4();
  __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
  v7 = a2;
  v8 = sub_21FC5AFC8();
  v9 = sub_21FC5B994();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v24 = v11;
    *(_DWORD *)v10 = 136315394;
    v12 = a1 - 1;
    v23 = a3;
    v22 = v11;
    v13 = 0xED00006E6F697461;
    v14 = 0x7A69726F68747561;
    switch(v12)
    {
      case 0:
        break;
      case 1:
        v13 = 0xE800000000000000;
        v14 = 0x617461642D77656ELL;
        break;
      case 2:
        v13 = 0xEA0000000000646ELL;
        v14 = 0x756F72676B636162;
        break;
      case 3:
        v13 = 0xE700000000000000;
        v14 = 0x676E6974736574;
        break;
      case 4:
        v13 = 0xEE00646574616974;
        v14 = 0x696E692D72657375;
        break;
      case 5:
        v13 = 0x800000021FC75C40;
        v14 = 0xD000000000000010;
        break;
      default:
        v13 = 0xE700000000000000;
        v14 = 0x6E776F6E6B6E75;
        break;
    }
    sub_21FABDCF8(v14, v13, &v24);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    v15 = *(id *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    v16 = objc_msgSend(v15, sel_description);
    v17 = sub_21FC5B604();
    v19 = v18;

    sub_21FABDCF8(v17, v19, &v24);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v8, v9, "Scheduling health data share with reason \"%s\" on behalf of %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v22, -1, -1);
    MEMORY[0x2207D105C](v10, -1, -1);

    a3 = v23;
  }
  else
  {

  }
  v20 = __swift_project_boxed_opaque_existential_1(&v7[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(_QWORD *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
  v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v20 + 56) + 56) + 136);
  MEMORY[0x24BDAC7A8](v20);
  sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
  sub_21FAA6830();
  swift_retain();
  sub_21FC5ACBC();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a3 + 16))(a3, 1, 0);
}

uint64_t sub_21FAE9958(uint64_t a1, uint64_t a2, char *a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  id v15;
  unsigned int v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v49 = a1;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v45[-v11];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a4;
  v14 = *(void **)&a3[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
  _Block_copy(a4);
  v15 = objc_msgSend(v14, sel_process);
  v16 = objc_msgSend(v15, sel_hasEntitlement_, *MEMORY[0x24BDD2B00]);

  if (v16)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v17 = sub_21FC5AFD4();
    __swift_project_value_buffer(v17, (uint64_t)qword_25406D830);
    v18 = a3;
    v19 = sub_21FC5AFC8();
    v20 = sub_21FC5B994();
    v21 = v20;
    v22 = os_log_type_enabled(v19, v20);
    v23 = v49;
    if (v22)
    {
      v24 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v51 = v47;
      *(_DWORD *)v24 = 136315394;
      v46 = v21;
      v25 = sub_21FACFFF4(&unk_24E4809D0, v23);
      v48 = a2;
      v26 = v25;
      v28 = v27;
      sub_21FAD0254(0, (unint64_t *)&qword_255541770, type metadata accessor for HKClinicalSharingQueryDiagnosticOptions);
      swift_arrayDestroy();
      v50 = sub_21FABDCF8(v26, v28, &v51);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v29 = v14;
      v30 = objc_msgSend(v29, sel_description);
      v31 = sub_21FC5B604();
      v33 = v32;

      a2 = v48;
      v23 = v49;
      v50 = sub_21FABDCF8(v31, v33, &v51);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v19, (os_log_type_t)v46, "Gathering query diagnostics with options %s on behalf of %s", (uint8_t *)v24, 0x16u);
      v34 = v47;
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v34, -1, -1);
      MEMORY[0x2207D105C](v24, -1, -1);

    }
    else
    {

    }
    __swift_project_boxed_opaque_existential_1(&v18[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(_QWORD *)&v18[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = sub_21FAE9EB4;
    *(_QWORD *)(v43 + 24) = v13;
    swift_retain();
    swift_retain();
    sub_21FC48984(v23, a2, (uint64_t)sub_21FAE9EE0, v43);
    swift_release();
    swift_release();
  }
  else
  {
    v35 = sub_21FC5A98C();
    v36 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
    v37 = *(_QWORD *)(v35 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v12, 1, 1, v35);
    v38 = (void *)objc_opt_self();
    v51 = 0;
    v52 = 0xE000000000000000;
    sub_21FC5BB74();
    swift_bridgeObjectRelease();
    v51 = 0x20676E697373694DLL;
    v52 = 0xE800000000000000;
    sub_21FC5B604();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    sub_21FC5B6AC();
    v39 = (void *)sub_21FC5B5E0();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend(v38, sel_hk_error_description_, 4, v39);

    sub_21FA44968((uint64_t)v12, (uint64_t)v10, (unint64_t *)&qword_25406AAC8, v36);
    v41 = 0;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v10, 1, v35) != 1)
    {
      v41 = (void *)sub_21FC5A920();
      (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v10, v35);
    }
    v42 = (void *)sub_21FC5A8D8();
    ((void (**)(_QWORD, void *, void *))a4)[2](a4, v41, v42);

    sub_21FA2D1F8((uint64_t)v12, (unint64_t *)&qword_25406AAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  }
  return swift_release();
}

void sub_21FAE9EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FAE7E68(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_21FAE9EBC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21FAE9EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FAE7B60(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

void sub_21FAE9EE8()
{
  uint64_t v0;

  sub_21FBB5BD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 32));
}

id sub_21FAE9F08(void *a1)
{
  objc_class *v2;
  char *v3;
  id v4;
  objc_super v6;

  v2 = (objc_class *)type metadata accessor for HealthRecordsIngestionServiceServer();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon35HealthRecordsIngestionServiceServer_cancellables] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon35HealthRecordsIngestionServiceServer_client] = a1;
  v6.receiver = v3;
  v6.super_class = v2;
  v4 = a1;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_21FAE9F90()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IngestionServiceDaemonPlugin()
{
  return objc_opt_self();
}

uint64_t sub_21FAE9FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  id v6;

  sub_21FAEA068();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21FC5EE30;
  v1 = sub_21FC5B604();
  v3 = v2;
  v4 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  v5 = objc_allocWithZone(v4);
  v6 = sub_21FA2EF8C(v1, v3, 0, 0, (uint64_t)sub_21FAE9F08, 0);
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = &off_24E4838E0;
  *(_QWORD *)(v0 + 32) = v6;
  return v0;
}

void sub_21FAEA068()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BB28)
  {
    sub_21FA7B7DC();
    v0 = sub_21FC5BDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BB28);
  }
}

uint64_t sub_21FAEA0BC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33[2];

  v2 = v1;
  v32 = a1;
  v33[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = MEMORY[0x24BEE1768];
  sub_21FA9B05C(0, &qword_25406BDC8, MEMORY[0x24BEE1768], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9DA0]);
  v5 = v4;
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - v6;
  sub_21FA5D6C0(0, &qword_25406BDD0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  sub_21FA9B05C(0, &qword_25406BE60, v3, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v30 - v16;
  v33[0] = 0;
  v18 = objc_msgSend(v2, sel_dateOfBirthComponentsWithError_, v33);
  if (v18)
  {
    v19 = v18;
    v20 = v33[0];
    v21 = (void *)sub_21FC5AA64();
    v22 = objc_msgSend(v19, sel_hk_ageWithCurrentDate_, v21);

    v33[0] = v22;
    v23 = MEMORY[0x24BEE1768];
    sub_21FC5B22C();
    sub_21FA2CDB4();
    sub_21FC5B208();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_21FAEA6D8(&qword_25406BE58, &qword_25406BE60, v23);
    v24 = sub_21FC5B280();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    v25 = v33[0];
    v26 = (void *)sub_21FC5A8E4();

    swift_willThrow();
    v33[0] = v26;
    v27 = v26;
    sub_21FA2CDB4();
    v28 = MEMORY[0x24BEE1768];
    sub_21FC5B1F0();
    sub_21FAEA720((unint64_t *)&unk_255541780, &qword_25406BDC8, v28);
    v24 = sub_21FC5B280();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
  }
  return v24;
}

uint64_t sub_21FAEA394()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  id v32[4];

  v1 = v0;
  v32[3] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEE0D00];
  sub_21FA9B05C(0, &qword_25406BDC0, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9DA0]);
  v4 = v3;
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v30 - v5;
  sub_21FA5D6C0(0, &qword_25406B988);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  sub_21FA9B05C(0, &qword_25406BB70, v2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v32[0] = 0;
  v17 = objc_msgSend(v1, sel_biologicalSexWithError_, v32);
  if (v17)
  {
    v18 = v17;
    v19 = v32[0];
    v20 = objc_msgSend(v18, sel_biologicalSex);

    v21 = (void *)0xE700000000000000;
    v22 = 0x74657320746F6ELL;
    switch((unint64_t)v20)
    {
      case 0uLL:
        break;
      case 1uLL:
        v21 = (void *)0xE600000000000000;
        v22 = 0x656C616D6566;
        break;
      case 2uLL:
        v21 = (void *)0xE400000000000000;
        v22 = 1701601645;
        break;
      case 3uLL:
        v21 = (void *)0xE500000000000000;
        v22 = 0x726568746FLL;
        break;
      default:
        v21 = (void *)0xE200000000000000;
        v22 = 24942;
        break;
    }
    v32[0] = (id)v22;
    v32[1] = v21;
    v28 = MEMORY[0x24BEE0D00];
    sub_21FC5B22C();
    sub_21FA2CDB4();
    sub_21FC5B208();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_21FAEA6D8(&qword_25406BB68, &qword_25406BB70, v28);
    v27 = sub_21FC5B280();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v23 = v32[0];
    v24 = (void *)sub_21FC5A8E4();

    swift_willThrow();
    v32[0] = v24;
    v25 = v24;
    sub_21FA2CDB4();
    v26 = MEMORY[0x24BEE0D00];
    sub_21FC5B1F0();
    sub_21FAEA720(&qword_255541778, &qword_25406BDC0, v26);
    v27 = sub_21FC5B280();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  }
  return v27;
}

uint64_t sub_21FAEA6D8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_21FA9B05C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDBA1D0], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FAEA720(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_21FA9B05C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9DA0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9DB0], v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_21FAEA768()
{
  char *v0;
  uint64_t v1;
  objc_super v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_lock;
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_lock];
  sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
  sub_21FAA6830();
  sub_21FC5ACBC();
  MEMORY[0x2207D105C](*(_QWORD *)&v0[v1], -1, -1);
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ClinicalSharingSyncObserverServer();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_21FAEA91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __int128 v17;
  __int128 v18;
  void (*v19)(void *);
  _QWORD *v20;
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;

  v11 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client), sel_connection);
  if (v11)
  {
    v12 = v11;
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a1;
    v13[3] = a2;
    v13[4] = a3;
    v13[5] = a4;
    v13[6] = a5;
    v19 = sub_21FAEB834;
    v20 = v13;
    *(_QWORD *)&v17 = MEMORY[0x24BDAC760];
    *((_QWORD *)&v17 + 1) = 1107296256;
    *(_QWORD *)&v18 = sub_21FAEB638;
    *((_QWORD *)&v18 + 1) = &block_descriptor_10;
    v14 = _Block_copy(&v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    v15 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v14);
    _Block_release(v14);
    sub_21FC5BAF0();

    swift_unknownObjectRelease();
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_21FAAF8D8((uint64_t)&v17, (uint64_t)v22);
  if (v23)
  {
    sub_21FAEB7B4();
    if (swift_dynamicCast())
      return v21;
    else
      return 0;
  }
  else
  {
    sub_21FA2DA9C((uint64_t)v22);
    return 0;
  }
}

uint64_t sub_21FAEAAB4()
{
  sub_21FAEB6A4();
  sub_21FA2A08C(&qword_255541838, (uint64_t (*)(uint64_t))sub_21FAEB6A4, MEMORY[0x24BDB9D10]);
  sub_21FC5B2F8();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_21FAEB734();
  sub_21FA2A08C((unint64_t *)&unk_255541848, (uint64_t (*)(uint64_t))sub_21FAEB734, MEMORY[0x24BDB97C8]);
  sub_21FC5B37C();
  swift_release();
  swift_release();
  sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
  sub_21FAA6830();
  sub_21FC5ACBC();
  return swift_release();
}

void sub_21FAEAC08(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(void **)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x2207D10F8](v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_21FAEAD2C(v2, v3);

  }
}

uint64_t sub_21FAEAC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable))
  {
    swift_retain();
    sub_21FC5B1A8();
    swift_release();
  }
  *(_QWORD *)(a1 + v4) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_21FAEACD4(uint64_t a1)
{
  uint64_t v2;

  v2 = OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable))
  {
    swift_retain();
    sub_21FC5B1A8();
    swift_release();
  }
  *(_QWORD *)(a1 + v2) = 0;
  return swift_release();
}

void sub_21FAEAD2C(void *a1, char a2)
{
  void *v2;
  uint64_t v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  id v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  NSObject *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  unsigned __int8 v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  _QWORD *v46;
  os_log_t log;
  NSObject *loga;
  id v49[3];

  v5 = sub_21FAEA91C(0xD000000000000015, 0x800000021FC774F0, 0xD000000000000092, 0x800000021FC77510, 63);
  if (v5)
  {
    v6 = v5;
    if (a2)
    {
      if (a2 != 1)
      {
        swift_unknownObjectRelease();
        return;
      }
      if (a1)
      {
        sub_21FAEB688(a1, 1u);
        v7 = a1;
        if (qword_25406B7F8 != -1)
          swift_once();
        v8 = sub_21FC5AFD4();
        __swift_project_value_buffer(v8, (uint64_t)qword_25406D830);
        sub_21FAEB688(a1, 1u);
        v9 = v2;
        sub_21FAEB688(a1, 1u);
        v10 = (char *)v9;
        v11 = sub_21FC5AFC8();
        v12 = sub_21FC5B994();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = swift_slowAlloc();
          v14 = (_QWORD *)swift_slowAlloc();
          v45 = (void *)swift_slowAlloc();
          v49[0] = v45;
          *(_DWORD *)v13 = 138412546;
          log = v6;
          v15 = *(void **)&v10[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client];
          v16 = v15;
          sub_21FC5BAC0();
          *v14 = v15;

          *(_WORD *)(v13 + 12) = 2080;
          v17 = a1;
          sub_21FA2CDB4();
          v18 = sub_21FC5B64C();
          sub_21FABDCF8(v18, v19, (uint64_t *)v49);
          v6 = log;
          sub_21FC5BAC0();
          swift_bridgeObjectRelease();
          sub_21FAEB61C(a1, 1u);
          sub_21FAEB61C(a1, 1u);
          _os_log_impl(&dword_21FA27000, v11, v12, "Delivering sync did finish to %@: %s", (uint8_t *)v13, 0x16u);
          sub_21FA2D1A0(0, (unint64_t *)&qword_25406BE28, (uint64_t (*)(uint64_t))sub_21FAC7C7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          swift_arrayDestroy();
          MEMORY[0x2207D105C](v14, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x2207D105C](v45, -1, -1);
          MEMORY[0x2207D105C](v13, -1, -1);

          sub_21FAEB61C(a1, 1u);
        }
        else
        {
          sub_21FAEB61C(a1, 1u);

          sub_21FAEB61C(a1, 1u);
          sub_21FAEB61C(a1, 1u);

        }
        swift_getErrorValue();
        v41 = v49[2];
        v42 = a1;
        v43 = sub_21FBADCD8((uint64_t)v41);
        sub_21FAEB61C(a1, 1u);
        v44 = (void *)sub_21FC5A8D8();

      }
      else
      {
        if (qword_25406B7F8 != -1)
          swift_once();
        v34 = sub_21FC5AFD4();
        __swift_project_value_buffer(v34, (uint64_t)qword_25406D830);
        v35 = v2;
        v36 = sub_21FC5AFC8();
        v37 = sub_21FC5B994();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          v39 = (id *)swift_slowAlloc();
          *(_DWORD *)v38 = 138412290;
          v49[0] = *(id *)&v35[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client];
          v40 = v49[0];
          sub_21FC5BAC0();
          *v39 = v49[0];

          _os_log_impl(&dword_21FA27000, v36, v37, "Delivering sync did finish to %@", v38, 0xCu);
          sub_21FA2D1A0(0, (unint64_t *)&qword_25406BE28, (uint64_t (*)(uint64_t))sub_21FAC7C7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          swift_arrayDestroy();
          MEMORY[0x2207D105C](v39, -1, -1);
          MEMORY[0x2207D105C](v38, -1, -1);

        }
        else
        {

        }
        v44 = 0;
      }
      -[NSObject client_syncDidFinishWithError:](v6, sel_client_syncDidFinishWithError_, v44, v45);
      swift_unknownObjectRelease();

      v32 = a1;
      v33 = 1;
    }
    else
    {
      v20 = qword_25406B7F8;
      v21 = a1;
      if (v20 != -1)
        swift_once();
      v22 = sub_21FC5AFD4();
      __swift_project_value_buffer(v22, (uint64_t)qword_25406D830);
      sub_21FAEB688(a1, 0);
      v23 = v2;
      sub_21FAEB688(a1, 0);
      v24 = (char *)v23;
      v25 = sub_21FC5AFC8();
      v26 = sub_21FC5B994();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v46 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v27 = 138412546;
        loga = v25;
        v28 = v6;
        v29 = *(void **)&v24[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client];
        v30 = v29;
        sub_21FC5BAC0();
        *v46 = v29;
        v6 = v28;

        *(_WORD *)(v27 + 12) = 2112;
        v49[0] = v21;
        v31 = v21;
        sub_21FC5BAC0();
        v46[1] = a1;
        sub_21FAEB61C(a1, 0);
        sub_21FAEB61C(a1, 0);
        v25 = loga;
        _os_log_impl(&dword_21FA27000, loga, v26, "Delivering sync did start to %@: %@", (uint8_t *)v27, 0x16u);
        sub_21FA2D1A0(0, (unint64_t *)&qword_25406BE28, (uint64_t (*)(uint64_t))sub_21FAC7C7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v46, -1, -1);
        MEMORY[0x2207D105C](v27, -1, -1);
      }
      else
      {

        sub_21FAEB61C(a1, 0);
        sub_21FAEB61C(a1, 0);
      }

      -[NSObject client_syncDidStartWithInfo:](v6, sel_client_syncDidStartWithInfo_, v21);
      swift_unknownObjectRelease();
      v32 = a1;
      v33 = 0;
    }
    sub_21FAEB61C(v32, v33);
  }
}

uint64_t type metadata accessor for ClinicalSharingSyncObserverServer()
{
  return objc_opt_self();
}

uint64_t sub_21FAEB614()
{
  uint64_t v0;

  return sub_21FAEACD4(*(_QWORD *)(v0 + 16));
}

void sub_21FAEB61C(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

void sub_21FAEB638(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

id sub_21FAEB688(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void sub_21FAEB6A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406CAA0)
  {
    v0 = sub_21FC5B1CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406CAA0);
  }
}

uint64_t sub_21FAEB708()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_21FAEB72C(uint64_t a1)
{
  uint64_t v1;

  sub_21FAEAC08(a1, v1);
}

void sub_21FAEB734()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255541840)
  {
    sub_21FAEB6A4();
    sub_21FA2A08C(&qword_255541838, (uint64_t (*)(uint64_t))sub_21FAEB6A4, MEMORY[0x24BDB9D10]);
    v0 = sub_21FC5B0D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255541840);
  }
}

uint64_t sub_21FAEB7AC()
{
  uint64_t v0;

  return sub_21FAEAC74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_21FAEB7B4()
{
  unint64_t result;

  result = qword_255541858;
  if (!qword_255541858)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255541858);
  }
  return result;
}

uint64_t sub_21FAEB808()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21FAEB834(void *a1)
{
  uint64_t v1;

  sub_21FBBEB20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_21FAEB860@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a2;
  v34 = a3;
  v5 = sub_21FC5AAF4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2CEA0((uint64_t)a1, (uint64_t)v11);
  v12 = &v11[v9[5]];
  v13 = sub_21FC5AAAC();
  v33 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v12, a2, v13);
  v14 = (void *)*__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  v16 = v14;
  v17 = (void *)sub_21FC5B5E0();
  v18 = objc_msgSend(v15, sel_initWithCategory_domainName_healthStore_, 3, v17, v16);

  *(_QWORD *)&v11[v9[6]] = v18;
  v11[v9[7]] = HKImproveHealthAndActivityAnalyticsAllowed();
  v35 = (uint64_t)v9;
  sub_21FAEFCC0();
  v35 = sub_21FC5B64C();
  v36 = v19;
  sub_21FC5B6AC();
  sub_21FC5AAE8();
  sub_21FC5AAB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20 = sub_21FA94BEC(8);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_bridgeObjectRelease();
  MEMORY[0x2207D0054](v20, v22, v24, v26);
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  v27 = v35;
  v28 = v36;
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v13);
  v29 = &v11[v9[8]];
  *(_QWORD *)v29 = v27;
  *((_QWORD *)v29 + 1) = v28;
  sub_21FA2D23C((uint64_t)v11, v34, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_21FAEBAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57[3];
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83[2];

  v1 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BEE1328];
  sub_21FAEF74C(0, &qword_25406BC98, (unint64_t *)&qword_25406B980, MEMORY[0x24BEE1328], (void (*)(void))sub_21FAEC350);
  v60 = v6;
  v62 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v58 = (char *)v57 - v7;
  sub_21FAEC3B0();
  v63 = v8;
  v65 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEC538(0);
  v66 = v10;
  v68 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEC618(0);
  v69 = v12;
  v71 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v64 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEC650(0);
  v72 = v14;
  v74 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v67 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEC554(0, &qword_25406BD88, v16, (void (*)(void))sub_21FAEC688);
  v75 = v17;
  v77 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v70 = (char *)v57 - v18;
  sub_21FAEC6A4();
  v76 = v19;
  v78 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v73 = (char *)v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v0;
  sub_21FA2CEA0(v0, (uint64_t)v83);
  v21 = swift_allocObject();
  sub_21FA3175C(v83, v21 + 16);
  sub_21FA5D3F8(0, (unint64_t *)&qword_25406B9C8, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  *(_QWORD *)&v83[0] = sub_21FC5B25C();
  sub_21FAEED80();
  v22 = sub_21FC5B280();
  swift_release();
  *(_QWORD *)&v83[0] = v22;
  v23 = MEMORY[0x24BDB9AE0];
  sub_21FA5D3F8(0, (unint64_t *)&qword_25406B980, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEC350();
  sub_21FC5B2C8();
  swift_release();
  sub_21FAEEDE0(v0, (uint64_t)v4);
  v24 = *(unsigned __int8 *)(v2 + 80);
  v25 = (v24 + 16) & ~v24;
  v81 = v25;
  v82 = v24 | 7;
  v79 = v25 + v3;
  v26 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v4, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_21FC5B184();
  sub_21FA5D3F8(0, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v23);
  v57[2] = v27;
  sub_21FAEC4D0();
  v28 = sub_21FAEC470();
  v29 = v59;
  v30 = v60;
  v31 = v28;
  v32 = v58;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v32, v30);
  v33 = v80;
  sub_21FAEEDE0(v80, (uint64_t)v4);
  v34 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v4, v34 + v81, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_21FC5B184();
  sub_21FAEC5FC();
  v35 = v61;
  v36 = v63;
  v57[1] = v31;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v29, v36);
  v37 = (uint64_t)v4;
  v57[0] = (uint64_t)v4;
  sub_21FAEEDE0(v33, (uint64_t)v4);
  v38 = swift_allocObject();
  v39 = v81;
  sub_21FA2D23C(v37, v38 + v81, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_21FC5B184();
  sub_21FAEC634();
  v40 = v64;
  v41 = v66;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v41);
  v42 = v80;
  v43 = v57[0];
  sub_21FAEEDE0(v80, v57[0]);
  v44 = swift_allocObject();
  sub_21FA2D23C(v43, v44 + v39, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_21FC5B184();
  sub_21FAEC66C();
  v45 = v67;
  v46 = v69;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v40, v46);
  sub_21FAEEDE0(v42, v43);
  v47 = swift_allocObject();
  v48 = v81;
  sub_21FA2D23C(v43, v47 + v81, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_21FC5B184();
  sub_21FAEC688();
  v49 = v70;
  v50 = v72;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v50);
  sub_21FAEEDE0(v80, v43);
  v51 = swift_allocObject();
  sub_21FA2D23C(v43, v51 + v48, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_21FA50724(0, &qword_25406AE10);
  sub_21FAEC744();
  v52 = v73;
  v53 = v75;
  sub_21FC5B2C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v53);
  sub_21FA2A08C(&qword_25406BCC0, (uint64_t (*)(uint64_t))sub_21FAEC6A4, MEMORY[0x24BDB96C0]);
  v54 = v76;
  v55 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v54);
  return v55;
}

uint64_t type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask()
{
  uint64_t result;

  result = qword_25406B758;
  if (!qword_25406B758)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21FAEC350()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406B970;
  if (!qword_25406B970)
  {
    sub_21FA5D3F8(255, (unint64_t *)&qword_25406B980, MEMORY[0x24BEE1328], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25406B970);
  }
  return result;
}

void sub_21FAEC3B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BD48)
  {
    sub_21FA5D3F8(255, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FAEF74C(255, &qword_25406BC98, (unint64_t *)&qword_25406B980, MEMORY[0x24BEE1328], (void (*)(void))sub_21FAEC350);
    sub_21FAEC470();
    sub_21FAEC4D0();
    v0 = sub_21FC5B100();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BD48);
  }
}

unint64_t sub_21FAEC470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406BDA0;
  if (!qword_25406BDA0)
  {
    sub_21FA5D3F8(255, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25406BDA0);
  }
  return result;
}

unint64_t sub_21FAEC4D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406BC90;
  if (!qword_25406BC90)
  {
    sub_21FAEF74C(255, &qword_25406BC98, (unint64_t *)&qword_25406B980, MEMORY[0x24BEE1328], (void (*)(void))sub_21FAEC350);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25406BC90);
  }
  return result;
}

void sub_21FAEC538(uint64_t a1)
{
  sub_21FAEC554(a1, &qword_25406BD58, (void (*)(uint64_t))sub_21FAEC3B0, (void (*)(void))sub_21FAEC5FC);
}

void sub_21FAEC554(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_21FA5D3F8(255, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a3(255);
    sub_21FAEC470();
    a4();
    v7 = sub_21FC5B100();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_21FAEC5FC()
{
  return sub_21FA2A08C(&qword_25406BD40, (uint64_t (*)(uint64_t))sub_21FAEC3B0, MEMORY[0x24BDB98F0]);
}

void sub_21FAEC618(uint64_t a1)
{
  sub_21FAEC554(a1, &qword_25406BD68, sub_21FAEC538, (void (*)(void))sub_21FAEC634);
}

uint64_t sub_21FAEC634()
{
  return sub_21FA2A08C(&qword_25406BD50, (uint64_t (*)(uint64_t))sub_21FAEC538, MEMORY[0x24BDB98F0]);
}

void sub_21FAEC650(uint64_t a1)
{
  sub_21FAEC554(a1, &qword_25406BD78, sub_21FAEC618, (void (*)(void))sub_21FAEC66C);
}

uint64_t sub_21FAEC66C()
{
  return sub_21FA2A08C(&qword_25406BD60, (uint64_t (*)(uint64_t))sub_21FAEC618, MEMORY[0x24BDB98F0]);
}

uint64_t sub_21FAEC688()
{
  return sub_21FA2A08C(&qword_25406BD70, (uint64_t (*)(uint64_t))sub_21FAEC650, MEMORY[0x24BDB98F0]);
}

void sub_21FAEC6A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BCC8)
  {
    sub_21FAEC554(255, &qword_25406BD88, sub_21FAEC650, (void (*)(void))sub_21FAEC688);
    sub_21FA50724(255, &qword_25406AE10);
    sub_21FAEC744();
    v0 = sub_21FC5B064();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BCC8);
  }
}

unint64_t sub_21FAEC744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406BD80;
  if (!qword_25406BD80)
  {
    sub_21FAEC554(255, &qword_25406BD88, sub_21FAEC650, (void (*)(void))sub_21FAEC688);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB98F0], v1);
    atomic_store(result, (unint64_t *)&qword_25406BD80);
  }
  return result;
}

double sub_21FAEC7A4@<D0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_BYTE *)a2 = *a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_21FAEC7C8@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  void *v33;
  void *v34;
  uint64_t (*v35)(void);
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  _QWORD *v44;
  uint64_t (*v45)(void);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  char *v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[5];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  sub_21FA50814();
  v64 = v6;
  v63 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEF9FC();
  v9 = v8;
  v70 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v68 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEF630(0, &qword_25406BD18, v11, (void (*)(void))sub_21FAEFADC);
  v13 = v12;
  v71 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v69 = (char *)&v58 - v14;
  v15 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v65 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v66 = v17;
  v67 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v58 - v18;
  v20 = a1[1];
  v74 = *a1;
  v75 = v20;
  v21 = a1[3];
  v76 = a1[2];
  v77 = v21;
  if (qword_25406B7F8 != -1)
    swift_once();
  v22 = sub_21FC5AFD4();
  __swift_project_value_buffer(v22, (uint64_t)qword_25406D830);
  sub_21FAEEDE0((uint64_t)a2, (uint64_t)v19);
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B970();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v60 = v9;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc();
    v61 = a3;
    *(_DWORD *)v26 = 136315138;
    v73[0] = v27;
    v28 = (uint64_t *)&v19[*(int *)(v15 + 32)];
    v59 = a2;
    v29 = v13;
    v30 = *v28;
    v31 = v28[1];
    swift_bridgeObjectRetain();
    v72 = sub_21FABDCF8(v30, v31, v73);
    a3 = v61;
    sub_21FC5BAC0();
    v13 = v29;
    a2 = v59;
    swift_bridgeObjectRelease();
    sub_21FAEEFC8((uint64_t)v19);
    _os_log_impl(&dword_21FA27000, v23, v24, "%s Retrieving HKClinicalAccount list", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v27, -1, -1);
    v32 = v26;
    v9 = v60;
    MEMORY[0x2207D105C](v32, -1, -1);
  }
  else
  {
    sub_21FAEEFC8((uint64_t)v19);
  }

  v33 = (void *)__swift_project_boxed_opaque_existential_1(a2, a2[3])[2];
  v73[3] = (uint64_t)&type metadata for ClinicalSharingAccountStore;
  v73[4] = (uint64_t)&off_24E484B78;
  v73[0] = (uint64_t)v33;
  v34 = (void *)*__swift_project_boxed_opaque_existential_1(v73, (uint64_t)&type metadata for ClinicalSharingAccountStore);
  *(_QWORD *)(swift_allocObject() + 16) = v34;
  v35 = MEMORY[0x24BDB9E38];
  sub_21FAEF97C(0, (unint64_t *)&qword_25406B9B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_21FAEFA9C((unint64_t *)&qword_25406B9B0, (unint64_t *)&qword_25406B9B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v35, MEMORY[0x24BDB9E58]);
  v36 = v33;
  v37 = v34;
  v38 = v62;
  sub_21FC5B268();
  sub_21FA2A08C(&qword_25406B9D0, (uint64_t (*)(uint64_t))sub_21FA50814, MEMORY[0x24BDB9E90]);
  v39 = v64;
  v40 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v39);
  v72 = v40;
  v41 = (_OWORD *)swift_allocObject();
  v42 = v75;
  v41[1] = v74;
  v41[2] = v42;
  v43 = v77;
  v41[3] = v76;
  v41[4] = v43;
  sub_21FAEF198((uint64_t)&v74);
  v44 = a2;
  v45 = MEMORY[0x24BDB9AE0];
  sub_21FAEF97C(0, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEFA9C((unint64_t *)&qword_25406B960, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v45, MEMORY[0x24BDB9AF8]);
  v46 = v68;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  v47 = (uint64_t)v44;
  v48 = v67;
  sub_21FAEEDE0(v47, v67);
  v49 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v50 = (v66 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = swift_allocObject();
  sub_21FA2D23C(v48, v51 + v49, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  v52 = (_OWORD *)(v51 + v50);
  v53 = v75;
  *v52 = v74;
  v52[1] = v53;
  v54 = v77;
  v52[2] = v76;
  v52[3] = v54;
  sub_21FAEF198((uint64_t)&v74);
  sub_21FA5D3F8(0, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v45);
  sub_21FAEFADC();
  sub_21FAEC470();
  v55 = v69;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v9);
  sub_21FAEF70C(&qword_25406BD10, &qword_25406BD18, (void (*)(uint64_t))sub_21FAEF9FC, (void (*)(void))sub_21FAEFADC);
  v56 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v55, v13);
  *a3 = v56;
  return result;
}

uint64_t sub_21FAECE10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)a3 = *(_BYTE *)a2;
  *(_QWORD *)(a3 + 8) = v3;
  *(_QWORD *)(a3 + 16) = v4;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a3 + 40) = v5;
  *(_QWORD *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAECE78@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  uint64_t (*v37)(void);
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  char *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65[2];

  v58 = a3;
  sub_21FAEF74C(0, &qword_25406BC68, (unint64_t *)&qword_25406B938, (uint64_t)&type metadata for ClinicalSharingAuthorizations, (void (*)(void))sub_21FA49D48);
  v6 = v5;
  v56 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v48 - v7;
  sub_21FAEF7CC();
  v9 = v8;
  v54 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v52 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v48 - v15;
  v17 = a1[1];
  v60 = *a1;
  v61 = v17;
  v18 = a1[3];
  v62 = a1[2];
  v63 = v18;
  if (qword_25406B7F8 != -1)
    swift_once();
  v19 = sub_21FC5AFD4();
  __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
  sub_21FAEEDE0((uint64_t)a2, (uint64_t)v16);
  v20 = sub_21FC5AFC8();
  v21 = sub_21FC5B970();
  if (os_log_type_enabled(v20, v21))
  {
    v51 = v9;
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v50 = v6;
    v24 = v23;
    v49 = v14;
    *(_DWORD *)v22 = 136315138;
    v65[0] = v23;
    v25 = (uint64_t *)&v16[*(int *)(v11 + 32)];
    v26 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain();
    v64 = sub_21FABDCF8(v26, v27, v65);
    v9 = v51;
    v14 = v49;
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    sub_21FAEEFC8((uint64_t)v16);
    _os_log_impl(&dword_21FA27000, v20, v21, "%s Retrieving ClinicalSharingAuthorizations", v22, 0xCu);
    swift_arrayDestroy();
    v28 = v24;
    v6 = v50;
    MEMORY[0x2207D105C](v28, -1, -1);
    MEMORY[0x2207D105C](v22, -1, -1);
  }
  else
  {
    sub_21FAEEFC8((uint64_t)v16);
  }

  sub_21FA2D23C((uint64_t)&v60 + 8, (uint64_t)&v64, (uint64_t (*)(_QWORD))sub_21FAEF8F4);
  sub_21FA2D23C((uint64_t)&v64, (uint64_t)v65, (uint64_t (*)(_QWORD))sub_21FAEF8F4);
  v29 = v65[0];
  if (v65[0])
  {
    sub_21FAEF92C((uint64_t)&v64);
    v30 = sub_21FA8D8EC(v29);
    sub_21FAEF954((uint64_t)&v64);
    v31 = sub_21FA49070(v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = MEMORY[0x24BEE4AF8];
  }
  v32 = (id)*__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v33 = sub_21FC4BAC4(v31);

  swift_bridgeObjectRelease();
  v59 = v33;
  v34 = (_OWORD *)swift_allocObject();
  v35 = v61;
  v34[1] = v60;
  v34[2] = v35;
  v36 = v63;
  v34[3] = v62;
  v34[4] = v36;
  sub_21FAEF198((uint64_t)&v60);
  v37 = MEMORY[0x24BDB9AE0];
  sub_21FA5D3F8(0, (unint64_t *)&qword_25406B938, (uint64_t)&type metadata for ClinicalSharingAuthorizations, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FA49D48();
  v38 = v55;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  sub_21FAEEDE0((uint64_t)a2, (uint64_t)v14);
  v39 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v40 = (v53 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v14, v41 + v39, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  v42 = (_OWORD *)(v41 + v40);
  v43 = v61;
  *v42 = v60;
  v42[1] = v43;
  v44 = v63;
  v42[2] = v62;
  v42[3] = v44;
  sub_21FAEF198((uint64_t)&v60);
  sub_21FA5D3F8(0, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v37);
  sub_21FAEF88C();
  sub_21FAEC470();
  v45 = v57;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v6);
  sub_21FA2A08C(&qword_25406BCF0, (uint64_t (*)(uint64_t))sub_21FAEF7CC, MEMORY[0x24BDB9740]);
  v46 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v45, v9);
  *v58 = v46;
  return result;
}

uint64_t sub_21FAED3E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)a3 = *(_BYTE *)a2;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = v3;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a3 + 40) = v5;
  *(_QWORD *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAED44C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, const char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _BYTE v44[12];
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v49 = a4;
  sub_21FA80754(0, &qword_2555418C0, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  v10 = v9;
  v52 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v44[-v11];
  sub_21FA5D3F8(0, &qword_2555418C8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v44[-v14];
  v16 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v44[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v20 = sub_21FC5AFD4();
  __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
  sub_21FAEEDE0(a2, (uint64_t)v18);
  v21 = v19;
  v22 = v19;
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B970();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v47 = v10;
    v27 = v26;
    v46 = swift_slowAlloc();
    v53 = v46;
    *(_DWORD *)v27 = 136315394;
    v48 = a5;
    v28 = (uint64_t *)&v18[*(int *)(v16 + 32)];
    v45 = v25;
    v30 = *v28;
    v29 = v28[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v54 = sub_21FABDCF8(v30, v29, &v53);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    sub_21FAEEFC8((uint64_t)v18);
    *(_WORD *)(v27 + 12) = 2080;
    *(_QWORD *)&v54 = v19;
    v31 = v19;
    v32 = v19;
    sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
    sub_21FC5BE08();
    v33 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_21FC5BAF0();
    swift_unknownObjectRelease();
    v34 = sub_21FC5B64C();
    v36 = v35;

    *(_QWORD *)&v54 = sub_21FABDCF8(v34, v36, &v53);
    sub_21FC5BAC0();
    a5 = v48;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FA27000, v23, (os_log_type_t)v45, v49, (uint8_t *)v27, 0x16u);
    v37 = v46;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v37, -1, -1);
    v38 = v27;
    v10 = v47;
    MEMORY[0x2207D105C](v38, -1, -1);
  }
  else
  {
    sub_21FAEEFC8((uint64_t)v18);

  }
  v39 = a3[1];
  v54 = *a3;
  v55 = v39;
  v40 = a3[3];
  v56 = a3[2];
  v57 = v40;
  sub_21FAEF198((uint64_t)a3);
  sub_21FC5B22C();
  sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
  sub_21FC5B208();
  (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v12, v10);
  sub_21FAEF1F8();
  v41 = v51;
  v42 = sub_21FC5B280();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v50 + 8))(v15, v41);
  *a5 = v42;
  return result;
}

uint64_t sub_21FAED888@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  uint64_t (*v38)(void);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  char *v48;
  uint64_t v49;
  uint64_t result;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;

  v64 = a3;
  sub_21FAEF3FC();
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEF4AC();
  v8 = v7;
  v62 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v60 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAEF630(0, &qword_25406BCE8, v10, (void (*)(void))sub_21FAEF6D4);
  v12 = v11;
  v63 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v51 - v13;
  v14 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v57 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v58 = v16;
  v59 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v51 - v17;
  v19 = a1[1];
  v67 = *a1;
  v68 = v19;
  v20 = a1[3];
  v69 = a1[2];
  v70 = v20;
  if (qword_25406B7F8 != -1)
    swift_once();
  v21 = sub_21FC5AFD4();
  __swift_project_value_buffer(v21, (uint64_t)qword_25406D830);
  sub_21FAEEDE0(a2, (uint64_t)v18);
  v22 = sub_21FC5AFC8();
  v23 = sub_21FC5B970();
  if (os_log_type_enabled(v22, v23))
  {
    v52 = a2;
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    *(_DWORD *)v24 = 136315138;
    v66 = v25;
    v53 = v8;
    v51 = v24 + 4;
    v26 = (uint64_t *)&v18[*(int *)(v14 + 32)];
    v27 = v12;
    v29 = *v26;
    v28 = v26[1];
    swift_bridgeObjectRetain();
    v30 = v29;
    v12 = v27;
    v65 = sub_21FABDCF8(v30, v28, &v66);
    v8 = v53;
    sub_21FC5BAC0();
    a2 = v52;
    swift_bridgeObjectRelease();
    sub_21FAEEFC8((uint64_t)v18);
    _os_log_impl(&dword_21FA27000, v22, v23, "%s Retrieving ClinicalSharingSyncHistory", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v25, -1, -1);
    MEMORY[0x2207D105C](v24, -1, -1);
  }
  else
  {
    sub_21FAEEFC8((uint64_t)v18);
  }

  v31 = a2;
  v66 = sub_21FC5B9D0();
  sub_21FAEF534(0, &qword_25406B998, &qword_25406AAD0, MEMORY[0x24BDCDDE8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_21FA80754(0, (unint64_t *)&qword_25406C420, (uint64_t)&type metadata for ClinicalSharingSyncHistory, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_21FA99DAC();
  v32 = v54;
  sub_21FC5B2C8();
  swift_release();
  sub_21FA2A08C(&qword_25406C838, (uint64_t (*)(uint64_t))sub_21FAEF3FC, MEMORY[0x24BDB96C0]);
  v33 = v56;
  v34 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v33);
  v66 = v34;
  v35 = (_OWORD *)swift_allocObject();
  v36 = v68;
  v35[1] = v67;
  v35[2] = v36;
  v37 = v70;
  v35[3] = v69;
  v35[4] = v37;
  sub_21FAEF198((uint64_t)&v67);
  v38 = MEMORY[0x24BDB9AE0];
  sub_21FAEF534(0, &qword_25406CA20, (unint64_t *)&qword_25406C420, (uint64_t)&type metadata for ClinicalSharingSyncHistory, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEF5C8();
  v39 = v60;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  v40 = v31;
  v41 = v59;
  sub_21FAEEDE0(v40, v59);
  v42 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v43 = (v58 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v44 = swift_allocObject();
  sub_21FA2D23C(v41, v44 + v42, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  v45 = (_OWORD *)(v44 + v43);
  v46 = v68;
  *v45 = v67;
  v45[1] = v46;
  v47 = v70;
  v45[2] = v69;
  v45[3] = v47;
  sub_21FAEF198((uint64_t)&v67);
  sub_21FA5D3F8(0, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v38);
  sub_21FAEF6D4();
  sub_21FAEC470();
  v48 = v61;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v8);
  sub_21FAEF70C(&qword_25406BCE0, &qword_25406BCE8, (void (*)(uint64_t))sub_21FAEF4AC, (void (*)(void))sub_21FAEF6D4);
  v49 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v48, v12);
  *v64 = v49;
  return result;
}

uint64_t sub_21FAEDEA4@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *a1;
  if (!v5)
    v5 = swift_bridgeObjectRetain();
  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = *((_QWORD *)a2 + 4);
  v10 = a2[40];
  v11 = *((_QWORD *)a2 + 6);
  v12 = *((_QWORD *)a2 + 7);
  *(_BYTE *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v5;
  *(_QWORD *)(a3 + 32) = v9;
  *(_BYTE *)(a3 + 40) = v10;
  *(_QWORD *)(a3 + 48) = v11;
  *(_QWORD *)(a3 + 56) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAEDF2C@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  uint64_t (*v38)(void);
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  _QWORD v49[2];
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;

  v59 = a3;
  sub_21FAEF74C(0, &qword_25406BCA8, &qword_25406BDB8, MEMORY[0x24BEE1768], (void (*)(void))sub_21FAEF258);
  v6 = v5;
  v55 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)v49 - v7;
  sub_21FAEF2B8();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v53 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v49 - v15;
  v17 = a1[1];
  v62 = *a1;
  v63 = v17;
  v18 = a1[3];
  v64 = a1[2];
  v65 = v18;
  if (qword_25406B7F8 != -1)
    swift_once();
  v19 = sub_21FC5AFD4();
  __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
  sub_21FAEEDE0((uint64_t)a2, (uint64_t)v16);
  v20 = sub_21FC5AFC8();
  v21 = sub_21FC5B970();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v52 = v11;
    v24 = v23;
    v50 = v14;
    *(_DWORD *)v22 = 136315138;
    v61 = v23;
    v49[1] = v22 + 4;
    v25 = (uint64_t *)&v16[*(int *)(v52 + 32)];
    v26 = v10;
    v51 = v6;
    v28 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain();
    v29 = v28;
    v10 = v26;
    v60 = sub_21FABDCF8(v29, v27, &v61);
    v14 = v50;
    sub_21FC5BAC0();
    v6 = v51;
    swift_bridgeObjectRelease();
    sub_21FAEEFC8((uint64_t)v16);
    _os_log_impl(&dword_21FA27000, v20, v21, "%s Retrieving Age", v22, 0xCu);
    swift_arrayDestroy();
    v30 = v24;
    v11 = v52;
    MEMORY[0x2207D105C](v30, -1, -1);
    MEMORY[0x2207D105C](v22, -1, -1);
  }
  else
  {
    sub_21FAEEFC8((uint64_t)v16);
  }

  v31 = (id *)__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v32 = (uint64_t)a2 + *(int *)(v11 + 20);
  v33 = *v31;
  v34 = sub_21FAEA0BC(v32);

  v61 = v34;
  v35 = (_OWORD *)swift_allocObject();
  v36 = v63;
  v35[1] = v62;
  v35[2] = v36;
  v37 = v65;
  v35[3] = v64;
  v35[4] = v37;
  sub_21FAEF198((uint64_t)&v62);
  v38 = MEMORY[0x24BDB9AE0];
  sub_21FA5D3F8(0, &qword_25406BDB8, MEMORY[0x24BEE1768], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEF258();
  v39 = v56;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  sub_21FAEEDE0((uint64_t)a2, (uint64_t)v14);
  v40 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v41 = (v54 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v14, v42 + v40, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  v43 = (_OWORD *)(v42 + v41);
  v44 = v63;
  *v43 = v62;
  v43[1] = v44;
  v45 = v65;
  v43[2] = v64;
  v43[3] = v45;
  sub_21FAEF198((uint64_t)&v62);
  sub_21FA5D3F8(0, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v38);
  sub_21FAEF378();
  sub_21FAEC470();
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v6);
  sub_21FA2A08C(&qword_25406BD20, (uint64_t (*)(uint64_t))sub_21FAEF2B8, MEMORY[0x24BDB9740]);
  v46 = v58;
  v47 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v10, v46);
  *v59 = v47;
  return result;
}

uint64_t sub_21FAEE414@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)a3 = *(_BYTE *)a2;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v6;
  *(_QWORD *)(a3 + 32) = v3;
  *(_BYTE *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = v8;
  *(_QWORD *)(a3 + 56) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAEE474@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t (*v32)(void);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  uint64_t v43;
  uint64_t result;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  v54 = a3;
  sub_21FAEF74C(0, &qword_25406BC78, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (void (*)(void))sub_21FAEF004);
  v6 = v5;
  v52 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v45 - v7;
  sub_21FAEF064();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v48 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v49 = v14;
  v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v45 - v15;
  v17 = a1[1];
  v57 = *a1;
  v58 = v17;
  v18 = a1[3];
  v59 = a1[2];
  v60 = v18;
  if (qword_25406B7F8 != -1)
    swift_once();
  v19 = sub_21FC5AFD4();
  __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
  sub_21FAEEDE0((uint64_t)a2, (uint64_t)v16);
  v20 = sub_21FC5AFC8();
  v21 = sub_21FC5B970();
  if (os_log_type_enabled(v20, v21))
  {
    v47 = v9;
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v45 = a2;
    v46 = v6;
    *(_DWORD *)v22 = 136315138;
    v56 = v23;
    v24 = (uint64_t *)&v16[*(int *)(v12 + 32)];
    v25 = *v24;
    v26 = v24[1];
    swift_bridgeObjectRetain();
    v55 = sub_21FABDCF8(v25, v26, &v56);
    a2 = v45;
    v6 = v46;
    sub_21FC5BAC0();
    v9 = v47;
    swift_bridgeObjectRelease();
    sub_21FAEEFC8((uint64_t)v16);
    _os_log_impl(&dword_21FA27000, v20, v21, "%s Retrieving Sex", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v23, -1, -1);
    MEMORY[0x2207D105C](v22, -1, -1);
  }
  else
  {
    sub_21FAEEFC8((uint64_t)v16);
  }

  v27 = (id)*__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v28 = sub_21FAEA394();

  v56 = v28;
  v29 = (_OWORD *)swift_allocObject();
  v30 = v58;
  v29[1] = v57;
  v29[2] = v30;
  v31 = v60;
  v29[3] = v59;
  v29[4] = v31;
  sub_21FAEF198((uint64_t)&v57);
  v32 = MEMORY[0x24BDB9AE0];
  sub_21FA5D3F8(0, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEF004();
  v33 = v51;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  v34 = (uint64_t)a2;
  v35 = v50;
  sub_21FAEEDE0(v34, v50);
  v36 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v37 = (v49 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject();
  sub_21FA2D23C(v35, v38 + v36, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  v39 = (_OWORD *)(v38 + v37);
  v40 = v58;
  *v39 = v57;
  v39[1] = v40;
  v41 = v60;
  v39[2] = v59;
  v39[3] = v41;
  sub_21FAEF198((uint64_t)&v57);
  sub_21FA5D3F8(0, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v32);
  sub_21FAEF124();
  sub_21FAEC470();
  v42 = v53;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v6);
  sub_21FA2A08C(&qword_25406BD00, (uint64_t (*)(uint64_t))sub_21FAEF064, MEMORY[0x24BDB9740]);
  v43 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v42, v9);
  *v54 = v43;
  return result;
}

uint64_t sub_21FAEE934@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 40);
  *(_BYTE *)a3 = *(_BYTE *)a2;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a3 + 40) = v7;
  *(_QWORD *)(a3 + 48) = v3;
  *(_QWORD *)(a3 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAEE998@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint8_t *v30;
  char *v31;
  char v32;
  uint64_t *boxed_opaque_existential_1;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = (int *)type metadata accessor for ClinicalSharingDailyMetric();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21FC5AAAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x24BDAC7A8](v45);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *a1;
  v15 = *((_QWORD *)a1 + 1);
  v14 = *((_QWORD *)a1 + 2);
  v51 = *((_QWORD *)a1 + 3);
  v52 = v14;
  v48 = *((_QWORD *)a1 + 4);
  v47 = a1[40];
  v46 = *((_QWORD *)a1 + 6);
  v50 = *((_QWORD *)a1 + 7);
  if (qword_25406B7F8 != -1)
    swift_once();
  v16 = sub_21FC5AFD4();
  __swift_project_value_buffer(v16, (uint64_t)qword_25406D830);
  sub_21FAEEDE0(a2, (uint64_t)v13);
  v17 = sub_21FC5AFC8();
  v18 = sub_21FC5B970();
  if (os_log_type_enabled(v17, v18))
  {
    v42 = v15;
    v19 = swift_slowAlloc();
    v43 = v10;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v44 = v9;
    v40 = v21;
    v41 = a2;
    *(_DWORD *)v20 = 136315138;
    v55 = v21;
    v38 = v20 + 4;
    v39 = v17;
    v22 = v45;
    v23 = (uint64_t *)&v13[*(int *)(v45 + 32)];
    v24 = a3;
    v26 = *v23;
    v25 = v23[1];
    swift_bridgeObjectRetain();
    v27 = v26;
    a3 = v24;
    v54 = sub_21FABDCF8(v27, v25, &v55);
    a2 = v41;
    sub_21FC5BAC0();
    v15 = v42;
    swift_bridgeObjectRelease();
    sub_21FAEEFC8((uint64_t)v13);
    v28 = v39;
    _os_log_impl(&dword_21FA27000, v39, v18, "%s Creating ClinicalSharingDailyMetric", v20, 0xCu);
    v29 = v40;
    swift_arrayDestroy();
    v9 = v44;
    MEMORY[0x2207D105C](v29, -1, -1);
    v30 = v20;
    v10 = v43;
    MEMORY[0x2207D105C](v30, -1, -1);

  }
  else
  {
    sub_21FAEEFC8((uint64_t)v13);

    v22 = v45;
  }
  v31 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v53, a2 + *(int *)(v22 + 20), v9);
  v32 = *(_BYTE *)(a2 + *(int *)(v22 + 28));
  a3[3] = (uint64_t)v6;
  a3[4] = (uint64_t)&off_24E488178;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  v34 = &v8[v6[12]];
  *(_QWORD *)v34 = 0xD000000000000026;
  *((_QWORD *)v34 + 1) = 0x800000021FC77610;
  v35 = v48;
  *((_QWORD *)v8 + 1) = v15;
  *((_QWORD *)v8 + 2) = v35;
  v8[24] = v47;
  v36 = v50;
  *((_QWORD *)v8 + 4) = v46;
  *((_QWORD *)v8 + 5) = v36;
  *(_QWORD *)v8 = v52;
  v8[v6[9]] = v32;
  v8[v6[10]] = v49 & 1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v8[v6[8]], v31, v9);
  *(_QWORD *)&v8[v6[11]] = v51;
  sub_21FA2D23C((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDailyMetric);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAEED5C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_21FAEED80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406B9C0;
  if (!qword_25406B9C0)
  {
    sub_21FA5D3F8(255, (unint64_t *)&qword_25406B9C8, MEMORY[0x24BEE1328], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9E58], v1);
    atomic_store(result, (unint64_t *)&qword_25406B9C0);
  }
  return result;
}

uint64_t sub_21FAEEDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FAEEE28(uint64_t a1)
{
  return sub_21FAEEE74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FAEC7C8);
}

uint64_t sub_21FAEEE38(uint64_t a1)
{
  return sub_21FAEEE74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FAECE78);
}

uint64_t sub_21FAEEE48(uint64_t a1)
{
  return sub_21FAEEE74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FAED888);
}

uint64_t sub_21FAEEE58(uint64_t a1)
{
  return sub_21FAEEE74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FAEDF2C);
}

uint64_t sub_21FAEEE68(uint64_t a1)
{
  return sub_21FAEEE74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FAEE474);
}

uint64_t sub_21FAEEE74(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8)
                          + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  __swift_destroy_boxed_opaque_existential_1(v3);
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FAEEF7C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8)
                          + 80);
  return sub_21FAEE998(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_21FAEEFC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21FAEF004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406B940;
  if (!qword_25406B940)
  {
    sub_21FA5D3F8(255, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25406B940);
  }
  return result;
}

void sub_21FAEF064()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BD08)
  {
    sub_21FAEF74C(255, &qword_25406BC78, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (void (*)(void))sub_21FAEF004);
    sub_21FA5D3F8(255, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FAEF124();
    sub_21FAEC470();
    v0 = sub_21FC5B0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BD08);
  }
}

unint64_t sub_21FAEF124()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406BC70;
  if (!qword_25406BC70)
  {
    sub_21FAEF74C(255, &qword_25406BC78, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (void (*)(void))sub_21FAEF004);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25406BC70);
  }
  return result;
}

uint64_t sub_21FAEF190@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAEE934(a1, v2 + 16, a2);
}

uint64_t sub_21FAEF198(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21FAEF1EC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FAEFC54(a1, "%s Could not retrieve sex %s", a2);
}

unint64_t sub_21FAEF1F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2555418D0;
  if (!qword_2555418D0)
  {
    sub_21FA5D3F8(255, &qword_2555418C8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDBA1D0], v1);
    atomic_store(result, (unint64_t *)&qword_2555418D0);
  }
  return result;
}

unint64_t sub_21FAEF258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406BDB0;
  if (!qword_25406BDB0)
  {
    sub_21FA5D3F8(255, &qword_25406BDB8, MEMORY[0x24BEE1768], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25406BDB0);
  }
  return result;
}

void sub_21FAEF2B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BD28)
  {
    sub_21FAEF74C(255, &qword_25406BCA8, &qword_25406BDB8, MEMORY[0x24BEE1768], (void (*)(void))sub_21FAEF258);
    sub_21FA5D3F8(255, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FAEF378();
    sub_21FAEC470();
    v0 = sub_21FC5B0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BD28);
  }
}

unint64_t sub_21FAEF378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406BCA0;
  if (!qword_25406BCA0)
  {
    sub_21FAEF74C(255, &qword_25406BCA8, &qword_25406BDB8, MEMORY[0x24BEE1768], (void (*)(void))sub_21FAEF258);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25406BCA0);
  }
  return result;
}

uint64_t sub_21FAEF3E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAEE414(a1, v2 + 16, a2);
}

uint64_t sub_21FAEF3F0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FAEFC54(a1, "%s Could not retrieve age %s", a2);
}

void sub_21FAEF3FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406C840)
  {
    sub_21FAEF534(255, &qword_25406B998, &qword_25406AAD0, MEMORY[0x24BDCDDE8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_21FA80754(255, (unint64_t *)&qword_25406C420, (uint64_t)&type metadata for ClinicalSharingSyncHistory, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_21FA99DAC();
    v0 = sub_21FC5B064();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406C840);
  }
}

void sub_21FAEF4AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BC58)
  {
    sub_21FAEF534(255, &qword_25406CA20, (unint64_t *)&qword_25406C420, (uint64_t)&type metadata for ClinicalSharingSyncHistory, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FAEF5C8();
    v0 = sub_21FC5B064();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BC58);
  }
}

void sub_21FAEF534(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    sub_21FA80754(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v9 = v8;
    v10 = sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    v11 = a5(a1, v9, v10, MEMORY[0x24BEE3F20]);
    if (!v12)
      atomic_store(v11, a2);
  }
}

unint64_t sub_21FAEF5C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406CA18;
  if (!qword_25406CA18)
  {
    sub_21FAEF534(255, &qword_25406CA20, (unint64_t *)&qword_25406C420, (uint64_t)&type metadata for ClinicalSharingSyncHistory, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25406CA18);
  }
  return result;
}

void sub_21FAEF630(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_21FA5D3F8(255, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a4();
    sub_21FAEC470();
    v6 = sub_21FC5B0A0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_21FAEF6D4()
{
  return sub_21FA2A08C(&qword_25406BC50, (uint64_t (*)(uint64_t))sub_21FAEF4AC, MEMORY[0x24BDB96C0]);
}

uint64_t sub_21FAEF6F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAEDEA4(a1, (char *)(v2 + 16), a2);
}

uint64_t sub_21FAEF700@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FAEFC54(a1, "%s Could not retrieve ClinicalSharingSyncHistory %s", a2);
}

uint64_t sub_21FAEF70C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_21FAEF630(255, a2, a3, a4);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9740], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_21FAEF74C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_21FA5D3F8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a5();
    v7 = sub_21FC5B064();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_21FAEF7CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BCF8)
  {
    sub_21FAEF74C(255, &qword_25406BC68, (unint64_t *)&qword_25406B938, (uint64_t)&type metadata for ClinicalSharingAuthorizations, (void (*)(void))sub_21FA49D48);
    sub_21FA5D3F8(255, &qword_25406BDA8, (uint64_t)&type metadata for DailyMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FAEF88C();
    sub_21FAEC470();
    v0 = sub_21FC5B0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BCF8);
  }
}

unint64_t sub_21FAEF88C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406BC60;
  if (!qword_25406BC60)
  {
    sub_21FAEF74C(255, &qword_25406BC68, (unint64_t *)&qword_25406B938, (uint64_t)&type metadata for ClinicalSharingAuthorizations, (void (*)(void))sub_21FA49D48);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25406BC60);
  }
  return result;
}

void sub_21FAEF8F4(uint64_t a1)
{
  sub_21FA2D1A0(a1, &qword_25406BE10, (uint64_t (*)(uint64_t))sub_21FA849F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_21FAEF914@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAED3E4(a1, v2 + 16, a2);
}

uint64_t sub_21FAEF920@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FAEFC54(a1, "%s Could not retrieve ClinicalSharingAuthorizations %s", a2);
}

uint64_t sub_21FAEF92C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21FAEF954(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_21FAEF97C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_21FA849F8();
    v7 = v6;
    v8 = sub_21FA50724(255, (unint64_t *)&qword_25406BB50);
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_21FAEF9FC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25406BC88)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_21FAEF97C(255, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FAEFA9C((unint64_t *)&qword_25406B960, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_21FC5B064();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25406BC88);
  }
}

uint64_t sub_21FAEFA9C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_21FAEF97C(255, a2, a3);
    result = MEMORY[0x2207D0F78](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FAEFADC()
{
  return sub_21FA2A08C(&qword_25406BC80, (uint64_t (*)(uint64_t))sub_21FAEF9FC, MEMORY[0x24BDB96C0]);
}

uint64_t sub_21FAEFAF8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t objectdestroy_20Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FAEFB5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAECE10(a1, v2 + 16, a2);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  __swift_destroy_boxed_opaque_existential_1(v2);
  v3 = v2 + *(int *)(v1 + 20);
  v4 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FAEFC48@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FAEFC54(a1, "%s Could not retrieve HKClinicalAccount list %s", a2);
}

uint64_t sub_21FAEFC54@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_21FAED44C(a1, v3 + v8, (__int128 *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3);
}

unint64_t sub_21FAEFCC0()
{
  unint64_t result;

  result = qword_25406BC28;
  if (!qword_25406BC28)
  {
    type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25406BC28);
  }
  return result;
}

uint64_t destroy for DailyMetricDetailList()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DailyMetricDetailList(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DailyMetricDetailList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DailyMetricDetailList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyMetricDetailList(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyMetricDetailList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyMetricDetailList()
{
  return &type metadata for DailyMetricDetailList;
}

_QWORD *sub_21FAEFF8C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_21FC5AAAC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v14;
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
    v15 = a3[8];
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v14;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21FAF0070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_21FAF00D8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_21FAF0188(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AAAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
  v13 = v11;

  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v14 = a3[8];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FAF0240(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_21FAF02D4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FAF0384()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAF0390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AAAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_21FAF040C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAF0418(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AAAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FAF048C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AAAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t (*PBVerificationValuePair.w0.modify())()
{
  return nullsub_1;
}

uint64_t PBVerificationValuePair.l.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_21FA32314(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t PBVerificationValuePair.l.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21FA2D770(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBVerificationValuePair.l.modify())()
{
  return nullsub_1;
}

uint64_t PBVerificationValuePair.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBVerificationValuePair(0) + 24);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PBVerificationValuePair(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255541A48);
}

uint64_t PBVerificationValuePair.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBVerificationValuePair(0) + 24);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBVerificationValuePair.unknownFields.modify())()
{
  type metadata accessor for PBVerificationValuePair(0);
  return nullsub_1;
}

uint64_t PBVerificationValuePair.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = sub_21FC5ACF8();
  a1[1] = v2;
  a1[2] = sub_21FC5ACF8();
  a1[3] = v3;
  type metadata accessor for PBVerificationValuePair(0);
  return sub_21FC5AD10();
}

uint64_t (*PBPA.x.modify())()
{
  return nullsub_1;
}

uint64_t PBPA.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBPA, a1);
}

uint64_t type metadata accessor for PBPA(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255541AE0);
}

uint64_t PBPA.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBPA);
}

uint64_t (*PBPA.unknownFields.modify())()
{
  type metadata accessor for PBPA(0);
  return nullsub_1;
}

uint64_t PBPA.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FAF0790((void (*)(_QWORD))type metadata accessor for PBPA, a1);
}

uint64_t (*PBPB.y.modify())()
{
  return nullsub_1;
}

uint64_t PBPB.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBPB, a1);
}

uint64_t type metadata accessor for PBPB(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255541B70);
}

uint64_t PBPB.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBPB);
}

uint64_t (*PBPB.unknownFields.modify())()
{
  type metadata accessor for PBPB(0);
  return nullsub_1;
}

uint64_t PBPB.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FAF0790((void (*)(_QWORD))type metadata accessor for PBPB, a1);
}

uint64_t sub_21FAF0790@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  *a2 = sub_21FC5ACF8();
  a2[1] = v4;
  a1(0);
  return sub_21FC5AD10();
}

uint64_t PBConfirmationA.t.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_21FA32314(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t PBConfirmationA.t.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21FA2D770(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*PBConfirmationA.t.modify())()
{
  return nullsub_1;
}

uint64_t PBConfirmationA.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBConfirmationA, a1);
}

uint64_t type metadata accessor for PBConfirmationA(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255541C00);
}

uint64_t PBConfirmationA.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBConfirmationA);
}

uint64_t (*PBConfirmationA.unknownFields.modify())()
{
  type metadata accessor for PBConfirmationA(0);
  return nullsub_1;
}

uint64_t PBConfirmationA.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FAF0790((void (*)(_QWORD))type metadata accessor for PBConfirmationA, a1);
}

uint64_t (*PBConfirmationB.t.modify())()
{
  return nullsub_1;
}

uint64_t PBConfirmationB.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBConfirmationB, a1);
}

uint64_t type metadata accessor for PBConfirmationB(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255541C90);
}

uint64_t PBConfirmationB.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBConfirmationB);
}

uint64_t (*PBConfirmationB.unknownFields.modify())()
{
  type metadata accessor for PBConfirmationB(0);
  return nullsub_1;
}

uint64_t PBConfirmationB.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_21FAF0790((void (*)(_QWORD))type metadata accessor for PBConfirmationB, a1);
}

unint64_t static PBVerificationValuePair.protoMessageName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_21FAF092C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555418D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555418D8);
  sub_21FA8AF38();
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "w0";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "L";
  *((_QWORD *)v12 + 1) = 1;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBVerificationValuePair._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D628, (uint64_t)qword_2555418D8, a1);
}

uint64_t PBVerificationValuePair.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_21FC5ADF4();
      result = sub_21FC5AD88();
    }
  }
  return result;
}

void PBVerificationValuePair.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

uint64_t sub_21FAF0B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_21FC5AEF0(), !v2))
    __asm { BR              X10 }
  return result;
}

uint64_t PBVerificationValuePair.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBVerificationValuePair, &qword_255541950, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
}

uint64_t sub_21FAF0C80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = sub_21FC5ACF8();
  a1[1] = v2;
  a1[2] = sub_21FC5ACF8();
  a1[3] = v3;
  return sub_21FC5AD10();
}

unint64_t sub_21FAF0CBC()
{
  return 0xD000000000000035;
}

uint64_t sub_21FAF0CD8()
{
  return PBVerificationValuePair.decodeMessage<A>(decoder:)();
}

void sub_21FAF0CEC()
{
  PBVerificationValuePair.traverse<A>(visitor:)();
}

uint64_t sub_21FAF0D00()
{
  sub_21FA2A08C(&qword_255541CE8, type metadata accessor for PBVerificationValuePair, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
  return sub_21FC5AD70();
}

uint64_t sub_21FAF0D50@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D628, (uint64_t)qword_2555418D8, a1);
}

uint64_t sub_21FAF0D6C()
{
  sub_21FA2A08C(&qword_255541980, type metadata accessor for PBVerificationValuePair, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAF0DAC()
{
  sub_21FA2A08C(&qword_255541980, type metadata accessor for PBVerificationValuePair, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
  return sub_21FC5AEA8();
}

unint64_t static PBPA.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_21FAF0E1C(uint64_t a1)
{
  return sub_21FAF1534(a1, qword_2555418F0, (uint64_t)"X");
}

uint64_t static PBPA._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D630, (uint64_t)qword_2555418F0, a1);
}

uint64_t PBPA.decodeMessage<A>(decoder:)()
{
  return sub_21FAF165C();
}

void PBPA.traverse<A>(visitor:)()
{
  sub_21FAF1098();
}

uint64_t static PBPA.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBPA) & 1;
}

uint64_t PBPA.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPA, &qword_255541958, (uint64_t)&protocol conformance descriptor for PBPA);
}

unint64_t sub_21FAF0EBC()
{
  return 0xD000000000000022;
}

uint64_t sub_21FAF0ED8()
{
  return PBConfirmationA.decodeMessage<A>(decoder:)();
}

void sub_21FAF0EEC()
{
  PBPA.traverse<A>(visitor:)();
}

uint64_t sub_21FAF0F00()
{
  sub_21FA2A08C(&qword_255541CE0, type metadata accessor for PBPA, (uint64_t)&protocol conformance descriptor for PBPA);
  return sub_21FC5AD70();
}

uint64_t sub_21FAF0F50@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D630, (uint64_t)qword_2555418F0, a1);
}

uint64_t sub_21FAF0F6C()
{
  sub_21FA2A08C(&qword_255541998, type metadata accessor for PBPA, (uint64_t)&protocol conformance descriptor for PBPA);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAF0FAC()
{
  sub_21FA2A08C(&qword_255541998, type metadata accessor for PBPA, (uint64_t)&protocol conformance descriptor for PBPA);
  return sub_21FC5AEA8();
}

uint64_t sub_21FAF0FFC(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBPA) & 1;
}

unint64_t static PBPB.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_21FAF1038(uint64_t a1)
{
  return sub_21FAF1534(a1, qword_255541908, (uint64_t)"Y");
}

uint64_t static PBPB._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D638, (uint64_t)qword_255541908, a1);
}

uint64_t PBPB.decodeMessage<A>(decoder:)()
{
  return sub_21FAF165C();
}

void PBPB.traverse<A>(visitor:)()
{
  sub_21FAF1098();
}

void sub_21FAF1098()
{
  __asm { BR              X10 }
}

uint64_t sub_21FAF10E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_21FC5AEF0(), !v2))
  {
    v3(0);
    return sub_21FC5AD04();
  }
  return result;
}

uint64_t static PBPB.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBPB) & 1;
}

uint64_t PBPB.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPB, &qword_255541960, (uint64_t)&protocol conformance descriptor for PBPB);
}

unint64_t sub_21FAF11B4()
{
  return 0xD000000000000022;
}

void sub_21FAF11D0()
{
  PBPB.traverse<A>(visitor:)();
}

uint64_t sub_21FAF11E4()
{
  sub_21FA2A08C(&qword_255541CD8, type metadata accessor for PBPB, (uint64_t)&protocol conformance descriptor for PBPB);
  return sub_21FC5AD70();
}

uint64_t sub_21FAF1234@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D638, (uint64_t)qword_255541908, a1);
}

uint64_t sub_21FAF1250()
{
  sub_21FA2A08C(&qword_2555419B0, type metadata accessor for PBPB, (uint64_t)&protocol conformance descriptor for PBPB);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAF1290()
{
  sub_21FA2A08C(&qword_2555419B0, type metadata accessor for PBPB, (uint64_t)&protocol conformance descriptor for PBPB);
  return sub_21FC5AEA8();
}

uint64_t sub_21FAF12E0(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBPB) & 1;
}

unint64_t static PBConfirmationA.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FAF131C(uint64_t a1)
{
  return sub_21FAF1534(a1, qword_255541920, (uint64_t)"T");
}

uint64_t static PBConfirmationA._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D640, (uint64_t)qword_255541920, a1);
}

uint64_t PBConfirmationA.decodeMessage<A>(decoder:)()
{
  return sub_21FAF165C();
}

void PBConfirmationA.traverse<A>(visitor:)()
{
  sub_21FAF1098();
}

uint64_t static PBConfirmationA.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBConfirmationA) & 1;
}

uint64_t PBConfirmationA.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBConfirmationA, &qword_255541968, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
}

unint64_t sub_21FAF13B8()
{
  return 0xD00000000000002DLL;
}

void sub_21FAF13D4()
{
  PBConfirmationA.traverse<A>(visitor:)();
}

uint64_t sub_21FAF13E8()
{
  sub_21FA2A08C(&qword_255541CD0, type metadata accessor for PBConfirmationA, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
  return sub_21FC5AD70();
}

uint64_t sub_21FAF1438@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D640, (uint64_t)qword_255541920, a1);
}

uint64_t sub_21FAF1454()
{
  sub_21FA2A08C(&qword_2555419C8, type metadata accessor for PBConfirmationA, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAF1494()
{
  sub_21FA2A08C(&qword_2555419C8, type metadata accessor for PBConfirmationA, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
  return sub_21FC5AEA8();
}

uint64_t sub_21FAF14E4(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBConfirmationA) & 1;
}

unint64_t static PBConfirmationB.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FAF1520(uint64_t a1)
{
  return sub_21FAF1534(a1, qword_255541938, (uint64_t)"T");
}

uint64_t sub_21FAF1534(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  sub_21FA8AF38();
  sub_21FA48EB8();
  v7 = v6;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_21FC5EE30;
  v11 = v10 + v9 + *(int *)(v7 + 48);
  *(_QWORD *)(v10 + v9) = 1;
  *(_QWORD *)v11 = a3;
  *(_QWORD *)(v11 + 8) = 1;
  *(_BYTE *)(v11 + 16) = 2;
  v12 = *MEMORY[0x24BE5C318];
  v13 = sub_21FC5AF5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  return sub_21FC5AF68();
}

uint64_t static PBConfirmationB._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D648, (uint64_t)qword_255541938, a1);
}

uint64_t PBConfirmationB.decodeMessage<A>(decoder:)()
{
  return sub_21FAF165C();
}

uint64_t sub_21FAF165C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_21FC5AD88();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_21FC5ADF4();
  }
  return result;
}

void PBConfirmationB.traverse<A>(visitor:)()
{
  sub_21FAF1098();
}

uint64_t static PBConfirmationB.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBConfirmationB) & 1;
}

uint64_t PBConfirmationB.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBConfirmationB, &qword_255541970, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
}

unint64_t sub_21FAF1720()
{
  return 0xD00000000000002DLL;
}

void sub_21FAF173C()
{
  PBConfirmationB.traverse<A>(visitor:)();
}

uint64_t sub_21FAF1750()
{
  sub_21FA2A08C(&qword_255541CC8, type metadata accessor for PBConfirmationB, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
  return sub_21FC5AD70();
}

uint64_t sub_21FAF17A0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D648, (uint64_t)qword_255541938, a1);
}

uint64_t sub_21FAF17BC()
{
  sub_21FA2A08C(&qword_2555419E0, type metadata accessor for PBConfirmationB, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAF17FC()
{
  sub_21FA2A08C(&qword_2555419E0, type metadata accessor for PBConfirmationB, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
  return sub_21FC5AEA8();
}

uint64_t sub_21FAF184C(uint64_t *a1, uint64_t a2)
{
  return sub_21FAF19B0(a1, a2, type metadata accessor for PBConfirmationB) & 1;
}

uint64_t _s19HealthRecordsDaemon23PBVerificationValuePairV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  sub_21FB13260(*a1, a1[1]);
  if ((v11 & 1) != 0 && (sub_21FB13260(a1[2], a1[3]), (v12 & 1) != 0))
  {
    v13 = type metadata accessor for PBVerificationValuePair(0);
    v14 = (char *)a1 + *(int *)(v13 + 24);
    v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v15(v10, v14, v4);
    v15(v8, (char *)(a2 + *(int *)(v13 + 24)), v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = sub_21FC5B5D4();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_21FAF19B0(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = sub_21FC5AD1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  sub_21FB13260(*a1, a1[1]);
  if ((v13 & 1) != 0)
  {
    v14 = a3(0);
    v15 = (char *)a1 + *(int *)(v14 + 20);
    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v16(v12, v15, v6);
    v16(v10, (char *)(a2 + *(int *)(v14 + 20)), v6);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v17 = sub_21FC5B5D4();
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v10, v6);
    v18(v12, v6);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_21FAF1AE8()
{
  return sub_21FA2A08C(&qword_255541978, type metadata accessor for PBVerificationValuePair, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
}

uint64_t sub_21FAF1B14()
{
  return sub_21FA2A08C(&qword_255541980, type metadata accessor for PBVerificationValuePair, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
}

uint64_t sub_21FAF1B40()
{
  return sub_21FA2A08C(&qword_255541950, type metadata accessor for PBVerificationValuePair, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
}

uint64_t sub_21FAF1B6C()
{
  return sub_21FA2A08C(&qword_255541988, type metadata accessor for PBVerificationValuePair, (uint64_t)&protocol conformance descriptor for PBVerificationValuePair);
}

uint64_t sub_21FAF1B98()
{
  return sub_21FA2A08C(&qword_255541990, type metadata accessor for PBPA, (uint64_t)&protocol conformance descriptor for PBPA);
}

uint64_t sub_21FAF1BC4()
{
  return sub_21FA2A08C(&qword_255541998, type metadata accessor for PBPA, (uint64_t)&protocol conformance descriptor for PBPA);
}

uint64_t sub_21FAF1BF0()
{
  return sub_21FA2A08C(&qword_255541958, type metadata accessor for PBPA, (uint64_t)&protocol conformance descriptor for PBPA);
}

uint64_t sub_21FAF1C1C()
{
  return sub_21FA2A08C(&qword_2555419A0, type metadata accessor for PBPA, (uint64_t)&protocol conformance descriptor for PBPA);
}

uint64_t sub_21FAF1C48()
{
  return sub_21FA2A08C(&qword_2555419A8, type metadata accessor for PBPB, (uint64_t)&protocol conformance descriptor for PBPB);
}

uint64_t sub_21FAF1C74()
{
  return sub_21FA2A08C(&qword_2555419B0, type metadata accessor for PBPB, (uint64_t)&protocol conformance descriptor for PBPB);
}

uint64_t sub_21FAF1CA0()
{
  return sub_21FA2A08C(&qword_255541960, type metadata accessor for PBPB, (uint64_t)&protocol conformance descriptor for PBPB);
}

uint64_t sub_21FAF1CCC()
{
  return sub_21FA2A08C(&qword_2555419B8, type metadata accessor for PBPB, (uint64_t)&protocol conformance descriptor for PBPB);
}

uint64_t sub_21FAF1CF8()
{
  return sub_21FA2A08C(&qword_2555419C0, type metadata accessor for PBConfirmationA, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
}

uint64_t sub_21FAF1D24()
{
  return sub_21FA2A08C(&qword_2555419C8, type metadata accessor for PBConfirmationA, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
}

uint64_t sub_21FAF1D50()
{
  return sub_21FA2A08C(&qword_255541968, type metadata accessor for PBConfirmationA, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
}

uint64_t sub_21FAF1D7C()
{
  return sub_21FA2A08C(&qword_2555419D0, type metadata accessor for PBConfirmationA, (uint64_t)&protocol conformance descriptor for PBConfirmationA);
}

uint64_t sub_21FAF1DA8()
{
  return sub_21FA2A08C(&qword_2555419D8, type metadata accessor for PBConfirmationB, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
}

uint64_t sub_21FAF1DD4()
{
  return sub_21FA2A08C(&qword_2555419E0, type metadata accessor for PBConfirmationB, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
}

uint64_t sub_21FAF1E00()
{
  return sub_21FA2A08C(&qword_255541970, type metadata accessor for PBConfirmationB, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
}

uint64_t sub_21FAF1E2C()
{
  return sub_21FA2A08C(&qword_2555419E8, type metadata accessor for PBConfirmationB, (uint64_t)&protocol conformance descriptor for PBConfirmationB);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBVerificationValuePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_21FA32314(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[2];
    v10 = a2[3];
    sub_21FA32314(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_21FC5AD1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for PBVerificationValuePair(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_21FA2D770(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_21FA2D770(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *initializeWithCopy for PBVerificationValuePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_21FA32314(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[2];
  v9 = a2[3];
  sub_21FA32314(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t *assignWithCopy for PBVerificationValuePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  sub_21FA32314(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_21FA2D770(v8, v9);
  v10 = a2[2];
  v11 = a2[3];
  sub_21FA32314(v10, v11);
  v12 = a1[2];
  v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_21FA2D770(v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t *assignWithTake for PBVerificationValuePair(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_21FA2D770(v6, v7);
  v8 = a1[2];
  v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_21FA2D770(v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBVerificationValuePair()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAF2118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBVerificationValuePair()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FAF21AC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FAF2228()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBPA()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPA()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBPB()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPB()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBConfirmationA()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBConfirmationA()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBConfirmationB()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBConfirmationB()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_2Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FAF243C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21FAF24D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FAF24DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5A6C8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_21FAF2558()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FAF2564(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5A6C8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery()
{
  uint64_t result;

  result = qword_255541D48;
  if (!qword_255541D48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21FAF2614(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_21FAF2638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  void *v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD v56[7];

  v1 = type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v46 = *(_QWORD *)(v1 - 8);
  v47 = v2;
  MEMORY[0x24BDAC7A8](v1);
  v45 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21FC5B8E0();
  v5 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v44 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2CE08(0, (unint64_t *)&qword_25553E0A8, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  v50 = v8;
  v52 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v41 - v9;
  sub_21FA2CE08(0, &qword_25553E0D0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  v51 = v10;
  v53 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)&v41 - v11;
  v12 = sub_21FC5AAAC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(int *)(v1 + 24);
  v54 = (_QWORD *)v0;
  v17 = *(void **)(v0 + v16);
  v18 = (void *)objc_opt_self();
  v19 = v17;
  sub_21FC5A6A4();
  v20 = (void *)sub_21FC5AA64();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  sub_21FC5A680();
  v22 = (void *)sub_21FC5AA64();
  v21(v15, v12);
  v23 = objc_msgSend(v18, sel_predicateForSamplesWithStartDate_endDate_options_, v20, v22, 0);

  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v19, v23);
  v25 = v54;
  sub_21FBE6F50(0xD000000000000018, 0x800000021FC77750, *(_QWORD *)((char *)v54 + v16), 5, 1);
  v26 = (uint64_t)v25;
  sub_21FA2CEA0(*v25 + 16, (uint64_t)v56);
  __swift_project_boxed_opaque_existential_1(v56, v56[3]);
  sub_21FA2CEE4();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_21FC5E070;
  *(_QWORD *)(v27 + 32) = v24;
  v55 = v27;
  sub_21FC5B7C0();
  v42 = v24;
  sub_21FC5B8EC();
  sub_21FA2A08C(&qword_25553E0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0], MEMORY[0x24BE459D8]);
  v28 = v43;
  v29 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = v29;
  v30 = v45;
  sub_21FA2D120(v26, v45, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
  v31 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v32 = swift_allocObject();
  sub_21FA2D23C(v30, v32 + v31, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_21FAF3780;
  *(_QWORD *)(v33 + 24) = v32;
  sub_21FA2CCF4();
  type metadata accessor for PBTypedData(0);
  sub_21FA2A08C(&qword_25553E0C8, (uint64_t (*)(uint64_t))sub_21FA2CCF4, MEMORY[0x24BDB9AF8]);
  v34 = v48;
  sub_21FC5B28C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  sub_21FA2D120((uint64_t)v54, v30, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
  v35 = swift_allocObject();
  sub_21FA2D23C(v30, v35 + v31, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  v37 = v49;
  v36 = v50;
  sub_21FC5AFF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v36);
  sub_21FA2D0AC();
  v38 = v51;
  v39 = sub_21FC5B280();

  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v38);
  return v39;
}

uint64_t sub_21FAF2B5C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _BYTE v46[16];

  v4 = type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v40 - v8;
  v10 = type metadata accessor for PBDateRange(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PBCategorySeries(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  if (!(a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_14:
    v36 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a2, 1, 1, v36);
  }
  swift_bridgeObjectRetain();
  v35 = sub_21FC5BC7C();
  swift_bridgeObjectRelease();
  if (!v35)
    goto LABEL_14;
LABEL_3:
  v41 = v12;
  v19 = sub_21FAC1B38(a1);
  if (v19)
  {
    v20 = v19;
    MEMORY[0x24BDAC7A8](v19);
    v39 = v43;
    v21 = sub_21FC41D10((void (*)(id *))sub_21FAF38E4, (uint64_t)(&v40 - 4), v20, (uint64_t)v46);
    swift_bridgeObjectRelease();
    sub_21FC5AD10();
    v22 = *(int *)(v13 + 20);
    if (qword_25553D868 != -1)
      swift_once();
    *(_QWORD *)&v18[v22] = qword_255543A10;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCategorySeries._StorageClass(0);
      swift_allocObject();
      v23 = swift_retain();
      *(_QWORD *)&v18[v22] = sub_21FB4D47C(v23);
      swift_release();
    }
    v42 = v16;
    v24 = (uint64_t *)(*(_QWORD *)&v18[v22]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
    swift_beginAccess();
    *v24 = v21;
    swift_bridgeObjectRelease();
    sub_21FC5AD10();
    v25 = type metadata accessor for PBTypedData(0);
    v26 = *(int *)(v25 + 20);
    if (qword_25553D590 != -1)
      swift_once();
    *(_QWORD *)(a2 + v26) = qword_25553E450;
    v27 = v43 + *(int *)(v4 + 20);
    v28 = sub_21FC5A6C8();
    v29 = *(_QWORD *)(v28 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v9, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v9, 0, 1, v28);
    swift_retain();
    v30 = (uint64_t)v41;
    sub_21FBE7E8C(5, 1, v9);
    sub_21FA2D1F8((uint64_t)v9, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    PBTypedData.dateRange.setter(v30);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v31 = swift_retain();
      *(_QWORD *)(a2 + v26) = sub_21FA3A458(v31);
      swift_release();
    }
    v32 = *(_QWORD *)(a2 + v26);
    swift_beginAccess();
    *(_QWORD *)(v32 + 16) = 126;
    *(_BYTE *)(v32 + 24) = 1;
    v33 = (uint64_t)v42;
    sub_21FA2D120((uint64_t)v18, (uint64_t)v42, type metadata accessor for PBCategorySeries);
    PBTypedData.categorySeries.setter(v33);
    sub_21FA2D164((uint64_t)v18);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 0, 1, v25);
  }
  else
  {
    sub_21FA2D120(v43, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
    v44 = 0;
    v45 = 0xE000000000000000;
    sub_21FC5BB74();
    swift_bridgeObjectRelease();
    v44 = 0xD000000000000023;
    v45 = 0x800000021FC74BF0;
    v37 = *(id *)&v6[*(int *)(v4 + 24)];
    v38 = objc_msgSend(v37, sel_description);
    sub_21FC5B604();

    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    result = sub_21FC5BC70();
    __break(1u);
  }
  return result;
}

uint64_t sub_21FAF30C4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;

  v61 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v58 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (uint64_t *)((char *)&v56 - v9);
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, v5);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v62 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v56 - v13;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v5);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v56 - v19;
  v21 = type metadata accessor for PBDateRange(0);
  v59 = *(_QWORD *)(v21 - 8);
  v60 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a1;
  sub_21FC5AD10();
  v25 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if (qword_25553D890 != -1)
    swift_once();
  *(_QWORD *)(a3 + v25) = qword_255543A68;
  swift_retain();
  v26 = objc_msgSend(v24, sel_startDate);
  sub_21FC5AA94();

  v27 = sub_21FC5AAAC();
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v20, 0, 1, v27);
  v63 = v24;
  v29 = objc_msgSend(v24, sel_endDate);
  sub_21FC5AA94();

  v28(v18, 0, 1, v27);
  sub_21FC0329C(v20, v18);
  v30 = (uint64_t)v18;
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_21FA2D1F8(v30, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_21FA2D1F8((uint64_t)v20, (unint64_t *)&qword_25406AAE8, v31);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v32 = swift_retain();
    *(_QWORD *)(a3 + v25) = sub_21FB4E9EC(v32);
    swift_release();
  }
  v33 = *(_QWORD *)(a3 + v25);
  sub_21FA2D23C((uint64_t)v23, (uint64_t)v14, type metadata accessor for PBDateRange);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v14, 0, 1, v60);
  v34 = v62;
  sub_21FA2D280((uint64_t)v14, v62, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v35 = v33
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8(v34, v35, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
  v36 = v63;
  v37 = (uint64_t)objc_msgSend(v63, sel_value);
  if (v37 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_23;
  }
  v38 = v37;
  if (v37 > 0x7FFFFFFF)
  {
LABEL_23:
    __break(1u);
    JUMPOUT(0x21FAF3768);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v39 = swift_retain();
    *(_QWORD *)(a3 + v25) = sub_21FB4E9EC(v39);
    swift_release();
  }
  v40 = *(_QWORD *)(a3 + v25);
  swift_beginAccess();
  *(_DWORD *)(v40 + 16) = v38;
  v41 = (char *)objc_msgSend(v36, sel_value);
  v42 = v41 - 1;
  if ((unint64_t)(v41 - 1) >= 4)
    v43 = 0;
  else
    v43 = v41;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v44 = swift_retain();
    *(_QWORD *)(a3 + v25) = sub_21FB4E9EC(v44);
    swift_release();
  }
  v45 = *(_QWORD *)(a3 + v25);
  v46 = v57;
  *v57 = v43;
  *((_BYTE *)v46 + 8) = 1;
  v47 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
  v48 = (uint64_t)v46;
  v49 = v58;
  sub_21FA2D280(v48, v58, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v50 = v45
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8(v49, v50, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  swift_release();
  v51 = 0xEA0000000000776FLL;
  v52 = 0x4C6C616974696E69;
  switch((unint64_t)v42)
  {
    case 0uLL:
      break;
    case 1uLL:
      v51 = 0xEE00776F4C797265;
      v52 = 0x566C616974696E69;
      break;
    case 2uLL:
      v51 = 0xE900000000000077;
      v52 = 0x6F4C746165706572;
      break;
    case 3uLL:
      v51 = 0xED0000776F4C7972;
      v52 = 0x6556746165706572;
      break;
    default:
      v51 = 0xE600000000000000;
      v52 = 0x746553746F6ELL;
      break;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v53 = swift_retain();
    *(_QWORD *)(a3 + v25) = sub_21FB4E9EC(v53);
    swift_release();
  }
  v54 = *(_QWORD *)(a3 + v25);
  swift_beginAccess();
  *(_QWORD *)(v54 + 24) = v52;
  *(_QWORD *)(v54 + 32) = v51;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FAF3780@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
  return sub_21FAF2B5C(a1, a2);
}

uint64_t sub_21FAF37D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_21FC5A6C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_21FAF3890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
  return sub_21FBE7104(a1, 0, a2);
}

uint64_t sub_21FAF38E4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAF30C4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_21FAF3900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_21FC5AD10();
  v20 = *(int *)(type metadata accessor for PBLookupInfo(0) + 20);
  if (qword_25553D5D0 != -1)
    swift_once();
  *(_QWORD *)(a9 + v20) = qword_25553F6C8;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v21 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v21);
    swift_release();
  }
  v22 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  swift_bridgeObjectRelease();
  sub_21FA32314(a3, a4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v23 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v23);
    swift_release();
  }
  v24 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  v25 = *(_QWORD *)(v24 + 32);
  v26 = *(_QWORD *)(v24 + 40);
  *(_QWORD *)(v24 + 32) = a3;
  *(_QWORD *)(v24 + 40) = a4;
  sub_21FA2D770(v25, v26);
  sub_21FA32314(a5, a6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v27 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v27);
    swift_release();
  }
  v28 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  v29 = *(_QWORD *)(v28 + 48);
  v30 = *(_QWORD *)(v28 + 56);
  *(_QWORD *)(v28 + 48) = a5;
  *(_QWORD *)(v28 + 56) = a6;
  sub_21FA2D770(v29, v30);
  v31 = objc_msgSend((id)objc_opt_self(), sel_currentDeviceName);
  if (v31)
  {
    v32 = v31;
    v33 = sub_21FC5B604();
    v35 = v34;

  }
  else
  {
    v35 = 0xEE00656369766544;
    v33 = 0x206E776F6E6B6E55;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v36 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v36);
    swift_release();
  }
  v37 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  *(_QWORD *)(v37 + 96) = v33;
  *(_QWORD *)(v37 + 104) = v35;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v38 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v38);
    swift_release();
  }
  v39 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  *(_QWORD *)(v39 + 80) = a7;
  *(_QWORD *)(v39 + 88) = a8;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v40 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v40);
    swift_release();
  }
  v41 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  *(_QWORD *)(v41 + 64) = a10;
  *(_QWORD *)(v41 + 72) = a11;
  result = swift_bridgeObjectRelease();
  if (a12 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (a12 > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v43 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v43);
    swift_release();
  }
  v44 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  *(_DWORD *)(v44 + 112) = a12;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    v45 = swift_retain();
    *(_QWORD *)(a9 + v20) = sub_21FA6E3AC(v45);
    swift_release();
  }
  v46 = *(_QWORD *)(a9 + v20);
  swift_beginAccess();
  *(_QWORD *)(v46 + 136) = a13;
  *(_QWORD *)(v46 + 144) = a14;
  swift_bridgeObjectRelease();
  sub_21FA2D770(a5, a6);
  return sub_21FA2D770(a3, a4);
}

void sub_21FAF3DC0(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t (*v41)(void);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  void *v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;

  v60 = a2;
  v73 = a3;
  sub_21FAF460C();
  v71 = v4;
  v69 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v67 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FAAE8A8(0, &qword_25406B880, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB98E0]);
  v63 = v6;
  v61 = *(_QWORD **)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v59 - v7;
  sub_21FAAE8A8(0, &qword_255541D90, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9990]);
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v59 - v9;
  sub_21FAAE8A8(0, &qword_255540858, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9730]);
  v72 = v10;
  v70 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)&v59 - v11;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553F0D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v59 - v15;
  v17 = MEMORY[0x24BDBA1B0];
  sub_21FA5B0CC(0, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v59 - v21;
  v23 = *a1;
  v76 = v23;
  v24 = type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  v74 = v24;
  sub_21FC5B22C();
  sub_21FA2CDB4();
  sub_21FC5B208();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_21FA5B13C((unint64_t *)&qword_25553F0E8, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v17, MEMORY[0x24BDBA1D0]);
  v25 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v26 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
  if (*(_QWORD *)(v23 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error))
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v27 = sub_21FC5AFD4();
    __swift_project_value_buffer(v27, (uint64_t)qword_25406D830);
    swift_retain_n();
    v28 = sub_21FC5AFC8();
    v29 = sub_21FC5B97C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = v25;
      v32 = swift_slowAlloc();
      v76 = v32;
      *(_DWORD *)v30 = 136315394;
      sub_21FC5AAF4();
      sub_21FA2A08C((unint64_t *)&qword_25553F0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v33 = sub_21FC5BDCC();
      v75 = (id)sub_21FABDCF8(v33, v34, &v76);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v75 = *(id *)(v23 + v26);
      v35 = v75;
      sub_21FA2D1A0(0, &qword_25406BB60, (uint64_t (*)(uint64_t))sub_21FA2CDB4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v36 = sub_21FC5B64C();
      v75 = (id)sub_21FABDCF8(v36, v37, &v76);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v28, v29, "ClinicalSharingSyncContext for account %s is in error state, will not be able to update DocumentReference. Error: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      v38 = v32;
      v25 = v31;
      MEMORY[0x2207D105C](v38, -1, -1);
      MEMORY[0x2207D105C](v30, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    v76 = v25;
    v39 = swift_allocObject();
    v40 = v60;
    *(_QWORD *)(v39 + 16) = v60;
    v59 = v40;
    sub_21FC5B184();
    v41 = MEMORY[0x24BDB9AE0];
    sub_21FA5B0CC(0, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    v60 = (void *)v25;
    sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v41, MEMORY[0x24BDB9AF8]);
    v42 = v62;
    sub_21FC5B34C();
    swift_release();
    sub_21FAAEAF8(&qword_25406B878, &qword_25406B880, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB98E0], MEMORY[0x24BDB98F0]);
    v43 = v63;
    v44 = sub_21FC5B280();
    v45 = (void (*)(char *, uint64_t))v61[1];
    v45(v42, v43);
    v76 = v44;
    v46 = swift_allocObject();
    v47 = v59;
    *(_QWORD *)(v46 + 16) = v59;
    *(_QWORD *)(v46 + 24) = 3;
    v61 = v47;
    sub_21FC5B184();
    sub_21FC5B34C();
    swift_release();
    v48 = sub_21FC5B280();
    v45(v42, v43);
    swift_release();
    v76 = v48;
    swift_retain();
    v49 = v64;
    sub_21FC5B364();
    swift_release();
    swift_release();
    v50 = swift_allocObject();
    v51 = v61;
    *(_QWORD *)(v50 + 16) = v61;
    v52 = v51;
    sub_21FC5B184();
    sub_21FAAEAF8(&qword_255541D98, &qword_255541D90, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9990], MEMORY[0x24BDB9998]);
    v54 = v66;
    v53 = v67;
    sub_21FC5B34C();
    swift_release();
    sub_21FA2A08C(&qword_255541DA0, (uint64_t (*)(uint64_t))sub_21FAF460C, MEMORY[0x24BDB98F0]);
    v55 = v71;
    v56 = sub_21FC5B280();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v53, v55);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v54);
    v76 = v56;
    swift_retain();
    v57 = v68;
    sub_21FC5B2E0();
    swift_release();
    swift_release();
    sub_21FAAEAF8(&qword_255540860, &qword_255540858, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9730], MEMORY[0x24BDB9740]);
    v58 = v72;
    v25 = sub_21FC5B280();
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v58);
  }
  *v73 = v25;
}

void sub_21FAF460C()
{
  uint64_t (*v0)(void);
  uint64_t (*v1)(void);
  unint64_t v2;
  uint64_t v3;

  if (!qword_255541D88)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_21FA5B0CC(255, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    v1 = MEMORY[0x24BDB9990];
    sub_21FAAE8A8(255, &qword_255541D90, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9990]);
    sub_21FA5B13C((unint64_t *)&qword_25406B910, &qword_25406B918, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    sub_21FAAEAF8(&qword_255541D98, &qword_255541D90, (uint64_t (*)(uint64_t, _QWORD *))v1, MEMORY[0x24BDB9998]);
    v2 = sub_21FC5B100();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_255541D88);
  }
}

uint64_t sub_21FAF4704@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  int v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a3;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553F0D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v7 = v6;
  v43 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v36 - v8;
  sub_21FA5B0CC(0, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v11 = v10;
  v44 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - v12;
  v14 = *a1;
  if (objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus), sel_userStatus) == (id)5)
  {
    v42 = v11;
    if (qword_25406B7F8 != -1)
      swift_once();
    v15 = sub_21FC5AFD4();
    __swift_project_value_buffer(v15, (uint64_t)qword_25406D830);
    v16 = v14;
    v17 = v14;
    v18 = sub_21FC5AFC8();
    v19 = sub_21FC5B97C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v40 = v18;
      v21 = swift_slowAlloc();
      v39 = v20;
      v22 = (uint8_t *)v21;
      v38 = swift_slowAlloc();
      v47 = v38;
      v41 = v3;
      *(_DWORD *)v22 = 136315138;
      v36 = v22 + 4;
      v37 = v22;
      v46 = (uint64_t)v14;
      v23 = v14;
      v24 = v14;
      sub_21FA2CDB4();
      sub_21FC5BE08();
      v25 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_21FC5BAF0();
      swift_unknownObjectRelease();
      v26 = sub_21FC5B64C();
      v28 = v27;

      v46 = sub_21FABDCF8(v26, v28, &v47);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      v29 = v40;
      v30 = v37;
      _os_log_impl(&dword_21FA27000, v40, (os_log_type_t)v39, "ClinicalSharingSyncTask: Error searching for or updating DocumentReference while deleting the account, ignoring. Error: %s", v37, 0xCu);
      v31 = v38;
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v31, -1, -1);
      MEMORY[0x2207D105C](v30, -1, -1);

    }
    else
    {

    }
    v46 = a2;
    type metadata accessor for ClinicalSharingSyncContext();
    swift_retain();
    sub_21FC5B22C();
    sub_21FA2CDB4();
    sub_21FC5B208();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v7);
    sub_21FA5B13C((unint64_t *)&qword_25553F0E8, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
    v34 = v42;
    v35 = sub_21FC5B280();
    result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v13, v34);
    *v45 = v35;
  }
  else
  {
    v32 = v14;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_21FAF4AEC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];

  v18[0] = a3;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553F0D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - v8;
  v10 = MEMORY[0x24BDBA1B0];
  sub_21FA5B0CC(0, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v18 - v14;
  sub_21FAD2198(*a1);
  v18[1] = a2;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_21FC5B22C();
  sub_21FA2CDB4();
  sub_21FC5B208();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_21FA5B13C((unint64_t *)&qword_25553F0E8, (unint64_t *)&qword_25553F0E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v10, MEMORY[0x24BDBA1D0]);
  v16 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)v18[0] = v16;
  return result;
}

uint64_t sub_21FAF4C7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21FAF4CA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21FAF4CC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_21FA598A4(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_21FAF4CCC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_21FAF4704(a1, v2, a2);
}

uint64_t sub_21FAF4CE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_21FAD0464(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_21FAF4CEC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FAF4AEC(a1, v2, a2);
}

uint64_t PBDeleteBlob.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBDeleteBlob, &qword_25553D710, &qword_255541F58, a1);
}

uint64_t type metadata accessor for PBDeleteBlob(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542A00);
}

uint64_t PBDeleteBlob.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBDeleteBlob, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FB03D10);
}

uint64_t PBDeleteBlob.revocationAuthorization.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlob._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB03D10(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
  v12 = type metadata accessor for PBRevocationAuthorization();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_endAccess();
  return swift_release();
}

uint64_t PBBlobPushResult.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF830C(type metadata accessor for PBBlobPushResult, a1);
}

uint64_t PBPushBlobsRequest.blobs.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF9128(&qword_255542058, type metadata accessor for PBBlobs, type metadata accessor for PBPushBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, a1);
}

uint64_t PBPushBlobsRequest.blobs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255542058, type metadata accessor for PBBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB02708(v10, &qword_255542058, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBBlobs);
  v12 = type metadata accessor for PBBlobs(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255542058, type metadata accessor for PBBlobs);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255542058, type metadata accessor for PBBlobs);
  swift_endAccess();
  return swift_release();
}

uint64_t PBBlobs.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBBlobs, a1);
}

void (*PBPushBlobsRequest.blobs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255542058, type metadata accessor for PBBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBBlobs(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255542058, type metadata accessor for PBBlobs);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255542058, type metadata accessor for PBBlobs);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobs);
  }
  return sub_21FAF5258;
}

void sub_21FAF5258(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBPushBlobsRequest.blobs.setter, type metadata accessor for PBBlobs);
}

BOOL PBPushBlobsRequest.hasBlobs.getter()
{
  return sub_21FAF57D4(&qword_255542058, type metadata accessor for PBBlobs, type metadata accessor for PBPushBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs);
}

Swift::Void __swiftcall PBPushBlobsRequest.clearBlobs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255542058, type metadata accessor for PBBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB02708(v5, &qword_255542058, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBBlobs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255542058, type metadata accessor for PBBlobs);
  swift_endAccess();
  swift_release();
}

uint64_t PBPushBlobsRequest.blobAuth.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF9888(type metadata accessor for PBPushBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth, a1);
}

uint64_t PBPushBlobsRequest.blobAuth.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB02708(v10, &qword_255542058, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBBlobAuth);
  v12 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255542068, type metadata accessor for PBBlobAuth);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return swift_release();
}

uint64_t PBBlobAuth.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = sub_21FC5ACF8();
  a1[2] = v2;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  type metadata accessor for PBBlobAuth(0);
  return sub_21FC5AD10();
}

void (*PBPushBlobsRequest.blobAuth.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBBlobAuth(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    v9[1] = sub_21FC5ACF8();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_21FAF579C;
}

void sub_21FAF579C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBPushBlobsRequest.blobAuth.setter, type metadata accessor for PBBlobAuth);
}

BOOL PBPushBlobsRequest.hasBlobAuth.getter()
{
  return sub_21FAF57D4(&qword_255542068, type metadata accessor for PBBlobAuth, type metadata accessor for PBPushBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

BOOL sub_21FAF57D4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v16;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - v10;
  v12 = *(_QWORD *)(v4 + *(int *)(a3(0) + 20)) + *a4;
  swift_beginAccess();
  sub_21FA44968(v12, (uint64_t)v11, a1, a2);
  v13 = a2(0);
  v14 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) != 1;
  sub_21FA2D1F8((uint64_t)v11, a1, a2);
  return v14;
}

Swift::Void __swiftcall PBPushBlobsRequest.clearBlobAuth()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB02708(v5, &qword_255542058, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBPushBlobsRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPushBlobsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBPushBlobsRequest, &qword_25553D678, &qword_255541DE0, a1);
}

uint64_t PBBlobAuth.certs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBBlobAuth.certs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PBBlobAuth.certs.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAuth.sig.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_21FA32314(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t PBBlobAuth.sig.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21FA2D770(*(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBBlobAuth.sig.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAuth.alg.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAuth.alg.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PBBlobAuth.alg.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAuth.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBBlobAuth, a1);
}

uint64_t PBBlobAuth.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBBlobAuth);
}

uint64_t (*PBBlobAuth.unknownFields.modify())()
{
  type metadata accessor for PBBlobAuth(0);
  return nullsub_1;
}

uint64_t (*PBBlobs.blobs.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBBlobs, a1);
}

uint64_t PBBlobs.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBBlobs);
}

uint64_t (*PBBlobs.unknownFields.modify())()
{
  type metadata accessor for PBBlobs(0);
  return nullsub_1;
}

uint64_t PBBlob.id.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBBlob);
}

uint64_t PBBlob.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8);
}

void (*PBBlob.id.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAF5CD4;
}

void sub_21FAF5CD4(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8);
}

uint64_t PBBlob.content.getter()
{
  return sub_21FAF9FF8(type metadata accessor for PBBlob);
}

uint64_t PBBlob.content.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFA194(a1, a2, type metadata accessor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8);
}

void (*PBBlob.content.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v5 + 40);
  v3[9] = v6;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FAF5D88;
}

void sub_21FAF5D88(uint64_t *a1, char a2)
{
  sub_21FAFA2E4(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8);
}

uint64_t PBBlob.attributes.getter()
{
  type metadata accessor for PBBlob(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAF5DE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBBlob(0) + 20));
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAF5E40(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlob._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FAFE3C8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  swift_beginAccess();
  *(_QWORD *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlob.attributes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlob._StorageClass(0);
    swift_allocObject();
    v4 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FAFE3C8(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  swift_beginAccess();
  *(_QWORD *)(v5 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*PBBlob.attributes.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 48);
  swift_bridgeObjectRetain();
  return sub_21FAF6024;
}

void sub_21FAF6024(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = *(int *)(v2 + 88);
      v5 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBBlob._StorageClass(0);
      swift_allocObject();
      v6 = (_QWORD *)swift_retain();
      *(_QWORD *)(v5 + v4) = sub_21FAFE3C8(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v7 + 48) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = *(int *)(v2 + 88);
      v9 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBBlob._StorageClass(0);
      swift_allocObject();
      v10 = (_QWORD *)swift_retain();
      *(_QWORD *)(v9 + v8) = sub_21FAFE3C8(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v11 + 48) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBBlob.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6E30(type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t PBBlob.expirationTime.setter(uint64_t a1)
{
  return sub_21FAFC0B8(a1, type metadata accessor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

void (*PBBlob.expirationTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v3[4] = v6;
  v7 = sub_21FC5ACEC();
  v3[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[6] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v3[7] = malloc(v9);
  v10 = malloc(v9);
  v3[8] = v10;
  v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBBlob(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v6, &qword_255542078, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21FC5ACE0();
    sub_21FA2D1F8((uint64_t)v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  return sub_21FAF6318;
}

void sub_21FAF6318(uint64_t a1, char a2)
{
  sub_21FAF7454(a1, a2, (void (*)(void *))PBBlob.expirationTime.setter);
}

BOOL PBBlob.hasExpirationTime.getter()
{
  return sub_21FAF57D4(&qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

Swift::Void __swiftcall PBBlob.clearExpirationTime()()
{
  sub_21FAFC42C(type metadata accessor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t (*PBBlob.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBBlob.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBBlob, &qword_25553D698, &qword_255541E30, a1);
}

uint64_t PBBlobAttribute.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAttribute.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBBlobAttribute.id.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAttribute.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBBlobAttribute.name.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAttribute.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAttribute.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PBBlobAttribute.value.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAttribute.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBBlobAttribute, a1);
}

uint64_t sub_21FAF6504@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PBBlobAttribute.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBBlobAttribute);
}

uint64_t sub_21FAF655C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*PBBlobAttribute.unknownFields.modify())()
{
  type metadata accessor for PBBlobAttribute(0);
  return nullsub_1;
}

uint64_t PBBlobAttribute.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  type metadata accessor for PBBlobAttribute(0);
  return sub_21FC5AD10();
}

uint64_t (*PBPushBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBPushBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBPushBlobsResponse, a1);
}

uint64_t PBPushBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBPushBlobsResponse);
}

uint64_t (*PBPushBlobsResponse.unknownFields.modify())()
{
  type metadata accessor for PBPushBlobsResponse(0);
  return nullsub_1;
}

uint64_t PBPushBlobsResponse.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBPushBlobsResponse, a1);
}

uint64_t sub_21FAF6668@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = MEMORY[0x24BEE4AF8];
  a1(0);
  return sub_21FC5AD10();
}

uint64_t PBBlobPushResult.id.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBBlobPushResult);
}

uint64_t sub_21FAF66B4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21FAF6710@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  *a3 = *(_QWORD *)(v4 + 16);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAF6768(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB0153C(v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPushResult.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB0153C(v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPushResult.id.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAF6980;
}

void sub_21FAF6980(uint64_t *a1, char a2)
{
  sub_21FAF7CCC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlobPushResult._StorageClass, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t PBBlobPushResult.message.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBBlobPushResult);
}

uint64_t sub_21FAF69B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB0153C(v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPushResult.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB0153C(v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPushResult.message.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAF6BC8;
}

void sub_21FAF6BC8(uint64_t *a1, char a2)
{
  sub_21FAF8164(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlobPushResult._StorageClass, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t sub_21FAF6BEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB0153C(v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 48) = v3;
  *(_BYTE *)(v7 + 56) = v4;
  return result;
}

uint64_t PBBlobPushResult.resultCode.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FB0153C(v5, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 48) = v2;
  *(_BYTE *)(v6 + 56) = v3;
  return result;
}

void (*PBBlobPushResult.resultCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FAF6DF8;
}

void sub_21FAF6DF8(uint64_t *a1, char a2)
{
  sub_21FAF8598(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlobPushResult._StorageClass, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t PBBlobPushResult.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6E30(type metadata accessor for PBBlobPushResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t sub_21FAF6E30@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - v9;
  v11 = *(_QWORD *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v10, &qword_255542078, v7);
  v12 = sub_21FC5ACEC();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a3, v10, v12);
  sub_21FC5ACE0();
  return sub_21FA2D1F8((uint64_t)v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

uint64_t sub_21FAF6F68@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - v10;
  v12 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20)) + *a3;
  swift_beginAccess();
  sub_21FA44968(v12, (uint64_t)v11, &qword_255542078, v8);
  v13 = sub_21FC5ACEC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v11, v13);
  sub_21FC5ACE0();
  return sub_21FA2D1F8((uint64_t)v11, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

uint64_t sub_21FAF70A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = sub_21FC5ACEC();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  return a5(v9);
}

uint64_t PBBlobPushResult.expirationTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - v7;
  v9 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB0153C(v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  v12 = sub_21FC5ACEC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v8, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255542078, v13);
  v15 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v15, &qword_255542078, v13);
  swift_endAccess();
  return swift_release();
}

void (*PBBlobPushResult.expirationTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v3[4] = v6;
  v7 = sub_21FC5ACEC();
  v3[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[6] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v3[7] = malloc(v9);
  v10 = malloc(v9);
  v3[8] = v10;
  v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBBlobPushResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v6, &qword_255542078, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21FC5ACE0();
    sub_21FA2D1F8((uint64_t)v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  return sub_21FAF7448;
}

void sub_21FAF7448(uint64_t a1, char a2)
{
  sub_21FAF7454(a1, a2, (void (*)(void *))PBBlobPushResult.expirationTime.setter);
}

void sub_21FAF7454(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 56);
  v6 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v7 = v4[5];
    v8 = v4[6];
    v9 = (void *)v4[4];
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 56), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    v9 = (void *)v4[4];
    a3(*(void **)(*(_QWORD *)a1 + 64));
  }
  free(v6);
  free(v5);
  free(v9);
  free(v4);
}

BOOL PBBlobPushResult.hasExpirationTime.getter()
{
  return sub_21FAF57D4(&qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], type metadata accessor for PBBlobPushResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

Swift::Void __swiftcall PBBlobPushResult.clearExpirationTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - v2;
  v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB0153C(v5, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = sub_21FC5ACEC();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v9 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v9, &qword_255542078, v8);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBBlobPushResult.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobPushResult.ResultCode.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = 1;
  switch(result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      break;
    case 5:
      result = 4;
      break;
    case 6:
      result = 5;
      break;
    case 7:
      result = 6;
      break;
    default:
      v2 = 0;
      break;
  }
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobPushResult.ResultCode.rawValue.getter()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    return qword_21FC66310[result];
  return result;
}

uint64_t sub_21FAF770C()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    return qword_21FC66310[result];
  return result;
}

uint64_t sub_21FAF772C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobPushResult.ResultCode.init(rawValue:)(*a1, a2);
}

void sub_21FAF7734(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8) == 1)
    v2 = qword_21FC66310[v2];
  *a1 = v2;
}

uint64_t sub_21FAF775C()
{
  sub_21FB0C65C();
  return sub_21FC5AD7C();
}

BOOL sub_21FAF7798(uint64_t a1, uint64_t a2)
{
  return sub_21FA2E04C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t PBBlobPushResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBBlobPushResult, &qword_25553D6B8, &qword_255541E80, a1);
}

void sub_21FAF77D8()
{
  qword_255541DA8 = (uint64_t)&unk_24E480A38;
}

uint64_t static PBBlobPushResult.ResultCode.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D650);
}

uint64_t static PBBlobPushResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D650, &qword_255541DA8);
}

uint64_t (*static PBBlobPushResult.ResultCode.allCases.modify())()
{
  if (qword_25553D650 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FAF7890@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D650, &qword_255541DA8, a1);
}

uint64_t (*PBPullBlobsRequest.ids.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsRequest.healthInstituteID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPullBlobsRequest.healthInstituteID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBPullBlobsRequest.healthInstituteID.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBPullBlobsRequest(0) + 24);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBPullBlobsRequest.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBPullBlobsRequest(0) + 24);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBPullBlobsRequest.unknownFields.modify())()
{
  type metadata accessor for PBPullBlobsRequest(0);
  return nullsub_1;
}

uint64_t PBPullBlobsRequest.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for PBPullBlobsRequest(0);
  return sub_21FC5AD10();
}

uint64_t (*PBPullBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBPullBlobsResponse, a1);
}

uint64_t PBPullBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBPullBlobsResponse);
}

uint64_t (*PBPullBlobsResponse.unknownFields.modify())()
{
  type metadata accessor for PBPullBlobsResponse(0);
  return nullsub_1;
}

uint64_t PBPullBlobsResponse.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBPullBlobsResponse, a1);
}

uint64_t PBBlobPullResult.id.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBBlobPullResult);
}

uint64_t sub_21FAF7A90(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB0153C(v6, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPullResult.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB0153C(v6, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPullResult.id.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAF7CA8;
}

void sub_21FAF7CA8(uint64_t *a1, char a2)
{
  sub_21FAF7CCC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlobPullResult._StorageClass, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
}

void sub_21FAF7CCC(uint64_t *a1, char a2, void (*a3)(_QWORD), unint64_t *a4, uint64_t (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = *a1;
  v11 = *(_QWORD *)(*a1 + 72);
  v12 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v21 = v11;
      v13 = *(int *)(v10 + 96);
      v14 = *(_QWORD *)(v10 + 88);
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = sub_21FB0153C(v15, a4, a5, a6);
      v11 = v21;
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v10 + 88) + *(int *)(v10 + 96));
    swift_beginAccess();
    *(_QWORD *)(v16 + 16) = v11;
    *(_QWORD *)(v16 + 24) = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = *(int *)(v10 + 96);
      v22 = v11;
      v18 = *(_QWORD *)(v10 + 88);
      a3(0);
      swift_allocObject();
      v19 = swift_retain();
      *(_QWORD *)(v18 + v17) = sub_21FB0153C(v19, a4, a5, a6);
      v11 = v22;
      swift_release();
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v10 + 88) + *(int *)(v10 + 96));
    swift_beginAccess();
    *(_QWORD *)(v20 + 16) = v11;
    *(_QWORD *)(v20 + 24) = v12;
  }
  swift_bridgeObjectRelease();
  free((void *)v10);
}

uint64_t PBBlobPullResult.message.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBBlobPullResult);
}

uint64_t sub_21FAF7E74(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21FAF7ED0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 40);
  *a3 = *(_QWORD *)(v4 + 32);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FAF7F28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB0153C(v6, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPullResult.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB0153C(v6, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPullResult.message.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAF8140;
}

void sub_21FAF8140(uint64_t *a1, char a2)
{
  sub_21FAF8164(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlobPullResult._StorageClass, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
}

void sub_21FAF8164(uint64_t *a1, char a2, void (*a3)(_QWORD), unint64_t *a4, uint64_t (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = *a1;
  v11 = *(_QWORD *)(*a1 + 72);
  v12 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v21 = v11;
      v13 = *(int *)(v10 + 96);
      v14 = *(_QWORD *)(v10 + 88);
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = sub_21FB0153C(v15, a4, a5, a6);
      v11 = v21;
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v10 + 88) + *(int *)(v10 + 96));
    swift_beginAccess();
    *(_QWORD *)(v16 + 32) = v11;
    *(_QWORD *)(v16 + 40) = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = *(int *)(v10 + 96);
      v22 = v11;
      v18 = *(_QWORD *)(v10 + 88);
      a3(0);
      swift_allocObject();
      v19 = swift_retain();
      *(_QWORD *)(v18 + v17) = sub_21FB0153C(v19, a4, a5, a6);
      v11 = v22;
      swift_release();
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v10 + 88) + *(int *)(v10 + 96));
    swift_beginAccess();
    *(_QWORD *)(v20 + 32) = v11;
    *(_QWORD *)(v20 + 40) = v12;
  }
  swift_bridgeObjectRelease();
  free((void *)v10);
}

uint64_t PBBlobPullResult.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF830C(type metadata accessor for PBBlobPullResult, a1);
}

uint64_t sub_21FAF830C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(_QWORD *)(v2 + *(int *)(a1(0) + 20));
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(v4 + 48);
  *(_BYTE *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_21FAF8368(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB0153C(v6, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 48) = v3;
  *(_BYTE *)(v7 + 56) = v4;
  return result;
}

uint64_t PBBlobPullResult.resultCode.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FB0153C(v5, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 48) = v2;
  *(_BYTE *)(v6 + 56) = v3;
  return result;
}

void (*PBBlobPullResult.resultCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FAF8574;
}

void sub_21FAF8574(uint64_t *a1, char a2)
{
  sub_21FAF8598(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlobPullResult._StorageClass, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
}

void sub_21FAF8598(uint64_t *a1, char a2, void (*a3)(_QWORD), unint64_t *a4, uint64_t (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v11 = *a1;
  v12 = *(_QWORD *)(*a1 + 72);
  v13 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) != 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = *(int *)(v11 + 84);
      v16 = *(_QWORD *)(v11 + 88);
      a3(0);
      swift_allocObject();
      v17 = swift_retain();
      *(_QWORD *)(v16 + v15) = sub_21FB0153C(v17, a4, a5, a6);
LABEL_6:
      swift_release();
    }
  }
  else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = *(int *)(v11 + 84);
    v19 = *(_QWORD *)(v11 + 88);
    a3(0);
    swift_allocObject();
    v20 = swift_retain();
    *(_QWORD *)(v19 + v18) = sub_21FB0153C(v20, a4, a5, a6);
    goto LABEL_6;
  }
  v21 = *(_QWORD *)(*(_QWORD *)(v11 + 88) + *(int *)(v11 + 84));
  swift_beginAccess();
  *(_QWORD *)(v21 + 48) = v12;
  *(_BYTE *)(v21 + 56) = v13;
  free((void *)v11);
}

uint64_t PBBlobPullResult.blob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255542090, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBBlobPullResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255542090, type metadata accessor for PBBlob);
  v7 = type metadata accessor for PBBlob(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBBlob);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D698 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255541E30;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255542090, type metadata accessor for PBBlob);
}

uint64_t sub_21FAF8858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255542090, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBBlobPullResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255542090, type metadata accessor for PBBlob);
  v8 = type metadata accessor for PBBlob(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBBlob);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D698 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255541E30;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255542090, type metadata accessor for PBBlob);
}

uint64_t PBBlobPullResult.blob.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255542090, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB0153C(v10, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBBlob);
  v12 = type metadata accessor for PBBlob(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255542090, type metadata accessor for PBBlob);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255542090, type metadata accessor for PBBlob);
  swift_endAccess();
  return swift_release();
}

void (*PBBlobPullResult.blob.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255542090, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBBlob(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBBlobPullResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255542090, type metadata accessor for PBBlob);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D698 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255541E30;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255542090, type metadata accessor for PBBlob);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlob);
  }
  return sub_21FAF8D14;
}

void sub_21FAF8D14(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBBlobPullResult.blob.setter, type metadata accessor for PBBlob);
}

BOOL PBBlobPullResult.hasBlob.getter()
{
  return sub_21FAF57D4(&qword_255542090, type metadata accessor for PBBlob, type metadata accessor for PBBlobPullResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
}

Swift::Void __swiftcall PBBlobPullResult.clearBlob()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255542090, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB0153C(v5, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBBlob(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255542090, type metadata accessor for PBBlob);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBBlobPullResult.unknownFields.modify())()
{
  return nullsub_1;
}

void PBBlobPullResult.ResultCode.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t PBBlobPullResult.ResultCode.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = 1;
  switch(result)
  {
    case 0:
      break;
    case 4:
      result = 1;
      break;
    case 5:
      result = 2;
      break;
    case 7:
      result = 3;
      break;
    default:
      v2 = 0;
      break;
  }
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobPullResult.ResultCode.rawValue.getter()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    return qword_21FC66348[result];
  return result;
}

uint64_t sub_21FAF8F50()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    return qword_21FC66348[result];
  return result;
}

uint64_t sub_21FAF8F70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobPullResult.ResultCode.init(rawValue:)(*a1, a2);
}

void sub_21FAF8F78(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8) == 1)
    v2 = qword_21FC66348[v2];
  *a1 = v2;
}

uint64_t sub_21FAF8F9C()
{
  sub_21FB0C618();
  return sub_21FC5AD7C();
}

BOOL sub_21FAF8FD4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
    v2 = qword_21FC66348[v2];
  v3 = *a2;
  if (*((_BYTE *)a2 + 8))
    v3 = qword_21FC66348[v3];
  return v2 == v3;
}

uint64_t PBBlobPullResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBBlobPullResult, &qword_25553D6E0, &qword_255541EE8, a1);
}

void sub_21FAF9030()
{
  qword_255541DB0 = (uint64_t)&unk_24E480AC8;
}

uint64_t static PBBlobPullResult.ResultCode.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D658);
}

uint64_t static PBBlobPullResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D658, &qword_255541DB0);
}

uint64_t (*static PBBlobPullResult.ResultCode.allCases.modify())()
{
  if (qword_25553D658 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21FAF90E8@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D658, &qword_255541DB0, a1);
}

uint64_t PBDeleteBlobsRequest.deleteBlobs.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF9128(&qword_2555420A0, type metadata accessor for PBDeleteBlobs, type metadata accessor for PBDeleteBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, a1);
}

uint64_t sub_21FAF9128@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - v12;
  v14 = *(_QWORD *)(v5 + *(int *)(a3(0) + 20)) + *a4;
  swift_beginAccess();
  sub_21FA44968(v14, (uint64_t)v13, a1, a2);
  v15 = a2(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) != 1)
    return sub_21FA2D23C((uint64_t)v13, (uint64_t)a5, a2);
  *a5 = MEMORY[0x24BEE4AF8];
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v13, a1, a2);
}

uint64_t sub_21FAF925C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t (*a4)(_QWORD)@<X5>, _QWORD *a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - v13;
  v15 = *(_QWORD *)(a1 + *(int *)(a4(0) + 20)) + *a5;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, a2, a3);
  v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) != 1)
    return sub_21FA2D23C((uint64_t)v14, (uint64_t)a6, a3);
  *a6 = MEMORY[0x24BEE4AF8];
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v14, a2, a3);
}

uint64_t PBDeleteBlobsRequest.deleteBlobs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB02708(v10, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBDeleteBlobs);
  v12 = type metadata accessor for PBDeleteBlobs(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  swift_endAccess();
  return swift_release();
}

uint64_t PBDeleteBlobs.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBDeleteBlobs, a1);
}

void (*PBDeleteBlobsRequest.deleteBlobs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDeleteBlobs(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDeleteBlobs);
  }
  return sub_21FAF96CC;
}

void sub_21FAF96CC(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBDeleteBlobsRequest.deleteBlobs.setter, type metadata accessor for PBDeleteBlobs);
}

BOOL PBDeleteBlobsRequest.hasDeleteBlobs.getter()
{
  return sub_21FAF57D4(&qword_2555420A0, type metadata accessor for PBDeleteBlobs, type metadata accessor for PBDeleteBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs);
}

Swift::Void __swiftcall PBDeleteBlobsRequest.clearDeleteBlobs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB02708(v5, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBDeleteBlobs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  swift_endAccess();
  swift_release();
}

uint64_t PBDeleteBlobsRequest.blobAuth.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF9888(type metadata accessor for PBDeleteBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth, a1);
}

uint64_t sub_21FAF9888@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - v8;
  v10 = *(_QWORD *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  v11 = type metadata accessor for PBBlobAuth(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1)
    return sub_21FA2D23C((uint64_t)v9, (uint64_t)a3, type metadata accessor for PBBlobAuth);
  *a3 = MEMORY[0x24BEE4AF8];
  a3[1] = sub_21FC5ACF8();
  a3[2] = v12;
  a3[3] = 0;
  a3[4] = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
}

uint64_t PBDeleteBlobsRequest.blobAuth.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB02708(v10, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBBlobAuth);
  v12 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255542068, type metadata accessor for PBBlobAuth);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return swift_release();
}

void (*PBDeleteBlobsRequest.blobAuth.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBBlobAuth(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    v9[1] = sub_21FC5ACF8();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_21FAF9D1C;
}

void sub_21FAF9D1C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBDeleteBlobsRequest.blobAuth.setter, type metadata accessor for PBBlobAuth);
}

BOOL PBDeleteBlobsRequest.hasBlobAuth.getter()
{
  return sub_21FAF57D4(&qword_255542068, type metadata accessor for PBBlobAuth, type metadata accessor for PBDeleteBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

Swift::Void __swiftcall PBDeleteBlobsRequest.clearBlobAuth()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB02708(v5, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBDeleteBlobsRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlobsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBDeleteBlobsRequest, &qword_25553D6F8, &qword_255541F20, a1);
}

uint64_t (*PBDeleteBlobs.deleteBlobs.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlobs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBDeleteBlobs, a1);
}

uint64_t PBDeleteBlobs.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBDeleteBlobs);
}

uint64_t (*PBDeleteBlobs.unknownFields.modify())()
{
  type metadata accessor for PBDeleteBlobs(0);
  return nullsub_1;
}

uint64_t PBDeleteBlob.id.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBDeleteBlob);
}

void (*PBDeleteBlob.id.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAF9FD8;
}

void sub_21FAF9FD8(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FB03D10);
}

uint64_t PBDeleteBlob.deletionCommitment.getter()
{
  return sub_21FAF9FF8(type metadata accessor for PBDeleteBlob);
}

uint64_t sub_21FAF9FF8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 32);
  sub_21FA32314(v3, *(_QWORD *)(v2 + 40));
  return v3;
}

uint64_t sub_21FAFA058@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v4 + 40);
  *a3 = v5;
  a3[1] = v6;
  return sub_21FA32314(v5, v6);
}

uint64_t sub_21FAFA0B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v10 = *a1;
  v11 = a1[1];
  v12 = *(int *)(a5(0) + 20);
  sub_21FA32314(v10, v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(a2 + v12) = a7(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(a2 + v12);
  swift_beginAccess();
  v15 = *(_QWORD *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v14 + 32) = v10;
  *(_QWORD *)(v14 + 40) = v11;
  return sub_21FA2D770(v15, v16);
}

uint64_t PBDeleteBlob.deletionCommitment.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFA194(a1, a2, type metadata accessor for PBDeleteBlob, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FB03D10);
}

uint64_t sub_21FAFA194(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a5(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(v5 + v10);
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 32);
  v14 = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  return sub_21FA2D770(v13, v14);
}

void (*PBDeleteBlob.deletionCommitment.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v5 + 40);
  v3[9] = v6;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FAFA2D0;
}

void sub_21FAFA2D0(uint64_t *a1, char a2)
{
  sub_21FAFA2E4(a1, a2, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FB03D10);
}

void sub_21FAFA2E4(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    sub_21FA32314(*(_QWORD *)(*a1 + 72), v8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = a4(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 32);
    v14 = *(_QWORD *)(v12 + 40);
    *(_QWORD *)(v12 + 32) = v7;
    *(_QWORD *)(v12 + 40) = v8;
    sub_21FA2D770(v13, v14);
    v15 = *(_QWORD *)(v6 + 72);
    v16 = *(_QWORD *)(v6 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = *(int *)(v6 + 96);
      v18 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v19 = swift_retain();
      *(_QWORD *)(v18 + v17) = a4(v19);
      swift_release();
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    v15 = *(_QWORD *)(v20 + 32);
    v16 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v20 + 32) = v7;
    *(_QWORD *)(v20 + 40) = v8;
  }
  sub_21FA2D770(v15, v16);
  free((void *)v6);
}

uint64_t PBDeleteBlob.revocationAuthorization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBDeleteBlob(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  v7 = type metadata accessor for PBRevocationAuthorization();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
  *(_QWORD *)a1 = sub_21FC5ACF8();
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v5, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
}

void (*PBDeleteBlob.revocationAuthorization.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBRevocationAuthorization();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBDeleteBlob(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = sub_21FC5ACF8();
    v9[1] = v11;
    v9[2] = 0;
    *((_BYTE *)v9 + 24) = 1;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    v9[6] = 0;
    v9[7] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
  }
  return sub_21FAFA720;
}

void sub_21FAFA720(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBDeleteBlob.revocationAuthorization.setter, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
}

BOOL PBDeleteBlob.hasRevocationAuthorization.getter()
{
  return sub_21FAF57D4((unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, type metadata accessor for PBDeleteBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization);
}

Swift::Void __swiftcall PBDeleteBlob.clearRevocationAuthorization()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlob._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB03D10(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBRevocationAuthorization();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBDeleteBlob.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBDeleteBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBDeleteBlobsResponse, a1);
}

uint64_t PBDeleteBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBDeleteBlobsResponse);
}

uint64_t (*PBDeleteBlobsResponse.unknownFields.modify())()
{
  type metadata accessor for PBDeleteBlobsResponse(0);
  return nullsub_1;
}

uint64_t PBDeleteBlobsResponse.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBDeleteBlobsResponse, a1);
}

uint64_t (*PBBlobDeleteResult.id.modify())()
{
  return nullsub_1;
}

uint64_t (*PBBlobDeleteResult.message.modify())()
{
  return nullsub_1;
}

void PBBlobDeleteResult.resultCode.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBBlobDeleteResult.resultCode.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t (*PBBlobDeleteResult.resultCode.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobDeleteResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBBlobDeleteResult, a1);
}

uint64_t PBBlobDeleteResult.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBBlobDeleteResult);
}

uint64_t (*PBBlobDeleteResult.unknownFields.modify())()
{
  type metadata accessor for PBBlobDeleteResult(0);
  return nullsub_1;
}

uint64_t PBBlobDeleteResult.ResultCode.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = 1;
  switch(result)
  {
    case 0:
      break;
    case 2:
      result = 1;
      break;
    case 3:
      result = 2;
      break;
    case 4:
      result = 3;
      break;
    case 5:
      result = 4;
      break;
    default:
      v2 = 0;
      break;
  }
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobDeleteResult.ResultCode.rawValue.getter()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    return qword_21FC66368[result];
  return result;
}

uint64_t sub_21FAFAA30()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    return qword_21FC66368[result];
  return result;
}

uint64_t sub_21FAFAA50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobDeleteResult.ResultCode.init(rawValue:)(*a1, a2);
}

void sub_21FAFAA58(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8) == 1)
    v2 = qword_21FC66368[v2];
  *a1 = v2;
}

uint64_t sub_21FAFAA7C()
{
  sub_21FB09464();
  return sub_21FC5AD7C();
}

BOOL sub_21FAFAAB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
    v2 = qword_21FC66368[v2];
  v3 = *a2;
  if (*((_BYTE *)a2 + 8))
    v3 = qword_21FC66368[v3];
  return v2 == v3;
}

uint64_t PBBlobDeleteResult.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  type metadata accessor for PBBlobDeleteResult(0);
  return sub_21FC5AD10();
}

void sub_21FAFAB34()
{
  qword_255541DB8 = (uint64_t)&unk_24E480B28;
}

uint64_t static PBBlobDeleteResult.ResultCode.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D660);
}

uint64_t static PBBlobDeleteResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D660, &qword_255541DB8);
}

uint64_t (*static PBBlobDeleteResult.ResultCode.allCases.modify())()
{
  if (qword_25553D660 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FAFABEC@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D660, &qword_255541DB8, a1);
}

uint64_t PBTouchBlobsRequest.touchBlobs.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF9128(&qword_2555420B8, type metadata accessor for PBTouchBlobs, type metadata accessor for PBTouchBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, a1);
}

uint64_t PBTouchBlobsRequest.touchBlobs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555420B8, type metadata accessor for PBTouchBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB02708(v10, &qword_2555420B8, type metadata accessor for PBTouchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBTouchBlobs);
  v12 = type metadata accessor for PBTouchBlobs(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  swift_endAccess();
  return swift_release();
}

uint64_t PBTouchBlobs.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBTouchBlobs, a1);
}

void (*PBTouchBlobsRequest.touchBlobs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555420B8, type metadata accessor for PBTouchBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBTouchBlobs(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBTouchBlobs);
  }
  return sub_21FAFAF64;
}

void sub_21FAFAF64(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBTouchBlobsRequest.touchBlobs.setter, type metadata accessor for PBTouchBlobs);
}

BOOL PBTouchBlobsRequest.hasTouchBlobs.getter()
{
  return sub_21FAF57D4(&qword_2555420B8, type metadata accessor for PBTouchBlobs, type metadata accessor for PBTouchBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs);
}

Swift::Void __swiftcall PBTouchBlobsRequest.clearTouchBlobs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555420B8, type metadata accessor for PBTouchBlobs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB02708(v5, &qword_2555420B8, type metadata accessor for PBTouchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBTouchBlobs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  swift_endAccess();
  swift_release();
}

uint64_t PBTouchBlobsRequest.blobAuth.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF9888(type metadata accessor for PBTouchBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth, a1);
}

uint64_t PBTouchBlobsRequest.blobAuth.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB02708(v10, &qword_2555420B8, type metadata accessor for PBTouchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBBlobAuth);
  v12 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255542068, type metadata accessor for PBBlobAuth);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return swift_release();
}

void (*PBTouchBlobsRequest.blobAuth.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBBlobAuth(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    v9[1] = sub_21FC5ACF8();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_21FAFB45C;
}

void sub_21FAFB45C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBTouchBlobsRequest.blobAuth.setter, type metadata accessor for PBBlobAuth);
}

BOOL PBTouchBlobsRequest.hasBlobAuth.getter()
{
  return sub_21FAF57D4(&qword_255542068, type metadata accessor for PBBlobAuth, type metadata accessor for PBTouchBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

Swift::Void __swiftcall PBTouchBlobsRequest.clearBlobAuth()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB02708(v5, &qword_2555420B8, type metadata accessor for PBTouchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBTouchBlobsRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlobsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBTouchBlobsRequest, &qword_25553D738, &qword_255541FC0, a1);
}

uint64_t (*PBTouchBlobs.touchBlobs.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlobs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBTouchBlobs, a1);
}

uint64_t PBTouchBlobs.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBTouchBlobs);
}

uint64_t (*PBTouchBlobs.unknownFields.modify())()
{
  type metadata accessor for PBTouchBlobs(0);
  return nullsub_1;
}

uint64_t PBTouchBlob.id.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBTouchBlob);
}

uint64_t PBTouchBlob.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBTouchBlob, (void (*)(_QWORD))type metadata accessor for PBTouchBlob._StorageClass, sub_21FB06BB0);
}

void (*PBTouchBlob.id.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBTouchBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAFB734;
}

void sub_21FAFB734(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBTouchBlob._StorageClass, sub_21FB06BB0);
}

uint64_t PBTouchBlob.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6E30(type metadata accessor for PBTouchBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t PBTouchBlob.expirationTime.setter(uint64_t a1)
{
  return sub_21FAFC0B8(a1, type metadata accessor for PBTouchBlob, (void (*)(_QWORD))type metadata accessor for PBTouchBlob._StorageClass, sub_21FB06BB0, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

void (*PBTouchBlob.expirationTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v3[4] = v6;
  v7 = sub_21FC5ACEC();
  v3[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[6] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v3[7] = malloc(v9);
  v10 = malloc(v9);
  v3[8] = v10;
  v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBTouchBlob(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v6, &qword_255542078, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21FC5ACE0();
    sub_21FA2D1F8((uint64_t)v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  return sub_21FAFB8E0;
}

void sub_21FAFB8E0(uint64_t a1, char a2)
{
  sub_21FAF7454(a1, a2, (void (*)(void *))PBTouchBlob.expirationTime.setter);
}

BOOL PBTouchBlob.hasExpirationTime.getter()
{
  return sub_21FAF57D4(&qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], type metadata accessor for PBTouchBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

Swift::Void __swiftcall PBTouchBlob.clearExpirationTime()()
{
  sub_21FAFC42C(type metadata accessor for PBTouchBlob, (void (*)(_QWORD))type metadata accessor for PBTouchBlob._StorageClass, sub_21FB06BB0, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t (*PBTouchBlob.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlob.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBTouchBlob, &qword_25553D750, &qword_255541FF8, a1);
}

uint64_t (*PBTouchBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBTouchBlobsResponse, a1);
}

uint64_t PBTouchBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBTouchBlobsResponse);
}

uint64_t (*PBTouchBlobsResponse.unknownFields.modify())()
{
  type metadata accessor for PBTouchBlobsResponse(0);
  return nullsub_1;
}

uint64_t PBTouchBlobsResponse.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBTouchBlobsResponse, a1);
}

uint64_t PBBlobTouchResult.id.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_21FAFB9D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *a1;
  v10 = a1[1];
  v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(a2 + v12) = a7(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(a2 + v12);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobTouchResult.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBBlobTouchResult, (void (*)(_QWORD))type metadata accessor for PBBlobTouchResult._StorageClass, sub_21FB07E5C);
}

uint64_t sub_21FAFBAB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a5(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(v5 + v10);
  swift_beginAccess();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobTouchResult.id.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FAFBBF8;
}

void sub_21FAFBBF8(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBBlobTouchResult._StorageClass, sub_21FB07E5C);
}

void sub_21FAFBC0C(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = a4(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v7;
    *(_QWORD *)(v12 + 24) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = *(int *)(v6 + 96);
      v14 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = a4(v15);
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v16 + 16) = v7;
    *(_QWORD *)(v16 + 24) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBBlobTouchResult.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 32);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FAFBDC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobTouchResult._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB07E5C(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 32) = v3;
  *(_BYTE *)(v7 + 40) = v4;
  return result;
}

uint64_t PBBlobTouchResult.resultCode.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobTouchResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FB07E5C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 32) = v2;
  *(_BYTE *)(v6 + 40) = v3;
  return result;
}

void (*PBBlobTouchResult.resultCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FAFBFA4;
}

void sub_21FAFBFA4(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBBlobTouchResult._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_21FB07E5C(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v10 + 32) = v4;
  *(_BYTE *)(v10 + 40) = v5;
  free((void *)v3);
}

uint64_t PBBlobTouchResult.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6E30(type metadata accessor for PBBlobTouchResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t PBBlobTouchResult.expirationTime.setter(uint64_t a1)
{
  return sub_21FAFC0B8(a1, type metadata accessor for PBBlobTouchResult, (void (*)(_QWORD))type metadata accessor for PBBlobTouchResult._StorageClass, sub_21FB07E5C, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t sub_21FAFC0B8(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  v17 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v18 = swift_retain();
    *(_QWORD *)(v5 + v17) = a4(v18);
    swift_release();
  }
  v19 = *(_QWORD *)(v5 + v17);
  v20 = sub_21FC5ACEC();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v22 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v16, a1, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v20);
  sub_21FA2D280((uint64_t)v16, (uint64_t)v14, &qword_255542078, v21);
  v23 = v19 + *a5;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v14, v23, &qword_255542078, v21);
  swift_endAccess();
  return swift_release();
}

void (*PBBlobTouchResult.expirationTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v3[4] = v6;
  v7 = sub_21FC5ACEC();
  v3[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[6] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v3[7] = malloc(v9);
  v10 = malloc(v9);
  v3[8] = v10;
  v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v6, &qword_255542078, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21FC5ACE0();
    sub_21FA2D1F8((uint64_t)v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  return sub_21FAFC3D8;
}

void sub_21FAFC3D8(uint64_t a1, char a2)
{
  sub_21FAF7454(a1, a2, (void (*)(void *))PBBlobTouchResult.expirationTime.setter);
}

BOOL PBBlobTouchResult.hasExpirationTime.getter()
{
  return sub_21FAF57D4(&qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], type metadata accessor for PBBlobTouchResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

Swift::Void __swiftcall PBBlobTouchResult.clearExpirationTime()()
{
  sub_21FAFC42C(type metadata accessor for PBBlobTouchResult, (void (*)(_QWORD))type metadata accessor for PBBlobTouchResult._StorageClass, sub_21FB07E5C, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t sub_21FAFC42C(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v19;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - v10;
  v12 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(v4 + v12) = a3(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(v4 + v12);
  v15 = sub_21FC5ACEC();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
  v17 = v14 + *a4;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v11, v17, &qword_255542078, v16);
  swift_endAccess();
  return swift_release();
}

uint64_t (*PBBlobTouchResult.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBBlobTouchResult.ResultCode.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 4;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobTouchResult.ResultCode.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_21FAFC5CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobTouchResult.ResultCode.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FAFC5D4()
{
  sub_21FB0C5D4();
  return sub_21FC5AD7C();
}

uint64_t PBBlobTouchResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBBlobTouchResult, &qword_25553D768, &qword_255542030, a1);
}

void sub_21FAFC630()
{
  qword_255541DC0 = (uint64_t)&unk_24E480B98;
}

uint64_t static PBBlobTouchResult.ResultCode.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D668);
}

uint64_t sub_21FAFC660(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PBBlobTouchResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D668, &qword_255541DC0);
}

uint64_t sub_21FAFC6D4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PBBlobTouchResult.ResultCode.allCases.modify())()
{
  if (qword_25553D668 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FAFC7A4@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D668, &qword_255541DC0, a1);
}

uint64_t sub_21FAFC7C0@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

unint64_t static PBPushBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_21FAFC840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541DC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541DC8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "blobs";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "blob_auth";
  *((_QWORD *)v12 + 1) = 9;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBPushBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D670, (uint64_t)qword_255541DC8, a1);
}

uint64_t sub_21FAFC9C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for PBPushBlobsRequest._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  v2 = type metadata accessor for PBBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  v4 = type metadata accessor for PBBlobAuth(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_255541DE0 = v0;
  return result;
}

uint64_t sub_21FAFCA5C(uint64_t a1)
{
  return sub_21FB02708(a1, &qword_255542058, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t sub_21FAFCA80()
{
  return sub_21FB0293C(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &qword_255542058, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t PBPushBlobsRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FB02708(v2, &qword_255542058, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  swift_retain();
  sub_21FAFCB8C();
  return swift_release();
}

uint64_t sub_21FAFCB8C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBBlobs(0);
        sub_21FA2A08C(&qword_2555409D8, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBBlobAuth(0);
    sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
LABEL_5:
    sub_21FC5AE60();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBPushBlobsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPushBlobsRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FAFCD18);
}

uint64_t sub_21FAFCD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a4;
  v26 = a2;
  v27 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - v8;
  v25 = type metadata accessor for PBBlobAuth(0);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v22 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255542058, type metadata accessor for PBBlobs, v6);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = type metadata accessor for PBBlobs(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_21FA44968(v18, (uint64_t)v13, &qword_255542058, type metadata accessor for PBBlobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21FA2D1F8((uint64_t)v13, &qword_255542058, type metadata accessor for PBBlobs);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBBlobs);
    sub_21FA2A08C(&qword_2555409D8, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v17, type metadata accessor for PBBlobs);
    if (v4)
      return result;
  }
  v20 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v20, (uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v25) == 1)
    return sub_21FA2D1F8((uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  v21 = v22;
  sub_21FA2D23C((uint64_t)v9, v22, type metadata accessor for PBBlobAuth);
  sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
  sub_21FC5AF50();
  return sub_21FA326EC(v21, type metadata accessor for PBBlobAuth);
}

uint64_t static PBPushBlobsRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBPushBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FAFD068) & 1;
}

BOOL sub_21FAFD068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t *v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;

  v56 = a2;
  v53 = type metadata accessor for PBBlobAuth(0);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v47 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t)&v46 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v52 = (uint64_t)&v46 - v10;
  v11 = type metadata accessor for PBBlobs(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v49 = (uint64_t *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_255543808, &qword_255542058, type metadata accessor for PBBlobs);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - v16;
  sub_21FA2D1A0(0, &qword_255542058, type metadata accessor for PBBlobs, v6);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v55 = (uint64_t *)((char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v46 - v21;
  v23 = a1;
  v24 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_21FA44968(v24, (uint64_t)v22, &qword_255542058, type metadata accessor for PBBlobs);
  v25 = v56;
  v26 = v56
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_21FA44968((uint64_t)v22, (uint64_t)v17, &qword_255542058, type metadata accessor for PBBlobs);
  sub_21FA44968(v26, v27, &qword_255542058, type metadata accessor for PBBlobs);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) != 1)
  {
    v36 = v55;
    sub_21FA44968((uint64_t)v17, (uint64_t)v55, &qword_255542058, type metadata accessor for PBBlobs);
    if (v28(v27, 1, v11) != 1)
    {
      v38 = v27;
      v39 = v49;
      sub_21FA2D23C(v38, (uint64_t)v49, type metadata accessor for PBBlobs);
      v40 = *v36;
      v41 = *v39;
      swift_retain();
      swift_retain();
      if ((sub_21FB0DD04(v40, v41) & 1) != 0)
      {
        sub_21FC5AD1C();
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v42 = sub_21FC5B5D4();
        sub_21FA326EC((uint64_t)v39, type metadata accessor for PBBlobs);
        sub_21FA2D1F8((uint64_t)v22, &qword_255542058, type metadata accessor for PBBlobs);
        sub_21FA326EC((uint64_t)v36, type metadata accessor for PBBlobs);
        sub_21FA2D1F8((uint64_t)v17, &qword_255542058, type metadata accessor for PBBlobs);
        if ((v42 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_21FA326EC((uint64_t)v39, type metadata accessor for PBBlobs);
        sub_21FA2D1F8((uint64_t)v22, &qword_255542058, type metadata accessor for PBBlobs);
        sub_21FA326EC((uint64_t)v36, type metadata accessor for PBBlobs);
        sub_21FA2D1F8((uint64_t)v17, &qword_255542058, type metadata accessor for PBBlobs);
      }
LABEL_10:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v22, &qword_255542058, type metadata accessor for PBBlobs);
    sub_21FA326EC((uint64_t)v36, type metadata accessor for PBBlobs);
LABEL_9:
    sub_21FA48E3C((uint64_t)v17, &qword_255543808, &qword_255542058, type metadata accessor for PBBlobs);
    goto LABEL_10;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v22, &qword_255542058, type metadata accessor for PBBlobs);
  if (v28(v27, 1, v11) != 1)
    goto LABEL_9;
  sub_21FA2D1F8((uint64_t)v17, &qword_255542058, type metadata accessor for PBBlobs);
LABEL_4:
  v29 = v23
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  v30 = v52;
  sub_21FA44968(v29, v52, &qword_255542068, type metadata accessor for PBBlobAuth);
  v31 = v25
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  v32 = v54;
  v33 = v54 + *(int *)(v50 + 48);
  sub_21FA44968(v30, v54, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA44968(v31, v33, &qword_255542068, type metadata accessor for PBBlobAuth);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  v35 = v53;
  if (v34(v32, 1, v53) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
    if (v34(v33, 1, v35) == 1)
    {
      sub_21FA2D1F8(v32, &qword_255542068, type metadata accessor for PBBlobAuth);
      return 1;
    }
    goto LABEL_18;
  }
  v43 = v48;
  sub_21FA44968(v32, (uint64_t)v48, &qword_255542068, type metadata accessor for PBBlobAuth);
  if (v34(v33, 1, v35) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
    sub_21FA326EC((uint64_t)v43, type metadata accessor for PBBlobAuth);
LABEL_18:
    sub_21FA48E3C(v32, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
    return 0;
  }
  v44 = v47;
  sub_21FA2D23C(v33, (uint64_t)v47, type metadata accessor for PBBlobAuth);
  v45 = _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(v43, v44);
  swift_release();
  swift_release();
  sub_21FA326EC((uint64_t)v44, type metadata accessor for PBBlobAuth);
  sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA326EC((uint64_t)v43, type metadata accessor for PBBlobAuth);
  sub_21FA2D1F8(v32, &qword_255542068, type metadata accessor for PBBlobAuth);
  return (v45 & 1) != 0;
}

uint64_t PBPushBlobsRequest.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPushBlobsRequest, &qword_2555420E0, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
}

uint64_t sub_21FAFD7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D678, &qword_255541DE0, a2);
}

unint64_t sub_21FAFD7E8()
{
  return 0xD000000000000030;
}

uint64_t sub_21FAFD804()
{
  return PBPushBlobsRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FAFD818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPushBlobsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FAFD82C()
{
  sub_21FA2A08C(&qword_2555437A8, type metadata accessor for PBPushBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
  return sub_21FC5AD70();
}

uint64_t sub_21FAFD87C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D670, (uint64_t)qword_255541DC8, a1);
}

uint64_t sub_21FAFD898()
{
  sub_21FA2A08C(&qword_255542268, type metadata accessor for PBPushBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAFD8D8()
{
  sub_21FA2A08C(&qword_255542268, type metadata accessor for PBPushBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
  return sub_21FC5AEA8();
}

uint64_t sub_21FAFD928(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBPushBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FAFD068) & 1;
}

unint64_t static PBBlobAuth.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_21FAFD96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541DE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541DE8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "certs";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "sig";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "alg";
  *(_QWORD *)(v13 + 8) = 3;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobAuth._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D680, (uint64_t)qword_255541DE8, a1);
}

uint64_t PBBlobAuth.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_21FC5AE3C();
          break;
        case 2:
          sub_21FC5ADF4();
          break;
        case 1:
          sub_21FC5ADD0();
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBBlobAuth.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (result = sub_21FC5AEE4(), !v1))
    __asm { BR              X10 }
  return result;
}

uint64_t PBBlobAuth.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlobAuth, &qword_2555420E8, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
}

uint64_t sub_21FAFDD40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = sub_21FC5ACF8();
  a1[2] = v2;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FAFDD88()
{
  return 0xD000000000000028;
}

uint64_t sub_21FAFDDAC()
{
  return PBBlobAuth.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FAFDDC0()
{
  return PBBlobAuth.traverse<A>(visitor:)();
}

uint64_t sub_21FAFDDD4()
{
  sub_21FA2A08C(&qword_2555437A0, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
  return sub_21FC5AD70();
}

uint64_t sub_21FAFDE24@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D680, (uint64_t)qword_255541DE8, a1);
}

uint64_t sub_21FAFDE40()
{
  sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAFDE80()
{
  sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
  return sub_21FC5AEA8();
}

unint64_t static PBBlobs.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_21FAFDEF0(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255541E00, (uint64_t)"blobs", 5, MEMORY[0x24BE5C318]);
}

uint64_t static PBBlobs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D688, (uint64_t)qword_255541E00, a1);
}

uint64_t PBBlobs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBBlob, &qword_2555420F0, (uint64_t)&protocol conformance descriptor for PBBlob);
}

uint64_t PBBlobs.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBBlob, &qword_2555420F0, (uint64_t)&protocol conformance descriptor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlobs);
}

uint64_t static PBBlobs.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0DD04, type metadata accessor for PBBlobs) & 1;
}

uint64_t PBBlobs.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlobs, &qword_2555420F8, (uint64_t)&protocol conformance descriptor for PBBlobs);
}

unint64_t sub_21FAFDFD0()
{
  return 0xD000000000000025;
}

uint64_t sub_21FAFDFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FAFE000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobs.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FAFE014()
{
  sub_21FA2A08C(&qword_255543798, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
  return sub_21FC5AD70();
}

uint64_t sub_21FAFE064@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D688, (uint64_t)qword_255541E00, a1);
}

uint64_t sub_21FAFE080()
{
  sub_21FA2A08C(&qword_2555409D8, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAFE0C0()
{
  sub_21FA2A08C(&qword_2555409D8, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
  return sub_21FC5AEA8();
}

uint64_t sub_21FAFE110(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0DD04, type metadata accessor for PBBlobs) & 1;
}

unint64_t static PBBlob.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_21FAFE154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541E18);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541E18);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "content";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "attributes";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "expiration_time";
  *((_QWORD *)v16 + 1) = 15;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlob._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D690, (uint64_t)qword_255541E18, a1);
}

uint64_t sub_21FAFE344()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for PBBlob._StorageClass(0);
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = sub_21FC5ACF8();
  v0[5] = v1;
  v0[6] = MEMORY[0x24BEE4AF8];
  v2 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  v3 = sub_21FC5ACEC();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  qword_255541E30 = (uint64_t)v0;
  return result;
}

_QWORD *sub_21FAFE3C8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - v4;
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = sub_21FC5ACF8();
  v1[5] = v6;
  v1[6] = MEMORY[0x24BEE4AF8];
  v7 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  v8 = sub_21FC5ACEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  v9 = a1[2];
  v10 = a1[3];
  swift_beginAccess();
  v1[2] = v9;
  v1[3] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v11 = a1[4];
  v12 = a1[5];
  swift_beginAccess();
  v13 = v1[4];
  v14 = v1[5];
  v1[4] = v11;
  v1[5] = v12;
  sub_21FA32314(v11, v12);
  sub_21FA2D770(v13, v14);
  swift_beginAccess();
  v15 = a1[6];
  swift_beginAccess();
  v1[6] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA44968(v16, (uint64_t)v5, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v7, &qword_255542078, v17);
  swift_endAccess();
  return v1;
}

uint64_t sub_21FAFE614()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D770(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  return swift_deallocClassInstance();
}

uint64_t PBBlob.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FAFE6A0);
}

uint64_t sub_21FAFE6A0()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADF4();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBBlobAttribute(0);
          sub_21FA2A08C(&qword_2555422B8, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_21FC5ACEC();
          sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBBlob.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBBlob, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FAFE8BC);
}

uint64_t sub_21FAFE8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[16];

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_21FC5ACEC();
  MEMORY[0x24BDAC7A8](v9);
  v14[0] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 24);
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v14[15] = a4;
  v14[1] = a3;
  if (!v12 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    __asm { BR              X10 }
  }
  return result;
}

uint64_t static PBBlob.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FAFEC20) & 1;
}

BOOL sub_21FAFEC20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_21FC5ACEC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v49 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_2555437C8, &qword_255542078, v5);
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v45 - v10;
  sub_21FA2D1A0(0, &qword_255542078, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v45 - v16;
  swift_beginAccess();
  v18 = a1[2];
  v19 = a1[3];
  swift_beginAccess();
  if (v18 == a2[2] && v19 == a2[3] || (v20 = sub_21FC5BDF0(), result = 0, (v20 & 1) != 0))
  {
    v47 = v15;
    v46 = v7;
    v48 = v4;
    swift_beginAccess();
    v22 = a1[4];
    v23 = a1[5];
    swift_beginAccess();
    v25 = a2[4];
    v24 = a2[5];
    swift_retain();
    swift_retain();
    sub_21FA32314(v22, v23);
    sub_21FA32314(v25, v24);
    sub_21FB13260(v22, v23);
    v27 = v26;
    sub_21FA2D770(v25, v24);
    sub_21FA2D770(v22, v23);
    if ((v27 & 1) == 0)
      goto LABEL_9;
    swift_beginAccess();
    v28 = a1[6];
    swift_beginAccess();
    v29 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = sub_21FB11380(v28, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
    {
      v31 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      v32 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
      sub_21FA44968(v31, (uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      v33 = (uint64_t)a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      v34 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_21FA44968((uint64_t)v17, (uint64_t)v11, &qword_255542078, v32);
      sub_21FA44968(v33, v34, &qword_255542078, v32);
      v35 = v49;
      v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
      v37 = v48;
      if (v36((uint64_t)v11, 1, v48) == 1)
      {
        swift_release();
        swift_release();
        sub_21FA2D1F8((uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        if (v36(v34, 1, v37) == 1)
        {
          sub_21FA2D1F8((uint64_t)v11, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          return 1;
        }
      }
      else
      {
        v38 = (uint64_t)v47;
        sub_21FA44968((uint64_t)v11, (uint64_t)v47, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        if (v36(v34, 1, v37) != 1)
        {
          v39 = v46;
          (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v46, v34, v37);
          v40 = v38;
          v41 = v37;
          v42 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
          sub_21FA2A08C(&qword_2555437D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
          v43 = sub_21FC5B5D4();
          swift_release();
          swift_release();
          v44 = *(void (**)(char *, uint64_t))(v35 + 8);
          v44(v39, v41);
          sub_21FA2D1F8((uint64_t)v17, &qword_255542078, v42);
          v44((char *)v40, v41);
          sub_21FA2D1F8((uint64_t)v11, &qword_255542078, v42);
          return (v43 & 1) != 0;
        }
        swift_release();
        swift_release();
        sub_21FA2D1F8((uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      }
      sub_21FA48E3C((uint64_t)v11, &qword_2555437C8, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    }
    else
    {
LABEL_9:
      swift_release();
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t PBBlob.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlob, &qword_255542100, (uint64_t)&protocol conformance descriptor for PBBlob);
}

uint64_t sub_21FAFF160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D698, &qword_255541E30, a2);
}

unint64_t sub_21FAFF17C()
{
  return 0xD000000000000024;
}

uint64_t sub_21FAFF198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlob.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FAFF1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlob.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FAFF1C0()
{
  sub_21FA2A08C(&qword_255543790, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
  return sub_21FC5AD70();
}

uint64_t sub_21FAFF210@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D690, (uint64_t)qword_255541E18, a1);
}

uint64_t sub_21FAFF22C()
{
  sub_21FA2A08C(&qword_2555420F0, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAFF26C()
{
  sub_21FA2A08C(&qword_2555420F0, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
  return sub_21FC5AEA8();
}

unint64_t static PBBlobAttribute.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FAFF2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541E38);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541E38);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "name";
  *((_QWORD *)v12 + 1) = 4;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "value";
  *(_QWORD *)(v13 + 8) = 5;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobAttribute._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6A0, (uint64_t)qword_255541E38, a1);
}

uint64_t PBBlobAttribute.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2 || result == 1)
        sub_21FC5AE3C();
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBBlobAttribute.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_21FC5AF2C(), !v1))
    {
      v7 = v0[5];
      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      if (!v8 || (result = sub_21FC5AF2C(), !v1))
      {
        type metadata accessor for PBBlobAttribute(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t PBBlobAttribute.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlobAttribute, &qword_255542108, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
}

uint64_t sub_21FAFF66C@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FAFF698()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FAFF6B4()
{
  return PBBlobAttribute.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FAFF6C8()
{
  return PBBlobAttribute.traverse<A>(visitor:)();
}

uint64_t sub_21FAFF6DC()
{
  sub_21FA2A08C(&qword_255543788, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
  return sub_21FC5AD70();
}

uint64_t sub_21FAFF72C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6A0, (uint64_t)qword_255541E38, a1);
}

uint64_t sub_21FAFF748()
{
  sub_21FA2A08C(&qword_2555422B8, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAFF788()
{
  sub_21FA2A08C(&qword_2555422B8, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
  return sub_21FC5AEA8();
}

unint64_t static PBPushBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_21FAFF7F8(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255541E50, (uint64_t)"results", 7, MEMORY[0x24BE5C318]);
}

uint64_t static PBPushBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6A8, (uint64_t)qword_255541E50, a1);
}

uint64_t PBPushBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBBlobPushResult, &qword_255542110, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
}

uint64_t PBPushBlobsResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBBlobPushResult, &qword_255542110, (uint64_t)&protocol conformance descriptor for PBBlobPushResult, (void (*)(_QWORD))type metadata accessor for PBPushBlobsResponse);
}

uint64_t static PBPushBlobsResponse.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F550, type metadata accessor for PBPushBlobsResponse) & 1;
}

uint64_t PBPushBlobsResponse.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPushBlobsResponse, &qword_255542118, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
}

unint64_t sub_21FAFF8D8()
{
  return 0xD000000000000031;
}

uint64_t sub_21FAFF8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPushBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FAFF908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPushBlobsResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FAFF91C()
{
  sub_21FA2A08C(&qword_255543780, type metadata accessor for PBPushBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
  return sub_21FC5AD70();
}

uint64_t sub_21FAFF96C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6A8, (uint64_t)qword_255541E50, a1);
}

uint64_t sub_21FAFF988()
{
  sub_21FA2A08C(&qword_255540830, type metadata accessor for PBPushBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
  return sub_21FC5AE9C();
}

uint64_t sub_21FAFF9C8()
{
  sub_21FA2A08C(&qword_255540830, type metadata accessor for PBPushBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
  return sub_21FC5AEA8();
}

uint64_t sub_21FAFFA18(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F550, type metadata accessor for PBPushBlobsResponse) & 1;
}

unint64_t static PBBlobPushResult.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FAFFA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541E68);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541E68);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 3;
  *(_QWORD *)v12 = "message";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "result_code";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "expiration_time";
  *((_QWORD *)v16 + 1) = 15;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobPushResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6B0, (uint64_t)qword_255541E68, a1);
}

uint64_t sub_21FAFFC50(uint64_t a1)
{
  return sub_21FB014B0(a1, (void (*)(_QWORD))type metadata accessor for PBBlobPushResult._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, (uint64_t (*)(_QWORD))MEMORY[0x24BE5B990], &qword_255541E80);
}

uint64_t sub_21FAFFC74()
{
  return sub_21FB01798(&OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

uint64_t PBBlobPushResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FB0153C(v2, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
    swift_release();
  }
  swift_retain();
  sub_21FAFFD70();
  return swift_release();
}

uint64_t sub_21FAFFD70()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          sub_21FB0C65C();
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_21FC5ACEC();
          sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBBlobPushResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBBlobPushResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FAFFF54);
}

uint64_t sub_21FAFFF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[6];
  char v23;
  uint64_t v24;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v22 - v9;
  v11 = sub_21FC5ACEC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v22[0] = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 24);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v24 = a4;
  v22[1] = a3;
  if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1 + 48)
      || (v17 = *(_BYTE *)(a1 + 56),
          v22[5] = *(_QWORD *)(a1 + 48),
          v23 = v17,
          sub_21FB0C65C(),
          result = sub_21FC5AED8(),
          !v4))
    {
      swift_beginAccess();
      v18 = *(_QWORD *)(a1 + 40);
      v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v19 = *(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
      if (!v19 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
      {
        v20 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
        swift_beginAccess();
        sub_21FA44968(v20, (uint64_t)v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
        {
          return sub_21FA2D1F8((uint64_t)v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        }
        else
        {
          v21 = v22[0];
          (*(void (**)(_QWORD, char *, uint64_t))(v12 + 32))(v22[0], v10, v11);
          sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
          sub_21FC5AF50();
          return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v21, v11);
        }
      }
    }
  }
  return result;
}

uint64_t static PBBlobPushResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBBlobPushResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB00254) & 1;
}

BOOL sub_21FB00254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(uint64_t);
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;

  v4 = sub_21FC5ACEC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_2555437C8, &qword_255542078, v5);
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - v10;
  sub_21FA2D1A0(0, &qword_255542078, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - v16;
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v18 == *(_QWORD *)(a2 + 16) && v19 == *(_QWORD *)(a2 + 24)
    || (v20 = sub_21FC5BDF0(), result = 0, (v20 & 1) != 0))
  {
    if ((swift_beginAccess(),
          v22 = *(_QWORD *)(a1 + 32),
          v23 = *(_QWORD *)(a1 + 40),
          swift_beginAccess(),
          v22 == *(_QWORD *)(a2 + 32))
      && v23 == *(_QWORD *)(a2 + 40)
      || (v24 = sub_21FC5BDF0(), result = 0, (v24 & 1) != 0))
    {
      swift_beginAccess();
      v25 = *(_QWORD *)(a1 + 48);
      v26 = *(unsigned __int8 *)(a1 + 56);
      swift_beginAccess();
      if (v26 == 1)
        v25 = qword_21FC66310[v25];
      v27 = *(_QWORD *)(a2 + 48);
      if (*(_BYTE *)(a2 + 56))
        __asm { BR              X10 }
      if (v25 == v27)
      {
        v39 = v15;
        v28 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
        swift_beginAccess();
        v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
        sub_21FA44968(v28, (uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        v30 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
        swift_beginAccess();
        v31 = (uint64_t)&v11[*(int *)(v9 + 48)];
        sub_21FA44968((uint64_t)v17, (uint64_t)v11, &qword_255542078, v29);
        sub_21FA44968(v30, v31, &qword_255542078, v29);
        v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        if (v32((uint64_t)v11, 1, v4) == 1)
        {
          sub_21FA2D1F8((uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          if (v32(v31, 1, v4) == 1)
          {
            sub_21FA2D1F8((uint64_t)v11, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
            return 1;
          }
        }
        else
        {
          v33 = (uint64_t)v39;
          sub_21FA44968((uint64_t)v11, (uint64_t)v39, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          if (v32(v31, 1, v4) != 1)
          {
            v34 = v40;
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v40, v31, v4);
            v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
            sub_21FA2A08C(&qword_2555437D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
            v36 = sub_21FC5B5D4();
            v37 = *(void (**)(char *, uint64_t))(v6 + 8);
            v37(v34, v4);
            sub_21FA2D1F8((uint64_t)v17, &qword_255542078, v35);
            v37((char *)v33, v4);
            sub_21FA2D1F8((uint64_t)v11, &qword_255542078, v35);
            return (v36 & 1) != 0;
          }
          sub_21FA2D1F8((uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v33, v4);
        }
        sub_21FA48E3C((uint64_t)v11, &qword_2555437C8, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      }
      return 0;
    }
  }
  return result;
}

uint64_t PBBlobPushResult.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlobPushResult, &qword_255542120, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
}

uint64_t sub_21FB00750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D6B8, &qword_255541E80, a2);
}

unint64_t sub_21FB0076C()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FB00788()
{
  return PBBlobPushResult.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB0079C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobPushResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB007B0()
{
  sub_21FA2A08C(&qword_255543778, type metadata accessor for PBBlobPushResult, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
  return sub_21FC5AD70();
}

uint64_t sub_21FB00800@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6B0, (uint64_t)qword_255541E68, a1);
}

uint64_t sub_21FB0081C()
{
  sub_21FA2A08C(&qword_255542110, type metadata accessor for PBBlobPushResult, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB0085C()
{
  sub_21FA2A08C(&qword_255542110, type metadata accessor for PBBlobPushResult, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB008AC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBBlobPushResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB00254) & 1;
}

uint64_t sub_21FB008D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541E88);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541E88);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "OK";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "INVALID_ID";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "BLOB_SIZE_EXCEEDED";
  *((_QWORD *)v14 + 1) = 18;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "BLOB_SIZE_BELOW_MIN";
  *((_QWORD *)v16 + 1) = 19;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "SERVER_ERROR";
  *((_QWORD *)v18 + 1) = 12;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "INVALID_EXPIRATION_TIME";
  *((_QWORD *)v20 + 1) = 23;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "INVALID_NODE";
  *((_QWORD *)v22 + 1) = 12;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobPushResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6C0, (uint64_t)qword_255541E88, a1);
}

uint64_t sub_21FB00B64@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6C0, (uint64_t)qword_255541E88, a1);
}

unint64_t static PBPullBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_21FB00B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541EA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541EA0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "ids";
  *(_QWORD *)(v8 + 8) = 3;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "health_institute_id";
  *((_QWORD *)v12 + 1) = 19;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBPullBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6C8, (uint64_t)qword_255541EA0, a1);
}

uint64_t PBPullBlobsRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_21FC5AE3C();
      }
      else if (result == 1)
      {
        sub_21FC5AE18();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBPullBlobsRequest.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*(_QWORD *)(*v0 + 16) || (result = sub_21FC5AF14(), !v1))
  {
    v3 = v0[2];
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = v0[1] & 0xFFFFFFFFFFFFLL;
    if (!v4 || (result = sub_21FC5AF2C(), !v1))
    {
      type metadata accessor for PBPullBlobsRequest(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t PBPullBlobsRequest.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPullBlobsRequest, &qword_255542128, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
}

uint64_t sub_21FB00EAC@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FB00EDC()
{
  return 0xD000000000000030;
}

uint64_t sub_21FB00EF8()
{
  return PBPullBlobsRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB00F0C()
{
  return PBPullBlobsRequest.traverse<A>(visitor:)();
}

uint64_t sub_21FB00F20()
{
  sub_21FA2A08C(&qword_255543770, type metadata accessor for PBPullBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
  return sub_21FC5AD70();
}

uint64_t sub_21FB00F70@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6C8, (uint64_t)qword_255541EA0, a1);
}

uint64_t sub_21FB00F8C()
{
  sub_21FA2A08C(&qword_2555422F0, type metadata accessor for PBPullBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB00FCC()
{
  sub_21FA2A08C(&qword_2555422F0, type metadata accessor for PBPullBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
  return sub_21FC5AEA8();
}

unint64_t static PBPullBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB0103C(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255541EB8, (uint64_t)"results", 7, MEMORY[0x24BE5C318]);
}

uint64_t static PBPullBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6D0, (uint64_t)qword_255541EB8, a1);
}

uint64_t PBPullBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBBlobPullResult, &qword_255542130, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
}

uint64_t PBPullBlobsResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBBlobPullResult, &qword_255542130, (uint64_t)&protocol conformance descriptor for PBBlobPullResult, (void (*)(_QWORD))type metadata accessor for PBPullBlobsResponse);
}

uint64_t static PBPullBlobsResponse.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F564, type metadata accessor for PBPullBlobsResponse) & 1;
}

uint64_t PBPullBlobsResponse.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPullBlobsResponse, &qword_255542138, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
}

unint64_t sub_21FB0111C()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB01138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPullBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB0114C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPullBlobsResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB01160()
{
  sub_21FA2A08C(&qword_255543768, type metadata accessor for PBPullBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
  return sub_21FC5AD70();
}

uint64_t sub_21FB011B0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6D0, (uint64_t)qword_255541EB8, a1);
}

uint64_t sub_21FB011CC()
{
  sub_21FA2A08C(&qword_255542308, type metadata accessor for PBPullBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB0120C()
{
  sub_21FA2A08C(&qword_255542308, type metadata accessor for PBPullBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB0125C(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F564, type metadata accessor for PBPullBlobsResponse) & 1;
}

unint64_t static PBBlobPullResult.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FB012A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541ED0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541ED0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 3;
  *(_QWORD *)v12 = "message";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "result_code";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "blob";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobPullResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6D8, (uint64_t)qword_255541ED0, a1);
}

uint64_t sub_21FB0148C(uint64_t a1)
{
  return sub_21FB014B0(a1, (void (*)(_QWORD))type metadata accessor for PBBlobPullResult._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob, &qword_255541EE8);
}

uint64_t sub_21FB014B0(uint64_t a1, void (*a2)(_QWORD), _QWORD *a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  a2(0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0xE000000000000000;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = 0xE000000000000000;
  *(_QWORD *)(v8 + 48) = 0;
  *(_BYTE *)(v8 + 56) = 1;
  v9 = v8 + *a3;
  v10 = a4(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a5 = v8;
  return result;
}

uint64_t sub_21FB0153C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  _QWORD *v22;
  uint64_t v23;
  unint64_t *v24;

  v22 = a4;
  v24 = a2;
  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v23 = (uint64_t)&v22 - v9;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0xE000000000000000;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0xE000000000000000;
  *(_QWORD *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 56) = 1;
  v10 = v4 + *a4;
  v11 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v12;
  *(_QWORD *)(v4 + 24) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = v15;
  *(_QWORD *)(v4 + 40) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 48);
  LOBYTE(v15) = *(_BYTE *)(a1 + 56);
  swift_beginAccess();
  *(_QWORD *)(v4 + 48) = v16;
  *(_BYTE *)(v4 + 56) = v15;
  v17 = a1 + *v22;
  swift_beginAccess();
  v18 = v17;
  v19 = v23;
  v20 = v24;
  sub_21FA44968(v18, v23, v24, a3);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8(v19, v10, v20, a3);
  swift_endAccess();
  return v4;
}

uint64_t sub_21FB0177C()
{
  return sub_21FB01798(&OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, &qword_255542090, type metadata accessor for PBBlob);
}

uint64_t sub_21FB01798(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v3 + *a1, a2, a3);
  return swift_deallocClassInstance();
}

uint64_t PBBlobPullResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FB0153C(v2, &qword_255542090, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob);
    swift_release();
  }
  swift_retain();
  sub_21FB018D8();
  return swift_release();
}

uint64_t sub_21FB018D8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          sub_21FB0C618();
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBBlob(0);
          sub_21FA2A08C(&qword_2555420F0, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBBlobPullResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBBlobPullResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB01ABC);
}

uint64_t sub_21FB01ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[6];
  char v23;
  uint64_t v24;

  sub_21FA2D1A0(0, &qword_255542090, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v22 - v9;
  v11 = type metadata accessor for PBBlob(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v22[0] = (uint64_t)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 24);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v24 = a4;
  v22[1] = a3;
  if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1 + 48)
      || (v17 = *(_BYTE *)(a1 + 56),
          v22[5] = *(_QWORD *)(a1 + 48),
          v23 = v17,
          sub_21FB0C618(),
          result = sub_21FC5AED8(),
          !v4))
    {
      swift_beginAccess();
      v18 = *(_QWORD *)(a1 + 40);
      v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v19 = *(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
      if (!v19 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
      {
        v20 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
        swift_beginAccess();
        sub_21FA44968(v20, (uint64_t)v10, &qword_255542090, type metadata accessor for PBBlob);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
        {
          return sub_21FA2D1F8((uint64_t)v10, &qword_255542090, type metadata accessor for PBBlob);
        }
        else
        {
          v21 = v22[0];
          sub_21FA2D23C((uint64_t)v10, v22[0], type metadata accessor for PBBlob);
          sub_21FA2A08C(&qword_2555420F0, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
          sub_21FC5AF50();
          return sub_21FA326EC(v21, type metadata accessor for PBBlob);
        }
      }
    }
  }
  return result;
}

uint64_t static PBBlobPullResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBBlobPullResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB01DB8) & 1;
}

BOOL sub_21FB01DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v4 = type metadata accessor for PBBlob(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_255543800, &qword_255542090, type metadata accessor for PBBlob);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - v9;
  sub_21FA2D1A0(0, &qword_255542090, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v34 - v15;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(_QWORD *)(a2 + 16) && v18 == *(_QWORD *)(a2 + 24)
    || (v19 = sub_21FC5BDF0(), result = 0, (v19 & 1) != 0))
  {
    if ((swift_beginAccess(),
          v21 = *(_QWORD *)(a1 + 32),
          v22 = *(_QWORD *)(a1 + 40),
          swift_beginAccess(),
          v21 == *(_QWORD *)(a2 + 32))
      && v22 == *(_QWORD *)(a2 + 40)
      || (v23 = sub_21FC5BDF0(), result = 0, (v23 & 1) != 0))
    {
      swift_beginAccess();
      v24 = *(_QWORD *)(a1 + 48);
      v25 = *(unsigned __int8 *)(a1 + 56);
      swift_beginAccess();
      if (v25 == 1)
        v24 = qword_21FC66348[v24];
      v26 = *(_QWORD *)(a2 + 48);
      if (*(_BYTE *)(a2 + 56))
        __asm { BR              X10 }
      if (v24 == v26)
      {
        v35 = v14;
        v27 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
        swift_beginAccess();
        sub_21FA44968(v27, (uint64_t)v16, &qword_255542090, type metadata accessor for PBBlob);
        v28 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
        swift_beginAccess();
        v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_21FA44968((uint64_t)v16, (uint64_t)v10, &qword_255542090, type metadata accessor for PBBlob);
        sub_21FA44968(v28, v29, &qword_255542090, type metadata accessor for PBBlob);
        v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v30((uint64_t)v10, 1, v4) == 1)
        {
          sub_21FA2D1F8((uint64_t)v16, &qword_255542090, type metadata accessor for PBBlob);
          if (v30(v29, 1, v4) == 1)
          {
            sub_21FA2D1F8((uint64_t)v10, &qword_255542090, type metadata accessor for PBBlob);
            return 1;
          }
        }
        else
        {
          v31 = (uint64_t)v35;
          sub_21FA44968((uint64_t)v10, (uint64_t)v35, &qword_255542090, type metadata accessor for PBBlob);
          if (v30(v29, 1, v4) != 1)
          {
            v32 = v36;
            sub_21FA2D23C(v29, v36, type metadata accessor for PBBlob);
            v33 = sub_21FA449D4(v31, v32, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FAFEC20);
            sub_21FA326EC(v32, type metadata accessor for PBBlob);
            sub_21FA2D1F8((uint64_t)v16, &qword_255542090, type metadata accessor for PBBlob);
            sub_21FA326EC(v31, type metadata accessor for PBBlob);
            sub_21FA2D1F8((uint64_t)v10, &qword_255542090, type metadata accessor for PBBlob);
            return (v33 & 1) != 0;
          }
          sub_21FA2D1F8((uint64_t)v16, &qword_255542090, type metadata accessor for PBBlob);
          sub_21FA326EC(v31, type metadata accessor for PBBlob);
        }
        sub_21FA48E3C((uint64_t)v10, &qword_255543800, &qword_255542090, type metadata accessor for PBBlob);
      }
      return 0;
    }
  }
  return result;
}

uint64_t PBBlobPullResult.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlobPullResult, &qword_255542140, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
}

uint64_t sub_21FB02274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D6E0, &qword_255541EE8, a2);
}

unint64_t sub_21FB02290()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FB022AC()
{
  return PBBlobPullResult.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB022C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobPullResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB022D4()
{
  sub_21FA2A08C(&qword_255543760, type metadata accessor for PBBlobPullResult, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
  return sub_21FC5AD70();
}

uint64_t sub_21FB02324@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6D8, (uint64_t)qword_255541ED0, a1);
}

uint64_t sub_21FB02340()
{
  sub_21FA2A08C(&qword_255542130, type metadata accessor for PBBlobPullResult, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB02380()
{
  sub_21FA2A08C(&qword_255542130, type metadata accessor for PBBlobPullResult, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB023D0(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBBlobPullResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB01DB8) & 1;
}

uint64_t sub_21FB023F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541EF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541EF0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "OK";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 4;
  *(_QWORD *)v12 = "ID_NOT_FOUND";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 5;
  *(_QWORD *)v14 = "SERVER_ERROR";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 7;
  *(_QWORD *)v16 = "INVALID_NODE";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobPullResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6E8, (uint64_t)qword_255541EF0, a1);
}

uint64_t sub_21FB025E0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6E8, (uint64_t)qword_255541EF0, a1);
}

unint64_t static PBDeleteBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_21FB02618(uint64_t a1)
{
  return sub_21FB0563C(a1, qword_255541F08, (uint64_t)"delete_blobs", 12);
}

uint64_t static PBDeleteBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D6F0, (uint64_t)qword_255541F08, a1);
}

uint64_t sub_21FB0264C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  v2 = type metadata accessor for PBDeleteBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  v4 = type metadata accessor for PBBlobAuth(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_255541F20 = v0;
  return result;
}

uint64_t sub_21FB026E4(uint64_t a1)
{
  return sub_21FB02708(a1, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t sub_21FB02708(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), _QWORD *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - v13;
  sub_21FA2D1A0(0, a2, a3, v11);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - v16;
  v18 = v5 + *a4;
  v19 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = v5 + *a5;
  v21 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = a1 + *a4;
  swift_beginAccess();
  sub_21FA44968(v22, (uint64_t)v17, a2, a3);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v17, v18, a2, a3);
  swift_endAccess();
  v23 = a1 + *a5;
  swift_beginAccess();
  sub_21FA44968(v23, (uint64_t)v14, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v14, v20, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return v5;
}

uint64_t sub_21FB02918()
{
  return sub_21FB0293C(&OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t sub_21FB0293C(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;

  sub_21FA2D1F8(v4 + *a1, a2, a3);
  sub_21FA2D1F8(v4 + *a4, &qword_255542068, type metadata accessor for PBBlobAuth);
  return swift_deallocClassInstance();
}

uint64_t PBDeleteBlobsRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FB02708(v2, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  swift_retain();
  sub_21FB02A78();
  return swift_release();
}

uint64_t sub_21FB02A78()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBDeleteBlobs(0);
        sub_21FA2A08C(&qword_255540468, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBBlobAuth(0);
    sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
LABEL_5:
    sub_21FC5AE60();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBDeleteBlobsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBDeleteBlobsRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB02C04);
}

uint64_t sub_21FB02C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a4;
  v26 = a2;
  v27 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - v8;
  v25 = type metadata accessor for PBBlobAuth(0);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v22 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, v6);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = type metadata accessor for PBDeleteBlobs(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_21FA44968(v18, (uint64_t)v13, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21FA2D1F8((uint64_t)v13, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBDeleteBlobs);
    sub_21FA2A08C(&qword_255540468, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v17, type metadata accessor for PBDeleteBlobs);
    if (v4)
      return result;
  }
  v20 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v20, (uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v25) == 1)
    return sub_21FA2D1F8((uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  v21 = v22;
  sub_21FA2D23C((uint64_t)v9, v22, type metadata accessor for PBBlobAuth);
  sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
  sub_21FC5AF50();
  return sub_21FA326EC(v21, type metadata accessor for PBBlobAuth);
}

uint64_t static PBDeleteBlobsRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBDeleteBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FB02F54) & 1;
}

BOOL sub_21FB02F54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t *v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;

  v56 = a2;
  v53 = type metadata accessor for PBBlobAuth(0);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v47 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t)&v46 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v52 = (uint64_t)&v46 - v10;
  v11 = type metadata accessor for PBDeleteBlobs(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v49 = (uint64_t *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_2555437F8, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - v16;
  sub_21FA2D1A0(0, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, v6);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v55 = (uint64_t *)((char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v46 - v21;
  v23 = a1;
  v24 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_21FA44968(v24, (uint64_t)v22, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  v25 = v56;
  v26 = v56
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_21FA44968((uint64_t)v22, (uint64_t)v17, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  sub_21FA44968(v26, v27, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) != 1)
  {
    v36 = v55;
    sub_21FA44968((uint64_t)v17, (uint64_t)v55, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
    if (v28(v27, 1, v11) != 1)
    {
      v38 = v27;
      v39 = v49;
      sub_21FA2D23C(v38, (uint64_t)v49, type metadata accessor for PBDeleteBlobs);
      v40 = *v36;
      v41 = *v39;
      swift_retain();
      swift_retain();
      if ((sub_21FB10004(v40, v41) & 1) != 0)
      {
        sub_21FC5AD1C();
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v42 = sub_21FC5B5D4();
        sub_21FA326EC((uint64_t)v39, type metadata accessor for PBDeleteBlobs);
        sub_21FA2D1F8((uint64_t)v22, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
        sub_21FA326EC((uint64_t)v36, type metadata accessor for PBDeleteBlobs);
        sub_21FA2D1F8((uint64_t)v17, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
        if ((v42 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_21FA326EC((uint64_t)v39, type metadata accessor for PBDeleteBlobs);
        sub_21FA2D1F8((uint64_t)v22, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
        sub_21FA326EC((uint64_t)v36, type metadata accessor for PBDeleteBlobs);
        sub_21FA2D1F8((uint64_t)v17, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
      }
LABEL_10:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v22, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
    sub_21FA326EC((uint64_t)v36, type metadata accessor for PBDeleteBlobs);
LABEL_9:
    sub_21FA48E3C((uint64_t)v17, &qword_2555437F8, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
    goto LABEL_10;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v22, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
  if (v28(v27, 1, v11) != 1)
    goto LABEL_9;
  sub_21FA2D1F8((uint64_t)v17, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
LABEL_4:
  v29 = v23
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  v30 = v52;
  sub_21FA44968(v29, v52, &qword_255542068, type metadata accessor for PBBlobAuth);
  v31 = v25
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  v32 = v54;
  v33 = v54 + *(int *)(v50 + 48);
  sub_21FA44968(v30, v54, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA44968(v31, v33, &qword_255542068, type metadata accessor for PBBlobAuth);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  v35 = v53;
  if (v34(v32, 1, v53) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
    if (v34(v33, 1, v35) == 1)
    {
      sub_21FA2D1F8(v32, &qword_255542068, type metadata accessor for PBBlobAuth);
      return 1;
    }
    goto LABEL_18;
  }
  v43 = v48;
  sub_21FA44968(v32, (uint64_t)v48, &qword_255542068, type metadata accessor for PBBlobAuth);
  if (v34(v33, 1, v35) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
    sub_21FA326EC((uint64_t)v43, type metadata accessor for PBBlobAuth);
LABEL_18:
    sub_21FA48E3C(v32, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
    return 0;
  }
  v44 = v47;
  sub_21FA2D23C(v33, (uint64_t)v47, type metadata accessor for PBBlobAuth);
  v45 = _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(v43, v44);
  swift_release();
  swift_release();
  sub_21FA326EC((uint64_t)v44, type metadata accessor for PBBlobAuth);
  sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA326EC((uint64_t)v43, type metadata accessor for PBBlobAuth);
  sub_21FA2D1F8(v32, &qword_255542068, type metadata accessor for PBBlobAuth);
  return (v45 & 1) != 0;
}

uint64_t PBDeleteBlobsRequest.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBDeleteBlobsRequest, &qword_255542148, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
}

uint64_t sub_21FB036B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D6F8, &qword_255541F20, a2);
}

unint64_t sub_21FB036D4()
{
  return 0xD000000000000032;
}

uint64_t sub_21FB036F0()
{
  return PBDeleteBlobsRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB03704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB03718()
{
  sub_21FA2A08C(&qword_255543758, type metadata accessor for PBDeleteBlobsRequest, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
  return sub_21FC5AD70();
}

uint64_t sub_21FB03768@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D6F0, (uint64_t)qword_255541F08, a1);
}

uint64_t sub_21FB03784()
{
  sub_21FA2A08C(&qword_255542330, type metadata accessor for PBDeleteBlobsRequest, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB037C4()
{
  sub_21FA2A08C(&qword_255542330, type metadata accessor for PBDeleteBlobsRequest, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB03814(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBDeleteBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FB02F54) & 1;
}

unint64_t static PBDeleteBlobs.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_21FB03858(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255541F28, (uint64_t)"delete_blobs", 12, MEMORY[0x24BE5C328]);
}

uint64_t static PBDeleteBlobs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D700, (uint64_t)qword_255541F28, a1);
}

uint64_t PBDeleteBlobs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBDeleteBlob, &qword_255542150, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
}

uint64_t PBDeleteBlobs.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBDeleteBlob, &qword_255542150, (uint64_t)&protocol conformance descriptor for PBDeleteBlob, (void (*)(_QWORD))type metadata accessor for PBDeleteBlobs);
}

uint64_t static PBDeleteBlobs.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB10004, type metadata accessor for PBDeleteBlobs) & 1;
}

uint64_t PBDeleteBlobs.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBDeleteBlobs, &qword_255542158, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
}

unint64_t sub_21FB03938()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_21FB03954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB03968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobs.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB0397C()
{
  sub_21FA2A08C(&qword_255543750, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
  return sub_21FC5AD70();
}

uint64_t sub_21FB039CC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D700, (uint64_t)qword_255541F28, a1);
}

uint64_t sub_21FB039E8()
{
  sub_21FA2A08C(&qword_255540468, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB03A28()
{
  sub_21FA2A08C(&qword_255540468, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB03A78(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB10004, type metadata accessor for PBDeleteBlobs) & 1;
}

unint64_t static PBDeleteBlob.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB03ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541F40);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541F40);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "deletion_commitment";
  *((_QWORD *)v12 + 1) = 19;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "revocation_authorization";
  *(_QWORD *)(v13 + 8) = 24;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBDeleteBlob._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D708, (uint64_t)qword_255541F40, a1);
}

uint64_t sub_21FB03C84()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for PBDeleteBlob._StorageClass(0);
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = sub_21FC5ACF8();
  v0[5] = v1;
  v2 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  v3 = type metadata accessor for PBRevocationAuthorization();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  qword_255541F58 = (uint64_t)v0;
  return result;
}

uint64_t type metadata accessor for PBDeleteBlob._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255543338);
}

_QWORD *sub_21FB03D10(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  sub_21FA2D1A0(0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v17[-v4];
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = sub_21FC5ACF8();
  v1[5] = v6;
  v7 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  v8 = type metadata accessor for PBRevocationAuthorization();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  v9 = a1[2];
  v10 = a1[3];
  swift_beginAccess();
  v1[2] = v9;
  v1[3] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v11 = a1[4];
  v12 = a1[5];
  swift_beginAccess();
  v13 = v1[4];
  v14 = v1[5];
  v1[4] = v11;
  v1[5] = v12;
  sub_21FA32314(v11, v12);
  sub_21FA2D770(v13, v14);
  v15 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v5, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v7, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_endAccess();
  return v1;
}

uint64_t type metadata accessor for PBBlobPushResult(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555427B8);
}

uint64_t type metadata accessor for PBBlobs(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542570);
}

uint64_t type metadata accessor for PBPushBlobsRequest(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542448);
}

uint64_t type metadata accessor for PBPushBlobsRequest._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542DC8);
}

uint64_t type metadata accessor for PBBlobAuth(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555424D8);
}

uint64_t type metadata accessor for PBBlob(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542600);
}

uint64_t type metadata accessor for PBBlob._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542EB8);
}

uint64_t type metadata accessor for PBBlobAttribute(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542690);
}

uint64_t type metadata accessor for PBPushBlobsResponse(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542728);
}

uint64_t type metadata accessor for PBBlobPushResult._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542FE8);
}

uint64_t type metadata accessor for PBPullBlobsRequest(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542848);
}

uint64_t type metadata accessor for PBPullBlobsResponse(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555428E0);
}

uint64_t type metadata accessor for PBBlobPullResult(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542970);
}

uint64_t type metadata accessor for PBBlobPullResult._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255543118);
}

uint64_t type metadata accessor for PBDeleteBlobs(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25406ACE0);
}

uint64_t type metadata accessor for PBDeleteBlobsRequest(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25406AD78);
}

uint64_t type metadata accessor for PBDeleteBlobsRequest._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255543248);
}

uint64_t type metadata accessor for PBDeleteBlobsResponse(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25406AE18);
}

uint64_t type metadata accessor for PBBlobDeleteResult(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542A90);
}

uint64_t type metadata accessor for PBTouchBlobs(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542BB8);
}

uint64_t type metadata accessor for PBTouchBlobsRequest(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542B28);
}

uint64_t type metadata accessor for PBTouchBlobsRequest._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255543448);
}

uint64_t sub_21FB040BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D770(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  return swift_deallocClassInstance();
}

uint64_t PBDeleteBlob.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBDeleteBlob, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FB03D10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB04140);
}

uint64_t sub_21FB04140()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        v4 = v3;
        sub_21FC5ADF4();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        v4 = v3;
        sub_21FC5AE3C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBRevocationAuthorization();
    sub_21FA2A08C((unint64_t *)&qword_2555400D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t)&protocol conformance descriptor for PBRevocationAuthorization);
    v4 = v3;
    sub_21FC5AE60();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBDeleteBlob.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB042DC);
}

uint64_t sub_21FB042DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[14];

  sub_21FA2D1A0(0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v9 = type metadata accessor for PBRevocationAuthorization();
  MEMORY[0x24BDAC7A8](v9);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 24);
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v14[13] = a4;
  v14[2] = a3;
  if (!v12 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    __asm { BR              X10 }
  }
  return result;
}

uint64_t static PBDeleteBlob.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBDeleteBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FB045BC) & 1;
}

BOOL sub_21FB045BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for PBRevocationAuthorization();
  v41 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_2555437F0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - v9;
  sub_21FA2D1A0(0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - v15;
  swift_beginAccess();
  v17 = a1[2];
  v18 = a1[3];
  swift_beginAccess();
  if (v17 == a2[2] && v18 == a2[3] || (v19 = sub_21FC5BDF0(), result = 0, (v19 & 1) != 0))
  {
    v39 = v14;
    v38 = v6;
    v40 = v4;
    swift_beginAccess();
    v21 = a1[4];
    v22 = a1[5];
    swift_beginAccess();
    v23 = a2[4];
    v24 = a2[5];
    swift_retain();
    swift_retain();
    sub_21FA32314(v21, v22);
    sub_21FA32314(v23, v24);
    sub_21FB13260(v21, v22);
    v26 = v25;
    sub_21FA2D770(v23, v24);
    sub_21FA2D770(v21, v22);
    if ((v26 & 1) != 0)
    {
      v27 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
      swift_beginAccess();
      sub_21FA44968(v27, (uint64_t)v16, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
      v28 = (uint64_t)a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
      swift_beginAccess();
      v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_21FA44968((uint64_t)v16, (uint64_t)v10, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
      sub_21FA44968(v28, v29, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
      v30 = v40;
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
      if (v31((uint64_t)v10, 1, v40) == 1)
      {
        swift_release();
        swift_release();
        sub_21FA2D1F8((uint64_t)v16, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
        if (v31(v29, 1, v30) == 1)
        {
          sub_21FA2D1F8((uint64_t)v10, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          return 1;
        }
      }
      else
      {
        v32 = (uint64_t)v39;
        sub_21FA44968((uint64_t)v10, (uint64_t)v39, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
        if (v31(v29, 1, v30) != 1)
        {
          v33 = v29;
          v34 = v32;
          v35 = (uint64_t)v38;
          sub_21FA2D23C(v33, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
          v36 = _s19HealthRecordsDaemon25PBRevocationAuthorizationV2eeoiySbAC_ACtFZ_0(v34, v35);
          swift_release();
          swift_release();
          sub_21FA326EC(v35, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
          sub_21FA2D1F8((uint64_t)v16, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          sub_21FA326EC(v34, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
          sub_21FA2D1F8((uint64_t)v10, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          return (v36 & 1) != 0;
        }
        swift_release();
        swift_release();
        sub_21FA2D1F8((uint64_t)v16, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
        sub_21FA326EC(v32, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization);
      }
      sub_21FA48E3C((uint64_t)v10, &qword_2555437F0, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
    }
    else
    {
      swift_release();
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t PBDeleteBlob.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBDeleteBlob, &qword_255542160, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
}

uint64_t sub_21FB04A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D710, &qword_255541F58, a2);
}

unint64_t sub_21FB04A68()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB04A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlob.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB04A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlob.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB04AAC()
{
  sub_21FA2A08C(&qword_255543748, type metadata accessor for PBDeleteBlob, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
  return sub_21FC5AD70();
}

uint64_t sub_21FB04AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D708, (uint64_t)qword_255541F40, a1);
}

uint64_t sub_21FB04B18()
{
  sub_21FA2A08C(&qword_255542150, type metadata accessor for PBDeleteBlob, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB04B58()
{
  sub_21FA2A08C(&qword_255542150, type metadata accessor for PBDeleteBlob, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB04BA8(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBDeleteBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FB045BC) & 1;
}

unint64_t static PBDeleteBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_21FB04BEC(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255541F60, (uint64_t)"results", 7, MEMORY[0x24BE5C318]);
}

uint64_t static PBDeleteBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D718, (uint64_t)qword_255541F60, a1);
}

uint64_t PBDeleteBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBBlobDeleteResult, &qword_255542168, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
}

uint64_t PBDeleteBlobsResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBBlobDeleteResult, &qword_255542168, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult, (void (*)(_QWORD))type metadata accessor for PBDeleteBlobsResponse);
}

uint64_t static PBDeleteBlobsResponse.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F2B8, type metadata accessor for PBDeleteBlobsResponse) & 1;
}

uint64_t PBDeleteBlobsResponse.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBDeleteBlobsResponse, &qword_255542170, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
}

unint64_t sub_21FB04CCC()
{
  return 0xD000000000000033;
}

uint64_t sub_21FB04CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB04CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobsResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB04D10()
{
  sub_21FA2A08C(&qword_255543740, type metadata accessor for PBDeleteBlobsResponse, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
  return sub_21FC5AD70();
}

uint64_t sub_21FB04D60@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D718, (uint64_t)qword_255541F60, a1);
}

uint64_t sub_21FB04D7C()
{
  sub_21FA2A08C(&qword_255542368, type metadata accessor for PBDeleteBlobsResponse, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB04DBC()
{
  sub_21FA2A08C(&qword_255542368, type metadata accessor for PBDeleteBlobsResponse, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB04E0C(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F2B8, type metadata accessor for PBDeleteBlobsResponse) & 1;
}

unint64_t static PBBlobDeleteResult.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_21FB04E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541F78);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541F78);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 3;
  *(_QWORD *)v12 = "message";
  *((_QWORD *)v12 + 1) = 7;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 2;
  *(_QWORD *)v13 = "result_code";
  *(_QWORD *)(v13 + 8) = 11;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobDeleteResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D720, (uint64_t)qword_255541F78, a1);
}

uint64_t PBBlobDeleteResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        sub_21FB09464();
        sub_21FC5ADC4();
      }
      else if (result == 1)
      {
        break;
      }
LABEL_11:
      result = sub_21FC5AD88();
    }
    sub_21FC5AE3C();
    goto LABEL_11;
  }
  return result;
}

uint64_t PBBlobDeleteResult.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    if (!v0[4] || (sub_21FB09464(), result = sub_21FC5AED8(), !v1))
    {
      v5 = v0[3];
      v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v6 = v0[2] & 0xFFFFFFFFFFFFLL;
      if (!v6 || (result = sub_21FC5AF2C(), !v1))
      {
        type metadata accessor for PBBlobDeleteResult(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t PBBlobDeleteResult.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlobDeleteResult, &qword_255542180, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
}

uint64_t sub_21FB05250@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  return sub_21FC5AD10();
}

unint64_t sub_21FB05284()
{
  return 0xD000000000000030;
}

uint64_t sub_21FB052A0()
{
  return PBBlobDeleteResult.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB052B4()
{
  return PBBlobDeleteResult.traverse<A>(visitor:)();
}

uint64_t sub_21FB052C8()
{
  sub_21FA2A08C(&qword_255543738, type metadata accessor for PBBlobDeleteResult, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
  return sub_21FC5AD70();
}

uint64_t sub_21FB05318@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D720, (uint64_t)qword_255541F78, a1);
}

uint64_t sub_21FB05334()
{
  sub_21FA2A08C(&qword_255542168, type metadata accessor for PBBlobDeleteResult, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB05374()
{
  sub_21FA2A08C(&qword_255542168, type metadata accessor for PBBlobDeleteResult, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB053C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541F90);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541F90);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "OK";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "INVALID_BLOB";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "UNAUTHORIZED_TO_DELETE";
  *((_QWORD *)v14 + 1) = 22;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "ID_NOT_FOUND";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 5;
  *(_QWORD *)v17 = "SERVER_ERROR";
  *(_QWORD *)(v17 + 8) = 12;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobDeleteResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D728, (uint64_t)qword_255541F90, a1);
}

uint64_t sub_21FB055EC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D728, (uint64_t)qword_255541F90, a1);
}

unint64_t static PBTouchBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB05624(uint64_t a1)
{
  return sub_21FB0563C(a1, qword_255541FA8, (uint64_t)"touch_blobs", 11);
}

uint64_t sub_21FB0563C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  char *v19;

  v7 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_21FC5F720;
  v14 = (_QWORD *)(v13 + v12);
  v15 = v13 + v12 + *(int *)(v9 + 48);
  *v14 = 1;
  *(_QWORD *)v15 = a3;
  *(_QWORD *)(v15 + 8) = a4;
  *(_BYTE *)(v15 + 16) = 2;
  v16 = *MEMORY[0x24BE5C328];
  v17 = sub_21FC5AF5C();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v18)(v15, v16, v17);
  v19 = (char *)v14 + v11 + *(int *)(v9 + 48);
  *(_QWORD *)((char *)v14 + v11) = 2;
  *(_QWORD *)v19 = "blob_auth";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v18();
  return sub_21FC5AF68();
}

uint64_t static PBTouchBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D730, (uint64_t)qword_255541FA8, a1);
}

uint64_t sub_21FB057B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  v2 = type metadata accessor for PBTouchBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  v4 = type metadata accessor for PBBlobAuth(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_255541FC0 = v0;
  return result;
}

uint64_t type metadata accessor for PBTouchBlob(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542C48);
}

uint64_t type metadata accessor for PBTouchBlob._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255543538);
}

uint64_t sub_21FB05870()
{
  return sub_21FB0293C(&OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, &qword_2555420B8, type metadata accessor for PBTouchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t PBTouchBlobsRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FB02708(v2, &qword_2555420B8, type metadata accessor for PBTouchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
    swift_release();
  }
  swift_retain();
  sub_21FB0597C();
  return swift_release();
}

uint64_t sub_21FB0597C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBTouchBlobs(0);
        sub_21FA2A08C(&qword_2555423A8, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBBlobAuth(0);
    sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
LABEL_5:
    sub_21FC5AE60();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBTouchBlobsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBTouchBlobsRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB05B08);
}

uint64_t sub_21FB05B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a4;
  v26 = a2;
  v27 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - v8;
  v25 = type metadata accessor for PBBlobAuth(0);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v22 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_2555420B8, type metadata accessor for PBTouchBlobs, v6);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = type metadata accessor for PBTouchBlobs(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_21FA44968(v18, (uint64_t)v13, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21FA2D1F8((uint64_t)v13, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBTouchBlobs);
    sub_21FA2A08C(&qword_2555423A8, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v17, type metadata accessor for PBTouchBlobs);
    if (v4)
      return result;
  }
  v20 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v20, (uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v25) == 1)
    return sub_21FA2D1F8((uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  v21 = v22;
  sub_21FA2D23C((uint64_t)v9, v22, type metadata accessor for PBBlobAuth);
  sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
  sub_21FC5AF50();
  return sub_21FA326EC(v21, type metadata accessor for PBBlobAuth);
}

uint64_t static PBTouchBlobsRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBTouchBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FB05E58) & 1;
}

BOOL sub_21FB05E58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t *v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;

  v56 = a2;
  v53 = type metadata accessor for PBBlobAuth(0);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v47 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t)&v46 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v52 = (uint64_t)&v46 - v10;
  v11 = type metadata accessor for PBTouchBlobs(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v49 = (uint64_t *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_2555437E8, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - v16;
  sub_21FA2D1A0(0, &qword_2555420B8, type metadata accessor for PBTouchBlobs, v6);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v55 = (uint64_t *)((char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v46 - v21;
  v23 = a1;
  v24 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_21FA44968(v24, (uint64_t)v22, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  v25 = v56;
  v26 = v56
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_21FA44968((uint64_t)v22, (uint64_t)v17, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  sub_21FA44968(v26, v27, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) != 1)
  {
    v36 = v55;
    sub_21FA44968((uint64_t)v17, (uint64_t)v55, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
    if (v28(v27, 1, v11) != 1)
    {
      v38 = v27;
      v39 = v49;
      sub_21FA2D23C(v38, (uint64_t)v49, type metadata accessor for PBTouchBlobs);
      v40 = *v36;
      v41 = *v39;
      swift_retain();
      swift_retain();
      if ((sub_21FB10018(v40, v41) & 1) != 0)
      {
        sub_21FC5AD1C();
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v42 = sub_21FC5B5D4();
        sub_21FA326EC((uint64_t)v39, type metadata accessor for PBTouchBlobs);
        sub_21FA2D1F8((uint64_t)v22, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
        sub_21FA326EC((uint64_t)v36, type metadata accessor for PBTouchBlobs);
        sub_21FA2D1F8((uint64_t)v17, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
        if ((v42 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_21FA326EC((uint64_t)v39, type metadata accessor for PBTouchBlobs);
        sub_21FA2D1F8((uint64_t)v22, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
        sub_21FA326EC((uint64_t)v36, type metadata accessor for PBTouchBlobs);
        sub_21FA2D1F8((uint64_t)v17, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
      }
LABEL_10:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v22, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
    sub_21FA326EC((uint64_t)v36, type metadata accessor for PBTouchBlobs);
LABEL_9:
    sub_21FA48E3C((uint64_t)v17, &qword_2555437E8, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
    goto LABEL_10;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v22, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
  if (v28(v27, 1, v11) != 1)
    goto LABEL_9;
  sub_21FA2D1F8((uint64_t)v17, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
LABEL_4:
  v29 = v23
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  v30 = v52;
  sub_21FA44968(v29, v52, &qword_255542068, type metadata accessor for PBBlobAuth);
  v31 = v25
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  v32 = v54;
  v33 = v54 + *(int *)(v50 + 48);
  sub_21FA44968(v30, v54, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA44968(v31, v33, &qword_255542068, type metadata accessor for PBBlobAuth);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  v35 = v53;
  if (v34(v32, 1, v53) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
    if (v34(v33, 1, v35) == 1)
    {
      sub_21FA2D1F8(v32, &qword_255542068, type metadata accessor for PBBlobAuth);
      return 1;
    }
    goto LABEL_18;
  }
  v43 = v48;
  sub_21FA44968(v32, (uint64_t)v48, &qword_255542068, type metadata accessor for PBBlobAuth);
  if (v34(v33, 1, v35) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
    sub_21FA326EC((uint64_t)v43, type metadata accessor for PBBlobAuth);
LABEL_18:
    sub_21FA48E3C(v32, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
    return 0;
  }
  v44 = v47;
  sub_21FA2D23C(v33, (uint64_t)v47, type metadata accessor for PBBlobAuth);
  v45 = _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(v43, v44);
  swift_release();
  swift_release();
  sub_21FA326EC((uint64_t)v44, type metadata accessor for PBBlobAuth);
  sub_21FA2D1F8(v30, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA326EC((uint64_t)v43, type metadata accessor for PBBlobAuth);
  sub_21FA2D1F8(v32, &qword_255542068, type metadata accessor for PBBlobAuth);
  return (v45 & 1) != 0;
}

uint64_t PBTouchBlobsRequest.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBTouchBlobsRequest, &qword_255542188, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
}

uint64_t sub_21FB065BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D738, &qword_255541FC0, a2);
}

unint64_t sub_21FB065D8()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB065F4()
{
  return PBTouchBlobsRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB06608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB0661C()
{
  sub_21FA2A08C(&qword_255543730, type metadata accessor for PBTouchBlobsRequest, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
  return sub_21FC5AD70();
}

uint64_t sub_21FB0666C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D730, (uint64_t)qword_255541FA8, a1);
}

uint64_t sub_21FB06688()
{
  sub_21FA2A08C(&qword_255542390, type metadata accessor for PBTouchBlobsRequest, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB066C8()
{
  sub_21FA2A08C(&qword_255542390, type metadata accessor for PBTouchBlobsRequest, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB06718(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBTouchBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FB05E58) & 1;
}

unint64_t static PBTouchBlobs.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB0675C(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255541FC8, (uint64_t)"touch_blobs", 11, MEMORY[0x24BE5C328]);
}

uint64_t static PBTouchBlobs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D740, (uint64_t)qword_255541FC8, a1);
}

uint64_t PBTouchBlobs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBTouchBlob, &qword_255542190, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
}

uint64_t PBTouchBlobs.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBTouchBlob, &qword_255542190, (uint64_t)&protocol conformance descriptor for PBTouchBlob, (void (*)(_QWORD))type metadata accessor for PBTouchBlobs);
}

uint64_t static PBTouchBlobs.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB10018, type metadata accessor for PBTouchBlobs) & 1;
}

uint64_t PBTouchBlobs.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBTouchBlobs, &qword_255542198, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
}

unint64_t sub_21FB0683C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB06858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB0686C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobs.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB06880()
{
  sub_21FA2A08C(&qword_255543728, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
  return sub_21FC5AD70();
}

uint64_t sub_21FB068D0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D740, (uint64_t)qword_255541FC8, a1);
}

uint64_t sub_21FB068EC()
{
  sub_21FA2A08C(&qword_2555423A8, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB0692C()
{
  sub_21FA2A08C(&qword_2555423A8, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB0697C(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB10018, type metadata accessor for PBTouchBlobs) & 1;
}

unint64_t static PBTouchBlob.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB069C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255541FE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255541FE0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "expiration_time";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBTouchBlob._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D748, (uint64_t)qword_255541FE0, a1);
}

uint64_t sub_21FB06B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for PBTouchBlob._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  v2 = sub_21FC5ACEC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_255541FF8 = v0;
  return result;
}

uint64_t sub_21FB06BB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v13[-v5];
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  v8 = sub_21FC5ACEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v9;
  *(_QWORD *)(v1 + 24) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v6, &qword_255542078, v3);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v7, &qword_255542078, v3);
  swift_endAccess();
  return v1;
}

uint64_t type metadata accessor for PBTouchBlobsResponse(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542CD8);
}

uint64_t type metadata accessor for PBBlobTouchResult(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255542D68);
}

uint64_t type metadata accessor for PBBlobTouchResult._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255543628);
}

uint64_t sub_21FB06D78()
{
  return sub_21FB08040(&OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t PBTouchBlob.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBTouchBlob, (void (*)(_QWORD))type metadata accessor for PBTouchBlob._StorageClass, sub_21FB06BB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB06DB8);
}

uint64_t sub_21FB06DB8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    v4 = MEMORY[0x24BE5B980];
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        v5 = v3;
        sub_21FC5AE3C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    sub_21FC5ACEC();
    sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], v4);
    v5 = v3;
    sub_21FC5AE60();
LABEL_5:
    v3 = v5;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBTouchBlob.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBTouchBlob, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB06F20);
}

uint64_t sub_21FB06F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - v9;
  v11 = sub_21FC5ACEC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v19[0] = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 24);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v19[9] = a4;
  v19[1] = a3;
  if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    v17 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    sub_21FA44968(v17, (uint64_t)v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      return sub_21FA2D1F8((uint64_t)v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    }
    else
    {
      v18 = v19[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v12 + 32))(v19[0], v10, v11);
      sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
      sub_21FC5AF50();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v18, v11);
    }
  }
  return result;
}

uint64_t static PBTouchBlob.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBTouchBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FB07168) & 1;
}

BOOL sub_21FB07168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;

  v4 = sub_21FC5ACEC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_2555437C8, &qword_255542078, v5);
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - v10;
  sub_21FA2D1A0(0, &qword_255542078, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v32 = (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - v15;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(_QWORD *)(a2 + 16) && v18 == *(_QWORD *)(a2 + 24)
    || (v19 = sub_21FC5BDF0(), result = 0, (v19 & 1) != 0))
  {
    v21 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
    sub_21FA44968(v21, (uint64_t)v16, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    v23 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_21FA44968((uint64_t)v16, (uint64_t)v11, &qword_255542078, v22);
    sub_21FA44968(v23, v24, &qword_255542078, v22);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v25((uint64_t)v11, 1, v4) == 1)
    {
      sub_21FA2D1F8((uint64_t)v16, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      if (v25(v24, 1, v4) == 1)
      {
        sub_21FA2D1F8((uint64_t)v11, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        return 1;
      }
    }
    else
    {
      v26 = v32;
      sub_21FA44968((uint64_t)v11, v32, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      if (v25(v24, 1, v4) != 1)
      {
        v27 = v31;
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v31, v24, v4);
        v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
        sub_21FA2A08C(&qword_2555437D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
        v29 = sub_21FC5B5D4();
        v30 = *(void (**)(char *, uint64_t))(v6 + 8);
        v30(v27, v4);
        sub_21FA2D1F8((uint64_t)v16, &qword_255542078, v28);
        v30((char *)v26, v4);
        sub_21FA2D1F8((uint64_t)v11, &qword_255542078, v28);
        return (v29 & 1) != 0;
      }
      sub_21FA2D1F8((uint64_t)v16, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v26, v4);
    }
    sub_21FA48E3C((uint64_t)v11, &qword_2555437C8, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    return 0;
  }
  return result;
}

uint64_t PBTouchBlob.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBTouchBlob, &qword_2555421A0, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
}

uint64_t sub_21FB0753C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D750, &qword_255541FF8, a2);
}

unint64_t sub_21FB07558()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB07574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlob.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB07588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlob.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB0759C()
{
  sub_21FA2A08C(&qword_255543720, type metadata accessor for PBTouchBlob, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
  return sub_21FC5AD70();
}

uint64_t sub_21FB075EC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D748, (uint64_t)qword_255541FE0, a1);
}

uint64_t sub_21FB07608()
{
  sub_21FA2A08C(&qword_255542190, type metadata accessor for PBTouchBlob, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB07648()
{
  sub_21FA2A08C(&qword_255542190, type metadata accessor for PBTouchBlob, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB07698(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBTouchBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FB07168) & 1;
}

unint64_t static PBTouchBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_21FB076DC(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255542000, (uint64_t)"results", 7, MEMORY[0x24BE5C318]);
}

uint64_t sub_21FB076FC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v11 = v10;
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_21FC5EE30;
  v15 = v14 + v13 + *(int *)(v11 + 48);
  *(_QWORD *)(v14 + v13) = 1;
  *(_QWORD *)v15 = a3;
  *(_QWORD *)(v15 + 8) = a4;
  *(_BYTE *)(v15 + 16) = 2;
  v16 = *a5;
  v17 = sub_21FC5AF5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  return sub_21FC5AF68();
}

uint64_t static PBTouchBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D758, (uint64_t)qword_255542000, a1);
}

uint64_t PBTouchBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBBlobTouchResult, &qword_2555421A8, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
}

uint64_t sub_21FB0785C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  char v11;

  while (1)
  {
    result = sub_21FC5AD88();
    if (v6 || (v11 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      sub_21FA2A08C(a5, a4, a6);
      sub_21FC5AE54();
    }
    v6 = 0;
  }
  return result;
}

uint64_t PBTouchBlobsResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBBlobTouchResult, &qword_2555421A8, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult, (void (*)(_QWORD))type metadata accessor for PBTouchBlobsResponse);
}

uint64_t sub_21FB07958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v13)(_QWORD);

  if (!*(_QWORD *)(*(_QWORD *)v7 + 16)
    || (v13 = a7, a4(0), sub_21FA2A08C(a5, a4, a6), result = sub_21FC5AF44(), a7 = v13, !v8))
  {
    a7(0);
    return sub_21FC5AD04();
  }
  return result;
}

uint64_t static PBTouchBlobsResponse.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F53C, type metadata accessor for PBTouchBlobsResponse) & 1;
}

uint64_t PBTouchBlobsResponse.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBTouchBlobsResponse, &qword_2555421B0, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
}

unint64_t sub_21FB07A94()
{
  return 0xD000000000000032;
}

uint64_t sub_21FB07AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB07AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobsResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB07AD8()
{
  sub_21FA2A08C(&qword_255543718, type metadata accessor for PBTouchBlobsResponse, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
  return sub_21FC5AD70();
}

uint64_t sub_21FB07B28@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D758, (uint64_t)qword_255542000, a1);
}

uint64_t sub_21FB07B44()
{
  sub_21FA2A08C(&qword_2555423D0, type metadata accessor for PBTouchBlobsResponse, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB07B84()
{
  sub_21FA2A08C(&qword_2555423D0, type metadata accessor for PBTouchBlobsResponse, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB07BD4(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F53C, type metadata accessor for PBTouchBlobsResponse) & 1;
}

unint64_t static PBBlobTouchResult.protoMessageName.getter()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_21FB07C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255542018);
  __swift_project_value_buffer(v0, (uint64_t)qword_255542018);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "id";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "result_code";
  *((_QWORD *)v12 + 1) = 11;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "expiration_time";
  *(_QWORD *)(v13 + 8) = 15;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobTouchResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D760, (uint64_t)qword_255542018, a1);
}

uint64_t sub_21FB07DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for PBBlobTouchResult._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  v2 = sub_21FC5ACEC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_255542030 = v0;
  return result;
}

uint64_t sub_21FB07E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  _BYTE v15[24];

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v15[-v4];
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_BYTE *)(v1 + 40) = 1;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  v7 = sub_21FC5ACEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)(v1 + 24) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v10;
  *(_BYTE *)(v1 + 40) = v11;
  v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA44968(v12, (uint64_t)v5, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_255542078, v13);
  swift_endAccess();
  return v1;
}

uint64_t sub_21FB08034()
{
  return sub_21FB08040(&OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t sub_21FB08040(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v1 + *a1, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  return swift_deallocClassInstance();
}

uint64_t PBBlobTouchResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBBlobTouchResult, (void (*)(_QWORD))type metadata accessor for PBBlobTouchResult._StorageClass, sub_21FB07E5C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB080C4);
}

uint64_t sub_21FB080C4()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        sub_21FB0C5D4();
        v4 = v3;
        sub_21FC5ADC4();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        v4 = v3;
        sub_21FC5AE3C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    sub_21FC5ACEC();
    sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
    v4 = v3;
    sub_21FC5AE60();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBBlobTouchResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBBlobTouchResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB08270);
}

uint64_t sub_21FB08270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - v9;
  v11 = sub_21FC5ACEC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v21 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 24);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v25 = a4;
  v22 = a3;
  if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1 + 32)
      || (v17 = *(_BYTE *)(a1 + 40),
          v23 = *(_QWORD *)(a1 + 32),
          v24 = v17,
          sub_21FB0C5D4(),
          result = sub_21FC5AED8(),
          !v4))
    {
      v18 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      sub_21FA44968(v18, (uint64_t)v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        return sub_21FA2D1F8((uint64_t)v10, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      }
      else
      {
        v19 = v21;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v10, v11);
        sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
        sub_21FC5AF50();
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v19, v11);
      }
    }
  }
  return result;
}

uint64_t static PBBlobTouchResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBBlobTouchResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB08510) & 1;
}

BOOL sub_21FB08510(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t (*v31)(uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;

  v4 = sub_21FC5ACEC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_2555437C8, &qword_255542078, v5);
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - v10;
  sub_21FA2D1A0(0, &qword_255542078, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v34 - v16;
  swift_beginAccess();
  v18 = a1[2];
  v19 = a1[3];
  swift_beginAccess();
  if (v18 == *(_QWORD *)(a2 + 16) && v19 == *(_QWORD *)(a2 + 24)
    || (v20 = sub_21FC5BDF0(), result = 0, (v20 & 1) != 0))
  {
    swift_beginAccess();
    v22 = a1[4];
    swift_beginAccess();
    v23 = *(_QWORD *)(a2 + 32);
    if (*(_BYTE *)(a2 + 40) == 1)
      __asm { BR              X10 }
    if (v22 == v23)
    {
      v35 = v15;
      v24 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
      sub_21FA44968(v24, (uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
      v26 = a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_21FA44968((uint64_t)v17, (uint64_t)v11, &qword_255542078, v25);
      sub_21FA44968(v26, v27, &qword_255542078, v25);
      v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (v28((uint64_t)v11, 1, v4) == 1)
      {
        sub_21FA2D1F8((uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        if (v28(v27, 1, v4) == 1)
        {
          sub_21FA2D1F8((uint64_t)v11, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          return 1;
        }
      }
      else
      {
        v29 = (uint64_t)v35;
        sub_21FA44968((uint64_t)v11, (uint64_t)v35, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        if (v28(v27, 1, v4) != 1)
        {
          v30 = v36;
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v36, v27, v4);
          v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
          sub_21FA2A08C(&qword_2555437D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
          v32 = sub_21FC5B5D4();
          v33 = *(void (**)(char *, uint64_t))(v6 + 8);
          v33(v30, v4);
          sub_21FA2D1F8((uint64_t)v17, &qword_255542078, v31);
          v33((char *)v29, v4);
          sub_21FA2D1F8((uint64_t)v11, &qword_255542078, v31);
          return (v32 & 1) != 0;
        }
        sub_21FA2D1F8((uint64_t)v17, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v29, v4);
      }
      sub_21FA48E3C((uint64_t)v11, &qword_2555437C8, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    }
    return 0;
  }
  return result;
}

uint64_t PBBlobTouchResult.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBlobTouchResult, &qword_2555421B8, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
}

uint64_t sub_21FB08968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D768, &qword_255542030, a2);
}

unint64_t sub_21FB08984()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_21FB089A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobTouchResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB089B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobTouchResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB089C8()
{
  sub_21FA2A08C(&qword_255543710, type metadata accessor for PBBlobTouchResult, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
  return sub_21FC5AD70();
}

uint64_t sub_21FB08A18@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D760, (uint64_t)qword_255542018, a1);
}

uint64_t sub_21FB08A34()
{
  sub_21FA2A08C(&qword_2555421A8, type metadata accessor for PBBlobTouchResult, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB08A74()
{
  sub_21FA2A08C(&qword_2555421A8, type metadata accessor for PBBlobTouchResult, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB08AC4(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBBlobTouchResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB08510) & 1;
}

uint64_t sub_21FB08AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255542038);
  __swift_project_value_buffer(v0, (uint64_t)qword_255542038);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "OK";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "ID_NOT_FOUND";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "SERVER_ERROR";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "INVALID_EXPIRATION_TIME";
  *((_QWORD *)v16 + 1) = 23;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBlobTouchResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D770, (uint64_t)qword_255542038, a1);
}

uint64_t sub_21FB08CD4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D770, (uint64_t)qword_255542038, a1);
}

uint64_t _s19HealthRecordsDaemon18PBPullBlobsRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if ((sub_21FB0E158(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
    if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v13 = type metadata accessor for PBPullBlobsRequest(0);
      v14 = a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 24), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon18PBBlobDeleteResultV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v14 = *(_QWORD *)(a1 + 32);
      if (*(_BYTE *)(a1 + 40) == 1)
        v14 = qword_21FC66368[v14];
      v15 = *(_QWORD *)(a2 + 32);
      if (*(_BYTE *)(a2 + 40))
        __asm { BR              X11 }
      if (v14 == v15)
      {
        v16 = type metadata accessor for PBBlobDeleteResult(0);
        v17 = a1 + *(int *)(v16 + 28);
        v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v18(v10, v17, v4);
        v18(v8, a2 + *(int *)(v16 + 28), v4);
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_21FC5B5D4();
        v19 = *(void (**)(char *, uint64_t))(v5 + 8);
        v19(v8, v4);
        v19(v10, v4);
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon15PBBlobAttributeV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if (a1[4] == *((_QWORD *)a2 + 4) && a1[5] == *((_QWORD *)a2 + 5) || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        v14 = type metadata accessor for PBBlobAttribute(0);
        v15 = (char *)a1 + *(int *)(v14 + 28);
        v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v16(v10, v15, v4);
        v16(v8, &a2[*(int *)(v14 + 28)], v4);
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_21FC5B5D4();
        v17 = *(void (**)(char *, uint64_t))(v5 + 8);
        v17(v8, v4);
        v17(v10, v4);
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_21FB091BC(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = sub_21FC5AD1C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  if ((a3(*a1, *(_QWORD *)a2) & 1) != 0)
  {
    v15 = a4(0);
    v16 = (char *)a1 + *(int *)(v15 + 20);
    v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v14, v16, v8);
    v17(v12, &a2[*(int *)(v15 + 20)], v8);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v18 = sub_21FC5B5D4();
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    v19(v14, v8);
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if ((sub_21FB10A58(*a1, *a2) & 1) != 0 && (sub_21FB13260(a1[1], a1[2]), (v11 & 1) != 0))
  {
    if (a1[3] == a2[3] && a1[4] == a2[4] || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v13 = type metadata accessor for PBBlobAuth(0);
      v14 = (char *)a1 + *(int *)(v13 + 28);
      v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, (char *)a2 + *(int *)(v13 + 28), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

unint64_t sub_21FB09464()
{
  unint64_t result;

  result = qword_255542178;
  if (!qword_255542178)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobDeleteResult.ResultCode, &type metadata for PBBlobDeleteResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_255542178);
  }
  return result;
}

unint64_t sub_21FB094AC()
{
  unint64_t result;

  result = qword_2555421C0;
  if (!qword_2555421C0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPushResult.ResultCode, &type metadata for PBBlobPushResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555421C0);
  }
  return result;
}

unint64_t sub_21FB094F4()
{
  unint64_t result;

  result = qword_2555421C8;
  if (!qword_2555421C8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPushResult.ResultCode, &type metadata for PBBlobPushResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555421C8);
  }
  return result;
}

unint64_t sub_21FB0953C()
{
  unint64_t result;

  result = qword_2555421D0;
  if (!qword_2555421D0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPushResult.ResultCode, &type metadata for PBBlobPushResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555421D0);
  }
  return result;
}

uint64_t sub_21FB09580()
{
  return sub_21FB095AC(&qword_2555421D8, &qword_2555421E0);
}

uint64_t sub_21FB095AC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_21FA5304C(255, a2);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21FB095F0()
{
  unint64_t result;

  result = qword_2555421E8;
  if (!qword_2555421E8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPullResult.ResultCode, &type metadata for PBBlobPullResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555421E8);
  }
  return result;
}

unint64_t sub_21FB09638()
{
  unint64_t result;

  result = qword_2555421F0;
  if (!qword_2555421F0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPullResult.ResultCode, &type metadata for PBBlobPullResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555421F0);
  }
  return result;
}

unint64_t sub_21FB09680()
{
  unint64_t result;

  result = qword_2555421F8;
  if (!qword_2555421F8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPullResult.ResultCode, &type metadata for PBBlobPullResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555421F8);
  }
  return result;
}

uint64_t sub_21FB096C4()
{
  return sub_21FB095AC(&qword_255542200, &qword_255542208);
}

unint64_t sub_21FB096F4()
{
  unint64_t result;

  result = qword_255542210;
  if (!qword_255542210)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobDeleteResult.ResultCode, &type metadata for PBBlobDeleteResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_255542210);
  }
  return result;
}

unint64_t sub_21FB0973C()
{
  unint64_t result;

  result = qword_255542218;
  if (!qword_255542218)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobDeleteResult.ResultCode, &type metadata for PBBlobDeleteResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_255542218);
  }
  return result;
}

unint64_t sub_21FB09784()
{
  unint64_t result;

  result = qword_255542220;
  if (!qword_255542220)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobDeleteResult.ResultCode, &type metadata for PBBlobDeleteResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_255542220);
  }
  return result;
}

uint64_t sub_21FB097C8()
{
  return sub_21FB095AC(&qword_255542228, &qword_255542230);
}

unint64_t sub_21FB097F8()
{
  unint64_t result;

  result = qword_255542238;
  if (!qword_255542238)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobTouchResult.ResultCode, &type metadata for PBBlobTouchResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_255542238);
  }
  return result;
}

unint64_t sub_21FB09840()
{
  unint64_t result;

  result = qword_255542240;
  if (!qword_255542240)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobTouchResult.ResultCode, &type metadata for PBBlobTouchResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_255542240);
  }
  return result;
}

unint64_t sub_21FB09888()
{
  unint64_t result;

  result = qword_255542248;
  if (!qword_255542248)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobTouchResult.ResultCode, &type metadata for PBBlobTouchResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_255542248);
  }
  return result;
}

uint64_t sub_21FB098CC()
{
  return sub_21FB095AC(&qword_255542250, &qword_255542258);
}

uint64_t sub_21FB098F8()
{
  return sub_21FA2A08C(&qword_255542260, type metadata accessor for PBPushBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
}

uint64_t sub_21FB09924()
{
  return sub_21FA2A08C(&qword_255542268, type metadata accessor for PBPushBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
}

uint64_t sub_21FB09950()
{
  return sub_21FA2A08C(&qword_2555420E0, type metadata accessor for PBPushBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
}

uint64_t sub_21FB0997C()
{
  return sub_21FA2A08C(&qword_255542270, type metadata accessor for PBPushBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
}

uint64_t sub_21FB099A8()
{
  return sub_21FA2A08C(&qword_255542278, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
}

uint64_t sub_21FB099D4()
{
  return sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
}

uint64_t sub_21FB09A00()
{
  return sub_21FA2A08C(&qword_2555420E8, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
}

uint64_t sub_21FB09A2C()
{
  return sub_21FA2A08C(&qword_255542288, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
}

uint64_t sub_21FB09A58()
{
  return sub_21FA2A08C(&qword_255542290, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
}

uint64_t sub_21FB09A84()
{
  return sub_21FA2A08C(&qword_2555409D8, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
}

uint64_t sub_21FB09AB0()
{
  return sub_21FA2A08C(&qword_2555420F8, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
}

uint64_t sub_21FB09ADC()
{
  return sub_21FA2A08C(&qword_255542298, type metadata accessor for PBBlobs, (uint64_t)&protocol conformance descriptor for PBBlobs);
}

uint64_t sub_21FB09B08()
{
  return sub_21FA2A08C(&qword_2555422A0, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
}

uint64_t sub_21FB09B34()
{
  return sub_21FA2A08C(&qword_2555420F0, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
}

uint64_t sub_21FB09B60()
{
  return sub_21FA2A08C(&qword_255542100, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
}

uint64_t sub_21FB09B8C()
{
  return sub_21FA2A08C(&qword_2555422A8, type metadata accessor for PBBlob, (uint64_t)&protocol conformance descriptor for PBBlob);
}

uint64_t sub_21FB09BB8()
{
  return sub_21FA2A08C(&qword_2555422B0, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
}

uint64_t sub_21FB09BE4()
{
  return sub_21FA2A08C(&qword_2555422B8, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
}

uint64_t sub_21FB09C10()
{
  return sub_21FA2A08C(&qword_255542108, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
}

uint64_t sub_21FB09C3C()
{
  return sub_21FA2A08C(&qword_2555422C0, type metadata accessor for PBBlobAttribute, (uint64_t)&protocol conformance descriptor for PBBlobAttribute);
}

uint64_t sub_21FB09C68()
{
  return sub_21FA2A08C(&qword_2555422C8, type metadata accessor for PBPushBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
}

uint64_t sub_21FB09C94()
{
  return sub_21FA2A08C(&qword_255540830, type metadata accessor for PBPushBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
}

uint64_t sub_21FB09CC0()
{
  return sub_21FA2A08C(&qword_255542118, type metadata accessor for PBPushBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
}

uint64_t sub_21FB09CEC()
{
  return sub_21FA2A08C(&qword_2555422D0, type metadata accessor for PBPushBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPushBlobsResponse);
}

uint64_t sub_21FB09D18()
{
  return sub_21FA2A08C(&qword_2555422D8, type metadata accessor for PBBlobPushResult, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
}

uint64_t sub_21FB09D44()
{
  return sub_21FA2A08C(&qword_255542110, type metadata accessor for PBBlobPushResult, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
}

uint64_t sub_21FB09D70()
{
  return sub_21FA2A08C(&qword_255542120, type metadata accessor for PBBlobPushResult, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
}

uint64_t sub_21FB09D9C()
{
  return sub_21FA2A08C(&qword_2555422E0, type metadata accessor for PBBlobPushResult, (uint64_t)&protocol conformance descriptor for PBBlobPushResult);
}

uint64_t sub_21FB09DC8()
{
  return sub_21FA2A08C(&qword_2555422E8, type metadata accessor for PBPullBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
}

uint64_t sub_21FB09DF4()
{
  return sub_21FA2A08C(&qword_2555422F0, type metadata accessor for PBPullBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
}

uint64_t sub_21FB09E20()
{
  return sub_21FA2A08C(&qword_255542128, type metadata accessor for PBPullBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
}

uint64_t sub_21FB09E4C()
{
  return sub_21FA2A08C(&qword_2555422F8, type metadata accessor for PBPullBlobsRequest, (uint64_t)&protocol conformance descriptor for PBPullBlobsRequest);
}

uint64_t sub_21FB09E78()
{
  return sub_21FA2A08C(&qword_255542300, type metadata accessor for PBPullBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
}

uint64_t sub_21FB09EA4()
{
  return sub_21FA2A08C(&qword_255542308, type metadata accessor for PBPullBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
}

uint64_t sub_21FB09ED0()
{
  return sub_21FA2A08C(&qword_255542138, type metadata accessor for PBPullBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
}

uint64_t sub_21FB09EFC()
{
  return sub_21FA2A08C(&qword_255542310, type metadata accessor for PBPullBlobsResponse, (uint64_t)&protocol conformance descriptor for PBPullBlobsResponse);
}

uint64_t sub_21FB09F28()
{
  return sub_21FA2A08C(&qword_255542318, type metadata accessor for PBBlobPullResult, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
}

uint64_t sub_21FB09F54()
{
  return sub_21FA2A08C(&qword_255542130, type metadata accessor for PBBlobPullResult, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
}

uint64_t sub_21FB09F80()
{
  return sub_21FA2A08C(&qword_255542140, type metadata accessor for PBBlobPullResult, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
}

uint64_t sub_21FB09FAC()
{
  return sub_21FA2A08C(&qword_255542320, type metadata accessor for PBBlobPullResult, (uint64_t)&protocol conformance descriptor for PBBlobPullResult);
}

uint64_t sub_21FB09FD8()
{
  return sub_21FA2A08C(&qword_255542328, type metadata accessor for PBDeleteBlobsRequest, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
}

uint64_t sub_21FB0A004()
{
  return sub_21FA2A08C(&qword_255542330, type metadata accessor for PBDeleteBlobsRequest, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
}

uint64_t sub_21FB0A030()
{
  return sub_21FA2A08C(&qword_255542148, type metadata accessor for PBDeleteBlobsRequest, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
}

uint64_t sub_21FB0A05C()
{
  return sub_21FA2A08C(&qword_255542338, type metadata accessor for PBDeleteBlobsRequest, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
}

uint64_t sub_21FB0A088()
{
  return sub_21FA2A08C(&qword_255542340, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
}

uint64_t sub_21FB0A0B4()
{
  return sub_21FA2A08C(&qword_255540468, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
}

uint64_t sub_21FB0A0E0()
{
  return sub_21FA2A08C(&qword_255542158, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
}

uint64_t sub_21FB0A10C()
{
  return sub_21FA2A08C(&qword_255542348, type metadata accessor for PBDeleteBlobs, (uint64_t)&protocol conformance descriptor for PBDeleteBlobs);
}

uint64_t sub_21FB0A138()
{
  return sub_21FA2A08C(&qword_255542350, type metadata accessor for PBDeleteBlob, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
}

uint64_t sub_21FB0A164()
{
  return sub_21FA2A08C(&qword_255542150, type metadata accessor for PBDeleteBlob, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
}

uint64_t sub_21FB0A190()
{
  return sub_21FA2A08C(&qword_255542160, type metadata accessor for PBDeleteBlob, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
}

uint64_t sub_21FB0A1BC()
{
  return sub_21FA2A08C(&qword_255542358, type metadata accessor for PBDeleteBlob, (uint64_t)&protocol conformance descriptor for PBDeleteBlob);
}

uint64_t sub_21FB0A1E8()
{
  return sub_21FA2A08C(&qword_255542360, type metadata accessor for PBDeleteBlobsResponse, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
}

uint64_t sub_21FB0A214()
{
  return sub_21FA2A08C(&qword_255542368, type metadata accessor for PBDeleteBlobsResponse, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
}

uint64_t sub_21FB0A240()
{
  return sub_21FA2A08C(&qword_255542170, type metadata accessor for PBDeleteBlobsResponse, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
}

uint64_t sub_21FB0A26C()
{
  return sub_21FA2A08C(&qword_255542370, type metadata accessor for PBDeleteBlobsResponse, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsResponse);
}

uint64_t sub_21FB0A298()
{
  return sub_21FA2A08C(&qword_255542378, type metadata accessor for PBBlobDeleteResult, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
}

uint64_t sub_21FB0A2C4()
{
  return sub_21FA2A08C(&qword_255542168, type metadata accessor for PBBlobDeleteResult, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
}

uint64_t sub_21FB0A2F0()
{
  return sub_21FA2A08C(&qword_255542180, type metadata accessor for PBBlobDeleteResult, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
}

uint64_t sub_21FB0A31C()
{
  return sub_21FA2A08C(&qword_255542380, type metadata accessor for PBBlobDeleteResult, (uint64_t)&protocol conformance descriptor for PBBlobDeleteResult);
}

uint64_t sub_21FB0A348()
{
  return sub_21FA2A08C(&qword_255542388, type metadata accessor for PBTouchBlobsRequest, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
}

uint64_t sub_21FB0A374()
{
  return sub_21FA2A08C(&qword_255542390, type metadata accessor for PBTouchBlobsRequest, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
}

uint64_t sub_21FB0A3A0()
{
  return sub_21FA2A08C(&qword_255542188, type metadata accessor for PBTouchBlobsRequest, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
}

uint64_t sub_21FB0A3CC()
{
  return sub_21FA2A08C(&qword_255542398, type metadata accessor for PBTouchBlobsRequest, (uint64_t)&protocol conformance descriptor for PBTouchBlobsRequest);
}

uint64_t sub_21FB0A3F8()
{
  return sub_21FA2A08C(&qword_2555423A0, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
}

uint64_t sub_21FB0A424()
{
  return sub_21FA2A08C(&qword_2555423A8, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
}

uint64_t sub_21FB0A450()
{
  return sub_21FA2A08C(&qword_255542198, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
}

uint64_t sub_21FB0A47C()
{
  return sub_21FA2A08C(&qword_2555423B0, type metadata accessor for PBTouchBlobs, (uint64_t)&protocol conformance descriptor for PBTouchBlobs);
}

uint64_t sub_21FB0A4A8()
{
  return sub_21FA2A08C(&qword_2555423B8, type metadata accessor for PBTouchBlob, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
}

uint64_t sub_21FB0A4D4()
{
  return sub_21FA2A08C(&qword_255542190, type metadata accessor for PBTouchBlob, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
}

uint64_t sub_21FB0A500()
{
  return sub_21FA2A08C(&qword_2555421A0, type metadata accessor for PBTouchBlob, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
}

uint64_t sub_21FB0A52C()
{
  return sub_21FA2A08C(&qword_2555423C0, type metadata accessor for PBTouchBlob, (uint64_t)&protocol conformance descriptor for PBTouchBlob);
}

uint64_t sub_21FB0A558()
{
  return sub_21FA2A08C(&qword_2555423C8, type metadata accessor for PBTouchBlobsResponse, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
}

uint64_t sub_21FB0A584()
{
  return sub_21FA2A08C(&qword_2555423D0, type metadata accessor for PBTouchBlobsResponse, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
}

uint64_t sub_21FB0A5B0()
{
  return sub_21FA2A08C(&qword_2555421B0, type metadata accessor for PBTouchBlobsResponse, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
}

uint64_t sub_21FB0A5DC()
{
  return sub_21FA2A08C(&qword_2555423D8, type metadata accessor for PBTouchBlobsResponse, (uint64_t)&protocol conformance descriptor for PBTouchBlobsResponse);
}

uint64_t sub_21FB0A608()
{
  return sub_21FA2A08C(&qword_2555423E0, type metadata accessor for PBBlobTouchResult, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
}

uint64_t sub_21FB0A634()
{
  return sub_21FA2A08C(&qword_2555421A8, type metadata accessor for PBBlobTouchResult, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
}

uint64_t sub_21FB0A660()
{
  return sub_21FA2A08C(&qword_2555421B8, type metadata accessor for PBBlobTouchResult, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
}

uint64_t sub_21FB0A68C()
{
  return sub_21FA2A08C(&qword_2555423E8, type metadata accessor for PBBlobTouchResult, (uint64_t)&protocol conformance descriptor for PBBlobTouchResult);
}

uint64_t sub_21FB0A6B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF925C(a1, &qword_255542058, type metadata accessor for PBBlobs, type metadata accessor for PBPushBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, a2);
}

uint64_t sub_21FB0A6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBBlobs, (uint64_t (*)(char *))PBPushBlobsRequest.blobs.setter);
}

uint64_t sub_21FB0A710@<X0>(_QWORD *a1@<X8>)
{
  return PBPushBlobsRequest.blobAuth.getter(a1);
}

uint64_t sub_21FB0A730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBPushBlobsRequest.blobAuth.setter);
}

uint64_t sub_21FB0A754@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBBlob, a2);
}

uint64_t sub_21FB0A770(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8);
}

uint64_t sub_21FB0A79C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FAFA058(a1, type metadata accessor for PBBlob, a2);
}

uint64_t sub_21FB0A7B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFA0B0(a1, a2, a3, a4, type metadata accessor for PBBlob, (void (*)(_QWORD))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FAFE3C8);
}

uint64_t sub_21FB0A7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FAF6F68(a1, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_21FB0A810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAF70A4(a1, a2, a3, a4, (uint64_t (*)(char *))PBBlob.expirationTime.setter);
}

uint64_t sub_21FB0A82C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBBlobPushResult, a2);
}

uint64_t sub_21FB0A84C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBBlobPushResult, a2);
}

uint64_t sub_21FB0A86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_15Tm(a1, type metadata accessor for PBBlobPushResult, a2);
}

uint64_t sub_21FB0A87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FAF6F68(a1, type metadata accessor for PBBlobPushResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_21FB0A8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAF70A4(a1, a2, a3, a4, (uint64_t (*)(char *))PBBlobPushResult.expirationTime.setter);
}

uint64_t sub_21FB0A8BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBBlobPullResult, a2);
}

uint64_t sub_21FB0A8DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBBlobPullResult, a2);
}

uint64_t sub_21FB0A8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_15Tm(a1, type metadata accessor for PBBlobPullResult, a2);
}

uint64_t keypath_get_15Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 56);
  *(_QWORD *)a3 = *(_QWORD *)(v4 + 48);
  *(_BYTE *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_21FB0A96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBBlob, (uint64_t (*)(char *))PBBlobPullResult.blob.setter);
}

uint64_t sub_21FB0A990@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF925C(a1, &qword_2555420A0, type metadata accessor for PBDeleteBlobs, type metadata accessor for PBDeleteBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, a2);
}

uint64_t sub_21FB0A9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDeleteBlobs, (uint64_t (*)(char *))PBDeleteBlobsRequest.deleteBlobs.setter);
}

uint64_t sub_21FB0A9E8@<X0>(_QWORD *a1@<X8>)
{
  return PBDeleteBlobsRequest.blobAuth.getter(a1);
}

uint64_t sub_21FB0AA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBDeleteBlobsRequest.blobAuth.setter);
}

uint64_t sub_21FB0AA2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBDeleteBlob, a2);
}

uint64_t sub_21FB0AA48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBDeleteBlob, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FB03D10);
}

uint64_t sub_21FB0AA74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FAFA058(a1, type metadata accessor for PBDeleteBlob, a2);
}

uint64_t sub_21FB0AA90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFA0B0(a1, a2, a3, a4, type metadata accessor for PBDeleteBlob, (void (*)(_QWORD))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_21FB03D10);
}

uint64_t sub_21FB0AABC@<X0>(uint64_t a1@<X8>)
{
  return PBDeleteBlob.revocationAuthorization.getter(a1);
}

uint64_t sub_21FB0AADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(char *))PBDeleteBlob.revocationAuthorization.setter);
}

uint64_t sub_21FB0AB00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF925C(a1, &qword_2555420B8, type metadata accessor for PBTouchBlobs, type metadata accessor for PBTouchBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, a2);
}

uint64_t sub_21FB0AB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBTouchBlobs, (uint64_t (*)(char *))PBTouchBlobsRequest.touchBlobs.setter);
}

uint64_t sub_21FB0AB58@<X0>(_QWORD *a1@<X8>)
{
  return PBTouchBlobsRequest.blobAuth.getter(a1);
}

uint64_t sub_21FB0AB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBTouchBlobsRequest.blobAuth.setter);
}

uint64_t sub_21FB0AB9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBTouchBlob, a2);
}

uint64_t sub_21FB0ABB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBTouchBlob, (void (*)(_QWORD))type metadata accessor for PBTouchBlob._StorageClass, sub_21FB06BB0);
}

uint64_t sub_21FB0ABE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FAF6F68(a1, type metadata accessor for PBTouchBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_21FB0AC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAF70A4(a1, a2, a3, a4, (uint64_t (*)(char *))PBTouchBlob.expirationTime.setter);
}

uint64_t sub_21FB0AC24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBBlobTouchResult, a2);
}

uint64_t sub_21FB0AC40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBBlobTouchResult, (void (*)(_QWORD))type metadata accessor for PBBlobTouchResult._StorageClass, sub_21FB07E5C);
}

uint64_t sub_21FB0AC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 40);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 32);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FB0ACCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FAF6F68(a1, type metadata accessor for PBBlobTouchResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_21FB0ACF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAF70A4(a1, a2, a3, a4, (uint64_t (*)(char *))PBBlobTouchResult.expirationTime.setter);
}

uint64_t getEnumTagSinglePayload for PBPushBlobsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPushBlobsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBBlobAuth(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    swift_bridgeObjectRetain();
    sub_21FA32314(v8, v9);
    a1[1] = v8;
    a1[2] = v9;
    v10 = a2[4];
    a1[3] = a2[3];
    a1[4] = v10;
    v11 = *(int *)(a3 + 28);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_21FC5AD1C();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for PBBlobAuth(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_21FA2D770(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PBBlobAuth(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  v7 = a2[2];
  swift_bridgeObjectRetain();
  sub_21FA32314(v6, v7);
  a1[1] = v6;
  a1[2] = v7;
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_21FC5AD1C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  return a1;
}

_QWORD *assignWithCopy for PBBlobAuth(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[1];
  v7 = a2[2];
  sub_21FA32314(v6, v7);
  v8 = a1[1];
  v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_21FA2D770(v8, v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for PBBlobAuth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for PBBlobAuth(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = a1[1];
  v7 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_21FA2D770(v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  a1[3] = *(_QWORD *)(a2 + 24);
  a1[4] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = a2 + v9;
  v12 = sub_21FC5AD1C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBlobAuth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB0B094(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBBlobAuth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FB0B11C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB0B190()
{
  return sub_21FB0BFBC();
}

uint64_t getEnumTagSinglePayload for PBBlobs()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBBlobs()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBBlob()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBBlob()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBBlobAttribute(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_21FC5AD1C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for PBBlobAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PBBlobAttribute(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_21FC5AD1C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

_QWORD *assignWithCopy for PBBlobAttribute(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for PBBlobAttribute(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for PBBlobAttribute(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBlobAttribute()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBBlobAttribute()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB0B58C()
{
  return sub_21FB0BFBC();
}

uint64_t getEnumTagSinglePayload for PBPushBlobsResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPushBlobsResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBBlobPushResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBBlobPushResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBBlobPushResult.ResultCode()
{
  return &type metadata for PBBlobPushResult.ResultCode;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBHistogramSeries(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_21FC5AD1C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for PBHistogramSeries(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PBHistogramSeries(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_21FC5AD1C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for PBHistogramSeries(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBPullBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for PBHistogramSeries(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPullBlobsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB0B8F8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBPullBlobsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FB0B980(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB0B9F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBPullBlobsResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPullBlobsResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBBlobPullResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBBlobPullResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBBlobPullResult.ResultCode()
{
  return &type metadata for PBBlobPullResult.ResultCode;
}

uint64_t getEnumTagSinglePayload for PBDeleteBlobsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlobsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBDeleteBlobs()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlobs()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBDeleteBlob()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlob()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBDeleteBlobsResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlobsResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBDateRange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = a2[4];
    v7 = *(int *)(a3 + 28);
    v8 = (uint64_t)a2 + v7;
    v9 = a1 + v7;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v10 = sub_21FC5AD1C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t destroy for PBDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = sub_21FC5AD1C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t assignWithCopy for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBlobDeleteResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_57Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBBlobDeleteResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_58Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB0BFA4()
{
  return sub_21FB0BFBC();
}

uint64_t sub_21FB0BFBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PBBlobDeleteResult.ResultCode()
{
  return &type metadata for PBBlobDeleteResult.ResultCode;
}

uint64_t getEnumTagSinglePayload for PBTouchBlobsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBTouchBlobsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBTouchBlobs()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBTouchBlobs()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBTouchBlob()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBTouchBlob()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBTouchBlobsResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_53Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBTouchBlobsResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_54Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB0C1AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBBlobTouchResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBBlobTouchResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBBlobTouchResult.ResultCode()
{
  return &type metadata for PBBlobTouchResult.ResultCode;
}

uint64_t sub_21FB0C254()
{
  return type metadata accessor for PBPushBlobsRequest._StorageClass(0);
}

void sub_21FB0C25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C3E0(a1, a2, a3, &qword_255542058, type metadata accessor for PBBlobs);
}

uint64_t sub_21FB0C270()
{
  return type metadata accessor for PBBlob._StorageClass(0);
}

void sub_21FB0C278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C2F8(a1, a2, a3, (uint64_t)&unk_21FC66050, MEMORY[0x24BEE0158] + 64, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

uint64_t sub_21FB0C2A0()
{
  return type metadata accessor for PBBlobPushResult._StorageClass(0);
}

void sub_21FB0C2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C2F8(a1, a2, a3, (uint64_t)&unk_21FC66068, (uint64_t)"\t", &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

uint64_t sub_21FB0C2CC()
{
  return type metadata accessor for PBBlobPullResult._StorageClass(0);
}

void sub_21FB0C2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C2F8(a1, a2, a3, (uint64_t)&unk_21FC66068, (uint64_t)"\t", &qword_255542090, type metadata accessor for PBBlob);
}

void sub_21FB0C2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t))
{
  unint64_t v7;

  sub_21FA2D1A0(319, a6, a7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v7 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB0C384()
{
  return type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
}

void sub_21FB0C38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C3E0(a1, a2, a3, &qword_2555420A0, type metadata accessor for PBDeleteBlobs);
}

uint64_t sub_21FB0C3A0()
{
  return type metadata accessor for PBDeleteBlob._StorageClass(0);
}

void sub_21FB0C3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C54C(a1, a2, a3, (uint64_t)&unk_21FC66050, (unint64_t *)&qword_255540488, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
}

uint64_t sub_21FB0C3C4()
{
  return type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
}

void sub_21FB0C3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C3E0(a1, a2, a3, &qword_2555420B8, type metadata accessor for PBTouchBlobs);
}

void sub_21FB0C3E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_21FA2D1A0(319, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v5 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v6 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB0C490()
{
  return type metadata accessor for PBTouchBlob._StorageClass(0);
}

void sub_21FB0C498()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB0C528()
{
  return type metadata accessor for PBBlobTouchResult._StorageClass(0);
}

void sub_21FB0C530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB0C54C(a1, a2, a3, (uint64_t)"\t", &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

void sub_21FB0C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v6;

  sub_21FA2D1A0(319, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v6 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_21FB0C5D4()
{
  unint64_t result;

  result = qword_2555437B0;
  if (!qword_2555437B0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobTouchResult.ResultCode, &type metadata for PBBlobTouchResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555437B0);
  }
  return result;
}

unint64_t sub_21FB0C618()
{
  unint64_t result;

  result = qword_2555437B8;
  if (!qword_2555437B8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPullResult.ResultCode, &type metadata for PBBlobPullResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555437B8);
  }
  return result;
}

unint64_t sub_21FB0C65C()
{
  unint64_t result;

  result = qword_2555437C0;
  if (!qword_2555437C0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBBlobPushResult.ResultCode, &type metadata for PBBlobPushResult.ResultCode);
    atomic_store(result, (unint64_t *)&qword_2555437C0);
  }
  return result;
}

void sub_21FB0C718(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[3];
  _QWORD v16[5];

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489E0]), sel_initWithHealthStore_, a1);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = v6;
  v16[3] = &type metadata for ClinicalSharingAccountStore;
  v16[4] = &off_24E484B78;
  v16[0] = v6;
  *(_QWORD *)&v14 = a1;
  sub_21FA2CEA0((uint64_t)v16, (uint64_t)v15 + 8);
  v7 = objc_allocWithZone(MEMORY[0x24BDD3A58]);
  v8 = a1;
  v9 = v6;
  v10 = v8;
  v11 = a2;
  *(_QWORD *)&v15[0] = objc_msgSend(v7, sel_initWithHealthStore_, v10);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E40]), sel_initWithHealthStore_, v10);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  *((_QWORD *)&v14 + 1) = v12;
  *(_OWORD *)(a3 + 40) = v15[0];
  v13 = v15[2];
  *(_OWORD *)(a3 + 56) = v15[1];
  *(_OWORD *)(a3 + 72) = v13;
  *(_OWORD *)(a3 + 24) = v14;

}

uint64_t sub_21FB0C84C(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;

  if (a1)
    v5 = (uint64_t)objc_msgSend(a1, sel_BOOLValue);
  else
    v5 = 2;
  return a3(v5, a2);
}

uint64_t destroy for ClinicalSharingDefaultDaemonEnvironment(id *a1)
{

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 6));
}

uint64_t initializeWithCopy for ClinicalSharingDefaultDaemonEnvironment(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = a1 + 48;
  v10 = a2 + 48;
  v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v11;
  v12 = v11;
  v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  v14 = v3;
  v15 = v4;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v13(v9, v10, v12);
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingDefaultDaemonEnvironment(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDefaultDaemonEnvironment(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingRootNodeInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingRootNodeInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDefaultDaemonEnvironment()
{
  return &type metadata for ClinicalSharingDefaultDaemonEnvironment;
}

id sub_21FB0CC64()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for URLSessionCertVerificationDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for URLSessionCertVerificationDelegate()
{
  return objc_opt_self();
}

void sub_21FB0CCB4(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = objc_msgSend(a1, sel_protectionSpace);
  v6 = objc_msgSend(v5, sel_serverTrust);

  if (v6)
  {
    if (HKAcceptAuthenticationChallengeWithTrust())
    {
      if (qword_25406B7F8 != -1)
        swift_once();
      v7 = sub_21FC5AFD4();
      __swift_project_value_buffer(v7, (uint64_t)qword_25406D830);
      v8 = a2;
      v9 = sub_21FC5AFC8();
      v10 = sub_21FC5B970();
      if (os_log_type_enabled(v9, v10))
      {
        v40 = a3;
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v42 = v12;
        *(_DWORD *)v11 = 136315138;
        v13 = v8;
        v14 = objc_msgSend(v13, sel_description);
        v15 = sub_21FC5B604();
        v17 = v16;

        v18 = v15;
        a3 = v40;
        sub_21FABDCF8(v18, v17, &v42);
        sub_21FC5BAC0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21FA27000, v9, v10, "%s: SecTrustStore verification passed for root cert from FHIR API", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v12, -1, -1);
        MEMORY[0x2207D105C](v11, -1, -1);

      }
      else
      {

      }
      (*(void (**)(uint64_t, uint64_t, _QWORD))(a3 + 16))(a3, 1, 0);
    }
    else
    {
      if (qword_25406B7F8 != -1)
        swift_once();
      v30 = sub_21FC5AFD4();
      __swift_project_value_buffer(v30, (uint64_t)qword_25406D830);
      v31 = a2;
      v32 = sub_21FC5AFC8();
      v33 = sub_21FC5B97C();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v42 = v41;
        *(_DWORD *)v34 = 136315138;
        v35 = v31;
        v36 = objc_msgSend(v35, sel_description);
        v37 = sub_21FC5B604();
        v39 = v38;

        sub_21FABDCF8(v37, v39, &v42);
        sub_21FC5BAC0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21FA27000, v32, v33, "%s: HKAcceptAuthenticationChallengeWithTrust doesn't trust the certificate, cancelling auth challenge", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v41, -1, -1);
        MEMORY[0x2207D105C](v34, -1, -1);

      }
      else
      {

      }
      (*(void (**)(uint64_t, uint64_t, _QWORD))(a3 + 16))(a3, 2, 0);
    }

  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v19 = sub_21FC5AFD4();
    __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
    v20 = a2;
    v21 = sub_21FC5AFC8();
    v22 = sub_21FC5B97C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v42 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = v20;
      v26 = objc_msgSend(v25, sel_description);
      v27 = sub_21FC5B604();
      v29 = v28;

      sub_21FABDCF8(v27, v29, &v42);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v21, v22, "%s: Could not retrieve serverTrust from FHIR API connection, cancelling auth challenge", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v24, -1, -1);
      MEMORY[0x2207D105C](v23, -1, -1);

    }
    else
    {

    }
    (*(void (**)(uint64_t, uint64_t, _QWORD))(a3 + 16))(a3, 2, 0);
  }
}

uint64_t destroy for ClinicalSharingRootNodeInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D770(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClinicalSharingRootNodeInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[4];
  v7 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21FA32314(v6, v7);
  a1[4] = v6;
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingRootNodeInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[4];
  v5 = a2[5];
  sub_21FA32314(v4, v5);
  v6 = a1[4];
  v7 = a1[5];
  a1[4] = v4;
  a1[5] = v5;
  sub_21FA2D770(v6, v7);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClinicalSharingRootNodeInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_21FA2D770(v5, v6);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingRootNodeInfo()
{
  return &type metadata for ClinicalSharingRootNodeInfo;
}

uint64_t sub_21FB0D4B4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_21FB0D4B0(v7, v9) & 1;
}

uint64_t sub_21FB0D51C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  int v30;
  _BOOL8 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_21FC5AAF4();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_255543828, (void (*)(uint64_t))sub_21FA9B1A8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v7);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v42 = a1;
  v43 = (char *)&v38 - v11;
  v45 = 0;
  v12 = *(_QWORD *)(a1 + 64);
  v40 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v41 = (unint64_t)(v13 + 63) >> 6;
  v39 = v41 - 1;
  v17 = v46;
  v16 = v47;
  v18 = (uint64_t)v44;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v45 << 6);
LABEL_8:
      v21 = v42;
      (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v9, *(_QWORD *)(v42 + 48) + *(_QWORD *)(v46 + 72) * v20, v47);
      v22 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v20);
      sub_21FA9B1A8();
      v24 = v23;
      *(_QWORD *)&v9[*(int *)(v23 + 48)] = v22;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 0, 1, v23);
      swift_bridgeObjectRetain();
      v25 = (uint64_t)v43;
      goto LABEL_27;
    }
    v26 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    v25 = (uint64_t)v43;
    if (v26 < v41)
    {
      v27 = *(_QWORD *)(v40 + 8 * v26);
      if (v27)
        goto LABEL_12;
      v28 = v45 + 2;
      ++v45;
      if (v26 + 1 < v41)
      {
        v27 = *(_QWORD *)(v40 + 8 * v28);
        if (v27)
          goto LABEL_15;
        v45 = v26 + 1;
        if (v26 + 2 < v41)
        {
          v27 = *(_QWORD *)(v40 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          v28 = v26 + 3;
          v45 = v26 + 2;
          if (v26 + 3 < v41)
            break;
        }
      }
    }
LABEL_26:
    sub_21FA9B1A8();
    v24 = v29;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 1, 1, v29);
    v15 = 0;
LABEL_27:
    sub_21FA87DBC((uint64_t)v9, v25, &qword_255543828, (void (*)(uint64_t))sub_21FA9B1A8);
    sub_21FA9B1A8();
    v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v25, 1, v24);
    v31 = v30 == 1;
    if (v30 == 1)
      return v31;
    v32 = *(int *)(v24 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v18, v25, v16);
    v33 = *(_QWORD *)(v25 + v32);
    sub_21FA73E18(v18);
    v35 = v34;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v36 = swift_bridgeObjectRetain();
    v37 = sub_21FBACA50(v36, v33);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
      return v31;
  }
  v27 = *(_QWORD *)(v40 + 8 * v28);
  if (v27)
  {
LABEL_15:
    v26 = v28;
LABEL_12:
    v15 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v26 << 6);
    v45 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v41)
    {
      v45 = v39;
      goto LABEL_26;
    }
    v27 = *(_QWORD *)(v40 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_21FB0D8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  int v37;
  _BOOL8 v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  void (*v47)(char *, uint64_t);
  int64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;

  v4 = sub_21FC5AAAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v48 - v9;
  sub_21FA2ED54(0, &qword_255543810, (void (*)(uint64_t))sub_21FB135D4);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v48 - v16;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v52 = a2;
  v53 = 0;
  v51 = a1;
  v20 = *(_QWORD *)(a1 + 64);
  v19 = a1 + 64;
  v18 = v20;
  v21 = 1 << *(_BYTE *)(v19 - 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v18;
  v49 = v19;
  v50 = (unint64_t)(v21 + 63) >> 6;
  v48 = v50 - 1;
  while (1)
  {
    if (v23)
    {
      v24 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v25 = v24 | (v53 << 6);
      v26 = v51;
LABEL_8:
      v27 = *(_QWORD *)(v26 + 56);
      v28 = *(_QWORD *)(v26 + 48) + 16 * v25;
      v29 = *(_QWORD *)v28;
      LOBYTE(v28) = *(_BYTE *)(v28 + 8);
      *(_QWORD *)v14 = v29;
      v14[8] = v28;
      v30 = v27 + *(_QWORD *)(v5 + 72) * v25;
      sub_21FB135D4();
      v32 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&v14[*(int *)(v31 + 48)], v30, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v14, 0, 1, v32);
      goto LABEL_32;
    }
    v33 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v33 < v50)
    {
      v34 = *(_QWORD *)(v49 + 8 * v33);
      if (v34)
        goto LABEL_12;
      v35 = v53 + 2;
      ++v53;
      if (v33 + 1 < v50)
      {
        v34 = *(_QWORD *)(v49 + 8 * v35);
        if (v34)
          goto LABEL_16;
        v53 = v33 + 1;
        if (v33 + 2 < v50)
        {
          v34 = *(_QWORD *)(v49 + 8 * (v33 + 2));
          if (v34)
          {
            v33 += 2;
            goto LABEL_12;
          }
          v53 = v33 + 2;
          if (v33 + 3 < v50)
          {
            v34 = *(_QWORD *)(v49 + 8 * (v33 + 3));
            if (v34)
            {
              v33 += 3;
LABEL_12:
              v26 = v51;
LABEL_13:
              v23 = (v34 - 1) & v34;
              v25 = __clz(__rbit64(v34)) + (v33 << 6);
              v53 = v33;
              goto LABEL_8;
            }
            v35 = v33 + 4;
            v53 = v33 + 3;
            if (v33 + 4 < v50)
              break;
          }
        }
      }
    }
LABEL_31:
    sub_21FB135D4();
    v32 = v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v14, 1, 1, v36);
    v23 = 0;
LABEL_32:
    sub_21FA87DBC((uint64_t)v14, (uint64_t)v17, &qword_255543810, (void (*)(uint64_t))sub_21FB135D4);
    sub_21FB135D4();
    v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v17, 1, v32);
    v38 = v37 == 1;
    if (v37 == 1)
      return v38;
    v39 = &v17[*(int *)(v32 + 48)];
    v40 = *(_QWORD *)v17;
    v41 = v17[8];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v39, v4);
    v42 = v40;
    v43 = v52;
    v44 = sub_21FA73EB0(v42, v41);
    if ((v45 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return 0;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, *(_QWORD *)(v43 + 56) + *(_QWORD *)(v5 + 72) * v44, v4);
    sub_21FA2A08C(&qword_25553FC38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
    v46 = sub_21FC5B5D4();
    v47 = *(void (**)(char *, uint64_t))(v5 + 8);
    v47(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v47)(v10, v4);
    if ((v46 & 1) == 0)
      return v38;
  }
  v34 = *(_QWORD *)(v49 + 8 * v35);
  if (v34)
  {
LABEL_16:
    v33 = v35;
    goto LABEL_12;
  }
  v26 = v51;
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v50)
    {
      v53 = v48;
      goto LABEL_31;
    }
    v34 = *(_QWORD *)(v49 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_13;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21FB0DD04(uint64_t a1, uint64_t a2)
{
  return sub_21FB0E260(a1, a2, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FAFEC20);
}

uint64_t sub_21FB0DD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  float *v30;
  float *v31;
  uint64_t v32;
  float v33;
  float v34;
  float v35;
  char v36;
  _QWORD *v37;
  _QWORD *v38;
  BOOL v39;
  uint64_t v41;
  uint64_t v42;

  v4 = type metadata accessor for PBECGMeasurement(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v41 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v36 = 1;
      return v36 & 1;
    }
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = a1 + v13;
    v15 = a2 + v13;
    v16 = *(_QWORD *)(v8 + 72);
    v41 = v16;
    v42 = v14;
    while (1)
    {
      v17 = v16 * v12;
      sub_21FA2D120(v14 + v16 * v12, (uint64_t)v10, type metadata accessor for PBECGMeasurement);
      v18 = v15;
      sub_21FA2D120(v15 + v17, (uint64_t)v7, type metadata accessor for PBECGMeasurement);
      v19 = *(_QWORD *)v10 == *(_QWORD *)v7 && *((_QWORD *)v10 + 1) == *((_QWORD *)v7 + 1);
      if (!v19 && (sub_21FC5BDF0() & 1) == 0
        || *((float *)v10 + 4) != *((float *)v7 + 4)
        || (*((_QWORD *)v10 + 3) != *((_QWORD *)v7 + 3) || *((_QWORD *)v10 + 4) != *((_QWORD *)v7 + 4))
        && (sub_21FC5BDF0() & 1) == 0)
      {
        break;
      }
      if ((*((_QWORD *)v10 + 5) != *((_QWORD *)v7 + 5) || *((_QWORD *)v10 + 6) != *((_QWORD *)v7 + 6))
        && (sub_21FC5BDF0() & 1) == 0)
      {
        break;
      }
      if ((*((_QWORD *)v10 + 7) != *((_QWORD *)v7 + 7) || *((_QWORD *)v10 + 8) != *((_QWORD *)v7 + 8))
        && (sub_21FC5BDF0() & 1) == 0)
      {
        break;
      }
      if ((*((_QWORD *)v10 + 9) != *((_QWORD *)v7 + 9) || *((_QWORD *)v10 + 10) != *((_QWORD *)v7 + 10))
        && (sub_21FC5BDF0() & 1) == 0)
      {
        break;
      }
      v20 = (_QWORD *)*((_QWORD *)v10 + 11);
      v21 = (_QWORD *)*((_QWORD *)v7 + 11);
      v22 = v20[2];
      if (v22 != v21[2])
        break;
      if (v22 && v20 != v21)
      {
        if ((v20[4] != v21[4] || v20[5] != v21[5]) && (sub_21FC5BDF0() & 1) == 0)
          break;
        v23 = v22 - 1;
        if (v23)
        {
          v37 = v21 + 7;
          v38 = v20 + 7;
          do
          {
            v39 = *(v38 - 1) == *(v37 - 1) && *v38 == *v37;
            if (!v39 && (sub_21FC5BDF0() & 1) == 0)
              goto LABEL_57;
            v37 += 2;
            v38 += 2;
          }
          while (--v23);
        }
      }
      v24 = *((_QWORD *)v10 + 12);
      v25 = *((_QWORD *)v7 + 12);
      v26 = *(_QWORD *)(v24 + 16);
      if (v26 != *(_QWORD *)(v25 + 16))
        break;
      if (v26)
        v27 = v24 == v25;
      else
        v27 = 1;
      if (!v27)
      {
        if (*(float *)(v24 + 32) != *(float *)(v25 + 32))
          break;
        v30 = (float *)(v24 + 36);
        v31 = (float *)(v25 + 36);
        v32 = v26 - 1;
        while (v32)
        {
          v33 = *v30++;
          v34 = v33;
          v35 = *v31++;
          --v32;
          if (v34 != v35)
            goto LABEL_57;
        }
      }
      if (*((float *)v10 + 26) != *((float *)v7 + 26))
        break;
      v28 = *((_QWORD *)v10 + 14);
      if (v10[120] == 1)
        v28 = qword_21FC664A8[v28];
      v29 = *((_QWORD *)v7 + 14);
      if (v7[120])
        __asm { BR              X10 }
      if (v28 != v29)
        break;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v36 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBECGMeasurement);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBECGMeasurement);
      if ((v36 & 1) != 0)
      {
        ++v12;
        v16 = v41;
        v14 = v42;
        v15 = v18;
        if (v12 != v11)
          continue;
      }
      return v36 & 1;
    }
LABEL_57:
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBECGMeasurement);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBECGMeasurement);
  }
  v36 = 0;
  return v36 & 1;
}

uint64_t sub_21FB0E158(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_21FC5BDF0(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_21FC5BDF0() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_21FB0E21C(uint64_t a1, uint64_t a2)
{
  return sub_21FB0EF7C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], &qword_25553FC38, MEMORY[0x24BDCE958]);
}

uint64_t sub_21FB0E238(uint64_t a1, uint64_t a2)
{
  return sub_21FB113A0(a1, a2, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t (*)(char *, char *))static PBMedicationTrackingDoseEvent.== infix(_:_:));
}

uint64_t sub_21FB0E24C(uint64_t a1, uint64_t a2)
{
  return sub_21FB0E260(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t (*)(uint64_t, uint64_t))sub_21FB88088);
}

uint64_t sub_21FB0E260(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  v22 = a4;
  v23 = a3(0);
  v7 = MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v20 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 == *(_QWORD *)(a2 + 16))
  {
    if (!v13 || a1 == a2)
      return 1;
    v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v21 = *(_QWORD *)(v10 + 72);
    while (1)
    {
      sub_21FA2D120(a1 + v14, (uint64_t)v12, a3);
      sub_21FA2D120(a2 + v14, (uint64_t)v9, a3);
      v15 = *(int *)(v23 + 20);
      v16 = *(_QWORD *)&v12[v15];
      v17 = *(_QWORD *)&v9[v15];
      if (v16 != v17)
      {
        swift_retain();
        swift_retain();
        v18 = v22(v16, v17);
        swift_release();
        swift_release();
        if ((v18 & 1) == 0)
          break;
      }
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((sub_21FC5B5D4() & 1) == 0)
        break;
      sub_21FA326EC((uint64_t)v9, a3);
      sub_21FA326EC((uint64_t)v12, a3);
      v14 += v21;
      if (!--v13)
        return 1;
    }
    sub_21FA326EC((uint64_t)v9, a3);
    sub_21FA326EC((uint64_t)v12, a3);
  }
  return 0;
}

uint64_t sub_21FB0E430(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1[7];
    v4 = a1[4] == a2[4] && a1[5] == a2[5];
    if (v4 || (sub_21FC5BDF0() & 1) != 0)
      __asm { BR              X10 }
    return 0;
  }
  return 1;
}

uint64_t sub_21FB0EF60(uint64_t a1, uint64_t a2)
{
  return sub_21FB0EF7C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], &qword_25553FC40, MEMORY[0x24BDCB8A0]);
}

uint64_t sub_21FB0EF7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);

  v10 = a3(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 == *(_QWORD *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      v25 = 1;
    }
    else
    {
      v33 = v13;
      v34 = v12;
      v35 = a3;
      v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v30 = *(_QWORD *)(v12 + 72);
      v31 = a1;
      v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v18 = v16 - 1;
      v19 = v13;
      do
      {
        v20 = v32;
        v32((uint64_t)v15, a1 + v17, v10);
        v21 = a2;
        v20(v19, a2 + v17, v10);
        v22 = a4;
        v23 = a4;
        v24 = a5;
        sub_21FA2A08C(v23, v35, a5);
        v25 = sub_21FC5B5D4();
        v26 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v26(v19, v10);
        v26((uint64_t)v15, v10);
        v28 = v18-- != 0;
        if ((v25 & 1) == 0)
          break;
        v17 += v30;
        a5 = v24;
        a4 = v22;
        a2 = v21;
        a1 = v31;
      }
      while (v28);
    }
  }
  else
  {
    v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_21FB0F120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v4 = type metadata accessor for PBMedicationTracking(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_21FA2D120(a1 + v12, (uint64_t)v10, type metadata accessor for PBMedicationTracking);
      sub_21FA2D120(a2 + v12, (uint64_t)v7, type metadata accessor for PBMedicationTracking);
      v14 = *(int *)(v4 + 20);
      v15 = *(_QWORD *)&v10[v14];
      v16 = *(_QWORD **)&v7[v14];
      if ((_QWORD *)v15 != v16 && (sub_21FB84C40(v15, v16) & 1) == 0)
        break;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((sub_21FC5B5D4() & 1) == 0)
        break;
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBMedicationTracking);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBMedicationTracking);
      v12 += v13;
      if (!--v11)
        return 1;
    }
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBMedicationTracking);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBMedicationTracking);
  }
  return 0;
}

uint64_t sub_21FB0F2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;

  v4 = type metadata accessor for PBBlobDeleteResult(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v19 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_21FA2D120(a1 + v12, (uint64_t)v10, type metadata accessor for PBBlobDeleteResult);
      sub_21FA2D120(a2 + v12, (uint64_t)v7, type metadata accessor for PBBlobDeleteResult);
      v13 = *(_QWORD *)v10 == *(_QWORD *)v7 && *((_QWORD *)v10 + 1) == *((_QWORD *)v7 + 1);
      if (!v13 && (sub_21FC5BDF0() & 1) == 0)
        break;
      v14 = *((_QWORD *)v10 + 2) == *((_QWORD *)v7 + 2) && *((_QWORD *)v10 + 3) == *((_QWORD *)v7 + 3);
      if (!v14 && (sub_21FC5BDF0() & 1) == 0)
        break;
      v15 = *((_QWORD *)v10 + 4);
      if (v10[40] == 1)
        v15 = qword_21FC664E8[v15];
      v16 = *((_QWORD *)v7 + 4);
      if (v7[40])
        __asm { BR              X10 }
      if (v15 != v16)
        break;
      v20 = v12;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v17 = v20;
      if ((sub_21FC5B5D4() & 1) == 0)
        break;
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBBlobDeleteResult);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBBlobDeleteResult);
      v12 = v17 + v19;
      if (!--v11)
        return 1;
    }
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBBlobDeleteResult);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBBlobDeleteResult);
    return 0;
  }
  return 1;
}

uint64_t sub_21FB0F53C(uint64_t a1, uint64_t a2)
{
  return sub_21FB0E260(a1, a2, type metadata accessor for PBBlobTouchResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB08510);
}

uint64_t sub_21FB0F550(uint64_t a1, uint64_t a2)
{
  return sub_21FB0E260(a1, a2, type metadata accessor for PBBlobPushResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB00254);
}

uint64_t sub_21FB0F564(uint64_t a1, uint64_t a2)
{
  return sub_21FB0E260(a1, a2, type metadata accessor for PBBlobPullResult, (uint64_t (*)(uint64_t, uint64_t))sub_21FB01DB8);
}

uint64_t sub_21FB0F578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t result;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v44 = type metadata accessor for PBBucket(0);
  v4 = *(_QWORD *)(v44 - 8);
  v5 = MEMORY[0x24BDAC7A8](v44);
  v7 = (double *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (double *)((char *)&v33 - v8);
  v10 = type metadata accessor for PBHistogramSeries.Value(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v17 = (uint64_t *)((char *)&v33 - v16);
  v18 = *(_QWORD *)(a1 + 16);
  if (v18 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v18 || a1 == a2)
    return 1;
  v39 = v14;
  v34 = v4;
  v19 = 0;
  v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(v15 + 72);
  v42 = v13;
  v43 = (uint64_t *)((char *)&v33 - v16);
  v37 = v21;
  v38 = v18;
  v35 = v23;
  v36 = v22;
  while (1)
  {
    v40 = v19;
    v24 = v23 * v19;
    sub_21FA2D120(v21 + v24, (uint64_t)v17, type metadata accessor for PBHistogramSeries.Value);
    sub_21FA2D120(v22 + v24, (uint64_t)v13, type metadata accessor for PBHistogramSeries.Value);
    v25 = *v17 == *v13 && v17[1] == v13[1];
    if (!v25 && (sub_21FC5BDF0() & 1) == 0
      || (v26 = v43[2], v27 = v13[2], v28 = *(_QWORD *)(v26 + 16), v28 != *(_QWORD *)(v27 + 16)))
    {
LABEL_28:
      sub_21FA326EC((uint64_t)v13, type metadata accessor for PBHistogramSeries.Value);
      sub_21FA326EC((uint64_t)v43, type metadata accessor for PBHistogramSeries.Value);
      return 0;
    }
    if (v28 && v26 != v27)
      break;
LABEL_20:
    if ((v43[3] != v13[3] || v43[4] != v13[4]) && (sub_21FC5BDF0() & 1) == 0)
      goto LABEL_28;
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v13 = v42;
    if ((sub_21FC5B5D4() & 1) == 0)
      goto LABEL_28;
    v19 = v40 + 1;
    sub_21FA326EC((uint64_t)v13, type metadata accessor for PBHistogramSeries.Value);
    v17 = v43;
    sub_21FA326EC((uint64_t)v43, type metadata accessor for PBHistogramSeries.Value);
    result = 1;
    v21 = v37;
    v23 = v35;
    v22 = v36;
    if (v19 == v38)
      return result;
  }
  v29 = 0;
  v30 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v41 = *(_QWORD *)(v34 + 72);
  while (1)
  {
    result = sub_21FA2D120(v26 + v30, (uint64_t)v9, type metadata accessor for PBBucket);
    if (v29 >= *(_QWORD *)(v27 + 16))
      break;
    sub_21FA2D120(v27 + v30, (uint64_t)v7, type metadata accessor for PBBucket);
    if (*v9 != *v7 || v9[1] != v7[1] || *((_DWORD *)v9 + 4) != *((_DWORD *)v7 + 4))
    {
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBBucket);
      sub_21FA326EC((uint64_t)v9, type metadata accessor for PBBucket);
      goto LABEL_28;
    }
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v13 = v42;
    v32 = sub_21FC5B5D4();
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBBucket);
    sub_21FA326EC((uint64_t)v9, type metadata accessor for PBBucket);
    if ((v32 & 1) == 0)
      goto LABEL_28;
    ++v29;
    v30 += v41;
    if (v28 == v29)
      goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_21FB0F954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for PBBucket(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (double *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (double *)((char *)&v18 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_16:
    v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v19 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    while (1)
    {
      sub_21FA2D120(a1 + v12, (uint64_t)v10, type metadata accessor for PBBucket);
      sub_21FA2D120(a2 + v12, (uint64_t)v7, type metadata accessor for PBBucket);
      if (*v10 != *v7 || v10[1] != v7[1] || *((_DWORD *)v10 + 4) != *((_DWORD *)v7 + 4))
        break;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBBucket);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBBucket);
      v16 = v13-- != 0;
      if ((v14 & 1) != 0)
      {
        v12 += v19;
        if (v16)
          continue;
      }
      return v14 & 1;
    }
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBBucket);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBBucket);
    goto LABEL_16;
  }
  v14 = 1;
  return v14 & 1;
}

BOOL sub_21FB0FB44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  _BOOL8 result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_21FB0FBB0(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBCycleTracking.Event, sub_21FB7C9F8);
}

uint64_t sub_21FB0FBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for PBSleepSummary.Schedule(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (unsigned __int8 *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (unsigned __int8 *)&v20 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_19:
    v17 = 0;
    return v17 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v21 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    while (1)
    {
      sub_21FA2D120(a1 + v12, (uint64_t)v10, type metadata accessor for PBSleepSummary.Schedule);
      sub_21FA2D120(a2 + v12, (uint64_t)v7, type metadata accessor for PBSleepSummary.Schedule);
      if (*v10 != *v7
        || v10[1] != v7[1]
        || v10[2] != v7[2]
        || v10[3] != v7[3]
        || v10[4] != v7[4]
        || v10[5] != v7[5]
        || v10[6] != v7[6]
        || *((_DWORD *)v10 + 2) != *((_DWORD *)v7 + 2)
        || *((_DWORD *)v10 + 3) != *((_DWORD *)v7 + 3))
      {
        break;
      }
      v14 = a2;
      v15 = v4;
      v16 = v13;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v17 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBSleepSummary.Schedule);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBSleepSummary.Schedule);
      --v13;
      v18 = v16 != 0;
      if ((v17 & 1) != 0)
      {
        v12 += v21;
        v4 = v15;
        a2 = v14;
        if (v18)
          continue;
      }
      return v17 & 1;
    }
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBSleepSummary.Schedule);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBSleepSummary.Schedule);
    goto LABEL_19;
  }
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_21FB0FE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v14;
  uint64_t v15;

  v15 = type metadata accessor for PBSleepSeries.Value(0);
  v4 = MEMORY[0x24BDAC7A8](v15);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v14 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 == *(_QWORD *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
      return 1;
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_21FA2D120(a1 + v11, (uint64_t)v9, type metadata accessor for PBSleepSeries.Value);
      sub_21FA2D120(a2 + v11, (uint64_t)v6, type metadata accessor for PBSleepSeries.Value);
      v12 = *(_QWORD *)v9 == *(_QWORD *)v6 && *((_QWORD *)v9 + 1) == *((_QWORD *)v6 + 1);
      if (!v12 && (sub_21FC5BDF0() & 1) == 0)
        break;
      if (*((_DWORD *)v9 + 4) != *((_DWORD *)v6 + 4))
        break;
      if (*((_DWORD *)v9 + 5) != *((_DWORD *)v6 + 5))
        break;
      if (*((_DWORD *)v9 + 6) != *((_DWORD *)v6 + 6))
        break;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((sub_21FC5B5D4() & 1) == 0)
        break;
      sub_21FA326EC((uint64_t)v6, type metadata accessor for PBSleepSeries.Value);
      sub_21FA326EC((uint64_t)v9, type metadata accessor for PBSleepSeries.Value);
      v11 += v14;
      if (!--v10)
        return 1;
    }
    sub_21FA326EC((uint64_t)v6, type metadata accessor for PBSleepSeries.Value);
    sub_21FA326EC((uint64_t)v9, type metadata accessor for PBSleepSeries.Value);
  }
  return 0;
}

uint64_t sub_21FB10004(uint64_t a1, uint64_t a2)
{
  return sub_21FB0E260(a1, a2, type metadata accessor for PBDeleteBlob, (uint64_t (*)(uint64_t, uint64_t))sub_21FB045BC);
}

uint64_t sub_21FB10018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;

  v4 = sub_21FC5ACEC();
  v5 = (void (*)(uint64_t))MEMORY[0x24BE5B990];
  v67 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FB13E1C(0, &qword_2555437C8, &qword_255542078, v5);
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v53 - v11;
  sub_21FA2ED54(0, &qword_255542078, v5);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v53 - v17;
  v19 = type metadata accessor for PBTouchBlob(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v53 - v23;
  v26 = *(_QWORD *)(a1 + 16);
  if (v26 != *(_QWORD *)(a2 + 16))
    return 0;
  v59 = v21;
  v60 = v24;
  v58 = v10;
  v56 = v8;
  v65 = v12;
  if (!v26 || a1 == a2)
    return 1;
  v61 = v18;
  v55 = v16;
  v62 = v6;
  v27 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v63 = *(_QWORD *)(v22 + 72);
  v28 = v59;
  v29 = v60;
  v57 = a2;
  v64 = a1;
  v54 = (char *)&v53 - v23;
  while (1)
  {
    sub_21FA2D120(a1 + v27, (uint64_t)v25, type metadata accessor for PBTouchBlob);
    sub_21FA2D120(a2 + v27, v29, type metadata accessor for PBTouchBlob);
    v30 = *(int *)(v28 + 20);
    v31 = *(_QWORD *)&v25[v30];
    v32 = *(_QWORD *)(v29 + v30);
    if (v31 == v32)
      goto LABEL_17;
    swift_beginAccess();
    v33 = *(_QWORD *)(v31 + 16);
    v34 = *(_QWORD *)(v31 + 24);
    swift_beginAccess();
    v35 = v33 == *(_QWORD *)(v32 + 16) && v34 == *(_QWORD *)(v32 + 24);
    if (!v35 && (sub_21FC5BDF0() & 1) == 0)
      goto LABEL_23;
    v66 = v26;
    v36 = v31
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    v37 = (uint64_t)v61;
    v38 = (void (*)(uint64_t))MEMORY[0x24BE5B990];
    sub_21FA6A498(v36, (uint64_t)v61, &qword_255542078, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
    v39 = v32
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    v40 = (uint64_t)v65;
    v41 = (uint64_t)&v65[*(int *)(v58 + 48)];
    sub_21FA6A498(v37, (uint64_t)v65, &qword_255542078, v38);
    sub_21FA6A498(v39, v41, &qword_255542078, v38);
    v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
    if (v42(v40, 1, v67) == 1)
    {
      swift_retain();
      swift_retain();
      v43 = v37;
      v44 = (void (*)(uint64_t))MEMORY[0x24BE5B990];
      sub_21FA2EDA0(v43, &qword_255542078, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
      if (v42(v41, 1, v67) != 1)
        goto LABEL_21;
      sub_21FA2EDA0(v40, &qword_255542078, v44);
      v29 = v60;
      goto LABEL_16;
    }
    v45 = (uint64_t)v55;
    sub_21FA6A498(v40, (uint64_t)v55, &qword_255542078, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
    if (v42(v41, 1, v67) == 1)
      break;
    v46 = v67;
    v47 = v62;
    v48 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v56, v41, v67);
    sub_21FA2A08C(&qword_2555437D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
    swift_retain();
    swift_retain();
    v49 = sub_21FC5B5D4();
    v50 = *(void (**)(char *, uint64_t))(v47 + 8);
    v51 = v48;
    v29 = v60;
    v50(v51, v46);
    sub_21FA2EDA0((uint64_t)v61, &qword_255542078, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
    v50((char *)v45, v46);
    sub_21FA2EDA0((uint64_t)v65, &qword_255542078, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
    v25 = v54;
    if ((v49 & 1) == 0)
      goto LABEL_22;
LABEL_16:
    swift_release();
    swift_release();
    a2 = v57;
    v28 = v59;
    v26 = v66;
LABEL_17:
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    if ((sub_21FC5B5D4() & 1) == 0)
      goto LABEL_23;
    sub_21FA326EC(v29, type metadata accessor for PBTouchBlob);
    sub_21FA326EC((uint64_t)v25, type metadata accessor for PBTouchBlob);
    a1 = v64;
    v27 += v63;
    if (!--v26)
      return 1;
  }
  swift_retain();
  swift_retain();
  sub_21FA2EDA0((uint64_t)v61, &qword_255542078, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v45, v67);
  v25 = v54;
LABEL_21:
  sub_21FB13E7C(v40, &qword_2555437C8, &qword_255542078, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
  v29 = v60;
LABEL_22:
  swift_release();
  swift_release();
LABEL_23:
  sub_21FA326EC(v29, type metadata accessor for PBTouchBlob);
  sub_21FA326EC((uint64_t)v25, type metadata accessor for PBTouchBlob);
  return 0;
}

uint64_t sub_21FB105EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for PBDataTypeShared(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
      return v17 & 1;
    }
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v21 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    while (1)
    {
      sub_21FA2D120(a1 + v12, (uint64_t)v10, type metadata accessor for PBDataTypeShared);
      sub_21FA2D120(a2 + v12, (uint64_t)v7, type metadata accessor for PBDataTypeShared);
      v14 = *v10 == *(_QWORD *)v7 && v10[1] == *((_QWORD *)v7 + 1);
      if (!v14 && (sub_21FC5BDF0() & 1) == 0)
        break;
      v15 = *((_QWORD *)v7 + 2);
      if (v7[24] == 1)
        __asm { BR              X10 }
      if (v10[2] != v15)
        break;
      v22 = v13;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v16 = v22;
      v17 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBDataTypeShared);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBDataTypeShared);
      v18 = v16 != 0;
      v13 = v16 - 1;
      v19 = v18;
      if ((v17 & 1) != 0)
      {
        v12 += v21;
        if ((v19 & 1) != 0)
          continue;
      }
      return v17 & 1;
    }
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBDataTypeShared);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBDataTypeShared);
  }
  v17 = 0;
  return v17 & 1;
}

uint64_t sub_21FB10860(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBReference, (uint64_t (*)(uint64_t, uint64_t))sub_21FA4214C);
}

uint64_t sub_21FB10874(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  BOOL v22;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v25 = a4;
  v27 = a3(0);
  v7 = MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v24 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 != *(_QWORD *)(a2 + 16))
  {
LABEL_15:
    v20 = 0;
    return v20 & 1;
  }
  if (v13 && a1 != a2)
  {
    v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v26 = *(_QWORD *)(v10 + 72);
    v15 = v13 - 1;
    while (1)
    {
      sub_21FA2D120(a1 + v14, (uint64_t)v12, a3);
      sub_21FA2D120(a2 + v14, (uint64_t)v9, a3);
      v16 = *(int *)(v27 + 20);
      v17 = *(_QWORD *)&v12[v16];
      v18 = *(_QWORD *)&v9[v16];
      if (v17 != v18)
      {
        swift_retain();
        swift_retain();
        v19 = v25(v17, v18);
        swift_release();
        swift_release();
        if ((v19 & 1) == 0)
          break;
      }
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v20 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v9, a3);
      sub_21FA326EC((uint64_t)v12, a3);
      v22 = v15-- != 0;
      if ((v20 & 1) != 0)
      {
        v14 += v26;
        if (v22)
          continue;
      }
      return v20 & 1;
    }
    sub_21FA326EC((uint64_t)v9, a3);
    sub_21FA326EC((uint64_t)v12, a3);
    goto LABEL_15;
  }
  v20 = 1;
  return v20 & 1;
}

uint64_t sub_21FB10A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X8 }
  }
  return 1;
}

uint64_t sub_21FB1136C(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBClinicalRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB56B40);
}

uint64_t sub_21FB11380(uint64_t a1, uint64_t a2)
{
  return sub_21FB12C58(a1, a2, type metadata accessor for PBBlobAttribute);
}

uint64_t sub_21FB1138C(uint64_t a1, uint64_t a2)
{
  return sub_21FB113A0(a1, a2, type metadata accessor for PBTimeSeries.Value, (uint64_t (*)(char *, char *))_s19HealthRecordsDaemon12PBTimeSeriesV5ValueV2eeoiySbAE_AEtFZ_0);
}

uint64_t sub_21FB113A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_21FA2D120(a1 + v16, (uint64_t)v14, a3);
        sub_21FA2D120(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_21FA326EC((uint64_t)v11, a3);
        sub_21FA326EC((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_21FB114DC(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBCategorySeries.Event, (uint64_t (*)(uint64_t, uint64_t))sub_21FB50150);
}

uint64_t sub_21FB114F0(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBHKAllergyReaction, (uint64_t (*)(uint64_t, uint64_t))sub_21FB5B370);
}

uint64_t sub_21FB11504(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
}

uint64_t sub_21FB11518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  BOOL v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = type metadata accessor for PBDateRange(0);
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v50 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FB13E1C(0, &qword_25553EAB0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v58 = (uint64_t)&v48 - v7;
  sub_21FA2ED54(0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v48 - v11;
  v13 = type metadata accessor for PBMedicationDosage(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v60 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v59 = (uint64_t)&v48 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  v57 = a2;
  if (v18 != *(_QWORD *)(a2 + 16))
    goto LABEL_38;
  if (!v18 || a1 == v57)
  {
    v44 = 1;
    return v44 & 1;
  }
  v53 = v4;
  v19 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v54 = *(_QWORD *)(v16 + 72);
  v20 = v18 - 1;
  v52 = v12;
  v49 = a1;
  v48 = v13;
  while (1)
  {
    v21 = v59;
    sub_21FA2D120(a1 + v19, v59, type metadata accessor for PBMedicationDosage);
    v22 = v60;
    sub_21FA2D120(v57 + v19, v60, type metadata accessor for PBMedicationDosage);
    v23 = *(int *)(v13 + 20);
    v24 = *(_QWORD *)(v21 + v23);
    v25 = *(_QWORD *)(v22 + v23);
    if (v24 != v25)
      break;
LABEL_26:
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v43 = v59;
    v42 = v60;
    v44 = sub_21FC5B5D4();
    sub_21FA326EC(v42, type metadata accessor for PBMedicationDosage);
    sub_21FA326EC(v43, type metadata accessor for PBMedicationDosage);
    v46 = v20-- != 0;
    if ((v44 & 1) != 0)
    {
      v19 += v54;
      if (v46)
        continue;
    }
    return v44 & 1;
  }
  swift_beginAccess();
  v26 = *(_QWORD *)(v24 + 16);
  v27 = *(_QWORD *)(v24 + 24);
  swift_beginAccess();
  v28 = v26 == *(_QWORD *)(v25 + 16) && v27 == *(_QWORD *)(v25 + 24);
  if (!v28 && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_37;
  v29 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  sub_21FA6A498(v29, (uint64_t)v12, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  v30 = v25
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  v31 = v58;
  v32 = v58 + *(int *)(v55 + 48);
  sub_21FA6A498((uint64_t)v12, v58, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  sub_21FA6A498(v30, v32, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  v33 = (uint64_t)v12;
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v35 = v31;
  v36 = v53;
  if (v34(v35, 1, v53) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2EDA0(v33, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    if (v34(v32, 1, v36) != 1)
      goto LABEL_35;
    sub_21FA2EDA0(v58, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    goto LABEL_25;
  }
  v37 = v51;
  sub_21FA6A498(v58, (uint64_t)v51, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  if (v34(v32, 1, v36) != 1)
  {
    v38 = v50;
    sub_21FA2D23C(v32, v50, type metadata accessor for PBDateRange);
    if ((*v37 != *(_QWORD *)v38 || v37[1] != *(_QWORD *)(v38 + 8)) && (sub_21FC5BDF0() & 1) == 0
      || (v37[2] != *(_QWORD *)(v38 + 16) || v37[3] != *(_QWORD *)(v38 + 24)) && (sub_21FC5BDF0() & 1) == 0)
    {
      goto LABEL_32;
    }
    v39 = *(_QWORD *)(v38 + 32);
    if (*(_BYTE *)(v38 + 40) == 1)
      __asm { BR              X10 }
    if (v37[4] != v39)
    {
LABEL_32:
      swift_retain();
      swift_retain();
      sub_21FA326EC(v38, type metadata accessor for PBDateRange);
      sub_21FA2EDA0((uint64_t)v52, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
      sub_21FA326EC((uint64_t)v37, type metadata accessor for PBDateRange);
      sub_21FA2EDA0(v58, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
      goto LABEL_36;
    }
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    swift_retain();
    swift_retain();
    v40 = v58;
    v41 = sub_21FC5B5D4();
    sub_21FA326EC(v38, type metadata accessor for PBDateRange);
    sub_21FA2EDA0((uint64_t)v52, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    sub_21FA326EC((uint64_t)v37, type metadata accessor for PBDateRange);
    sub_21FA2EDA0(v40, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    if ((v41 & 1) == 0)
      goto LABEL_36;
LABEL_25:
    swift_release();
    swift_release();
    a1 = v49;
    v12 = v52;
    v13 = v48;
    goto LABEL_26;
  }
  swift_retain();
  swift_retain();
  sub_21FA2EDA0((uint64_t)v52, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  sub_21FA326EC((uint64_t)v37, type metadata accessor for PBDateRange);
LABEL_35:
  sub_21FB13E7C(v58, &qword_25553EAB0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
LABEL_36:
  swift_release();
  swift_release();
LABEL_37:
  sub_21FA326EC(v60, type metadata accessor for PBMedicationDosage);
  sub_21FA326EC(v59, type metadata accessor for PBMedicationDosage);
LABEL_38:
  v44 = 0;
  return v44 & 1;
}

uint64_t sub_21FB11C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  BOOL v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v4 = type metadata accessor for PBHKInspectableValueCollection(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FB13E1C(0, &qword_255543820, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v56 - v9;
  sub_21FA2ED54(0, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - v15;
  v17 = type metadata accessor for PBHKReferenceRange(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v24 = (char *)&v56 - v23;
  v25 = *(_QWORD *)(a1 + 16);
  if (v25 != *(_QWORD *)(a2 + 16))
    goto LABEL_32;
  v64 = v8;
  v57 = v10;
  if (!v25 || a1 == a2)
  {
    v52 = 1;
    return v52 & 1;
  }
  v69 = v21;
  v67 = v16;
  v61 = v14;
  v60 = v6;
  v26 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v68 = *(_QWORD *)(v22 + 72);
  v27 = v25 - 1;
  v28 = (uint64_t)v57;
  v59 = a2;
  v58 = a1;
  v62 = (char *)&v56 - v23;
  v63 = v20;
  while (1)
  {
    sub_21FA2D120(a1 + v26, (uint64_t)v24, type metadata accessor for PBHKReferenceRange);
    sub_21FA2D120(a2 + v26, (uint64_t)v20, type metadata accessor for PBHKReferenceRange);
    v29 = *(int *)(v69 + 20);
    v30 = *(_QWORD *)&v24[v29];
    v31 = *(_QWORD *)&v20[v29];
    if (v30 != v31)
      break;
LABEL_19:
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v52 = sub_21FC5B5D4();
    sub_21FA326EC((uint64_t)v20, type metadata accessor for PBHKReferenceRange);
    sub_21FA326EC((uint64_t)v24, type metadata accessor for PBHKReferenceRange);
    v54 = v27-- != 0;
    if ((v52 & 1) != 0)
    {
      v26 += v68;
      if (v54)
        continue;
    }
    return v52 & 1;
  }
  swift_beginAccess();
  v32 = *(_QWORD *)(v30 + 16);
  v33 = *(_QWORD *)(v30 + 24);
  swift_beginAccess();
  v34 = v32 == *(_QWORD *)(v31 + 16) && v33 == *(_QWORD *)(v31 + 24);
  if (!v34 && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_31;
  v70 = v27;
  v35 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  v36 = (uint64_t)v67;
  sub_21FA6A498(v35, (uint64_t)v67, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  v37 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  v38 = v28 + *(int *)(v64 + 48);
  sub_21FA6A498(v36, v28, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  sub_21FA6A498(v37, v38, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  v39 = v66;
  v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  if (v40(v28, 1, v66) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2EDA0(v36, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    v41 = v40(v38, 1, v39);
    v20 = v63;
    if (v41 != 1)
      goto LABEL_27;
    sub_21FA2EDA0(v28, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    v24 = v62;
    goto LABEL_18;
  }
  v42 = v28;
  v43 = (uint64_t)v61;
  sub_21FA6A498(v42, (uint64_t)v61, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  if (v40(v38, 1, v39) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2EDA0((uint64_t)v67, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    sub_21FA326EC(v43, type metadata accessor for PBHKInspectableValueCollection);
    v28 = (uint64_t)v57;
    v20 = v63;
LABEL_27:
    sub_21FB13E7C(v28, &qword_255543820, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    goto LABEL_29;
  }
  v44 = (uint64_t)v60;
  sub_21FA2D23C(v38, (uint64_t)v60, type metadata accessor for PBHKInspectableValueCollection);
  v45 = *(int *)(v39 + 20);
  v46 = *(_QWORD *)(v43 + v45);
  v47 = *(_QWORD *)(v44 + v45);
  swift_retain();
  swift_retain();
  v20 = v63;
  if (v46 == v47
    || (swift_retain(), swift_retain(), v48 = sub_21FB6E834(v46, v47), swift_release(), swift_release(), (v48 & 1) != 0))
  {
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v49 = (uint64_t)v61;
    v50 = (uint64_t)v60;
    v51 = sub_21FC5B5D4();
    sub_21FA326EC(v50, type metadata accessor for PBHKInspectableValueCollection);
    sub_21FA2EDA0((uint64_t)v67, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    sub_21FA326EC(v49, type metadata accessor for PBHKInspectableValueCollection);
    v28 = (uint64_t)v57;
    sub_21FA2EDA0((uint64_t)v57, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    v24 = v62;
    if ((v51 & 1) == 0)
      goto LABEL_30;
LABEL_18:
    swift_release();
    swift_release();
    a2 = v59;
    a1 = v58;
    v27 = v70;
    goto LABEL_19;
  }
  sub_21FA326EC((uint64_t)v60, type metadata accessor for PBHKInspectableValueCollection);
  sub_21FA2EDA0((uint64_t)v67, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  sub_21FA326EC((uint64_t)v61, type metadata accessor for PBHKInspectableValueCollection);
  sub_21FA2EDA0((uint64_t)v57, &qword_2555405C8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
LABEL_29:
  v24 = v62;
LABEL_30:
  swift_release();
  swift_release();
LABEL_31:
  sub_21FA326EC((uint64_t)v20, type metadata accessor for PBHKReferenceRange);
  sub_21FA326EC((uint64_t)v24, type metadata accessor for PBHKReferenceRange);
LABEL_32:
  v52 = 0;
  return v52 & 1;
}

uint64_t sub_21FB12288(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_21FB713EC);
}

uint64_t sub_21FB1229C(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBHKCodedValue, sub_21FB7352C);
}

uint64_t sub_21FB122B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  char v16;
  BOOL v18;
  uint64_t v20;
  char *v21;

  v4 = type metadata accessor for PBFHIRIdentifier(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v20 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_23:
    v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v20 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    v21 = (char *)&v20 - v9;
    while (1)
    {
      sub_21FA2D120(a1 + v12, (uint64_t)v10, type metadata accessor for PBFHIRIdentifier);
      sub_21FA2D120(a2 + v12, (uint64_t)v7, type metadata accessor for PBFHIRIdentifier);
      v14 = *v10 == *v7 && v10[1] == v7[1];
      if (!v14 && (sub_21FC5BDF0() & 1) == 0)
        break;
      v15 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v15 && (sub_21FC5BDF0() & 1) == 0)
        break;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v10 = v21;
      v16 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBFHIRIdentifier);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBFHIRIdentifier);
      v18 = v13-- != 0;
      if ((v16 & 1) != 0)
      {
        v12 += v20;
        if (v18)
          continue;
      }
      return v16 & 1;
    }
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBFHIRIdentifier);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBFHIRIdentifier);
    goto LABEL_23;
  }
  v16 = 1;
  return v16 & 1;
}

uint64_t sub_21FB124B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = type metadata accessor for PBCycleTracking.Event(0);
  v4 = *(_QWORD *)(v50 - 8);
  v5 = MEMORY[0x24BDAC7A8](v50);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = type metadata accessor for PBCycleTracking.Cycle(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v51 = (uint64_t)&v41 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 != *(_QWORD *)(a2 + 16))
  {
LABEL_32:
    v40 = 0;
    return v40 & 1;
  }
  if (!v15 || a1 == a2)
  {
    v40 = 1;
    return v40 & 1;
  }
  v42 = v4;
  v16 = 0;
  v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(v13 + 72);
  v46 = v15;
  v47 = v10;
  v44 = v19;
  v45 = v18;
  v43 = v20;
  while (1)
  {
    v48 = v16;
    v21 = v20 * v16;
    v22 = (_QWORD *)v51;
    sub_21FA2D120(v18 + v20 * v16, v51, type metadata accessor for PBCycleTracking.Cycle);
    v23 = v19 + v21;
    v24 = (_QWORD *)v52;
    sub_21FA2D120(v23, v52, type metadata accessor for PBCycleTracking.Cycle);
    v25 = *v22 == *v24 && v22[1] == v24[1];
    if (!v25 && (sub_21FC5BDF0() & 1) == 0
      || (*(_QWORD *)(v51 + 16) == *(_QWORD *)(v52 + 16)
        ? (v26 = *(_QWORD *)(v51 + 24) == *(_QWORD *)(v52 + 24))
        : (v26 = 0),
          !v26 && (sub_21FC5BDF0() & 1) == 0
       || (v27 = *(_QWORD *)(v51 + 32),
           v28 = *(_QWORD *)(v52 + 32),
           v29 = *(_QWORD *)(v27 + 16),
           v29 != *(_QWORD *)(v28 + 16))))
    {
LABEL_31:
      sub_21FA326EC(v52, type metadata accessor for PBCycleTracking.Cycle);
      sub_21FA326EC(v51, type metadata accessor for PBCycleTracking.Cycle);
      goto LABEL_32;
    }
    if (v29 && v27 != v28)
      break;
LABEL_24:
    if (*(_DWORD *)(v51 + 40) != *(_DWORD *)(v52 + 40) || *(_DWORD *)(v51 + 44) != *(_DWORD *)(v52 + 44))
      goto LABEL_31;
    v39 = v51;
    v38 = v52;
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v40 = sub_21FC5B5D4();
    sub_21FA326EC(v38, type metadata accessor for PBCycleTracking.Cycle);
    sub_21FA326EC(v39, type metadata accessor for PBCycleTracking.Cycle);
    if ((v40 & 1) != 0)
    {
      v16 = v48 + 1;
      v18 = v45;
      v20 = v43;
      v19 = v44;
      if (v48 + 1 != v46)
        continue;
    }
    return v40 & 1;
  }
  v30 = 0;
  v31 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v49 = *(_QWORD *)(v42 + 72);
  while (1)
  {
    result = sub_21FA2D120(v27 + v31, (uint64_t)v9, type metadata accessor for PBCycleTracking.Event);
    if (v30 >= *(_QWORD *)(v28 + 16))
      break;
    sub_21FA2D120(v28 + v31, (uint64_t)v7, type metadata accessor for PBCycleTracking.Event);
    v33 = *(int *)(v50 + 20);
    v34 = *(_QWORD *)&v9[v33];
    v35 = *(_QWORD *)&v7[v33];
    if (v34 != v35)
    {
      swift_retain();
      swift_retain();
      v36 = sub_21FB7C9F8(v34, v35);
      swift_release();
      swift_release();
      if ((v36 & 1) == 0)
      {
        sub_21FA326EC((uint64_t)v7, type metadata accessor for PBCycleTracking.Event);
        sub_21FA326EC((uint64_t)v9, type metadata accessor for PBCycleTracking.Event);
        goto LABEL_31;
      }
    }
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v37 = sub_21FC5B5D4();
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBCycleTracking.Event);
    sub_21FA326EC((uint64_t)v9, type metadata accessor for PBCycleTracking.Event);
    if ((v37 & 1) == 0)
      goto LABEL_31;
    ++v30;
    v31 += v49;
    if (v29 == v30)
      goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_21FB128D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _BYTE *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a1 + 32);
  for (i = (_BYTE *)(a2 + 40); ; i += 16)
  {
    v6 = *v3;
    v3 += 2;
    v5 = v6;
    v7 = *((_QWORD *)i - 1);
    if (*i == 1)
      break;
    if (v5 != v7)
      return 0;
    if (!--v2)
      return 1;
  }
  return ((uint64_t (*)(void))((char *)&loc_21FB12904 + 4 * byte_21FC66444[v7]))();
}

uint64_t sub_21FB12A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v16;
  char v17;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_22:
    v15 = 0;
    return v15 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v19 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    while (1)
    {
      sub_21FA2D120(a1 + v12, (uint64_t)v10, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      sub_21FA2D120(a2 + v12, (uint64_t)v7, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      if (*(_DWORD *)v10 != *(_DWORD *)v7
        || *((_DWORD *)v10 + 1) != *((_DWORD *)v7 + 1)
        || *((_DWORD *)v10 + 2) != *((_DWORD *)v7 + 2)
        || *((_DWORD *)v10 + 3) != *((_DWORD *)v7 + 3)
        || *((_DWORD *)v10 + 4) != *((_DWORD *)v7 + 4)
        || *((_DWORD *)v10 + 5) != *((_DWORD *)v7 + 5))
      {
        break;
      }
      if ((*((_QWORD *)v10 + 3) != *((_QWORD *)v7 + 3) || *((_QWORD *)v10 + 4) != *((_QWORD *)v7 + 4))
        && (sub_21FC5BDF0() & 1) == 0)
      {
        break;
      }
      v20 = v13;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = v20;
      v15 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v7, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      sub_21FA326EC((uint64_t)v10, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      v16 = v14 != 0;
      v13 = v14 - 1;
      v17 = v16;
      if ((v15 & 1) != 0)
      {
        v12 += v19;
        if ((v17 & 1) != 0)
          continue;
      }
      return v15 & 1;
    }
    sub_21FA326EC((uint64_t)v7, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
    goto LABEL_22;
  }
  v15 = 1;
  return v15 & 1;
}

uint64_t sub_21FB12C4C(uint64_t a1, uint64_t a2)
{
  return sub_21FB12C58(a1, a2, type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_21FB12C58(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a3(0);
  v6 = MEMORY[0x24BDAC7A8](v22);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v11 = (uint64_t *)((char *)&v21 - v10);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 != *(_QWORD *)(a2 + 16))
  {
LABEL_26:
    v17 = 0;
    return v17 & 1;
  }
  if (v12 && a1 != a2)
  {
    v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v21 = *(_QWORD *)(v9 + 72);
    v14 = v12 - 1;
    while (1)
    {
      sub_21FA2D120(a1 + v13, (uint64_t)v11, a3);
      sub_21FA2D120(a2 + v13, (uint64_t)v8, a3);
      v15 = *v11 == *v8 && v11[1] == v8[1];
      if (!v15 && (sub_21FC5BDF0() & 1) == 0)
        break;
      v16 = v11[2] == v8[2] && v11[3] == v8[3];
      if (!v16 && (sub_21FC5BDF0() & 1) == 0 || (v11[4] != v8[4] || v11[5] != v8[5]) && (sub_21FC5BDF0() & 1) == 0)
        break;
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v17 = sub_21FC5B5D4();
      sub_21FA326EC((uint64_t)v8, a3);
      sub_21FA326EC((uint64_t)v11, a3);
      v19 = v14-- != 0;
      if ((v17 & 1) != 0)
      {
        v13 += v21;
        if (v19)
          continue;
      }
      return v17 & 1;
    }
    sub_21FA326EC((uint64_t)v8, a3);
    sub_21FA326EC((uint64_t)v11, a3);
    goto LABEL_26;
  }
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_21FB12E5C(uint64_t a1, uint64_t a2)
{
  return sub_21FB10874(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, sub_21FB89D70);
}

void sub_21FB12E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_21FB12ED0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x21FB130B4);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_21FB130D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_21FB12E70((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_21FB131AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_21FC5A764();
  v11 = result;
  if (result)
  {
    result = sub_21FC5A788();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_21FC5A77C();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_21FB12E70(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_21FB13260(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_21FB132AC()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_21FB132E0 + *((int *)qword_21FB134B8 + (v0 >> 62))))();
}

uint64_t sub_21FB132F0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_21FB134D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((sub_21FB0E430(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0
    && (sub_21FB0E430(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)) & 1) != 0
    && ((v4 = *(_QWORD *)(a1 + 32), v5 = *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
     && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
     || (sub_21FC5BDF0() & 1) != 0)
    && (sub_21FB13260(v4, v5), (v6 & 1) != 0)
    && (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
     || (sub_21FC5BDF0() & 1) != 0)
    && (*(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64) && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72)
     || (sub_21FC5BDF0() & 1) != 0))
  {
    return sub_21FB0D8D4(*(_QWORD *)(a1 + 80), *(_QWORD *)(a2 + 80));
  }
  else
  {
    return 0;
  }
}

void sub_21FB135D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255543818)
  {
    sub_21FC5AAAC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255543818);
  }
}

uint64_t sub_21FB1363C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;

  v94 = a7;
  v95 = a8;
  v98 = a2;
  v109 = type metadata accessor for ClinicalSharingDataNodeInfo();
  v101 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v108 = (uint64_t)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for PBLookupInfo(0);
  MEMORY[0x24BDAC7A8](v23);
  v97 = (uint64_t)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for ClinicalSharingCategoryNodeInfo();
  v25 = *(_QWORD *)(v111 - 8);
  v26 = MEMORY[0x24BDAC7A8](v111);
  v102 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v110 = (uint64_t)&v87 - v28;
  v29 = *(_QWORD *)(a1 + 16);
  v96 = a3;
  v91 = a5;
  v90 = a4;
  v88 = a9;
  v99 = a6;
  v100 = a1;
  v93 = v23;
  if (v29)
  {
    v112 = MEMORY[0x24BEE4AF8];
    sub_21FC01A0C(0, v29, 0);
    v30 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v107 = *(_QWORD *)(v25 + 72);
    v31 = v112;
    v104 = v30;
    do
    {
      v32 = v110;
      sub_21FA2D120(v30, v110, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      v33 = (uint64_t *)(v32 + *(int *)(v111 + 24));
      v35 = *v33;
      v34 = v33[1];
      v36 = v33[2];
      v37 = v33[3];
      swift_bridgeObjectRetain();
      sub_21FA32314(v36, v37);
      sub_21FA326EC(v32, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21FC01A0C(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v112;
      }
      v39 = *(_QWORD *)(v31 + 16);
      v38 = *(_QWORD *)(v31 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_21FC01A0C(v38 > 1, v39 + 1, 1);
        v31 = v112;
      }
      *(_QWORD *)(v31 + 16) = v39 + 1;
      v40 = (_QWORD *)(v31 + 32 * v39);
      v40[4] = v35;
      v40[5] = v34;
      v40[6] = v36;
      v40[7] = v37;
      v30 += v107;
      --v29;
    }
    while (v29);
    v41 = *(_QWORD *)(v100 + 16);
    v112 = MEMORY[0x24BEE4AF8];
    v103 = v41;
    if (v41)
    {
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v43 = 0;
      v44 = (uint64_t)v102;
      v89 = v31;
      while (1)
      {
        v45 = v43 + 1;
        if (__OFADD__(v43, 1))
          break;
        sub_21FA2D120(v104 + v107 * v43, v44, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingCategoryNodeInfo);
        v46 = *(_QWORD *)v44;
        v47 = *(_QWORD *)(*(_QWORD *)v44 + 16);
        if (v47)
        {
          v106 = v45;
          v114 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_21FC01A0C(0, v47, 0);
          v48 = *(unsigned __int8 *)(v101 + 80);
          v105 = v46;
          v49 = v46 + ((v48 + 32) & ~v48);
          v110 = *(_QWORD *)(v101 + 72);
          v50 = v114;
          do
          {
            v51 = v108;
            sub_21FA2D120(v49, v108, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDataNodeInfo);
            v52 = (uint64_t *)(v51 + *(int *)(v109 + 24));
            v53 = v52[1];
            v111 = *v52;
            v55 = v52[2];
            v54 = v52[3];
            swift_bridgeObjectRetain();
            sub_21FA32314(v55, v54);
            sub_21FA326EC(v51, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDataNodeInfo);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_21FC01A0C(0, *(_QWORD *)(v50 + 16) + 1, 1);
              v50 = v114;
            }
            v57 = *(_QWORD *)(v50 + 16);
            v56 = *(_QWORD *)(v50 + 24);
            if (v57 >= v56 >> 1)
            {
              sub_21FC01A0C(v56 > 1, v57 + 1, 1);
              v50 = v114;
            }
            *(_QWORD *)(v50 + 16) = v57 + 1;
            v58 = (_QWORD *)(v50 + 32 * v57);
            v58[4] = v111;
            v58[5] = v53;
            v58[6] = v55;
            v58[7] = v54;
            v49 += v110;
            --v47;
          }
          while (v47);
          swift_bridgeObjectRelease();
          v44 = (uint64_t)v102;
          v45 = v106;
        }
        else
        {
          v50 = MEMORY[0x24BEE4AF8];
        }
        sub_21FA326EC(v44, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingCategoryNodeInfo);
        result = sub_21FBDFBDC(v50);
        v43 = v45;
        if (v45 == v103)
        {
          swift_bridgeObjectRelease();
          v59 = v112;
          v60 = v92;
          goto LABEL_24;
        }
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    v31 = MEMORY[0x24BEE4AF8];
  }
  v60 = v92;
  v89 = v31;
  swift_bridgeObjectRetain();
  v59 = MEMORY[0x24BEE4AF8];
LABEL_24:
  v108 = a15;
  v109 = a14;
  v110 = a10;
  v111 = a11;
  v107 = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v61 = v96;
  swift_bridgeObjectRetain();
  sub_21FC5B400();
  v62 = v112;
  v63 = v113;
  swift_bridgeObjectRetain();
  v64 = v94;
  v65 = v95;
  sub_21FA32314(v94, v95);
  v86 = v108;
  v85 = v109;
  v109 = a13;
  v108 = a12;
  v66 = v97;
  sub_21FAF3900(v98, v61, v62, v63, v64, v65, v110, v111, v97, a12, a13, v85, v86, a16);
  sub_21FA2A08C((unint64_t *)&qword_25553F710, type metadata accessor for PBLookupInfo, (uint64_t)&protocol conformance descriptor for PBLookupInfo);
  v67 = sub_21FC5AE90();
  if (v60)
  {
    swift_bridgeObjectRelease();
    sub_21FA2D770(v64, v65);
    sub_21FA2D770(v90, v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v69 = sub_21FC5B418();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v99, v69);
    sub_21FA326EC(v66, type metadata accessor for PBLookupInfo);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v70 = v67;
    v71 = v68;
    v72 = sub_21FC5A9E0();
    v110 = v73;
    v111 = v72;
    sub_21FA2D770(v70, v71);
    swift_bridgeObjectRetain();
    v74 = v65;
    v75 = v90;
    v76 = v91;
    sub_21FA32314(v90, v91);
    swift_bridgeObjectRetain();
    sub_21FA32314(v75, v76);
    v77 = sub_21FAC7410(v100);
    swift_bridgeObjectRelease();
    sub_21FA2D770(v64, v74);
    sub_21FA2D770(v75, v76);
    v78 = sub_21FC5B418();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v99, v78);
    sub_21FA326EC(v97, type metadata accessor for PBLookupInfo);
    v79 = v89;
    swift_bridgeObjectRetain();
    v80 = v107;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21FA32314(v75, v76);
    v81 = v109;
    swift_bridgeObjectRetain();
    v82 = v77;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21FA2D770(v75, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_21FA2D770(v75, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v83 = v110;
    result = swift_bridgeObjectRelease();
    v84 = v88;
    *v88 = v79;
    v84[1] = v80;
    v84[2] = v98;
    v84[3] = v61;
    v84[4] = v75;
    v84[5] = v76;
    v84[6] = v111;
    v84[7] = v83;
    v84[8] = v108;
    v84[9] = v81;
    v84[10] = v82;
  }
  return result;
}

void sub_21FB13E1C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_21FA2ED54(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_21FB13E7C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_21FB13E1C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t PBCategorySeries.Event.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBCategorySeries.Event, &qword_25553D890, &qword_255543A68, a1);
}

uint64_t type metadata accessor for PBCategorySeries.Event(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545760);
}

uint64_t PBCategorySeries.Event.recordedTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB4E9EC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v13 = v11
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCategorySeries.Event.raw.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB4E9EC(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 16) = a1;
  return result;
}

uint64_t PBCategorySeries.Event.value.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB25A4C(a1, a2, type metadata accessor for PBCategorySeries.Event, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_21FB4E9EC);
}

uint64_t PBCategorySeries.Event.steadinessClassification.setter(uint64_t *a1)
{
  return sub_21FB1A5E0(a1);
}

uint64_t PBCategorySeries.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBCategorySeries, &qword_25553D868, &qword_255543A10, a1);
}

uint64_t PBCategorySeries.events.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBCategorySeries, (void (*)(_QWORD))type metadata accessor for PBCategorySeries._StorageClass, sub_21FB4D47C, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
}

uint64_t PBDateRange.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  type metadata accessor for PBDateRange(0);
  return sub_21FC5AD10();
}

uint64_t PBTimeSeries.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBTimeSeries, &qword_25553D7F8, &qword_2555438F0, a1);
}

uint64_t PBWorkout.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBWorkout, &qword_25553D8A8, &qword_255543AA0, a1);
}

uint64_t PBCharacteristics.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB161A4((void (*)(_QWORD))type metadata accessor for PBCharacteristics, a1);
}

uint64_t PBAllClinicalRecords.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBAllClinicalRecords, a1);
}

uint64_t PBECGs.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBECGs, a1);
}

uint64_t PBCycleTracking.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBCycleTracking, &qword_25553DA18, &qword_255543DC0, a1);
}

uint64_t PBECGMeasurement.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 96) = v2;
  *(_DWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 1;
  type metadata accessor for PBECGMeasurement(0);
  return sub_21FC5AD10();
}

uint64_t PBActivitySummarySeries.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBActivitySummarySeries, &qword_25553DAA0, &qword_255543F18, a1);
}

uint64_t PBPatientMeta.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBPatientMeta, &qword_25553DAC0, &qword_255543F60, a1);
}

uint64_t PBSleepSummary.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(a1 + 8) = 0;
  type metadata accessor for PBSleepSummary(0);
  return sub_21FC5AD10();
}

uint64_t PBSleepSeries.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBSleepSeries, a1);
}

uint64_t PBHistogramSeries.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for PBHistogramSeries(0);
  return sub_21FC5AD10();
}

uint64_t PBMedicationTrackings.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBMedicationTrackings, a1);
}

uint64_t PBMedicationTrackingDoseEvents.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBMedicationTrackingDoseEvents, a1);
}

uint64_t PBMedicationTrackingSchedules.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedules, a1);
}

uint64_t PBActiveMedications.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAF6668((void (*)(_QWORD))type metadata accessor for PBActiveMedications, a1);
}

uint64_t static PBTimeSeries.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBTimeSeries, sub_21FB498A4) & 1;
}

uint64_t static PBCategorySeries.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCategorySeries, sub_21FB4DB90) & 1;
}

uint64_t static PBWorkout.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBWorkout, (uint64_t (*)(uint64_t, uint64_t))sub_21FB51948) & 1;
}

uint64_t static PBCharacteristics.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB8D4A0(a1, a2, type metadata accessor for PBCharacteristics) & 1;
}

uint64_t static PBAllClinicalRecords.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB1136C, type metadata accessor for PBAllClinicalRecords) & 1;
}

uint64_t static PBECGs.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0DD18, type metadata accessor for PBECGs) & 1;
}

uint64_t static PBCycleTracking.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCycleTracking, sub_21FB79F74) & 1;
}

uint64_t static PBActivitySummarySeries.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBActivitySummarySeries, sub_21FB7F7D0) & 1;
}

uint64_t static PBPatientMeta.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBPatientMeta, sub_21FB815C4) & 1;
}

uint64_t static PBSleepSeries.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0FE1C, type metadata accessor for PBSleepSeries) & 1;
}

uint64_t static PBMedicationTrackings.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F120, type metadata accessor for PBMedicationTrackings) & 1;
}

uint64_t static PBMedicationTrackingDoseEvents.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0E238, type metadata accessor for PBMedicationTrackingDoseEvents) & 1;
}

uint64_t static PBMedicationTrackingSchedules.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0E24C, type metadata accessor for PBMedicationTrackingSchedules) & 1;
}

uint64_t static PBActiveMedications.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_21FB0E158, type metadata accessor for PBActiveMedications) & 1;
}

uint64_t PBECGMeta.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  v2 = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 88) = v2;
  *(_DWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 1;
  type metadata accessor for PBECGMeta(0);
  return sub_21FC5AD10();
}

uint64_t PBCategorySeries.Event.source.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBCategorySeries.Event, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_21FB4E9EC, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t PBCategorySeries.Event.heartRateEventThreshold.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (uint64_t *)((char *)&v17 - v9);
  v11 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v12 = swift_retain();
    *(_QWORD *)(v2 + v11) = sub_21FB4E9EC(v12);
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v11);
  *v10 = a1;
  v10[1] = a2;
  v14 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_21FA2D280((uint64_t)v10, (uint64_t)v8, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v15 = v13
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v8, v15, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

uint64_t PBTimeSeries.unit.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBTimeSeries, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
}

uint64_t sub_21FB14888(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v12 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(v6 + v12) = a5(v13);
    swift_release();
  }
  v14 = (_QWORD *)(*(_QWORD *)(v6 + v12) + *a6);
  swift_beginAccess();
  *v14 = a1;
  v14[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBTimeSeries.values.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBTimeSeries, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
}

uint64_t sub_21FB1497C(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a4(v11);
    swift_release();
  }
  v12 = (_QWORD *)(*(_QWORD *)(v5 + v10) + *a5);
  swift_beginAccess();
  *v12 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t PBTimeSeries.Value.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0xE000000000000000;
  v2 = MEMORY[0x24BEE4AF8];
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = v2;
  *(_QWORD *)(a1 + 128) = 0;
  *(_WORD *)(a1 + 136) = 256;
  type metadata accessor for PBTimeSeries.Value(0);
  return sub_21FC5AD10();
}

uint64_t PBTimeSeries.Value.glucoseMealTime.setter(uint64_t result)
{
  uint64_t v1;
  unsigned __int8 v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 128) = *(_QWORD *)result;
  *(_WORD *)(v1 + 136) = v2;
  return result;
}

uint64_t PBTimeSeries.values.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBTimeSeries);
}

uint64_t PBCategorySeries.events.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBCategorySeries);
}

uint64_t sub_21FB14AF4(void (*a1)(_QWORD))
{
  a1(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t PBCategorySeries.Event.recordedTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB14B78(type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime, a1);
}

uint64_t PBWorkout.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB14B78(type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t sub_21FB14B78@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - v8;
  v10 = *(_QWORD *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v11 = type metadata accessor for PBDateRange(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1)
    return sub_21FA2D23C((uint64_t)v9, a3, type metadata accessor for PBDateRange);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0xE000000000000000;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0xE000000000000000;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
}

uint64_t PBClinicalRecord.medicalRecord.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA38B60(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, a1);
}

uint64_t PBClinicalRecord.allergyRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKAllergyRecord);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v8 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if (qword_25553D8F0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B48;
  return swift_retain();
}

uint64_t PBClinicalRecord.conditionRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConditionRecord);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if (qword_25553D910 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543B88;
  return swift_retain();
}

uint64_t PBClinicalRecord.vaccinationRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKVaccinationRecord);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if (qword_25553D920 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543BA8;
  return swift_retain();
}

uint64_t PBClinicalRecord.medicationDispenseRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKMedicationDispenseRecord);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if (qword_25553D970 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543C58;
  return swift_retain();
}

uint64_t PBClinicalRecord.medicationOrder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKMedicationOrder);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if (qword_25553D980 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543C78;
  return swift_retain();
}

uint64_t PBClinicalRecord.diagnosticTestResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKDiagnosticTestResult);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if (qword_25553D990 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543C98;
  return swift_retain();
}

uint64_t PBClinicalRecord.diagnosticTestReport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKDiagnosticTestReport);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if (qword_25553D9F0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543D68;
  return swift_retain();
}

uint64_t PBClinicalRecord.accountOwner.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
      return sub_21FA2D23C((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBHKAccountOwner);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  type metadata accessor for PBHKAccountOwner(0);
  return sub_21FC5AD10();
}

uint64_t PBClinicalRecord.procedureRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKProcedureRecord);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if (qword_25553DA08 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543DA0;
  return swift_retain();
}

uint64_t PBClinicalRecord.medicationRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKMedicationRecord);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v9 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  if (qword_25553D958 != -1)
    swift_once();
  *(_QWORD *)(a1 + v9) = qword_255543C20;
  return swift_retain();
}

uint64_t PBHKAllergyRecord.recordedDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t PBHKConditionRecord.recordedDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t sub_21FB15CD8(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(*(_QWORD *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t PBHKVaccinationRecord.administrationDate.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKMedicationDispenseRecord.handOverDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
}

uint64_t PBHKMedicationOrder.writtenDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
}

uint64_t PBHKDiagnosticTestResult.issueDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKDiagnosticTestReport.issueDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKProcedureRecord.executionEndDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
}

uint64_t PBHKMedicationRecord.assertionDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
}

uint64_t PBActivitySummarySeries.activitySummaries.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBActivitySummarySeries);
}

uint64_t PBMedicationTracking.lastDosageEventDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 208);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PBPatientMeta.shareTimezone.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB16244(a1, a2, type metadata accessor for PBPatientMeta, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC);
}

uint64_t PBPatientMeta.hasWatch_p.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB808CC(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 16) = a1 & 1;
  return result;
}

uint64_t PBPatientMeta.dob.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBPatientMeta, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
}

uint64_t PBPatientMeta.sex.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB16488(a1, a2, type metadata accessor for PBPatientMeta, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC);
}

uint64_t PBPatientMeta.HumanName.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB18044((void (*)(_QWORD))type metadata accessor for PBPatientMeta.HumanName, a1);
}

uint64_t PBPatientMeta.name.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB808CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBPatientMeta.HumanName);
  v12 = type metadata accessor for PBPatientMeta.HumanName(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  swift_endAccess();
  return swift_release();
}

uint64_t PBPatientMeta.chrMeta.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB808CC(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  swift_beginAccess();
  *(_QWORD *)(v5 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t PBPatientMeta.CHRMeta.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB161A4((void (*)(_QWORD))type metadata accessor for PBPatientMeta.CHRMeta, a1);
}

uint64_t sub_21FB161A4@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0xE000000000000000;
  a1(0);
  return sub_21FC5AD10();
}

uint64_t PBMedicationTrackingSchedule.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBMedicationTrackingSchedule, &qword_25553DB50, &qword_2555440D8, a1);
}

uint64_t PBMedicationTrackingSchedule.scheduleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t PBMedicationTrackingSchedule.medicationSemanticIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB16244(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t sub_21FB16244(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a5(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(v5 + v10);
  swift_beginAccess();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB87320(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 96) = a1;
  *(_QWORD *)(v7 + 104) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.frequencyType.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FB87320(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 120) = v2;
  *(_BYTE *)(v6 + 128) = v3;
  return result;
}

uint64_t PBMedicationTrackingSchedule.createdUtcOffset.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB16488(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t sub_21FB16488(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a5(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(v5 + v10);
  swift_beginAccess();
  *(_QWORD *)(v12 + 48) = a1;
  *(_QWORD *)(v12 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.startDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB87320(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.endDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB87320(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 80) = a1;
  *(_QWORD *)(v7 + 88) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKMedicationScheduleIntervalData.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKMedicationScheduleIntervalData, &qword_25553DB78, &qword_255544140, a1);
}

uint64_t PBHKMedicationScheduleIntervalData.daysOfWeek.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB89538(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  v12 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIndex.setter(int a1)
{
  return sub_21FB168C4(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIntervalDays.setter(int a1)
{
  return sub_21FB168C4(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
}

uint64_t sub_21FB168C4(int a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t result;

  v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a4(v11);
    swift_release();
  }
  v12 = (_DWORD *)(*(_QWORD *)(v5 + v10) + *a5);
  result = swift_beginAccess();
  *v12 = a1;
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.dose.setter(int a1)
{
  return sub_21FB168C4(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
}

uint64_t PBHKMedicationScheduleIntervalData.startTime.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
}

uint64_t PBMedicationTrackingSchedule.timeIntervals.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB87320(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  swift_beginAccess();
  *(_QWORD *)(v5 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.unrecognized.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB87320(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 129) = a1 & 1;
  return result;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB1C850((void (*)(_QWORD))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, a1);
}

uint64_t PBMedicationTrackingSchedule.compatibilityVersionRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB87320(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  v12 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKInspectableValueCollection, &qword_25553D9B8, &qword_255543CF0, a1);
}

uint64_t PBHKInspectableValueCollection.type.setter(uint64_t *a1)
{
  return sub_21FB17290(a1, type metadata accessor for PBHKInspectableValueCollection, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8);
}

uint64_t PBHKInspectableValueCollection.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6DBA8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.min.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6DBA8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.max.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6DBA8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.inspectableValues.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKInspectableValueCollection, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
}

uint64_t PBHKInspectableValueCollection.unitString.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKInspectableValueCollection, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t PBHKInspectableValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKInspectableValue, &qword_25553D9C8, &qword_255543D10, a1);
}

uint64_t PBHKInspectableValue.valueType.setter(uint64_t *a1)
{
  return sub_21FB17290(a1, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

uint64_t sub_21FB17290(uint64_t *a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a1;
  v8 = *((_BYTE *)a1 + 8);
  v9 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v4 + v9) = a4(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v4 + v9);
  result = swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v7;
  *(_BYTE *)(v11 + 24) = v8;
  return result;
}

uint64_t PBHKInspectableValue.stringValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB16244(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

uint64_t PBHKInspectableValue.codedQuantity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6F994(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKCodedQuantity);
  v12 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.ratioValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555405A0, type metadata accessor for PBHKRatioValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6F994(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKRatioValue);
  v12 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.medicalDateString.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
}

uint64_t PBHKInspectableValue.medicalDateIntervalString.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6F994(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.dateFromDateComponents.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
}

uint64_t PBHKInspectableValue.codedValueCollectionValues.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
}

uint64_t PBHKInspectableValue.medicalCodingsDisplayStrings.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
}

uint64_t PBHKInspectableValue.concept.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6F994(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.dataAbsentReasonCodingsDisplayStrings.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
}

uint64_t PBHKInspectableValue.dataAbsentReasonConcept.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6F994(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.unitString.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t PBHKCodedQuantity.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  type metadata accessor for PBHKCodedQuantity(0);
  return sub_21FC5AD10();
}

uint64_t PBHKConcept.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKConcept, &qword_25553D8E0, &qword_255543B28, a1);
}

uint64_t PBHKConcept.preferredName.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB20008(a1, a2, type metadata accessor for PBHKConcept, (void (*)(_QWORD))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E248);
}

uint64_t PBHKConcept.localizedPreferredName.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB20188(a1, a2, type metadata accessor for PBHKConcept, (void (*)(_QWORD))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E248);
}

uint64_t PBHKConcept.rawIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = v2;
  v6 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    v7 = (_QWORD *)swift_retain();
    v8 = sub_21FB8E248(v7);
    swift_release();
    *(_QWORD *)(v3 + v6) = v8;
    swift_release();
  }
  v9 = *(_QWORD *)(v3 + v6);
  swift_beginAccess();
  *(_QWORD *)(v9 + 48) = a1;
  *(_QWORD *)(v9 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKConcept.isInMemory.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    v6 = sub_21FB8E248(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = (_BYTE *)(*(_QWORD *)(v2 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  result = swift_beginAccess();
  *v7 = a1 & 1;
  return result;
}

uint64_t PBHKConcept.groupBy.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for PBHKConcept(0);
  v11 = *(int *)(v10 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    v12 = (_QWORD *)swift_retain();
    v13 = sub_21FB8E248(v12);
    swift_release();
    *(_QWORD *)(v2 + v11) = v13;
    swift_release();
  }
  v14 = *(_QWORD *)(v2 + v11);
  sub_21FA2D23C(a1, (uint64_t)v9, type metadata accessor for PBHKConcept);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  sub_21FA2D280((uint64_t)v9, (uint64_t)v7, &qword_255540590, type metadata accessor for PBHKConcept);
  v15 = v14
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v7, v15, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKRatioValue.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB18044((void (*)(_QWORD))type metadata accessor for PBHKRatioValue, a1);
}

uint64_t sub_21FB18044@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a1(0);
  return sub_21FC5AD10();
}

uint64_t PBHKReferenceRange.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKReferenceRange, &qword_25553D9A0, &qword_255543CB8, a1);
}

uint64_t PBHKReferenceRange.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB6C830(v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKReferenceRange.valueRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6C830(v10, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValueCollection);
  v12 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKCodedValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKCodedValue, &qword_25553D9D8, &qword_255543D30, a1);
}

uint64_t PBHKCodedValue.concept.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB72C34(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKCodedValue.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB72C34(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKCodedValue.referenceRanges.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKCodedValue, (void (*)(_QWORD))type metadata accessor for PBHKCodedValue._StorageClass, sub_21FB72C34, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t PBClinicalRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBClinicalRecord, &qword_25553D8C0, &qword_255543AD8, a1);
}

uint64_t PBClinicalRecord.primaryConcept.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v11 = (_QWORD *)swift_retain();
    v12 = sub_21FB8E53C(v11);
    swift_release();
    *(_QWORD *)(v2 + v10) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v10);
  sub_21FA2D23C(a1, (uint64_t)v9, type metadata accessor for PBHKConcept);
  v14 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_21FA2D280((uint64_t)v9, (uint64_t)v7, &qword_255540590, type metadata accessor for PBHKConcept);
  v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v7, v15, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBClinicalRecord.source.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB188A4(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t PBClinicalRecord.gatewayID.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB188A4(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
}

uint64_t sub_21FB188A4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  v5 = v3;
  v8 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v9 = (_QWORD *)swift_retain();
    v10 = sub_21FB8E53C(v9);
    swift_release();
    *(_QWORD *)(v5 + v8) = v10;
    swift_release();
  }
  v11 = (_QWORD *)(*(_QWORD *)(v5 + v8) + *a3);
  swift_beginAccess();
  *v11 = a1;
  v11[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBClinicalRecord.medicalRecordOriginType.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v6 = (_QWORD *)swift_retain();
    v7 = sub_21FB8E53C(v6);
    swift_release();
    *(_QWORD *)(v2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v5)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  result = swift_beginAccess();
  *(_QWORD *)v8 = v3;
  *(_BYTE *)(v8 + 8) = v4;
  return result;
}

uint64_t PBSleepSeries.Value.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  type metadata accessor for PBSleepSeries.Value(0);
  return sub_21FC5AD10();
}

uint64_t PBHKDiagnosticTestResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKDiagnosticTestResult, &qword_25553D990, &qword_255543C98, a1);
}

uint64_t PBHKDiagnosticTestResult.bodySite.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB695E0(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.category.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

uint64_t PBHKDiagnosticTestResult.comments.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
}

uint64_t PBHKDiagnosticTestResult.diagnosticTest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB695E0(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.effectiveEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKDiagnosticTestResult.effectiveStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKDiagnosticTestResult.interpretation.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
}

uint64_t PBHKDiagnosticTestResult.issueDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKDiagnosticTestResult.method.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB695E0(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.performers.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t PBHKDiagnosticTestResult.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB695E0(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValueCollection);
  v12 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.referenceRanges.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t PBClinicalRecord.diagnosticTestResult.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t PBClinicalRecord.iosDerivedDisplayName.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB188A4(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
}

uint64_t PBHistogramSeries.Value.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  type metadata accessor for PBHistogramSeries.Value(0);
  return sub_21FC5AD10();
}

uint64_t PBBucket.init()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PBBucket(0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_21FC5AD10();
}

uint64_t PBHKMedicationRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKMedicationRecord, &qword_25553D958, &qword_255543C20, a1);
}

uint64_t PBHKMedicationRecord.generalMedication.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB638BC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBGeneralMedication);
  v12 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationRecord.asserter.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t PBHKMedicationRecord.assertionDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
}

uint64_t PBHKMedicationRecord.asserterType.setter(uint64_t *a1)
{
  return sub_21FB3E310(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
}

uint64_t PBHKMedicationRecord.effectiveStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKMedicationRecord.effectiveEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKMedicationRecord.notTaken.setter(char a1)
{
  return sub_21FB29D2C(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
}

uint64_t PBHKMedicationRecord.reasonForUse.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
}

uint64_t PBHKMedicationRecord.reasonsNotTaken.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
}

uint64_t PBHKMedicationRecord.generalMedication.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v7 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBGeneralMedication);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D948 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543C00;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
}

uint64_t PBGeneralMedication.rxNormCodeSet.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
}

uint64_t PBClinicalRecord.medicationRecord.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_21FB19764(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = v2;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v13 = (_QWORD *)swift_retain();
    v14 = sub_21FB8E53C(v13);
    swift_release();
    *(_QWORD *)(v4 + v12) = v14;
    swift_release();
  }
  v15 = *(_QWORD *)(v4 + v12);
  sub_21FA2D23C(a1, (uint64_t)v11, a2);
  v16 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 0, 1, v16);
  sub_21FA2D280((uint64_t)v11, (uint64_t)v9, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v17 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v9, v17, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationOrder.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKMedicationOrder, &qword_25553D980, &qword_255543C78, a1);
}

uint64_t PBHKMedicationOrder.generalMedication.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB672FC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBGeneralMedication);
  v12 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationOrder.endedDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
}

uint64_t PBHKMedicationOrder.numberOfFills.setter(int a1)
{
  return sub_21FB168C4(a1, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
}

uint64_t PBHKMedicationOrder.prescriber.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
}

uint64_t PBHKMedicationOrder.reason.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
}

uint64_t PBHKMedicationOrder.reasonEnded.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB672FC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationOrder.writtenDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
}

uint64_t PBClinicalRecord.medicationOrder.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKMedicationOrder);
}

uint64_t PBHKMedicationDispenseRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKMedicationDispenseRecord, &qword_25553D970, &qword_255543C58, a1);
}

uint64_t PBHKMedicationDispenseRecord.generalMedication.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB65540(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBGeneralMedication);
  v12 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationDispenseRecord.handOverDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_21FB65540, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
}

uint64_t PBHKMedicationDispenseRecord.preparationDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_21FB65540, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
}

uint64_t PBClinicalRecord.medicationDispenseRecord.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKMedicationDispenseRecord);
}

uint64_t PBGeneralMedication.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBGeneralMedication, &qword_25553D948, &qword_255543C00, a1);
}

uint64_t PBGeneralMedication.medication.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB61F74(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBGeneralMedication.earliestDosageDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74);
}

uint64_t PBGeneralMedication.dosages.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
}

uint64_t PBGeneralMedication.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB61F74(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBMedicationDosage.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBMedicationDosage, &qword_25553D930, &qword_255543BC8, a1);
}

uint64_t PBMedicationDosage.instruction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB6C830(v6, &qword_25553E0F8, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationDosage.timingPeriod.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB6C830(v10, &qword_25553E0F8, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCategorySeries.Event.steadinessEvent.setter(uint64_t *a1)
{
  return sub_21FB1A5E0(a1);
}

uint64_t sub_21FB1A5E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = *a1;
  v11 = *((_BYTE *)a1 + 8);
  v12 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(v2 + v12) = sub_21FB4E9EC(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(v2 + v12);
  *(_QWORD *)v9 = v10;
  v9[8] = v11;
  v15 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
  sub_21FA2D280((uint64_t)v9, (uint64_t)v7, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v16 = v14
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v7, v16, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_21FB1A7A8()
{
  sub_21FB9E388();
  return sub_21FC5AD7C();
}

void sub_21FB1A7E0()
{
  qword_255543830 = (uint64_t)&unk_24E480BF8;
}

uint64_t static PBInspectableValueCollectionType.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D778);
}

uint64_t static PBInspectableValueCollectionType.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D778, &qword_255543830);
}

uint64_t (*static PBInspectableValueCollectionType.allCases.modify())()
{
  if (qword_25553D778 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB1A898@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D778, &qword_255543830, a1);
}

uint64_t sub_21FB1A8B8()
{
  sub_21FB9E344();
  return sub_21FC5AD7C();
}

BOOL sub_21FB1A8F0(uint64_t a1, uint64_t *a2)
{
  return sub_21FA2DED8(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_21FB1A90C()
{
  qword_255543838 = (uint64_t)&unk_24E480C68;
}

uint64_t static PBInspectableValueType.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D780);
}

uint64_t static PBInspectableValueType.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D780, &qword_255543838);
}

uint64_t (*static PBInspectableValueType.allCases.modify())()
{
  if (qword_25553D780 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB1A9C4@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D780, &qword_255543838, a1);
}

uint64_t PBDateRange.startTime.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDateRange.startTime.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBDateRange.startTime.modify())()
{
  return nullsub_1;
}

uint64_t PBDateRange.endTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDateRange.endTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBDateRange.endTime.modify())()
{
  return nullsub_1;
}

void PBDateRange.granularity.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBDateRange.granularity.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t (*PBDateRange.granularity.modify())()
{
  return nullsub_1;
}

uint64_t PBDateRange.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBDateRange, a1);
}

uint64_t PBDateRange.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBDateRange);
}

uint64_t (*PBDateRange.unknownFields.modify())()
{
  type metadata accessor for PBDateRange(0);
  return nullsub_1;
}

uint64_t PBTimeSeries.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB14B78(type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t PBTimeSeries.dateRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTimeSeries._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB49070(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBTimeSeries.dateRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBTimeSeries(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_21FB1AE64;
}

void sub_21FB1AE64(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBTimeSeries.dateRange.setter, type metadata accessor for PBDateRange);
}

BOOL PBTimeSeries.hasDateRange.getter()
{
  return sub_21FAF57D4(&qword_25553E0F8, type metadata accessor for PBDateRange, type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange);
}

Swift::Void __swiftcall PBTimeSeries.clearDateRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTimeSeries._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB49070(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBTimeSeries.dataSource.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t PBTimeSeries.dataSource.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBTimeSeries, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

void (*PBTimeSeries.dataSource.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB1B0AC;
}

void sub_21FB1B0AC(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t PBTimeSeries.unit.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
}

uint64_t sub_21FB1B0DC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X4>, _QWORD *a4@<X8>)
{
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)(*(_QWORD *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  swift_beginAccess();
  v6 = v5[1];
  *a4 = *v5;
  a4[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB1B148(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t), _QWORD *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v13 = *a1;
  v12 = a1[1];
  v14 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v15 = swift_retain();
    *(_QWORD *)(a2 + v14) = a7(v15);
    swift_release();
  }
  v16 = (_QWORD *)(*(_QWORD *)(a2 + v14) + *a8);
  swift_beginAccess();
  *v16 = v13;
  v16[1] = v12;
  return swift_bridgeObjectRelease();
}

void (*PBTimeSeries.unit.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB1B2A0;
}

void sub_21FB1B2A0(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
}

void sub_21FB1B2BC(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 72);
  v10 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v11 = *(int *)(v8 + 96);
      v12 = *(_QWORD *)(v8 + 88);
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + v11) = a4(v13);
      swift_release();
    }
    v14 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 88) + *(int *)(v8 + 96)) + *a5);
    swift_beginAccess();
    *v14 = v9;
    v14[1] = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v15 = *(int *)(v8 + 96);
      v16 = *(_QWORD *)(v8 + 88);
      a3(0);
      swift_allocObject();
      v17 = swift_retain();
      *(_QWORD *)(v16 + v15) = a4(v17);
      swift_release();
    }
    v18 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 88) + *(int *)(v8 + 96)) + *a5);
    swift_beginAccess();
    *v18 = v9;
    v18[1] = v10;
  }
  swift_bridgeObjectRelease();
  free((void *)v8);
}

void (*PBTimeSeries.values.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB1B4BC;
}

void sub_21FB1B4BC(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
}

uint64_t (*PBTimeSeries.unknownFields.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.minFloat.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void PBTimeSeries.Value.minFloat.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*PBTimeSeries.Value.minFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.maxFloat.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void PBTimeSeries.Value.maxFloat.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*PBTimeSeries.Value.maxFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.meanFloat.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void PBTimeSeries.Value.meanFloat.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*PBTimeSeries.Value.meanFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.sumFloat.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void PBTimeSeries.Value.sumFloat.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

uint64_t (*PBTimeSeries.Value.sumFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.rawFloat.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void PBTimeSeries.Value.rawFloat.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*PBTimeSeries.Value.rawFloat.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.recordedTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBTimeSeries.Value.recordedTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PBTimeSeries.Value.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.measureCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 40);
}

uint64_t PBTimeSeries.Value.measureCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*PBTimeSeries.Value.measureCount.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.unit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBTimeSeries.Value.unit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PBTimeSeries.Value.unit.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.dataSource.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBTimeSeries.Value.dataSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*PBTimeSeries.Value.dataSource.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.min.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void PBTimeSeries.Value.min.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

uint64_t (*PBTimeSeries.Value.min.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.max.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

void PBTimeSeries.Value.max.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

uint64_t (*PBTimeSeries.Value.max.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.mean.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void PBTimeSeries.Value.mean.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*PBTimeSeries.Value.mean.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.sum.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void PBTimeSeries.Value.sum.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*PBTimeSeries.Value.sum.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.raw.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void PBTimeSeries.Value.raw.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 112) = a1;
}

uint64_t (*PBTimeSeries.Value.raw.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.dataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBTimeSeries.Value.dataSources.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = a1;
  return result;
}

uint64_t (*PBTimeSeries.Value.dataSources.modify())()
{
  return nullsub_1;
}

void PBTimeSeries.Value.additionalData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 136);
  v3 = *(_BYTE *)(v1 + 137);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 128);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t PBTimeSeries.Value.additionalData.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_BYTE *)(result + 9);
  *(_QWORD *)(v1 + 128) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 136) = v2;
  *(_BYTE *)(v1 + 137) = v3;
  return result;
}

uint64_t (*PBTimeSeries.Value.additionalData.modify())()
{
  return nullsub_1;
}

void PBTimeSeries.Value.glucoseMealTime.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if ((*(_BYTE *)(v1 + 137) & 1) != 0)
  {
    v2 = 0;
    v3 = 1;
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 128);
    v3 = *(_BYTE *)(v1 + 136) & 1;
  }
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
}

uint64_t (*PBTimeSeries.Value.glucoseMealTime.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 137) & 1) != 0)
  {
    v2 = 0;
    v3 = 1;
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 128);
    v3 = *(_BYTE *)(v1 + 136) & 1;
  }
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return sub_21FB1B890;
}

uint64_t sub_21FB1B890(uint64_t result)
{
  uint64_t v1;
  unsigned __int8 v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 128) = *(_QWORD *)result;
  *(_WORD *)(v1 + 136) = v2;
  return result;
}

uint64_t PBTimeSeries.Value.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBTimeSeries.Value(0) + 80);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBTimeSeries.Value.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBTimeSeries.Value(0) + 80);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBTimeSeries.Value.unknownFields.modify())()
{
  type metadata accessor for PBTimeSeries.Value(0);
  return nullsub_1;
}

uint64_t (*PBBucket.start.modify())()
{
  return nullsub_1;
}

double PBBucket.end.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void PBBucket.end.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*PBBucket.end.modify())()
{
  return nullsub_1;
}

uint64_t (*PBBucket.value.modify())()
{
  return nullsub_1;
}

uint64_t PBBucket.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBBucket, a1);
}

uint64_t PBBucket.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBBucket);
}

uint64_t (*PBBucket.unknownFields.modify())()
{
  type metadata accessor for PBBucket(0);
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.values.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.unit.modify())()
{
  return nullsub_1;
}

uint64_t PBHistogramSeries.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBHistogramSeries, a1);
}

uint64_t PBHistogramSeries.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBHistogramSeries);
}

uint64_t (*PBHistogramSeries.unknownFields.modify())()
{
  type metadata accessor for PBHistogramSeries(0);
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.Value.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBHistogramSeries.Value.buckets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBHistogramSeries.Value.buckets.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PBHistogramSeries.Value.buckets.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.Value.identifier.modify())()
{
  return nullsub_1;
}

uint64_t PBHistogramSeries.Value.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBHistogramSeries.Value, a1);
}

uint64_t PBHistogramSeries.Value.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBHistogramSeries.Value);
}

uint64_t (*PBHistogramSeries.Value.unknownFields.modify())()
{
  type metadata accessor for PBHistogramSeries.Value(0);
  return nullsub_1;
}

uint64_t (*PBSleepSeries.values.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBSleepSeries, a1);
}

uint64_t PBSleepSeries.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBSleepSeries);
}

uint64_t (*PBSleepSeries.unknownFields.modify())()
{
  type metadata accessor for PBSleepSeries(0);
  return nullsub_1;
}

uint64_t (*PBSleepSeries.Value.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.meanAsleep.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t PBSleepSeries.Value.meanAsleep.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*PBSleepSeries.Value.meanAsleep.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.meanInBed.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t PBSleepSeries.Value.meanInBed.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*PBSleepSeries.Value.meanInBed.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.meanTimeToSleep.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24);
}

uint64_t PBSleepSeries.Value.meanTimeToSleep.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*PBSleepSeries.Value.meanTimeToSleep.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBSleepSeries.Value.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBSleepSeries.Value.unknownFields.modify())()
{
  type metadata accessor for PBSleepSeries.Value(0);
  return nullsub_1;
}

uint64_t (*PBSleepSummary.schedule.modify())()
{
  return nullsub_1;
}

uint64_t (*PBSleepSummary.sleepGoal.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBSleepSummary, a1);
}

uint64_t sub_21FB1BC90@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PBSleepSummary.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBSleepSummary);
}

uint64_t sub_21FB1BCE8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*PBSleepSummary.unknownFields.modify())()
{
  type metadata accessor for PBSleepSummary(0);
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.sunday.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PBSleepSummary.Schedule.sunday.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.sunday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBSleepSummary.Schedule.monday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.tuesday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t PBSleepSummary.Schedule.tuesday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.tuesday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.wednesday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t PBSleepSummary.Schedule.wednesday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.wednesday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.thursday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t PBSleepSummary.Schedule.thursday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.thursday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.friday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t PBSleepSummary.Schedule.friday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.friday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.saturday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t PBSleepSummary.Schedule.saturday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.saturday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.bedtime.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t PBSleepSummary.Schedule.bedtime.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.bedtime.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.awake.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12);
}

uint64_t PBSleepSummary.Schedule.awake.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.awake.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB3F088(type metadata accessor for PBSleepSummary.Schedule, a1);
}

uint64_t PBSleepSummary.Schedule.unknownFields.setter(uint64_t a1)
{
  return sub_21FB3F0E0(a1, type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t (*PBSleepSummary.Schedule.unknownFields.modify())()
{
  type metadata accessor for PBSleepSummary.Schedule(0);
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 8) = 0;
  type metadata accessor for PBSleepSummary.Schedule(0);
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 3) = 0;
  return sub_21FC5AD10();
}

uint64_t PBCategorySeries.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB14B78(type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t PBCategorySeries.dateRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB4D47C(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBCategorySeries.dateRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_21FB1C210;
}

void sub_21FB1C210(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBCategorySeries.dateRange.setter, type metadata accessor for PBDateRange);
}

BOOL PBCategorySeries.hasDateRange.getter()
{
  return sub_21FAF57D4(&qword_25553E0F8, type metadata accessor for PBDateRange, type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange);
}

Swift::Void __swiftcall PBCategorySeries.clearDateRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB4D47C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBCategorySeries.dataSource.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t PBCategorySeries.dataSource.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBCategorySeries, (void (*)(_QWORD))type metadata accessor for PBCategorySeries._StorageClass, sub_21FB4D47C, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

void (*PBCategorySeries.dataSource.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB1C458;
}

void sub_21FB1C458(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCategorySeries._StorageClass, sub_21FB4D47C, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t sub_21FB1C474@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X4>, _QWORD *a4@<X8>)
{
  _QWORD *v5;

  v5 = (_QWORD *)(*(_QWORD *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  swift_beginAccess();
  *a4 = *v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB1C4E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t), _QWORD *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v12 = *a1;
  v13 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v14 = swift_retain();
    *(_QWORD *)(a2 + v13) = a7(v14);
    swift_release();
  }
  v15 = (_QWORD *)(*(_QWORD *)(a2 + v13) + *a8);
  swift_beginAccess();
  *v15 = v12;
  return swift_bridgeObjectRelease();
}

void (*PBCategorySeries.events.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB1C638;
}

void sub_21FB1C638(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCategorySeries._StorageClass, sub_21FB4D47C, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
}

void sub_21FB1C654(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v8 + 88);
      v11 = *(_QWORD *)(v8 + 80);
      a3(0);
      swift_allocObject();
      v12 = swift_retain();
      *(_QWORD *)(v11 + v10) = a4(v12);
      swift_release();
    }
    v13 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 80) + *(int *)(v8 + 88)) + *a5);
    swift_beginAccess();
    *v13 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v14 = *(int *)(v8 + 88);
      v15 = *(_QWORD *)(v8 + 80);
      a3(0);
      swift_allocObject();
      v16 = swift_retain();
      *(_QWORD *)(v15 + v14) = a4(v16);
      swift_release();
    }
    v17 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 80) + *(int *)(v8 + 88)) + *a5);
    swift_beginAccess();
    *v17 = v9;
  }
  swift_bridgeObjectRelease();
  free((void *)v8);
}

uint64_t (*PBCategorySeries.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCategorySeries.Range.min.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCategorySeries.Range.max.modify())()
{
  return nullsub_1;
}

uint64_t PBCategorySeries.Range.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBCategorySeries.Range, a1);
}

uint64_t PBCategorySeries.Range.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBCategorySeries.Range);
}

uint64_t (*PBCategorySeries.Range.unknownFields.modify())()
{
  type metadata accessor for PBCategorySeries.Range(0);
  return nullsub_1;
}

uint64_t PBCategorySeries.Range.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB1C850((void (*)(_QWORD))type metadata accessor for PBCategorySeries.Range, a1);
}

uint64_t sub_21FB1C850@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a1(0);
  return sub_21FC5AD10();
}

uint64_t PBCategorySeries.Event.raw.getter()
{
  return sub_21FB1E7BC(type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_21FB1C894(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB4E9EC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 16) = v3;
  return result;
}

void (*PBCategorySeries.Event.raw.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 16);
  return sub_21FB1C9B0;
}

void sub_21FB1C9B0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_21FB4E9EC(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 16);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t PBCategorySeries.Event.value.getter()
{
  return sub_21FB258B8(type metadata accessor for PBCategorySeries.Event);
}

void (*PBCategorySeries.Event.value.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 32);
  v3[9] = *(_QWORD *)(v5 + 24);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB1CB10;
}

void sub_21FB1CB10(uint64_t *a1, char a2)
{
  sub_21FB25BA0(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_21FB4E9EC);
}

void (*PBCategorySeries.Event.recordedTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_21FB1CC98;
}

void sub_21FB1CC98(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBCategorySeries.Event.recordedTime.setter, type metadata accessor for PBDateRange);
}

BOOL PBCategorySeries.Event.hasRecordedTime.getter()
{
  return sub_21FAF57D4(&qword_25553E0F8, type metadata accessor for PBDateRange, type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime);
}

Swift::Void __swiftcall PBCategorySeries.Event.clearRecordedTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB4E9EC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBCategorySeries.Event.source.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

void (*PBCategorySeries.Event.source.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB1CEBC;
}

void sub_21FB1CEBC(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_21FB4E9EC, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t PBCategorySeries.Event.additionalData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA38B60(type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, a1);
}

uint64_t sub_21FB1CEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  sub_21FA44968(a1, (uint64_t)&v11 - v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(a2 + v7) = sub_21FB4E9EC(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(a2 + v7)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v9, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCategorySeries.Event.additionalData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB4E9EC(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8(a1, v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

void (*PBCategorySeries.Event.additionalData.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  v6 = malloc(v5);
  v3[11] = v6;
  v7 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v7;
  v8 = *(_QWORD *)(v1 + v7)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v6, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  return sub_21FB1D208;
}

void sub_21FB1D208(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_21FA44968(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 80), &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v3 = *(int *)(v2 + 96);
      v4 = *(_QWORD *)(v2 + 72);
      type metadata accessor for PBCategorySeries.Event._StorageClass(0);
      swift_allocObject();
      v5 = swift_retain();
      *(_QWORD *)(v4 + v3) = sub_21FB4E9EC(v5);
      swift_release();
    }
    v7 = *(void **)(v2 + 80);
    v6 = *(void **)(v2 + 88);
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 72) + *(int *)(v2 + 96))
       + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
    swift_beginAccess();
    swift_retain();
    sub_21FA2D2D8((uint64_t)v7, v8, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    swift_endAccess();
    swift_release();
    sub_21FA2D1F8((uint64_t)v6, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 72);
      type metadata accessor for PBCategorySeries.Event._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB4E9EC(v11);
      swift_release();
    }
    v7 = *(void **)(v2 + 80);
    v6 = *(void **)(v2 + 88);
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 72) + *(int *)(v2 + 96))
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
    swift_beginAccess();
    swift_retain();
    sub_21FA2D2D8((uint64_t)v6, v12, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    swift_endAccess();
    swift_release();
  }
  free(v6);
  free(v7);
  free((void *)v2);
}

uint64_t PBCategorySeries.Event.range.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_5:
    *a1 = 0;
    type metadata accessor for PBCategorySeries.Range(0);
    return sub_21FC5AD10();
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_5;
  }
  return sub_21FA2D23C((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBCategorySeries.Range);
}

uint64_t PBCategorySeries.Event.range.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB4E9EC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBCategorySeries.Range);
  v12 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v13 = v11
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

void (*PBCategorySeries.Event.range.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBCategorySeries.Range(0) - 8) + 64);
  v3[5] = malloc(v6);
  v7 = malloc(v6);
  v3[6] = v7;
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v9 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBCategorySeries.Range);
      return sub_21FB1D8B4;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  *v7 = 0;
  sub_21FC5AD10();
  return sub_21FB1D8B4;
}

void sub_21FB1D8B4(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBCategorySeries.Event.range.setter, type metadata accessor for PBCategorySeries.Range);
}

uint64_t PBCategorySeries.Event.heartRateEventThreshold.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v5 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  return 0;
}

void (*PBCategorySeries.Event.heartRateEventThreshold.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v8 = 0;
    v9 = 0xE000000000000000;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FB1DB50;
}

void sub_21FB1DB50(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    PBCategorySeries.Event.heartRateEventThreshold.setter(v3, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    PBCategorySeries.Event.heartRateEventThreshold.setter(*(_QWORD *)(*(_QWORD *)a1 + 24), v5);
  }
  free(v4);
  free(v2);
}

uint64_t PBCategorySeries.Event.sleepAnalysis.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    result = sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v9 = 0;
    v10 = 1;
    goto LABEL_7;
  }
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 2)
  {
    result = sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v9 = *(_QWORD *)v5;
  v10 = v5[8];
LABEL_7:
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v10;
  return result;
}

uint64_t PBCategorySeries.Event.sleepAnalysis.setter(uint64_t *a1)
{
  return sub_21FB1A5E0(a1);
}

void (*PBCategorySeries.Event.sleepAnalysis.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v8 = 0;
    v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)v5;
  v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v9;
  return sub_21FB1DE78;
}

void sub_21FB1DE78(uint64_t a1, uint64_t a2)
{
  sub_21FB1E6A8(a1, a2, (void (*)(uint64_t *))PBCategorySeries.Event.sleepAnalysis.setter);
}

uint64_t PBCategorySeries.Event.cycleFactor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    result = sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v9 = 0;
    v10 = 1;
    goto LABEL_7;
  }
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 3)
  {
    result = sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v9 = *(_QWORD *)v5;
  v10 = v5[8];
LABEL_7:
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v10;
  return result;
}

uint64_t PBCategorySeries.Event.cycleFactor.setter(uint64_t *a1)
{
  return sub_21FB1A5E0(a1);
}

void (*PBCategorySeries.Event.cycleFactor.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v8 = 0;
    v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)v5;
  v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v9;
  return sub_21FB1E134;
}

void sub_21FB1E134(uint64_t a1, uint64_t a2)
{
  sub_21FB1E6A8(a1, a2, (void (*)(uint64_t *))PBCategorySeries.Event.cycleFactor.setter);
}

uint64_t PBCategorySeries.Event.steadinessEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    result = sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v9 = 0;
    v10 = 1;
    goto LABEL_7;
  }
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 4)
  {
    result = sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v9 = *(_QWORD *)v5;
  v10 = v5[8];
LABEL_7:
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v10;
  return result;
}

void (*PBCategorySeries.Event.steadinessEvent.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v8 = 0;
    v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)v5;
  v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v9;
  return sub_21FB1E3E8;
}

void sub_21FB1E3E8(uint64_t a1, uint64_t a2)
{
  sub_21FB1E6A8(a1, a2, (void (*)(uint64_t *))PBCategorySeries.Event.steadinessEvent.setter);
}

uint64_t PBCategorySeries.Event.steadinessClassification.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    result = sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v9 = 0;
    v10 = 1;
    goto LABEL_7;
  }
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 5)
  {
    result = sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v9 = *(_QWORD *)v5;
  v10 = v5[8];
LABEL_7:
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v10;
  return result;
}

void (*PBCategorySeries.Event.steadinessClassification.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    v8 = 0;
    v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)v5;
  v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v9;
  return sub_21FB1E69C;
}

void sub_21FB1E69C(uint64_t a1, uint64_t a2)
{
  sub_21FB1E6A8(a1, a2, (void (*)(uint64_t *))PBCategorySeries.Event.steadinessClassification.setter);
}

void sub_21FB1E6A8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *))
{
  void *v3;
  char v4;
  void *v5;
  uint64_t v6;
  char v7;

  v3 = *(void **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v7 = v4;
  a3(&v6);
  free(v5);
  free(v3);
}

uint64_t (*PBCategorySeries.Event.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t static PBCategorySeries.Range.== infix(_:_:)(_DWORD *a1, char *a2)
{
  return sub_21FB8CBBC(a1, a2, type metadata accessor for PBCategorySeries.Range) & 1;
}

uint64_t (*PBCharacteristics.bloodType.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCharacteristics.biologicalSex.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCharacteristics.dataOfBirth.modify())()
{
  return nullsub_1;
}

uint64_t PBCharacteristics.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBCharacteristics, a1);
}

uint64_t PBCharacteristics.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBCharacteristics);
}

uint64_t (*PBCharacteristics.unknownFields.modify())()
{
  type metadata accessor for PBCharacteristics(0);
  return nullsub_1;
}

uint64_t PBWorkout.totalEnergyBurned.getter()
{
  return sub_21FB1E7BC(type metadata accessor for PBWorkout);
}

uint64_t sub_21FB1E7BC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v2 + 16);
}

uint64_t sub_21FB1E808(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(a2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 16) = v3;
  return result;
}

uint64_t PBWorkout.totalEnergyBurned.setter(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 16) = a1;
  return result;
}

void (*PBWorkout.totalEnergyBurned.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 16);
  return sub_21FB1E9D4;
}

void sub_21FB1E9D4(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_21FB8EAD4(v8);
    swift_release();
    *(_QWORD *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  v10 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 16);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.totalDistance.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 20);
}

uint64_t sub_21FB1EAF8(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(a2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 20) = v3;
  return result;
}

uint64_t PBWorkout.totalDistance.setter(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 20) = a1;
  return result;
}

void (*PBWorkout.totalDistance.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 20);
  return sub_21FB1ECC4;
}

void sub_21FB1ECC4(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_21FB8EAD4(v8);
    swift_release();
    *(_QWORD *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  v10 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 20);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.activityType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 24);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FB1EDF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FB8EAD4(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v8 + 24) = v3;
  *(_BYTE *)(v8 + 32) = v4;
  return result;
}

uint64_t PBWorkout.activityType.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FB8EAD4(v6);
    swift_release();
    *(_QWORD *)(v2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v8 + 24) = v3;
  *(_BYTE *)(v8 + 32) = v4;
  return result;
}

void (*PBWorkout.activityType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 32);
  v3[9] = *(_QWORD *)(v5 + 24);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB1EFDC;
}

void sub_21FB1EFDC(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_21FB8EAD4(v9);
    swift_release();
    *(_QWORD *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  v11 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v11 + 24) = v4;
  *(_BYTE *)(v11 + 32) = v5;
  free((void *)v3);
}

uint64_t PBWorkout.totalFlightsClimbed.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 36);
}

uint64_t sub_21FB1F104(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(a2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 36) = v3;
  return result;
}

uint64_t PBWorkout.totalFlightsClimbed.setter(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 36) = a1;
  return result;
}

void (*PBWorkout.totalFlightsClimbed.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 36);
  return sub_21FB1F2D0;
}

void sub_21FB1F2D0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_21FB8EAD4(v8);
    swift_release();
    *(_QWORD *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  v10 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 36);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.duration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 40);
}

uint64_t sub_21FB1F3F4(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(a2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 40) = v3;
  return result;
}

uint64_t PBWorkout.duration.setter(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FB8EAD4(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 40) = a1;
  return result;
}

void (*PBWorkout.duration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 40);
  return sub_21FB1F5C0;
}

void sub_21FB1F5C0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_21FB8EAD4(v8);
    swift_release();
    *(_QWORD *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  v10 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 40);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.dateRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = sub_21FB8EAD4(v11);
    swift_release();
    *(_QWORD *)(v2 + v10) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v10);
  sub_21FA2D23C(a1, (uint64_t)v9, type metadata accessor for PBDateRange);
  v14 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_21FA2D280((uint64_t)v9, (uint64_t)v7, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v7, v15, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBWorkout.dateRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBWorkout(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_21FB1F9B8;
}

void sub_21FB1F9B8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBWorkout.dateRange.setter, type metadata accessor for PBDateRange);
}

BOOL PBWorkout.hasDateRange.getter()
{
  return sub_21FAF57D4(&qword_25553E0F8, type metadata accessor for PBDateRange, type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange);
}

Swift::Void __swiftcall PBWorkout.clearDateRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - v3;
  v5 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FB8EAD4(v6);
    swift_release();
    *(_QWORD *)(v1 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v1 + v5);
  v9 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = v8
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v4, v10, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBWorkout.totalSwimmingStrokeCount.getter()
{
  return sub_21FB1FC04(type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
}

uint64_t PBWorkout.totalSwimmingStrokeCount.setter(int a1)
{
  return sub_21FB1FD20(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
}

void (*PBWorkout.totalSwimmingStrokeCount.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB1FBE4;
}

void sub_21FB1FBE4(uint64_t *a1, char a2)
{
  sub_21FB1FE64(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
}

uint64_t PBWorkout.averageHeartRate.getter()
{
  return sub_21FB1FC04(type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
}

uint64_t sub_21FB1FC04(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  unsigned int *v3;

  v3 = (unsigned int *)(*(_QWORD *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  return *v3;
}

uint64_t sub_21FB1FC5C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t result;

  v7 = *a1;
  v8 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_21FB8EAD4(v9);
    swift_release();
    *(_QWORD *)(a2 + v8) = v10;
    swift_release();
  }
  v11 = (_DWORD *)(*(_QWORD *)(a2 + v8) + *a5);
  result = swift_beginAccess();
  *v11 = v7;
  return result;
}

uint64_t PBWorkout.averageHeartRate.setter(int a1)
{
  return sub_21FB1FD20(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
}

uint64_t sub_21FB1FD20(int a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t result;

  v4 = v2;
  v6 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_21FB8EAD4(v7);
    swift_release();
    *(_QWORD *)(v4 + v6) = v8;
    swift_release();
  }
  v9 = (_DWORD *)(*(_QWORD *)(v4 + v6) + *a2);
  result = swift_beginAccess();
  *v9 = a1;
  return result;
}

void (*PBWorkout.averageHeartRate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB1FE58;
}

void sub_21FB1FE58(uint64_t *a1, char a2)
{
  sub_21FB1FE64(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
}

void sub_21FB1FE64(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  int v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;

  v5 = *a1;
  v6 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v8 = *(int *)(v5 + 84);
    v9 = *(_QWORD *)(v5 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    v11 = sub_21FB8EAD4(v10);
    swift_release();
    *(_QWORD *)(v9 + v8) = v11;
    swift_release();
  }
LABEL_4:
  v12 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 72) + *(int *)(v5 + 84)) + *a3);
  swift_beginAccess();
  *v12 = v6;
  free((void *)v5);
}

uint64_t (*PBWorkout.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBAllClinicalRecords.records.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBAllClinicalRecords.records.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PBAllClinicalRecords.records.modify())()
{
  return nullsub_1;
}

uint64_t PBAllClinicalRecords.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBAllClinicalRecords, a1);
}

uint64_t PBAllClinicalRecords.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBAllClinicalRecords);
}

uint64_t (*PBAllClinicalRecords.unknownFields.modify())()
{
  type metadata accessor for PBAllClinicalRecords(0);
  return nullsub_1;
}

uint64_t PBClinicalRecord.clinicalTypeIdentifier.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBClinicalRecord);
}

uint64_t PBClinicalRecord.clinicalTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB20008(a1, a2, type metadata accessor for PBClinicalRecord, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E53C);
}

uint64_t sub_21FB20008(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = v5;
  v11 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v12 = swift_retain();
    v13 = a5(v12);
    swift_release();
    *(_QWORD *)(v8 + v11) = v13;
    swift_release();
  }
  v14 = *(_QWORD *)(v8 + v11);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBClinicalRecord.clinicalTypeIdentifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2014C;
}

void sub_21FB2014C(uint64_t *a1, char a2)
{
  sub_21FB22D00(a1, a2, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E53C);
}

uint64_t PBClinicalRecord.fhirResource.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBClinicalRecord);
}

uint64_t PBClinicalRecord.fhirResource.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB20188(a1, a2, type metadata accessor for PBClinicalRecord, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E53C);
}

uint64_t sub_21FB20188(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = v5;
  v11 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v12 = swift_retain();
    v13 = a5(v12);
    swift_release();
    *(_QWORD *)(v8 + v11) = v13;
    swift_release();
  }
  v14 = *(_QWORD *)(v8 + v11);
  swift_beginAccess();
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBClinicalRecord.fhirResource.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB202CC;
}

void sub_21FB202CC(uint64_t *a1, char a2)
{
  sub_21FB22FDC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E53C);
}

uint64_t PBClinicalRecord.primaryConcept.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB20448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBClinicalRecord.primaryConcept.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB20748;
}

void sub_21FB20748(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.primaryConcept.setter, type metadata accessor for PBHKConcept);
}

BOOL PBClinicalRecord.hasPrimaryConcept.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept);
}

Swift::Void __swiftcall PBClinicalRecord.clearPrimaryConcept()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - v3;
  v5 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v6 = (_QWORD *)swift_retain();
    v7 = sub_21FB8E53C(v6);
    swift_release();
    *(_QWORD *)(v1 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v1 + v5);
  v9 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = v8
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v4, v10, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t sub_21FB208D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - v5;
  sub_21FA44968(a1, (uint64_t)&v12 - v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v7 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v8 = (_QWORD *)swift_retain();
    v9 = sub_21FB8E53C(v8);
    swift_release();
    *(_QWORD *)(a2 + v7) = v9;
    swift_release();
  }
  v10 = *(_QWORD *)(a2 + v7)
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v10, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_endAccess();
  return swift_release();
}

uint64_t PBClinicalRecord.medicalRecord.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    v6 = sub_21FB8E53C(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8(a1, v7, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_endAccess();
  return swift_release();
}

void (*PBClinicalRecord.medicalRecord.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  v6 = malloc(v5);
  v3[11] = v6;
  v7 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v7;
  v8 = *(_QWORD *)(v1 + v7)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v6, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  return sub_21FB20BE8;
}

void sub_21FB20BE8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_21FA44968(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 80), &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v3 = *(int *)(v2 + 96);
      v4 = *(_QWORD *)(v2 + 72);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      v5 = (_QWORD *)swift_retain();
      v6 = sub_21FB8E53C(v5);
      swift_release();
      *(_QWORD *)(v4 + v3) = v6;
      swift_release();
    }
    v8 = *(void **)(v2 + 80);
    v7 = *(void **)(v2 + 88);
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 72) + *(int *)(v2 + 96))
       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
    swift_beginAccess();
    swift_retain();
    sub_21FA2D2D8((uint64_t)v8, v9, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    swift_endAccess();
    swift_release();
    sub_21FA2D1F8((uint64_t)v7, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 72);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      v12 = (_QWORD *)swift_retain();
      v13 = sub_21FB8E53C(v12);
      swift_release();
      *(_QWORD *)(v11 + v10) = v13;
      swift_release();
    }
    v8 = *(void **)(v2 + 80);
    v7 = *(void **)(v2 + 88);
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 72) + *(int *)(v2 + 96))
        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
    swift_beginAccess();
    swift_retain();
    sub_21FA2D2D8((uint64_t)v7, v14, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    swift_endAccess();
    swift_release();
  }
  free(v7);
  free(v8);
  free((void *)v2);
}

uint64_t PBClinicalRecord.allergyRecord.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKAllergyRecord);
}

uint64_t PBHKAllergyRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKAllergyRecord, &qword_25553D8F0, &qword_255543B48, a1);
}

void (*PBClinicalRecord.allergyRecord.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKAllergyRecord(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKAllergyRecord);
      return sub_21FB20FE8;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D8F0 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543B48;
  swift_retain();
  return sub_21FB20FE8;
}

void sub_21FB20FE8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.allergyRecord.setter, type metadata accessor for PBHKAllergyRecord);
}

uint64_t PBClinicalRecord.conditionRecord.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKConditionRecord);
}

uint64_t PBHKConditionRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKConditionRecord, &qword_25553D910, &qword_255543B88, a1);
}

void (*PBClinicalRecord.conditionRecord.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConditionRecord(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKConditionRecord);
      return sub_21FB211FC;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D910 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543B88;
  swift_retain();
  return sub_21FB211FC;
}

void sub_21FB211FC(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.conditionRecord.setter, type metadata accessor for PBHKConditionRecord);
}

uint64_t PBClinicalRecord.vaccinationRecord.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKVaccinationRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKVaccinationRecord, &qword_25553D920, &qword_255543BA8, a1);
}

void (*PBClinicalRecord.vaccinationRecord.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKVaccinationRecord(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKVaccinationRecord);
      return sub_21FB21410;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D920 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543BA8;
  swift_retain();
  return sub_21FB21410;
}

void sub_21FB21410(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.vaccinationRecord.setter, type metadata accessor for PBHKVaccinationRecord);
}

void (*PBClinicalRecord.medicationDispenseRecord.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKMedicationDispenseRecord);
      return sub_21FB215F0;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D970 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543C58;
  swift_retain();
  return sub_21FB215F0;
}

void sub_21FB215F0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.medicationDispenseRecord.setter, type metadata accessor for PBHKMedicationDispenseRecord);
}

void (*PBClinicalRecord.medicationOrder.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKMedicationOrder(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKMedicationOrder);
      return sub_21FB217D0;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D980 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543C78;
  swift_retain();
  return sub_21FB217D0;
}

void sub_21FB217D0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.medicationOrder.setter, type metadata accessor for PBHKMedicationOrder);
}

void (*PBClinicalRecord.diagnosticTestResult.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKDiagnosticTestResult(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKDiagnosticTestResult);
      return sub_21FB219B0;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D990 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543C98;
  swift_retain();
  return sub_21FB219B0;
}

void sub_21FB219B0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.diagnosticTestResult.setter, type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t PBClinicalRecord.diagnosticTestReport.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t PBHKDiagnosticTestReport.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKDiagnosticTestReport, &qword_25553D9F0, &qword_255543D68, a1);
}

void (*PBClinicalRecord.diagnosticTestReport.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKDiagnosticTestReport(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKDiagnosticTestReport);
      return sub_21FB21BC4;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D9F0 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543D68;
  swift_retain();
  return sub_21FB21BC4;
}

void sub_21FB21BC4(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.diagnosticTestReport.setter, type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t PBClinicalRecord.accountOwner.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKAccountOwner);
}

uint64_t PBHKAccountOwner.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB18044((void (*)(_QWORD))type metadata accessor for PBHKAccountOwner, a1);
}

void (*PBClinicalRecord.accountOwner.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBHKAccountOwner(0) - 8) + 64);
  v3[5] = malloc(v6);
  v7 = malloc(v6);
  v3[6] = v7;
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v9 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_6:
    *v7 = 0;
    v7[1] = 0xE000000000000000;
    v7[2] = 0;
    v7[3] = 0xE000000000000000;
    sub_21FC5AD10();
    return sub_21FB21D94;
  }
  if (swift_getEnumCaseMultiPayload() != 7)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    goto LABEL_6;
  }
  sub_21FA2D23C((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBHKAccountOwner);
  return sub_21FB21D94;
}

void sub_21FB21D94(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.accountOwner.setter, type metadata accessor for PBHKAccountOwner);
}

uint64_t PBClinicalRecord.procedureRecord.setter(uint64_t a1)
{
  return sub_21FB19764(a1, type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKProcedureRecord, &qword_25553DA08, &qword_255543DA0, a1);
}

void (*PBClinicalRecord.procedureRecord.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKProcedureRecord(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKProcedureRecord);
      return sub_21FB21FA8;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553DA08 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543DA0;
  swift_retain();
  return sub_21FB21FA8;
}

void sub_21FB21FA8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.procedureRecord.setter, type metadata accessor for PBHKProcedureRecord);
}

void (*PBClinicalRecord.medicationRecord.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKMedicationRecord(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[6] = v8;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_21FA2D23C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKMedicationRecord);
      return sub_21FB22188;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_21FC5AD10();
  v11 = *(int *)(v6 + 20);
  if (qword_25553D958 != -1)
    swift_once();
  *(_QWORD *)&v8[v11] = qword_255543C20;
  swift_retain();
  return sub_21FB22188;
}

void sub_21FB22188(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBClinicalRecord.medicationRecord.setter, type metadata accessor for PBHKMedicationRecord);
}

uint64_t PBClinicalRecord.source.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

void (*PBClinicalRecord.source.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB22238;
}

void sub_21FB22238(uint64_t *a1, char a2)
{
  sub_21FB223BC(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t PBClinicalRecord.gatewayID.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
}

uint64_t sub_21FB22258(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v8 = *a1;
  v7 = a1[1];
  v9 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    v11 = sub_21FB8E53C(v10);
    swift_release();
    *(_QWORD *)(a2 + v9) = v11;
    swift_release();
  }
  v12 = (_QWORD *)(*(_QWORD *)(a2 + v9) + *a5);
  swift_beginAccess();
  *v12 = v8;
  v12[1] = v7;
  return swift_bridgeObjectRelease();
}

void (*PBClinicalRecord.gatewayID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB223B0;
}

void sub_21FB223B0(uint64_t *a1, char a2)
{
  sub_21FB223BC(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
}

void sub_21FB223BC(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 72);
  v6 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = *(int *)(v4 + 96);
      v8 = *(_QWORD *)(v4 + 88);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      v9 = (_QWORD *)swift_retain();
      v10 = sub_21FB8E53C(v9);
      swift_release();
      *(_QWORD *)(v8 + v7) = v10;
      swift_release();
    }
    v11 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *v11 = v5;
    v11[1] = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = *(int *)(v4 + 96);
      v13 = *(_QWORD *)(v4 + 88);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      v14 = (_QWORD *)swift_retain();
      v15 = sub_21FB8E53C(v14);
      swift_release();
      *(_QWORD *)(v13 + v12) = v15;
      swift_release();
    }
    v16 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *v16 = v5;
    v16[1] = v6;
  }
  swift_bridgeObjectRelease();
  free((void *)v4);
}

uint64_t PBClinicalRecord.iosDerivedDisplayName.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
}

void (*PBClinicalRecord.iosDerivedDisplayName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB225D8;
}

void sub_21FB225D8(uint64_t *a1, char a2)
{
  sub_21FB223BC(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
}

uint64_t PBClinicalRecord.medicalRecordOriginType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB2D5F0(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType, a1);
}

uint64_t sub_21FB225F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v6 = (_QWORD *)swift_retain();
    v7 = sub_21FB8E53C(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(a2 + v5)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  result = swift_beginAccess();
  *(_QWORD *)v8 = v3;
  *(_BYTE *)(v8 + 8) = v4;
  return result;
}

void (*PBClinicalRecord.medicalRecordOriginType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB22740;
}

void sub_21FB22740(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v9 = (_QWORD *)swift_retain();
    v10 = sub_21FB8E53C(v9);
    swift_release();
    *(_QWORD *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  v11 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  swift_beginAccess();
  *(_QWORD *)v11 = v4;
  *(_BYTE *)(v11 + 8) = v5;
  free((void *)v3);
}

uint64_t (*PBClinicalRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t static PBHKAllergyRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKAllergyRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB59E20) & 1;
}

uint64_t static PBHKConditionRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKConditionRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB5D050) & 1;
}

uint64_t static PBHKVaccinationRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKVaccinationRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB5FC88) & 1;
}

uint64_t static PBHKMedicationDispenseRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, sub_21FB66144) & 1;
}

uint64_t static PBHKMedicationOrder.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationOrder, sub_21FB682EC) & 1;
}

uint64_t static PBHKDiagnosticTestResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, sub_21FB6B04C) & 1;
}

uint64_t static PBHKDiagnosticTestReport.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t (*)(uint64_t, uint64_t))sub_21FB75624) & 1;
}

uint64_t static PBHKAccountOwner.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBHKAccountOwner) & 1;
}

uint64_t static PBHKProcedureRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKProcedureRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB77EE4) & 1;
}

uint64_t static PBHKMedicationRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationRecord, sub_21FB64698) & 1;
}

unint64_t PBClinicalRecord.MedicalRecordOriginType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FB229EC@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

_QWORD *sub_21FB22A04@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 3uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_21FB22A20()
{
  sub_21FB9E300();
  return sub_21FC5AD7C();
}

void sub_21FB22A58()
{
  qword_255543840 = (uint64_t)&unk_24E480D58;
}

uint64_t static PBClinicalRecord.MedicalRecordOriginType.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D788);
}

uint64_t static PBClinicalRecord.MedicalRecordOriginType.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D788, &qword_255543840);
}

uint64_t (*static PBClinicalRecord.MedicalRecordOriginType.allCases.modify())()
{
  if (qword_25553D788 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB22B10@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D788, &qword_255543840, a1);
}

uint64_t (*PBFHIRIdentifier.resourceType.modify())()
{
  return nullsub_1;
}

uint64_t (*PBFHIRIdentifier.identifier.modify())()
{
  return nullsub_1;
}

uint64_t PBFHIRIdentifier.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBFHIRIdentifier, a1);
}

uint64_t PBFHIRIdentifier.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBFHIRIdentifier);
}

uint64_t (*PBFHIRIdentifier.unknownFields.modify())()
{
  type metadata accessor for PBFHIRIdentifier(0);
  return nullsub_1;
}

uint64_t PBFHIRIdentifier.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB18044((void (*)(_QWORD))type metadata accessor for PBFHIRIdentifier, a1);
}

uint64_t PBHKConcept.preferredName.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB22BA4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = *a1;
  v10 = a1[1];
  v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    v14 = a7(v13);
    swift_release();
    *(_QWORD *)(a2 + v12) = v14;
    swift_release();
  }
  v15 = *(_QWORD *)(a2 + v12);
  swift_beginAccess();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBHKConcept.preferredName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB22CEC;
}

void sub_21FB22CEC(uint64_t *a1, char a2)
{
  sub_21FB22D00(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E248);
}

void sub_21FB22D00(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      v12 = a4(v11);
      swift_release();
      *(_QWORD *)(v10 + v9) = v12;
      swift_release();
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v13 + 16) = v7;
    *(_QWORD *)(v13 + 24) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v14 = *(int *)(v6 + 96);
      v15 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v16 = swift_retain();
      v17 = a4(v16);
      swift_release();
      *(_QWORD *)(v15 + v14) = v17;
      swift_release();
    }
    v18 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v18 + 16) = v7;
    *(_QWORD *)(v18 + 24) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKConcept.localizedPreferredName.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB22E80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = *a1;
  v10 = a1[1];
  v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    v14 = a7(v13);
    swift_release();
    *(_QWORD *)(a2 + v12) = v14;
    swift_release();
  }
  v15 = *(_QWORD *)(a2 + v12);
  swift_beginAccess();
  *(_QWORD *)(v15 + 32) = v11;
  *(_QWORD *)(v15 + 40) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBHKConcept.localizedPreferredName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB22FC8;
}

void sub_21FB22FC8(uint64_t *a1, char a2)
{
  sub_21FB22FDC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E248);
}

void sub_21FB22FDC(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      v12 = a4(v11);
      swift_release();
      *(_QWORD *)(v10 + v9) = v12;
      swift_release();
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v13 + 32) = v7;
    *(_QWORD *)(v13 + 40) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v14 = *(int *)(v6 + 96);
      v15 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v16 = swift_retain();
      v17 = a4(v16);
      swift_release();
      *(_QWORD *)(v15 + v14) = v17;
      swift_release();
    }
    v18 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v18 + 32) = v7;
    *(_QWORD *)(v18 + 40) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKConcept.rawIdentifier.getter()
{
  return sub_21FB356F4(type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2315C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    v6 = (_QWORD *)swift_retain();
    v7 = sub_21FB8E248(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v8 + 48) = v4;
  *(_QWORD *)(v8 + 56) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBHKConcept.rawIdentifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB23294;
}

void sub_21FB23294(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBHKConcept._StorageClass(0);
      swift_allocObject();
      v7 = (_QWORD *)swift_retain();
      v8 = sub_21FB8E248(v7);
      swift_release();
      *(_QWORD *)(v6 + v5) = v8;
      swift_release();
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v9 + 48) = v3;
    *(_QWORD *)(v9 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBHKConcept._StorageClass(0);
      swift_allocObject();
      v12 = (_QWORD *)swift_retain();
      v13 = sub_21FB8E248(v12);
      swift_release();
      *(_QWORD *)(v11 + v10) = v13;
      swift_release();
    }
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v14 + 48) = v3;
    *(_QWORD *)(v14 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBHKConcept.groupBy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v1 + *(int *)(v6 + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v6 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB23558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = type metadata accessor for PBHKConcept(0);
  v8 = *(_QWORD *)(a1 + *(int *)(v7 + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKConcept.groupBy.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(v6 + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB23848;
}

void sub_21FB23848(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKConcept.groupBy.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKConcept.hasGroupBy.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - v2;
  v4 = type metadata accessor for PBHKConcept(0);
  v5 = *(_QWORD *)(v0 + *(int *)(v4 + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_21FA44968(v5, (uint64_t)v3, &qword_255540590, type metadata accessor for PBHKConcept);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1;
  sub_21FA2D1F8((uint64_t)v3, &qword_255540590, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKConcept.clearGroupBy()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - v3;
  v5 = type metadata accessor for PBHKConcept(0);
  v6 = *(int *)(v5 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    v7 = (_QWORD *)swift_retain();
    v8 = sub_21FB8E248(v7);
    swift_release();
    *(_QWORD *)(v1 + v6) = v8;
    swift_release();
  }
  v9 = *(_QWORD *)(v1 + v6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v10 = v9
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v4, v10, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConcept.isInMemory.getter()
{
  return sub_21FB29CB0(type metadata accessor for PBHKConcept, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
}

uint64_t sub_21FB23AB8(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    v6 = sub_21FB8E248(v5);
    swift_release();
    *(_QWORD *)(a2 + v4) = v6;
    swift_release();
  }
  v7 = (_BYTE *)(*(_QWORD *)(a2 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  result = swift_beginAccess();
  *v7 = v3;
  return result;
}

void (*PBHKConcept.isInMemory.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_21FB23BF0;
}

void sub_21FB23BF0(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    v8 = (_QWORD *)swift_retain();
    v9 = sub_21FB8E248(v8);
    swift_release();
    *(_QWORD *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80))
                + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

uint64_t (*PBHKConcept.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAllergyRecord.allergy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB23E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyRecord.allergy.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB58E98(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyRecord.allergy.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB242F4;
}

void sub_21FB242F4(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKAllergyRecord.allergy.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKAllergyRecord.hasAllergy.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy);
}

Swift::Void __swiftcall PBHKAllergyRecord.clearAllergy()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB58E98(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKAllergyRecord.asserter.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t PBHKAllergyRecord.asserter.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

void (*PBHKAllergyRecord.asserter.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2453C;
}

void sub_21FB2453C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t PBHKAllergyRecord.criticality.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB246C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyRecord.criticality.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB58E98(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyRecord.criticality.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB24B64;
}

void sub_21FB24B64(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKAllergyRecord.criticality.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKAllergyRecord.hasCriticality.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality);
}

Swift::Void __swiftcall PBHKAllergyRecord.clearCriticality()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB58E98(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKAllergyRecord.lastOccurrenceDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
}

uint64_t PBHKAllergyRecord.lastOccurrenceDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
}

void (*PBHKAllergyRecord.lastOccurrenceDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB24DAC;
}

void sub_21FB24DAC(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
}

uint64_t PBHKAllergyRecord.onsetDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
}

uint64_t PBHKAllergyRecord.onsetDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
}

void (*PBHKAllergyRecord.onsetDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB24E88;
}

void sub_21FB24E88(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
}

uint64_t PBHKAllergyRecord.reactions.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord);
}

uint64_t PBHKAllergyRecord.reactions.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
}

void (*PBHKAllergyRecord.reactions.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB24F64;
}

void sub_21FB24F64(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
}

uint64_t PBHKAllergyRecord.recordedDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

void (*PBHKAllergyRecord.recordedDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2502C;
}

void sub_21FB2502C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t PBHKAllergyRecord.status.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB251B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyRecord.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB58E98(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyRecord.status.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB25654;
}

void sub_21FB25654(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKAllergyRecord.status.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKAllergyRecord.hasStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status);
}

Swift::Void __swiftcall PBHKAllergyRecord.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB58E98(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKAllergyRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAllergyReaction.manifestations.getter()
{
  return sub_21FB394C8((void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction);
}

uint64_t PBHKAllergyReaction.manifestations.setter(uint64_t a1)
{
  return sub_21FB39648(a1, type metadata accessor for PBHKAllergyReaction, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5AC8C);
}

void (*PBHKAllergyReaction.manifestations.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  return sub_21FB25898;
}

void sub_21FB25898(uint64_t *a1, char a2)
{
  sub_21FB39790(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5AC8C);
}

uint64_t PBHKAllergyReaction.onsetDate.getter()
{
  return sub_21FB258B8(type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_21FB258B8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21FB25914@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 32);
  *a3 = *(_QWORD *)(v4 + 24);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB2596C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *a1;
  v10 = a1[1];
  v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(a2 + v12) = a7(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(a2 + v12);
  swift_beginAccess();
  *(_QWORD *)(v14 + 24) = v11;
  *(_QWORD *)(v14 + 32) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKAllergyReaction.onsetDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB25A4C(a1, a2, type metadata accessor for PBHKAllergyReaction, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5AC8C);
}

uint64_t sub_21FB25A4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a5(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(v5 + v10);
  swift_beginAccess();
  *(_QWORD *)(v12 + 24) = a1;
  *(_QWORD *)(v12 + 32) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBHKAllergyReaction.onsetDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 32);
  v3[9] = *(_QWORD *)(v5 + 24);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB25B8C;
}

void sub_21FB25B8C(uint64_t *a1, char a2)
{
  sub_21FB25BA0(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5AC8C);
}

void sub_21FB25BA0(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = a4(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 24) = v7;
    *(_QWORD *)(v12 + 32) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = *(int *)(v6 + 96);
      v14 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = a4(v15);
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v16 + 24) = v7;
    *(_QWORD *)(v16 + 32) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKAllergyReaction.severity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB25E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyReaction.severity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyReaction._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5AC8C(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyReaction.severity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB26310;
}

void sub_21FB26310(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKAllergyReaction.severity.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKAllergyReaction.hasSeverity.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKAllergyReaction, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity);
}

Swift::Void __swiftcall PBHKAllergyReaction.clearSeverity()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyReaction._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5AC8C(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKAllergyReaction.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAllergyReaction.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBHKAllergyReaction, &qword_25553D900, &qword_255543B68, a1);
}

uint64_t PBHKConditionRecord.abatementStringValue.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBHKConditionRecord);
}

uint64_t PBHKConditionRecord.abatementStringValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8);
}

void (*PBHKConditionRecord.abatementStringValue.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB26578;
}

void sub_21FB26578(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8);
}

uint64_t PBHKConditionRecord.asserter.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBHKConditionRecord);
}

uint64_t PBHKConditionRecord.asserter.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB16244(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8);
}

void (*PBHKConditionRecord.asserter.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB26630;
}

void sub_21FB26630(uint64_t *a1, char a2)
{
  sub_21FB35584(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8);
}

uint64_t PBHKConditionRecord.bodySites.getter()
{
  type metadata accessor for PBHKConditionRecord(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB26690@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20));
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB266E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB5BDE8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  swift_beginAccess();
  *(_QWORD *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKConditionRecord.bodySites.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v4 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB5BDE8(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  swift_beginAccess();
  *(_QWORD *)(v5 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*PBHKConditionRecord.bodySites.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 48);
  swift_bridgeObjectRetain();
  return sub_21FB268CC;
}

void sub_21FB268CC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = *(int *)(v2 + 88);
      v5 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBHKConditionRecord._StorageClass(0);
      swift_allocObject();
      v6 = (_QWORD *)swift_retain();
      *(_QWORD *)(v5 + v4) = sub_21FB5BDE8(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v7 + 48) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = *(int *)(v2 + 88);
      v9 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBHKConditionRecord._StorageClass(0);
      swift_allocObject();
      v10 = (_QWORD *)swift_retain();
      *(_QWORD *)(v9 + v8) = sub_21FB5BDE8(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v11 + 48) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBHKConditionRecord.category.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB26B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.category.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5BDE8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.category.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB27034;
}

void sub_21FB27034(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKConditionRecord.category.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKConditionRecord.hasCategory.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

Swift::Void __swiftcall PBHKConditionRecord.clearCategory()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5BDE8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.clinicalStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB27324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.clinicalStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5BDE8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.clinicalStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB277C8;
}

void sub_21FB277C8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKConditionRecord.clinicalStatus.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKConditionRecord.hasClinicalStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus);
}

Swift::Void __swiftcall PBHKConditionRecord.clearClinicalStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5BDE8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.condition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB27AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.condition.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5BDE8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.condition.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB27F5C;
}

void sub_21FB27F5C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKConditionRecord.condition.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKConditionRecord.hasCondition.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition);
}

Swift::Void __swiftcall PBHKConditionRecord.clearCondition()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5BDE8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.onsetStringValue.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
}

uint64_t PBHKConditionRecord.onsetStringValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
}

void (*PBHKConditionRecord.onsetStringValue.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB281A4;
}

void sub_21FB281A4(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
}

uint64_t PBHKConditionRecord.recordedDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

void (*PBHKConditionRecord.recordedDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2826C;
}

void sub_21FB2826C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t PBHKConditionRecord.severity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB283F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.severity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5BDE8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.severity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB28894;
}

void sub_21FB28894(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKConditionRecord.severity.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKConditionRecord.hasSeverity.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity);
}

Swift::Void __swiftcall PBHKConditionRecord.clearSeverity()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5BDE8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.verificationStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB28B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.verificationStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5BDE8(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.verificationStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB29028;
}

void sub_21FB29028(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKConditionRecord.verificationStatus.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKConditionRecord.hasVerificationStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus);
}

Swift::Void __swiftcall PBHKConditionRecord.clearVerificationStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5BDE8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKConditionRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKVaccinationRecord.administrationDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC);
}

void (*PBHKVaccinationRecord.administrationDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB29260;
}

void sub_21FB29260(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC);
}

uint64_t PBHKVaccinationRecord.bodySite.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB293DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.bodySite.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5E6DC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.bodySite.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB29880;
}

void sub_21FB29880(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKVaccinationRecord.bodySite.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKVaccinationRecord.hasBodySite.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite);
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearBodySite()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5E6DC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKVaccinationRecord.doseNumber.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
}

uint64_t PBHKVaccinationRecord.doseNumber.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
}

void (*PBHKVaccinationRecord.doseNumber.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB29AC8;
}

void sub_21FB29AC8(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
}

uint64_t PBHKVaccinationRecord.doseQuantity.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
}

uint64_t PBHKVaccinationRecord.doseQuantity.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
}

void (*PBHKVaccinationRecord.doseQuantity.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB29BA4;
}

void sub_21FB29BA4(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
}

uint64_t PBHKVaccinationRecord.expirationDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
}

uint64_t PBHKVaccinationRecord.expirationDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
}

void (*PBHKVaccinationRecord.expirationDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB29C80;
}

void sub_21FB29C80(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
}

uint64_t PBHKVaccinationRecord.notGiven.getter()
{
  return sub_21FB29CB0(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
}

uint64_t sub_21FB29CB0(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  unsigned __int8 *v3;

  v3 = (unsigned __int8 *)(*(_QWORD *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  return *v3;
}

uint64_t PBHKVaccinationRecord.notGiven.setter(char a1)
{
  return sub_21FB29D2C(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
}

uint64_t sub_21FB29D2C(char a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t result;

  v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v5 + v10) = a4(v11);
    swift_release();
  }
  v12 = (_BYTE *)(*(_QWORD *)(v5 + v10) + *a5);
  result = swift_beginAccess();
  *v12 = a1 & 1;
  return result;
}

void (*PBHKVaccinationRecord.notGiven.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_21FB29E74;
}

void sub_21FB29E74(uint64_t *a1, char a2)
{
  sub_21FB2A024(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
}

uint64_t PBHKVaccinationRecord.patientReported.getter()
{
  return sub_21FB29CB0(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
}

uint64_t sub_21FB29EA4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t), _QWORD *a8)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;

  v12 = *a1;
  v13 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v14 = swift_retain();
    *(_QWORD *)(a2 + v13) = a7(v14);
    swift_release();
  }
  v15 = (_BYTE *)(*(_QWORD *)(a2 + v13) + *a8);
  result = swift_beginAccess();
  *v15 = v12;
  return result;
}

uint64_t PBHKVaccinationRecord.patientReported.setter(char a1)
{
  return sub_21FB29D2C(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
}

void (*PBHKVaccinationRecord.patientReported.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_21FB2A008;
}

void sub_21FB2A008(uint64_t *a1, char a2)
{
  sub_21FB2A024(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
}

void sub_21FB2A024(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;

  v9 = *a1;
  v10 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v12 = *(int *)(v9 + 80);
    v13 = *(_QWORD *)(v9 + 72);
    a3(0);
    swift_allocObject();
    v14 = swift_retain();
    *(_QWORD *)(v13 + v12) = a4(v14);
    swift_release();
  }
LABEL_4:
  v15 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 80)) + *a5);
  swift_beginAccess();
  *v15 = v10;
  free((void *)v9);
}

uint64_t PBHKVaccinationRecord.performer.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
}

uint64_t PBHKVaccinationRecord.performer.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
}

void (*PBHKVaccinationRecord.performer.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2A1CC;
}

void sub_21FB2A1CC(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
}

uint64_t PBHKVaccinationRecord.reaction.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
}

uint64_t PBHKVaccinationRecord.reaction.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
}

void (*PBHKVaccinationRecord.reaction.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2A2A8;
}

void sub_21FB2A2A8(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
}

uint64_t PBHKVaccinationRecord.reasons.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKVaccinationRecord.reasons.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
}

void (*PBHKVaccinationRecord.reasons.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB2A384;
}

void sub_21FB2A384(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
}

uint64_t PBHKVaccinationRecord.reasonsNotGiven.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKVaccinationRecord.reasonsNotGiven.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
}

void (*PBHKVaccinationRecord.reasonsNotGiven.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB2A460;
}

void sub_21FB2A460(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
}

uint64_t PBHKVaccinationRecord.route.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2A5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.route.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5E6DC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.route.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB2AA88;
}

void sub_21FB2AA88(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKVaccinationRecord.route.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKVaccinationRecord.hasRoute.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route);
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearRoute()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5E6DC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKVaccinationRecord.status.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2AD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5E6DC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.status.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB2B21C;
}

void sub_21FB2B21C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKVaccinationRecord.status.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKVaccinationRecord.hasStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status);
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5E6DC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKVaccinationRecord.vaccination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2B50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.vaccination.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB5E6DC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.vaccination.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB2B9B0;
}

void sub_21FB2B9B0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKVaccinationRecord.vaccination.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKVaccinationRecord.hasVaccination.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination);
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearVaccination()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB5E6DC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKVaccinationRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationDosage.instruction.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBMedicationDosage);
}

uint64_t sub_21FB2BB5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB6C830(v6, &qword_25553E0F8, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationDosage.instruction.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2BCA8;
}

void sub_21FB2BCA8(uint64_t *a1, char a2)
{
  sub_21FB33578(a1, a2, (void (*)(_QWORD))type metadata accessor for PBMedicationDosage._StorageClass, &qword_25553E0F8, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
}

uint64_t PBMedicationDosage.timingPeriod.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB14B78(type metadata accessor for PBMedicationDosage, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, a1);
}

void (*PBMedicationDosage.timingPeriod.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBMedicationDosage(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_21FB2BE54;
}

void sub_21FB2BE54(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBMedicationDosage.timingPeriod.setter, type metadata accessor for PBDateRange);
}

BOOL PBMedicationDosage.hasTimingPeriod.getter()
{
  return sub_21FAF57D4(&qword_25553E0F8, type metadata accessor for PBDateRange, type metadata accessor for PBMedicationDosage, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
}

Swift::Void __swiftcall PBMedicationDosage.clearTimingPeriod()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6C830(v5, &qword_25553E0F8, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBMedicationDosage.unknownFields.modify())()
{
  return nullsub_1;
}

double PBQuantity.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void PBQuantity.value.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*PBQuantity.value.modify())()
{
  return nullsub_1;
}

uint64_t PBQuantity.unitString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBQuantity.unitString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBQuantity.unitString.modify())()
{
  return nullsub_1;
}

uint64_t PBQuantity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBQuantity, a1);
}

uint64_t PBQuantity.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBQuantity);
}

uint64_t (*PBQuantity.unknownFields.modify())()
{
  type metadata accessor for PBQuantity(0);
  return nullsub_1;
}

uint64_t PBQuantity.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for PBQuantity(0);
  return sub_21FC5AD10();
}

uint64_t PBGeneralMedication.earliestDosageDate.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBGeneralMedication);
}

void (*PBGeneralMedication.earliestDosageDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2C1A0;
}

void sub_21FB2C1A0(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74);
}

uint64_t PBGeneralMedication.medication.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2C31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBGeneralMedication.medication.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB2C61C;
}

void sub_21FB2C61C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBGeneralMedication.medication.setter, type metadata accessor for PBHKConcept);
}

BOOL PBGeneralMedication.hasMedication.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication);
}

Swift::Void __swiftcall PBGeneralMedication.clearMedication()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB61F74(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBGeneralMedication.status.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2C90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBGeneralMedication.status.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB2CC0C;
}

void sub_21FB2CC0C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBGeneralMedication.status.setter, type metadata accessor for PBHKConcept);
}

BOOL PBGeneralMedication.hasStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status);
}

Swift::Void __swiftcall PBGeneralMedication.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB61F74(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBGeneralMedication.dosages.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBGeneralMedication);
}

void (*PBGeneralMedication.dosages.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB2CE30;
}

void sub_21FB2CE30(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
}

uint64_t PBGeneralMedication.localizedPreferredName.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
}

uint64_t PBGeneralMedication.localizedPreferredName.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
}

void (*PBGeneralMedication.localizedPreferredName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2CF0C;
}

void sub_21FB2CF0C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
}

uint64_t PBGeneralMedication.rxNormCodeSet.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBGeneralMedication);
}

void (*PBGeneralMedication.rxNormCodeSet.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB2CFC4;
}

void sub_21FB2CFC4(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
}

uint64_t (*PBGeneralMedication.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_21FB2CFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v8 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBGeneralMedication);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D948 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543C00;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
}

void (*PBHKMedicationRecord.generalMedication.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBGeneralMedication(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D948 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543C00;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBGeneralMedication);
  }
  return sub_21FB2D2F8;
}

void sub_21FB2D2F8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationRecord.generalMedication.setter, type metadata accessor for PBGeneralMedication);
}

BOOL PBHKMedicationRecord.hasGeneralMedication.getter()
{
  return sub_21FAF57D4(&qword_2555416B8, type metadata accessor for PBGeneralMedication, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication);
}

Swift::Void __swiftcall PBHKMedicationRecord.clearGeneralMedication()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB638BC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationRecord.asserter.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

void (*PBHKMedicationRecord.asserter.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2D51C;
}

void sub_21FB2D51C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

void (*PBHKMedicationRecord.assertionDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2D5C0;
}

void sub_21FB2D5C0(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
}

uint64_t PBHKMedicationRecord.asserterType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB2D5F0(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType, a1);
}

uint64_t sub_21FB2D5F0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  char v7;

  v5 = *(_QWORD *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  result = swift_beginAccess();
  v7 = *(_BYTE *)(v5 + 8);
  *(_QWORD *)a3 = *(_QWORD *)v5;
  *(_BYTE *)(a3 + 8) = v7;
  return result;
}

uint64_t sub_21FB2D660@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t result;
  char v7;

  v5 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20)) + *a3;
  result = swift_beginAccess();
  v7 = *(_BYTE *)(v5 + 8);
  *(_QWORD *)a4 = *(_QWORD *)v5;
  *(_BYTE *)(a4 + 8) = v7;
  return result;
}

void (*PBHKMedicationRecord.asserterType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB2D758;
}

void sub_21FB2D758(uint64_t *a1, char a2)
{
  sub_21FB3E480(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
}

uint64_t PBHKMedicationRecord.effectiveStartDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

void (*PBHKMedicationRecord.effectiveStartDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2D810;
}

void sub_21FB2D810(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKMedicationRecord.effectiveEndDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

void (*PBHKMedicationRecord.effectiveEndDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2D8C8;
}

void sub_21FB2D8C8(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKMedicationRecord.notTaken.getter()
{
  return sub_21FB29CB0(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
}

void (*PBHKMedicationRecord.notTaken.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_21FB2D978;
}

void sub_21FB2D978(uint64_t *a1, char a2)
{
  sub_21FB2A024(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
}

uint64_t PBHKMedicationRecord.reasonForUse.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord);
}

void (*PBHKMedicationRecord.reasonForUse.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB2DA30;
}

void sub_21FB2DA30(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
}

uint64_t PBHKMedicationRecord.reasonsNotTaken.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord);
}

void (*PBHKMedicationRecord.reasonsNotTaken.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB2DAE8;
}

void sub_21FB2DAE8(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
}

uint64_t (*PBHKMedicationRecord.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBHKMedicationRecord.HKClinicalReferencedActorType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 7;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FB2DB38@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBHKMedicationRecord.HKClinicalReferencedActorType.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FB2DB40()
{
  sub_21FB9E2BC();
  return sub_21FC5AD7C();
}

void sub_21FB2DB78()
{
  qword_255543848 = (uint64_t)&unk_24E480DA8;
}

uint64_t static PBHKMedicationRecord.HKClinicalReferencedActorType.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D790);
}

uint64_t static PBHKMedicationRecord.HKClinicalReferencedActorType.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D790, &qword_255543848);
}

uint64_t (*static PBHKMedicationRecord.HKClinicalReferencedActorType.allCases.modify())()
{
  if (qword_25553D790 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB2DC30@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D790, &qword_255543848, a1);
}

uint64_t PBHKMedicationDispenseRecord.generalMedication.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v7 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBGeneralMedication);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D948 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543C00;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
}

uint64_t sub_21FB2DDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v8 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBGeneralMedication);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D948 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543C00;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
}

void (*PBHKMedicationDispenseRecord.generalMedication.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBGeneralMedication(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D948 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543C00;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBGeneralMedication);
  }
  return sub_21FB2E0B4;
}

void sub_21FB2E0B4(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationDispenseRecord.generalMedication.setter, type metadata accessor for PBGeneralMedication);
}

BOOL PBHKMedicationDispenseRecord.hasGeneralMedication.getter()
{
  return sub_21FAF57D4(&qword_2555416B8, type metadata accessor for PBGeneralMedication, type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication);
}

Swift::Void __swiftcall PBHKMedicationDispenseRecord.clearGeneralMedication()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB65540(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationDispenseRecord.daySupplyQuantity.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB2E844(&OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity, a1);
}

uint64_t PBHKMedicationDispenseRecord.daySupplyQuantity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB65540(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBQuantity);
  v12 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255544520, type metadata accessor for PBQuantity);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255544520, type metadata accessor for PBQuantity);
  swift_endAccess();
  return swift_release();
}

void (*PBHKMedicationDispenseRecord.daySupplyQuantity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBQuantity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255544520, type metadata accessor for PBQuantity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    v9[2] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255544520, type metadata accessor for PBQuantity);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBQuantity);
  }
  return sub_21FB2E554;
}

void sub_21FB2E554(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationDispenseRecord.daySupplyQuantity.setter, type metadata accessor for PBQuantity);
}

BOOL PBHKMedicationDispenseRecord.hasDaySupplyQuantity.getter()
{
  return sub_21FAF57D4(&qword_255544520, type metadata accessor for PBQuantity, type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity);
}

Swift::Void __swiftcall PBHKMedicationDispenseRecord.clearDaySupplyQuantity()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB65540(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255544520, type metadata accessor for PBQuantity);
  swift_endAccess();
  swift_release();
}

void (*PBHKMedicationDispenseRecord.handOverDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2E764;
}

void sub_21FB2E764(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_21FB65540, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
}

uint64_t PBHKMedicationDispenseRecord.preparationDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
}

void (*PBHKMedicationDispenseRecord.preparationDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2E81C;
}

void sub_21FB2E81C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_21FB65540, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
}

uint64_t PBHKMedicationDispenseRecord.quantityDispensed.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB2E844(&OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, a1);
}

uint64_t sub_21FB2E844@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - v6;
  v8 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20)) + *a1;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v7, &qword_255544520, type metadata accessor for PBQuantity);
  v9 = type metadata accessor for PBQuantity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) != 1)
    return sub_21FA2D23C((uint64_t)v7, (uint64_t)a2, type metadata accessor for PBQuantity);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v7, &qword_255544520, type metadata accessor for PBQuantity);
}

uint64_t sub_21FB2E980@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  v9 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20)) + *a2;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v8, &qword_255544520, type metadata accessor for PBQuantity);
  v10 = type metadata accessor for PBQuantity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) != 1)
    return sub_21FA2D23C((uint64_t)v8, (uint64_t)a3, type metadata accessor for PBQuantity);
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v8, &qword_255544520, type metadata accessor for PBQuantity);
}

uint64_t PBHKMedicationDispenseRecord.quantityDispensed.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB65540(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBQuantity);
  v12 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255544520, type metadata accessor for PBQuantity);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255544520, type metadata accessor for PBQuantity);
  swift_endAccess();
  return swift_release();
}

void (*PBHKMedicationDispenseRecord.quantityDispensed.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBQuantity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255544520, type metadata accessor for PBQuantity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    v9[2] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255544520, type metadata accessor for PBQuantity);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBQuantity);
  }
  return sub_21FB2EDCC;
}

void sub_21FB2EDCC(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationDispenseRecord.quantityDispensed.setter, type metadata accessor for PBQuantity);
}

BOOL PBHKMedicationDispenseRecord.hasQuantityDispensed.getter()
{
  return sub_21FAF57D4(&qword_255544520, type metadata accessor for PBQuantity, type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed);
}

Swift::Void __swiftcall PBHKMedicationDispenseRecord.clearQuantityDispensed()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB65540(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255544520, type metadata accessor for PBQuantity);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKMedicationDispenseRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationOrder.generalMedication.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v7 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBGeneralMedication);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D948 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543C00;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
}

uint64_t sub_21FB2F0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v8 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBGeneralMedication);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D948 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543C00;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
}

void (*PBHKMedicationOrder.generalMedication.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBGeneralMedication(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D948 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543C00;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBGeneralMedication);
  }
  return sub_21FB2F3D4;
}

void sub_21FB2F3D4(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationOrder.generalMedication.setter, type metadata accessor for PBGeneralMedication);
}

BOOL PBHKMedicationOrder.hasGeneralMedication.getter()
{
  return sub_21FAF57D4(&qword_2555416B8, type metadata accessor for PBGeneralMedication, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication);
}

Swift::Void __swiftcall PBHKMedicationOrder.clearGeneralMedication()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB672FC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationOrder.endedDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
}

void (*PBHKMedicationOrder.endedDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2F5F8;
}

void sub_21FB2F5F8(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
}

uint64_t PBHKMedicationOrder.numberOfFills.getter()
{
  return sub_21FB1FC04(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
}

void (*PBHKMedicationOrder.numberOfFills.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB2F6A8;
}

void sub_21FB2F6A8(uint64_t *a1, char a2)
{
  sub_21FB3CEBC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
}

uint64_t PBHKMedicationOrder.prescriber.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
}

void (*PBHKMedicationOrder.prescriber.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB2F760;
}

void sub_21FB2F760(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
}

uint64_t PBHKMedicationOrder.reason.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder);
}

void (*PBHKMedicationOrder.reason.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB2F818;
}

void sub_21FB2F818(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
}

uint64_t PBHKMedicationOrder.reasonEnded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2F99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKMedicationOrder.reasonEnded.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB2FC9C;
}

void sub_21FB2FC9C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationOrder.reasonEnded.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKMedicationOrder.hasReasonEnded.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded);
}

Swift::Void __swiftcall PBHKMedicationOrder.clearReasonEnded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB672FC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationOrder.statusReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB2FF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKMedicationOrder.statusReason.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB672FC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKMedicationOrder.statusReason.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB30430;
}

void sub_21FB30430(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationOrder.statusReason.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKMedicationOrder.hasStatusReason.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason);
}

Swift::Void __swiftcall PBHKMedicationOrder.clearStatusReason()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB672FC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

void (*PBHKMedicationOrder.writtenDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB30640;
}

void sub_21FB30640(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
}

uint64_t (*PBHKMedicationOrder.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKDiagnosticTestResult.bodySite.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB307DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKDiagnosticTestResult.bodySite.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB30ADC;
}

void sub_21FB30ADC(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestResult.bodySite.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKDiagnosticTestResult.hasBodySite.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite);
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearBodySite()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB695E0(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.category.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

void (*PBHKDiagnosticTestResult.category.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB30D00;
}

void sub_21FB30D00(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

uint64_t PBHKDiagnosticTestResult.comments.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
}

void (*PBHKDiagnosticTestResult.comments.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB30DB8;
}

void sub_21FB30DB8(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
}

uint64_t PBHKDiagnosticTestResult.diagnosticTest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB30F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKDiagnosticTestResult.diagnosticTest.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB3123C;
}

void sub_21FB3123C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestResult.diagnosticTest.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKDiagnosticTestResult.hasDiagnosticTest.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest);
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearDiagnosticTest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB695E0(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.effectiveEndDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

void (*PBHKDiagnosticTestResult.effectiveEndDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB31460;
}

void sub_21FB31460(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKDiagnosticTestResult.effectiveStartDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

void (*PBHKDiagnosticTestResult.effectiveStartDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB31518;
}

void sub_21FB31518(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKDiagnosticTestResult.interpretationDeprecated.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB3169C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestResult.interpretationDeprecated.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB695E0(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestResult.interpretationDeprecated.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB31B40;
}

void sub_21FB31B40(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestResult.interpretationDeprecated.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKDiagnosticTestResult.hasInterpretationDeprecated.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated);
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearInterpretationDeprecated()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB695E0(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

void (*PBHKDiagnosticTestResult.issueDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB31D50;
}

void sub_21FB31D50(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKDiagnosticTestResult.method.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB31ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKDiagnosticTestResult.method.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB321D4;
}

void sub_21FB321D4(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestResult.method.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKDiagnosticTestResult.hasMethod.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method);
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearMethod()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB695E0(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.performers.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult);
}

void (*PBHKDiagnosticTestResult.performers.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB323F8;
}

void sub_21FB323F8(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t PBHKDiagnosticTestResult.referenceRanges.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult);
}

void (*PBHKDiagnosticTestResult.referenceRanges.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB324B0;
}

void sub_21FB324B0(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t PBHKDiagnosticTestResult.status.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB32634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestResult.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB695E0(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestResult.status.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB32AD8;
}

void sub_21FB32AD8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestResult.status.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKDiagnosticTestResult.hasStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status);
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB695E0(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.likelyDisplayString.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
}

uint64_t PBHKDiagnosticTestResult.likelyDisplayString.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
}

void (*PBHKDiagnosticTestResult.likelyDisplayString.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB32D20;
}

void sub_21FB32D20(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
}

uint64_t PBHKDiagnosticTestResult.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValueCollection);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D9B8 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543CF0;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB32EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v8 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValueCollection);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D9B8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543CF0;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
}

void (*PBHKDiagnosticTestResult.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKInspectableValueCollection(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D9B8 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543CF0;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValueCollection);
  }
  return sub_21FB331A4;
}

void sub_21FB331A4(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestResult.value.setter, type metadata accessor for PBHKInspectableValueCollection);
}

BOOL PBHKDiagnosticTestResult.hasValue.getter()
{
  return sub_21FAF57D4(&qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value);
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB695E0(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.interpretation.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult);
}

void (*PBHKDiagnosticTestResult.interpretation.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB333C8;
}

void sub_21FB333C8(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
}

uint64_t (*PBHKDiagnosticTestResult.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKReferenceRange.identifier.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_21FB33408(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB6C830(v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBHKReferenceRange.identifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB33554;
}

void sub_21FB33554(uint64_t *a1, char a2)
{
  sub_21FB33578(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKReferenceRange._StorageClass, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
}

void sub_21FB33578(uint64_t *a1, char a2, void (*a3)(_QWORD), unint64_t *a4, uint64_t (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = *a1;
  v11 = *(_QWORD *)(*a1 + 72);
  v12 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v21 = v11;
      v13 = *(int *)(v10 + 96);
      v14 = *(_QWORD *)(v10 + 88);
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = sub_21FB6C830(v15, a4, a5, a6);
      v11 = v21;
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v10 + 88) + *(int *)(v10 + 96));
    swift_beginAccess();
    *(_QWORD *)(v16 + 16) = v11;
    *(_QWORD *)(v16 + 24) = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = *(int *)(v10 + 96);
      v22 = v11;
      v18 = *(_QWORD *)(v10 + 88);
      a3(0);
      swift_allocObject();
      v19 = swift_retain();
      *(_QWORD *)(v18 + v17) = sub_21FB6C830(v19, a4, a5, a6);
      v11 = v22;
      swift_release();
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v10 + 88) + *(int *)(v10 + 96));
    swift_beginAccess();
    *(_QWORD *)(v20 + 16) = v11;
    *(_QWORD *)(v20 + 24) = v12;
  }
  swift_bridgeObjectRelease();
  free((void *)v10);
}

uint64_t PBHKReferenceRange.valueRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValueCollection);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D9B8 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543CF0;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB3387C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v8 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValueCollection);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D9B8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543CF0;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
}

void (*PBHKReferenceRange.valueRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKInspectableValueCollection(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D9B8 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543CF0;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValueCollection);
  }
  return sub_21FB33B7C;
}

void sub_21FB33B7C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKReferenceRange.valueRange.setter, type metadata accessor for PBHKInspectableValueCollection);
}

BOOL PBHKReferenceRange.hasValueRange.getter()
{
  return sub_21FAF57D4(&qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, type metadata accessor for PBHKReferenceRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
}

Swift::Void __swiftcall PBHKReferenceRange.clearValueRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6C830(v5, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKReferenceRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKRatioValue.numerator.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKRatioValue.denominator.modify())()
{
  return nullsub_1;
}

uint64_t PBHKRatioValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBHKRatioValue, a1);
}

uint64_t PBHKRatioValue.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBHKRatioValue);
}

uint64_t (*PBHKRatioValue.unknownFields.modify())()
{
  type metadata accessor for PBHKRatioValue(0);
  return nullsub_1;
}

uint64_t PBHKInspectableValueCollection.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB35194(type metadata accessor for PBHKInspectableValueCollection, a1);
}

void (*PBHKInspectableValueCollection.type.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB33E1C;
}

void sub_21FB33E1C(uint64_t *a1, char a2)
{
  sub_21FB3533C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8);
}

uint64_t PBHKInspectableValueCollection.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_21FB33F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValueCollection.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKInspectableValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D9C8 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543D10;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_21FB34298;
}

void sub_21FB34298(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValueCollection.value.setter, type metadata accessor for PBHKInspectableValue);
}

BOOL PBHKInspectableValueCollection.hasValue.getter()
{
  return sub_21FAF57D4(&qword_255540580, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value);
}

Swift::Void __swiftcall PBHKInspectableValueCollection.clearValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6DBA8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValueCollection.min.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_21FB34588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValueCollection.min.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKInspectableValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D9C8 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543D10;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_21FB34888;
}

void sub_21FB34888(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValueCollection.min.setter, type metadata accessor for PBHKInspectableValue);
}

BOOL PBHKInspectableValueCollection.hasMin.getter()
{
  return sub_21FAF57D4(&qword_255540580, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min);
}

Swift::Void __swiftcall PBHKInspectableValueCollection.clearMin()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6DBA8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValueCollection.max.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_21FB34B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValueCollection.max.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKInspectableValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D9C8 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543D10;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_21FB34E78;
}

void sub_21FB34E78(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValueCollection.max.setter, type metadata accessor for PBHKInspectableValue);
}

BOOL PBHKInspectableValueCollection.hasMax.getter()
{
  return sub_21FAF57D4(&qword_255540580, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max);
}

Swift::Void __swiftcall PBHKInspectableValueCollection.clearMax()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6DBA8(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValueCollection.inspectableValues.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection);
}

void (*PBHKInspectableValueCollection.inspectableValues.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3509C;
}

void sub_21FB3509C(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
}

uint64_t PBHKInspectableValueCollection.unitString.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

void (*PBHKInspectableValueCollection.unitString.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB35154;
}

void sub_21FB35154(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t (*PBHKInspectableValueCollection.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKInspectableValue.valueType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB35194(type metadata accessor for PBHKInspectableValue, a1);
}

uint64_t sub_21FB35194@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(_QWORD *)(v2 + *(int *)(a1(0) + 20));
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 24);
  *(_QWORD *)a2 = *(_QWORD *)(v4 + 16);
  *(_BYTE *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_21FB351F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v10 = *a1;
  v11 = *((_BYTE *)a1 + 8);
  v12 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(a2 + v12) = a7(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(a2 + v12);
  result = swift_beginAccess();
  *(_QWORD *)(v14 + 16) = v10;
  *(_BYTE *)(v14 + 24) = v11;
  return result;
}

void (*PBHKInspectableValue.valueType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB35328;
}

void sub_21FB35328(uint64_t *a1, char a2)
{
  sub_21FB3533C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

void sub_21FB3533C(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + 72);
  v9 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v11 = *(int *)(v7 + 84);
    v12 = *(_QWORD *)(v7 + 88);
    a3(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(v12 + v11) = a4(v13);
    swift_release();
  }
LABEL_4:
  v14 = *(_QWORD *)(*(_QWORD *)(v7 + 88) + *(int *)(v7 + 84));
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = v8;
  *(_BYTE *)(v14 + 24) = v9;
  free((void *)v7);
}

uint64_t PBHKInspectableValue.stringValue.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_21FB35430(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *a1;
  v10 = a1[1];
  v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(a2 + v12) = a7(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(a2 + v12);
  swift_beginAccess();
  *(_QWORD *)(v14 + 32) = v11;
  *(_QWORD *)(v14 + 40) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBHKInspectableValue.stringValue.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB35570;
}

void sub_21FB35570(uint64_t *a1, char a2)
{
  sub_21FB35584(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

void sub_21FB35584(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = a4(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 32) = v7;
    *(_QWORD *)(v12 + 40) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = *(int *)(v6 + 96);
      v14 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = a4(v15);
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKInspectableValue.codedQuantityRawValue.getter()
{
  return sub_21FB356F4(type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_21FB356F4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21FB35750@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 56);
  *a3 = *(_QWORD *)(v4 + 48);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t PBHKInspectableValue.codedQuantityRawValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB16488(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

void (*PBHKInspectableValue.codedQuantityRawValue.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB35840;
}

void sub_21FB35840(uint64_t *a1, char a2)
{
  sub_21FB4026C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

uint64_t PBHKInspectableValue.ratioValue.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB40B44(&qword_2555405A0, type metadata accessor for PBHKRatioValue, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue, a1);
}

void (*PBHKInspectableValue.ratioValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555405A0, type metadata accessor for PBHKRatioValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKRatioValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKRatioValue);
  }
  return sub_21FB359E0;
}

void sub_21FB359E0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValue.ratioValue.setter, type metadata accessor for PBHKRatioValue);
}

BOOL PBHKInspectableValue.hasRatioValue.getter()
{
  return sub_21FAF57D4(&qword_2555405A0, type metadata accessor for PBHKRatioValue, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue);
}

Swift::Void __swiftcall PBHKInspectableValue.clearRatioValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555405A0, type metadata accessor for PBHKRatioValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6F994(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.medicalDateString.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
}

void (*PBHKInspectableValue.medicalDateString.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB35C04;
}

void sub_21FB35C04(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
}

uint64_t PBHKInspectableValue.medicalDateIntervalString.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB14B78(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString, a1);
}

void (*PBHKInspectableValue.medicalDateIntervalString.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_21FB35DA8;
}

void sub_21FB35DA8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValue.medicalDateIntervalString.setter, type metadata accessor for PBDateRange);
}

BOOL PBHKInspectableValue.hasMedicalDateIntervalString.getter()
{
  return sub_21FAF57D4(&qword_25553E0F8, type metadata accessor for PBDateRange, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString);
}

Swift::Void __swiftcall PBHKInspectableValue.clearMedicalDateIntervalString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6F994(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.dateFromDateComponents.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
}

void (*PBHKInspectableValue.dateFromDateComponents.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB35FCC;
}

void sub_21FB35FCC(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
}

uint64_t PBHKInspectableValue.medicalCodingsDisplayStrings.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValue.medicalCodingsDisplayStrings.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB36084;
}

void sub_21FB36084(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
}

uint64_t PBHKInspectableValue.dataAbsentReasonCodingsDisplayStrings.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValue.dataAbsentReasonCodingsDisplayStrings.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3613C;
}

void sub_21FB3613C(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
}

uint64_t PBHKInspectableValue.codedValueCollectionValues.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValue.codedValueCollectionValues.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB361F4;
}

void sub_21FB361F4(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
}

uint64_t PBHKInspectableValue.concept.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB36378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKInspectableValue.concept.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB36678;
}

void sub_21FB36678(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValue.concept.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKInspectableValue.hasConcept.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept);
}

Swift::Void __swiftcall PBHKInspectableValue.clearConcept()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6F994(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.dataAbsentReasonConcept.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB36968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKInspectableValue.dataAbsentReasonConcept.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB36C68;
}

void sub_21FB36C68(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValue.dataAbsentReasonConcept.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKInspectableValue.hasDataAbsentReasonConcept.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept);
}

Swift::Void __swiftcall PBHKInspectableValue.clearDataAbsentReasonConcept()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6F994(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.unitString.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

void (*PBHKInspectableValue.unitString.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB36E8C;
}

void sub_21FB36E8C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t PBHKInspectableValue.codedQuantity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  v7 = type metadata accessor for PBHKCodedQuantity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKCodedQuantity);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v5, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
}

void (*PBHKInspectableValue.codedQuantity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKCodedQuantity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    *((_DWORD *)v9 + 8) = 0;
    v9[5] = 0;
    v9[6] = 0xE000000000000000;
    v9[7] = 0;
    v9[8] = 0xE000000000000000;
    v9[9] = 0;
    v9[10] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKCodedQuantity);
  }
  return sub_21FB3716C;
}

void sub_21FB3716C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKInspectableValue.codedQuantity.setter, type metadata accessor for PBHKCodedQuantity);
}

BOOL PBHKInspectableValue.hasCodedQuantity.getter()
{
  return sub_21FAF57D4(&qword_2555405A8, type metadata accessor for PBHKCodedQuantity, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity);
}

Swift::Void __swiftcall PBHKInspectableValue.clearCodedQuantity()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB6F994(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKInspectableValue.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKCodedValue.concept.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB37474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

void (*PBHKCodedValue.concept.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB37774;
}

void sub_21FB37774(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKCodedValue.concept.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKCodedValue.hasConcept.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKCodedValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept);
}

Swift::Void __swiftcall PBHKCodedValue.clearConcept()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB72C34(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKCodedValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_21FB37A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D9C8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543D10;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKCodedValue.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKInspectableValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D9C8 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543D10;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_21FB37D64;
}

void sub_21FB37D64(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKCodedValue.value.setter, type metadata accessor for PBHKInspectableValue);
}

BOOL PBHKCodedValue.hasValue.getter()
{
  return sub_21FAF57D4(&qword_255540580, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKCodedValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value);
}

Swift::Void __swiftcall PBHKCodedValue.clearValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB72C34(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKCodedValue.referenceRanges.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKCodedValue);
}

void (*PBHKCodedValue.referenceRanges.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB37F88;
}

void sub_21FB37F88(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKCodedValue._StorageClass, sub_21FB72C34, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t (*PBHKCodedValue.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.localizedValue.modify())()
{
  return nullsub_1;
}

float PBHKCodedQuantity.doubleValue.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void PBHKCodedQuantity.doubleValue.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*PBHKCodedQuantity.doubleValue.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.comparatorDisplayString.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.unitDisplayString.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.codedQuantityDisplayString.modify())()
{
  return nullsub_1;
}

uint64_t PBHKCodedQuantity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBHKCodedQuantity(0) + 40);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBHKCodedQuantity.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBHKCodedQuantity(0) + 40);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBHKCodedQuantity.unknownFields.modify())()
{
  type metadata accessor for PBHKCodedQuantity(0);
  return nullsub_1;
}

uint64_t PBHKDiagnosticTestReport.diagnosticTest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB3824C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestReport.diagnosticTest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB748F4(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestReport.diagnosticTest.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB386F0;
}

void sub_21FB386F0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestReport.diagnosticTest.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKDiagnosticTestReport.hasDiagnosticTest.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest);
}

Swift::Void __swiftcall PBHKDiagnosticTestReport.clearDiagnosticTest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB748F4(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestReport.effectiveEndDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKDiagnosticTestReport.effectiveEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

void (*PBHKDiagnosticTestReport.effectiveEndDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB38938;
}

void sub_21FB38938(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKDiagnosticTestReport.effectiveStartDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKDiagnosticTestReport.effectiveStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

void (*PBHKDiagnosticTestReport.effectiveStartDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB38A14;
}

void sub_21FB38A14(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKDiagnosticTestReport.issueDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

void (*PBHKDiagnosticTestReport.issueDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB38ADC;
}

void sub_21FB38ADC(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKDiagnosticTestReport.panelName.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
}

uint64_t PBHKDiagnosticTestReport.panelName.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
}

void (*PBHKDiagnosticTestReport.panelName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB38BB8;
}

void sub_21FB38BB8(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
}

uint64_t PBHKDiagnosticTestReport.results.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t PBHKDiagnosticTestReport.results.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
}

void (*PBHKDiagnosticTestReport.results.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB38C94;
}

void sub_21FB38C94(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
}

uint64_t PBHKDiagnosticTestReport.status.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB38E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestReport.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB748F4(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestReport.status.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB392BC;
}

void sub_21FB392BC(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKDiagnosticTestReport.status.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKDiagnosticTestReport.hasStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status);
}

Swift::Void __swiftcall PBHKDiagnosticTestReport.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB748F4(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKDiagnosticTestReport.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKAccountOwner.birthDate.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKAccountOwner.name.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAccountOwner.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBHKAccountOwner, a1);
}

uint64_t PBHKAccountOwner.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBHKAccountOwner);
}

uint64_t (*PBHKAccountOwner.unknownFields.modify())()
{
  type metadata accessor for PBHKAccountOwner(0);
  return nullsub_1;
}

uint64_t PBHKProcedureRecord.bodySites.getter()
{
  return sub_21FB394C8((void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord);
}

uint64_t sub_21FB394C8(void (*a1)(_QWORD))
{
  a1(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB39518@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  *a3 = *(_QWORD *)(v4 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB39570(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = *a1;
  v11 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v12 = swift_retain();
    *(_QWORD *)(a2 + v11) = a7(v12);
    swift_release();
  }
  v13 = *(_QWORD *)(a2 + v11);
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKProcedureRecord.bodySites.setter(uint64_t a1)
{
  return sub_21FB39648(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC);
}

uint64_t sub_21FB39648(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v4 + v8) = a4(v9);
    swift_release();
  }
  v10 = *(_QWORD *)(v4 + v8);
  swift_beginAccess();
  *(_QWORD *)(v10 + 16) = a1;
  return swift_bridgeObjectRelease();
}

void (*PBHKProcedureRecord.bodySites.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  return sub_21FB3977C;
}

void sub_21FB3977C(uint64_t *a1, char a2)
{
  sub_21FB39790(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC);
}

void sub_21FB39790(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = *(int *)(v6 + 88);
      v9 = *(_QWORD *)(v6 + 80);
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + v8) = a4(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v6 + 80) + *(int *)(v6 + 88));
    swift_beginAccess();
    *(_QWORD *)(v11 + 16) = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = *(int *)(v6 + 88);
      v13 = *(_QWORD *)(v6 + 80);
      a3(0);
      swift_allocObject();
      v14 = swift_retain();
      *(_QWORD *)(v13 + v12) = a4(v14);
      swift_release();
    }
    v15 = *(_QWORD *)(*(_QWORD *)(v6 + 80) + *(int *)(v6 + 88));
    swift_beginAccess();
    *(_QWORD *)(v15 + 16) = v7;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKProcedureRecord.category.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB39A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.category.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB768CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.category.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB39EF8;
}

void sub_21FB39EF8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKProcedureRecord.category.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKProcedureRecord.hasCategory.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

Swift::Void __swiftcall PBHKProcedureRecord.clearCategory()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB768CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.complications.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.complications.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
}

void (*PBHKProcedureRecord.complications.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3A140;
}

void sub_21FB3A140(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
}

uint64_t PBHKProcedureRecord.executionEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
}

void (*PBHKProcedureRecord.executionEndDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB3A208;
}

void sub_21FB3A208(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
}

uint64_t PBHKProcedureRecord.executionStartDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
}

uint64_t PBHKProcedureRecord.executionStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
}

void (*PBHKProcedureRecord.executionStartDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB3A2E4;
}

void sub_21FB3A2E4(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
}

uint64_t PBHKProcedureRecord.followUps.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.followUps.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
}

void (*PBHKProcedureRecord.followUps.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3A3C0;
}

void sub_21FB3A3C0(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
}

uint64_t PBHKProcedureRecord.notPerformed.getter()
{
  return sub_21FB29CB0(type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
}

uint64_t PBHKProcedureRecord.notPerformed.setter(char a1)
{
  return sub_21FB29D2C(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
}

void (*PBHKProcedureRecord.notPerformed.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_21FB3A494;
}

void sub_21FB3A494(uint64_t *a1, char a2)
{
  sub_21FB2A024(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
}

uint64_t PBHKProcedureRecord.outcome.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB3A618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.outcome.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB768CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.outcome.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB3AABC;
}

void sub_21FB3AABC(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKProcedureRecord.outcome.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKProcedureRecord.hasOutcome.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome);
}

Swift::Void __swiftcall PBHKProcedureRecord.clearOutcome()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB768CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.performers.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.performers.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

void (*PBHKProcedureRecord.performers.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3AD04;
}

void sub_21FB3AD04(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t PBHKProcedureRecord.procedure.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB3AE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.procedure.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB768CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.procedure.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB3B32C;
}

void sub_21FB3B32C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKProcedureRecord.procedure.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKProcedureRecord.hasProcedure.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure);
}

Swift::Void __swiftcall PBHKProcedureRecord.clearProcedure()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB768CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.reason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB3B61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.reason.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB768CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.reason.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB3BAC0;
}

void sub_21FB3BAC0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKProcedureRecord.reason.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKProcedureRecord.hasReason.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
}

Swift::Void __swiftcall PBHKProcedureRecord.clearReason()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB768CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.reasonsNotPerformed.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.reasonsNotPerformed.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
}

void (*PBHKProcedureRecord.reasonsNotPerformed.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3BD08;
}

void sub_21FB3BD08(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
}

uint64_t PBHKProcedureRecord.status.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t sub_21FB3BE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553D8E0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_255543B28;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB768CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.status.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553D8E0 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_255543B28;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_21FB3C330;
}

void sub_21FB3C330(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKProcedureRecord.status.setter, type metadata accessor for PBHKConcept);
}

BOOL PBHKProcedureRecord.hasStatus.getter()
{
  return sub_21FAF57D4(&qword_255540590, type metadata accessor for PBHKConcept, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status);
}

Swift::Void __swiftcall PBHKProcedureRecord.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB768CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKProcedureRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.cycles.getter()
{
  return sub_21FB394C8((void (*)(_QWORD))type metadata accessor for PBCycleTracking);
}

uint64_t PBCycleTracking.cycles.setter(uint64_t a1)
{
  return sub_21FB39648(a1, type metadata accessor for PBCycleTracking, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC);
}

void (*PBCycleTracking.cycles.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  return sub_21FB3C574;
}

void sub_21FB3C574(uint64_t *a1, char a2)
{
  sub_21FB39790(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC);
}

uint64_t PBCycleTracking.typicalCycleLengthDays.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 24);
}

uint64_t sub_21FB3C5D0(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB794CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 24) = v3;
  return result;
}

uint64_t PBCycleTracking.typicalCycleLengthDays.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB794CC(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 24) = a1;
  return result;
}

void (*PBCycleTracking.typicalCycleLengthDays.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 24);
  return sub_21FB3C794;
}

void sub_21FB3C794(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_21FB794CC(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 24);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t PBCycleTracking.typicalCycleLengthRange.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB3CFCC(&qword_2555445E0, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange, a1);
}

uint64_t PBCycleTracking.typicalCycleLengthRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB794CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBCycleTracking.Range);
  v12 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCycleTracking.Range.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB1C850((void (*)(_QWORD))type metadata accessor for PBCycleTracking.Range, a1);
}

void (*PBCycleTracking.typicalCycleLengthRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBCycleTracking.Range(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBCycleTracking.Range);
  }
  return sub_21FB3CBA0;
}

void sub_21FB3CBA0(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBCycleTracking.typicalCycleLengthRange.setter, type metadata accessor for PBCycleTracking.Range);
}

BOOL PBCycleTracking.hasTypicalCycleLengthRange.getter()
{
  return sub_21FAF57D4(&qword_2555445E0, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange);
}

Swift::Void __swiftcall PBCycleTracking.clearTypicalCycleLengthRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB794CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  swift_release();
}

uint64_t PBCycleTracking.typicalPeriodLengthDays.getter()
{
  return sub_21FB1FC04(type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
}

uint64_t sub_21FB3CD3C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t), _QWORD *a8)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t result;

  v12 = *a1;
  v13 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v14 = swift_retain();
    *(_QWORD *)(a2 + v13) = a7(v14);
    swift_release();
  }
  v15 = (_DWORD *)(*(_QWORD *)(a2 + v13) + *a8);
  result = swift_beginAccess();
  *v15 = v12;
  return result;
}

uint64_t PBCycleTracking.typicalPeriodLengthDays.setter(int a1)
{
  return sub_21FB168C4(a1, type metadata accessor for PBCycleTracking, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
}

void (*PBCycleTracking.typicalPeriodLengthDays.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB3CEA0;
}

void sub_21FB3CEA0(uint64_t *a1, char a2)
{
  sub_21FB3CEBC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
}

void sub_21FB3CEBC(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;

  v9 = *a1;
  v10 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v12 = *(int *)(v9 + 84);
    v13 = *(_QWORD *)(v9 + 72);
    a3(0);
    swift_allocObject();
    v14 = swift_retain();
    *(_QWORD *)(v13 + v12) = a4(v14);
    swift_release();
  }
LABEL_4:
  v15 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 72) + *(int *)(v9 + 84)) + *a5);
  swift_beginAccess();
  *v15 = v10;
  free((void *)v9);
}

uint64_t PBCycleTracking.typicalPeriodLengthRange.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB3CFCC(&qword_2555445E0, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, a1);
}

uint64_t sub_21FB3CFCC@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - v12;
  v14 = *(_QWORD *)(v5 + *(int *)(a3(0) + 20)) + *a4;
  swift_beginAccess();
  sub_21FA44968(v14, (uint64_t)v13, a1, a2);
  v15 = a2(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) != 1)
    return sub_21FA2D23C((uint64_t)v13, (uint64_t)a5, a2);
  *a5 = 0;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v13, a1, a2);
}

uint64_t sub_21FB3D0F8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t (*a4)(_QWORD)@<X5>, _QWORD *a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - v13;
  v15 = *(_QWORD *)(a1 + *(int *)(a4(0) + 20)) + *a5;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, a2, a3);
  v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) != 1)
    return sub_21FA2D23C((uint64_t)v14, (uint64_t)a6, a3);
  *a6 = 0;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v14, a2, a3);
}

uint64_t PBCycleTracking.typicalPeriodLengthRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB794CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBCycleTracking.Range);
  v12 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  return swift_release();
}

void (*PBCycleTracking.typicalPeriodLengthRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBCycleTracking.Range(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBCycleTracking.Range);
  }
  return sub_21FB3D52C;
}

void sub_21FB3D52C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBCycleTracking.typicalPeriodLengthRange.setter, type metadata accessor for PBCycleTracking.Range);
}

BOOL PBCycleTracking.hasTypicalPeriodLengthRange.getter()
{
  return sub_21FAF57D4(&qword_2555445E0, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange);
}

Swift::Void __swiftcall PBCycleTracking.clearTypicalPeriodLengthRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB794CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  swift_release();
}

uint64_t PBCycleTracking.lastMenstrualPeriodDate.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
}

uint64_t PBCycleTracking.lastMenstrualPeriodDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FB14888(a1, a2, type metadata accessor for PBCycleTracking, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
}

void (*PBCycleTracking.lastMenstrualPeriodDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB3D774;
}

void sub_21FB3D774(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
}

uint64_t (*PBCycleTracking.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_21FB3D7AC()
{
  sub_21FB9E278();
  return sub_21FC5AD7C();
}

void PBCycleTracking.OvulationTestResult.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t PBCycleTracking.OvulationTestResult.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 5;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBCycleTracking.OvulationTestResult.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_21FB3D814@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBCycleTracking.OvulationTestResult.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FB3D81C()
{
  sub_21FB9E234();
  return sub_21FC5AD7C();
}

unint64_t PBCycleTracking.CervicalMucusQuality.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 6;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FB3D86C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBCycleTracking.CervicalMucusQuality.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FB3D874()
{
  sub_21FB9E1F0();
  return sub_21FC5AD7C();
}

uint64_t PBCycleTracking.Range.min.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t PBCycleTracking.Range.min.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBCycleTracking.Range.min.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Range.max.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t PBCycleTracking.Range.max.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*PBCycleTracking.Range.max.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Range.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBCycleTracking.Range, a1);
}

uint64_t PBCycleTracking.Range.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBCycleTracking.Range);
}

uint64_t (*PBCycleTracking.Range.unknownFields.modify())()
{
  type metadata accessor for PBCycleTracking.Range(0);
  return nullsub_1;
}

uint64_t (*PBCycleTracking.SexualActivity.hadSex.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCycleTracking.SexualActivity.protectionUsed.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.SexualActivity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBCycleTracking.SexualActivity, a1);
}

uint64_t PBCycleTracking.SexualActivity.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t (*PBCycleTracking.SexualActivity.unknownFields.modify())()
{
  type metadata accessor for PBCycleTracking.SexualActivity(0);
  return nullsub_1;
}

uint64_t PBCycleTracking.SexualActivity.init()@<X0>(_WORD *a1@<X8>)
{
  return sub_21FB40800((void (*)(_QWORD))type metadata accessor for PBCycleTracking.SexualActivity, a1);
}

uint64_t PBCycleTracking.Event.date.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBCycleTracking.Event);
}

uint64_t PBCycleTracking.Event.date.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FAFBAB8(a1, a2, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00);
}

void (*PBCycleTracking.Event.date.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB3DA3C;
}

void sub_21FB3DA3C(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00);
}

uint64_t PBCycleTracking.Event.flow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 32);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FB3DAA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB7BE00(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 32) = v3;
  *(_BYTE *)(v7 + 40) = v4;
  return result;
}

uint64_t PBCycleTracking.Event.flow.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FB7BE00(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 32) = v2;
  *(_BYTE *)(v6 + 40) = v3;
  return result;
}

void (*PBCycleTracking.Event.flow.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB3DC84;
}

void sub_21FB3DC84(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_21FB7BE00(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v10 + 32) = v4;
  *(_BYTE *)(v10 + 40) = v5;
  free((void *)v3);
}

uint64_t PBCycleTracking.Event.sexualActivity.getter@<X0>(_WORD *a1@<X8>)
{
  return sub_21FB403F4(&qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity, a1);
}

uint64_t PBCycleTracking.Event.sexualActivity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB7BE00(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBCycleTracking.SexualActivity);
  v12 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  v13 = v11
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_endAccess();
  return swift_release();
}

void (*PBCycleTracking.Event.sexualActivity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _WORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBCycleTracking.SexualActivity);
  }
  return sub_21FB3E088;
}

void sub_21FB3E088(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBCycleTracking.Event.sexualActivity.setter, type metadata accessor for PBCycleTracking.SexualActivity);
}

BOOL PBCycleTracking.Event.hasSexualActivity.getter()
{
  return sub_21FAF57D4(&qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity);
}

Swift::Void __swiftcall PBCycleTracking.Event.clearSexualActivity()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB7BE00(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_endAccess();
  swift_release();
}

uint64_t PBCycleTracking.Event.cervicalMucusQuality.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB2D5F0(type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality, a1);
}

uint64_t sub_21FB3E224(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t), _QWORD *a8)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v12 = *a1;
  v13 = *((_BYTE *)a1 + 8);
  v14 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v15 = swift_retain();
    *(_QWORD *)(a2 + v14) = a7(v15);
    swift_release();
  }
  v16 = *(_QWORD *)(a2 + v14) + *a8;
  result = swift_beginAccess();
  *(_QWORD *)v16 = v12;
  *(_BYTE *)(v16 + 8) = v13;
  return result;
}

uint64_t PBCycleTracking.Event.cervicalMucusQuality.setter(uint64_t *a1)
{
  return sub_21FB3E310(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
}

uint64_t sub_21FB3E310(uint64_t *a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v9 = *a1;
  v10 = *((_BYTE *)a1 + 8);
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v12 = swift_retain();
    *(_QWORD *)(v5 + v11) = a4(v12);
    swift_release();
  }
  v13 = *(_QWORD *)(v5 + v11) + *a5;
  result = swift_beginAccess();
  *(_QWORD *)v13 = v9;
  *(_BYTE *)(v13 + 8) = v10;
  return result;
}

void (*PBCycleTracking.Event.cervicalMucusQuality.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB3E464;
}

void sub_21FB3E464(uint64_t *a1, char a2)
{
  sub_21FB3E480(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
}

void sub_21FB3E480(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 72);
  v11 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 88);
    a3(0);
    swift_allocObject();
    v15 = swift_retain();
    *(_QWORD *)(v14 + v13) = a4(v15);
    swift_release();
  }
LABEL_4:
  v16 = *(_QWORD *)(*(_QWORD *)(v9 + 88) + *(int *)(v9 + 84)) + *a5;
  swift_beginAccess();
  *(_QWORD *)v16 = v10;
  *(_BYTE *)(v16 + 8) = v11;
  free((void *)v9);
}

float PBCycleTracking.Event.basalBodyTemperature.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_21FB3E5C8(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB7BE00(v5);
    swift_release();
  }
  v6 = (_DWORD *)(*(_QWORD *)(a2 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  result = swift_beginAccess();
  *v6 = v3;
  return result;
}

uint64_t PBCycleTracking.Event.basalBodyTemperature.setter(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  float *v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FB7BE00(v4);
    swift_release();
  }
  v5 = (float *)(*(_QWORD *)(v1 + v3)
               + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  result = swift_beginAccess();
  *v5 = a1;
  return result;
}

void (*PBCycleTracking.Event.basalBodyTemperature.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB3E7B0;
}

void sub_21FB3E7B0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_21FB7BE00(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84))
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t PBCycleTracking.Event.hadSpotting.getter()
{
  return sub_21FB29CB0(type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
}

uint64_t PBCycleTracking.Event.hadSpotting.setter(char a1)
{
  return sub_21FB29D2C(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
}

void (*PBCycleTracking.Event.hadSpotting.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5;
  return sub_21FB3E948;
}

void sub_21FB3E948(uint64_t *a1, char a2)
{
  sub_21FB2A024(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
}

uint64_t PBCycleTracking.Event.symptoms.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event);
}

uint64_t PBCycleTracking.Event.symptoms.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
}

void (*PBCycleTracking.Event.symptoms.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3EA24;
}

void sub_21FB3EA24(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
}

uint64_t PBCycleTracking.Event.enumSymptoms.getter()
{
  return sub_21FB14AF4((void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event);
}

uint64_t PBCycleTracking.Event.enumSymptoms.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
}

void (*PBCycleTracking.Event.enumSymptoms.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3EB00;
}

void sub_21FB3EB00(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
}

uint64_t (*PBCycleTracking.Event.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Event.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBCycleTracking.Event, &qword_25553DA68, &qword_255543E88, a1);
}

uint64_t (*PBCycleTracking.Cycle.start.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCycleTracking.Cycle.end.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBCycleTracking.Cycle.events.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*PBCycleTracking.Cycle.events.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCycleTracking.Cycle.cycleLength.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.periodLength.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 44);
}

uint64_t PBCycleTracking.Cycle.periodLength.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 44) = result;
  return result;
}

uint64_t (*PBCycleTracking.Cycle.periodLength.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBCycleTracking.Cycle(0) + 36);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBCycleTracking.Cycle.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBCycleTracking.Cycle(0) + 36);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBCycleTracking.Cycle.unknownFields.modify())()
{
  type metadata accessor for PBCycleTracking.Cycle(0);
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = MEMORY[0x24BEE4AF8];
  a1[5] = 0;
  type metadata accessor for PBCycleTracking.Cycle(0);
  return sub_21FC5AD10();
}

void sub_21FB3ECE8()
{
  qword_255543850 = (uint64_t)&unk_24E480E38;
}

uint64_t static PBCycleTracking.Flow.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D798);
}

uint64_t static PBCycleTracking.Flow.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D798, &qword_255543850);
}

uint64_t (*static PBCycleTracking.Flow.allCases.modify())()
{
  if (qword_25553D798 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB3EDA0@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D798, &qword_255543850, a1);
}

void sub_21FB3EDBC()
{
  qword_255543858 = (uint64_t)&unk_24E480EB8;
}

uint64_t static PBCycleTracking.OvulationTestResult.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D7A0);
}

uint64_t static PBCycleTracking.OvulationTestResult.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D7A0, &qword_255543858);
}

uint64_t (*static PBCycleTracking.OvulationTestResult.allCases.modify())()
{
  if (qword_25553D7A0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21FB3EE74@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D7A0, &qword_255543858, a1);
}

void sub_21FB3EE90()
{
  qword_255543860 = (uint64_t)&unk_24E480F28;
}

uint64_t static PBCycleTracking.CervicalMucusQuality.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D7A8);
}

uint64_t static PBCycleTracking.CervicalMucusQuality.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D7A8, &qword_255543860);
}

uint64_t (*static PBCycleTracking.CervicalMucusQuality.allCases.modify())()
{
  if (qword_25553D7A8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB3EF48@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D7A8, &qword_255543860, a1);
}

uint64_t (*PBECGs.ecgs.modify())()
{
  return nullsub_1;
}

uint64_t PBECGs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBECGs, a1);
}

uint64_t PBECGs.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBECGs);
}

uint64_t (*PBECGs.unknownFields.modify())()
{
  type metadata accessor for PBECGs(0);
  return nullsub_1;
}

uint64_t (*PBECGMeta.time.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.sampleRate.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.device.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.classification.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.lead.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.unit.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.symptoms.modify())()
{
  return nullsub_1;
}

float PBECGMeta.averageHeartRate.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 96);
}

void PBECGMeta.averageHeartRate.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 96) = a1;
}

uint64_t (*PBECGMeta.averageHeartRate.modify())()
{
  return nullsub_1;
}

void PBECGMeta.hkClassification.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 112);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 104);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBECGMeta.hkClassification.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 104) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 112) = v2;
  return result;
}

uint64_t (*PBECGMeta.hkClassification.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeta.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB3F088(type metadata accessor for PBECGMeta, a1);
}

uint64_t sub_21FB3F088@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 52);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PBECGMeta.unknownFields.setter(uint64_t a1)
{
  return sub_21FB3F0E0(a1, type metadata accessor for PBECGMeta);
}

uint64_t sub_21FB3F0E0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 52);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*PBECGMeta.unknownFields.modify())()
{
  type metadata accessor for PBECGMeta(0);
  return nullsub_1;
}

uint64_t (*PBECGMeasurement.time.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeasurement.sampleRate.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeasurement.device.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.classification.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBECGMeasurement.classification.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*PBECGMeasurement.classification.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.lead.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBECGMeasurement.lead.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*PBECGMeasurement.lead.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.unit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBECGMeasurement.unit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*PBECGMeasurement.unit.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.symptoms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBECGMeasurement.symptoms.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*PBECGMeasurement.symptoms.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBECGMeasurement.values.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*PBECGMeasurement.values.modify())()
{
  return nullsub_1;
}

float PBECGMeasurement.averageHeartRate.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 104);
}

void PBECGMeasurement.averageHeartRate.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 104) = a1;
}

uint64_t (*PBECGMeasurement.averageHeartRate.modify())()
{
  return nullsub_1;
}

void PBECGMeasurement.hkClassification.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 112);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBECGMeasurement.hkClassification.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 112) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 120) = v2;
  return result;
}

uint64_t (*PBECGMeasurement.hkClassification.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBECGMeasurement.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBECGMeasurement.unknownFields.modify())()
{
  type metadata accessor for PBECGMeasurement(0);
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB14B78(type metadata accessor for PBActivitySummarySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t PBActivitySummarySeries.dateRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBActivitySummarySeries._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB7F1E0(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBActivitySummarySeries.dateRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((_BYTE *)v9 + 40) = 1;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_21FB3F78C;
}

void sub_21FB3F78C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBActivitySummarySeries.dateRange.setter, type metadata accessor for PBDateRange);
}

BOOL PBActivitySummarySeries.hasDateRange.getter()
{
  return sub_21FAF57D4(&qword_25553E0F8, type metadata accessor for PBDateRange, type metadata accessor for PBActivitySummarySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange);
}

Swift::Void __swiftcall PBActivitySummarySeries.clearDateRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBActivitySummarySeries._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB7F1E0(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBActivitySummarySeries.activitySummaries.setter(uint64_t a1)
{
  return sub_21FB1497C(a1, type metadata accessor for PBActivitySummarySeries, (void (*)(_QWORD))type metadata accessor for PBActivitySummarySeries._StorageClass, sub_21FB7F1E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
}

void (*PBActivitySummarySeries.activitySummaries.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_21FB3F9C0;
}

void sub_21FB3F9C0(uint64_t *a1, char a2)
{
  sub_21FB1C654(a1, a2, (void (*)(_QWORD))type metadata accessor for PBActivitySummarySeries._StorageClass, sub_21FB7F1E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
}

uint64_t (*PBActivitySummarySeries.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.activeCalories.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t PBActivitySummarySeries.ActivitySummary.activeCalories.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.activeCalories.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.activeCalorieGoal.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.moveMinutes.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t PBActivitySummarySeries.ActivitySummary.moveMinutes.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.moveMinutes.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.moveMinuteGoal.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.standHours.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.standHoursGoal.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB4816C(type metadata accessor for PBActivitySummarySeries.ActivitySummary, a1);
}

uint64_t PBActivitySummarySeries.ActivitySummary.unknownFields.setter(uint64_t a1)
{
  return sub_21FB481C4(a1, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.unknownFields.modify())()
{
  type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  return sub_21FC5AD10();
}

uint64_t PBPatientMeta.hasWatch_p.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_21FB3FB4C(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB808CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 16) = v3;
  return result;
}

void (*PBPatientMeta.hasWatch_p.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 16);
  return sub_21FB3FC68;
}

void sub_21FB3FC68(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_21FB808CC(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 16);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t PBPatientMeta.chrMeta.getter()
{
  type metadata accessor for PBPatientMeta(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB3FD88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20));
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB3FDE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB808CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  swift_beginAccess();
  *(_QWORD *)(v6 + 24) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBPatientMeta.chrMeta.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRetain();
  return sub_21FB3FF14;
}

void sub_21FB3FF14(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = *(int *)(v2 + 88);
      v5 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBPatientMeta._StorageClass(0);
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + v4) = sub_21FB808CC(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v7 + 24) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = *(int *)(v2 + 88);
      v9 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBPatientMeta._StorageClass(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + v8) = sub_21FB808CC(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v11 + 24) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBPatientMeta.shareTimezone.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBPatientMeta);
}

void (*PBPatientMeta.shareTimezone.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB400F8;
}

void sub_21FB400F8(uint64_t *a1, char a2)
{
  sub_21FB35584(a1, a2, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC);
}

uint64_t PBPatientMeta.sex.getter()
{
  return sub_21FB356F4(type metadata accessor for PBPatientMeta);
}

uint64_t sub_21FB40118(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *a1;
  v10 = a1[1];
  v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(a2 + v12) = a7(v13);
    swift_release();
  }
  v14 = *(_QWORD *)(a2 + v12);
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = v11;
  *(_QWORD *)(v14 + 56) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBPatientMeta.sex.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB40258;
}

void sub_21FB40258(uint64_t *a1, char a2)
{
  sub_21FB4026C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC);
}

void sub_21FB4026C(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = a4(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 48) = v7;
    *(_QWORD *)(v12 + 56) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = *(int *)(v6 + 96);
      v14 = *(_QWORD *)(v6 + 88);
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = a4(v15);
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(_QWORD *)(v16 + 48) = v7;
    *(_QWORD *)(v16 + 56) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBPatientMeta.heartRateMeds.getter@<X0>(_WORD *a1@<X8>)
{
  return sub_21FB403F4(&qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds, a1);
}

uint64_t sub_21FB403F4@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X3>, _WORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - v12;
  v14 = *(_QWORD *)(v5 + *(int *)(a3(0) + 20)) + *a4;
  swift_beginAccess();
  sub_21FA44968(v14, (uint64_t)v13, a1, a2);
  v15 = a2(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) != 1)
    return sub_21FA2D23C((uint64_t)v13, (uint64_t)a5, a2);
  *a5 = 0;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v13, a1, a2);
}

uint64_t sub_21FB40520@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t (*a4)(_QWORD)@<X5>, _QWORD *a5@<X6>, _WORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - v13;
  v15 = *(_QWORD *)(a1 + *(int *)(a4(0) + 20)) + *a5;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, a2, a3);
  v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) != 1)
    return sub_21FA2D23C((uint64_t)v14, (uint64_t)a6, a3);
  *a6 = 0;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v14, a2, a3);
}

uint64_t PBPatientMeta.heartRateMeds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FB808CC(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  v12 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  swift_endAccess();
  return swift_release();
}

uint64_t PBPatientMeta.HeartRateMeds.init()@<X0>(_WORD *a1@<X8>)
{
  return sub_21FB40800((void (*)(_QWORD))type metadata accessor for PBPatientMeta.HeartRateMeds, a1);
}

uint64_t sub_21FB40800@<X0>(void (*a1)(_QWORD)@<X0>, _WORD *a2@<X8>)
{
  *a2 = 0;
  a1(0);
  return sub_21FC5AD10();
}

void (*PBPatientMeta.heartRateMeds.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _WORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPatientMeta.HeartRateMeds);
  }
  return sub_21FB40998;
}

void sub_21FB40998(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBPatientMeta.heartRateMeds.setter, type metadata accessor for PBPatientMeta.HeartRateMeds);
}

BOOL PBPatientMeta.hasHeartRateMeds.getter()
{
  return sub_21FAF57D4(&qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds);
}

Swift::Void __swiftcall PBPatientMeta.clearHeartRateMeds()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB808CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  swift_endAccess();
  swift_release();
}

uint64_t PBPatientMeta.name.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB40B44(&qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name, a1);
}

uint64_t sub_21FB40B44@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - v12;
  v14 = *(_QWORD *)(v5 + *(int *)(a3(0) + 20)) + *a4;
  swift_beginAccess();
  sub_21FA44968(v14, (uint64_t)v13, a1, a2);
  v15 = a2(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) != 1)
    return sub_21FA2D23C((uint64_t)v13, (uint64_t)a5, a2);
  *a5 = 0;
  a5[1] = 0xE000000000000000;
  a5[2] = 0;
  a5[3] = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v13, a1, a2);
}

uint64_t sub_21FB40C78@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t (*a4)(_QWORD)@<X5>, _QWORD *a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - v13;
  v15 = *(_QWORD *)(a1 + *(int *)(a4(0) + 20)) + *a5;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, a2, a3);
  v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) != 1)
    return sub_21FA2D23C((uint64_t)v14, (uint64_t)a6, a3);
  *a6 = 0;
  a6[1] = 0xE000000000000000;
  a6[2] = 0;
  a6[3] = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v14, a2, a3);
}

void (*PBPatientMeta.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBPatientMeta.HumanName(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPatientMeta.HumanName);
  }
  return sub_21FB40F18;
}

void sub_21FB40F18(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBPatientMeta.name.setter, type metadata accessor for PBPatientMeta.HumanName);
}

BOOL PBPatientMeta.hasName.getter()
{
  return sub_21FAF57D4(&qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name);
}

Swift::Void __swiftcall PBPatientMeta.clearName()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB808CC(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBPatientMeta.HumanName(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  swift_endAccess();
  swift_release();
}

uint64_t PBPatientMeta.dob.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
}

void (*PBPatientMeta.dob.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB4113C;
}

void sub_21FB4113C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
}

uint64_t (*PBPatientMeta.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBPatientMeta.CHRMeta.name.modify())()
{
  return nullsub_1;
}

uint64_t (*PBPatientMeta.CHRMeta.lastSyncTime.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.CHRMeta.gatewayID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPatientMeta.CHRMeta.gatewayID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PBPatientMeta.CHRMeta.gatewayID.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.CHRMeta.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FAF6504(type metadata accessor for PBPatientMeta.CHRMeta, a1);
}

uint64_t PBPatientMeta.CHRMeta.unknownFields.setter(uint64_t a1)
{
  return sub_21FAF655C(a1, type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t (*PBPatientMeta.CHRMeta.unknownFields.modify())()
{
  type metadata accessor for PBPatientMeta.CHRMeta(0);
  return nullsub_1;
}

uint64_t PBPatientMeta.HeartRateMeds.calciumChannelBlockers.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PBPatientMeta.HeartRateMeds.calciumChannelBlockers.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBPatientMeta.HeartRateMeds.calciumChannelBlockers.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.HeartRateMeds.betaBlockers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t PBPatientMeta.HeartRateMeds.betaBlockers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*PBPatientMeta.HeartRateMeds.betaBlockers.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.HeartRateMeds.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBPatientMeta.HeartRateMeds, a1);
}

uint64_t PBPatientMeta.HeartRateMeds.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t (*PBPatientMeta.HeartRateMeds.unknownFields.modify())()
{
  type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  return nullsub_1;
}

uint64_t (*PBPatientMeta.HumanName.firstName.modify())()
{
  return nullsub_1;
}

uint64_t (*PBPatientMeta.HumanName.lastName.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.HumanName.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBPatientMeta.HumanName, a1);
}

uint64_t PBPatientMeta.HumanName.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t (*PBPatientMeta.HumanName.unknownFields.modify())()
{
  type metadata accessor for PBPatientMeta.HumanName(0);
  return nullsub_1;
}

uint64_t (*PBActiveMedications.uuids.modify())()
{
  return nullsub_1;
}

uint64_t PBActiveMedications.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBActiveMedications, a1);
}

uint64_t PBActiveMedications.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBActiveMedications);
}

uint64_t (*PBActiveMedications.unknownFields.modify())()
{
  type metadata accessor for PBActiveMedications(0);
  return nullsub_1;
}

uint64_t PBMedicationTracking.medicationSemanticIdentifier.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_21FB4137C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.medicationSemanticIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.medicationSemanticIdentifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB41564;
}

void sub_21FB41564(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 16) = v3;
    *(_QWORD *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v3;
    *(_QWORD *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyPreferredName.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_21FB416CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyPreferredName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyPreferredName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB418B4;
}

void sub_21FB418B4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 32) = v3;
    *(_QWORD *)(v12 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyBrandName.getter()
{
  return sub_21FB356F4(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_21FB41A1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyBrandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 48) = a1;
  *(_QWORD *)(v7 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyBrandName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB41C04;
}

void sub_21FB41C04(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 48) = v3;
    *(_QWORD *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 48) = v3;
    *(_QWORD *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyGenericName.getter()
{
  return sub_21FB46304(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_21FB41D6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyGenericName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyGenericName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 72);
  v3[9] = *(_QWORD *)(v5 + 64);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB41F54;
}

void sub_21FB41F54(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 64) = v3;
    *(_QWORD *)(v8 + 72) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 64) = v3;
    *(_QWORD *)(v12 + 72) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.specificRxNormCode.getter()
{
  return sub_21FB46654(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_21FB420BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 80) = v4;
  *(_QWORD *)(v7 + 88) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.specificRxNormCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 80) = a1;
  *(_QWORD *)(v7 + 88) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.specificRxNormCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 88);
  v3[9] = *(_QWORD *)(v5 + 80);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB422A4;
}

void sub_21FB422A4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 80) = v3;
    *(_QWORD *)(v8 + 88) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 80) = v3;
    *(_QWORD *)(v12 + 88) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.freeTextMedicationForm.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 104);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 96);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FB42458(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 96) = v3;
  *(_BYTE *)(v7 + 104) = v4;
  return result;
}

uint64_t PBMedicationTracking.freeTextMedicationForm.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FB83948(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 96) = v2;
  *(_BYTE *)(v6 + 104) = v3;
  return result;
}

void (*PBMedicationTracking.freeTextMedicationForm.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 104);
  v3[9] = *(_QWORD *)(v5 + 96);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB42634;
}

void sub_21FB42634(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_21FB83948(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v10 + 96) = v4;
  *(_BYTE *)(v10 + 104) = v5;
  free((void *)v3);
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrength.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB42768@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 120);
  *a2 = *(_QWORD *)(v3 + 112);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB427C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 112) = v4;
  *(_QWORD *)(v7 + 120) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrength.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 112) = a1;
  *(_QWORD *)(v7 + 120) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.freeTextQuantifiedStrength.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 120);
  v3[9] = *(_QWORD *)(v5 + 112);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB429A8;
}

void sub_21FB429A8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 112) = v3;
    *(_QWORD *)(v8 + 120) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 112) = v3;
    *(_QWORD *)(v12 + 120) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyBasicDoseForms.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 128);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB42B5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 136);
  *a2 = *(_QWORD *)(v3 + 128);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB42BB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 128) = v4;
  *(_QWORD *)(v7 + 136) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyBasicDoseForms.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 128) = a1;
  *(_QWORD *)(v7 + 136) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyBasicDoseForms.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 136);
  v3[9] = *(_QWORD *)(v5 + 128);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB42D9C;
}

void sub_21FB42D9C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 128) = v3;
    *(_QWORD *)(v8 + 136) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 128) = v3;
    *(_QWORD *)(v12 + 136) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitSingular.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 144);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB42F50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 152);
  *a2 = *(_QWORD *)(v3 + 144);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB42FA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 144) = v4;
  *(_QWORD *)(v7 + 152) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitSingular.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 144) = a1;
  *(_QWORD *)(v7 + 152) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyLoggingUnitSingular.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 152);
  v3[9] = *(_QWORD *)(v5 + 144);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB43190;
}

void sub_21FB43190(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 144) = v3;
    *(_QWORD *)(v8 + 152) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 144) = v3;
    *(_QWORD *)(v12 + 152) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitPlural.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 160);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB43344@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 168);
  *a2 = *(_QWORD *)(v3 + 160);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB4339C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 160) = v4;
  *(_QWORD *)(v7 + 168) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitPlural.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 160) = a1;
  *(_QWORD *)(v7 + 168) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyLoggingUnitPlural.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 168);
  v3[9] = *(_QWORD *)(v5 + 160);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB43584;
}

void sub_21FB43584(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 160) = v3;
    *(_QWORD *)(v8 + 168) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 160) = v3;
    *(_QWORD *)(v12 + 168) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.unlocalizedQuantifiedUnitStrengthPreferredDisplayString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 176);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB43738@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 184);
  *a2 = *(_QWORD *)(v3 + 176);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB43790(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 176) = v4;
  *(_QWORD *)(v7 + 184) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.unlocalizedQuantifiedUnitStrengthPreferredDisplayString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 176) = a1;
  *(_QWORD *)(v7 + 184) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.unlocalizedQuantifiedUnitStrengthPreferredDisplayString.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 184);
  v3[9] = *(_QWORD *)(v5 + 176);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB43978;
}

void sub_21FB43978(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 176) = v3;
    *(_QWORD *)(v8 + 184) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 176) = v3;
    *(_QWORD *)(v12 + 184) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.dateAdded.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 192);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB43B2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 200);
  *a2 = *(_QWORD *)(v3 + 192);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB43B84(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 192) = v4;
  *(_QWORD *)(v7 + 200) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.dateAdded.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 192) = a1;
  *(_QWORD *)(v7 + 200) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.dateAdded.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 200);
  v3[9] = *(_QWORD *)(v5 + 192);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB43D6C;
}

void sub_21FB43D6C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 192) = v3;
    *(_QWORD *)(v8 + 200) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 192) = v3;
    *(_QWORD *)(v12 + 200) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t sub_21FB43EC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 216);
  *a2 = *(_QWORD *)(v3 + 208);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB43F20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 208) = v4;
  *(_QWORD *)(v7 + 216) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.lastDosageEventDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 208) = a1;
  *(_QWORD *)(v7 + 216) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.lastDosageEventDate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 216);
  v3[9] = *(_QWORD *)(v5 + 208);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB44108;
}

void sub_21FB44108(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 208) = v3;
    *(_QWORD *)(v8 + 216) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 208) = v3;
    *(_QWORD *)(v12 + 216) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.genericRxNormCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 224);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB442BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 232);
  *a2 = *(_QWORD *)(v3 + 224);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB44314(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 224) = v4;
  *(_QWORD *)(v7 + 232) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.genericRxNormCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 224) = a1;
  *(_QWORD *)(v7 + 232) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.genericRxNormCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 232);
  v3[9] = *(_QWORD *)(v5 + 224);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB444FC;
}

void sub_21FB444FC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 224) = v3;
    *(_QWORD *)(v8 + 232) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 224) = v3;
    *(_QWORD *)(v12 + 232) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 240);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB446B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 248);
  *a2 = *(_QWORD *)(v3 + 240);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB44708(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 240) = v4;
  *(_QWORD *)(v7 + 248) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.uuid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 240) = a1;
  *(_QWORD *)(v7 + 248) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.uuid.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 248);
  v3[9] = *(_QWORD *)(v5 + 240);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB448F0;
}

void sub_21FB448F0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 240) = v3;
    *(_QWORD *)(v8 + 248) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 240) = v3;
    *(_QWORD *)(v12 + 248) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.freeTextMedicationLoggingUnit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 264);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 256);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FB44AB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 256) = v3;
  *(_BYTE *)(v7 + 264) = v4;
  return result;
}

uint64_t PBMedicationTracking.freeTextMedicationLoggingUnit.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FB83948(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 256) = v2;
  *(_BYTE *)(v6 + 264) = v3;
  return result;
}

void (*PBMedicationTracking.freeTextMedicationLoggingUnit.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 264);
  v3[9] = *(_QWORD *)(v5 + 256);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB44C90;
}

void sub_21FB44C90(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_21FB83948(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v10 + 256) = v4;
  *(_BYTE *)(v10 + 264) = v5;
  free((void *)v3);
}

uint64_t PBMedicationTracking.freeTextMedicationName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 272);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB44DC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 280);
  *a2 = *(_QWORD *)(v3 + 272);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB44E1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 272) = v4;
  *(_QWORD *)(v7 + 280) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.freeTextMedicationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 272) = a1;
  *(_QWORD *)(v7 + 280) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.freeTextMedicationName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 280);
  v3[9] = *(_QWORD *)(v5 + 272);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB45004;
}

void sub_21FB45004(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 272) = v3;
    *(_QWORD *)(v8 + 280) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 272) = v3;
    *(_QWORD *)(v12 + 280) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.grouperID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 288);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB451B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 296);
  *a2 = *(_QWORD *)(v3 + 288);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB45210(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 288) = v4;
  *(_QWORD *)(v7 + 296) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.grouperID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 288) = a1;
  *(_QWORD *)(v7 + 296) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.grouperID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 296);
  v3[9] = *(_QWORD *)(v5 + 288);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB453F8;
}

void sub_21FB453F8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 288) = v3;
    *(_QWORD *)(v8 + 296) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 288) = v3;
    *(_QWORD *)(v12 + 296) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrengthUnit.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 304);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB455AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 312);
  *a2 = *(_QWORD *)(v3 + 304);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB45604(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 304) = v4;
  *(_QWORD *)(v7 + 312) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrengthUnit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FB83948(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 304) = a1;
  *(_QWORD *)(v7 + 312) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.freeTextQuantifiedStrengthUnit.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 312);
  v3[9] = *(_QWORD *)(v5 + 304);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB457EC;
}

void sub_21FB457EC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB83948(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 304) = v3;
    *(_QWORD *)(v8 + 312) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB83948(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 304) = v3;
    *(_QWORD *)(v12 + 312) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t (*PBMedicationTracking.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBMedicationTracking.MedicationFreeTextForm.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0x12;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FB45980@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBMedicationTracking.MedicationFreeTextForm.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FB45988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PBCycleTracking.OvulationTestResult.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_21FB459AC()
{
  sub_21FB9E1AC();
  return sub_21FC5AD7C();
}

unint64_t PBMedicationTracking.MedicationFreeTextLoggingUnit.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0xD;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FB459FC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBMedicationTracking.MedicationFreeTextLoggingUnit.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FB45A04()
{
  sub_21FB9E168();
  return sub_21FC5AD7C();
}

uint64_t PBMedicationTracking.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBMedicationTracking, &qword_25553DB08, &qword_255544010, a1);
}

void sub_21FB45A60()
{
  qword_255543868 = (uint64_t)&unk_24E480FA8;
}

uint64_t static PBMedicationTracking.MedicationFreeTextForm.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D7B0);
}

uint64_t static PBMedicationTracking.MedicationFreeTextForm.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D7B0, &qword_255543868);
}

uint64_t (*static PBMedicationTracking.MedicationFreeTextForm.allCases.modify())()
{
  if (qword_25553D7B0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB45B18@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D7B0, &qword_255543868, a1);
}

void sub_21FB45B34()
{
  qword_255543870 = (uint64_t)&unk_24E4810E8;
}

uint64_t static PBMedicationTracking.MedicationFreeTextLoggingUnit.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D7B8);
}

uint64_t static PBMedicationTracking.MedicationFreeTextLoggingUnit.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D7B8, &qword_255543870);
}

uint64_t (*static PBMedicationTracking.MedicationFreeTextLoggingUnit.allCases.modify())()
{
  if (qword_25553D7B8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB45BEC@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D7B8, &qword_255543870, a1);
}

uint64_t (*PBMedicationTrackings.medicationTracking.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackings.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBMedicationTrackings, a1);
}

uint64_t PBMedicationTrackings.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBMedicationTrackings);
}

uint64_t (*PBMedicationTrackings.unknownFields.modify())()
{
  type metadata accessor for PBMedicationTrackings(0);
  return nullsub_1;
}

void PBMedicationTrackingDoseEvent.logOrigin.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBMedicationTrackingDoseEvent.logOrigin.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.logOrigin.modify())()
{
  return nullsub_1;
}

void PBMedicationTrackingDoseEvent.status.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBMedicationTrackingDoseEvent.status.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 24) = v2;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.status.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingDoseEvent.scheduleItemIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingDoseEvent.medicationSemanticIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.scheduledDoseQuantity.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 64);
}

uint64_t PBMedicationTrackingDoseEvent.scheduledDoseQuantity.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.scheduledDoseQuantity.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.doseQuantity.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 68);
}

uint64_t PBMedicationTrackingDoseEvent.doseQuantity.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 68) = result;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.doseQuantity.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingDoseEvent.scheduledDate.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.logDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBMedicationTrackingDoseEvent.logDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.logDate.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBMedicationTrackingDoseEvent(0) + 48);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBMedicationTrackingDoseEvent.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBMedicationTrackingDoseEvent(0) + 48);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBMedicationTrackingDoseEvent.unknownFields.modify())()
{
  type metadata accessor for PBMedicationTrackingDoseEvent(0);
  return nullsub_1;
}

uint64_t sub_21FB45E60()
{
  sub_21FB8F08C();
  return sub_21FC5AD7C();
}

uint64_t sub_21FB45E98()
{
  sub_21FB8F048();
  return sub_21FC5AD7C();
}

uint64_t PBMedicationTrackingDoseEvent.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0xE000000000000000;
  type metadata accessor for PBMedicationTrackingDoseEvent(0);
  return sub_21FC5AD10();
}

void sub_21FB45F2C()
{
  qword_255543878 = (uint64_t)&unk_24E4811D8;
}

uint64_t static PBMedicationTrackingDoseEvent.LogOrigin.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D7C0);
}

uint64_t static PBMedicationTrackingDoseEvent.LogOrigin.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D7C0, &qword_255543878);
}

uint64_t (*static PBMedicationTrackingDoseEvent.LogOrigin.allCases.modify())()
{
  if (qword_25553D7C0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB45FE4@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D7C0, &qword_255543878, a1);
}

void sub_21FB46000()
{
  qword_255543880 = (uint64_t)&unk_24E481228;
}

uint64_t static PBMedicationTrackingDoseEvent.Status.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D7C8);
}

uint64_t static PBMedicationTrackingDoseEvent.Status.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D7C8, &qword_255543880);
}

uint64_t (*static PBMedicationTrackingDoseEvent.Status.allCases.modify())()
{
  if (qword_25553D7C8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB460B8@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D7C8, &qword_255543880, a1);
}

uint64_t (*PBMedicationTrackingDoseEvents.medicationTrackingDoseEvent.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvents.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBMedicationTrackingDoseEvents, a1);
}

uint64_t PBMedicationTrackingDoseEvents.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBMedicationTrackingDoseEvents);
}

uint64_t (*PBMedicationTrackingDoseEvents.unknownFields.modify())()
{
  type metadata accessor for PBMedicationTrackingDoseEvents(0);
  return nullsub_1;
}

uint64_t PBMedicationTrackingSchedule.scheduleIdentifier.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBMedicationTrackingSchedule);
}

void (*PBMedicationTrackingSchedule.scheduleIdentifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB461AC;
}

void sub_21FB461AC(uint64_t *a1, char a2)
{
  sub_21FAFBC0C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t PBMedicationTrackingSchedule.medicationSemanticIdentifier.getter()
{
  return sub_21FAF7E74(type metadata accessor for PBMedicationTrackingSchedule);
}

void (*PBMedicationTrackingSchedule.medicationSemanticIdentifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB46248;
}

void sub_21FB46248(uint64_t *a1, char a2)
{
  sub_21FB35584(a1, a2, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t PBMedicationTrackingSchedule.createdUtcOffset.getter()
{
  return sub_21FB356F4(type metadata accessor for PBMedicationTrackingSchedule);
}

void (*PBMedicationTrackingSchedule.createdUtcOffset.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB462E4;
}

void sub_21FB462E4(uint64_t *a1, char a2)
{
  sub_21FB4026C(a1, a2, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t PBMedicationTrackingSchedule.startDateTime.getter()
{
  return sub_21FB46304(type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_21FB46304(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21FB46360@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 72);
  *a3 = *(_QWORD *)(v4 + 64);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB463B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB87320(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.startDateTime.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 72);
  v3[9] = *(_QWORD *)(v5 + 64);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB464EC;
}

void sub_21FB464EC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB87320(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 64) = v3;
    *(_QWORD *)(v8 + 72) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB87320(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 64) = v3;
    *(_QWORD *)(v12 + 72) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.endDateTime.getter()
{
  return sub_21FB46654(type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_21FB46654(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21FB466B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 88);
  *a3 = *(_QWORD *)(v4 + 80);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB46708(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB87320(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 80) = v4;
  *(_QWORD *)(v7 + 88) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.endDateTime.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 88);
  v3[9] = *(_QWORD *)(v5 + 80);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB4683C;
}

void sub_21FB4683C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB87320(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 80) = v3;
    *(_QWORD *)(v8 + 88) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB87320(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 80) = v3;
    *(_QWORD *)(v12 + 88) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.notes.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 96);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FB469F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 104);
  *a2 = *(_QWORD *)(v3 + 96);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB46A48(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB87320(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 96) = v4;
  *(_QWORD *)(v7 + 104) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.notes.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 104);
  v3[9] = *(_QWORD *)(v5 + 96);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB46B7C;
}

void sub_21FB46B7C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FB87320(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 96) = v3;
    *(_QWORD *)(v8 + 104) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FB87320(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 96) = v3;
    *(_QWORD *)(v12 + 104) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.timeIntervals.getter()
{
  type metadata accessor for PBMedicationTrackingSchedule(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB46D24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FB46D7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB87320(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  swift_beginAccess();
  *(_QWORD *)(v6 + 112) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.timeIntervals.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v5 + 112);
  swift_bridgeObjectRetain();
  return sub_21FB46EB0;
}

void sub_21FB46EB0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = *(int *)(v2 + 88);
      v5 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + v4) = sub_21FB87320(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v7 + 112) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = *(int *)(v2 + 88);
      v9 = *(_QWORD *)(v2 + 80);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + v8) = sub_21FB87320(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(_QWORD *)(v11 + 112) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.frequencyType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 128);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 120);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FB47064(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FB87320(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 120) = v3;
  *(_BYTE *)(v7 + 128) = v4;
  return result;
}

void (*PBMedicationTrackingSchedule.frequencyType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 128);
  v3[9] = *(_QWORD *)(v5 + 120);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FB47190;
}

void sub_21FB47190(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_21FB87320(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v10 + 120) = v4;
  *(_BYTE *)(v10 + 128) = v5;
  free((void *)v3);
}

uint64_t PBMedicationTrackingSchedule.unrecognized.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 129);
}

uint64_t sub_21FB472B4(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FB87320(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 129) = v3;
  return result;
}

void (*PBMedicationTrackingSchedule.unrecognized.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 129);
  return sub_21FB473D0;
}

void sub_21FB473D0(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_21FB87320(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 129);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t PBMedicationTrackingSchedule.compatibilityVersionRange.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FB3CFCC(&qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, type metadata accessor for PBMedicationTrackingSchedule, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange, a1);
}

void (*PBMedicationTrackingSchedule.compatibilityVersionRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  }
  return sub_21FB47628;
}

void sub_21FB47628(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBMedicationTrackingSchedule.compatibilityVersionRange.setter, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

BOOL PBMedicationTrackingSchedule.hasCompatibilityVersionRange.getter()
{
  return sub_21FAF57D4(&qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, type metadata accessor for PBMedicationTrackingSchedule, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange);
}

Swift::Void __swiftcall PBMedicationTrackingSchedule.clearCompatibilityVersionRange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB87320(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBMedicationTrackingSchedule.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_21FB477C8()
{
  sub_21FB9E124();
  return sub_21FC5AD7C();
}

void sub_21FB47800()
{
  qword_255543888 = (uint64_t)&unk_24E4812B8;
}

uint64_t static PBMedicationTrackingSchedule.HKFrequencyType.allCases.getter()
{
  return sub_21FAFC660(&qword_25553D7D0);
}

uint64_t static PBMedicationTrackingSchedule.HKFrequencyType.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553D7D0, &qword_255543888);
}

uint64_t (*static PBMedicationTrackingSchedule.HKFrequencyType.allCases.modify())()
{
  if (qword_25553D7D0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FB478B8@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553D7D0, &qword_255543888, a1);
}

uint64_t (*PBMedicationTrackingScheduleCompatibilityVersionRange.minimumCompatibilityVersion.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingScheduleCompatibilityVersionRange.originCompatibilityVersion.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, a1);
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t (*PBMedicationTrackingScheduleCompatibilityVersionRange.unknownFields.modify())()
{
  type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingSchedules.medicationTrackingSchedule.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingSchedules.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA399A8(type metadata accessor for PBMedicationTrackingSchedules, a1);
}

uint64_t PBMedicationTrackingSchedules.unknownFields.setter(uint64_t a1)
{
  return sub_21FA39A00(a1, type metadata accessor for PBMedicationTrackingSchedules);
}

uint64_t (*PBMedicationTrackingSchedules.unknownFields.modify())()
{
  type metadata accessor for PBMedicationTrackingSchedules(0);
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.daysOfWeek.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  v7 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  *(_DWORD *)((char *)a1 + 3) = 0;
  *a1 = 0;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v5, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.init()@<X0>(_DWORD *a1@<X8>)
{
  type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  *a1 = 0;
  *(_DWORD *)((char *)a1 + 3) = 0;
  return sub_21FC5AD10();
}

void (*PBHKMedicationScheduleIntervalData.daysOfWeek.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _DWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_DWORD *)((char *)v9 + 3) = 0;
    *v9 = 0;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  }
  return sub_21FB47C58;
}

void sub_21FB47C58(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBHKMedicationScheduleIntervalData.daysOfWeek.setter, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

BOOL PBHKMedicationScheduleIntervalData.hasDaysOfWeek.getter()
{
  return sub_21FAF57D4(&qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek);
}

Swift::Void __swiftcall PBHKMedicationScheduleIntervalData.clearDaysOfWeek()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FB89538(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v3, v8, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIndex.getter()
{
  return sub_21FB1FC04(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
}

void (*PBHKMedicationScheduleIntervalData.cycleIndex.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB47E74;
}

void sub_21FB47E74(uint64_t *a1, char a2)
{
  sub_21FB3CEBC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIntervalDays.getter()
{
  return sub_21FB1FC04(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
}

void (*PBHKMedicationScheduleIntervalData.cycleIntervalDays.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB47F24;
}

void sub_21FB47F24(uint64_t *a1, char a2)
{
  sub_21FB3CEBC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
}

uint64_t PBHKMedicationScheduleIntervalData.dose.getter()
{
  return sub_21FB1FC04(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
}

void (*PBHKMedicationScheduleIntervalData.dose.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = (_DWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_21FB47FD4;
}

void sub_21FB47FD4(uint64_t *a1, char a2)
{
  sub_21FB3CEBC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
}

uint64_t PBHKMedicationScheduleIntervalData.startTime.getter()
{
  return sub_21FB15CD8(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
}

void (*PBHKMedicationScheduleIntervalData.startTime.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FB4808C;
}

void sub_21FB4808C(uint64_t *a1, char a2)
{
  sub_21FB1B2BC(a1, a2, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
}

uint64_t (*PBHKMedicationScheduleIntervalData.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.sunday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.monday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.tuesday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.tuesday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.tuesday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.wednesday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.thursday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.thursday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.thursday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.friday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.saturday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.saturday.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = result;
  return result;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.saturday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB4816C(type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, a1);
}

uint64_t sub_21FB4816C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 44);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.unknownFields.setter(uint64_t a1)
{
  return sub_21FB481C4(a1, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_21FB481C4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 44);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.unknownFields.modify())()
{
  type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  return nullsub_1;
}

uint64_t sub_21FB48234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543890);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543890);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "NONE";
  *(_QWORD *)(v8 + 8) = 4;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "SINGLE";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "RANGE";
  *((_QWORD *)v14 + 1) = 5;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "LIST";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 4;
  *(_QWORD *)v17 = "TAGGED_LIST";
  *(_QWORD *)(v17 + 8) = 11;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBInspectableValueCollectionType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D7D8, (uint64_t)qword_255543890, a1);
}

uint64_t sub_21FB4845C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D7D8, (uint64_t)qword_255543890, a1);
}

uint64_t sub_21FB48478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v34;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555438A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555438A8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_21FC62990;
  v6 = v34 + v5;
  v7 = v34 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v34 + v5) = 0;
  *(_QWORD *)v7 = "NOT_SPECIFIED";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v34 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 1;
  *(_QWORD *)v11 = "RATIO";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v34 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "MEDICAL_DATE";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v34 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "MEDICAL_DATE_INTERVAL";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v34 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "DATE_COMPONENTS";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v34 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "NULL";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v34 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "CODED_QUANTITY";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v34 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "MEDICAL_CODINGS";
  *((_QWORD *)v23 + 1) = 15;
  v23[16] = 2;
  v10();
  v24 = v34 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 8;
  *(_QWORD *)v24 = "CODED_VALUE_COLLECTION";
  *(_QWORD *)(v24 + 8) = 22;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v34 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "DATA_ABSENT_REASON_CODINGS";
  *((_QWORD *)v26 + 1) = 26;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v34 + v5 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 10;
  *(_QWORD *)v28 = "STRING";
  *((_QWORD *)v28 + 1) = 6;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v34 + v5 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 11;
  *(_QWORD *)v30 = "INTEGER";
  *((_QWORD *)v30 + 1) = 7;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v34 + v5 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 12;
  *(_QWORD *)v32 = "BOOLEAN";
  *((_QWORD *)v32 + 1) = 7;
  v32[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBInspectableValueType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D7E0, (uint64_t)qword_2555438A8, a1);
}

uint64_t sub_21FB4883C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D7E0, (uint64_t)qword_2555438A8, a1);
}

unint64_t static PBDateRange.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_21FB48874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555438C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555438C0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "start_time";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "end_time";
  *((_QWORD *)v12 + 1) = 8;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "granularity";
  *(_QWORD *)(v13 + 8) = 11;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBDateRange._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D7E8, (uint64_t)qword_2555438C0, a1);
}

uint64_t PBDateRange.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_21FB8EF7C();
        sub_21FC5ADC4();
      }
      else if (result == 2 || result == 1)
      {
        sub_21FC5AE3C();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBDateRange.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_21FC5AF2C(), !v1))
    {
      if (!v0[4] || (sub_21FB8EF7C(), result = sub_21FC5AED8(), !v1))
      {
        type metadata accessor for PBDateRange(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t PBDateRange.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBDateRange, &qword_255544660, (uint64_t)&protocol conformance descriptor for PBDateRange);
}

unint64_t sub_21FB48C78()
{
  return 0xD000000000000024;
}

uint64_t sub_21FB48C94()
{
  return PBDateRange.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB48CA8()
{
  return PBDateRange.traverse<A>(visitor:)();
}

uint64_t sub_21FB48CBC()
{
  sub_21FA2A08C(&qword_25554A6D0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
  return sub_21FC5AD70();
}

uint64_t sub_21FB48D0C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D7E8, (uint64_t)qword_2555438C0, a1);
}

uint64_t sub_21FB48D28()
{
  sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB48D68()
{
  sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
  return sub_21FC5AEA8();
}

unint64_t static PBTimeSeries.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_21FB48DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555438D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555438D8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "date_range";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 3;
  *(_QWORD *)v12 = "data_source";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "unit";
  *((_QWORD *)v14 + 1) = 4;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "values";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBTimeSeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D7F0, (uint64_t)qword_2555438D8, a1);
}

uint64_t sub_21FB48FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  _QWORD *v5;

  type metadata accessor for PBTimeSeries._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v2 = type metadata accessor for PBDateRange(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values) = MEMORY[0x24BEE4AF8];
  qword_2555438F0 = v0;
  return result;
}

uint64_t sub_21FB49070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _BYTE v21[24];

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v21[-v4];
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values) = MEMORY[0x24BEE4AF8];
  v11 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  v12 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v14 = *v12;
  v13 = v12[1];
  swift_beginAccess();
  *v8 = v14;
  v8[1] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  v17 = *v15;
  v16 = v15[1];
  swift_beginAccess();
  *v9 = v17;
  v9[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  v19 = *v18;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v10 = v19;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FB492C8()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBTimeSeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBTimeSeries, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB49374);
}

uint64_t sub_21FB49374()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 3:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBTimeSeries.Value(0);
          sub_21FA2A08C(&qword_255544AC8, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
          v4 = v3;
          sub_21FC5AE54();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBTimeSeries.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBTimeSeries, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB49590);
}

uint64_t sub_21FB49590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[16];

  v24[1] = a3;
  v24[15] = a4;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v24 - v6;
  v8 = type metadata accessor for PBDateRange(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v13, (uint64_t)v7, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_21FA2D1F8((uint64_t)v7, &qword_25553E0F8, type metadata accessor for PBDateRange);
    v14 = v24[0];
  }
  else
  {
    sub_21FA2D23C((uint64_t)v7, (uint64_t)v11, type metadata accessor for PBDateRange);
    sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
    v15 = v24[0];
    sub_21FC5AF50();
    v14 = v15;
    result = sub_21FA326EC((uint64_t)v11, type metadata accessor for PBDateRange);
    if (v15)
      return result;
  }
  v17 = (_QWORD *)(v12
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v18 = v17[1];
  v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v19 = *v17 & 0xFFFFFFFFFFFFLL;
  if (!v19 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v14))
  {
    v20 = (_QWORD *)(v12
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
    swift_beginAccess();
    v21 = v20[1];
    v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v22 = *v20 & 0xFFFFFFFFFFFFLL;
    if (!v22 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v14))
    {
      v23 = v12
          + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values;
      result = swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v23 + 16))
      {
        type metadata accessor for PBTimeSeries.Value(0);
        sub_21FA2A08C(&qword_255544AC8, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
        swift_bridgeObjectRetain();
        sub_21FC5AF44();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_21FB498A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  char *v38;
  _QWORD *v39;
  uint64_t v40;

  v40 = a2;
  v3 = type metadata accessor for PBDateRange(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v38 - v8;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v39 = (char **)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v38 - v13;
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v16 = v40;
  v17 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21FA44968((uint64_t)v14, (uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA44968(v17, v18, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    v21 = (uint64_t)v38;
    v20 = a1;
    v22 = v39;
    sub_21FA44968((uint64_t)v9, (uint64_t)v39, &qword_25553E0F8, type metadata accessor for PBDateRange);
    if (v19(v18, 1, v3) != 1)
    {
      sub_21FA2D23C(v18, v21, type metadata accessor for PBDateRange);
      swift_retain();
      swift_retain();
      v23 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v22, v21);
      sub_21FA326EC(v21, type metadata accessor for PBDateRange);
      sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
      sub_21FA326EC((uint64_t)v22, type metadata accessor for PBDateRange);
      sub_21FA2D1F8((uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
      if ((v23 & 1) != 0)
        goto LABEL_8;
LABEL_15:
      swift_release();
      swift_release();
      v36 = 0;
      return v36 & 1;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
    sub_21FA326EC((uint64_t)v22, type metadata accessor for PBDateRange);
LABEL_6:
    sub_21FA48E3C((uint64_t)v9, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
    goto LABEL_15;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v20 = a1;
  if (v19(v18, 1, v3) != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
LABEL_8:
  v24 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v25 = *v24;
  v26 = v24[1];
  v27 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  if ((v25 != *v27 || v26 != v27[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_15;
  v28 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  v29 = *v28;
  v30 = v28[1];
  v31 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  if ((v29 != *v31 || v30 != v31[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_15;
  v32 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  v33 = *v32;
  v34 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  v35 = *v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = sub_21FB1138C(v33, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v36 & 1;
}

uint64_t PBTimeSeries.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBTimeSeries, &qword_255544668, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
}

uint64_t sub_21FB49DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D7F8, &qword_2555438F0, a2);
}

unint64_t sub_21FB49DC0()
{
  return 0xD000000000000025;
}

uint64_t sub_21FB49DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTimeSeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB49DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTimeSeries.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB49E04()
{
  sub_21FA2A08C(&qword_25554A6C8, type metadata accessor for PBTimeSeries, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
  return sub_21FC5AD70();
}

uint64_t sub_21FB49E54@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D7F0, (uint64_t)qword_2555438D8, a1);
}

uint64_t sub_21FB49E70()
{
  sub_21FA2A08C(&qword_25553EB78, type metadata accessor for PBTimeSeries, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB49EB0()
{
  sub_21FA2A08C(&qword_25553EB78, type metadata accessor for PBTimeSeries, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB49F04()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_2555438F8 = 0xD000000000000025;
  unk_255543900 = 0x800000021FC78240;
  return result;
}

uint64_t static PBTimeSeries.Value.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553D800, &qword_2555438F8);
}

uint64_t sub_21FB49F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v40;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543908);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543908);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_21FC66510;
  v6 = v40 + v5;
  v7 = v40 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v40 + v5) = 1;
  *(_QWORD *)v7 = "min_float";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "max_float";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "mean_float";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "sum_float";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "raw_float";
  *((_QWORD *)v17 + 1) = 9;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "recorded_time";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "measure_count";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "unit";
  *((_QWORD *)v23 + 1) = 4;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "data_source";
  *(_QWORD *)(v24 + 8) = 11;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "min";
  *((_QWORD *)v26 + 1) = 3;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "max";
  *((_QWORD *)v28 + 1) = 3;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v6 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "mean";
  *((_QWORD *)v30 + 1) = 4;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v6 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "sum";
  *((_QWORD *)v32 + 1) = 3;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v6 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "raw";
  *((_QWORD *)v34 + 1) = 3;
  v34[16] = 2;
  v10();
  v35 = (_QWORD *)(v6 + 14 * v4);
  v36 = (char *)v35 + *(int *)(v2 + 48);
  *v35 = 16;
  *(_QWORD *)v36 = "data_sources";
  *((_QWORD *)v36 + 1) = 12;
  v36[16] = 2;
  v10();
  v37 = (_QWORD *)(v6 + 15 * v4);
  v38 = (char *)v37 + *(int *)(v2 + 48);
  *v37 = 17;
  *(_QWORD *)v38 = "glucose_meal_time";
  *((_QWORD *)v38 + 1) = 17;
  v38[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBTimeSeries.Value._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D808, (uint64_t)qword_255543908, a1);
}

uint64_t PBTimeSeries.Value.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  char v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_21FC5AD88();
  v4 = v1;
  if (!v1)
  {
    while ((v3 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          v5 = v4;
          sub_21FC5AE00();
          goto LABEL_9;
        case 6:
        case 8:
        case 9:
          v5 = v4;
          sub_21FC5AE3C();
          goto LABEL_9;
        case 7:
          v5 = v4;
          sub_21FC5AE0C();
          goto LABEL_9;
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
          v5 = v4;
          sub_21FC5AE24();
          goto LABEL_9;
        case 16:
          v5 = v4;
          sub_21FC5AE18();
LABEL_9:
          v4 = v5;
          break;
        case 17:
          if ((*(_BYTE *)(v0 + 137) & 1) == 0)
            sub_21FC5AD94();
          sub_21FB8EFC0();
          sub_21FC5ADB8();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBTimeSeries.Value.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (*(float *)v0 == 0.0 || (result = sub_21FC5AEFC(), !v1))
  {
    if (*(float *)(v0 + 4) == 0.0 || (result = sub_21FC5AEFC(), !v1))
    {
      if (*(float *)(v0 + 8) == 0.0 || (result = sub_21FC5AEFC(), !v1))
      {
        if (*(float *)(v0 + 12) == 0.0 || (result = sub_21FC5AEFC(), !v1))
        {
          if (*(float *)(v0 + 16) == 0.0 || (result = sub_21FC5AEFC(), !v1))
          {
            v2 = *(_QWORD *)(v0 + 32);
            v3 = HIBYTE(v2) & 0xF;
            if ((v2 & 0x2000000000000000) == 0)
              v3 = *(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
            if (!v3 || (result = sub_21FC5AF2C(), !v1))
            {
              if (!*(_DWORD *)(v0 + 40) || (result = sub_21FC5AF08(), !v1))
              {
                v5 = *(_QWORD *)(v0 + 56);
                v6 = HIBYTE(v5) & 0xF;
                if ((v5 & 0x2000000000000000) == 0)
                  v6 = *(_QWORD *)(v0 + 48) & 0xFFFFFFFFFFFFLL;
                if (!v6 || (result = sub_21FC5AF2C(), !v1))
                {
                  v7 = *(_QWORD *)(v0 + 72);
                  v8 = HIBYTE(v7) & 0xF;
                  if ((v7 & 0x2000000000000000) == 0)
                    v8 = *(_QWORD *)(v0 + 64) & 0xFFFFFFFFFFFFLL;
                  if (!v8 || (result = sub_21FC5AF2C(), !v1))
                  {
                    if (*(double *)(v0 + 80) == 0.0 || (result = sub_21FC5AF20(), !v1))
                    {
                      if (*(double *)(v0 + 88) == 0.0 || (result = sub_21FC5AF20(), !v1))
                      {
                        if (*(double *)(v0 + 96) == 0.0 || (result = sub_21FC5AF20(), !v1))
                        {
                          if (*(double *)(v0 + 104) == 0.0 || (result = sub_21FC5AF20(), !v1))
                          {
                            if (*(double *)(v0 + 112) == 0.0 || (result = sub_21FC5AF20(), !v1))
                            {
                              if (!*(_QWORD *)(*(_QWORD *)(v0 + 120) + 16) || (result = sub_21FC5AF14(), !v1))
                              {
                                if ((*(_BYTE *)(v0 + 137) & 1) != 0 || (sub_21FB8EFC0(), result = sub_21FC5AED8(), !v1))
                                {
                                  type metadata accessor for PBTimeSeries.Value(0);
                                  return sub_21FC5AD04();
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBTimeSeries.Value.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBTimeSeries.Value, &qword_255544678, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
}

uint64_t sub_21FB4A9C4(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553D800, &qword_2555438F8);
}

uint64_t sub_21FB4A9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 80);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FB4AA24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 80);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_21FB4AA64())()
{
  return nullsub_1;
}

uint64_t sub_21FB4AA78()
{
  return PBTimeSeries.Value.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4AA8C()
{
  return PBTimeSeries.Value.traverse<A>(visitor:)();
}

uint64_t sub_21FB4AAA0()
{
  sub_21FA2A08C(&qword_25554A6C0, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4AAF0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D808, (uint64_t)qword_255543908, a1);
}

uint64_t sub_21FB4AB0C()
{
  sub_21FA2A08C(&qword_255544AC8, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4AB4C()
{
  sub_21FA2A08C(&qword_255544AC8, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
  return sub_21FC5AEA8();
}

unint64_t static PBBucket.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_21FB4ABBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543920);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543920);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "start";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "end";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "value";
  *(_QWORD *)(v13 + 8) = 5;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBBucket._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D810, (uint64_t)qword_255543920, a1);
}

uint64_t PBBucket.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_21FC5AE0C();
      }
      else if (result == 2 || result == 1)
      {
        sub_21FC5AE24();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBBucket.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(double *)v0 == 0.0 || (result = sub_21FC5AF20(), !v1))
  {
    if (*(double *)(v0 + 8) == 0.0 || (result = sub_21FC5AF20(), !v1))
    {
      if (!*(_DWORD *)(v0 + 16) || (result = sub_21FC5AF08(), !v1))
      {
        type metadata accessor for PBBucket(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t PBBucket.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBBucket, &qword_255544680, (uint64_t)&protocol conformance descriptor for PBBucket);
}

uint64_t sub_21FB4AF38@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_21FC5AD10();
}

unint64_t sub_21FB4AF5C()
{
  return 0xD000000000000021;
}

uint64_t sub_21FB4AF78()
{
  return PBBucket.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4AF8C()
{
  return PBBucket.traverse<A>(visitor:)();
}

uint64_t sub_21FB4AFA0()
{
  sub_21FA2A08C(&qword_25554A6B8, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4AFF0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D810, (uint64_t)qword_255543920, a1);
}

uint64_t sub_21FB4B00C()
{
  sub_21FA2A08C(&qword_255544698, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4B04C()
{
  sub_21FA2A08C(&qword_255544698, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
  return sub_21FC5AEA8();
}

unint64_t static PBHistogramSeries.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB4B0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543938);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543938);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "values";
  *(_QWORD *)(v8 + 8) = 6;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "unit";
  *((_QWORD *)v12 + 1) = 4;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHistogramSeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D818, (uint64_t)qword_255543938, a1);
}

uint64_t PBHistogramSeries.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_21FC5AE3C();
      }
      else if (result == 1)
      {
        type metadata accessor for PBHistogramSeries.Value(0);
        sub_21FA2A08C(&qword_255544688, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
        sub_21FC5AE54();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHistogramSeries.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*(_QWORD *)(*v0 + 16)
    || (type metadata accessor for PBHistogramSeries.Value(0),
        sub_21FA2A08C(&qword_255544688, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value), result = sub_21FC5AF44(), !v1))
  {
    v3 = v0[2];
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = v0[1] & 0xFFFFFFFFFFFFLL;
    if (!v4 || (result = sub_21FC5AF2C(), !v1))
    {
      type metadata accessor for PBHistogramSeries(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t PBHistogramSeries.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHistogramSeries, &qword_255544690, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
}

unint64_t sub_21FB4B468()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB4B48C()
{
  return PBHistogramSeries.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4B4A0()
{
  return PBHistogramSeries.traverse<A>(visitor:)();
}

uint64_t sub_21FB4B4B4()
{
  sub_21FA2A08C(&qword_25554A6B0, type metadata accessor for PBHistogramSeries, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4B504@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D818, (uint64_t)qword_255543938, a1);
}

uint64_t sub_21FB4B520()
{
  sub_21FA2A08C(&qword_25553EB18, type metadata accessor for PBHistogramSeries, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4B560()
{
  sub_21FA2A08C(&qword_25553EB18, type metadata accessor for PBHistogramSeries, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB4B5B4()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543950 = 0xD00000000000002ALL;
  *(_QWORD *)algn_255543958 = 0x800000021FC782A0;
  return result;
}

uint64_t static PBHistogramSeries.Value.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553D820, &qword_255543950);
}

uint64_t sub_21FB4B638(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21FB4B688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543960);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543960);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "recorded_time";
  *(_QWORD *)(v8 + 8) = 13;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "buckets";
  *((_QWORD *)v12 + 1) = 7;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "identifier";
  *(_QWORD *)(v13 + 8) = 10;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHistogramSeries.Value._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D828, (uint64_t)qword_255543960, a1);
}

uint64_t PBHistogramSeries.Value.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        type metadata accessor for PBBucket(0);
        sub_21FA2A08C(&qword_255544698, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
        sub_21FC5AE54();
      }
      else if (result == 1)
      {
        break;
      }
LABEL_11:
      result = sub_21FC5AD88();
    }
    sub_21FC5AE3C();
    goto LABEL_11;
  }
  return result;
}

uint64_t PBHistogramSeries.Value.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16)
      || (type metadata accessor for PBBucket(0),
          sub_21FA2A08C(&qword_255544698, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket), result = sub_21FC5AF44(), !v1))
    {
      v5 = v0[4];
      v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v6 = v0[3] & 0xFFFFFFFFFFFFLL;
      if (!v6 || (result = sub_21FC5AF2C(), !v1))
      {
        type metadata accessor for PBHistogramSeries.Value(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t PBHistogramSeries.Value.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHistogramSeries.Value, &qword_2555446A0, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
}

uint64_t sub_21FB4BAD0(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553D820, &qword_255543950);
}

uint64_t sub_21FB4BAF0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v5;

  if (*a3 != -1)
    swift_once();
  v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_21FB4BB44()
{
  return PBHistogramSeries.Value.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4BB58()
{
  return PBHistogramSeries.Value.traverse<A>(visitor:)();
}

uint64_t sub_21FB4BB6C()
{
  sub_21FA2A08C(&qword_25554A6A8, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4BBBC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D828, (uint64_t)qword_255543960, a1);
}

uint64_t sub_21FB4BBD8()
{
  sub_21FA2A08C(&qword_255544688, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4BC18()
{
  sub_21FA2A08C(&qword_255544688, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
  return sub_21FC5AEA8();
}

unint64_t static PBSleepSeries.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_21FB4BC88(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255543978, (uint64_t)"values", 6, MEMORY[0x24BE5C318]);
}

uint64_t static PBSleepSeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D830, (uint64_t)qword_255543978, a1);
}

uint64_t PBSleepSeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBSleepSeries.Value, &qword_2555446A8, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
}

uint64_t PBSleepSeries.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBSleepSeries.Value, &qword_2555446A8, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value, (void (*)(_QWORD))type metadata accessor for PBSleepSeries);
}

uint64_t PBSleepSeries.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBSleepSeries, &qword_2555446B0, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
}

unint64_t sub_21FB4BD40()
{
  return 0xD000000000000026;
}

uint64_t sub_21FB4BD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBSleepSeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB4BD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBSleepSeries.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB4BD84()
{
  sub_21FA2A08C(&qword_25554A6A0, type metadata accessor for PBSleepSeries, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4BDD4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D830, (uint64_t)qword_255543978, a1);
}

uint64_t sub_21FB4BDF0()
{
  sub_21FA2A08C(&qword_25553EB20, type metadata accessor for PBSleepSeries, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4BE30()
{
  sub_21FA2A08C(&qword_25553EB20, type metadata accessor for PBSleepSeries, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB4BE80(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0FE1C, type metadata accessor for PBSleepSeries) & 1;
}

uint64_t sub_21FB4BEA8()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543990 = 0xD000000000000026;
  *(_QWORD *)algn_255543998 = 0x800000021FC782D0;
  return result;
}

uint64_t static PBSleepSeries.Value.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553D838, &qword_255543990);
}

uint64_t sub_21FB4BF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555439A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555439A0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "recorded_time";
  *(_QWORD *)(v8 + 8) = 13;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "mean_asleep";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "mean_in_bed";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "mean_time_to_sleep";
  *((_QWORD *)v16 + 1) = 18;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBSleepSeries.Value._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D840, (uint64_t)qword_2555439A0, a1);
}

uint64_t PBSleepSeries.Value.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_21FC5AE3C();
          break;
        case 2:
        case 3:
        case 4:
          sub_21FC5AE48();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBSleepSeries.Value.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    if (!*(_DWORD *)(v0 + 16) || (result = sub_21FC5AF38(), !v1))
    {
      if (!*(_DWORD *)(v0 + 20) || (result = sub_21FC5AF38(), !v1))
      {
        if (!*(_DWORD *)(v0 + 24) || (result = sub_21FC5AF38(), !v1))
        {
          type metadata accessor for PBSleepSeries.Value(0);
          return sub_21FC5AD04();
        }
      }
    }
  }
  return result;
}

uint64_t PBSleepSeries.Value.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBSleepSeries.Value, &qword_2555446B8, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
}

uint64_t sub_21FB4C31C@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return sub_21FC5AD10();
}

uint64_t sub_21FB4C348(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553D838, &qword_255543990);
}

uint64_t sub_21FB4C368()
{
  return PBSleepSeries.Value.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4C37C()
{
  return PBSleepSeries.Value.traverse<A>(visitor:)();
}

uint64_t sub_21FB4C390()
{
  sub_21FA2A08C(&qword_25554A698, type metadata accessor for PBSleepSeries.Value, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4C3E0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D840, (uint64_t)qword_2555439A0, a1);
}

uint64_t sub_21FB4C3FC()
{
  sub_21FA2A08C(&qword_2555446A8, type metadata accessor for PBSleepSeries.Value, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4C43C()
{
  sub_21FA2A08C(&qword_2555446A8, type metadata accessor for PBSleepSeries.Value, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
  return sub_21FC5AEA8();
}

unint64_t static PBSleepSummary.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_21FB4C4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555439B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555439B8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "schedule";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "sleep_goal";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBSleepSummary._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D848, (uint64_t)qword_2555439B8, a1);
}

uint64_t PBSleepSummary.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_21FC5AE00();
      }
      else if (result == 1)
      {
        type metadata accessor for PBSleepSummary.Schedule(0);
        sub_21FA2A08C(&qword_2555446C0, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
        sub_21FC5AE54();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBSleepSummary.traverse<A>(visitor:)()
{
  float *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for PBSleepSummary.Schedule(0),
        sub_21FA2A08C(&qword_2555446C0, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule), result = sub_21FC5AF44(), !v1))
  {
    if (v0[2] == 0.0 || (result = sub_21FC5AEFC(), !v1))
    {
      type metadata accessor for PBSleepSummary(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t PBSleepSummary.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBSleepSummary, &qword_2555446C8, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
}

uint64_t sub_21FB4C854@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(a1 + 8) = 0;
  return sub_21FC5AD10();
}

unint64_t sub_21FB4C880()
{
  return 0xD000000000000027;
}

uint64_t sub_21FB4C89C()
{
  return PBSleepSummary.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4C8B0()
{
  return PBSleepSummary.traverse<A>(visitor:)();
}

uint64_t sub_21FB4C8C4()
{
  sub_21FA2A08C(&qword_25554A690, type metadata accessor for PBSleepSummary, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4C914@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D848, (uint64_t)qword_2555439B8, a1);
}

uint64_t sub_21FB4C930()
{
  sub_21FA2A08C(&qword_25553EB28, type metadata accessor for PBSleepSummary, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4C970()
{
  sub_21FA2A08C(&qword_25553EB28, type metadata accessor for PBSleepSummary, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB4C9C4()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_2555439D0 = 0xD000000000000027;
  *(_QWORD *)algn_2555439D8 = 0x800000021FC78300;
  return result;
}

uint64_t static PBSleepSummary.Schedule.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553D850, &qword_2555439D0);
}

uint64_t sub_21FB4CA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555439E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555439E0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_21FC66520;
  v6 = v26 + v5;
  v7 = v26 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v26 + v5) = 1;
  *(_QWORD *)v7 = "sunday";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "monday";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "tuesday";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "wednesday";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "thursday";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "friday";
  *((_QWORD *)v19 + 1) = 6;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "saturday";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "bedtime";
  *((_QWORD *)v23 + 1) = 7;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "awake";
  *(_QWORD *)(v24 + 8) = 5;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBSleepSummary.Schedule._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D858, (uint64_t)qword_2555439E0, a1);
}

uint64_t PBSleepSummary.Schedule.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          sub_21FC5ADAC();
          break;
        case 8:
        case 9:
          sub_21FC5AE48();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBSleepSummary.Schedule.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_BYTE *)v0 != 1 || (result = sub_21FC5AECC(), !v1))
  {
    if (*(_BYTE *)(v0 + 1) != 1 || (result = sub_21FC5AECC(), !v1))
    {
      if (*(_BYTE *)(v0 + 2) != 1 || (result = sub_21FC5AECC(), !v1))
      {
        if (*(_BYTE *)(v0 + 3) != 1 || (result = sub_21FC5AECC(), !v1))
        {
          if (*(_BYTE *)(v0 + 4) != 1 || (result = sub_21FC5AECC(), !v1))
          {
            if (*(_BYTE *)(v0 + 5) != 1 || (result = sub_21FC5AECC(), !v1))
            {
              if (*(_BYTE *)(v0 + 6) != 1 || (result = sub_21FC5AECC(), !v1))
              {
                if (!*(_DWORD *)(v0 + 8) || (result = sub_21FC5AF38(), !v1))
                {
                  if (!*(_DWORD *)(v0 + 12) || (result = sub_21FC5AF38(), !v1))
                  {
                    type metadata accessor for PBSleepSummary.Schedule(0);
                    return sub_21FC5AD04();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBSleepSummary.Schedule.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBSleepSummary.Schedule, &qword_2555446D0, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
}

uint64_t sub_21FB4D07C@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 3) = 0;
  return sub_21FC5AD10();
}

uint64_t sub_21FB4D0A4(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553D850, &qword_2555439D0);
}

uint64_t (*sub_21FB4D0CC())()
{
  return nullsub_1;
}

uint64_t sub_21FB4D0E0()
{
  return PBSleepSummary.Schedule.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4D0F4()
{
  return PBSleepSummary.Schedule.traverse<A>(visitor:)();
}

uint64_t sub_21FB4D108()
{
  sub_21FA2A08C(&qword_25554A688, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4D158@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D858, (uint64_t)qword_2555439E0, a1);
}

uint64_t sub_21FB4D174()
{
  sub_21FA2A08C(&qword_2555446C0, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4D1B4()
{
  sub_21FA2A08C(&qword_2555446C0, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
  return sub_21FC5AEA8();
}

unint64_t static PBCategorySeries.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB4D224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555439F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555439F8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "date_range";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "data_source";
  *((_QWORD *)v12 + 1) = 11;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "events";
  *(_QWORD *)(v13 + 8) = 6;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCategorySeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D860, (uint64_t)qword_2555439F8, a1);
}

uint64_t sub_21FB4D3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;

  type metadata accessor for PBCategorySeries._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v2 = type metadata accessor for PBDateRange(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events) = MEMORY[0x24BEE4AF8];
  qword_255543A10 = v0;
  return result;
}

uint64_t sub_21FB4D47C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - v4;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events) = MEMORY[0x24BEE4AF8];
  v10 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  v11 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v13 = *v11;
  v12 = v11[1];
  swift_beginAccess();
  *v8 = v13;
  v8[1] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  swift_beginAccess();
  v15 = *v14;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v9 = v15;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FB4D670()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBCategorySeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBCategorySeries, (void (*)(_QWORD))type metadata accessor for PBCategorySeries._StorageClass, sub_21FB4D47C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB4D708);
}

uint64_t sub_21FB4D708()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        v4 = v3;
        sub_21FC5AE3C();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBDateRange(0);
        sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
        v4 = v3;
        sub_21FC5AE60();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBCategorySeries.Event(0);
    sub_21FA2A08C(&qword_255544B78, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
    v4 = v3;
    sub_21FC5AE54();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBCategorySeries.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCategorySeries, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB4D8E4);
}

uint64_t sub_21FB4D8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v20[1] = a3;
  v20[2] = a4;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v20 - v7;
  v9 = type metadata accessor for PBDateRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v13, (uint64_t)v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21FA2D1F8((uint64_t)v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
    v14 = v21;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBDateRange);
    sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v12, type metadata accessor for PBDateRange);
    v14 = v21;
    if (v4)
      return result;
  }
  v16 = (_QWORD *)(v14
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v17 = v16[1];
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = *v16 & 0xFFFFFFFFFFFFLL;
  if (!v18 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    v19 = v14
        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events;
    result = swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v19 + 16))
    {
      type metadata accessor for PBCategorySeries.Event(0);
      sub_21FA2A08C(&qword_255544B78, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
      swift_bridgeObjectRetain();
      sub_21FC5AF44();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21FB4DB90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v34;
  _QWORD *v35;
  uint64_t v36;

  v36 = a2;
  v3 = type metadata accessor for PBDateRange(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - v8;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v35 = (char **)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - v13;
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v16 = v36;
  v17 = v36
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21FA44968((uint64_t)v14, (uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA44968(v17, v18, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    v20 = a1;
    v21 = (uint64_t)v34;
    v22 = v35;
    sub_21FA44968((uint64_t)v9, (uint64_t)v35, &qword_25553E0F8, type metadata accessor for PBDateRange);
    if (v19(v18, 1, v3) != 1)
    {
      sub_21FA2D23C(v18, v21, type metadata accessor for PBDateRange);
      swift_retain();
      swift_retain();
      v24 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v22, v21);
      sub_21FA326EC(v21, type metadata accessor for PBDateRange);
      sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
      sub_21FA326EC((uint64_t)v22, type metadata accessor for PBDateRange);
      sub_21FA2D1F8((uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
      if ((v24 & 1) == 0)
        goto LABEL_7;
      goto LABEL_9;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
    sub_21FA326EC((uint64_t)v22, type metadata accessor for PBDateRange);
LABEL_6:
    sub_21FA48E3C((uint64_t)v9, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v20 = a1;
  if (v19(v18, 1, v3) != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
LABEL_9:
  v25 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  v26 = *v25;
  v27 = v25[1];
  v28 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  if (v26 == *v28 && v27 == v28[1] || (sub_21FC5BDF0() & 1) != 0)
  {
    v29 = (uint64_t *)(v20
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
    swift_beginAccess();
    v30 = *v29;
    v31 = (uint64_t *)(v16
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
    swift_beginAccess();
    v32 = *v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_21FB114DC(v30, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v23 & 1;
  }
LABEL_7:
  swift_release();
  swift_release();
  v23 = 0;
  return v23 & 1;
}

uint64_t PBCategorySeries.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCategorySeries, &qword_2555446D8, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
}

uint64_t sub_21FB4E008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D868, &qword_255543A10, a2);
}

unint64_t sub_21FB4E024()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB4E040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB4E054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB4E068()
{
  sub_21FA2A08C(&qword_25554A680, type metadata accessor for PBCategorySeries, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4E0B8@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D860, (uint64_t)qword_2555439F8, a1);
}

uint64_t sub_21FB4E0D4()
{
  sub_21FA2A08C(&qword_25553EB70, type metadata accessor for PBCategorySeries, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4E114()
{
  sub_21FA2A08C(&qword_25553EB70, type metadata accessor for PBCategorySeries, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB4E164(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCategorySeries, sub_21FB4DB90) & 1;
}

uint64_t sub_21FB4E18C()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543A18 = 0xD000000000000029;
  unk_255543A20 = 0x800000021FC78330;
  return result;
}

uint64_t static PBCategorySeries.Range.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553D870, &qword_255543A18);
}

uint64_t sub_21FB4E210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543A28);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543A28);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "min";
  *(_QWORD *)(v8 + 8) = 3;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "max";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCategorySeries.Range._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D878, (uint64_t)qword_255543A28, a1);
}

uint64_t PBCategorySeries.Range.decodeMessage<A>(decoder:)()
{
  return sub_21FB88DD8();
}

uint64_t PBCategorySeries.Range.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB7B374(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Range);
}

uint64_t PBCategorySeries.Range.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCategorySeries.Range, &qword_2555446E0, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
}

uint64_t sub_21FB4E3DC(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553D870, &qword_255543A18);
}

uint64_t sub_21FB4E3FC()
{
  return PBCycleTracking.Range.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB4E410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.Range.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB4E424()
{
  sub_21FA2A08C(&qword_25554A678, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
  return sub_21FC5AD70();
}

uint64_t sub_21FB4E474@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D878, (uint64_t)qword_255543A28, a1);
}

uint64_t sub_21FB4E490()
{
  sub_21FA2A08C(&qword_255544B60, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB4E4D0()
{
  sub_21FA2A08C(&qword_255544B60, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB4E520(_DWORD *a1, char *a2)
{
  return sub_21FB8CBBC(a1, a2, type metadata accessor for PBCategorySeries.Range) & 1;
}

uint64_t sub_21FB4E540()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543A40 = 0xD000000000000029;
  *(_QWORD *)algn_255543A48 = 0x800000021FC78330;
  return result;
}

uint64_t static PBCategorySeries.Event.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553D880, &qword_255543A40);
}

uint64_t sub_21FB4E5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v28;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543A50);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543A50);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_21FC5F730;
  v6 = v28 + v5;
  v7 = v28 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v28 + v5) = 1;
  *(_QWORD *)v7 = "raw";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v28 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "value";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v28 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "recorded_time";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v28 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 11;
  *(_QWORD *)v15 = "source";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v28 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "range";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v28 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "heart_rate_event_threshold";
  *((_QWORD *)v19 + 1) = 26;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v28 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "sleep_analysis";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v28 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "cycleFactor";
  *((_QWORD *)v23 + 1) = 11;
  v23[16] = 2;
  v10();
  v24 = v28 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 8;
  *(_QWORD *)v24 = "steadiness_event";
  *(_QWORD *)(v24 + 8) = 16;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v28 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "steadiness_classification";
  *((_QWORD *)v26 + 1) = 25;
  v26[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBCategorySeries.Event._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D888, (uint64_t)qword_255543A50, a1);
}

uint64_t sub_21FB4E908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for PBCategorySeries.Event._StorageClass(0);
  v0 = swift_allocObject();
  *(_DWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  v2 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)(v0
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *v3 = 0;
  v3[1] = 0xE000000000000000;
  v4 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  v5 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  qword_255543A68 = v0;
  return result;
}

uint64_t type metadata accessor for PBDateRange(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545000);
}

uint64_t type metadata accessor for PBCategorySeries.Event._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547888);
}

uint64_t sub_21FB4E9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8]();
  v24 = (uint64_t)&v23 - v5;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, v4);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v23 - v6;
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0xE000000000000000;
  v8 = v1
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  v9 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = v1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  v12 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  swift_beginAccess();
  v13 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v13;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = v15;
  *(_QWORD *)(v1 + 32) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  sub_21FA44968(v16, (uint64_t)v7, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v7, v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  v19 = *v17;
  v18 = v17[1];
  swift_beginAccess();
  *v10 = v19;
  v10[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  v21 = v24;
  sub_21FA44968(v20, v24, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8(v21, v11, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return v2;
}

uint64_t type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545808);
}

uint64_t type metadata accessor for PBCategorySeries(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545638);
}

uint64_t type metadata accessor for PBCategorySeries._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547778);
}

uint64_t type metadata accessor for PBTimeSeries(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545098);
}

uint64_t type metadata accessor for PBWorkout(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545930);
}

uint64_t sub_21FB4ED78()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  return swift_deallocClassInstance();
}

uint64_t PBCategorySeries.Event.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBCategorySeries.Event, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_21FB4E9EC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB4EE28);
}

uint64_t sub_21FB4EE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int16 *v47;
  unint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  __int16 *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  __int16 *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v122 = a4;
  v115 = type metadata accessor for PBCategorySeries.Range(0);
  v111 = *(_QWORD *)(v115 - 8);
  v7 = MEMORY[0x24BDAC7A8](v115);
  v104 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v103 = (uint64_t)&v95 - v9;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v108 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v109 = (uint64_t)&v95 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v106 = (uint64_t)&v95 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v110 = (uint64_t)&v95 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v107 = (uint64_t)&v95 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v112 = (uint64_t)&v95 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v113 = (char *)&v95 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v114 = (char *)&v95 - v26;
  v27 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  v117 = *(_QWORD *)(v27 - 8);
  v118 = v27;
  v28 = MEMORY[0x24BDAC7A8](v27);
  v105 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v95 - v30;
  sub_21FA2D1A0(0, &qword_25554A7F0, type metadata accessor for PBCategorySeries.Range, v10);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v95 - v36;
  v38 = OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source;
  v39 = a1;
  v40 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  v41 = OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  v42 = v119;
  v119 = a3;
  result = sub_21FC5AD88();
  if (!v42)
  {
    v95 = v31;
    v102 = v39 + v38;
    v101 = v39 + v41;
    v100 = v39 + 24;
    v99 = v39 + 16;
    v45 = (uint64_t)v114;
    v46 = v115;
    v47 = (__int16 *)(v39 + 24);
    v98 = v37;
    v97 = v35;
    v48 = &qword_25553E0F0;
    v49 = v40;
    v116 = a2;
    while ((v44 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_21FC5AE0C();
          swift_endAccess();
          goto LABEL_6;
        case 2:
        case 11:
          swift_beginAccess();
          sub_21FC5AE3C();
          swift_endAccess();
          goto LABEL_6;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
          sub_21FC5AE60();
          swift_endAccess();
          v46 = v115;
          goto LABEL_6;
        case 4:
          v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v111 + 56);
          v53 = v49;
          v54 = (uint64_t)v98;
          v52(v98, 1, 1, v46);
          sub_21FA44968(v53, v45, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v45, 1, v118);
          v96 = v53;
          if (v55 == 1)
          {
            sub_21FA2D1F8(v45, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            v56 = (uint64_t)v113;
          }
          else
          {
            v82 = (uint64_t)v105;
            v83 = v54;
            v84 = v45;
            v85 = (uint64_t)v95;
            sub_21FA2D23C(v84, (uint64_t)v95, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            sub_21FC5AD94();
            sub_21FA2D23C(v85, v82, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            if (swift_getEnumCaseMultiPayload())
            {
              sub_21FA326EC(v82, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              v56 = (uint64_t)v113;
              v47 = &jpt_21FB4F24C;
              v48 = &qword_25553E0F0;
              v46 = v115;
            }
            else
            {
              sub_21FA2D1F8(v54, &qword_25554A7F0, type metadata accessor for PBCategorySeries.Range);
              v87 = v103;
              sub_21FA2D23C(v82, v103, type metadata accessor for PBCategorySeries.Range);
              v88 = v87;
              v54 = v83;
              sub_21FA2D23C(v88, v83, type metadata accessor for PBCategorySeries.Range);
              v46 = v115;
              v52((char *)v83, 0, 1, v115);
              v56 = (uint64_t)v113;
              v47 = &jpt_21FB4F24C;
              v48 = &qword_25553E0F0;
            }
          }
          sub_21FA2A08C(&qword_255544B60, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
          sub_21FC5AE60();
          v89 = v47;
          v90 = (uint64_t)v97;
          sub_21FA2D280(v54, (uint64_t)v97, &qword_25554A7F0, type metadata accessor for PBCategorySeries.Range);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v90, 1, v46) == 1)
          {
            sub_21FA2D1F8(v90, &qword_25554A7F0, type metadata accessor for PBCategorySeries.Range);
            v45 = (uint64_t)v114;
            v46 = v115;
            v49 = v96;
          }
          else
          {
            v91 = v104;
            sub_21FA2D23C(v90, v104, type metadata accessor for PBCategorySeries.Range);
            sub_21FA2D23C(v91, v56, type metadata accessor for PBCategorySeries.Range);
            v92 = v118;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v117 + 56))(v56, 0, 1, v92);
            v93 = v56;
            v94 = v112;
            sub_21FA2D280(v93, v112, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            v49 = v96;
            swift_beginAccess();
            sub_21FA2D2D8(v94, v49, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            swift_endAccess();
            v45 = (uint64_t)v114;
            v46 = v115;
          }
          v47 = v89;
          goto LABEL_6;
        case 5:
          v57 = v49;
          v58 = v49;
          v59 = v107;
          sub_21FA44968(v58, v107, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v59, 1, v118);
          sub_21FA2D1F8(v59, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          if (v60 != 1)
            sub_21FC5AD94();
          v61 = v113;
          v49 = v57;
          v46 = v115;
          v120 = 0;
          v121 = 0;
          sub_21FC5AE30();
          v62 = v121;
          if (!v121)
            goto LABEL_5;
          *v61 = v120;
          v61[1] = v62;
          v63 = v118;
          break;
        case 6:
          v64 = v48;
          v65 = v47;
          v66 = v110;
          sub_21FA44968(v49, v110, v64, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v66, 1, v118);
          sub_21FA2D1F8(v66, v64, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v61 = v113;
          v47 = v65;
          v48 = v64;
          v120 = 0;
          LOWORD(v121) = 256;
          sub_21FB9E520();
          sub_21FC5ADB8();
          if ((v121 & 0x100) != 0)
            goto LABEL_5;
          v86 = v121;
          *v61 = v120;
          *((_BYTE *)v61 + 8) = v86 & 1;
          v63 = v118;
          break;
        case 7:
          v67 = v49;
          v68 = v49;
          v69 = v106;
          sub_21FA44968(v68, v106, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v69, 1, v118);
          sub_21FA2D1F8(v69, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          if (v70 != 1)
            sub_21FC5AD94();
          v61 = v113;
          v49 = v67;
          v46 = v115;
          v120 = 0;
          LOWORD(v121) = 256;
          sub_21FB9E4DC();
          sub_21FC5ADB8();
          if ((v121 & 0x100) != 0)
            goto LABEL_5;
          v71 = v121;
          *v61 = v120;
          *((_BYTE *)v61 + 8) = v71 & 1;
          v63 = v118;
          break;
        case 8:
          v72 = v49;
          v73 = v49;
          v74 = v109;
          sub_21FA44968(v73, v109, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v74, 1, v118);
          sub_21FA2D1F8(v74, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          if (v75 != 1)
            sub_21FC5AD94();
          v61 = v113;
          v49 = v72;
          v46 = v115;
          v120 = 0;
          LOWORD(v121) = 256;
          sub_21FB9E498();
          sub_21FC5ADB8();
          if ((v121 & 0x100) != 0)
            goto LABEL_5;
          v76 = v121;
          *v61 = v120;
          *((_BYTE *)v61 + 8) = v76 & 1;
          v63 = v118;
          break;
        case 9:
          v77 = v49;
          v78 = v49;
          v79 = v108;
          sub_21FA44968(v78, v108, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v80 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v79, 1, v118);
          sub_21FA2D1F8(v79, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          if (v80 != 1)
            sub_21FC5AD94();
          v61 = v113;
          v49 = v77;
          v46 = v115;
          v120 = 0;
          LOWORD(v121) = 256;
          sub_21FB9E454();
          sub_21FC5ADB8();
          if ((v121 & 0x100) != 0)
            goto LABEL_5;
          v81 = v121;
          *v61 = v120;
          *((_BYTE *)v61 + 8) = v81 & 1;
          v63 = v118;
          break;
        default:
          goto LABEL_6;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v61, 0, 1, v63);
      v50 = (uint64_t)v61;
      v51 = v112;
      sub_21FA2D280(v50, v112, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      swift_beginAccess();
      sub_21FA2D2D8(v51, v49, v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      swift_endAccess();
LABEL_5:
      v45 = (uint64_t)v114;
LABEL_6:
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBCategorySeries.Event.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB4FBF4);
}

uint64_t sub_21FB4FBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v30[0] = type metadata accessor for PBCategorySeries.Range(0);
  MEMORY[0x24BDAC7A8](v30[0]);
  v30[1] = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v31 = (uint64_t)v30 - v10;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, v8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v30 - v12;
  v14 = type metadata accessor for PBDateRange(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!*(_DWORD *)(a1 + 16) || (result = sub_21FC5AF08(), !v4))
  {
    v32 = a4;
    swift_beginAccess();
    v19 = *(_QWORD *)(a1 + 32);
    v20 = HIBYTE(v19) & 0xF;
    if ((v19 & 0x2000000000000000) == 0)
      v20 = *(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFLL;
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_21FC5AF2C();
      if (v4)
        return swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v21 = a1
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
    swift_beginAccess();
    sub_21FA44968(v21, (uint64_t)v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_21FA2D1F8((uint64_t)v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
    }
    else
    {
      sub_21FA2D23C((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBDateRange);
      sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
      sub_21FC5AF50();
      result = sub_21FA326EC((uint64_t)v17, type metadata accessor for PBDateRange);
      if (v4)
        return result;
    }
    v22 = a1
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
    swift_beginAccess();
    v23 = v31;
    sub_21FA44968(v22, v31, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    v24 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24) != 1)
    {
      v25 = (char *)&loc_21FB4FF3C + 4 * byte_21FC665AA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v26 = (uint64_t *)(a1
                    + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
    result = swift_beginAccess();
    v28 = *v26;
    v27 = v26[1];
    v29 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0)
      v29 = v28 & 0xFFFFFFFFFFFFLL;
    if (v29)
    {
      swift_bridgeObjectRetain();
      sub_21FC5AF2C();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t static PBCategorySeries.Event.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCategorySeries.Event, (uint64_t (*)(uint64_t, uint64_t))sub_21FB50150) & 1;
}

BOOL sub_21FB50150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _BOOL8 result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v62 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v56 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A7C8, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v59 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v53 - v6;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v57 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v61 = (uint64_t)&v53 - v12;
  v63 = type metadata accessor for PBDateRange(0);
  v13 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v58 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v16 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v53 - v17;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, v8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v53 - v23;
  swift_beginAccess();
  v25 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  if (v25 != *(_DWORD *)(a2 + 16))
    return 0;
  v55 = v22;
  v54 = v7;
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 24);
  v27 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  if (v26 == *(_QWORD *)(a2 + 24) && v27 == *(_QWORD *)(a2 + 32)
    || (v28 = sub_21FC5BDF0(), result = 0, (v28 & 1) != 0))
  {
    v30 = a1
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
    swift_beginAccess();
    sub_21FA44968(v30, (uint64_t)v24, &qword_25553E0F8, type metadata accessor for PBDateRange);
    v31 = a2
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
    swift_beginAccess();
    v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
    sub_21FA44968((uint64_t)v24, (uint64_t)v18, &qword_25553E0F8, type metadata accessor for PBDateRange);
    sub_21FA44968(v31, v32, &qword_25553E0F8, type metadata accessor for PBDateRange);
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v34 = v63;
    if (v33((uint64_t)v18, 1, v63) == 1)
    {
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v24, &qword_25553E0F8, type metadata accessor for PBDateRange);
      if (v33(v32, 1, v34) == 1)
      {
        sub_21FA2D1F8((uint64_t)v18, &qword_25553E0F8, type metadata accessor for PBDateRange);
LABEL_12:
        v38 = (uint64_t *)(a1
                        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
        swift_beginAccess();
        v39 = *v38;
        v40 = v38[1];
        v41 = (_QWORD *)(a2
                       + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
        swift_beginAccess();
        if (v39 == *v41 && v40 == v41[1] || (sub_21FC5BDF0() & 1) != 0)
        {
          v42 = a1
              + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
          swift_beginAccess();
          v43 = v61;
          sub_21FA44968(v42, v61, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v44 = a2
              + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
          swift_beginAccess();
          v45 = (uint64_t)v54;
          v46 = (uint64_t)&v54[*(int *)(v59 + 48)];
          sub_21FA44968(v43, (uint64_t)v54, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          sub_21FA44968(v44, v46, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
          v48 = v62;
          if (v47(v45, 1, v62) == 1)
          {
            swift_release();
            swift_release();
            sub_21FA2D1F8(v43, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            if (v47(v46, 1, v48) == 1)
            {
              sub_21FA2D1F8(v45, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              return 1;
            }
          }
          else
          {
            v49 = v57;
            sub_21FA44968(v45, v57, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            if (v47(v46, 1, v48) != 1)
            {
              v50 = v56;
              sub_21FA2D23C(v46, v56, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              _s19HealthRecordsDaemon16PBCategorySeriesV5EventV20OneOf_AdditionalDataO2eeoiySbAG_AGtFZ_0(v49, v50);
              v52 = v51;
              swift_release();
              swift_release();
              sub_21FA326EC(v50, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              sub_21FA2D1F8(v43, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              sub_21FA326EC(v49, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              sub_21FA2D1F8(v45, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              return (v52 & 1) != 0;
            }
            swift_release();
            swift_release();
            sub_21FA2D1F8(v43, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            sub_21FA326EC(v49, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          }
          sub_21FA48E3C(v45, &qword_25554A7C8, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          return 0;
        }
LABEL_18:
        swift_release();
        swift_release();
        return 0;
      }
    }
    else
    {
      v35 = v55;
      sub_21FA44968((uint64_t)v18, (uint64_t)v55, &qword_25553E0F8, type metadata accessor for PBDateRange);
      if (v33(v32, 1, v34) != 1)
      {
        v36 = v58;
        sub_21FA2D23C(v32, v58, type metadata accessor for PBDateRange);
        swift_retain();
        swift_retain();
        v37 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v35, v36);
        sub_21FA326EC(v36, type metadata accessor for PBDateRange);
        sub_21FA2D1F8((uint64_t)v24, &qword_25553E0F8, type metadata accessor for PBDateRange);
        sub_21FA326EC((uint64_t)v35, type metadata accessor for PBDateRange);
        sub_21FA2D1F8((uint64_t)v18, &qword_25553E0F8, type metadata accessor for PBDateRange);
        if ((v37 & 1) == 0)
          goto LABEL_18;
        goto LABEL_12;
      }
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v24, &qword_25553E0F8, type metadata accessor for PBDateRange);
      sub_21FA326EC((uint64_t)v35, type metadata accessor for PBDateRange);
    }
    sub_21FA48E3C((uint64_t)v18, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
    goto LABEL_18;
  }
  return result;
}

uint64_t PBCategorySeries.Event.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCategorySeries.Event, &qword_2555446E8, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
}

uint64_t sub_21FB50964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D890, &qword_255543A68, a2);
}

uint64_t sub_21FB50980(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553D880, &qword_255543A40);
}

uint64_t sub_21FB509A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.Event.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB509B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.Event.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB509C8()
{
  sub_21FA2A08C(&qword_25554A670, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
  return sub_21FC5AD70();
}

uint64_t sub_21FB50A18@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D888, (uint64_t)qword_255543A50, a1);
}

uint64_t sub_21FB50A34()
{
  sub_21FA2A08C(&qword_255544B78, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB50A74()
{
  sub_21FA2A08C(&qword_255544B78, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB50AC4(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCategorySeries.Event, (uint64_t (*)(uint64_t, uint64_t))sub_21FB50150) & 1;
}

unint64_t static PBCharacteristics.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB50B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543A70);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543A70);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "blood_type";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "biological_sex";
  *((_QWORD *)v12 + 1) = 14;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "data_of_birth";
  *(_QWORD *)(v13 + 8) = 13;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCharacteristics._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D898, (uint64_t)qword_255543A70, a1);
}

uint64_t PBCharacteristics.decodeMessage<A>(decoder:)()
{
  return sub_21FB82370();
}

uint64_t PBCharacteristics.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB82430(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCharacteristics);
}

uint64_t PBCharacteristics.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCharacteristics, &qword_2555446F0, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
}

unint64_t sub_21FB50D18()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB50D34()
{
  return PBPatientMeta.CHRMeta.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB50D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCharacteristics.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB50D5C()
{
  sub_21FA2A08C(&qword_25554A668, type metadata accessor for PBCharacteristics, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
  return sub_21FC5AD70();
}

uint64_t sub_21FB50DAC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D898, (uint64_t)qword_255543A70, a1);
}

uint64_t sub_21FB50DC8()
{
  sub_21FA2A08C(&qword_25553EB60, type metadata accessor for PBCharacteristics, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB50E08()
{
  sub_21FA2A08C(&qword_25553EB60, type metadata accessor for PBCharacteristics, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB50E58(_QWORD *a1, char *a2)
{
  return sub_21FB8D4A0(a1, a2, type metadata accessor for PBCharacteristics) & 1;
}

unint64_t static PBWorkout.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_21FB50E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543A88);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543A88);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC623E0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "total_energy_burned";
  *(_QWORD *)(v8 + 8) = 19;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "total_distance";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "activity_type";
  *((_QWORD *)v14 + 1) = 13;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "total_flights_climbed";
  *((_QWORD *)v16 + 1) = 21;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "duration";
  *((_QWORD *)v18 + 1) = 8;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "date_range";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "total_swimming_stroke_count";
  *((_QWORD *)v22 + 1) = 27;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "average_heart_rate";
  *((_QWORD *)v24 + 1) = 18;
  v24[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBWorkout._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8A0, (uint64_t)qword_255543A88, a1);
}

uint64_t sub_21FB51174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for PBWorkout._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  *(_DWORD *)(v0 + 36) = 0;
  *(_DWORD *)(v0 + 40) = 0;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v2 = type metadata accessor for PBDateRange(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount) = 0;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate) = 0;
  qword_255543AA0 = v0;
  return result;
}

uint64_t type metadata accessor for PBCharacteristics(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545898);
}

uint64_t type metadata accessor for PBAllClinicalRecords(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555459C0);
}

uint64_t type metadata accessor for PBECGs(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546B10);
}

uint64_t type metadata accessor for PBCycleTracking(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546820);
}

uint64_t sub_21FB51254()
{
  uint64_t v0;

  sub_21FA2D1F8(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_25553E0F8, type metadata accessor for PBDateRange);
  return swift_deallocClassInstance();
}

uint64_t PBWorkout.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB52968(a1, a2, a3, type metadata accessor for PBWorkout, (void (*)(_QWORD))type metadata accessor for PBWorkout._StorageClass, sub_21FB8EAD4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB512C8);
}

uint64_t sub_21FB512C8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE48();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          sub_21FB9E410();
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 7:
        case 8:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE48();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBWorkout.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBWorkout, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB51558);
}

uint64_t sub_21FB51558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  unsigned int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - v4;
  v6 = type metadata accessor for PBDateRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = *(_DWORD *)(a1 + 16);
  v25 = v7;
  if (!v10 || (result = sub_21FC5AF38(), !v1))
  {
    swift_beginAccess();
    if (!*(_DWORD *)(a1 + 20) || (result = sub_21FC5AF38(), !v1))
    {
      v21 = v5;
      v22 = v9;
      v12 = swift_beginAccess();
      v13 = *(_QWORD *)(a1 + 24);
      v14 = *(_BYTE *)(a1 + 32);
      v23 = v13;
      v24 = v14;
      if (PBActivityType.rawValue.getter(v12))
      {
        v23 = v13;
        v24 = v14;
        sub_21FB9E410();
        result = sub_21FC5AED8();
        v15 = (uint64_t)v22;
        v16 = (uint64_t)v21;
        if (v1)
          return result;
      }
      else
      {
        v15 = (uint64_t)v22;
        v16 = (uint64_t)v21;
      }
      swift_beginAccess();
      if (!*(_DWORD *)(a1 + 36) || (result = sub_21FC5AF38(), !v1))
      {
        swift_beginAccess();
        if (!*(_DWORD *)(a1 + 40) || (result = sub_21FC5AF38(), !v1))
        {
          v17 = a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
          swift_beginAccess();
          sub_21FA44968(v17, v16, &qword_25553E0F8, type metadata accessor for PBDateRange);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v16, 1, v6) == 1)
          {
            sub_21FA2D1F8(v16, &qword_25553E0F8, type metadata accessor for PBDateRange);
          }
          else
          {
            sub_21FA2D23C(v16, v15, type metadata accessor for PBDateRange);
            sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
            sub_21FC5AF50();
            result = sub_21FA326EC(v15, type metadata accessor for PBDateRange);
            if (v1)
              return result;
          }
          v18 = (_DWORD *)(a1
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
          swift_beginAccess();
          if (!*v18 || (result = sub_21FC5AF38(), !v1))
          {
            v19 = (unsigned int *)(a1
                                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
            swift_beginAccess();
            result = *v19;
            if ((_DWORD)result)
              return sub_21FC5AF38();
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_21FB51948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  int *v46;
  int v47;
  _DWORD *v48;
  int *v49;
  int v50;
  _DWORD *v51;
  uint64_t v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;

  v59 = type metadata accessor for PBDateRange(0);
  v4 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v53 - v9;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v53 - v15;
  swift_beginAccess();
  v17 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(_DWORD *)(a2 + 16))
    return 0;
  v57 = v4;
  v58 = v16;
  v55 = v6;
  v56 = v14;
  v18 = v59;
  swift_beginAccess();
  v19 = *(_DWORD *)(a1 + 20);
  swift_beginAccess();
  if (v19 != *(_DWORD *)(a2 + 20))
    return 0;
  v20 = a2;
  v21 = a1;
  v54 = v10;
  swift_beginAccess();
  v22 = *(_QWORD *)(a1 + 24);
  v23 = *(_BYTE *)(a1 + 32);
  v24 = swift_beginAccess();
  v25 = *(_QWORD *)(v20 + 24);
  v26 = *(_BYTE *)(v20 + 32);
  v62 = v22;
  v63 = v23;
  v60 = v25;
  v61 = v26;
  v27 = PBActivityType.rawValue.getter(v24);
  if (v27 != PBActivityType.rawValue.getter(v27))
    return 0;
  swift_beginAccess();
  v28 = *(_DWORD *)(v21 + 36);
  swift_beginAccess();
  if (v28 != *(_DWORD *)(v20 + 36))
    return 0;
  swift_beginAccess();
  v29 = *(_DWORD *)(v21 + 40);
  swift_beginAccess();
  if (v29 != *(_DWORD *)(v20 + 40))
    return 0;
  v30 = v21
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  v31 = (uint64_t)v58;
  sub_21FA44968(v30, (uint64_t)v58, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v32 = v20
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  v33 = *(int *)(v8 + 48);
  v34 = v31;
  v35 = (uint64_t)v54;
  v36 = (uint64_t)&v54[v33];
  sub_21FA44968(v34, (uint64_t)v54, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA44968(v32, v36, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  v38 = v18;
  if (v37(v35, 1, v18) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8(v34, &qword_25553E0F8, type metadata accessor for PBDateRange);
    if (v37(v36, 1, v18) == 1)
    {
      sub_21FA2D1F8(v35, &qword_25553E0F8, type metadata accessor for PBDateRange);
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  v39 = v56;
  sub_21FA44968(v35, (uint64_t)v56, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if (v37(v36, 1, v38) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8(v34, &qword_25553E0F8, type metadata accessor for PBDateRange);
    sub_21FA326EC((uint64_t)v39, type metadata accessor for PBDateRange);
LABEL_11:
    sub_21FA48E3C(v35, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
    goto LABEL_15;
  }
  v40 = (uint64_t)v55;
  sub_21FA2D23C(v36, (uint64_t)v55, type metadata accessor for PBDateRange);
  swift_retain();
  swift_retain();
  v41 = v34;
  v42 = v20;
  v43 = v35;
  v44 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v39, v40);
  sub_21FA326EC(v40, type metadata accessor for PBDateRange);
  sub_21FA2D1F8(v41, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA326EC((uint64_t)v39, type metadata accessor for PBDateRange);
  v45 = v43;
  v20 = v42;
  sub_21FA2D1F8(v45, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((v44 & 1) != 0)
  {
LABEL_13:
    v46 = (int *)(v21
                + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
    swift_beginAccess();
    v47 = *v46;
    v48 = (_DWORD *)(v20
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
    swift_beginAccess();
    if (v47 == *v48)
    {
      v49 = (int *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
      swift_beginAccess();
      v50 = *v49;
      swift_release();
      v51 = (_DWORD *)(v20
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
      swift_beginAccess();
      LODWORD(v51) = *v51;
      swift_release();
      return v50 == (_DWORD)v51;
    }
  }
LABEL_15:
  swift_release();
  swift_release();
  return 0;
}

uint64_t PBWorkout.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBWorkout, &qword_2555446F8, (uint64_t)&protocol conformance descriptor for PBWorkout);
}

uint64_t sub_21FB51EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D8A8, &qword_255543AA0, a2);
}

unint64_t sub_21FB51F14()
{
  return 0xD000000000000022;
}

uint64_t sub_21FB51F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBWorkout.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB51F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBWorkout.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB51F58()
{
  sub_21FA2A08C(&qword_25554A660, type metadata accessor for PBWorkout, (uint64_t)&protocol conformance descriptor for PBWorkout);
  return sub_21FC5AD70();
}

uint64_t sub_21FB51FA8@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8A0, (uint64_t)qword_255543A88, a1);
}

uint64_t sub_21FB51FC4()
{
  sub_21FA2A08C(&qword_25553EB68, type metadata accessor for PBWorkout, (uint64_t)&protocol conformance descriptor for PBWorkout);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB52004()
{
  sub_21FA2A08C(&qword_25553EB68, type metadata accessor for PBWorkout, (uint64_t)&protocol conformance descriptor for PBWorkout);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB52054(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBWorkout, (uint64_t (*)(uint64_t, uint64_t))sub_21FB51948) & 1;
}

unint64_t static PBAllClinicalRecords.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB52098(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255543AA8, (uint64_t)"records", 7, MEMORY[0x24BE5C318]);
}

uint64_t static PBAllClinicalRecords._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8B0, (uint64_t)qword_255543AA8, a1);
}

uint64_t PBAllClinicalRecords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBClinicalRecord, &qword_255544700, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
}

uint64_t PBAllClinicalRecords.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBClinicalRecord, &qword_255544700, (uint64_t)&protocol conformance descriptor for PBClinicalRecord, (void (*)(_QWORD))type metadata accessor for PBAllClinicalRecords);
}

uint64_t PBAllClinicalRecords.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBAllClinicalRecords, &qword_255544708, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
}

unint64_t sub_21FB52150()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB5216C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBAllClinicalRecords.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB52180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBAllClinicalRecords.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB52194()
{
  sub_21FA2A08C(&qword_25554A658, type metadata accessor for PBAllClinicalRecords, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
  return sub_21FC5AD70();
}

uint64_t sub_21FB521E4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8B0, (uint64_t)qword_255543AA8, a1);
}

uint64_t sub_21FB52200()
{
  sub_21FA2A08C(&qword_25553EB58, type metadata accessor for PBAllClinicalRecords, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB52240()
{
  sub_21FA2A08C(&qword_25553EB58, type metadata accessor for PBAllClinicalRecords, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB52290(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB1136C, type metadata accessor for PBAllClinicalRecords) & 1;
}

unint64_t static PBClinicalRecord.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB522D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543AC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543AC0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_21FC66530;
  v6 = v41 + v5;
  v7 = v41 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v41 + v5) = 1;
  *(_QWORD *)v7 = "clinical_type_identifier";
  *(_QWORD *)(v7 + 8) = 24;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "fhir_resource";
  *(_QWORD *)(v11 + 8) = 13;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "primary_concept";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "allergy_record";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "condition_record";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "vaccination_record";
  *((_QWORD *)v19 + 1) = 18;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "medication_dispense_record";
  *((_QWORD *)v21 + 1) = 26;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "medication_order";
  *((_QWORD *)v23 + 1) = 16;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 10;
  *(_QWORD *)v24 = "diagnostic_test_result";
  *(_QWORD *)(v24 + 8) = 22;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 11;
  *(_QWORD *)v26 = "diagnostic_test_report";
  *((_QWORD *)v26 + 1) = 22;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 12;
  *(_QWORD *)v28 = "account_owner";
  *((_QWORD *)v28 + 1) = 13;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v6 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 13;
  *(_QWORD *)v30 = "procedure_record";
  *((_QWORD *)v30 + 1) = 16;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v6 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 16;
  *(_QWORD *)v32 = "medication_record";
  *((_QWORD *)v32 + 1) = 17;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v6 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "source";
  *((_QWORD *)v34 + 1) = 6;
  v34[16] = 2;
  v10();
  v35 = (_QWORD *)(v6 + 14 * v4);
  v36 = (char *)v35 + *(int *)(v2 + 48);
  *v35 = 17;
  *(_QWORD *)v36 = "gateway_id";
  *((_QWORD *)v36 + 1) = 10;
  v36[16] = 2;
  v10();
  v37 = (_QWORD *)(v6 + 15 * v4);
  v38 = (char *)v37 + *(int *)(v2 + 48);
  *v37 = 18;
  *(_QWORD *)v38 = "ios_derived_display_name";
  *((_QWORD *)v38 + 1) = 24;
  v38[16] = 2;
  v10();
  v39 = v6 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 16 * v4) = 19;
  *(_QWORD *)v39 = "medical_record_origin_type";
  *(_QWORD *)(v39 + 8) = 26;
  *(_BYTE *)(v39 + 16) = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBClinicalRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8B8, (uint64_t)qword_255543AC0, a1);
}

uint64_t sub_21FB52794()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;

  type metadata accessor for PBClinicalRecord._StorageClass(0);
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  v1 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  v2 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  v4 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)((char *)v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  v7 = (_QWORD *)((char *)v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  v8 = (_QWORD *)((char *)v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  qword_255543AD8 = (uint64_t)v0;
  return result;
}

uint64_t sub_21FB52888()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBClinicalRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB52968(a1, a2, a3, type metadata accessor for PBClinicalRecord, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E53C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB52A58);
}

uint64_t sub_21FB52968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = v7;
  v14 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v15 = swift_retain();
    v16 = a6(v15);
    swift_release();
    *(_QWORD *)(v10 + v14) = v16;
    swift_release();
  }
  v17 = swift_retain();
  a7(v17, a1, a2, a3);
  return swift_release();
}

uint64_t sub_21FB52A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t result;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  void (*v173)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  void (*v180)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v183;
  void (*v184)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  char *v188;
  void (*v189)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  void (*v192)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  void (*v195)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  unint64_t *v398;
  uint64_t (*v399)(uint64_t);
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  char *v404;
  char *v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  char *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  char *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  char *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;

  v502 = a4;
  v503 = a3;
  v504 = a2;
  v505 = a1;
  v481 = type metadata accessor for PBHKMedicationRecord(0);
  v469 = *(_QWORD *)(v481 - 8);
  v4 = MEMORY[0x24BDAC7A8](v481);
  v420 = (uint64_t)&v400 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v418 = (uint64_t)&v400 - v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554A770, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v447 = (uint64_t)&v400 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v463 = (uint64_t)&v400 - v12;
  v485 = type metadata accessor for PBHKProcedureRecord(0);
  v478 = *(_QWORD *)(v485 - 8);
  v13 = MEMORY[0x24BDAC7A8](v485);
  v419 = (uint64_t)&v400 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v410 = (uint64_t)&v400 - v15;
  sub_21FA2D1A0(0, &qword_25554A778, v16, v7);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v448 = (char *)&v400 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v460 = (char *)&v400 - v20;
  v484 = type metadata accessor for PBHKAccountOwner(0);
  v477 = *(_QWORD *)(v484 - 8);
  v21 = MEMORY[0x24BDAC7A8](v484);
  v428 = (uint64_t)&v400 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v417 = (uint64_t)&v400 - v23;
  sub_21FA2D1A0(0, &qword_25554A780, v24, v7);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v500 = (uint64_t)&v400 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v461 = (char *)&v400 - v28;
  v483 = type metadata accessor for PBHKDiagnosticTestReport(0);
  v476 = *(_QWORD *)(v483 - 8);
  v29 = MEMORY[0x24BDAC7A8](v483);
  v427 = (uint64_t)&v400 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v416 = (uint64_t)&v400 - v31;
  sub_21FA2D1A0(0, &qword_25554A788, v32, v7);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v449 = (char *)&v400 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v490 = (uint64_t)&v400 - v36;
  v479 = type metadata accessor for PBHKDiagnosticTestResult(0);
  v475 = *(_QWORD *)(v479 - 8);
  v37 = MEMORY[0x24BDAC7A8](v479);
  v426 = (uint64_t)&v400 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v415 = (uint64_t)&v400 - v39;
  sub_21FA2D1A0(0, &qword_25554A790, v40, v7);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v446 = (uint64_t)&v400 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v480 = (uint64_t)&v400 - v44;
  v495 = type metadata accessor for PBHKMedicationOrder(0);
  v474 = *(_QWORD *)(v495 - 8);
  v45 = MEMORY[0x24BDAC7A8](v495);
  v425 = (uint64_t)&v400 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v414 = (uint64_t)&v400 - v47;
  sub_21FA2D1A0(0, &qword_25554A798, v48, v7);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v445 = (uint64_t)&v400 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50);
  v489 = (uint64_t)&v400 - v52;
  v496 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  v473 = *(_QWORD *)(v496 - 8);
  v53 = MEMORY[0x24BDAC7A8](v496);
  v424 = (uint64_t)&v400 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53);
  v413 = (uint64_t)&v400 - v55;
  sub_21FA2D1A0(0, &qword_25554A7A0, v56, v7);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v444 = (uint64_t)&v400 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v58);
  v488 = (uint64_t)&v400 - v60;
  v482 = type metadata accessor for PBHKVaccinationRecord(0);
  v472 = *(_QWORD *)(v482 - 8);
  v61 = MEMORY[0x24BDAC7A8](v482);
  v423 = (uint64_t)&v400 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v61);
  v412 = (uint64_t)&v400 - v63;
  sub_21FA2D1A0(0, &qword_25554A7A8, v64, v7);
  v66 = MEMORY[0x24BDAC7A8](v65);
  v443 = (uint64_t)&v400 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v66);
  v487 = (uint64_t)&v400 - v68;
  v462 = type metadata accessor for PBHKConditionRecord(0);
  v471 = *(_QWORD *)(v462 - 8);
  v69 = MEMORY[0x24BDAC7A8](v462);
  v422 = (uint64_t)&v400 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v69);
  v411 = (uint64_t)&v400 - v71;
  sub_21FA2D1A0(0, &qword_25554A7B0, v72, v7);
  v74 = MEMORY[0x24BDAC7A8](v73);
  v442 = (uint64_t)&v400 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v74);
  v486 = (uint64_t)&v400 - v76;
  v459 = type metadata accessor for PBHKAllergyRecord(0);
  v470 = *(_QWORD *)(v459 - 8);
  v77 = MEMORY[0x24BDAC7A8](v459);
  v421 = (uint64_t)&v400 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v77);
  v409 = (uint64_t)&v400 - v79;
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, v7);
  v81 = MEMORY[0x24BDAC7A8](v80);
  v458 = (uint64_t)&v400 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = MEMORY[0x24BDAC7A8](v81);
  v494 = (char *)&v400 - v84;
  v85 = MEMORY[0x24BDAC7A8](v83);
  v457 = (uint64_t)&v400 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  v456 = (uint64_t)&v400 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  v455 = (uint64_t)&v400 - v90;
  v91 = MEMORY[0x24BDAC7A8](v89);
  v454 = (uint64_t)&v400 - v92;
  v93 = MEMORY[0x24BDAC7A8](v91);
  v453 = (uint64_t)&v400 - v94;
  v95 = MEMORY[0x24BDAC7A8](v93);
  v452 = (uint64_t)&v400 - v96;
  v97 = MEMORY[0x24BDAC7A8](v95);
  v451 = (uint64_t)&v400 - v98;
  v99 = MEMORY[0x24BDAC7A8](v97);
  v492 = (uint64_t)&v400 - v100;
  v101 = MEMORY[0x24BDAC7A8](v99);
  v491 = (uint64_t)&v400 - v102;
  MEMORY[0x24BDAC7A8](v101);
  v450 = (uint64_t)&v400 - v103;
  v501 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  v499 = *(_QWORD *)(v501 - 8);
  v104 = MEMORY[0x24BDAC7A8](v501);
  v434 = (uint64_t)&v400 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = MEMORY[0x24BDAC7A8](v104);
  v440 = (uint64_t)&v400 - v107;
  v108 = MEMORY[0x24BDAC7A8](v106);
  v433 = (uint64_t)&v400 - v109;
  v110 = MEMORY[0x24BDAC7A8](v108);
  v439 = (uint64_t)&v400 - v111;
  v112 = MEMORY[0x24BDAC7A8](v110);
  v432 = (uint64_t)&v400 - v113;
  v114 = MEMORY[0x24BDAC7A8](v112);
  v438 = (uint64_t)&v400 - v115;
  v116 = MEMORY[0x24BDAC7A8](v114);
  v437 = (uint64_t)&v400 - v117;
  v118 = MEMORY[0x24BDAC7A8](v116);
  v436 = (uint64_t)&v400 - v119;
  v120 = MEMORY[0x24BDAC7A8](v118);
  v431 = (uint64_t)&v400 - v121;
  v122 = MEMORY[0x24BDAC7A8](v120);
  v435 = (uint64_t)&v400 - v123;
  v124 = MEMORY[0x24BDAC7A8](v122);
  v430 = (uint64_t)&v400 - v125;
  v126 = MEMORY[0x24BDAC7A8](v124);
  v128 = (char *)&v400 - v127;
  v129 = MEMORY[0x24BDAC7A8](v126);
  v131 = (char *)&v400 - v130;
  v132 = MEMORY[0x24BDAC7A8](v129);
  v134 = (char *)&v400 - v133;
  v135 = MEMORY[0x24BDAC7A8](v132);
  v137 = (char *)&v400 - v136;
  v138 = MEMORY[0x24BDAC7A8](v135);
  v140 = (char *)&v400 - v139;
  v141 = MEMORY[0x24BDAC7A8](v138);
  v143 = (char *)&v400 - v142;
  v144 = MEMORY[0x24BDAC7A8](v141);
  v146 = (char *)&v400 - v145;
  v147 = MEMORY[0x24BDAC7A8](v144);
  v429 = (uint64_t)&v400 - v148;
  MEMORY[0x24BDAC7A8](v147);
  v497 = (char *)&v400 - v149;
  sub_21FA2D1A0(0, &qword_25554A7B8, type metadata accessor for PBHKAllergyRecord, v7);
  v151 = MEMORY[0x24BDAC7A8](v150);
  v441 = (uint64_t)&v400 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v151);
  v154 = (char *)&v400 - v153;
  v468 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  v467 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName;
  v466 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID;
  v465 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source;
  v464 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  v498 = v505
       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  v155 = (uint64_t)v493;
  result = sub_21FC5AD88();
  v158 = v155;
  if (v155)
  {
LABEL_2:
    v505 = v158;
    return result;
  }
  v493 = v154;
  v403 = v146;
  v400 = v143;
  v404 = v140;
  v401 = v137;
  v405 = v134;
  v402 = v131;
  v406 = v128;
  v468 += v505;
  v467 += v505;
  v466 += v505;
  v465 += v505;
  v464 += v505;
  v408 = v505 + 32;
  v407 = v505 + 16;
  v159 = v502;
  v160 = v500;
  v161 = v495;
  v162 = v496;
  v163 = v494;
  v505 = 0;
  v164 = v497;
  while (2)
  {
    if ((v157 & 1) != 0)
      return result;
    switch(result)
    {
      case 1:
        swift_beginAccess();
        v166 = v505;
        sub_21FC5AE3C();
        result = swift_endAccess();
        v505 = v166;
        if (!v166)
          goto LABEL_5;
        return result;
      case 2:
        v167 = v159;
        v168 = v162;
        v169 = v163;
        goto LABEL_38;
      case 3:
        swift_beginAccess();
        type metadata accessor for PBHKConcept(0);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        v170 = v505;
        sub_21FC5AE60();
        v505 = v170;
        if (v170)
          return swift_endAccess();
        swift_endAccess();
        v160 = v500;
        v161 = v495;
        v162 = v496;
        v163 = v494;
        v164 = v497;
        v159 = v502;
        goto LABEL_6;
      case 4:
        v171 = (uint64_t)v164;
        v172 = v163;
        v173 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v470 + 56);
        v174 = v459;
        v173(v493, 1, 1, v459);
        v175 = v450;
        sub_21FA44968(v498, v450, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v175, 1, v501) == 1)
        {
          sub_21FA2D1F8(v175, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          sub_21FA2D23C(v175, v171, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v205 = v505;
          sub_21FC5AD94();
          v505 = v205;
          if (v205)
          {
            sub_21FA326EC(v171, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A7B8;
            v399 = type metadata accessor for PBHKAllergyRecord;
            v353 = (uint64_t)v493;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v206 = v429;
          sub_21FA2D23C(v171, v429, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload())
          {
            sub_21FA326EC(v206, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            v386 = (uint64_t)v493;
            sub_21FA2D1F8((uint64_t)v493, &qword_25554A7B8, type metadata accessor for PBHKAllergyRecord);
            v387 = v409;
            sub_21FA2D23C(v206, v409, type metadata accessor for PBHKAllergyRecord);
            sub_21FA2D23C(v387, v386, type metadata accessor for PBHKAllergyRecord);
            v173((char *)v386, 0, 1, v174);
          }
        }
        sub_21FA2A08C(&qword_255544C00, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
        v388 = (uint64_t)v493;
        v389 = v505;
        sub_21FC5AE60();
        v505 = v389;
        if (v389)
        {
          v398 = &qword_25554A7B8;
          v399 = type metadata accessor for PBHKAllergyRecord;
          v353 = v388;
          return sub_21FA2D1F8(v353, v398, v399);
        }
        v390 = v388;
        v391 = v441;
        sub_21FA2D280(v390, v441, &qword_25554A7B8, type metadata accessor for PBHKAllergyRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v470 + 48))(v391, 1, v174) == 1)
        {
          sub_21FA2D1F8(v391, &qword_25554A7B8, type metadata accessor for PBHKAllergyRecord);
          v159 = v502;
          v160 = v500;
          v163 = v172;
          v162 = v496;
          v164 = v497;
          v161 = v495;
          goto LABEL_6;
        }
        v392 = v421;
        sub_21FA2D23C(v391, v421, type metadata accessor for PBHKAllergyRecord);
        v394 = v491;
        v393 = v492;
        v163 = v494;
        sub_21FA2D23C(v392, v491, type metadata accessor for PBHKAllergyRecord);
        v395 = v501;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v394, 0, 1, v395);
        sub_21FA2D280(v394, v393, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        v396 = v498;
        swift_beginAccess();
        v397 = v396;
        v161 = v495;
        sub_21FA2D2D8(v393, v397, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        swift_endAccess();
        v159 = v502;
        v160 = v500;
        goto LABEL_130;
      case 5:
        v176 = v161;
        v177 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 56);
        v178 = v462;
        v177(v486, 1, 1, v462);
        v179 = v451;
        sub_21FA44968(v498, v451, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v179, 1, v501) == 1)
        {
          sub_21FA2D1F8(v179, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v207 = v162;
          v208 = v163;
          v209 = (uint64_t)v403;
          sub_21FA2D23C(v179, (uint64_t)v403, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v210 = v505;
          sub_21FC5AD94();
          v505 = v210;
          if (v210)
          {
            sub_21FA326EC(v209, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A7B0;
            v399 = type metadata accessor for PBHKConditionRecord;
            v353 = v486;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v211 = v209;
          v212 = (uint64_t)v400;
          sub_21FA2D23C(v211, (uint64_t)v400, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v213 = v486;
            sub_21FA2D1F8(v486, &qword_25554A7B0, type metadata accessor for PBHKConditionRecord);
            v214 = v212;
            v215 = v411;
            sub_21FA2D23C(v214, v411, type metadata accessor for PBHKConditionRecord);
            sub_21FA2D23C(v215, v213, type metadata accessor for PBHKConditionRecord);
            v216 = v462;
            v177(v213, 0, 1, v462);
            v163 = v208;
            v162 = v207;
            v178 = v216;
          }
          else
          {
            sub_21FA326EC(v212, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v163 = v208;
            v162 = v207;
            v178 = v462;
          }
        }
        sub_21FA2A08C(&qword_255544C30, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
        v279 = v486;
        v280 = v505;
        sub_21FC5AE60();
        v505 = v280;
        if (v280)
        {
          v398 = &qword_25554A7B0;
          v399 = type metadata accessor for PBHKConditionRecord;
          v353 = v279;
          return sub_21FA2D1F8(v353, v398, v399);
        }
        v281 = v279;
        v282 = v442;
        sub_21FA2D280(v281, v442, &qword_25554A7B0, type metadata accessor for PBHKConditionRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v471 + 48))(v282, 1, v178) == 1)
        {
          sub_21FA2D1F8(v282, &qword_25554A7B0, type metadata accessor for PBHKConditionRecord);
          v164 = v497;
          v159 = v502;
          v161 = v176;
        }
        else
        {
          v283 = v282;
          v284 = v422;
          sub_21FA2D23C(v283, v422, type metadata accessor for PBHKConditionRecord);
          v285 = v284;
          v286 = v491;
          sub_21FA2D23C(v285, v491, type metadata accessor for PBHKConditionRecord);
          v287 = v162;
          v288 = v501;
          swift_storeEnumTagMultiPayload();
          v289 = v288;
          v162 = v287;
          v290 = v495;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v286, 0, 1, v289);
          v291 = v492;
          sub_21FA2D280(v286, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v292 = v498;
          swift_beginAccess();
          v161 = v290;
          sub_21FA2D2D8(v291, v292, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_endAccess();
          v164 = v497;
          v159 = v502;
        }
        goto LABEL_5;
      case 6:
        v180 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v472 + 56);
        v180(v487, 1, 1, v482);
        v181 = v452;
        sub_21FA44968(v498, v452, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v181, 1, v501) == 1)
        {
          sub_21FA2D1F8(v181, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v217 = v181;
          v218 = (uint64_t)v404;
          sub_21FA2D23C(v217, (uint64_t)v404, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v219 = v505;
          sub_21FC5AD94();
          v505 = v219;
          if (v219)
          {
            sub_21FA326EC(v218, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A7A8;
            v399 = type metadata accessor for PBHKVaccinationRecord;
            v353 = v487;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v220 = (uint64_t)v401;
          sub_21FA2D23C(v218, (uint64_t)v401, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            v221 = v487;
            sub_21FA2D1F8(v487, &qword_25554A7A8, type metadata accessor for PBHKVaccinationRecord);
            v159 = v502;
            v222 = v412;
            sub_21FA2D23C(v220, v412, type metadata accessor for PBHKVaccinationRecord);
            sub_21FA2D23C(v222, v221, type metadata accessor for PBHKVaccinationRecord);
            v180(v221, 0, 1, v482);
          }
          else
          {
            sub_21FA326EC(v220, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
        }
        sub_21FA2A08C(&qword_255544C48, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
        v197 = v487;
        v293 = v482;
        v294 = v505;
        sub_21FC5AE60();
        v505 = v294;
        if (v294)
        {
          v398 = &qword_25554A7A8;
          v399 = type metadata accessor for PBHKVaccinationRecord;
          goto LABEL_153;
        }
        v295 = v197;
        v296 = v443;
        sub_21FA2D280(v295, v443, &qword_25554A7A8, type metadata accessor for PBHKVaccinationRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v472 + 48))(v296, 1, v293) == 1)
        {
          sub_21FA2D1F8(v296, &qword_25554A7A8, type metadata accessor for PBHKVaccinationRecord);
        }
        else
        {
          v297 = v296;
          v298 = v423;
          sub_21FA2D23C(v297, v423, type metadata accessor for PBHKVaccinationRecord);
          v299 = v298;
          v300 = v491;
          sub_21FA2D23C(v299, v491, type metadata accessor for PBHKVaccinationRecord);
          v301 = v162;
          v302 = v501;
          swift_storeEnumTagMultiPayload();
          v303 = v302;
          v162 = v301;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v300, 0, 1, v303);
          v304 = v492;
          sub_21FA2D280(v300, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v305 = v498;
          swift_beginAccess();
          sub_21FA2D2D8(v304, v305, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_endAccess();
        }
        v160 = v500;
        v163 = v494;
        v161 = v495;
        v164 = v497;
        goto LABEL_6;
      case 7:
        v182 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v473 + 56);
        v182(v488, 1, 1, v162);
        v183 = v453;
        sub_21FA44968(v498, v453, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v183, 1, v501) == 1)
        {
          sub_21FA2D1F8(v183, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v223 = v183;
          v224 = (uint64_t)v405;
          sub_21FA2D23C(v223, (uint64_t)v405, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v225 = v505;
          sub_21FC5AD94();
          v505 = v225;
          if (v225)
          {
            sub_21FA326EC(v224, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A7A0;
            v399 = type metadata accessor for PBHKMedicationDispenseRecord;
            v353 = v488;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v226 = v224;
          v227 = (uint64_t)v402;
          sub_21FA2D23C(v226, (uint64_t)v402, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 3)
          {
            v228 = v161;
            v229 = v227;
            v230 = v488;
            sub_21FA2D1F8(v488, &qword_25554A7A0, type metadata accessor for PBHKMedicationDispenseRecord);
            v231 = v229;
            v161 = v228;
            v159 = v502;
            v232 = v162;
            v233 = v163;
            v234 = v413;
            sub_21FA2D23C(v231, v413, type metadata accessor for PBHKMedicationDispenseRecord);
            v235 = v234;
            v163 = v233;
            v162 = v232;
            sub_21FA2D23C(v235, v230, type metadata accessor for PBHKMedicationDispenseRecord);
            v182(v230, 0, 1, v232);
          }
          else
          {
            sub_21FA326EC(v227, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
        }
        sub_21FA2A08C(&qword_255544CC0, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
        v306 = v488;
        v307 = v505;
        sub_21FC5AE60();
        v505 = v307;
        if (v307)
        {
          v398 = &qword_25554A7A0;
          v399 = type metadata accessor for PBHKMedicationDispenseRecord;
          v353 = v306;
          return sub_21FA2D1F8(v353, v398, v399);
        }
        v308 = v306;
        v309 = v444;
        sub_21FA2D280(v308, v444, &qword_25554A7A0, type metadata accessor for PBHKMedicationDispenseRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v473 + 48))(v309, 1, v162) == 1)
        {
          sub_21FA2D1F8(v309, &qword_25554A7A0, type metadata accessor for PBHKMedicationDispenseRecord);
          v160 = v500;
          v164 = v497;
          goto LABEL_6;
        }
        v310 = v309;
        v311 = v424;
        sub_21FA2D23C(v310, v424, type metadata accessor for PBHKMedicationDispenseRecord);
        v312 = v311;
        v313 = v491;
        sub_21FA2D23C(v312, v491, type metadata accessor for PBHKMedicationDispenseRecord);
        v314 = v162;
        v315 = v501;
        swift_storeEnumTagMultiPayload();
        v316 = v315;
        v162 = v314;
        v317 = v497;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v313, 0, 1, v316);
        v318 = v492;
        sub_21FA2D280(v313, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        v319 = v498;
        swift_beginAccess();
        v320 = v318;
        v164 = v317;
        sub_21FA2D2D8(v320, v319, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        swift_endAccess();
        goto LABEL_5;
      case 8:
        v184 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v474 + 56);
        v184(v489, 1, 1, v161);
        v185 = v454;
        sub_21FA44968(v498, v454, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v185, 1, v501) == 1)
        {
          sub_21FA2D1F8(v185, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v236 = (uint64_t)v406;
          sub_21FA2D23C(v185, (uint64_t)v406, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v237 = v505;
          sub_21FC5AD94();
          v505 = v237;
          if (v237)
          {
            sub_21FA326EC(v236, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A798;
            v399 = type metadata accessor for PBHKMedicationOrder;
            v353 = v489;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v238 = v236;
          v239 = v430;
          sub_21FA2D23C(v238, v430, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            v240 = v489;
            sub_21FA2D1F8(v489, &qword_25554A798, type metadata accessor for PBHKMedicationOrder);
            v241 = v161;
            v242 = v159;
            v243 = v163;
            v244 = v414;
            sub_21FA2D23C(v239, v414, type metadata accessor for PBHKMedicationOrder);
            v245 = v244;
            v163 = v243;
            v159 = v242;
            v161 = v241;
            sub_21FA2D23C(v245, v240, type metadata accessor for PBHKMedicationOrder);
            v184(v240, 0, 1, v241);
          }
          else
          {
            sub_21FA326EC(v239, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
        }
        v164 = v497;
        sub_21FA2A08C(&qword_255544CD8, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
        v321 = v489;
        v322 = v505;
        sub_21FC5AE60();
        v505 = v322;
        if (v322)
        {
          v398 = &qword_25554A798;
          v399 = type metadata accessor for PBHKMedicationOrder;
          v353 = v321;
          return sub_21FA2D1F8(v353, v398, v399);
        }
        v323 = v321;
        v324 = v445;
        sub_21FA2D280(v323, v445, &qword_25554A798, type metadata accessor for PBHKMedicationOrder);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v474 + 48))(v324, 1, v161) == 1)
        {
          sub_21FA2D1F8(v324, &qword_25554A798, type metadata accessor for PBHKMedicationOrder);
        }
        else
        {
          v325 = v324;
          v326 = v425;
          sub_21FA2D23C(v325, v425, type metadata accessor for PBHKMedicationOrder);
          v327 = v326;
          v328 = v491;
          sub_21FA2D23C(v327, v491, type metadata accessor for PBHKMedicationOrder);
          v329 = v501;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v328, 0, 1, v329);
          v330 = v328;
          v159 = v502;
          v332 = v497;
          v331 = v498;
          v333 = v492;
          sub_21FA2D280(v330, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_beginAccess();
          v334 = v333;
          v164 = v332;
          sub_21FA2D2D8(v334, v331, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_endAccess();
        }
        v162 = v496;
        goto LABEL_5;
      case 10:
        v186 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v475 + 56);
        v186(v480, 1, 1, v479);
        v187 = v455;
        sub_21FA44968(v498, v455, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v187, 1, v501) == 1)
        {
          v188 = v163;
          sub_21FA2D1F8(v187, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v246 = v187;
          v247 = v435;
          sub_21FA2D23C(v246, v435, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v248 = v505;
          sub_21FC5AD94();
          v505 = v248;
          if (v248)
          {
            sub_21FA326EC(v247, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A790;
            v399 = type metadata accessor for PBHKDiagnosticTestResult;
            v353 = v480;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v188 = v163;
          v249 = v247;
          v250 = v431;
          sub_21FA2D23C(v249, v431, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v251 = v480;
            sub_21FA2D1F8(v480, &qword_25554A790, type metadata accessor for PBHKDiagnosticTestResult);
            v252 = v415;
            sub_21FA2D23C(v250, v415, type metadata accessor for PBHKDiagnosticTestResult);
            sub_21FA2D23C(v252, v251, type metadata accessor for PBHKDiagnosticTestResult);
            v253 = v479;
            v186(v251, 0, 1, v479);
            goto LABEL_96;
          }
          sub_21FA326EC(v250, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        v251 = v480;
        v253 = v479;
LABEL_96:
        sub_21FA2A08C(&qword_255544CF0, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
        v335 = v505;
        sub_21FC5AE60();
        v505 = v335;
        if (v335)
        {
          v398 = &qword_25554A790;
          v399 = type metadata accessor for PBHKDiagnosticTestResult;
          v353 = v251;
          return sub_21FA2D1F8(v353, v398, v399);
        }
        v336 = v251;
        v337 = v446;
        sub_21FA2D280(v336, v446, &qword_25554A790, type metadata accessor for PBHKDiagnosticTestResult);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v475 + 48))(v337, 1, v253) == 1)
        {
          sub_21FA2D1F8(v337, &qword_25554A790, type metadata accessor for PBHKDiagnosticTestResult);
        }
        else
        {
          v338 = v426;
          sub_21FA2D23C(v337, v426, type metadata accessor for PBHKDiagnosticTestResult);
          v339 = v491;
          sub_21FA2D23C(v338, v491, type metadata accessor for PBHKDiagnosticTestResult);
          v340 = v501;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v339, 0, 1, v340);
          v341 = v492;
          sub_21FA2D280(v339, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v342 = v498;
          swift_beginAccess();
          sub_21FA2D2D8(v341, v342, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_endAccess();
        }
        v159 = v502;
        v160 = v500;
        v163 = v188;
        v161 = v495;
        v162 = v496;
        v164 = v497;
        goto LABEL_6;
      case 11:
        v189 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v476 + 56);
        v189(v490, 1, 1, v483);
        v190 = v456;
        sub_21FA44968(v498, v456, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v190, 1, v501) == 1)
        {
          v191 = (uint64_t)v449;
          sub_21FA2D1F8(v190, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v254 = v190;
          v255 = v436;
          sub_21FA2D23C(v254, v436, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v256 = v505;
          sub_21FC5AD94();
          v257 = v437;
          v505 = v256;
          if (v256)
          {
            sub_21FA326EC(v255, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A788;
            v399 = type metadata accessor for PBHKDiagnosticTestReport;
            v353 = v490;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v191 = (uint64_t)v449;
          sub_21FA2D23C(v255, v437, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            v258 = v490;
            sub_21FA2D1F8(v490, &qword_25554A788, type metadata accessor for PBHKDiagnosticTestReport);
            v259 = v416;
            sub_21FA2D23C(v257, v416, type metadata accessor for PBHKDiagnosticTestReport);
            sub_21FA2D23C(v259, v258, type metadata accessor for PBHKDiagnosticTestReport);
            v189(v258, 0, 1, v483);
          }
          else
          {
            sub_21FA326EC(v257, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
        }
        sub_21FA2A08C(&qword_255544D98, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
        v197 = v490;
        v343 = v483;
        v344 = v505;
        sub_21FC5AE60();
        v505 = v344;
        if (v344)
        {
          v398 = &qword_25554A788;
          v399 = type metadata accessor for PBHKDiagnosticTestReport;
          goto LABEL_153;
        }
        sub_21FA2D280(v197, v191, &qword_25554A788, type metadata accessor for PBHKDiagnosticTestReport);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v476 + 48))(v191, 1, v343) == 1)
        {
          sub_21FA2D1F8(v191, &qword_25554A788, type metadata accessor for PBHKDiagnosticTestReport);
        }
        else
        {
          v345 = v427;
          sub_21FA2D23C(v191, v427, type metadata accessor for PBHKDiagnosticTestReport);
          v346 = v345;
          v347 = v491;
          sub_21FA2D23C(v346, v491, type metadata accessor for PBHKDiagnosticTestReport);
          v348 = v501;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v347, 0, 1, v348);
          v349 = v492;
          sub_21FA2D280(v347, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v350 = v498;
          swift_beginAccess();
          sub_21FA2D2D8(v349, v350, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_endAccess();
        }
        v161 = v495;
        v162 = v496;
        v163 = v494;
        v164 = v497;
        v159 = v502;
        goto LABEL_5;
      case 12:
        v192 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v477 + 56);
        v193 = (uint64_t)v461;
        v192(v461, 1, 1, v484);
        v194 = v457;
        sub_21FA44968(v498, v457, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v194, 1, v501) == 1)
        {
          sub_21FA2D1F8(v194, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v260 = v194;
          v261 = v438;
          sub_21FA2D23C(v260, v438, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v262 = v505;
          sub_21FC5AD94();
          v505 = v262;
          if (v262)
          {
            sub_21FA326EC(v261, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A780;
            v399 = type metadata accessor for PBHKAccountOwner;
            v353 = v193;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v263 = v261;
          v264 = v432;
          sub_21FA2D23C(v263, v432, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 7)
          {
            sub_21FA2D1F8(v193, &qword_25554A780, type metadata accessor for PBHKAccountOwner);
            v265 = v264;
            v266 = v417;
            sub_21FA2D23C(v265, v417, type metadata accessor for PBHKAccountOwner);
            v163 = v494;
            v161 = v495;
            v159 = v502;
            sub_21FA2D23C(v266, v193, type metadata accessor for PBHKAccountOwner);
            v192((char *)v193, 0, 1, v484);
          }
          else
          {
            sub_21FA326EC(v264, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
        }
        sub_21FA2A08C(&qword_255544DB0, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
        v351 = v484;
        v352 = v505;
        sub_21FC5AE60();
        v353 = v193;
        v505 = v352;
        if (v352)
        {
          v398 = &qword_25554A780;
          v399 = type metadata accessor for PBHKAccountOwner;
          return sub_21FA2D1F8(v353, v398, v399);
        }
        v354 = v163;
        v355 = v500;
        sub_21FA2D280(v193, v500, &qword_25554A780, type metadata accessor for PBHKAccountOwner);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v477 + 48))(v355, 1, v351) == 1)
        {
          sub_21FA2D1F8(v355, &qword_25554A780, type metadata accessor for PBHKAccountOwner);
        }
        else
        {
          v356 = v428;
          sub_21FA2D23C(v355, v428, type metadata accessor for PBHKAccountOwner);
          v357 = v356;
          v358 = v491;
          sub_21FA2D23C(v357, v491, type metadata accessor for PBHKAccountOwner);
          v359 = v501;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v358, 0, 1, v359);
          v360 = v492;
          sub_21FA2D280(v358, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v361 = v161;
          v362 = v159;
          v363 = v498;
          swift_beginAccess();
          v364 = v363;
          v159 = v362;
          v161 = v361;
          sub_21FA2D2D8(v360, v364, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_endAccess();
        }
        v160 = v355;
        v163 = v354;
        goto LABEL_130;
      case 13:
        v195 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v478 + 56);
        v196 = (uint64_t)v163;
        v197 = (uint64_t)v460;
        v195(v460, 1, 1, v485);
        sub_21FA44968(v498, v196, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v196, 1, v501) == 1)
        {
          sub_21FA2D1F8(v196, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_114:
          v365 = (uint64_t)v448;
          sub_21FA2A08C(&qword_255544DC8, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
          v366 = v485;
          v367 = v505;
          sub_21FC5AE60();
          v505 = v367;
          if (v367)
            goto LABEL_152;
          sub_21FA2D280(v197, v365, &qword_25554A778, type metadata accessor for PBHKProcedureRecord);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v478 + 48))(v365, 1, v366) == 1)
          {
            sub_21FA2D1F8(v365, &qword_25554A778, type metadata accessor for PBHKProcedureRecord);
          }
          else
          {
            v368 = v419;
            sub_21FA2D23C(v365, v419, type metadata accessor for PBHKProcedureRecord);
            v369 = v161;
            v370 = v159;
            v371 = v491;
            sub_21FA2D23C(v368, v491, type metadata accessor for PBHKProcedureRecord);
            v372 = v501;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v371, 0, 1, v372);
            v373 = v492;
            sub_21FA2D280(v371, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v374 = v498;
            swift_beginAccess();
            v159 = v370;
            v161 = v369;
            sub_21FA2D2D8(v373, v374, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          v160 = v500;
LABEL_124:
          v163 = v494;
LABEL_130:
          v162 = v496;
          v164 = v497;
LABEL_6:
          v165 = v505;
          result = sub_21FC5AD88();
          v505 = v165;
          if (v165)
          {
            v158 = v505;
            goto LABEL_2;
          }
          continue;
        }
        v267 = v439;
        sub_21FA2D23C(v196, v439, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        v268 = v505;
        sub_21FC5AD94();
        v505 = v268;
        if (!v268)
        {
          v269 = v433;
          sub_21FA2D23C(v267, v433, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 8)
          {
            sub_21FA2D1F8(v197, &qword_25554A778, type metadata accessor for PBHKProcedureRecord);
            v270 = v410;
            sub_21FA2D23C(v269, v410, type metadata accessor for PBHKProcedureRecord);
            sub_21FA2D23C(v270, v197, type metadata accessor for PBHKProcedureRecord);
            v195((char *)v197, 0, 1, v485);
          }
          else
          {
            sub_21FA326EC(v269, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          goto LABEL_114;
        }
        sub_21FA326EC(v267, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_152:
        v398 = &qword_25554A778;
        v399 = type metadata accessor for PBHKProcedureRecord;
LABEL_153:
        v353 = v197;
        return sub_21FA2D1F8(v353, v398, v399);
      case 14:
        swift_beginAccess();
        v198 = v505;
        sub_21FC5AE3C();
        v505 = v198;
        if (v198)
          return swift_endAccess();
        swift_endAccess();
        goto LABEL_5;
      case 16:
        v199 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v469 + 56);
        v200 = v463;
        v199(v463, 1, 1, v481);
        v201 = v458;
        sub_21FA44968(v498, v458, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v201, 1, v501) == 1)
        {
          sub_21FA2D1F8(v201, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        else
        {
          v271 = v160;
          v272 = v440;
          sub_21FA2D23C(v201, v440, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v273 = v505;
          sub_21FC5AD94();
          v505 = v273;
          if (v273)
          {
            sub_21FA326EC(v272, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v398 = &qword_25554A770;
            v399 = type metadata accessor for PBHKMedicationRecord;
            v353 = v463;
            return sub_21FA2D1F8(v353, v398, v399);
          }
          v274 = v272;
          v275 = v434;
          sub_21FA2D23C(v274, v434, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload() == 9)
          {
            sub_21FA2D1F8(v463, &qword_25554A770, type metadata accessor for PBHKMedicationRecord);
            v276 = v418;
            sub_21FA2D23C(v275, v418, type metadata accessor for PBHKMedicationRecord);
            v277 = v276;
            v278 = v271;
            v161 = v495;
            v200 = v463;
            sub_21FA2D23C(v277, v463, type metadata accessor for PBHKMedicationRecord);
            v199(v200, 0, 1, v481);
            v160 = v278;
          }
          else
          {
            sub_21FA326EC(v275, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            v160 = v271;
            v200 = v463;
          }
        }
        sub_21FA2A08C(&qword_255544CA8, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
        v375 = v200;
        v376 = v481;
        v377 = v505;
        sub_21FC5AE60();
        v505 = v377;
        if (v377)
        {
          v398 = &qword_25554A770;
          v399 = type metadata accessor for PBHKMedicationRecord;
          v353 = v375;
          return sub_21FA2D1F8(v353, v398, v399);
        }
        v378 = v447;
        sub_21FA2D280(v375, v447, &qword_25554A770, type metadata accessor for PBHKMedicationRecord);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v469 + 48))(v378, 1, v376) == 1)
        {
          sub_21FA2D1F8(v378, &qword_25554A770, type metadata accessor for PBHKMedicationRecord);
          v159 = v502;
          v163 = v494;
          v162 = v496;
          v164 = v497;
          goto LABEL_6;
        }
        v379 = v160;
        v380 = v420;
        sub_21FA2D23C(v378, v420, type metadata accessor for PBHKMedicationRecord);
        v381 = v491;
        sub_21FA2D23C(v380, v491, type metadata accessor for PBHKMedicationRecord);
        v382 = v501;
        swift_storeEnumTagMultiPayload();
        v383 = v382;
        v160 = v379;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v499 + 56))(v381, 0, 1, v383);
        v384 = v492;
        sub_21FA2D280(v381, v492, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        v385 = v498;
        swift_beginAccess();
        sub_21FA2D2D8(v384, v385, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        swift_endAccess();
        v159 = v502;
        goto LABEL_124;
      case 17:
        v167 = v159;
        v168 = v162;
        v169 = v163;
        goto LABEL_38;
      case 18:
        v167 = v159;
        v168 = v162;
        v169 = v163;
LABEL_38:
        swift_beginAccess();
        v202 = v505;
        sub_21FC5AE3C();
        v505 = v202;
        if (v202)
          return swift_endAccess();
        swift_endAccess();
        v203 = v169;
        v162 = v168;
        v159 = v167;
        v163 = v203;
        goto LABEL_5;
      case 19:
        swift_beginAccess();
        sub_21FB9E300();
        v204 = v505;
        sub_21FC5ADC4();
        v505 = v204;
        if (v204)
          return swift_endAccess();
        swift_endAccess();
        v161 = v495;
        v162 = v496;
LABEL_5:
        v160 = v500;
        goto LABEL_6;
      default:
        goto LABEL_6;
    }
  }
}

uint64_t PBClinicalRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB55D3C);
}

uint64_t sub_21FB55D3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  char *v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;

  v78 = type metadata accessor for PBHKMedicationRecord(0);
  MEMORY[0x24BDAC7A8](v78);
  v79 = (uint64_t)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for PBHKProcedureRecord(0);
  MEMORY[0x24BDAC7A8](v76);
  v77 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for PBHKAccountOwner(0);
  MEMORY[0x24BDAC7A8](v74);
  v75 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for PBHKDiagnosticTestReport(0);
  MEMORY[0x24BDAC7A8](v72);
  v73 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for PBHKDiagnosticTestResult(0);
  MEMORY[0x24BDAC7A8](v70);
  v71 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for PBHKMedicationOrder(0);
  MEMORY[0x24BDAC7A8](v68);
  v69 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  MEMORY[0x24BDAC7A8](v66);
  v67 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for PBHKVaccinationRecord(0);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for PBHKConditionRecord(0);
  MEMORY[0x24BDAC7A8](v62);
  v63 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for PBHKAllergyRecord(0);
  MEMORY[0x24BDAC7A8](v60);
  v61 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v80 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v81 = (uint64_t)&v59 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v82 = (uint64_t)&v59 - v18;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v12);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v59 - v20;
  v22 = type metadata accessor for PBHKConcept(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 16);
  v26 = *(_QWORD *)(a1 + 24);
  v86 = a1;
  v28 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0)
    v28 = v27 & 0xFFFFFFFFFFFFLL;
  if (v28)
  {
    swift_bridgeObjectRetain();
    v29 = v83;
    sub_21FC5AF2C();
    v30 = v29;
    if (v29)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = v83;
  }
  v31 = v86;
  swift_beginAccess();
  v33 = *(_QWORD *)(v31 + 32);
  v32 = *(_QWORD *)(v31 + 40);
  v34 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0)
    v34 = v33 & 0xFFFFFFFFFFFFLL;
  if (v34)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v36 = v86
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_21FA44968(v36, (uint64_t)v21, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_21FA2D1F8((uint64_t)v21, &qword_255540590, type metadata accessor for PBHKConcept);
    v37 = v30;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v21, (uint64_t)v25, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    v37 = v30;
    if (v30)
      return sub_21FA326EC((uint64_t)v25, type metadata accessor for PBHKConcept);
    sub_21FA326EC((uint64_t)v25, type metadata accessor for PBHKConcept);
  }
  v38 = v86
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  v39 = v82;
  sub_21FA44968(v38, v82, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v40 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48);
  if (v41(v39, 1, v40) != 1)
  {
    sub_21FA44968(v39, v81, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    v42 = (char *)&loc_21FB563FC + 4 * word_21FC665DE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_21FA2D1F8(v39, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v43 = (uint64_t *)(v86
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  v45 = *v43;
  v44 = v43[1];
  v46 = HIBYTE(v44) & 0xF;
  if ((v44 & 0x2000000000000000) == 0)
    v46 = v45 & 0xFFFFFFFFFFFFLL;
  if (!v46 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v37))
  {
    v47 = v80;
    sub_21FA44968(v38, v80, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    if (v41(v47, 1, v40) == 1)
    {
      sub_21FA2D1F8(v47, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    }
    else if (swift_getEnumCaseMultiPayload() == 9)
    {
      v48 = v79;
      sub_21FA2D23C(v47, v79, type metadata accessor for PBHKMedicationRecord);
      sub_21FA2A08C(&qword_255544CA8, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
      sub_21FC5AF50();
      result = sub_21FA326EC(v48, type metadata accessor for PBHKMedicationRecord);
      if (v37)
        return result;
    }
    else
    {
      sub_21FA326EC(v47, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    }
    v49 = (uint64_t *)(v86
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
    swift_beginAccess();
    v51 = *v49;
    v50 = v49[1];
    v52 = HIBYTE(v50) & 0xF;
    if ((v50 & 0x2000000000000000) == 0)
      v52 = v51 & 0xFFFFFFFFFFFFLL;
    if (!v52 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v37))
    {
      v53 = (uint64_t *)(v86
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
      swift_beginAccess();
      v55 = *v53;
      v54 = v53[1];
      v56 = HIBYTE(v54) & 0xF;
      if ((v54 & 0x2000000000000000) == 0)
        v56 = v55 & 0xFFFFFFFFFFFFLL;
      if (!v56 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v37))
      {
        v57 = (uint64_t *)(v86
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType);
        result = swift_beginAccess();
        if (*v57)
        {
          v58 = *((_BYTE *)v57 + 8);
          v84 = *v57;
          v85 = v58;
          sub_21FB9E300();
          return sub_21FC5AED8();
        }
      }
    }
  }
  return result;
}

void sub_21FB56AA4()
{
  uint64_t v0;
  uint64_t v1;

  sub_21FA2D23C(*(_QWORD *)(v1 - 320), *(_QWORD *)(v1 - 352), type metadata accessor for PBHKProcedureRecord);
  sub_21FA2A08C(&qword_255544DC8, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
  sub_21FC5AF50();
  if (!v0)
    JUMPOUT(0x21FB564E8);
  JUMPOUT(0x21FB56560);
}

uint64_t static PBClinicalRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBClinicalRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB56B40) & 1;
}

uint64_t sub_21FB56B40(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;

  v74 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  v72 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v68 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A768, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v71 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v75 = (uint64_t)&v67 - v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v69 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v73 = (uint64_t)&v67 - v11;
  v12 = type metadata accessor for PBHKConcept(0);
  v78 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v70 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v67 - v16;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v7);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v76 = (uint64_t)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v67 - v21;
  swift_beginAccess();
  v24 = a1[2];
  v23 = a1[3];
  v25 = a1;
  swift_beginAccess();
  if (v24 == a2[2] && v23 == a2[3] || (v26 = sub_21FC5BDF0(), result = 0, (v26 & 1) != 0))
  {
    if ((swift_beginAccess(), v28 = a1[4], v29 = a1[5], swift_beginAccess(), v28 == a2[4]) && v29 == a2[5]
      || (v30 = sub_21FC5BDF0(), result = 0, (v30 & 1) != 0))
    {
      v77 = a2;
      v31 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
      swift_beginAccess();
      sub_21FA44968(v31, (uint64_t)v22, &qword_255540590, type metadata accessor for PBHKConcept);
      v32 = v77;
      v33 = (uint64_t)v77
          + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
      swift_beginAccess();
      v34 = (uint64_t)&v17[*(int *)(v15 + 48)];
      sub_21FA44968((uint64_t)v22, (uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA44968(v33, v34, &qword_255540590, type metadata accessor for PBHKConcept);
      v35 = v79;
      v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
      if (v36((uint64_t)v17, 1, v79) == 1)
      {
        swift_retain();
        swift_retain();
        sub_21FA2D1F8((uint64_t)v22, &qword_255540590, type metadata accessor for PBHKConcept);
        if (v36(v34, 1, v35) == 1)
        {
          sub_21FA2D1F8((uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
          goto LABEL_14;
        }
      }
      else
      {
        v37 = v76;
        sub_21FA44968((uint64_t)v17, v76, &qword_255540590, type metadata accessor for PBHKConcept);
        if (v36(v34, 1, v35) != 1)
        {
          v38 = v70;
          sub_21FA2D23C(v34, v70, type metadata accessor for PBHKConcept);
          swift_retain();
          swift_retain();
          v39 = sub_21FA449D4(v37, v38, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
          sub_21FA326EC(v38, type metadata accessor for PBHKConcept);
          sub_21FA2D1F8((uint64_t)v22, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA326EC(v37, type metadata accessor for PBHKConcept);
          sub_21FA2D1F8((uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
          if ((v39 & 1) == 0)
            goto LABEL_21;
LABEL_14:
          v40 = (uint64_t)v25
              + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
          swift_beginAccess();
          v41 = v73;
          sub_21FA44968(v40, v73, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v42 = (uint64_t)v32
              + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
          swift_beginAccess();
          v43 = v75;
          v44 = v75 + *(int *)(v71 + 48);
          sub_21FA44968(v41, v75, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          sub_21FA44968(v42, v44, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
          v46 = v74;
          if (v45(v43, 1, v74) == 1)
          {
            sub_21FA2D1F8(v41, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            if (v45(v44, 1, v46) == 1)
            {
              sub_21FA2D1F8(v43, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_25:
              v51 = (_QWORD *)((char *)v25
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
              swift_beginAccess();
              v52 = *v51;
              v53 = v51[1];
              v54 = (_QWORD *)((char *)v77
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
              swift_beginAccess();
              if (v52 == *v54 && v53 == v54[1] || (sub_21FC5BDF0() & 1) != 0)
              {
                if ((v55 = (_QWORD *)((char *)v25
                                     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID),
                      swift_beginAccess(),
                      v56 = *v55,
                      v57 = v55[1],
                      v58 = (_QWORD *)((char *)v77
                                     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID),
                      swift_beginAccess(),
                      v56 == *v58)
                  && v57 == v58[1]
                  || (sub_21FC5BDF0() & 1) != 0)
                {
                  if ((v59 = (_QWORD *)((char *)v25
                                       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName),
                        swift_beginAccess(),
                        v60 = *v59,
                        v61 = v59[1],
                        v62 = (_QWORD *)((char *)v77
                                       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName),
                        swift_beginAccess(),
                        v60 == *v62)
                    && v61 == v62[1]
                    || (sub_21FC5BDF0() & 1) != 0)
                  {
                    v63 = (_QWORD *)((char *)v25
                                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType);
                    swift_beginAccess();
                    v64 = *v63;
                    swift_release();
                    v65 = (char *)v77
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
                    swift_beginAccess();
                    v66 = *(_QWORD *)v65;
                    LODWORD(v65) = v65[8];
                    swift_release();
                    if ((_DWORD)v65 == 1)
                    {
                      if (v66)
                      {
                        if (v66 == 1)
                        {
                          if (v64 == 1)
                            return 1;
                        }
                        else if (v64 == 2)
                        {
                          return 1;
                        }
                      }
                      else if (!v64)
                      {
                        return 1;
                      }
                    }
                    else if (v64 == v66)
                    {
                      return 1;
                    }
                    return 0;
                  }
                }
              }
LABEL_21:
              swift_release();
              swift_release();
              return 0;
            }
          }
          else
          {
            v47 = v69;
            sub_21FA44968(v43, v69, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            if (v45(v44, 1, v46) != 1)
            {
              v48 = v68;
              sub_21FA2D23C(v44, v68, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              _s19HealthRecordsDaemon16PBClinicalRecordV013OneOf_MedicalE0O2eeoiySbAE_AEtFZ_0(v47, v48);
              v50 = v49;
              sub_21FA326EC(v48, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              sub_21FA2D1F8(v41, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              sub_21FA326EC(v47, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              sub_21FA2D1F8(v43, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              if ((v50 & 1) == 0)
                goto LABEL_21;
              goto LABEL_25;
            }
            sub_21FA2D1F8(v41, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_21FA326EC(v47, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          sub_21FA48E3C(v43, &qword_25554A768, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          goto LABEL_21;
        }
        swift_retain();
        swift_retain();
        sub_21FA2D1F8((uint64_t)v22, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA326EC(v37, type metadata accessor for PBHKConcept);
      }
      sub_21FA48E3C((uint64_t)v17, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_21;
    }
  }
  return result;
}

uint64_t PBClinicalRecord.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBClinicalRecord, &qword_255544710, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
}

uint64_t sub_21FB574A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D8C0, &qword_255543AD8, a2);
}

unint64_t sub_21FB574BC()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB574D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBClinicalRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB574EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBClinicalRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB57500()
{
  sub_21FA2A08C(&qword_25554A650, type metadata accessor for PBClinicalRecord, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
  return sub_21FC5AD70();
}

uint64_t sub_21FB57550@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8B8, (uint64_t)qword_255543AC0, a1);
}

uint64_t sub_21FB5756C()
{
  sub_21FA2A08C(&qword_255544700, type metadata accessor for PBClinicalRecord, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB575AC()
{
  sub_21FA2A08C(&qword_255544700, type metadata accessor for PBClinicalRecord, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB575FC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBClinicalRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB56B40) & 1;
}

uint64_t sub_21FB57624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543AE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543AE0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 0;
  *(_QWORD *)v8 = "ORIGIN_NOT_SET";
  *(_QWORD *)(v8 + 8) = 14;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 1;
  *(_QWORD *)v12 = "FHIR_RESOURCE";
  *((_QWORD *)v12 + 1) = 13;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 2;
  *(_QWORD *)v13 = "SIGNED_CLINICAL_DATA";
  *(_QWORD *)(v13 + 8) = 20;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBClinicalRecord.MedicalRecordOriginType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8C8, (uint64_t)qword_255543AE0, a1);
}

uint64_t sub_21FB577E0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8C8, (uint64_t)qword_255543AE0, a1);
}

unint64_t static PBFHIRIdentifier.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB57818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543AF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543AF8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "resource_type";
  *(_QWORD *)(v8 + 8) = 13;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "identifier";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBFHIRIdentifier._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8D0, (uint64_t)qword_255543AF8, a1);
}

uint64_t PBFHIRIdentifier.decodeMessage<A>(decoder:)()
{
  return sub_21FB82E58();
}

uint64_t PBFHIRIdentifier.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB6D5CC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBFHIRIdentifier);
}

uint64_t static PBFHIRIdentifier.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBFHIRIdentifier) & 1;
}

uint64_t PBFHIRIdentifier.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBFHIRIdentifier, &qword_255544718, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
}

unint64_t sub_21FB57A0C()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB57A28()
{
  return PBPatientMeta.HumanName.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB57A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBFHIRIdentifier.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB57A50()
{
  sub_21FA2A08C(&qword_25554A648, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
  return sub_21FC5AD70();
}

uint64_t sub_21FB57AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8D0, (uint64_t)qword_255543AF8, a1);
}

uint64_t sub_21FB57ABC()
{
  sub_21FA2A08C(&qword_255544BD0, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB57AFC()
{
  sub_21FA2A08C(&qword_255544BD0, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB57B4C(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBFHIRIdentifier) & 1;
}

unint64_t static PBHKConcept.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_21FB57B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543B10);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543B10);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "preferred_name";
  *(_QWORD *)(v8 + 8) = 14;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "localized_preferred_name";
  *(_QWORD *)(v12 + 8) = 24;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "raw_identifier";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "group_by";
  *((_QWORD *)v16 + 1) = 8;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 5;
  *(_QWORD *)v17 = "is_in_memory";
  *(_QWORD *)(v17 + 8) = 12;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKConcept._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8D8, (uint64_t)qword_255543B10, a1);
}

uint64_t sub_21FB57DB8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for PBHKConcept._StorageClass(0);
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
  v1 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  v2 = type metadata accessor for PBHKConcept(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *((_BYTE *)v0
  + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory) = 0;
  qword_255543B28 = (uint64_t)v0;
  return result;
}

uint64_t sub_21FB57E3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy, &qword_255540590, type metadata accessor for PBHKConcept);
  return swift_deallocClassInstance();
}

