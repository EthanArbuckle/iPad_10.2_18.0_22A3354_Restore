uint64_t PBHKConcept.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB52968(a1, a2, a3, type metadata accessor for PBHKConcept, (void (*)(_QWORD))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E248, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB57EC8);
}

uint64_t sub_21FB57EC8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADAC();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKConcept.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKConcept, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB580CC);
}

uint64_t sub_21FB580CC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23[18];

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v23 - v8;
  v10 = type metadata accessor for PBHKConcept(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v23[0] = (uint64_t)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = a1[3];
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = a1[2] & 0xFFFFFFFFFFFFLL;
  v23[17] = a4;
  if (!v14 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    v16 = a1[5];
    v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0)
      v17 = a1[4] & 0xFFFFFFFFFFFFLL;
    if (!v17 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
    {
      swift_beginAccess();
      v18 = a1[7];
      v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v19 = a1[6] & 0xFFFFFFFFFFFFLL;
      if (!v19 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
      {
        v20 = (uint64_t)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
        swift_beginAccess();
        sub_21FA44968(v20, (uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          sub_21FA2D1F8((uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
        }
        else
        {
          v21 = v23[0];
          sub_21FA2D23C((uint64_t)v9, v23[0], type metadata accessor for PBHKConcept);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          sub_21FC5AF50();
          result = sub_21FA326EC(v21, type metadata accessor for PBHKConcept);
          if (v4)
            return result;
        }
        v22 = (char *)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
        result = swift_beginAccess();
        if (*v22 == 1)
          return sub_21FC5AECC();
      }
    }
  }
  return result;
}

uint64_t static PBHKConcept.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418) & 1;
}

uint64_t sub_21FB58418(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BYTE *v34;
  _BYTE *v35;
  char *v37;
  char *v38;
  uint64_t v39;

  v4 = type metadata accessor for PBHKConcept(0);
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - v9;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - v15;
  swift_beginAccess();
  v17 = a1[2];
  v18 = a1[3];
  swift_beginAccess();
  if (v17 == a2[2] && v18 == a2[3] || (v19 = sub_21FC5BDF0(), v20 = 0, (v19 & 1) != 0))
  {
    if ((swift_beginAccess(), v21 = a1[4], v22 = a1[5], swift_beginAccess(), v21 == a2[4]) && v22 == a2[5]
      || (v23 = sub_21FC5BDF0(), v20 = 0, (v23 & 1) != 0))
    {
      if ((swift_beginAccess(), v24 = a1[6], v25 = a1[7], swift_beginAccess(), v24 == a2[6]) && v25 == a2[7]
        || (v26 = sub_21FC5BDF0(), v20 = 0, (v26 & 1) != 0))
      {
        v38 = v14;
        v37 = v6;
        v27 = (uint64_t)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
        swift_beginAccess();
        sub_21FA44968(v27, (uint64_t)v16, &qword_255540590, type metadata accessor for PBHKConcept);
        v28 = (uint64_t)a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
        swift_beginAccess();
        v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_21FA44968((uint64_t)v16, (uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA44968(v28, v29, &qword_255540590, type metadata accessor for PBHKConcept);
        v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
        if (v30((uint64_t)v10, 1, v4) == 1)
        {
          swift_retain();
          swift_retain();
          sub_21FA2D1F8((uint64_t)v16, &qword_255540590, type metadata accessor for PBHKConcept);
          if (v30(v29, 1, v4) == 1)
          {
            sub_21FA2D1F8((uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_18:
            v34 = (char *)a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
            swift_beginAccess();
            LOBYTE(v34) = *v34;
            swift_release();
            v35 = (char *)a2
                + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
            swift_beginAccess();
            LOBYTE(v35) = *v35;
            swift_release();
            v20 = v34 ^ v35 ^ 1;
            return v20 & 1;
          }
        }
        else
        {
          v31 = (uint64_t)v38;
          sub_21FA44968((uint64_t)v10, (uint64_t)v38, &qword_255540590, type metadata accessor for PBHKConcept);
          if (v30(v29, 1, v4) != 1)
          {
            v32 = (uint64_t)v37;
            sub_21FA2D23C(v29, (uint64_t)v37, type metadata accessor for PBHKConcept);
            swift_retain();
            swift_retain();
            v33 = sub_21FA449D4(v31, v32, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
            sub_21FA326EC(v32, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8((uint64_t)v16, &qword_255540590, type metadata accessor for PBHKConcept);
            sub_21FA326EC(v31, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8((uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
            if ((v33 & 1) != 0)
              goto LABEL_18;
            goto LABEL_16;
          }
          swift_retain();
          swift_retain();
          sub_21FA2D1F8((uint64_t)v16, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA326EC(v31, type metadata accessor for PBHKConcept);
        }
        sub_21FA48E3C((uint64_t)v10, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_16:
        swift_release();
        swift_release();
        v20 = 0;
      }
    }
  }
  return v20 & 1;
}

uint64_t PBHKConcept.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKConcept, &qword_255544720, (uint64_t)&protocol conformance descriptor for PBHKConcept);
}

uint64_t sub_21FB58934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D8E0, &qword_255543B28, a2);
}

unint64_t sub_21FB58950()
{
  return 0xD000000000000024;
}

uint64_t sub_21FB5896C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConcept.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB58980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConcept.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB58994()
{
  sub_21FA2A08C(&qword_25554A640, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
  return sub_21FC5AD70();
}

uint64_t sub_21FB589E4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8D8, (uint64_t)qword_255543B10, a1);
}

uint64_t sub_21FB58A00()
{
  sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB58A40()
{
  sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
  return sub_21FC5AEA8();
}

unint64_t static PBHKAllergyRecord.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB58AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543B30);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543B30);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC623E0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "allergy";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "asserter";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "criticality";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "last_occurrence_date";
  *((_QWORD *)v16 + 1) = 20;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "onset_date";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "reactions";
  *((_QWORD *)v20 + 1) = 9;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "recorded_date";
  *((_QWORD *)v22 + 1) = 13;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "status";
  *((_QWORD *)v24 + 1) = 6;
  v24[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKAllergyRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8E8, (uint64_t)qword_255543B30, a1);
}

uint64_t sub_21FB58D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t result;

  type metadata accessor for PBHKAllergyRecord._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  v2 = type metadata accessor for PBHKConcept(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality, 1, 1, v2);
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions) = MEMORY[0x24BEE4AF8];
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  qword_255543B48 = v0;
  return result;
}

uint64_t sub_21FB58E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (uint64_t)&v36 - v4;
  v5 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(void (**)(void))(*(_QWORD *)(v6 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v6);
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v38 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  v7();
  v42 = v1;
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v39 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions) = MEMORY[0x24BEE4AF8];
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  v40 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v41 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v7();
  v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  v13 = v37;
  sub_21FA44968(v12, v37, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_beginAccess();
  sub_21FA2D2D8(v13, v5, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v15 = *v14;
  v16 = v14[1];
  swift_beginAccess();
  *v8 = v15;
  v8[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_21FA44968(v17, v13, &qword_255540590, type metadata accessor for PBHKConcept);
  v18 = v38;
  swift_beginAccess();
  v19 = v13;
  sub_21FA2D2D8(v13, v18, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v20 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  v21 = *v20;
  v22 = v20[1];
  swift_beginAccess();
  *v9 = v21;
  v9[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  v24 = *v23;
  v25 = v23[1];
  swift_beginAccess();
  *v10 = v24;
  v10[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  v27 = *v26;
  v28 = v39;
  swift_beginAccess();
  *v28 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  v30 = *v29;
  v31 = v29[1];
  v32 = v40;
  swift_beginAccess();
  *v32 = v30;
  v32[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v33, v19, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_release();
  v34 = v41;
  swift_beginAccess();
  sub_21FA2D2D8(v19, v34, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return v42;
}

uint64_t sub_21FB59300()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, &qword_255540590, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_21FB593DC()
{
  return sub_21FB877D4((void (*)(void))sub_21FB59300);
}

uint64_t PBHKAllergyRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB5941C);
}

uint64_t sub_21FB5941C()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 2:
        case 4:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBHKAllergyReaction(0);
          sub_21FA2A08C(&qword_255544C18, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 8:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKAllergyRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB59794);
}

uint64_t sub_21FB59794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a4;
  v59 = a3;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v55 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v57 = (uint64_t)&v53 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v53 - v10;
  v12 = type metadata accessor for PBHKConcept(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v54 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v56 = (uint64_t)&v53 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v53 - v18;
  v20 = a1;
  v21 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_21FA44968(v21, (uint64_t)v11, &qword_255540590, type metadata accessor for PBHKConcept);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v22(v11, 1, v12) == 1)
  {
    sub_21FA2D1F8((uint64_t)v11, &qword_255540590, type metadata accessor for PBHKConcept);
    v23 = v58;
    v24 = v12;
    v25 = v20;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v11, (uint64_t)v19, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    v26 = v58;
    sub_21FC5AF50();
    v23 = v26;
    result = sub_21FA326EC((uint64_t)v19, type metadata accessor for PBHKConcept);
    v24 = v12;
    v25 = v20;
    if (v26)
      return result;
  }
  v28 = (uint64_t *)(v25
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v30 = *v28;
  v29 = v28[1];
  v31 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0)
    v31 = v30 & 0xFFFFFFFFFFFFLL;
  if (!v31 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v23))
  {
    v32 = v25
        + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
    swift_beginAccess();
    v33 = v32;
    v34 = v57;
    sub_21FA44968(v33, v57, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v22((char *)v34, 1, v24) == 1)
    {
      sub_21FA2D1F8(v34, &qword_255540590, type metadata accessor for PBHKConcept);
    }
    else
    {
      v35 = v56;
      sub_21FA2D23C(v34, v56, type metadata accessor for PBHKConcept);
      sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
      sub_21FC5AF50();
      result = sub_21FA326EC(v35, type metadata accessor for PBHKConcept);
      if (v23)
        return result;
    }
    v36 = (uint64_t *)(v25
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
    swift_beginAccess();
    v38 = *v36;
    v37 = v36[1];
    v39 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0)
      v39 = v38 & 0xFFFFFFFFFFFFLL;
    if (!v39 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v23))
    {
      v40 = (uint64_t *)(v25
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
      swift_beginAccess();
      v42 = *v40;
      v41 = v40[1];
      v43 = HIBYTE(v41) & 0xF;
      if ((v41 & 0x2000000000000000) == 0)
        v43 = v42 & 0xFFFFFFFFFFFFLL;
      if (!v43 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v23))
      {
        v44 = v25
            + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions;
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)v44 + 16)
          || (type metadata accessor for PBHKAllergyReaction(0),
              sub_21FA2A08C(&qword_255544C18, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v23))
        {
          v45 = (uint64_t *)(v25
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
          swift_beginAccess();
          v47 = *v45;
          v46 = v45[1];
          v48 = HIBYTE(v46) & 0xF;
          if ((v46 & 0x2000000000000000) == 0)
            v48 = v47 & 0xFFFFFFFFFFFFLL;
          if (!v48 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v23))
          {
            v49 = v25
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
            swift_beginAccess();
            v50 = v49;
            v51 = v55;
            sub_21FA44968(v50, v55, &qword_255540590, type metadata accessor for PBHKConcept);
            if (v22((char *)v51, 1, v24) == 1)
            {
              return sub_21FA2D1F8(v51, &qword_255540590, type metadata accessor for PBHKConcept);
            }
            else
            {
              v52 = v54;
              sub_21FA2D23C(v51, v54, type metadata accessor for PBHKConcept);
              sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
              sub_21FC5AF50();
              return sub_21FA326EC(v52, type metadata accessor for PBHKConcept);
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_21FB59E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;

  v4 = type metadata accessor for PBHKConcept(0);
  v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  v96 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v92 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v90 = (char *)&v86 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v86 - v12;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v86 = (uint64_t)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v87 = (uint64_t)&v86 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v89 = (uint64_t)&v86 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v93 = (uint64_t)&v86 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v94 = (uint64_t)&v86 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v86 - v25;
  v27 = a1;
  v28 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_21FA44968(v28, (uint64_t)v26, &qword_255540590, type metadata accessor for PBHKConcept);
  v29 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  v91 = v7;
  v30 = (uint64_t)&v13[*(int *)(v7 + 48)];
  sub_21FA44968((uint64_t)v26, (uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
  v31 = v96;
  sub_21FA44968(v29, v30, &qword_255540590, type metadata accessor for PBHKConcept);
  v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v95 + 6);
  if (v32((uint64_t)v13, 1, v31) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v26, &qword_255540590, type metadata accessor for PBHKConcept);
    v33 = v32(v30, 1, v31);
    v34 = a2;
    v35 = v27;
    if (v33 != 1)
    {
LABEL_16:
      sub_21FA48E3C((uint64_t)v13, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_17;
    }
    v95 = v32;
    sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    v35 = v27;
    v36 = a2;
    v37 = v94;
    sub_21FA44968((uint64_t)v13, v94, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v32(v30, 1, v31) == 1)
    {
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v26, &qword_255540590, type metadata accessor for PBHKConcept);
      v38 = v37;
LABEL_15:
      sub_21FA326EC(v38, type metadata accessor for PBHKConcept);
      goto LABEL_16;
    }
    v95 = v32;
    v39 = v92;
    sub_21FA2D23C(v30, v92, type metadata accessor for PBHKConcept);
    swift_retain();
    v34 = v36;
    swift_retain();
    v40 = sub_21FA449D4(v37, v39, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
    sub_21FA326EC(v39, type metadata accessor for PBHKConcept);
    sub_21FA2D1F8((uint64_t)v26, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v37, type metadata accessor for PBHKConcept);
    sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
    if ((v40 & 1) == 0)
    {
LABEL_17:
      swift_release();
      swift_release();
      return 0;
    }
  }
  v41 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v42 = *v41;
  v43 = v41[1];
  v44 = (_QWORD *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  if ((v42 != *v44 || v43 != v44[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_17;
  v45 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  v46 = v93;
  sub_21FA44968(v45, v93, &qword_255540590, type metadata accessor for PBHKConcept);
  v47 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  v13 = v90;
  v48 = v91;
  v49 = (uint64_t)&v90[*(int *)(v91 + 48)];
  sub_21FA44968(v46, (uint64_t)v90, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA44968(v47, v49, &qword_255540590, type metadata accessor for PBHKConcept);
  v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v95;
  v51 = v96;
  if (v95((uint64_t)v13, 1, v96) != 1)
  {
    v52 = v89;
    sub_21FA44968((uint64_t)v13, v89, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v50(v49, 1, v51) == 1)
    {
      sub_21FA2D1F8(v93, &qword_255540590, type metadata accessor for PBHKConcept);
      v38 = v52;
      goto LABEL_15;
    }
    v54 = v92;
    sub_21FA2D23C(v49, v92, type metadata accessor for PBHKConcept);
    v55 = sub_21FA449D4(v52, v54, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
    sub_21FA326EC(v54, type metadata accessor for PBHKConcept);
    sub_21FA2D1F8(v93, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v52, type metadata accessor for PBHKConcept);
    sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
    if ((v55 & 1) != 0)
      goto LABEL_21;
    goto LABEL_17;
  }
  sub_21FA2D1F8(v46, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v50(v49, 1, v51) != 1)
    goto LABEL_16;
  sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_21:
  v56 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  v57 = *v56;
  v58 = v56[1];
  v59 = (_QWORD *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  if ((v57 != *v59 || v58 != v59[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_17;
  v60 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  v61 = *v60;
  v62 = v60[1];
  v63 = (_QWORD *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  if ((v61 != *v63 || v62 != v63[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_17;
  v64 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  v65 = *v64;
  v66 = (uint64_t *)(v34
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  v67 = *v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68 = sub_21FB114F0(v65, v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v68 & 1) == 0)
    goto LABEL_17;
  v69 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  v70 = *v69;
  v71 = v69[1];
  v72 = (_QWORD *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  if ((v70 != *v72 || v71 != v72[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_17;
  v73 = v51;
  v74 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v75 = v87;
  sub_21FA44968(v74, v87, &qword_255540590, type metadata accessor for PBHKConcept);
  v76 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v77 = *(int *)(v48 + 48);
  v78 = v88;
  v79 = v88 + v77;
  sub_21FA44968(v75, v88, &qword_255540590, type metadata accessor for PBHKConcept);
  v80 = v76;
  v81 = v73;
  sub_21FA44968(v80, v79, &qword_255540590, type metadata accessor for PBHKConcept);
  v82 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v95;
  if (v95(v78, 1, v73) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v75, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v82(v79, 1, v73) == 1)
    {
      sub_21FA2D1F8(v78, &qword_255540590, type metadata accessor for PBHKConcept);
      return 1;
    }
    goto LABEL_36;
  }
  v83 = v86;
  sub_21FA44968(v78, v86, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v82(v79, 1, v81) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v75, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v83, type metadata accessor for PBHKConcept);
LABEL_36:
    sub_21FA48E3C(v78, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    return 0;
  }
  v84 = v92;
  sub_21FA2D23C(v79, v92, type metadata accessor for PBHKConcept);
  v85 = sub_21FA449D4(v83, v84, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  swift_release();
  swift_release();
  sub_21FA326EC(v84, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v75, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v83, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v78, &qword_255540590, type metadata accessor for PBHKConcept);
  return (v85 & 1) != 0;
}

uint64_t PBHKAllergyRecord.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKAllergyRecord, &qword_255544728, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
}

uint64_t sub_21FB5A8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D8F0, &qword_255543B48, a2);
}

unint64_t sub_21FB5A8E8()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB5A904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB5A918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB5A92C()
{
  sub_21FA2A08C(&qword_25554A638, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
  return sub_21FC5AD70();
}

uint64_t sub_21FB5A97C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8E8, (uint64_t)qword_255543B30, a1);
}

uint64_t sub_21FB5A998()
{
  sub_21FA2A08C(&qword_255544C00, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB5A9D8()
{
  sub_21FA2A08C(&qword_255544C00, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
  return sub_21FC5AEA8();
}

unint64_t static PBHKAllergyReaction.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB5AA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543B50);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543B50);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "manifestations";
  *(_QWORD *)(v8 + 8) = 14;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "onset_date";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "severity";
  *(_QWORD *)(v13 + 8) = 8;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKAllergyReaction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D8F8, (uint64_t)qword_255543B50, a1);
}

uint64_t sub_21FB5AC10()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for PBHKAllergyReaction._StorageClass(0);
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = MEMORY[0x24BEE4AF8];
  v0[3] = 0;
  v0[4] = 0xE000000000000000;
  v1 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  v2 = type metadata accessor for PBHKConcept(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_255543B68 = (uint64_t)v0;
  return result;
}

_QWORD *sub_21FB5AC8C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v13[-v4];
  v1[2] = MEMORY[0x24BEE4AF8];
  v1[3] = 0;
  v1[4] = 0xE000000000000000;
  v6 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  v8 = a1[2];
  swift_beginAccess();
  v1[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = a1[3];
  v9 = a1[4];
  swift_beginAccess();
  v1[3] = v10;
  v1[4] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v5, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return v1;
}

uint64_t sub_21FB5AE6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity, &qword_255540590, type metadata accessor for PBHKConcept);
  return swift_deallocClassInstance();
}

uint64_t PBHKAllergyReaction.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKAllergyReaction, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5AC8C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB5AEF0);
}

uint64_t sub_21FB5AEF0()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        v4 = v3;
        sub_21FC5AE3C();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBHKConcept(0);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        v4 = v3;
        sub_21FC5AE54();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBHKConcept(0);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    v4 = v3;
    sub_21FC5AE60();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBHKAllergyReaction.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB5B0B8);
}

uint64_t sub_21FB5B0B8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - v9;
  v11 = type metadata accessor for PBHKConcept(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v21 = (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1[2] + 16);
  v23 = a4;
  v22 = a3;
  if (!v14
    || (sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    v16 = a1[4];
    v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0)
      v17 = a1[3] & 0xFFFFFFFFFFFFLL;
    if (!v17 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
    {
      v18 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
      swift_beginAccess();
      sub_21FA44968(v18, (uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        return sub_21FA2D1F8((uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
      }
      else
      {
        v19 = v21;
        sub_21FA2D23C((uint64_t)v10, v21, type metadata accessor for PBHKConcept);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        sub_21FC5AF50();
        return sub_21FA326EC(v19, type metadata accessor for PBHKConcept);
      }
    }
  }
  return result;
}

uint64_t static PBHKAllergyReaction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKAllergyReaction, (uint64_t (*)(uint64_t, uint64_t))sub_21FB5B370) & 1;
}

uint64_t sub_21FB5B370(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v34 = type metadata accessor for PBHKConcept(0);
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  swift_beginAccess();
  v16 = a1[2];
  swift_beginAccess();
  v17 = a2[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_21FB11504(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0
    && ((swift_beginAccess(), v19 = a1[3], v20 = a1[4], swift_beginAccess(), v19 == a2[3]) && v20 == a2[4]
     || (sub_21FC5BDF0() & 1) != 0))
  {
    v32 = v13;
    v21 = (uint64_t)a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
    swift_beginAccess();
    sub_21FA44968(v21, (uint64_t)v15, &qword_255540590, type metadata accessor for PBHKConcept);
    v22 = (uint64_t)a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
    swift_beginAccess();
    v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_21FA44968((uint64_t)v15, (uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA44968(v22, v23, &qword_255540590, type metadata accessor for PBHKConcept);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v25 = v34;
    if (v24((uint64_t)v9, 1, v34) == 1)
    {
      swift_release();
      swift_release();
      sub_21FA2D1F8((uint64_t)v15, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v24(v23, 1, v25) == 1)
      {
        sub_21FA2D1F8((uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
        return 1;
      }
      goto LABEL_11;
    }
    v26 = (uint64_t)v32;
    sub_21FA44968((uint64_t)v9, (uint64_t)v32, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v24(v23, 1, v25) == 1)
    {
      swift_release();
      swift_release();
      sub_21FA2D1F8((uint64_t)v15, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA326EC(v26, type metadata accessor for PBHKConcept);
LABEL_11:
      sub_21FA48E3C((uint64_t)v9, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
      return 0;
    }
    v28 = v23;
    v29 = v26;
    v30 = v33;
    sub_21FA2D23C(v28, v33, type metadata accessor for PBHKConcept);
    v31 = sub_21FA449D4(v29, v30, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
    swift_release();
    swift_release();
    sub_21FA326EC(v30, type metadata accessor for PBHKConcept);
    sub_21FA2D1F8((uint64_t)v15, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v29, type metadata accessor for PBHKConcept);
    sub_21FA2D1F8((uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
    if ((v31 & 1) != 0)
      return 1;
  }
  else
  {
    swift_release();
    swift_release();
  }
  return 0;
}

uint64_t PBHKAllergyReaction.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKAllergyReaction, &qword_255544730, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
}

uint64_t sub_21FB5B7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D900, &qword_255543B68, a2);
}

unint64_t sub_21FB5B7F8()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB5B814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyReaction.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB5B828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyReaction.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB5B83C()
{
  sub_21FA2A08C(&qword_25554A630, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
  return sub_21FC5AD70();
}

uint64_t sub_21FB5B88C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D8F8, (uint64_t)qword_255543B50, a1);
}

uint64_t sub_21FB5B8A8()
{
  sub_21FA2A08C(&qword_255544C18, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB5B8E8()
{
  sub_21FA2A08C(&qword_255544C18, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB5B938(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKAllergyReaction, (uint64_t (*)(uint64_t, uint64_t))sub_21FB5B370) & 1;
}

unint64_t static PBHKConditionRecord.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB5B97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v28;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543B70);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543B70);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_21FC5F730;
  v6 = v28 + v5;
  v7 = v28 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v28 + v5) = 1;
  *(_QWORD *)v7 = "abatement_string_value";
  *(_QWORD *)(v7 + 8) = 22;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "asserter";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "body_sites";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "category";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "clinical_status";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "condition";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "onset_string_value";
  *((_QWORD *)v21 + 1) = 18;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "recorded_date";
  *((_QWORD *)v23 + 1) = 13;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "severity";
  *(_QWORD *)(v24 + 8) = 8;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "verification_status";
  *((_QWORD *)v26 + 1) = 19;
  v26[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBHKConditionRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D908, (uint64_t)qword_255543B70, a1);
}

uint64_t sub_21FB5BCC4(uint64_t a1)
{
  return sub_21FB5E550(a1, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(void))sub_21FB5BCE0, &qword_255543B88);
}

char *sub_21FB5BCE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t, uint64_t, uint64_t);
  char *v4;
  char *v5;

  *((_QWORD *)v0 + 2) = 0;
  *((_QWORD *)v0 + 3) = 0xE000000000000000;
  *((_QWORD *)v0 + 4) = 0;
  *((_QWORD *)v0 + 5) = 0xE000000000000000;
  *((_QWORD *)v0 + 6) = MEMORY[0x24BEE4AF8];
  v1 = &v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category];
  v2 = type metadata accessor for PBHKConcept(0);
  v3 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus], 1, 1, v2);
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition], 1, 1, v2);
  v4 = &v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0xE000000000000000;
  v5 = &v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0xE000000000000000;
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity], 1, 1, v2);
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus], 1, 1, v2);
  return v0;
}

_QWORD *sub_21FB5BDE8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(void);
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  _QWORD *v42;
  char *v43;
  char *v44;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v38 = (uint64_t)&v36 - v5;
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  v1[6] = MEMORY[0x24BEE4AF8];
  v6 = (char *)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  v37 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  v7 = type metadata accessor for PBHKConcept(0);
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v6, 1, 1, v7);
  v39 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  v8();
  v40 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  v8();
  v9 = (_QWORD *)((char *)v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  v41 = v9;
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = (_QWORD *)((char *)v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  v42 = v10;
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v43 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  v8();
  v44 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  v8();
  swift_beginAccess();
  v12 = a1[2];
  v11 = a1[3];
  swift_beginAccess();
  v1[2] = v12;
  v1[3] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = a1[4];
  v13 = a1[5];
  swift_beginAccess();
  v2[4] = v14;
  v2[5] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v15 = a1[6];
  swift_beginAccess();
  v2[6] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  v17 = v38;
  sub_21FA44968(v16, v38, &qword_255540590, type metadata accessor for PBHKConcept);
  v18 = (uint64_t)v37;
  swift_beginAccess();
  sub_21FA2D2D8(v17, v18, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v19 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_21FA44968(v19, v17, &qword_255540590, type metadata accessor for PBHKConcept);
  v20 = (uint64_t)v39;
  swift_beginAccess();
  sub_21FA2D2D8(v17, v20, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v21 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_21FA44968(v21, v17, &qword_255540590, type metadata accessor for PBHKConcept);
  v22 = (uint64_t)v40;
  swift_beginAccess();
  sub_21FA2D2D8(v17, v22, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v23 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  swift_beginAccess();
  v25 = *v23;
  v24 = v23[1];
  v26 = v41;
  swift_beginAccess();
  *v26 = v25;
  v26[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  v29 = *v27;
  v28 = v27[1];
  v30 = v42;
  swift_beginAccess();
  *v30 = v29;
  v30[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_21FA44968(v31, v17, &qword_255540590, type metadata accessor for PBHKConcept);
  v32 = (uint64_t)v43;
  swift_beginAccess();
  sub_21FA2D2D8(v17, v32, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v33 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_21FA44968(v33, v17, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_release();
  v34 = (uint64_t)v44;
  swift_beginAccess();
  sub_21FA2D2D8(v17, v34, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return v2;
}

uint64_t sub_21FB5C338()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus, &qword_255540590, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_21FB5C424()
{
  return sub_21FB877D4((void (*)(void))sub_21FB5C338);
}

uint64_t PBHKConditionRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB5C464);
}

uint64_t sub_21FB5C464()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 4:
        case 5:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 6:
        case 9:
        case 10:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 7:
        case 8:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKConditionRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB5C7A4);
}

uint64_t sub_21FB5C7A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v5 = v4;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v66 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v67 = (uint64_t)&v63 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v70 = (uint64_t)&v63 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v71 = (uint64_t)&v63 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v63 - v17;
  v72 = type metadata accessor for PBHKConcept(0);
  v19 = *(_QWORD *)(v72 - 8);
  v20 = MEMORY[0x24BDAC7A8](v72);
  v64 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v65 = (uint64_t)&v63 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v68 = (uint64_t)&v63 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v69 = (uint64_t)&v63 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v63 - v28;
  swift_beginAccess();
  v30 = a1[3];
  v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0)
    v31 = a1[2] & 0xFFFFFFFFFFFFLL;
  if (v31)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v4)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v32 = a1[5];
  v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0)
    v33 = a1[4] & 0xFFFFFFFFFFFFLL;
  if (v33)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (!v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  swift_beginAccess();
  if (*(_QWORD *)(a1[6] + 16))
  {
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    swift_bridgeObjectRetain();
    sub_21FC5AF44();
    if (v4)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v35 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v35, (uint64_t)v18, &qword_255540590, type metadata accessor for PBHKConcept);
  v36 = v72;
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v38 = v37(v18, 1, v72);
  v63 = a4;
  if (v38 == 1)
  {
    sub_21FA2D1F8((uint64_t)v18, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v18, (uint64_t)v29, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    v36 = v72;
    result = sub_21FA326EC((uint64_t)v29, type metadata accessor for PBHKConcept);
    if (v4)
      return result;
  }
  v39 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  v40 = v71;
  sub_21FA44968(v39, v71, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v37((char *)v40, 1, v36) == 1)
  {
    sub_21FA2D1F8(v40, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    v41 = v40;
    v42 = v69;
    sub_21FA2D23C(v41, v69, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    result = sub_21FA326EC(v42, type metadata accessor for PBHKConcept);
    if (v4)
      return result;
  }
  v43 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  v44 = v70;
  sub_21FA44968(v43, v70, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v37((char *)v44, 1, v36) == 1)
  {
    sub_21FA2D1F8(v44, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    v45 = v44;
    v46 = v68;
    sub_21FA2D23C(v45, v68, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    result = sub_21FA326EC(v46, type metadata accessor for PBHKConcept);
    if (v4)
      return result;
  }
  v47 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  swift_beginAccess();
  v48 = *v47;
  v49 = v47[1];
  v50 = HIBYTE(v49) & 0xF;
  if ((v49 & 0x2000000000000000) == 0)
    v50 = v48 & 0xFFFFFFFFFFFFLL;
  if (!v50 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v5))
  {
    v51 = (_QWORD *)((char *)a1
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
    swift_beginAccess();
    v52 = *v51;
    v53 = v51[1];
    v54 = HIBYTE(v53) & 0xF;
    if ((v53 & 0x2000000000000000) == 0)
      v54 = v52 & 0xFFFFFFFFFFFFLL;
    if (!v54 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v5))
    {
      v55 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
      swift_beginAccess();
      v56 = v67;
      sub_21FA44968(v55, v67, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v37((char *)v56, 1, v36) == 1)
      {
        sub_21FA2D1F8(v56, &qword_255540590, type metadata accessor for PBHKConcept);
      }
      else
      {
        v57 = v56;
        v58 = v65;
        sub_21FA2D23C(v57, v65, type metadata accessor for PBHKConcept);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        sub_21FC5AF50();
        result = sub_21FA326EC(v58, type metadata accessor for PBHKConcept);
        if (v5)
          return result;
      }
      v59 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
      swift_beginAccess();
      v60 = v66;
      sub_21FA44968(v59, v66, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v37((char *)v60, 1, v36) == 1)
      {
        return sub_21FA2D1F8(v60, &qword_255540590, type metadata accessor for PBHKConcept);
      }
      else
      {
        v61 = v60;
        v62 = v64;
        sub_21FA2D23C(v61, v64, type metadata accessor for PBHKConcept);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        sub_21FC5AF50();
        return sub_21FA326EC(v62, type metadata accessor for PBHKConcept);
      }
    }
  }
  return result;
}

BOOL sub_21FB5D050(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _BOOL8 result;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;

  v131 = type metadata accessor for PBHKConcept(0);
  v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v5 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v130 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v121 = (uint64_t)&v115 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v124 = (uint64_t)&v115 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v126 = (uint64_t)&v115 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v115 - v16;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v118 = (uint64_t)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v120 = (uint64_t)&v115 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v119 = (uint64_t)&v115 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v122 = (uint64_t)&v115 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v123 = (uint64_t)&v115 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v127 = (uint64_t)&v115 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v125 = (uint64_t)&v115 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v128 = (uint64_t)&v115 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v115 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v115 - v38;
  swift_beginAccess();
  v41 = a1[2];
  v40 = a1[3];
  swift_beginAccess();
  if (v41 == a2[2] && v40 == a2[3] || (v42 = sub_21FC5BDF0(), result = 0, (v42 & 1) != 0))
  {
    if ((swift_beginAccess(), v44 = a1[4], v45 = a1[5], swift_beginAccess(), v44 == a2[4]) && v45 == a2[5]
      || (v46 = sub_21FC5BDF0(), result = 0, (v46 & 1) != 0))
    {
      v117 = v5;
      swift_beginAccess();
      v47 = a1[6];
      swift_beginAccess();
      v48 = a2[6];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49 = sub_21FB11504(v47, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0)
        goto LABEL_30;
      v116 = v9;
      v50 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
      swift_beginAccess();
      sub_21FA44968(v50, (uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
      v51 = (uint64_t)a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
      swift_beginAccess();
      v52 = (uint64_t)&v17[*(int *)(v130 + 48)];
      sub_21FA44968((uint64_t)v39, (uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA44968(v51, v52, &qword_255540590, type metadata accessor for PBHKConcept);
      v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v129 + 6);
      v54 = v131;
      if (v53((uint64_t)v17, 1, v131) == 1)
      {
        sub_21FA2D1F8((uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
        if (v53(v52, 1, v54) == 1)
        {
          sub_21FA2D1F8((uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_15:
          v59 = (uint64_t)a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
          swift_beginAccess();
          v60 = v128;
          sub_21FA44968(v59, v128, &qword_255540590, type metadata accessor for PBHKConcept);
          v61 = (uint64_t)a2
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
          swift_beginAccess();
          v62 = v126;
          v63 = v126 + *(int *)(v130 + 48);
          sub_21FA44968(v60, v126, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA44968(v61, v63, &qword_255540590, type metadata accessor for PBHKConcept);
          v64 = v131;
          if (v53(v62, 1, v131) == 1)
          {
            sub_21FA2D1F8(v60, &qword_255540590, type metadata accessor for PBHKConcept);
            v65 = v53(v63, 1, v64);
            v66 = v127;
            if (v65 == 1)
            {
              sub_21FA2D1F8(v62, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_22:
              v72 = (uint64_t)a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
              swift_beginAccess();
              sub_21FA44968(v72, v66, &qword_255540590, type metadata accessor for PBHKConcept);
              v73 = (char *)a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
              swift_beginAccess();
              v74 = v66;
              v75 = v124;
              v76 = v124 + *(int *)(v130 + 48);
              sub_21FA44968(v74, v124, &qword_255540590, type metadata accessor for PBHKConcept);
              v77 = (uint64_t)v73;
              v78 = v131;
              v79 = v75;
              sub_21FA44968(v77, v76, &qword_255540590, type metadata accessor for PBHKConcept);
              if (v53(v75, 1, v78) == 1)
              {
                sub_21FA2D1F8(v74, &qword_255540590, type metadata accessor for PBHKConcept);
                if (v53(v76, 1, v78) != 1)
                {
LABEL_28:
                  v57 = v79;
                  goto LABEL_29;
                }
                sub_21FA2D1F8(v75, &qword_255540590, type metadata accessor for PBHKConcept);
              }
              else
              {
                v80 = v75;
                v81 = v123;
                sub_21FA44968(v80, v123, &qword_255540590, type metadata accessor for PBHKConcept);
                if (v53(v76, 1, v78) == 1)
                {
                  sub_21FA2D1F8(v127, &qword_255540590, type metadata accessor for PBHKConcept);
                  v82 = v81;
LABEL_27:
                  sub_21FA326EC(v82, type metadata accessor for PBHKConcept);
                  goto LABEL_28;
                }
                v83 = (uint64_t)v117;
                sub_21FA2D23C(v76, (uint64_t)v117, type metadata accessor for PBHKConcept);
                v84 = sub_21FA449D4(v81, v83, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
                sub_21FA326EC(v83, type metadata accessor for PBHKConcept);
                sub_21FA2D1F8(v127, &qword_255540590, type metadata accessor for PBHKConcept);
                sub_21FA326EC(v81, type metadata accessor for PBHKConcept);
                sub_21FA2D1F8(v79, &qword_255540590, type metadata accessor for PBHKConcept);
                if ((v84 & 1) == 0)
                  goto LABEL_30;
              }
              v85 = (_QWORD *)((char *)a1
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
              swift_beginAccess();
              v86 = *v85;
              v87 = v85[1];
              v88 = (_QWORD *)((char *)a2
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
              swift_beginAccess();
              if ((v86 != *v88 || v87 != v88[1]) && (sub_21FC5BDF0() & 1) == 0)
                goto LABEL_30;
              v89 = (_QWORD *)((char *)a1
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
              swift_beginAccess();
              v90 = *v89;
              v91 = v89[1];
              v92 = (_QWORD *)((char *)a2
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
              swift_beginAccess();
              if ((v90 != *v92 || v91 != v92[1]) && (sub_21FC5BDF0() & 1) == 0)
                goto LABEL_30;
              v93 = (uint64_t)a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
              swift_beginAccess();
              v94 = v122;
              sub_21FA44968(v93, v122, &qword_255540590, type metadata accessor for PBHKConcept);
              v95 = (char *)a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
              swift_beginAccess();
              v96 = v121;
              v97 = v121 + *(int *)(v130 + 48);
              sub_21FA44968(v94, v121, &qword_255540590, type metadata accessor for PBHKConcept);
              v98 = (uint64_t)v95;
              v99 = v131;
              v79 = v96;
              sub_21FA44968(v98, v97, &qword_255540590, type metadata accessor for PBHKConcept);
              if (v53(v96, 1, v99) == 1)
              {
                sub_21FA2D1F8(v94, &qword_255540590, type metadata accessor for PBHKConcept);
                if (v53(v97, 1, v99) == 1)
                {
                  sub_21FA2D1F8(v96, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_46:
                  v105 = (uint64_t)a1
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
                  swift_beginAccess();
                  v106 = v120;
                  sub_21FA44968(v105, v120, &qword_255540590, type metadata accessor for PBHKConcept);
                  v107 = (char *)a2
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
                  swift_beginAccess();
                  v108 = (uint64_t)v116;
                  v109 = (uint64_t)&v116[*(int *)(v130 + 48)];
                  sub_21FA44968(v106, (uint64_t)v116, &qword_255540590, type metadata accessor for PBHKConcept);
                  v110 = (uint64_t)v107;
                  v111 = v131;
                  sub_21FA44968(v110, v109, &qword_255540590, type metadata accessor for PBHKConcept);
                  if (v53(v108, 1, v111) == 1)
                  {
                    swift_release();
                    swift_release();
                    sub_21FA2D1F8(v106, &qword_255540590, type metadata accessor for PBHKConcept);
                    if (v53(v109, 1, v111) == 1)
                    {
                      sub_21FA2D1F8((uint64_t)v116, &qword_255540590, type metadata accessor for PBHKConcept);
                      return 1;
                    }
                  }
                  else
                  {
                    v112 = v118;
                    sub_21FA44968(v108, v118, &qword_255540590, type metadata accessor for PBHKConcept);
                    if (v53(v109, 1, v111) != 1)
                    {
                      v113 = (uint64_t)v117;
                      sub_21FA2D23C(v109, (uint64_t)v117, type metadata accessor for PBHKConcept);
                      v114 = sub_21FA449D4(v112, v113, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
                      swift_release();
                      swift_release();
                      sub_21FA326EC(v113, type metadata accessor for PBHKConcept);
                      sub_21FA2D1F8(v120, &qword_255540590, type metadata accessor for PBHKConcept);
                      sub_21FA326EC(v112, type metadata accessor for PBHKConcept);
                      sub_21FA2D1F8(v108, &qword_255540590, type metadata accessor for PBHKConcept);
                      return (v114 & 1) != 0;
                    }
                    swift_release();
                    swift_release();
                    sub_21FA2D1F8(v120, &qword_255540590, type metadata accessor for PBHKConcept);
                    sub_21FA326EC(v112, type metadata accessor for PBHKConcept);
                  }
                  sub_21FA48E3C((uint64_t)v116, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
                  return 0;
                }
                goto LABEL_28;
              }
              v100 = v96;
              v101 = v119;
              sub_21FA44968(v100, v119, &qword_255540590, type metadata accessor for PBHKConcept);
              v102 = v53(v97, 1, v99);
              v103 = (uint64_t)v117;
              if (v102 == 1)
              {
                sub_21FA2D1F8(v122, &qword_255540590, type metadata accessor for PBHKConcept);
                v82 = v101;
                goto LABEL_27;
              }
              sub_21FA2D23C(v97, (uint64_t)v117, type metadata accessor for PBHKConcept);
              v104 = sub_21FA449D4(v101, v103, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
              sub_21FA326EC(v103, type metadata accessor for PBHKConcept);
              sub_21FA2D1F8(v122, &qword_255540590, type metadata accessor for PBHKConcept);
              sub_21FA326EC(v101, type metadata accessor for PBHKConcept);
              sub_21FA2D1F8(v79, &qword_255540590, type metadata accessor for PBHKConcept);
              if ((v104 & 1) != 0)
                goto LABEL_46;
LABEL_30:
              swift_release();
              swift_release();
              return 0;
            }
          }
          else
          {
            v67 = v53;
            v68 = v125;
            sub_21FA44968(v62, v125, &qword_255540590, type metadata accessor for PBHKConcept);
            v129 = v67;
            v69 = v67(v63, 1, v64);
            v70 = (uint64_t)v117;
            v66 = v127;
            if (v69 != 1)
            {
              sub_21FA2D23C(v63, (uint64_t)v117, type metadata accessor for PBHKConcept);
              v71 = sub_21FA449D4(v68, v70, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
              sub_21FA326EC(v70, type metadata accessor for PBHKConcept);
              sub_21FA2D1F8(v128, &qword_255540590, type metadata accessor for PBHKConcept);
              sub_21FA326EC(v68, type metadata accessor for PBHKConcept);
              sub_21FA2D1F8(v62, &qword_255540590, type metadata accessor for PBHKConcept);
              v53 = v129;
              if ((v71 & 1) == 0)
                goto LABEL_30;
              goto LABEL_22;
            }
            sub_21FA2D1F8(v128, &qword_255540590, type metadata accessor for PBHKConcept);
            sub_21FA326EC(v68, type metadata accessor for PBHKConcept);
          }
          v57 = v62;
LABEL_29:
          sub_21FA48E3C(v57, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
          goto LABEL_30;
        }
      }
      else
      {
        sub_21FA44968((uint64_t)v17, (uint64_t)v37, &qword_255540590, type metadata accessor for PBHKConcept);
        v55 = v53(v52, 1, v54);
        v56 = (uint64_t)v117;
        if (v55 != 1)
        {
          sub_21FA2D23C(v52, (uint64_t)v117, type metadata accessor for PBHKConcept);
          v58 = sub_21FA449D4((uint64_t)v37, v56, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
          sub_21FA326EC(v56, type metadata accessor for PBHKConcept);
          sub_21FA2D1F8((uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA326EC((uint64_t)v37, type metadata accessor for PBHKConcept);
          sub_21FA2D1F8((uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
          if ((v58 & 1) == 0)
            goto LABEL_30;
          goto LABEL_15;
        }
        sub_21FA2D1F8((uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA326EC((uint64_t)v37, type metadata accessor for PBHKConcept);
      }
      v57 = (uint64_t)v17;
      goto LABEL_29;
    }
  }
  return result;
}

uint64_t PBHKConditionRecord.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKConditionRecord, &qword_255544738, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
}

uint64_t sub_21FB5DF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D910, &qword_255543B88, a2);
}

unint64_t sub_21FB5DF98()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB5DFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConditionRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB5DFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConditionRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB5DFDC()
{
  sub_21FA2A08C(&qword_25554A628, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
  return sub_21FC5AD70();
}

uint64_t sub_21FB5E02C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D908, (uint64_t)qword_255543B70, a1);
}

uint64_t sub_21FB5E048()
{
  sub_21FA2A08C(&qword_255544C30, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB5E088()
{
  sub_21FA2A08C(&qword_255544C30, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB5E0D8(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKConditionRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB5D050) & 1;
}

unint64_t static PBHKVaccinationRecord.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FB5E11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v36;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543B90);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543B90);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_21FC66540;
  v6 = v36 + v5;
  v7 = v36 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v36 + v5) = 1;
  *(_QWORD *)v7 = "administration_date";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v36 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "body_site";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v36 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "dose_number";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v36 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "dose_quantity";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v36 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "expiration_date";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v36 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "not_given";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v36 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "patient_reported";
  *((_QWORD *)v21 + 1) = 16;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v36 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "performer";
  *((_QWORD *)v23 + 1) = 9;
  v23[16] = 2;
  v10();
  v24 = v36 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "reaction";
  *(_QWORD *)(v24 + 8) = 8;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v36 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "reasons";
  *((_QWORD *)v26 + 1) = 7;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v36 + v5 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "reasons_not_given";
  *((_QWORD *)v28 + 1) = 17;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v36 + v5 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "route";
  *((_QWORD *)v30 + 1) = 5;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v36 + v5 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "status";
  *((_QWORD *)v32 + 1) = 6;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v36 + v5 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "vaccination";
  *((_QWORD *)v34 + 1) = 11;
  v34[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBHKVaccinationRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D918, (uint64_t)qword_255543B90, a1);
}

uint64_t sub_21FB5E534(uint64_t a1)
{
  return sub_21FB5E550(a1, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E598, &qword_255543BA8);
}

uint64_t sub_21FB5E550(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t result;

  a2(0);
  swift_allocObject();
  result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_21FB5E598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  v2 = type metadata accessor for PBHKConcept(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven) = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported) = 0;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  v8 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven) = v9;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route, 1, 1, v2);
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination, 1, 1, v2);
  return v0;
}

uint64_t sub_21FB5E6DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v67 = (uint64_t)&v56 - v5;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  v57 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  v7 = type metadata accessor for PBHKConcept(0);
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v6, 1, 1, v7);
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v58 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  *v58 = 0;
  v59 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
  *v59 = 0;
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  v60 = v12;
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v13 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  v61 = v13;
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v62 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
  v14 = MEMORY[0x24BEE4AF8];
  *v62 = MEMORY[0x24BEE4AF8];
  v15 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
  *v15 = v14;
  v63 = v15;
  v64 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  v8();
  v65 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v8();
  v66 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  v8();
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v17;
  *(_QWORD *)(v1 + 24) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  v19 = v67;
  sub_21FA44968(v18, v67, &qword_255540590, type metadata accessor for PBHKConcept);
  v20 = v57;
  swift_beginAccess();
  sub_21FA2D2D8(v19, v20, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v21 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  swift_beginAccess();
  v23 = *v21;
  v22 = v21[1];
  swift_beginAccess();
  *v9 = v23;
  v9[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  swift_beginAccess();
  v26 = *v24;
  v25 = v24[1];
  swift_beginAccess();
  *v10 = v26;
  v10[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  swift_beginAccess();
  v29 = *v27;
  v28 = v27[1];
  swift_beginAccess();
  *v11 = v29;
  v11[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  swift_beginAccess();
  LOBYTE(v30) = *v30;
  v31 = v58;
  swift_beginAccess();
  *v31 = (_BYTE)v30;
  v32 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
  swift_beginAccess();
  LOBYTE(v32) = *v32;
  v33 = v59;
  swift_beginAccess();
  *v33 = (_BYTE)v32;
  v34 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  swift_beginAccess();
  v36 = *v34;
  v35 = v34[1];
  v37 = v60;
  swift_beginAccess();
  *v37 = v36;
  v37[1] = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  swift_beginAccess();
  v40 = *v38;
  v39 = v38[1];
  v41 = v61;
  swift_beginAccess();
  *v41 = v40;
  v41[1] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
  swift_beginAccess();
  v43 = *v42;
  v44 = v62;
  swift_beginAccess();
  *v44 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
  swift_beginAccess();
  v46 = *v45;
  v47 = v63;
  swift_beginAccess();
  *v47 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  v49 = v67;
  sub_21FA44968(v48, v67, &qword_255540590, type metadata accessor for PBHKConcept);
  v50 = v64;
  swift_beginAccess();
  sub_21FA2D2D8(v49, v50, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v51 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v51, v49, &qword_255540590, type metadata accessor for PBHKConcept);
  v52 = v65;
  swift_beginAccess();
  sub_21FA2D2D8(v49, v52, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v53 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_21FA44968(v53, v49, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_release();
  v54 = v66;
  swift_beginAccess();
  sub_21FA2D2D8(v49, v54, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return v2;
}

uint64_t sub_21FB5ED98()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination, &qword_255540590, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_21FB5EEB8()
{
  return sub_21FB877D4((void (*)(void))sub_21FB5ED98);
}

uint64_t PBHKVaccinationRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB5EEF8);
}

uint64_t sub_21FB5EEF8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 6:
        case 7:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADAC();
          goto LABEL_5;
        case 8:
        case 9:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 10:
        case 11:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 12:
        case 13:
        case 14:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKVaccinationRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB5F304);
}

uint64_t sub_21FB5F304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v69 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v71 = (uint64_t)&v65 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v72 = (uint64_t)&v65 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v65 - v11;
  v73 = type metadata accessor for PBHKConcept(0);
  v13 = *(_QWORD *)(v73 - 8);
  v14 = MEMORY[0x24BDAC7A8](v73);
  v67 = (uint64_t)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v68 = (uint64_t)&v65 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v70 = (uint64_t)&v65 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v65 - v20;
  swift_beginAccess();
  v74 = a1;
  v22 = *(_QWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 24);
  v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v24 = v22 & 0xFFFFFFFFFFFFLL;
  if (v24)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v2)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v26 = v74
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v26, (uint64_t)v12, &qword_255540590, type metadata accessor for PBHKConcept);
  v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v66(v12, 1, v73) == 1)
  {
    sub_21FA2D1F8((uint64_t)v12, &qword_255540590, type metadata accessor for PBHKConcept);
    v27 = v74;
    v28 = v2;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v12, (uint64_t)v21, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    v28 = v2;
    if (v2)
      return sub_21FA326EC((uint64_t)v21, type metadata accessor for PBHKConcept);
    sub_21FA326EC((uint64_t)v21, type metadata accessor for PBHKConcept);
    v27 = v74;
  }
  v29 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  swift_beginAccess();
  v30 = *v29;
  v31 = v29[1];
  v32 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0)
    v32 = v30 & 0xFFFFFFFFFFFFLL;
  if (v32)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v28)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v33 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  swift_beginAccess();
  v34 = *v33;
  v35 = v33[1];
  v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v36 = v34 & 0xFFFFFFFFFFFFLL;
  if (v36)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (!v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_22:
  v37 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  swift_beginAccess();
  v38 = *v37;
  v39 = v37[1];
  v40 = HIBYTE(v39) & 0xF;
  if ((v39 & 0x2000000000000000) == 0)
    v40 = v38 & 0xFFFFFFFFFFFFLL;
  if (v40)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v28)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v41 = (_BYTE *)(v27
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  swift_beginAccess();
  if (*v41 != 1 || (result = sub_21FC5AECC(), !v28))
  {
    v42 = (_BYTE *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
    swift_beginAccess();
    if (*v42 != 1 || (result = sub_21FC5AECC(), !v28))
    {
      v43 = (uint64_t *)(v27
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
      swift_beginAccess();
      v44 = *v43;
      v45 = v43[1];
      v46 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0)
        v46 = v44 & 0xFFFFFFFFFFFFLL;
      if (!v46 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v28))
      {
        v47 = (uint64_t *)(v27
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
        swift_beginAccess();
        v48 = *v47;
        v49 = v47[1];
        v50 = HIBYTE(v49) & 0xF;
        if ((v49 & 0x2000000000000000) == 0)
          v50 = v48 & 0xFFFFFFFFFFFFLL;
        if (!v50 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v28))
        {
          v51 = v27
              + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons;
          swift_beginAccess();
          if (!*(_QWORD *)(*(_QWORD *)v51 + 16)
            || (sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v28))
          {
            v52 = v27
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven;
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)v52 + 16)
              || (sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v28))
            {
              v53 = v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
              swift_beginAccess();
              v54 = v72;
              sub_21FA44968(v53, v72, &qword_255540590, type metadata accessor for PBHKConcept);
              if (v66((char *)v54, 1, v73) == 1)
              {
                sub_21FA2D1F8(v54, &qword_255540590, type metadata accessor for PBHKConcept);
              }
              else
              {
                v55 = v54;
                v56 = v70;
                sub_21FA2D23C(v55, v70, type metadata accessor for PBHKConcept);
                sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
                sub_21FC5AF50();
                result = sub_21FA326EC(v56, type metadata accessor for PBHKConcept);
                if (v28)
                  return result;
              }
              v57 = v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
              swift_beginAccess();
              v58 = v71;
              sub_21FA44968(v57, v71, &qword_255540590, type metadata accessor for PBHKConcept);
              if (v66((char *)v58, 1, v73) == 1)
              {
                sub_21FA2D1F8(v58, &qword_255540590, type metadata accessor for PBHKConcept);
              }
              else
              {
                v59 = v58;
                v60 = v68;
                sub_21FA2D23C(v59, v68, type metadata accessor for PBHKConcept);
                sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
                sub_21FC5AF50();
                result = sub_21FA326EC(v60, type metadata accessor for PBHKConcept);
                if (v28)
                  return result;
              }
              v61 = v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
              swift_beginAccess();
              v62 = v61;
              v63 = v69;
              sub_21FA44968(v62, v69, &qword_255540590, type metadata accessor for PBHKConcept);
              if (v66((char *)v63, 1, v73) == 1)
              {
                return sub_21FA2D1F8(v63, &qword_255540590, type metadata accessor for PBHKConcept);
              }
              else
              {
                v64 = v67;
                sub_21FA2D23C(v63, v67, type metadata accessor for PBHKConcept);
                sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
                sub_21FC5AF50();
                return sub_21FA326EC(v64, type metadata accessor for PBHKConcept);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_21FB5FC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _BOOL8 result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unsigned __int8 *v63;
  int v64;
  unsigned __int8 *v65;
  unsigned __int8 *v66;
  int v67;
  unsigned __int8 *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;

  v136 = type metadata accessor for PBHKConcept(0);
  v134 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v132 = (uint64_t)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v135 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v125 = (uint64_t)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v127 = (uint64_t)&v122 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v129 = (uint64_t)&v122 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v122 - v12;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v122 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v126 = (uint64_t)&v122 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v130 = (uint64_t)&v122 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v128 = (uint64_t)&v122 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v131 = (uint64_t)&v122 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v133 = (uint64_t)&v122 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v122 - v31;
  swift_beginAccess();
  v34 = *(_QWORD *)(a1 + 16);
  v33 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v35 = a2;
  if (v34 == *(_QWORD *)(a2 + 16) && v33 == *(_QWORD *)(a2 + 24)
    || (v36 = sub_21FC5BDF0(), result = 0, (v36 & 1) != 0))
  {
    v123 = v17;
    v124 = v20;
    v38 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
    swift_beginAccess();
    sub_21FA44968(v38, (uint64_t)v32, &qword_255540590, type metadata accessor for PBHKConcept);
    v39 = a1;
    v40 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
    swift_beginAccess();
    v41 = (uint64_t)&v13[*(int *)(v135 + 48)];
    sub_21FA44968((uint64_t)v32, (uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA44968(v40, v41, &qword_255540590, type metadata accessor for PBHKConcept);
    v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v134 + 6);
    v43 = v136;
    if (v42((uint64_t)v13, 1, v136) == 1)
    {
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v32, &qword_255540590, type metadata accessor for PBHKConcept);
      v44 = v42(v41, 1, v43);
      v45 = v35;
      v46 = a1;
      if (v44 != 1)
      {
LABEL_10:
        sub_21FA48E3C((uint64_t)v13, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
        goto LABEL_11;
      }
      v134 = v42;
      sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
    }
    else
    {
      v47 = v133;
      sub_21FA44968((uint64_t)v13, v133, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v42(v41, 1, v43) == 1)
      {
        swift_retain();
        swift_retain();
        sub_21FA2D1F8((uint64_t)v32, &qword_255540590, type metadata accessor for PBHKConcept);
        v48 = v47;
LABEL_9:
        sub_21FA326EC(v48, type metadata accessor for PBHKConcept);
        goto LABEL_10;
      }
      v134 = v42;
      v49 = v132;
      sub_21FA2D23C(v41, v132, type metadata accessor for PBHKConcept);
      v46 = v39;
      swift_retain();
      swift_retain();
      v50 = sub_21FA449D4(v47, v49, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
      sub_21FA326EC(v49, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8((uint64_t)v32, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA326EC(v47, type metadata accessor for PBHKConcept);
      v45 = v35;
      sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
      if ((v50 & 1) == 0)
        goto LABEL_11;
    }
    v51 = (uint64_t *)(v46
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
    swift_beginAccess();
    v52 = *v51;
    v53 = v51[1];
    v54 = (_QWORD *)(v45
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
    swift_beginAccess();
    if ((v52 != *v54 || v53 != v54[1]) && (sub_21FC5BDF0() & 1) == 0)
      goto LABEL_11;
    v55 = (uint64_t *)(v46
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
    swift_beginAccess();
    v56 = *v55;
    v57 = v55[1];
    v58 = (_QWORD *)(v45
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
    swift_beginAccess();
    if ((v56 != *v58 || v57 != v58[1]) && (sub_21FC5BDF0() & 1) == 0)
      goto LABEL_11;
    v59 = (uint64_t *)(v46
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
    swift_beginAccess();
    v60 = *v59;
    v61 = v59[1];
    v62 = (_QWORD *)(v45
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
    swift_beginAccess();
    if ((v60 != *v62 || v61 != v62[1]) && (sub_21FC5BDF0() & 1) == 0)
      goto LABEL_11;
    v63 = (unsigned __int8 *)(v46
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
    swift_beginAccess();
    v64 = *v63;
    v65 = (unsigned __int8 *)(v45
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
    swift_beginAccess();
    if (v64 != *v65)
      goto LABEL_11;
    v66 = (unsigned __int8 *)(v46
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
    swift_beginAccess();
    v67 = *v66;
    v68 = (unsigned __int8 *)(v45
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
    swift_beginAccess();
    if (v67 != *v68)
      goto LABEL_11;
    v69 = (uint64_t *)(v46
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
    swift_beginAccess();
    v70 = *v69;
    v71 = v69[1];
    v72 = (_QWORD *)(v45
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
    swift_beginAccess();
    if ((v70 != *v72 || v71 != v72[1]) && (sub_21FC5BDF0() & 1) == 0)
      goto LABEL_11;
    v73 = (uint64_t *)(v46
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
    swift_beginAccess();
    v74 = *v73;
    v75 = v73[1];
    v76 = (_QWORD *)(v45
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
    swift_beginAccess();
    if ((v74 != *v76 || v75 != v76[1]) && (sub_21FC5BDF0() & 1) == 0)
      goto LABEL_11;
    v77 = (uint64_t *)(v46
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
    swift_beginAccess();
    v78 = *v77;
    v79 = (uint64_t *)(v45
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
    swift_beginAccess();
    v80 = *v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81 = sub_21FB11504(v78, v80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v81 & 1) == 0)
      goto LABEL_11;
    v82 = (uint64_t *)(v46
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
    swift_beginAccess();
    v83 = *v82;
    v84 = (uint64_t *)(v45
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
    swift_beginAccess();
    v85 = *v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v86 = sub_21FB11504(v83, v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v86 & 1) == 0)
      goto LABEL_11;
    v87 = v46
        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
    swift_beginAccess();
    v88 = v131;
    sub_21FA44968(v87, v131, &qword_255540590, type metadata accessor for PBHKConcept);
    v89 = v45
        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
    swift_beginAccess();
    v90 = v129;
    v91 = v129 + *(int *)(v135 + 48);
    sub_21FA44968(v88, v129, &qword_255540590, type metadata accessor for PBHKConcept);
    v13 = (char *)v90;
    sub_21FA44968(v89, v91, &qword_255540590, type metadata accessor for PBHKConcept);
    v92 = v90;
    v93 = v136;
    v94 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v134;
    if (v134(v92, 1, v136) == 1)
    {
      sub_21FA2D1F8(v88, &qword_255540590, type metadata accessor for PBHKConcept);
      v95 = v94(v91, 1, v93);
      v96 = v130;
      if (v95 != 1)
        goto LABEL_10;
      sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
    }
    else
    {
      v97 = v128;
      sub_21FA44968((uint64_t)v13, v128, &qword_255540590, type metadata accessor for PBHKConcept);
      v98 = v94(v91, 1, v93);
      v96 = v130;
      if (v98 == 1)
      {
        v99 = v131;
LABEL_45:
        sub_21FA2D1F8(v99, &qword_255540590, type metadata accessor for PBHKConcept);
        v48 = v97;
        goto LABEL_9;
      }
      v100 = v132;
      sub_21FA2D23C(v91, v132, type metadata accessor for PBHKConcept);
      v101 = sub_21FA449D4(v97, v100, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
      sub_21FA326EC(v100, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8(v131, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA326EC(v97, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
      if ((v101 & 1) == 0)
        goto LABEL_11;
    }
    v102 = v46
         + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
    swift_beginAccess();
    sub_21FA44968(v102, v96, &qword_255540590, type metadata accessor for PBHKConcept);
    v103 = v45
         + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
    swift_beginAccess();
    v104 = v127;
    v105 = v127 + *(int *)(v135 + 48);
    sub_21FA44968(v96, v127, &qword_255540590, type metadata accessor for PBHKConcept);
    v106 = v103;
    v13 = (char *)v104;
    sub_21FA44968(v106, v105, &qword_255540590, type metadata accessor for PBHKConcept);
    v107 = v104;
    v108 = v136;
    if (v94(v107, 1, v136) == 1)
    {
      sub_21FA2D1F8(v96, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v94(v105, 1, v108) == 1)
      {
        v109 = v94;
        sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_47:
        v112 = v46
             + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
        swift_beginAccess();
        v113 = (uint64_t)v124;
        sub_21FA44968(v112, (uint64_t)v124, &qword_255540590, type metadata accessor for PBHKConcept);
        v114 = v45
             + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
        swift_beginAccess();
        v115 = v125;
        v116 = v125 + *(int *)(v135 + 48);
        sub_21FA44968(v113, v125, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA44968(v114, v116, &qword_255540590, type metadata accessor for PBHKConcept);
        v117 = v136;
        if (v109(v115, 1, v136) == 1)
        {
          swift_release();
          swift_release();
          sub_21FA2D1F8(v113, &qword_255540590, type metadata accessor for PBHKConcept);
          if (v109(v116, 1, v117) == 1)
          {
            sub_21FA2D1F8(v115, &qword_255540590, type metadata accessor for PBHKConcept);
            return 1;
          }
        }
        else
        {
          v118 = (uint64_t)v123;
          sub_21FA44968(v115, (uint64_t)v123, &qword_255540590, type metadata accessor for PBHKConcept);
          v119 = v115;
          if (v109(v116, 1, v117) != 1)
          {
            v120 = v132;
            sub_21FA2D23C(v116, v132, type metadata accessor for PBHKConcept);
            v121 = sub_21FA449D4(v118, v120, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
            swift_release();
            swift_release();
            sub_21FA326EC(v120, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8((uint64_t)v124, &qword_255540590, type metadata accessor for PBHKConcept);
            sub_21FA326EC(v118, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8(v119, &qword_255540590, type metadata accessor for PBHKConcept);
            return (v121 & 1) != 0;
          }
          swift_release();
          swift_release();
          sub_21FA2D1F8((uint64_t)v124, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA326EC(v118, type metadata accessor for PBHKConcept);
        }
        sub_21FA48E3C(v115, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
        return 0;
      }
      goto LABEL_10;
    }
    v97 = v126;
    sub_21FA44968((uint64_t)v13, v126, &qword_255540590, type metadata accessor for PBHKConcept);
    v109 = v94;
    if (v94(v105, 1, v108) != 1)
    {
      v110 = v132;
      sub_21FA2D23C(v105, v132, type metadata accessor for PBHKConcept);
      v111 = sub_21FA449D4(v97, v110, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
      sub_21FA326EC(v110, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8(v130, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA326EC(v97, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
      if ((v111 & 1) != 0)
        goto LABEL_47;
LABEL_11:
      swift_release();
      swift_release();
      return 0;
    }
    v99 = v130;
    goto LABEL_45;
  }
  return result;
}

uint64_t PBHKVaccinationRecord.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKVaccinationRecord, &qword_255544740, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
}

uint64_t sub_21FB60B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D920, &qword_255543BA8, a2);
}

unint64_t sub_21FB60B90()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FB60BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKVaccinationRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB60BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKVaccinationRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB60BD4()
{
  sub_21FA2A08C(&qword_25554A620, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
  return sub_21FC5AD70();
}

uint64_t sub_21FB60C24@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D918, (uint64_t)qword_255543B90, a1);
}

uint64_t sub_21FB60C40()
{
  sub_21FA2A08C(&qword_255544C48, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB60C80()
{
  sub_21FA2A08C(&qword_255544C48, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB60CD0(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKVaccinationRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB5FC88) & 1;
}

unint64_t static PBMedicationDosage.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_21FB60D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543BB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543BB0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "instruction";
  *(_QWORD *)(v8 + 8) = 11;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "timingPeriod";
  *((_QWORD *)v12 + 1) = 12;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationDosage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D928, (uint64_t)qword_255543BB0, a1);
}

uint64_t sub_21FB60E90(uint64_t a1)
{
  return sub_21FB6C798(a1, (void (*)(_QWORD))type metadata accessor for PBMedicationDosage._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange, &qword_255543BC8);
}

uint64_t sub_21FB60EB4(uint64_t a1)
{
  return sub_21FB6C830(a1, &qword_25553E0F8, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
}

uint64_t sub_21FB60ED0()
{
  return sub_21FB6C9CC(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, &qword_25553E0F8, type metadata accessor for PBDateRange);
}

uint64_t PBMedicationDosage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v3 + v7) = sub_21FB6C830(v8, &qword_25553E0F8, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod);
    swift_release();
  }
  v9 = swift_retain();
  sub_21FB6CB24(v9, a1, a2, a3, (uint64_t)&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange, &qword_25553EAE0, (uint64_t)&protocol conformance descriptor for PBDateRange);
  return swift_release();
}

uint64_t PBMedicationDosage.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBMedicationDosage, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB61010);
}

uint64_t sub_21FB61010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[10];

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - v9;
  v11 = type metadata accessor for PBDateRange(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v19[0] = (uint64_t)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 24);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v19[9] = a4;
  v19[1] = a3;
  if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    v17 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    sub_21FA44968(v17, (uint64_t)v10, &qword_25553E0F8, type metadata accessor for PBDateRange);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      return sub_21FA2D1F8((uint64_t)v10, &qword_25553E0F8, type metadata accessor for PBDateRange);
    }
    else
    {
      v18 = v19[0];
      sub_21FA2D23C((uint64_t)v10, v19[0], type metadata accessor for PBDateRange);
      sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
      sub_21FC5AF50();
      return sub_21FA326EC(v18, type metadata accessor for PBDateRange);
    }
  }
  return result;
}

uint64_t static PBMedicationDosage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBMedicationDosage, (uint64_t (*)(uint64_t, uint64_t))sub_21FB61254) & 1;
}

BOOL sub_21FB61254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;

  v4 = type metadata accessor for PBDateRange(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - v9;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v28 - v15;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(_QWORD *)(a2 + 16) && v18 == *(_QWORD *)(a2 + 24)
    || (v19 = sub_21FC5BDF0(), result = 0, (v19 & 1) != 0))
  {
    v28 = v14;
    v21 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    sub_21FA44968(v21, (uint64_t)v16, &qword_25553E0F8, type metadata accessor for PBDateRange);
    v22 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_21FA44968((uint64_t)v16, (uint64_t)v10, &qword_25553E0F8, type metadata accessor for PBDateRange);
    sub_21FA44968(v22, v23, &qword_25553E0F8, type metadata accessor for PBDateRange);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v24((uint64_t)v10, 1, v4) == 1)
    {
      sub_21FA2D1F8((uint64_t)v16, &qword_25553E0F8, type metadata accessor for PBDateRange);
      if (v24(v23, 1, v4) == 1)
      {
        sub_21FA2D1F8((uint64_t)v10, &qword_25553E0F8, type metadata accessor for PBDateRange);
        return 1;
      }
    }
    else
    {
      v25 = v28;
      sub_21FA44968((uint64_t)v10, (uint64_t)v28, &qword_25553E0F8, type metadata accessor for PBDateRange);
      if (v24(v23, 1, v4) != 1)
      {
        v26 = v29;
        sub_21FA2D23C(v23, v29, type metadata accessor for PBDateRange);
        v27 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v25, v26);
        sub_21FA326EC(v26, type metadata accessor for PBDateRange);
        sub_21FA2D1F8((uint64_t)v16, &qword_25553E0F8, type metadata accessor for PBDateRange);
        sub_21FA326EC((uint64_t)v25, type metadata accessor for PBDateRange);
        sub_21FA2D1F8((uint64_t)v10, &qword_25553E0F8, type metadata accessor for PBDateRange);
        return (v27 & 1) != 0;
      }
      sub_21FA2D1F8((uint64_t)v16, &qword_25553E0F8, type metadata accessor for PBDateRange);
      sub_21FA326EC((uint64_t)v25, type metadata accessor for PBDateRange);
    }
    sub_21FA48E3C((uint64_t)v10, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
    return 0;
  }
  return result;
}

uint64_t PBMedicationDosage.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationDosage, &qword_255544748, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
}

uint64_t sub_21FB61600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D930, &qword_255543BC8, a2);
}

unint64_t sub_21FB6161C()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_21FB61638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationDosage.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB6164C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationDosage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB61660()
{
  sub_21FA2A08C(&qword_25554A618, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
  return sub_21FC5AD70();
}

uint64_t sub_21FB616B0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D928, (uint64_t)qword_255543BB0, a1);
}

uint64_t sub_21FB616CC()
{
  sub_21FA2A08C(&qword_255544C60, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB6170C()
{
  sub_21FA2A08C(&qword_255544C60, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB6175C(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBMedicationDosage, (uint64_t (*)(uint64_t, uint64_t))sub_21FB61254) & 1;
}

unint64_t static PBQuantity.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_21FB617A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543BD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543BD0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "value";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "unitString";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBQuantity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D938, (uint64_t)qword_255543BD0, a1);
}

uint64_t PBQuantity.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_21FC5AE3C();
      }
      else if (result == 1)
      {
        sub_21FC5AE24();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBQuantity.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (*(double *)v0 == 0.0 || (result = sub_21FC5AF20(), !v1))
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = *(_QWORD *)(v0 + 8) & 0xFFFFFFFFFFFFLL;
    if (!v4 || (result = sub_21FC5AF2C(), !v1))
    {
      type metadata accessor for PBQuantity(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t PBQuantity.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBQuantity, &qword_255544750, (uint64_t)&protocol conformance descriptor for PBQuantity);
}

uint64_t sub_21FB61AA8@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FB61AD0()
{
  return 0xD000000000000023;
}

uint64_t sub_21FB61AEC()
{
  return PBQuantity.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB61B00()
{
  return PBQuantity.traverse<A>(visitor:)();
}

uint64_t sub_21FB61B14()
{
  sub_21FA2A08C(&qword_25554A610, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
  return sub_21FC5AD70();
}

uint64_t sub_21FB61B64@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D938, (uint64_t)qword_255543BD0, a1);
}

uint64_t sub_21FB61B80()
{
  sub_21FA2A08C(&qword_255544C78, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB61BC0()
{
  sub_21FA2A08C(&qword_255544C78, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
  return sub_21FC5AEA8();
}

unint64_t static PBGeneralMedication.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB61C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543BE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543BE8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5FEE0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "earliest_dosage_date";
  *(_QWORD *)(v8 + 8) = 20;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "medication";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "status";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "dosages";
  *((_QWORD *)v16 + 1) = 7;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "localized_preferred_name";
  *((_QWORD *)v18 + 1) = 24;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "rx_norm_code_set";
  *((_QWORD *)v20 + 1) = 16;
  v20[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBGeneralMedication._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D940, (uint64_t)qword_255543BE8, a1);
}

uint64_t sub_21FB61EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;

  type metadata accessor for PBGeneralMedication._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  v2 = type metadata accessor for PBHKConcept(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages) = MEMORY[0x24BEE4AF8];
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet) = v5;
  qword_255543C00 = v0;
  return result;
}

uint64_t sub_21FB61F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - v5;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  v8 = type metadata accessor for PBHKConcept(0);
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  v28 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v9();
  v10 = MEMORY[0x24BEE4AF8];
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
  *v11 = MEMORY[0x24BEE4AF8];
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v29 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  *v29 = v10;
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v14;
  *(_QWORD *)(v1 + 24) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v7, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v16 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v16, (uint64_t)v6, &qword_255540590, type metadata accessor for PBHKConcept);
  v17 = v28;
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v17, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
  swift_beginAccess();
  v19 = *v18;
  swift_beginAccess();
  *v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  swift_beginAccess();
  v22 = *v20;
  v21 = v20[1];
  swift_beginAccess();
  *v12 = v22;
  v12[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  swift_beginAccess();
  v24 = *v23;
  swift_bridgeObjectRetain();
  swift_release();
  v25 = v29;
  swift_beginAccess();
  *v25 = v24;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21FB622D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBGeneralMedication.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB623B0);
}

uint64_t sub_21FB623B0()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 2:
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBMedicationDosage(0);
          sub_21FA2A08C(&qword_255544C60, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
          v4 = v3;
          sub_21FC5AE54();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_21FC5AE18();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBGeneralMedication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB62680);
}

uint64_t sub_21FB62680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = v4;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v39 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - v11;
  v13 = type metadata accessor for PBHKConcept(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v37 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v38 = (uint64_t)&v37 - v17;
  swift_beginAccess();
  v18 = a1;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = v19 & 0xFFFFFFFFFFFFLL;
  v40 = a4;
  if (v21)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    result = swift_bridgeObjectRelease();
    v23 = v5;
    if (v5)
      return result;
  }
  else
  {
    v23 = v5;
  }
  v24 = v18
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_21FA44968(v24, (uint64_t)v12, &qword_255540590, type metadata accessor for PBHKConcept);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    sub_21FA2D1F8((uint64_t)v12, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    v26 = (uint64_t)v12;
    v27 = v38;
    sub_21FA2D23C(v26, v38, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    result = sub_21FA326EC(v27, type metadata accessor for PBHKConcept);
    if (v23)
      return result;
  }
  v28 = v18
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v29 = v39;
  sub_21FA44968(v28, v39, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v25((char *)v29, 1, v13) == 1)
  {
    sub_21FA2D1F8(v29, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    v30 = v37;
    sub_21FA2D23C(v29, v37, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    result = sub_21FA326EC(v30, type metadata accessor for PBHKConcept);
    if (v23)
      return result;
  }
  v31 = v18
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v31 + 16)
    || (type metadata accessor for PBMedicationDosage(0),
        sub_21FA2A08C(&qword_255544C60, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v23))
  {
    v32 = (uint64_t *)(v18
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
    swift_beginAccess();
    v34 = *v32;
    v33 = v32[1];
    v35 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0)
      v35 = v34 & 0xFFFFFFFFFFFFLL;
    if (!v35 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v23))
    {
      v36 = v18
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet;
      result = swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v36 + 16))
      {
        swift_bridgeObjectRetain();
        sub_21FC5AF14();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t static PBGeneralMedication.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBGeneralMedication, sub_21FB62B48) & 1;
}

uint64_t sub_21FB62B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD **v54;
  _QWORD *v55;
  _QWORD **v56;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = type metadata accessor for PBHKConcept(0);
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v65 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v58 - v9;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v61 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v62 = (uint64_t)&v58 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v58 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v58 - v19;
  swift_beginAccess();
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v23 = a2;
  if (v21 == *(_QWORD *)(a2 + 16) && v22 == *(_QWORD *)(a2 + 24) || (v24 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v59 = v5;
    v60 = v18;
    v25 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
    swift_beginAccess();
    sub_21FA44968(v25, (uint64_t)v20, &qword_255540590, type metadata accessor for PBHKConcept);
    v26 = a1;
    v27 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
    swift_beginAccess();
    v28 = (uint64_t)&v10[*(int *)(v65 + 48)];
    sub_21FA44968((uint64_t)v20, (uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA44968(v27, v28, &qword_255540590, type metadata accessor for PBHKConcept);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    v30 = v66;
    if (v29((uint64_t)v10, 1, v66) == 1)
    {
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v20, &qword_255540590, type metadata accessor for PBHKConcept);
      v31 = v23;
      if (v29(v28, 1, v30) == 1)
      {
        sub_21FA2D1F8((uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_11:
        v35 = v26;
        v36 = v26
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
        swift_beginAccess();
        v37 = v62;
        sub_21FA44968(v36, v62, &qword_255540590, type metadata accessor for PBHKConcept);
        v38 = v31
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
        swift_beginAccess();
        v39 = v63;
        v40 = v63 + *(int *)(v65 + 48);
        sub_21FA44968(v37, v63, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA44968(v38, v40, &qword_255540590, type metadata accessor for PBHKConcept);
        v41 = v66;
        if (v29(v39, 1, v66) == 1)
        {
          sub_21FA2D1F8(v37, &qword_255540590, type metadata accessor for PBHKConcept);
          if (v29(v40, 1, v41) == 1)
          {
            sub_21FA2D1F8(v39, &qword_255540590, type metadata accessor for PBHKConcept);
            goto LABEL_18;
          }
LABEL_16:
          sub_21FA48E3C(v39, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
          v24 = 0;
LABEL_24:
          swift_release();
          swift_release();
          return v24 & 1;
        }
        v42 = v61;
        sub_21FA44968(v39, v61, &qword_255540590, type metadata accessor for PBHKConcept);
        if (v29(v40, 1, v41) == 1)
        {
          sub_21FA2D1F8(v37, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA326EC(v42, type metadata accessor for PBHKConcept);
          goto LABEL_16;
        }
        v43 = (uint64_t)v59;
        sub_21FA2D23C(v40, (uint64_t)v59, type metadata accessor for PBHKConcept);
        v44 = sub_21FA449D4(v42, v43, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
        sub_21FA326EC(v43, type metadata accessor for PBHKConcept);
        sub_21FA2D1F8(v37, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA326EC(v42, type metadata accessor for PBHKConcept);
        sub_21FA2D1F8(v39, &qword_255540590, type metadata accessor for PBHKConcept);
        v26 = v35;
        if ((v44 & 1) != 0)
        {
LABEL_18:
          v45 = (uint64_t *)(v26
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
          swift_beginAccess();
          v46 = *v45;
          v47 = (uint64_t *)(v31
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
          swift_beginAccess();
          v48 = *v47;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v49 = sub_21FB11518(v46, v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v49 & 1) != 0)
          {
            v50 = (uint64_t *)(v26
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
            swift_beginAccess();
            v51 = *v50;
            v52 = v50[1];
            v53 = (_QWORD *)(v31
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
            swift_beginAccess();
            if (v51 == *v53 && v52 == v53[1] || (v24 = 0, (sub_21FC5BDF0() & 1) != 0))
            {
              v54 = (_QWORD **)(v26
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
              swift_beginAccess();
              v55 = *v54;
              v56 = (_QWORD **)(v31
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
              swift_beginAccess();
              v24 = sub_21FB0E158(v55, *v56);
            }
            goto LABEL_24;
          }
        }
LABEL_23:
        v24 = 0;
        goto LABEL_24;
      }
    }
    else
    {
      v32 = (uint64_t)v60;
      sub_21FA44968((uint64_t)v10, (uint64_t)v60, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v29(v28, 1, v30) != 1)
      {
        v33 = (uint64_t)v59;
        sub_21FA2D23C(v28, (uint64_t)v59, type metadata accessor for PBHKConcept);
        swift_retain();
        swift_retain();
        v34 = sub_21FA449D4(v32, v33, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
        sub_21FA326EC(v33, type metadata accessor for PBHKConcept);
        sub_21FA2D1F8((uint64_t)v20, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA326EC(v32, type metadata accessor for PBHKConcept);
        v31 = v23;
        sub_21FA2D1F8((uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
        if ((v34 & 1) == 0)
          goto LABEL_23;
        goto LABEL_11;
      }
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v20, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA326EC(v32, type metadata accessor for PBHKConcept);
    }
    sub_21FA48E3C((uint64_t)v10, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    goto LABEL_23;
  }
  return v24 & 1;
}

uint64_t PBGeneralMedication.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBGeneralMedication, &qword_255544758, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
}

uint64_t sub_21FB63314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D948, &qword_255543C00, a2);
}

unint64_t sub_21FB63330()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB6334C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBGeneralMedication.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB63360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBGeneralMedication.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB63374()
{
  sub_21FA2A08C(&qword_25554A608, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
  return sub_21FC5AD70();
}

uint64_t sub_21FB633C4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D940, (uint64_t)qword_255543BE8, a1);
}

uint64_t sub_21FB633E0()
{
  sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB63420()
{
  sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB63470(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBGeneralMedication, sub_21FB62B48) & 1;
}

unint64_t static PBHKMedicationRecord.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB634B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543C08);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543C08);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC66520;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "general_medication";
  *(_QWORD *)(v8 + 8) = 18;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "asserter";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "assertion_date";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "asserter_type";
  *((_QWORD *)v16 + 1) = 13;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "effective_start_date";
  *((_QWORD *)v18 + 1) = 20;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "effective_end_date";
  *((_QWORD *)v20 + 1) = 18;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "not_taken";
  *((_QWORD *)v22 + 1) = 9;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "reason_for_use";
  *((_QWORD *)v24 + 1) = 14;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "reasons_not_taken";
  *(_QWORD *)(v25 + 8) = 17;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKMedicationRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D950, (uint64_t)qword_255543C08, a1);
}

uint64_t sub_21FB637C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  type metadata accessor for PBHKMedicationRecord._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  v2 = type metadata accessor for PBGeneralMedication(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v6 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  v8 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken) = 0;
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken) = v9;
  qword_255543C20 = v0;
  return result;
}

uint64_t sub_21FB638BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  _QWORD *v40;
  _BYTE *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v39 - v4;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v44 = v1;
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v40 = v12;
  v41 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  *v41 = 0;
  v42 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse) = MEMORY[0x24BEE4AF8];
  v43 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken) = v13;
  v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v14, (uint64_t)v5, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v17 = *v15;
  v16 = v15[1];
  swift_beginAccess();
  *v8 = v17;
  v8[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  v20 = *v18;
  v19 = v18[1];
  swift_beginAccess();
  *v9 = v20;
  v9[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
  swift_beginAccess();
  v22 = *v21;
  LOBYTE(v21) = *((_BYTE *)v21 + 8);
  swift_beginAccess();
  *(_QWORD *)v10 = v22;
  *(_BYTE *)(v10 + 8) = (_BYTE)v21;
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v25 = *v23;
  v24 = v23[1];
  swift_beginAccess();
  *v11 = v25;
  v11[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v28 = *v26;
  v27 = v26[1];
  v29 = v40;
  swift_beginAccess();
  *v29 = v28;
  v29[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  LOBYTE(v30) = *v30;
  v31 = v41;
  swift_beginAccess();
  *v31 = (_BYTE)v30;
  v32 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  v33 = *v32;
  v34 = v42;
  swift_beginAccess();
  *v34 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  v36 = *v35;
  swift_bridgeObjectRetain();
  swift_release();
  v37 = v43;
  swift_beginAccess();
  *v37 = v36;
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_21FB63D0C()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB63DF0);
}

uint64_t sub_21FB63DF0()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBGeneralMedication(0);
          sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 2:
        case 3:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_21FB9E2BC();
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADAC();
          goto LABEL_5;
        case 8:
        case 9:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE54();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKMedicationRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB6414C);
}

uint64_t sub_21FB6414C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[15];
  char v35;
  uint64_t v36;

  v36 = a4;
  v34[1] = a3;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v34 - v6;
  v8 = type metadata accessor for PBGeneralMedication(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v13, (uint64_t)v7, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_21FA2D1F8((uint64_t)v7, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    v14 = v34[0];
  }
  else
  {
    sub_21FA2D23C((uint64_t)v7, (uint64_t)v11, type metadata accessor for PBGeneralMedication);
    sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
    v15 = v34[0];
    sub_21FC5AF50();
    v14 = v15;
    result = sub_21FA326EC((uint64_t)v11, type metadata accessor for PBGeneralMedication);
    if (v15)
      return result;
  }
  v17 = (_QWORD *)(v12
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v18 = v17[1];
  v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v19 = *v17 & 0xFFFFFFFFFFFFLL;
  if (!v19 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v14))
  {
    v20 = (_QWORD *)(v12
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
    swift_beginAccess();
    v21 = v20[1];
    v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v22 = *v20 & 0xFFFFFFFFFFFFLL;
    if (!v22 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v14))
    {
      v23 = v12
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
      swift_beginAccess();
      if (!*(_QWORD *)v23
        || (v24 = *(_BYTE *)(v23 + 8),
            v34[14] = *(_QWORD *)v23,
            v35 = v24,
            sub_21FB9E2BC(),
            result = sub_21FC5AED8(),
            !v14))
      {
        v25 = (_QWORD *)(v12
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
        swift_beginAccess();
        v26 = v25[1];
        v27 = HIBYTE(v26) & 0xF;
        if ((v26 & 0x2000000000000000) == 0)
          v27 = *v25 & 0xFFFFFFFFFFFFLL;
        if (!v27 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v14))
        {
          v28 = (_QWORD *)(v12
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
          swift_beginAccess();
          v29 = v28[1];
          v30 = HIBYTE(v29) & 0xF;
          if ((v29 & 0x2000000000000000) == 0)
            v30 = *v28 & 0xFFFFFFFFFFFFLL;
          if (!v30 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v14))
          {
            v31 = (_BYTE *)(v12
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
            swift_beginAccess();
            if (*v31 != 1 || (result = sub_21FC5AECC(), !v14))
            {
              v32 = v12
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse;
              swift_beginAccess();
              if (!*(_QWORD *)(*(_QWORD *)v32 + 16)
                || (type metadata accessor for PBHKConcept(0),
                    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v14))
              {
                v33 = v12
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken;
                result = swift_beginAccess();
                if (*(_QWORD *)(*(_QWORD *)v33 + 16))
                {
                  type metadata accessor for PBHKConcept(0);
                  sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
                  swift_bridgeObjectRetain();
                  sub_21FC5AF44();
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_21FB64698(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  char v58;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v63 = a2;
  v64 = type metadata accessor for PBGeneralMedication(0);
  v3 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v61 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A7F8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v6 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v60 - v7;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v60 - v12;
  v14 = a1;
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v13, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v16 = v63;
  v17 = v63
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  v18 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_21FA44968((uint64_t)v13, (uint64_t)v8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  sub_21FA44968(v17, v18, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v20 = v64;
  if (v19((uint64_t)v8, 1, v64) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v13, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    v21 = v19(v18, 1, v20);
    v22 = v14;
    if (v21 == 1)
    {
      sub_21FA2D1F8((uint64_t)v8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  v23 = (uint64_t)v61;
  v24 = v62;
  sub_21FA44968((uint64_t)v8, v62, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if (v19(v18, 1, v20) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v13, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    sub_21FA326EC(v24, type metadata accessor for PBGeneralMedication);
LABEL_6:
    sub_21FA48E3C((uint64_t)v8, &qword_25554A7F8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
LABEL_26:
    swift_release();
    swift_release();
    v58 = 0;
    return v58 & 1;
  }
  sub_21FA2D23C(v18, v23, type metadata accessor for PBGeneralMedication);
  v22 = v14;
  swift_retain();
  swift_retain();
  v25 = sub_21FA449D4(v24, v23, type metadata accessor for PBGeneralMedication, sub_21FB62B48);
  sub_21FA326EC(v23, type metadata accessor for PBGeneralMedication);
  sub_21FA2D1F8((uint64_t)v13, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  sub_21FA326EC(v24, type metadata accessor for PBGeneralMedication);
  sub_21FA2D1F8((uint64_t)v8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((v25 & 1) == 0)
    goto LABEL_26;
LABEL_8:
  v26 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  v27 = *v26;
  v28 = v26[1];
  v29 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  if ((v27 != *v29 || v28 != v29[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_26;
  v30 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  v31 = *v30;
  v32 = v30[1];
  v33 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  if ((v31 != *v33 || v32 != v33[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_26;
  v34 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
  swift_beginAccess();
  v35 = *v34;
  v36 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
  swift_beginAccess();
  v37 = *v36;
  if (*((_BYTE *)v36 + 8) == 1)
    __asm { BR              X10 }
  if (v35 != v37)
    goto LABEL_26;
  v38 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v39 = *v38;
  v40 = v38[1];
  v41 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  if ((v39 != *v41 || v40 != v41[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_26;
  v42 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v43 = *v42;
  v44 = v42[1];
  v45 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  if ((v43 != *v45 || v44 != v45[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_26;
  v46 = (unsigned __int8 *)(v22
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  v47 = *v46;
  v48 = (unsigned __int8 *)(v16
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  if (v47 != *v48)
    goto LABEL_26;
  v49 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  v50 = *v49;
  v51 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  v52 = *v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = sub_21FB11504(v50, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v53 & 1) == 0)
    goto LABEL_26;
  v54 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  v55 = *v54;
  v56 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  v57 = *v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = sub_21FB11504(v55, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v58 & 1;
}

uint64_t PBHKMedicationRecord.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKMedicationRecord, &qword_255544760, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
}

uint64_t sub_21FB64DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D958, &qword_255543C20, a2);
}

unint64_t sub_21FB64DFC()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB64E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB64E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB64E40()
{
  sub_21FA2A08C(&qword_25554A600, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
  return sub_21FC5AD70();
}

uint64_t sub_21FB64E90@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D950, (uint64_t)qword_255543C08, a1);
}

uint64_t sub_21FB64EAC()
{
  sub_21FA2A08C(&qword_255544CA8, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB64EEC()
{
  sub_21FA2A08C(&qword_255544CA8, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB64F3C(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationRecord, sub_21FB64698) & 1;
}

uint64_t sub_21FB64F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543C28);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543C28);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "ACTOR_TYPE_NOT_SET";
  *(_QWORD *)(v8 + 8) = 18;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "ACTOR_TYPE_NONE";
  *(_QWORD *)(v12 + 8) = 15;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "ACTOR_TYPE_OTHER";
  *((_QWORD *)v14 + 1) = 16;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "ACTOR_TYPE_PATIENT";
  *((_QWORD *)v16 + 1) = 18;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "ACTOR_TYPE_PRACTITIONER";
  *((_QWORD *)v18 + 1) = 23;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "ACTOR_TYPE_RELATED_PERSON";
  *((_QWORD *)v20 + 1) = 25;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "ACTOR_TYPE_ORGANIZATION";
  *((_QWORD *)v22 + 1) = 23;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKMedicationRecord.HKClinicalReferencedActorType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D960, (uint64_t)qword_255543C28, a1);
}

uint64_t sub_21FB651F4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D960, (uint64_t)qword_255543C28, a1);
}

unint64_t static PBHKMedicationDispenseRecord.protoMessageName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_21FB6522C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543C40);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543C40);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "general_medication";
  *(_QWORD *)(v8 + 8) = 18;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "day_supply_quantity";
  *(_QWORD *)(v12 + 8) = 19;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "hand_over_date";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "preparation_date";
  *((_QWORD *)v16 + 1) = 16;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 5;
  *(_QWORD *)v17 = "quantity_dispensed";
  *(_QWORD *)(v17 + 8) = 18;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKMedicationDispenseRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D968, (uint64_t)qword_255543C40, a1);
}

uint64_t sub_21FB6545C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  _QWORD *v7;
  uint64_t result;

  type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  v2 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  v4 = type metadata accessor for PBQuantity(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, 1, 1, v4);
  qword_255543C58 = v0;
  return result;
}

uint64_t sub_21FB65540(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - v5;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, v3);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - v8;
  v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  v11 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  v13 = type metadata accessor for PBQuantity(0);
  v14 = *(void (**)(void))(*(_QWORD *)(v13 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14)(v12, 1, 1, v13);
  v15 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  v16 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  v28 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  v14();
  v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v17, (uint64_t)v9, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v9, v10, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  sub_21FA44968(v18, (uint64_t)v6, &qword_255544520, type metadata accessor for PBQuantity);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v12, &qword_255544520, type metadata accessor for PBQuantity);
  swift_endAccess();
  v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  v21 = *v19;
  v20 = v19[1];
  swift_beginAccess();
  *v15 = v21;
  v15[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  v24 = *v22;
  v23 = v22[1];
  swift_beginAccess();
  *v16 = v24;
  v16[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  sub_21FA44968(v25, (uint64_t)v6, &qword_255544520, type metadata accessor for PBQuantity);
  swift_release();
  v26 = v28;
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v26, &qword_255544520, type metadata accessor for PBQuantity);
  swift_endAccess();
  return v1;
}

uint64_t sub_21FB658C0()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity, &qword_255544520, type metadata accessor for PBQuantity);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, &qword_255544520, type metadata accessor for PBQuantity);
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationDispenseRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_21FB65540, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB659AC);
}

uint64_t sub_21FB659AC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBGeneralMedication(0);
          sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
          goto LABEL_5;
        case 2:
        case 5:
          swift_beginAccess();
          type metadata accessor for PBQuantity(0);
          sub_21FA2A08C(&qword_255544C78, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
LABEL_5:
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_6;
        case 3:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
LABEL_6:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKMedicationDispenseRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB65C04);
}

uint64_t sub_21FB65C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v49 = a4;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v43 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (uint64_t)&v42 - v9;
  v50 = type metadata accessor for PBQuantity(0);
  v45 = *(_QWORD *)(v50 - 8);
  v10 = MEMORY[0x24BDAC7A8](v50);
  v42 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v44 = (uint64_t)&v42 - v12;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, v5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v42 - v14;
  v16 = type metadata accessor for PBGeneralMedication(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  v21 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v21, (uint64_t)v15, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_21FA2D1F8((uint64_t)v15, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    v22 = v47;
    v23 = v50;
    v24 = v20;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v15, (uint64_t)v19, type metadata accessor for PBGeneralMedication);
    sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
    v25 = v47;
    sub_21FC5AF50();
    v22 = v25;
    result = sub_21FA326EC((uint64_t)v19, type metadata accessor for PBGeneralMedication);
    v23 = v50;
    v24 = v20;
    if (v25)
      return result;
  }
  v27 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  v28 = v46;
  sub_21FA44968(v27, v46, &qword_255544520, type metadata accessor for PBQuantity);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  if (v29(v28, 1, v23) == 1)
  {
    sub_21FA2D1F8(v28, &qword_255544520, type metadata accessor for PBQuantity);
  }
  else
  {
    v30 = v28;
    v31 = v44;
    sub_21FA2D23C(v30, v44, type metadata accessor for PBQuantity);
    sub_21FA2A08C(&qword_255544C78, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
    sub_21FC5AF50();
    result = sub_21FA326EC(v31, type metadata accessor for PBQuantity);
    if (v22)
      return result;
  }
  v32 = (_QWORD *)(v24
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  v33 = v32[1];
  v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0)
    v34 = *v32 & 0xFFFFFFFFFFFFLL;
  if (!v34 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v22))
  {
    v35 = (_QWORD *)(v24
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
    swift_beginAccess();
    v36 = v35[1];
    v37 = HIBYTE(v36) & 0xF;
    if ((v36 & 0x2000000000000000) == 0)
      v37 = *v35 & 0xFFFFFFFFFFFFLL;
    if (!v37 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v22))
    {
      v38 = v24
          + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
      swift_beginAccess();
      v39 = v43;
      sub_21FA44968(v38, v43, &qword_255544520, type metadata accessor for PBQuantity);
      if (v29(v39, 1, v23) == 1)
      {
        return sub_21FA2D1F8(v39, &qword_255544520, type metadata accessor for PBQuantity);
      }
      else
      {
        v40 = v39;
        v41 = v42;
        sub_21FA2D23C(v40, v42, type metadata accessor for PBQuantity);
        sub_21FA2A08C(&qword_255544C78, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
        sub_21FC5AF50();
        return sub_21FA326EC(v41, type metadata accessor for PBQuantity);
      }
    }
  }
  return result;
}

uint64_t sub_21FB66144(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v85 = a2;
  v80 = type metadata accessor for PBQuantity(0);
  v78 = *(_QWORD *)(v80 - 8);
  v3 = MEMORY[0x24BDAC7A8](v80);
  v72 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v75 = (uint64_t)&v71 - v5;
  sub_21FA48F60(0, &qword_25554A800, &qword_255544520, type metadata accessor for PBQuantity);
  v81 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v74 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v79 = (uint64_t)&v71 - v9;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v73 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v76 = (uint64_t)&v71 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v77 = (uint64_t)&v71 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v84 = (uint64_t)&v71 - v18;
  v19 = type metadata accessor for PBGeneralMedication(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v82 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A7F8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v23 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v71 - v24;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, v10);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v83 = (uint64_t)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v71 - v29;
  v31 = a1;
  v32 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v32, (uint64_t)v30, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v33 = v85;
  v34 = v85
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  v35 = (uint64_t)&v25[*(int *)(v23 + 48)];
  sub_21FA44968((uint64_t)v30, (uint64_t)v25, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  sub_21FA44968(v34, v35, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v36((uint64_t)v25, 1, v19) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v30, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    if (v36(v35, 1, v19) == 1)
    {
      sub_21FA2D1F8((uint64_t)v25, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
      goto LABEL_8;
    }
LABEL_6:
    sub_21FA48E3C((uint64_t)v25, &qword_25554A7F8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    goto LABEL_31;
  }
  v37 = (uint64_t)v82;
  v38 = v83;
  sub_21FA44968((uint64_t)v25, v83, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if (v36(v35, 1, v19) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v30, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    sub_21FA326EC(v38, type metadata accessor for PBGeneralMedication);
    goto LABEL_6;
  }
  sub_21FA2D23C(v35, v37, type metadata accessor for PBGeneralMedication);
  swift_retain();
  swift_retain();
  v39 = sub_21FA449D4(v38, v37, type metadata accessor for PBGeneralMedication, sub_21FB62B48);
  sub_21FA326EC(v37, type metadata accessor for PBGeneralMedication);
  sub_21FA2D1F8((uint64_t)v30, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  sub_21FA326EC(v38, type metadata accessor for PBGeneralMedication);
  sub_21FA2D1F8((uint64_t)v25, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((v39 & 1) == 0)
    goto LABEL_31;
LABEL_8:
  v40 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  v41 = v84;
  sub_21FA44968(v40, v84, &qword_255544520, type metadata accessor for PBQuantity);
  v42 = v33
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  v43 = v79;
  v44 = v79 + *(int *)(v81 + 48);
  sub_21FA44968(v41, v79, &qword_255544520, type metadata accessor for PBQuantity);
  sub_21FA44968(v42, v44, &qword_255544520, type metadata accessor for PBQuantity);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  v46 = v80;
  if (v45(v43, 1, v80) != 1)
  {
    v63 = v77;
    sub_21FA44968(v43, v77, &qword_255544520, type metadata accessor for PBQuantity);
    if (v45(v44, 1, v46) == 1)
    {
      sub_21FA2D1F8(v84, &qword_255544520, type metadata accessor for PBQuantity);
      sub_21FA326EC(v63, type metadata accessor for PBQuantity);
      goto LABEL_23;
    }
    v64 = v75;
    sub_21FA2D23C(v44, v75, type metadata accessor for PBQuantity);
    if (*(double *)v63 == *(double *)v64
      && (*(_QWORD *)(v63 + 8) == *(_QWORD *)(v64 + 8) && *(_QWORD *)(v63 + 16) == *(_QWORD *)(v64 + 16)
       || (sub_21FC5BDF0() & 1) != 0))
    {
      sub_21FC5AD1C();
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v65 = sub_21FC5B5D4();
      sub_21FA326EC(v64, type metadata accessor for PBQuantity);
      sub_21FA2D1F8(v84, &qword_255544520, type metadata accessor for PBQuantity);
      sub_21FA326EC(v63, type metadata accessor for PBQuantity);
      sub_21FA2D1F8(v43, &qword_255544520, type metadata accessor for PBQuantity);
      if ((v65 & 1) != 0)
        goto LABEL_11;
    }
    else
    {
      sub_21FA326EC(v64, type metadata accessor for PBQuantity);
      sub_21FA2D1F8(v84, &qword_255544520, type metadata accessor for PBQuantity);
      sub_21FA326EC(v63, type metadata accessor for PBQuantity);
      sub_21FA2D1F8(v43, &qword_255544520, type metadata accessor for PBQuantity);
    }
LABEL_31:
    swift_release();
    swift_release();
    return 0;
  }
  sub_21FA2D1F8(v41, &qword_255544520, type metadata accessor for PBQuantity);
  if (v45(v44, 1, v46) != 1)
  {
LABEL_23:
    sub_21FA48E3C(v43, &qword_25554A800, &qword_255544520, type metadata accessor for PBQuantity);
    goto LABEL_31;
  }
  sub_21FA2D1F8(v43, &qword_255544520, type metadata accessor for PBQuantity);
LABEL_11:
  v47 = (uint64_t *)(v31
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  v48 = *v47;
  v49 = v47[1];
  v50 = (_QWORD *)(v33
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  if ((v48 != *v50 || v49 != v50[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_31;
  v51 = (uint64_t *)(v31
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  v52 = *v51;
  v53 = v51[1];
  v54 = (_QWORD *)(v33
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  if ((v52 != *v54 || v53 != v54[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_31;
  v55 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  v56 = v76;
  sub_21FA44968(v55, v76, &qword_255544520, type metadata accessor for PBQuantity);
  v57 = v33
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  v58 = v74;
  v59 = v74 + *(int *)(v81 + 48);
  sub_21FA44968(v56, v74, &qword_255544520, type metadata accessor for PBQuantity);
  v60 = v57;
  v61 = v58;
  sub_21FA44968(v60, v59, &qword_255544520, type metadata accessor for PBQuantity);
  if (v45(v58, 1, v46) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v56, &qword_255544520, type metadata accessor for PBQuantity);
    if (v45(v59, 1, v46) == 1)
    {
      sub_21FA2D1F8(v58, &qword_255544520, type metadata accessor for PBQuantity);
      return 1;
    }
    goto LABEL_36;
  }
  v66 = v58;
  v67 = v73;
  sub_21FA44968(v66, v73, &qword_255544520, type metadata accessor for PBQuantity);
  if (v45(v59, 1, v46) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v76, &qword_255544520, type metadata accessor for PBQuantity);
    sub_21FA326EC(v67, type metadata accessor for PBQuantity);
LABEL_36:
    sub_21FA48E3C(v61, &qword_25554A800, &qword_255544520, type metadata accessor for PBQuantity);
    return 0;
  }
  v68 = v72;
  sub_21FA2D23C(v59, v72, type metadata accessor for PBQuantity);
  v69 = v76;
  if (*(double *)v67 == *(double *)v68
    && (*(_QWORD *)(v67 + 8) == *(_QWORD *)(v68 + 8) && *(_QWORD *)(v67 + 16) == *(_QWORD *)(v68 + 16)
     || (sub_21FC5BDF0() & 1) != 0))
  {
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v70 = sub_21FC5B5D4();
    swift_release();
    swift_release();
    sub_21FA326EC(v68, type metadata accessor for PBQuantity);
    sub_21FA2D1F8(v69, &qword_255544520, type metadata accessor for PBQuantity);
    sub_21FA326EC(v67, type metadata accessor for PBQuantity);
    sub_21FA2D1F8(v61, &qword_255544520, type metadata accessor for PBQuantity);
    if ((v70 & 1) != 0)
      return 1;
  }
  else
  {
    swift_release();
    swift_release();
    sub_21FA326EC(v68, type metadata accessor for PBQuantity);
    sub_21FA2D1F8(v69, &qword_255544520, type metadata accessor for PBQuantity);
    sub_21FA326EC(v67, type metadata accessor for PBQuantity);
    sub_21FA2D1F8(v61, &qword_255544520, type metadata accessor for PBQuantity);
  }
  return 0;
}

uint64_t PBHKMedicationDispenseRecord.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKMedicationDispenseRecord, &qword_255544768, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
}

uint64_t sub_21FB66D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D970, &qword_255543C58, a2);
}

unint64_t sub_21FB66D84()
{
  return 0xD000000000000035;
}

uint64_t sub_21FB66DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationDispenseRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB66DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationDispenseRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB66DC8()
{
  sub_21FA2A08C(&qword_25554A5F8, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
  return sub_21FC5AD70();
}

uint64_t sub_21FB66E18@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D968, (uint64_t)qword_255543C40, a1);
}

uint64_t sub_21FB66E34()
{
  sub_21FA2A08C(&qword_255544CC0, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB66E74()
{
  sub_21FA2A08C(&qword_255544CC0, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB66EC4(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, sub_21FB66144) & 1;
}

unint64_t static PBHKMedicationOrder.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB66F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v25;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543C60);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543C60);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_21FC623E0;
  v6 = v25 + v5;
  v7 = v25 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v25 + v5) = 1;
  *(_QWORD *)v7 = "general_medication";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "ended_date";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "number_of_fills";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "prescriber";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "reason";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "reason_ended";
  *((_QWORD *)v19 + 1) = 12;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "status_reason";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "written_date";
  *((_QWORD *)v23 + 1) = 12;
  v23[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBHKMedicationOrder._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D978, (uint64_t)qword_255543C60, a1);
}

uint64_t sub_21FB671E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v9;

  type metadata accessor for PBHKMedicationOrder._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  v2 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  *v3 = 0;
  v3[1] = 0xE000000000000000;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills) = 0;
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason) = MEMORY[0x24BEE4AF8];
  v5 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason, 1, 1, v6);
  v9 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  qword_255543C78 = v0;
  return result;
}

uint64_t sub_21FB672FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v39 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v44 = (uint64_t)&v38 - v4;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, v2);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - v6;
  v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  v9 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v40 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills) = 0;
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v41 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason) = MEMORY[0x24BEE4AF8];
  v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  v42 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  v45 = v1;
  v13 = type metadata accessor for PBHKConcept(0);
  v14 = *(void (**)(void))(*(_QWORD *)(v13 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14)(v12, 1, 1, v13);
  v43 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  v14();
  v15 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  v16 = v39;
  v17 = v39
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v17, (uint64_t)v7, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v7, v8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  v18 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  v19 = *v18;
  v20 = v18[1];
  swift_beginAccess();
  *v10 = v19;
  v10[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (_DWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  LODWORD(v19) = *v21;
  v22 = v40;
  swift_beginAccess();
  *v22 = v19;
  v23 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  v24 = *v23;
  v25 = v23[1];
  swift_beginAccess();
  *v11 = v24;
  v11[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  v27 = *v26;
  v28 = v41;
  swift_beginAccess();
  *v28 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v16
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  v30 = v44;
  sub_21FA44968(v29, v44, &qword_255540590, type metadata accessor for PBHKConcept);
  v31 = v42;
  swift_beginAccess();
  sub_21FA2D2D8(v30, v31, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v32 = v16
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_21FA44968(v32, v30, &qword_255540590, type metadata accessor for PBHKConcept);
  v33 = v43;
  swift_beginAccess();
  sub_21FA2D2D8(v30, v33, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v34 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  v35 = *v34;
  v36 = v34[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v15 = v35;
  v15[1] = v36;
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_21FB677B4()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationOrder.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB678C4);
}

uint64_t sub_21FB678C4()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBGeneralMedication(0);
          sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 2:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE0C();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 6:
        case 7:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 8:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKMedicationOrder.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB67C20);
}

uint64_t sub_21FB67C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;

  v54 = a4;
  v53 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v55 = (char *)&v47 - v9;
  v51 = type metadata accessor for PBHKConcept(0);
  v50 = *(_QWORD *)(v51 - 8);
  v10 = MEMORY[0x24BDAC7A8](v51);
  v48 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (uint64_t)&v47 - v12;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, v5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v47 - v14;
  v16 = type metadata accessor for PBGeneralMedication(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  v21 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v21, (uint64_t)v15, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_21FA2D1F8((uint64_t)v15, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    v22 = v52;
    v23 = v20;
    v24 = (uint64_t)v56;
    v25 = (uint64_t)v55;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v15, (uint64_t)v19, type metadata accessor for PBGeneralMedication);
    sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
    v26 = v52;
    sub_21FC5AF50();
    v22 = v26;
    result = sub_21FA326EC((uint64_t)v19, type metadata accessor for PBGeneralMedication);
    v23 = v20;
    v24 = (uint64_t)v56;
    v25 = (uint64_t)v55;
    if (v26)
      return result;
  }
  v28 = (uint64_t *)(v23
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  v30 = *v28;
  v29 = v28[1];
  v31 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0)
    v31 = v30 & 0xFFFFFFFFFFFFLL;
  if (!v31 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v22))
  {
    v32 = (_DWORD *)(v23
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
    swift_beginAccess();
    if (!*v32 || (result = sub_21FC5AF08(), !v22))
    {
      v33 = (uint64_t *)(v23
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
      swift_beginAccess();
      v35 = *v33;
      v34 = v33[1];
      v36 = HIBYTE(v34) & 0xF;
      if ((v34 & 0x2000000000000000) == 0)
        v36 = v35 & 0xFFFFFFFFFFFFLL;
      if (!v36 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v22))
      {
        v37 = v23
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)v37 + 16)
          || (sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v22))
        {
          v38 = v23
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
          swift_beginAccess();
          sub_21FA44968(v38, v25, &qword_255540590, type metadata accessor for PBHKConcept);
          v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
          if (v39(v25, 1, v51) == 1)
          {
            sub_21FA2D1F8(v25, &qword_255540590, type metadata accessor for PBHKConcept);
          }
          else
          {
            v40 = v49;
            sub_21FA2D23C(v25, v49, type metadata accessor for PBHKConcept);
            sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
            sub_21FC5AF50();
            result = sub_21FA326EC(v40, type metadata accessor for PBHKConcept);
            if (v22)
              return result;
          }
          v41 = v23
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
          swift_beginAccess();
          sub_21FA44968(v41, v24, &qword_255540590, type metadata accessor for PBHKConcept);
          if (v39(v24, 1, v51) == 1)
          {
            sub_21FA2D1F8(v24, &qword_255540590, type metadata accessor for PBHKConcept);
          }
          else
          {
            v42 = v48;
            sub_21FA2D23C(v24, v48, type metadata accessor for PBHKConcept);
            sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
            sub_21FC5AF50();
            result = sub_21FA326EC(v42, type metadata accessor for PBHKConcept);
            if (v22)
              return result;
          }
          v43 = (uint64_t *)(v23
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
          result = swift_beginAccess();
          v45 = *v43;
          v44 = v43[1];
          v46 = HIBYTE(v44) & 0xF;
          if ((v44 & 0x2000000000000000) == 0)
            v46 = v45 & 0xFFFFFFFFFFFFLL;
          if (v46)
          {
            swift_bridgeObjectRetain();
            sub_21FC5AF2C();
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_21FB682EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int *v41;
  int v42;
  _DWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  int v62;
  uint64_t v63;
  char v64;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v100 = a2;
  v93 = type metadata accessor for PBHKConcept(0);
  v91 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v88 = (uint64_t)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v96 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v89 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v92 = (uint64_t)&v86 - v7;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v87 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v94 = (uint64_t)&v86 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v90 = (uint64_t)&v86 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v95 = (uint64_t)&v86 - v16;
  v17 = type metadata accessor for PBGeneralMedication(0);
  v99 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v97 = (uint64_t)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A7F8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v20 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v86 - v21;
  sub_21FA2D1A0(0, &qword_2555416B8, type metadata accessor for PBGeneralMedication, v8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v98 = (uint64_t)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v86 - v26;
  v28 = a1;
  v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_21FA44968(v29, (uint64_t)v27, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v30 = v100;
  v31 = v100
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  v32 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_21FA44968((uint64_t)v27, (uint64_t)v22, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  sub_21FA44968(v31, v32, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
  if (v33((uint64_t)v22, 1, v17) != 1)
  {
    v34 = v98;
    sub_21FA44968((uint64_t)v22, v98, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    if (v33(v32, 1, v17) != 1)
    {
      v35 = v97;
      sub_21FA2D23C(v32, v97, type metadata accessor for PBGeneralMedication);
      swift_retain();
      swift_retain();
      v36 = sub_21FA449D4(v34, v35, type metadata accessor for PBGeneralMedication, sub_21FB62B48);
      sub_21FA326EC(v35, type metadata accessor for PBGeneralMedication);
      sub_21FA2D1F8((uint64_t)v27, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
      sub_21FA326EC(v34, type metadata accessor for PBGeneralMedication);
      sub_21FA2D1F8((uint64_t)v22, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
      if ((v36 & 1) != 0)
        goto LABEL_8;
LABEL_19:
      swift_release();
      swift_release();
      v64 = 0;
      return v64 & 1;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v27, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    sub_21FA326EC(v34, type metadata accessor for PBGeneralMedication);
LABEL_6:
    sub_21FA48E3C((uint64_t)v22, &qword_25554A7F8, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
    goto LABEL_19;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v27, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
  if (v33(v32, 1, v17) != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v22, &qword_2555416B8, type metadata accessor for PBGeneralMedication);
LABEL_8:
  v37 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  v38 = *v37;
  v39 = v37[1];
  v40 = (_QWORD *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  if ((v38 != *v40 || v39 != v40[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_19;
  v41 = (int *)(v28
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  v42 = *v41;
  v43 = (_DWORD *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  if (v42 != *v43)
    goto LABEL_19;
  v44 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  v45 = *v44;
  v46 = v44[1];
  v47 = (_QWORD *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  if ((v45 != *v47 || v46 != v47[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_19;
  v48 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  v49 = *v48;
  v50 = (uint64_t *)(v30
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  v51 = *v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = sub_21FB11504(v49, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v52 & 1) == 0)
    goto LABEL_19;
  v99 = v28;
  v53 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  v54 = v95;
  sub_21FA44968(v53, v95, &qword_255540590, type metadata accessor for PBHKConcept);
  v55 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  v56 = v92;
  v57 = v92 + *(int *)(v96 + 48);
  sub_21FA44968(v54, v92, &qword_255540590, type metadata accessor for PBHKConcept);
  v58 = v55;
  v59 = v56;
  sub_21FA44968(v58, v57, &qword_255540590, type metadata accessor for PBHKConcept);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
  v61 = v93;
  if (v60(v59, 1, v93) == 1)
  {
    sub_21FA2D1F8(v54, &qword_255540590, type metadata accessor for PBHKConcept);
    v62 = v60(v57, 1, v61);
    v63 = v94;
    if (v62 == 1)
    {
      sub_21FA2D1F8(v59, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_25;
    }
LABEL_23:
    sub_21FA48E3C(v59, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    goto LABEL_19;
  }
  v66 = v90;
  sub_21FA44968(v59, v90, &qword_255540590, type metadata accessor for PBHKConcept);
  v67 = v60(v57, 1, v61);
  v63 = v94;
  if (v67 == 1)
  {
    sub_21FA2D1F8(v54, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v66, type metadata accessor for PBHKConcept);
    goto LABEL_23;
  }
  v68 = v88;
  sub_21FA2D23C(v57, v88, type metadata accessor for PBHKConcept);
  v69 = sub_21FA449D4(v66, v68, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  sub_21FA326EC(v68, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v95, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v66, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v59, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((v69 & 1) == 0)
    goto LABEL_19;
LABEL_25:
  v70 = v99
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_21FA44968(v70, v63, &qword_255540590, type metadata accessor for PBHKConcept);
  v71 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  v72 = v63;
  v73 = v89;
  v74 = v89 + *(int *)(v96 + 48);
  sub_21FA44968(v72, v89, &qword_255540590, type metadata accessor for PBHKConcept);
  v75 = v71;
  v59 = v73;
  sub_21FA44968(v75, v74, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v60(v73, 1, v61) == 1)
  {
    sub_21FA2D1F8(v72, &qword_255540590, type metadata accessor for PBHKConcept);
    v76 = v60(v74, 1, v61);
    v77 = v99;
    if (v76 == 1)
    {
      sub_21FA2D1F8(v73, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_33;
    }
    goto LABEL_23;
  }
  v78 = v73;
  v79 = v87;
  sub_21FA44968(v78, v87, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v60(v74, 1, v61) == 1)
  {
    sub_21FA2D1F8(v94, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v79, type metadata accessor for PBHKConcept);
    goto LABEL_23;
  }
  v80 = v88;
  sub_21FA2D23C(v74, v88, type metadata accessor for PBHKConcept);
  v81 = sub_21FA449D4(v79, v80, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  sub_21FA326EC(v80, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v94, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v79, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v59, &qword_255540590, type metadata accessor for PBHKConcept);
  v77 = v99;
  if ((v81 & 1) == 0)
    goto LABEL_19;
LABEL_33:
  v82 = (uint64_t *)(v77
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  v83 = *v82;
  v84 = v82[1];
  v85 = (_QWORD *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  if (v83 == *v85 && v84 == v85[1])
    v64 = 1;
  else
    v64 = sub_21FC5BDF0();
  swift_release();
  swift_release();
  return v64 & 1;
}

uint64_t PBHKMedicationOrder.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKMedicationOrder, &qword_255544770, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
}

uint64_t sub_21FB68E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D980, &qword_255543C78, a2);
}

unint64_t sub_21FB68E6C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB68E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationOrder.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB68E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationOrder.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB68EB0()
{
  sub_21FA2A08C(&qword_25554A5F0, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
  return sub_21FC5AD70();
}

uint64_t sub_21FB68F00@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D978, (uint64_t)qword_255543C60, a1);
}

uint64_t sub_21FB68F1C()
{
  sub_21FA2A08C(&qword_255544CD8, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB68F5C()
{
  sub_21FA2A08C(&qword_255544CD8, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB68FAC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationOrder, sub_21FB682EC) & 1;
}

unint64_t static PBHKDiagnosticTestResult.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB68FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v38;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543C80);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543C80);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_21FC66550;
  v6 = v38 + v5;
  v7 = v38 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v38 + v5) = 1;
  *(_QWORD *)v7 = "body_site";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v38 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "category";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v38 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "comments";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v38 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "diagnostic_test";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v38 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "effective_end_date";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v38 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "effective_start_date";
  *((_QWORD *)v19 + 1) = 20;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v38 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "interpretation_deprecated";
  *((_QWORD *)v21 + 1) = 25;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v38 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "issue_date";
  *((_QWORD *)v23 + 1) = 10;
  v23[16] = 2;
  v10();
  v24 = v38 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "method";
  *(_QWORD *)(v24 + 8) = 6;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v38 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "performers";
  *((_QWORD *)v26 + 1) = 10;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v38 + v5 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "referenceRanges";
  *((_QWORD *)v28 + 1) = 15;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v38 + v5 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "status";
  *((_QWORD *)v30 + 1) = 6;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v38 + v5 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "likelyDisplayString";
  *((_QWORD *)v32 + 1) = 19;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v38 + v5 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "value";
  *((_QWORD *)v34 + 1) = 5;
  v34[16] = 2;
  v10();
  v35 = (_QWORD *)(v38 + v5 + 14 * v4);
  v36 = (char *)v35 + *(int *)(v2 + 48);
  *v35 = 15;
  *(_QWORD *)v36 = "interpretation";
  *((_QWORD *)v36 + 1) = 14;
  v36[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBHKDiagnosticTestResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D988, (uint64_t)qword_255543C80, a1);
}

uint64_t sub_21FB69434(uint64_t a1)
{
  return sub_21FB5E550(a1, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB69450, &qword_255543C98);
}

uint64_t sub_21FB69450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  v2 = type metadata accessor for PBHKConcept(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest, 1, 1, v2);
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated, 1, 1, v2);
  v8 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method, 1, 1, v2);
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = v9;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  v10 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = v0
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  v12 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation) = v9;
  return v0;
}

uint64_t sub_21FB695E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v79 = (uint64_t)&v66 - v5;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v3);
  MEMORY[0x24BDAC7A8](v6);
  v80 = (uint64_t)&v66 - v7;
  v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  v67 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  v9 = type metadata accessor for PBHKConcept(0);
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10)(v8, 1, 1, v9);
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v68 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  v10();
  v13 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v14 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  v69 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *v14 = 0;
  v14[1] = 0xE000000000000000;
  v70 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  v10();
  v15 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  v71 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  v72 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  v10();
  v73 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  v16 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers) = MEMORY[0x24BEE4AF8];
  v74 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = v16;
  v75 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v10();
  v17 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  v76 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  v18 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  v77 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  v19 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v78 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation) = v16;
  v20 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  v21 = v80;
  sub_21FA44968(v20, v80, &qword_255540590, type metadata accessor for PBHKConcept);
  v22 = v67;
  swift_beginAccess();
  sub_21FA2D2D8(v21, v22, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  v25 = *v23;
  v24 = v23[1];
  swift_beginAccess();
  *v11 = v25;
  v11[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  v28 = *v26;
  v27 = v26[1];
  swift_beginAccess();
  *v12 = v28;
  v12[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  v30 = v80;
  sub_21FA44968(v29, v80, &qword_255540590, type metadata accessor for PBHKConcept);
  v31 = v68;
  swift_beginAccess();
  sub_21FA2D2D8(v30, v31, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v32 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v34 = *v32;
  v33 = v32[1];
  swift_beginAccess();
  *v13 = v34;
  v13[1] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v37 = *v35;
  v36 = v35[1];
  v38 = v69;
  swift_beginAccess();
  *v38 = v37;
  v38[1] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_21FA44968(v39, v30, &qword_255540590, type metadata accessor for PBHKConcept);
  v40 = v70;
  swift_beginAccess();
  sub_21FA2D2D8(v30, v40, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  v43 = *v41;
  v42 = v41[1];
  v44 = v71;
  swift_beginAccess();
  *v44 = v43;
  v44[1] = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_21FA44968(v45, v30, &qword_255540590, type metadata accessor for PBHKConcept);
  v46 = v72;
  swift_beginAccess();
  sub_21FA2D2D8(v30, v46, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  v48 = *v47;
  v49 = v73;
  swift_beginAccess();
  *v49 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  v51 = *v50;
  v52 = v74;
  swift_beginAccess();
  *v52 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v53, v30, &qword_255540590, type metadata accessor for PBHKConcept);
  v54 = v75;
  swift_beginAccess();
  sub_21FA2D2D8(v30, v54, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v55 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  swift_beginAccess();
  v57 = *v55;
  v56 = v55[1];
  v58 = v76;
  swift_beginAccess();
  *v58 = v57;
  v58[1] = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  v60 = v79;
  sub_21FA44968(v59, v79, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v61 = v77;
  swift_beginAccess();
  sub_21FA2D2D8(v60, v61, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  v62 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
  swift_beginAccess();
  v63 = *v62;
  swift_bridgeObjectRetain();
  swift_release();
  v64 = v78;
  swift_beginAccess();
  *v64 = v63;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FB69DF8()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21FB69F6C()
{
  return sub_21FB877D4((void (*)(void))sub_21FB69DF8);
}

uint64_t PBHKDiagnosticTestResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB69FAC);
}

uint64_t sub_21FB69FAC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  unint64_t *v8;
  uint64_t (*v9)(uint64_t);
  void *v10;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 2:
        case 3:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 6:
        case 8:
        case 13:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 7:
        case 9:
        case 12:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          v8 = &qword_255544BE8;
          v9 = type metadata accessor for PBHKConcept;
          v10 = &protocol conformance descriptor for PBHKConcept;
          goto LABEL_15;
        case 10:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE18();
          goto LABEL_5;
        case 11:
          swift_beginAccess();
          type metadata accessor for PBHKReferenceRange(0);
          v5 = (unint64_t *)&unk_255544D08;
          v6 = type metadata accessor for PBHKReferenceRange;
          v7 = &protocol conformance descriptor for PBHKReferenceRange;
          goto LABEL_17;
        case 14:
          swift_beginAccess();
          type metadata accessor for PBHKInspectableValueCollection(0);
          v8 = (unint64_t *)&unk_255544D38;
          v9 = type metadata accessor for PBHKInspectableValueCollection;
          v10 = &protocol conformance descriptor for PBHKInspectableValueCollection;
LABEL_15:
          sub_21FA2A08C(v8, v9, (uint64_t)v10);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 15:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          v5 = &qword_255544BE8;
          v6 = type metadata accessor for PBHKConcept;
          v7 = &protocol conformance descriptor for PBHKConcept;
LABEL_17:
          sub_21FA2A08C(v5, v6, (uint64_t)v7);
          v4 = v3;
          sub_21FC5AE54();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKDiagnosticTestResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB6A44C);
}

uint64_t sub_21FB6A44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v98 = a4;
  v95 = a2;
  v96 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v84 = (uint64_t)&v80 - v7;
  v86 = type metadata accessor for PBHKInspectableValueCollection(0);
  v83 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v82 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v5);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v87 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v89 = (char *)&v80 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v91 = (uint64_t)&v80 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v94 = (char *)&v80 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v80 - v18;
  v20 = type metadata accessor for PBHKConcept(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v85 = (uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v88 = (uint64_t)&v80 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v90 = (uint64_t)&v80 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v92 = (uint64_t)&v80 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v80 - v30;
  v32 = a1;
  v33 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v33, (uint64_t)v19, &qword_255540590, type metadata accessor for PBHKConcept);
  v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v93(v19, 1, v20) == 1)
  {
    v81 = v20;
    sub_21FA2D1F8((uint64_t)v19, &qword_255540590, type metadata accessor for PBHKConcept);
    v34 = v97;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v19, (uint64_t)v31, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    v35 = v97;
    sub_21FC5AF50();
    v34 = v35;
    if (v35)
    {
      v36 = (uint64_t)v31;
      return sub_21FA326EC(v36, type metadata accessor for PBHKConcept);
    }
    v81 = v20;
    sub_21FA326EC((uint64_t)v31, type metadata accessor for PBHKConcept);
  }
  v37 = (_QWORD *)(v32
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  v38 = v37[1];
  v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v39 = *v37 & 0xFFFFFFFFFFFFLL;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v34)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v40 = v32;
  v41 = (_QWORD *)(v32
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  v42 = v41[1];
  v43 = HIBYTE(v42) & 0xF;
  if ((v42 & 0x2000000000000000) == 0)
    v43 = *v41 & 0xFFFFFFFFFFFFLL;
  if (v43)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    v44 = (uint64_t)v94;
    if (v34)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v44 = (uint64_t)v94;
  }
  v45 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v45, v44, &qword_255540590, type metadata accessor for PBHKConcept);
  v46 = v81;
  if (v93((char *)v44, 1, v81) == 1)
  {
    sub_21FA2D1F8(v44, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    v47 = v44;
    v48 = v92;
    sub_21FA2D23C(v47, v92, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    if (v34)
    {
LABEL_35:
      v36 = v48;
      return sub_21FA326EC(v36, type metadata accessor for PBHKConcept);
    }
    sub_21FA326EC(v48, type metadata accessor for PBHKConcept);
  }
  v49 = (_QWORD *)(v40
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v50 = v49[1];
  v51 = HIBYTE(v50) & 0xF;
  if ((v50 & 0x2000000000000000) == 0)
    v51 = *v49 & 0xFFFFFFFFFFFFLL;
  if (v51)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v34)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v52 = (_QWORD *)(v40
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v53 = v52[1];
  v54 = HIBYTE(v53) & 0xF;
  if ((v53 & 0x2000000000000000) == 0)
    v54 = *v52 & 0xFFFFFFFFFFFFLL;
  if (v54)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (!v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_32:
  v55 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  v56 = v91;
  sub_21FA44968(v55, v91, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v93((char *)v56, 1, v46) != 1)
  {
    v57 = v56;
    v48 = v90;
    sub_21FA2D23C(v57, v90, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    if (!v34)
    {
      sub_21FA326EC(v48, type metadata accessor for PBHKConcept);
      goto LABEL_38;
    }
    goto LABEL_35;
  }
  sub_21FA2D1F8(v56, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_38:
  v59 = (_QWORD *)(v40
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  v60 = v59[1];
  v61 = HIBYTE(v60) & 0xF;
  if ((v60 & 0x2000000000000000) == 0)
    v61 = *v59 & 0xFFFFFFFFFFFFLL;
  if (v61)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v34)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v62 = (uint64_t)v89;
  v63 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_21FA44968(v63, v62, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v93((char *)v62, 1, v46) == 1)
  {
    sub_21FA2D1F8(v62, &qword_255540590, type metadata accessor for PBHKConcept);
  }
  else
  {
    v64 = v62;
    v65 = v88;
    sub_21FA2D23C(v64, v88, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    result = sub_21FA326EC(v65, type metadata accessor for PBHKConcept);
    if (v34)
      return result;
  }
  v66 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v66 + 16)
    || (swift_bridgeObjectRetain(), sub_21FC5AF14(), result = swift_bridgeObjectRelease(), !v34))
  {
    v67 = v40
        + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges;
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v67 + 16)
      || (type metadata accessor for PBHKReferenceRange(0),
          sub_21FA2A08C(&qword_255544D08, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v34))
    {
      v68 = v40
          + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
      swift_beginAccess();
      v69 = v87;
      sub_21FA44968(v68, v87, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v93((char *)v69, 1, v46) == 1)
      {
        sub_21FA2D1F8(v69, &qword_255540590, type metadata accessor for PBHKConcept);
      }
      else
      {
        v70 = v69;
        v71 = v85;
        sub_21FA2D23C(v70, v85, type metadata accessor for PBHKConcept);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        sub_21FC5AF50();
        result = sub_21FA326EC(v71, type metadata accessor for PBHKConcept);
        if (v34)
          return result;
      }
      v72 = (_QWORD *)(v40
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
      swift_beginAccess();
      v73 = v72[1];
      v74 = HIBYTE(v73) & 0xF;
      if ((v73 & 0x2000000000000000) == 0)
        v74 = *v72 & 0xFFFFFFFFFFFFLL;
      if (!v74 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v34))
      {
        v75 = v40
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
        swift_beginAccess();
        v76 = v84;
        sub_21FA44968(v75, v84, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v76, 1, v86) == 1)
        {
          sub_21FA2D1F8(v76, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
        }
        else
        {
          v77 = v76;
          v78 = v82;
          sub_21FA2D23C(v77, v82, type metadata accessor for PBHKInspectableValueCollection);
          sub_21FA2A08C(&qword_255544D38, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
          sub_21FC5AF50();
          result = sub_21FA326EC(v78, type metadata accessor for PBHKInspectableValueCollection);
          if (v34)
            return result;
        }
        v79 = v40
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation;
        result = swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v79 + 16))
        {
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          swift_bridgeObjectRetain();
          sub_21FC5AF44();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_21FB6B04C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  unint64_t *v119;
  unint64_t *v120;
  uint64_t (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  char v124;
  _QWORD **v125;
  _QWORD *v126;
  _QWORD **v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int (*v152)(uint64_t, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;

  v184 = a2;
  v166 = type metadata accessor for PBHKInspectableValueCollection(0);
  v164 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v161 = (uint64_t)&v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_255543820, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v163 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v167 = (uint64_t)&v161 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v162 = (uint64_t)&v161 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v165 = (uint64_t)&v161 - v10;
  v185 = type metadata accessor for PBHKConcept(0);
  v183 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v181 = (uint64_t)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v13 = v12;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v169 = (uint64_t)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v171 = (uint64_t)&v161 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v175 = (uint64_t)&v161 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v177 = (uint64_t)&v161 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v161 - v22;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v6);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v168 = (uint64_t)&v161 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v172 = (uint64_t)&v161 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v170 = (uint64_t)&v161 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v173 = (uint64_t)&v161 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v174 = (uint64_t)&v161 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v178 = (uint64_t)&v161 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v176 = (uint64_t)&v161 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v180 = (uint64_t)&v161 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v182 = (uint64_t)&v161 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v161 - v43;
  v45 = a1;
  v46 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_21FA44968(v46, (uint64_t)v44, &qword_255540590, type metadata accessor for PBHKConcept);
  v47 = v184;
  v48 = v184
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  v179 = v13;
  v49 = (uint64_t)&v23[*(int *)(v13 + 48)];
  sub_21FA44968((uint64_t)v44, (uint64_t)v23, &qword_255540590, type metadata accessor for PBHKConcept);
  v50 = v185;
  sub_21FA44968(v48, v49, &qword_255540590, type metadata accessor for PBHKConcept);
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v183 + 48);
  if (v51((uint64_t)v23, 1, v50) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v44, &qword_255540590, type metadata accessor for PBHKConcept);
    v52 = v47;
    if (v51(v49, 1, v50) == 1)
    {
      sub_21FA2D1F8((uint64_t)v23, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_11:
      v60 = (uint64_t *)(v45
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
      swift_beginAccess();
      v61 = *v60;
      v62 = v60[1];
      v63 = (_QWORD *)(v52
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
      swift_beginAccess();
      if ((v61 != *v63 || v62 != v63[1]) && (sub_21FC5BDF0() & 1) == 0)
        goto LABEL_7;
      v64 = (uint64_t *)(v45
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
      swift_beginAccess();
      v65 = *v64;
      v66 = v64[1];
      v67 = (_QWORD *)(v52
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
      swift_beginAccess();
      if ((v65 != *v67 || v66 != v67[1]) && (sub_21FC5BDF0() & 1) == 0)
        goto LABEL_7;
      v68 = v52;
      v69 = v45;
      v70 = v45
          + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
      swift_beginAccess();
      v71 = v180;
      sub_21FA44968(v70, v180, &qword_255540590, type metadata accessor for PBHKConcept);
      v72 = v68
          + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
      swift_beginAccess();
      v73 = v177;
      v74 = v177 + *(int *)(v179 + 48);
      sub_21FA44968(v71, v177, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA44968(v72, v74, &qword_255540590, type metadata accessor for PBHKConcept);
      v75 = v185;
      if (v51(v73, 1, v185) == 1)
      {
        sub_21FA2D1F8(v71, &qword_255540590, type metadata accessor for PBHKConcept);
        v76 = v51(v74, 1, v75);
        v77 = v178;
        v78 = v69;
        if (v76 == 1)
        {
          sub_21FA2D1F8(v73, &qword_255540590, type metadata accessor for PBHKConcept);
          v79 = v184;
          goto LABEL_24;
        }
      }
      else
      {
        v80 = v176;
        sub_21FA44968(v73, v176, &qword_255540590, type metadata accessor for PBHKConcept);
        v81 = v51(v74, 1, v75);
        v77 = v178;
        if (v81 != 1)
        {
          v82 = v181;
          sub_21FA2D23C(v74, v181, type metadata accessor for PBHKConcept);
          v83 = sub_21FA449D4(v80, v82, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
          sub_21FA326EC(v82, type metadata accessor for PBHKConcept);
          sub_21FA2D1F8(v180, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA326EC(v80, type metadata accessor for PBHKConcept);
          sub_21FA2D1F8(v73, &qword_255540590, type metadata accessor for PBHKConcept);
          v78 = v69;
          v79 = v184;
          if ((v83 & 1) == 0)
            goto LABEL_7;
LABEL_24:
          v84 = (uint64_t *)(v78
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
          swift_beginAccess();
          v85 = *v84;
          v86 = v84[1];
          v87 = (_QWORD *)(v79
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
          swift_beginAccess();
          if ((v85 != *v87 || v86 != v87[1]) && (sub_21FC5BDF0() & 1) == 0)
            goto LABEL_7;
          v88 = (uint64_t *)(v78
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
          swift_beginAccess();
          v89 = *v88;
          v90 = v88[1];
          v91 = (_QWORD *)(v79
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
          swift_beginAccess();
          if ((v89 != *v91 || v90 != v91[1]) && (sub_21FC5BDF0() & 1) == 0)
            goto LABEL_7;
          v92 = v78
              + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
          swift_beginAccess();
          sub_21FA44968(v92, v77, &qword_255540590, type metadata accessor for PBHKConcept);
          v93 = v77;
          v94 = v79
              + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
          swift_beginAccess();
          v95 = v175;
          v96 = v175 + *(int *)(v179 + 48);
          sub_21FA44968(v93, v175, &qword_255540590, type metadata accessor for PBHKConcept);
          sub_21FA44968(v94, v96, &qword_255540590, type metadata accessor for PBHKConcept);
          v97 = v185;
          if (v51(v95, 1, v185) == 1)
          {
            sub_21FA2D1F8(v93, &qword_255540590, type metadata accessor for PBHKConcept);
            if (v51(v96, 1, v97) != 1)
              goto LABEL_46;
            sub_21FA2D1F8(v95, &qword_255540590, type metadata accessor for PBHKConcept);
          }
          else
          {
            v98 = v174;
            sub_21FA44968(v95, v174, &qword_255540590, type metadata accessor for PBHKConcept);
            if (v51(v96, 1, v97) == 1)
            {
              v99 = v178;
              goto LABEL_35;
            }
            v101 = v181;
            sub_21FA2D23C(v96, v181, type metadata accessor for PBHKConcept);
            v102 = sub_21FA449D4(v98, v101, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
            sub_21FA326EC(v101, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8(v178, &qword_255540590, type metadata accessor for PBHKConcept);
            sub_21FA326EC(v98, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8(v95, &qword_255540590, type metadata accessor for PBHKConcept);
            if ((v102 & 1) == 0)
              goto LABEL_7;
          }
          v103 = (uint64_t *)(v78
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
          swift_beginAccess();
          v104 = *v103;
          v105 = v103[1];
          v106 = (_QWORD *)(v79
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
          swift_beginAccess();
          if ((v104 != *v106 || v105 != v106[1]) && (sub_21FC5BDF0() & 1) == 0)
            goto LABEL_7;
          v107 = v78
               + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
          swift_beginAccess();
          v108 = v173;
          sub_21FA44968(v107, v173, &qword_255540590, type metadata accessor for PBHKConcept);
          v109 = v79
               + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
          swift_beginAccess();
          v110 = v171;
          v111 = v171 + *(int *)(v179 + 48);
          sub_21FA44968(v108, v171, &qword_255540590, type metadata accessor for PBHKConcept);
          v112 = v109;
          v95 = v110;
          sub_21FA44968(v112, v111, &qword_255540590, type metadata accessor for PBHKConcept);
          v113 = v185;
          if (v51(v110, 1, v185) == 1)
          {
            sub_21FA2D1F8(v108, &qword_255540590, type metadata accessor for PBHKConcept);
            v114 = v51(v111, 1, v113);
            v115 = v172;
            if (v114 != 1)
              goto LABEL_46;
            sub_21FA2D1F8(v110, &qword_255540590, type metadata accessor for PBHKConcept);
          }
          else
          {
            v116 = v110;
            v117 = v170;
            sub_21FA44968(v116, v170, &qword_255540590, type metadata accessor for PBHKConcept);
            v118 = v51(v111, 1, v113);
            v115 = v172;
            if (v118 == 1)
            {
              sub_21FA2D1F8(v173, &qword_255540590, type metadata accessor for PBHKConcept);
              v100 = v117;
              goto LABEL_45;
            }
            v123 = v181;
            sub_21FA2D23C(v111, v181, type metadata accessor for PBHKConcept);
            v124 = sub_21FA449D4(v117, v123, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
            sub_21FA326EC(v123, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8(v173, &qword_255540590, type metadata accessor for PBHKConcept);
            sub_21FA326EC(v117, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8(v95, &qword_255540590, type metadata accessor for PBHKConcept);
            if ((v124 & 1) == 0)
              goto LABEL_7;
          }
          v125 = (_QWORD **)(v78
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
          swift_beginAccess();
          v126 = *v125;
          v127 = (_QWORD **)(v79
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
          swift_beginAccess();
          if ((sub_21FB0E158(v126, *v127) & 1) == 0)
            goto LABEL_7;
          v128 = (uint64_t *)(v78
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
          swift_beginAccess();
          v129 = *v128;
          v130 = (uint64_t *)(v79
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
          swift_beginAccess();
          v131 = *v130;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v132 = sub_21FB11C10(v129, v131);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v132 & 1) == 0)
            goto LABEL_7;
          v133 = v78
               + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
          swift_beginAccess();
          sub_21FA44968(v133, v115, &qword_255540590, type metadata accessor for PBHKConcept);
          v134 = v79
               + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
          swift_beginAccess();
          v135 = v115;
          v136 = v169;
          v137 = v169 + *(int *)(v179 + 48);
          sub_21FA44968(v135, v169, &qword_255540590, type metadata accessor for PBHKConcept);
          v138 = v134;
          v95 = v136;
          sub_21FA44968(v138, v137, &qword_255540590, type metadata accessor for PBHKConcept);
          v139 = v185;
          if (v51(v136, 1, v185) == 1)
          {
            sub_21FA2D1F8(v135, &qword_255540590, type metadata accessor for PBHKConcept);
            if (v51(v137, 1, v139) == 1)
            {
              sub_21FA2D1F8(v136, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_57:
              v143 = (uint64_t *)(v78
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
              swift_beginAccess();
              v144 = *v143;
              v145 = v143[1];
              v146 = (_QWORD *)(v79
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
              swift_beginAccess();
              if ((v144 != *v146 || v145 != v146[1]) && (sub_21FC5BDF0() & 1) == 0)
                goto LABEL_7;
              v147 = v78
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
              swift_beginAccess();
              v148 = v165;
              sub_21FA44968(v147, v165, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
              v149 = v79
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
              swift_beginAccess();
              v150 = v167;
              v151 = v167 + *(int *)(v163 + 48);
              sub_21FA44968(v148, v167, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
              sub_21FA44968(v149, v151, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
              v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
              v153 = v166;
              if (v152(v150, 1, v166) == 1)
              {
                sub_21FA2D1F8(v148, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
                if (v152(v151, 1, v153) == 1)
                {
                  sub_21FA2D1F8(v150, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
LABEL_67:
                  v157 = (uint64_t *)(v78
                                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
                  swift_beginAccess();
                  v158 = *v157;
                  v159 = (uint64_t *)(v79
                                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
                  swift_beginAccess();
                  v160 = *v159;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v54 = sub_21FB11504(v158, v160);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  return v54 & 1;
                }
              }
              else
              {
                v154 = v162;
                sub_21FA44968(v150, v162, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
                if (v152(v151, 1, v153) != 1)
                {
                  v155 = v161;
                  sub_21FA2D23C(v151, v161, type metadata accessor for PBHKInspectableValueCollection);
                  v156 = sub_21FA449D4(v154, v155, type metadata accessor for PBHKInspectableValueCollection, sub_21FB6E834);
                  sub_21FA326EC(v155, type metadata accessor for PBHKInspectableValueCollection);
                  sub_21FA2D1F8(v148, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
                  sub_21FA326EC(v154, type metadata accessor for PBHKInspectableValueCollection);
                  sub_21FA2D1F8(v150, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
                  if ((v156 & 1) != 0)
                    goto LABEL_67;
                  goto LABEL_7;
                }
                sub_21FA2D1F8(v148, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
                sub_21FA326EC(v154, type metadata accessor for PBHKInspectableValueCollection);
              }
              v119 = &qword_255543820;
              v120 = &qword_2555405C8;
              v121 = type metadata accessor for PBHKInspectableValueCollection;
              v122 = v150;
              goto LABEL_47;
            }
LABEL_46:
            v119 = &qword_25554A750;
            v120 = &qword_255540590;
            v121 = type metadata accessor for PBHKConcept;
            v122 = v95;
LABEL_47:
            sub_21FA48E3C(v122, v119, v120, v121);
            goto LABEL_7;
          }
          v140 = v136;
          v98 = v168;
          sub_21FA44968(v140, v168, &qword_255540590, type metadata accessor for PBHKConcept);
          if (v51(v137, 1, v139) != 1)
          {
            v141 = v181;
            sub_21FA2D23C(v137, v181, type metadata accessor for PBHKConcept);
            v142 = sub_21FA449D4(v98, v141, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
            sub_21FA326EC(v141, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8(v172, &qword_255540590, type metadata accessor for PBHKConcept);
            sub_21FA326EC(v98, type metadata accessor for PBHKConcept);
            sub_21FA2D1F8(v95, &qword_255540590, type metadata accessor for PBHKConcept);
            if ((v142 & 1) == 0)
              goto LABEL_7;
            goto LABEL_57;
          }
          v99 = v172;
LABEL_35:
          sub_21FA2D1F8(v99, &qword_255540590, type metadata accessor for PBHKConcept);
          v100 = v98;
LABEL_45:
          sub_21FA326EC(v100, type metadata accessor for PBHKConcept);
          goto LABEL_46;
        }
        sub_21FA2D1F8(v180, &qword_255540590, type metadata accessor for PBHKConcept);
        sub_21FA326EC(v80, type metadata accessor for PBHKConcept);
      }
      sub_21FA48E3C(v73, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
      swift_release();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  v53 = v182;
  sub_21FA44968((uint64_t)v23, v182, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v51(v49, 1, v50) == 1)
  {
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v44, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v53, type metadata accessor for PBHKConcept);
LABEL_6:
    sub_21FA48E3C((uint64_t)v23, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    goto LABEL_7;
  }
  v56 = v49;
  v57 = v181;
  sub_21FA2D23C(v56, v181, type metadata accessor for PBHKConcept);
  swift_retain();
  swift_retain();
  v58 = sub_21FA449D4(v53, v57, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  sub_21FA326EC(v57, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8((uint64_t)v44, &qword_255540590, type metadata accessor for PBHKConcept);
  v59 = v53;
  v52 = v47;
  sub_21FA326EC(v59, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8((uint64_t)v23, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((v58 & 1) != 0)
    goto LABEL_11;
LABEL_7:
  swift_release();
LABEL_8:
  swift_release();
  v54 = 0;
  return v54 & 1;
}

uint64_t PBHKDiagnosticTestResult.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKDiagnosticTestResult, &qword_255544778, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
}

uint64_t sub_21FB6C454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D990, &qword_255543C98, a2);
}

unint64_t sub_21FB6C470()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB6C48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB6C4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB6C4B4()
{
  sub_21FA2A08C(&qword_25554A5E8, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
  return sub_21FC5AD70();
}

uint64_t sub_21FB6C504@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D988, (uint64_t)qword_255543C80, a1);
}

uint64_t sub_21FB6C520()
{
  sub_21FA2A08C(&qword_255544CF0, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB6C560()
{
  sub_21FA2A08C(&qword_255544CF0, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB6C5B0(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, sub_21FB6B04C) & 1;
}

unint64_t static PBHKReferenceRange.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_21FB6C5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543CA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543CA0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "identifier";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "valueRange";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKReferenceRange._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D998, (uint64_t)qword_255543CA0, a1);
}

uint64_t sub_21FB6C774(uint64_t a1)
{
  return sub_21FB6C798(a1, (void (*)(_QWORD))type metadata accessor for PBHKReferenceRange._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection, &qword_255543CB8);
}

uint64_t sub_21FB6C798(uint64_t a1, void (*a2)(_QWORD), _QWORD *a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  a2(0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0xE000000000000000;
  v9 = v8 + *a3;
  v10 = a4(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a5 = v8;
  return result;
}

uint64_t sub_21FB6C814(uint64_t a1)
{
  return sub_21FB6C830(a1, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
}

uint64_t sub_21FB6C830(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;

  v19 = a4;
  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0xE000000000000000;
  v12 = v4 + *a4;
  v13 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v14;
  *(_QWORD *)(v4 + 24) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a1 + *v19;
  swift_beginAccess();
  sub_21FA44968(v16, (uint64_t)v11, a2, a3);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v11, v12, a2, a3);
  swift_endAccess();
  return v4;
}

uint64_t sub_21FB6C9B0()
{
  return sub_21FB6C9CC(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB6C9CC(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v3 + *a1, a2, a3);
  return swift_deallocClassInstance();
}

uint64_t PBHKReferenceRange.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v3 + v7) = sub_21FB6C830(v8, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange);
    swift_release();
  }
  v9 = swift_retain();
  sub_21FB6CB24(v9, a1, a2, a3, (uint64_t)&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection, &qword_255544D38, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
  return swift_release();
}

uint64_t sub_21FB6CB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_21FC5AD88();
  v14 = v8;
  if (!v8)
  {
    while (1)
    {
      if ((v13 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        v15 = v14;
        sub_21FC5AE3C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    a6(0);
    sub_21FA2A08C(a7, a6, a8);
    v15 = v14;
    sub_21FC5AE60();
LABEL_5:
    v14 = v15;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBHKReferenceRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKReferenceRange, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB6CC84);
}

uint64_t sub_21FB6CC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[10];

  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - v9;
  v11 = type metadata accessor for PBHKInspectableValueCollection(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v19[0] = (uint64_t)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 24);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v19[9] = a4;
  v19[1] = a3;
  if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    v17 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
    swift_beginAccess();
    sub_21FA44968(v17, (uint64_t)v10, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      return sub_21FA2D1F8((uint64_t)v10, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
    }
    else
    {
      v18 = v19[0];
      sub_21FA2D23C((uint64_t)v10, v19[0], type metadata accessor for PBHKInspectableValueCollection);
      sub_21FA2A08C(&qword_255544D38, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
      sub_21FC5AF50();
      return sub_21FA326EC(v18, type metadata accessor for PBHKInspectableValueCollection);
    }
  }
  return result;
}

uint64_t static PBHKReferenceRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKReferenceRange, (uint64_t (*)(uint64_t, uint64_t))sub_21FB6CEC8) & 1;
}

BOOL sub_21FB6CEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;

  v4 = type metadata accessor for PBHKInspectableValueCollection(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_255543820, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - v9;
  sub_21FA2D1A0(0, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v28 - v15;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(_QWORD *)(a2 + 16) && v18 == *(_QWORD *)(a2 + 24)
    || (v19 = sub_21FC5BDF0(), result = 0, (v19 & 1) != 0))
  {
    v28 = v14;
    v21 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
    swift_beginAccess();
    sub_21FA44968(v21, (uint64_t)v16, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
    v22 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
    swift_beginAccess();
    v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_21FA44968((uint64_t)v16, (uint64_t)v10, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
    sub_21FA44968(v22, v23, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v24((uint64_t)v10, 1, v4) == 1)
    {
      sub_21FA2D1F8((uint64_t)v16, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
      if (v24(v23, 1, v4) == 1)
      {
        sub_21FA2D1F8((uint64_t)v10, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
        return 1;
      }
    }
    else
    {
      v25 = (uint64_t)v28;
      sub_21FA44968((uint64_t)v10, (uint64_t)v28, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
      if (v24(v23, 1, v4) != 1)
      {
        v26 = v29;
        sub_21FA2D23C(v23, v29, type metadata accessor for PBHKInspectableValueCollection);
        v27 = sub_21FA449D4(v25, v26, type metadata accessor for PBHKInspectableValueCollection, sub_21FB6E834);
        sub_21FA326EC(v26, type metadata accessor for PBHKInspectableValueCollection);
        sub_21FA2D1F8((uint64_t)v16, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
        sub_21FA326EC(v25, type metadata accessor for PBHKInspectableValueCollection);
        sub_21FA2D1F8((uint64_t)v10, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
        return (v27 & 1) != 0;
      }
      sub_21FA2D1F8((uint64_t)v16, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
      sub_21FA326EC(v25, type metadata accessor for PBHKInspectableValueCollection);
    }
    sub_21FA48E3C((uint64_t)v10, &qword_255543820, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
    return 0;
  }
  return result;
}

uint64_t PBHKReferenceRange.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKReferenceRange, &qword_255544780, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
}

uint64_t sub_21FB6D280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D9A0, &qword_255543CB8, a2);
}

unint64_t sub_21FB6D29C()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_21FB6D2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKReferenceRange.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB6D2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKReferenceRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB6D2E0()
{
  sub_21FA2A08C(&qword_25554A5E0, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
  return sub_21FC5AD70();
}

uint64_t sub_21FB6D330@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D998, (uint64_t)qword_255543CA0, a1);
}

uint64_t sub_21FB6D34C()
{
  sub_21FA2A08C(&qword_255544D08, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB6D38C()
{
  sub_21FA2A08C(&qword_255544D08, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB6D3DC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKReferenceRange, (uint64_t (*)(uint64_t, uint64_t))sub_21FB6CEC8) & 1;
}

unint64_t static PBHKRatioValue.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_21FB6D420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543CC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543CC0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "numerator";
  *(_QWORD *)(v8 + 8) = 9;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "denominator";
  *((_QWORD *)v12 + 1) = 11;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKRatioValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D9A8, (uint64_t)qword_255543CC0, a1);
}

uint64_t PBHKRatioValue.decodeMessage<A>(decoder:)()
{
  return sub_21FB82E58();
}

uint64_t PBHKRatioValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB6D5CC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKRatioValue);
}

uint64_t sub_21FB6D5CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;

  v7 = v4[1];
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = *v4 & 0xFFFFFFFFFFFFLL;
  if (!v8 || (result = sub_21FC5AF2C(), !v5))
  {
    v10 = v4[3];
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v4[2] & 0xFFFFFFFFFFFFLL;
    if (!v11 || (result = sub_21FC5AF2C(), !v5))
    {
      a4(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t static PBHKRatioValue.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBHKRatioValue) & 1;
}

uint64_t PBHKRatioValue.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKRatioValue, &qword_255544788, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
}

unint64_t sub_21FB6D6EC()
{
  return 0xD000000000000027;
}

uint64_t sub_21FB6D708()
{
  return PBPatientMeta.HumanName.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB6D71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKRatioValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB6D730()
{
  sub_21FA2A08C(&qword_25554A5D8, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
  return sub_21FC5AD70();
}

uint64_t sub_21FB6D780@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D9A8, (uint64_t)qword_255543CC0, a1);
}

uint64_t sub_21FB6D79C()
{
  sub_21FA2A08C(&qword_255544D20, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB6D7DC()
{
  sub_21FA2A08C(&qword_255544D20, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB6D82C(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBHKRatioValue) & 1;
}

unint64_t static PBHKInspectableValueCollection.protoMessageName.getter()
{
  return 0xD000000000000037;
}

uint64_t sub_21FB6D868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543CD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543CD8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5FEE0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "type";
  *(_QWORD *)(v8 + 8) = 4;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "value";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "min";
  *((_QWORD *)v14 + 1) = 3;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "max";
  *((_QWORD *)v16 + 1) = 3;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "inspectableValues";
  *((_QWORD *)v18 + 1) = 17;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "unitString";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKInspectableValueCollection._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D9B0, (uint64_t)qword_255543CD8, a1);
}

uint64_t sub_21FB6DAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v5;

  type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  v2 = type metadata accessor for PBHKInspectableValue(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min, 1, 1, v2);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max, 1, 1, v2);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues) = MEMORY[0x24BEE4AF8];
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  qword_255543CF0 = v0;
  return result;
}

uint64_t sub_21FB6DBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - v5;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  v8 = type metadata accessor for PBHKInspectableValue(0);
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v1+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min, 1, 1, v8);
  v26 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  v9();
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
  *v11 = MEMORY[0x24BEE4AF8];
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v13;
  *(_BYTE *)(v1 + 24) = v14;
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v7, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  v16 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_21FA44968(v16, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v10, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_21FA44968(v17, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v18 = v26;
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v18, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
  swift_beginAccess();
  v20 = *v19;
  swift_beginAccess();
  *v11 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  v23 = *v21;
  v22 = v21[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v12 = v23;
  v12[1] = v22;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21FB6DF0C()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKInspectableValueCollection.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKInspectableValueCollection, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB6DFEC);
}

uint64_t sub_21FB6DFEC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_21FB9E388();
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKInspectableValue(0);
          sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBHKInspectableValue(0);
          sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
          v4 = v3;
          sub_21FC5AE54();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_21FC5AE3C();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKInspectableValueCollection.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB6E2B8);
}

uint64_t sub_21FB6E2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v38 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v38 - v12;
  v45 = type metadata accessor for PBHKInspectableValue(0);
  v14 = *(_QWORD *)(v45 - 8);
  v15 = MEMORY[0x24BDAC7A8](v45);
  v39 = (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v40 = (uint64_t)&v38 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v38 - v19;
  swift_beginAccess();
  v21 = *(_QWORD *)(a1 + 16);
  v42 = a3;
  if (!v21 || (v22 = *(_BYTE *)(a1 + 24), v43 = v21, v44 = v22, sub_21FB9E388(), result = sub_21FC5AED8(), !v3))
  {
    v24 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
    swift_beginAccess();
    sub_21FA44968(v24, (uint64_t)v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v25(v13, 1, v45) == 1)
    {
      sub_21FA2D1F8((uint64_t)v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
      v26 = v25;
    }
    else
    {
      sub_21FA2D23C((uint64_t)v13, (uint64_t)v20, type metadata accessor for PBHKInspectableValue);
      sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
      sub_21FC5AF50();
      result = sub_21FA326EC((uint64_t)v20, type metadata accessor for PBHKInspectableValue);
      v26 = v25;
      if (v3)
        return result;
    }
    v27 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
    swift_beginAccess();
    sub_21FA44968(v27, (uint64_t)v11, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    if (v26(v11, 1, v45) == 1)
    {
      sub_21FA2D1F8((uint64_t)v11, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    }
    else
    {
      v28 = v40;
      sub_21FA2D23C((uint64_t)v11, v40, type metadata accessor for PBHKInspectableValue);
      sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
      sub_21FC5AF50();
      result = sub_21FA326EC(v28, type metadata accessor for PBHKInspectableValue);
      if (v3)
        return result;
    }
    v29 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
    swift_beginAccess();
    v30 = v41;
    sub_21FA44968(v29, v41, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    if (v26((char *)v30, 1, v45) == 1)
    {
      sub_21FA2D1F8(v30, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    }
    else
    {
      v31 = v30;
      v32 = v39;
      sub_21FA2D23C(v31, v39, type metadata accessor for PBHKInspectableValue);
      sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
      sub_21FC5AF50();
      result = sub_21FA326EC(v32, type metadata accessor for PBHKInspectableValue);
      if (v3)
        return result;
    }
    v33 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues;
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v33 + 16)
      || (sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v3))
    {
      v34 = (uint64_t *)(a1
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
      result = swift_beginAccess();
      v36 = *v34;
      v35 = v34[1];
      v37 = HIBYTE(v35) & 0xF;
      if ((v35 & 0x2000000000000000) == 0)
        v37 = v36 & 0xFFFFFFFFFFFFLL;
      if (v37)
      {
        swift_bridgeObjectRetain();
        sub_21FC5AF2C();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t static PBHKInspectableValueCollection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKInspectableValueCollection, sub_21FB6E834) & 1;
}

uint64_t sub_21FB6E834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v85 = type metadata accessor for PBHKInspectableValue(0);
  v83 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A748, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v84 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v81 = (uint64_t)&v75 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v75 - v12;
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v78 = (uint64_t)&v75 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v79 = (uint64_t)&v75 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v80 = (uint64_t)&v75 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v75 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v75 - v27;
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v30 = *(_QWORD *)(a2 + 16);
  if (*(_BYTE *)(a2 + 24) == 1)
    __asm { BR              X10 }
  if (v29 == v30)
  {
    v75 = v17;
    v76 = v9;
    v77 = v5;
    v32 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
    swift_beginAccess();
    v33 = a1;
    v34 = a2;
    sub_21FA44968(v32, (uint64_t)v28, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    v35 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
    swift_beginAccess();
    v36 = (uint64_t)&v13[*(int *)(v84 + 48)];
    sub_21FA44968((uint64_t)v28, (uint64_t)v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    sub_21FA44968(v35, v36, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
    v38 = v85;
    v39 = v37(v13, 1, v85);
    v82 = v33;
    if (v39 == 1)
    {
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v28, &qword_255540580, type metadata accessor for PBHKInspectableValue);
      if (v37((char *)v36, 1, v38) == 1)
      {
        sub_21FA2D1F8((uint64_t)v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
        goto LABEL_14;
      }
    }
    else
    {
      sub_21FA44968((uint64_t)v13, (uint64_t)v26, &qword_255540580, type metadata accessor for PBHKInspectableValue);
      if (v37((char *)v36, 1, v38) != 1)
      {
        v41 = (uint64_t)v77;
        sub_21FA2D23C(v36, (uint64_t)v77, type metadata accessor for PBHKInspectableValue);
        swift_retain();
        swift_retain();
        v42 = sub_21FA449D4((uint64_t)v26, v41, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_21FB713EC);
        sub_21FA326EC(v41, type metadata accessor for PBHKInspectableValue);
        sub_21FA2D1F8((uint64_t)v28, &qword_255540580, type metadata accessor for PBHKInspectableValue);
        sub_21FA326EC((uint64_t)v26, type metadata accessor for PBHKInspectableValue);
        a2 = v34;
        sub_21FA2D1F8((uint64_t)v13, &qword_255540580, type metadata accessor for PBHKInspectableValue);
        if ((v42 & 1) == 0)
          goto LABEL_12;
LABEL_14:
        v43 = v82
            + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
        swift_beginAccess();
        v44 = v80;
        sub_21FA44968(v43, v80, &qword_255540580, type metadata accessor for PBHKInspectableValue);
        v45 = a2;
        v46 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
        swift_beginAccess();
        v47 = v81;
        v48 = v81 + *(int *)(v84 + 48);
        sub_21FA44968(v44, v81, &qword_255540580, type metadata accessor for PBHKInspectableValue);
        sub_21FA44968(v46, v48, &qword_255540580, type metadata accessor for PBHKInspectableValue);
        v49 = v85;
        if (v37((char *)v47, 1, v85) == 1)
        {
          sub_21FA2D1F8(v44, &qword_255540580, type metadata accessor for PBHKInspectableValue);
          if (v37((char *)v48, 1, v49) == 1)
          {
            sub_21FA2D1F8(v47, &qword_255540580, type metadata accessor for PBHKInspectableValue);
            v50 = v45;
LABEL_23:
            v55 = v82
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
            swift_beginAccess();
            v56 = v78;
            sub_21FA44968(v55, v78, &qword_255540580, type metadata accessor for PBHKInspectableValue);
            v57 = v50
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
            swift_beginAccess();
            v58 = (uint64_t)v76;
            v59 = (uint64_t)&v76[*(int *)(v84 + 48)];
            sub_21FA44968(v56, (uint64_t)v76, &qword_255540580, type metadata accessor for PBHKInspectableValue);
            sub_21FA44968(v57, v59, &qword_255540580, type metadata accessor for PBHKInspectableValue);
            v60 = v85;
            if (v37((char *)v58, 1, v85) == 1)
            {
              sub_21FA2D1F8(v56, &qword_255540580, type metadata accessor for PBHKInspectableValue);
              v61 = v45;
              if (v37((char *)v59, 1, v60) == 1)
              {
                sub_21FA2D1F8(v58, &qword_255540580, type metadata accessor for PBHKInspectableValue);
                v62 = v82;
                goto LABEL_30;
              }
            }
            else
            {
              v63 = (uint64_t)v75;
              sub_21FA44968(v58, (uint64_t)v75, &qword_255540580, type metadata accessor for PBHKInspectableValue);
              if (v37((char *)v59, 1, v60) != 1)
              {
                v64 = (uint64_t)v77;
                sub_21FA2D23C(v59, (uint64_t)v77, type metadata accessor for PBHKInspectableValue);
                v65 = sub_21FA449D4(v63, v64, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_21FB713EC);
                sub_21FA326EC(v64, type metadata accessor for PBHKInspectableValue);
                sub_21FA2D1F8(v56, &qword_255540580, type metadata accessor for PBHKInspectableValue);
                sub_21FA326EC(v63, type metadata accessor for PBHKInspectableValue);
                sub_21FA2D1F8(v58, &qword_255540580, type metadata accessor for PBHKInspectableValue);
                v61 = v45;
                v62 = v82;
                if ((v65 & 1) == 0)
                {
LABEL_34:
                  v31 = 0;
                  goto LABEL_20;
                }
LABEL_30:
                v66 = (uint64_t *)(v62
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
                swift_beginAccess();
                v67 = *v66;
                v68 = (uint64_t *)(v61
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
                swift_beginAccess();
                v69 = *v68;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v70 = sub_21FB12288(v67, v69);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v70 & 1) != 0)
                {
                  v71 = (uint64_t *)(v62
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                  swift_beginAccess();
                  v72 = *v71;
                  v73 = v71[1];
                  v74 = (_QWORD *)(v61
                                 + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                  swift_beginAccess();
                  if (v72 == *v74 && v73 == v74[1])
                    v31 = 1;
                  else
                    v31 = sub_21FC5BDF0();
                  goto LABEL_20;
                }
                goto LABEL_34;
              }
              sub_21FA2D1F8(v56, &qword_255540580, type metadata accessor for PBHKInspectableValue);
              sub_21FA326EC(v63, type metadata accessor for PBHKInspectableValue);
            }
            v40 = v58;
            goto LABEL_11;
          }
        }
        else
        {
          v51 = v79;
          sub_21FA44968(v47, v79, &qword_255540580, type metadata accessor for PBHKInspectableValue);
          if (v37((char *)v48, 1, v49) != 1)
          {
            v53 = (uint64_t)v77;
            sub_21FA2D23C(v48, (uint64_t)v77, type metadata accessor for PBHKInspectableValue);
            v54 = sub_21FA449D4(v51, v53, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_21FB713EC);
            sub_21FA326EC(v53, type metadata accessor for PBHKInspectableValue);
            sub_21FA2D1F8(v44, &qword_255540580, type metadata accessor for PBHKInspectableValue);
            sub_21FA326EC(v51, type metadata accessor for PBHKInspectableValue);
            sub_21FA2D1F8(v47, &qword_255540580, type metadata accessor for PBHKInspectableValue);
            v50 = v45;
            if ((v54 & 1) == 0)
              goto LABEL_12;
            goto LABEL_23;
          }
          sub_21FA2D1F8(v44, &qword_255540580, type metadata accessor for PBHKInspectableValue);
          sub_21FA326EC(v51, type metadata accessor for PBHKInspectableValue);
        }
        sub_21FA48E3C(v47, &qword_25554A748, &qword_255540580, type metadata accessor for PBHKInspectableValue);
        v31 = 0;
        goto LABEL_20;
      }
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v28, &qword_255540580, type metadata accessor for PBHKInspectableValue);
      sub_21FA326EC((uint64_t)v26, type metadata accessor for PBHKInspectableValue);
    }
    v40 = (uint64_t)v13;
LABEL_11:
    sub_21FA48E3C(v40, &qword_25554A748, &qword_255540580, type metadata accessor for PBHKInspectableValue);
LABEL_12:
    v31 = 0;
LABEL_20:
    swift_release();
    swift_release();
    return v31 & 1;
  }
  v31 = 0;
  return v31 & 1;
}

uint64_t PBHKInspectableValueCollection.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKInspectableValueCollection, &qword_255544790, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB6F270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D9B8, &qword_255543CF0, a2);
}

unint64_t sub_21FB6F28C()
{
  return 0xD000000000000037;
}

uint64_t sub_21FB6F2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValueCollection.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB6F2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValueCollection.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB6F2D0()
{
  sub_21FA2A08C(&qword_25554A5D0, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
  return sub_21FC5AD70();
}

uint64_t sub_21FB6F320@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D9B0, (uint64_t)qword_255543CD8, a1);
}

uint64_t sub_21FB6F33C()
{
  sub_21FA2A08C(&qword_255544D38, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB6F37C()
{
  sub_21FA2A08C(&qword_255544D38, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
  return sub_21FC5AEA8();
}

unint64_t static PBHKInspectableValue.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB6F3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v36;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543CF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543CF8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_21FC66540;
  v6 = v36 + v5;
  v7 = v36 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v36 + v5) = 1;
  *(_QWORD *)v7 = "valueType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v36 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "stringValue";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v36 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "codedQuantityRawValue";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v36 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "ratioValue";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v36 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "medicalDateString";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v36 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "medicalDateIntervalString";
  *((_QWORD *)v19 + 1) = 25;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v36 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "dateFromDateComponents";
  *((_QWORD *)v21 + 1) = 22;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v36 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "medicalCodingsDisplayStrings";
  *((_QWORD *)v23 + 1) = 28;
  v23[16] = 2;
  v10();
  v24 = v36 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 10;
  *(_QWORD *)v24 = "dataAbsentReasonCodingsDisplayStrings";
  *(_QWORD *)(v24 + 8) = 37;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v36 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 11;
  *(_QWORD *)v26 = "codedValueCollectionValues";
  *((_QWORD *)v26 + 1) = 26;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v36 + v5 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 12;
  *(_QWORD *)v28 = "concept";
  *((_QWORD *)v28 + 1) = 7;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v36 + v5 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 13;
  *(_QWORD *)v30 = "dataAbsentReasonConcept";
  *((_QWORD *)v30 + 1) = 23;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v36 + v5 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 14;
  *(_QWORD *)v32 = "unitString";
  *((_QWORD *)v32 + 1) = 10;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v36 + v5 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 15;
  *(_QWORD *)v34 = "codedQuantity";
  *((_QWORD *)v34 + 1) = 13;
  v34[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBHKInspectableValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D9C0, (uint64_t)qword_255543CF8, a1);
}

uint64_t sub_21FB6F7F8(uint64_t a1)
{
  return sub_21FB5E550(a1, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F814, &qword_255543D10);
}

uint64_t sub_21FB6F814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  v2 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  *v3 = 0;
  v3[1] = 0xE000000000000000;
  v4 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  v5 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings) = v7;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues) = v7;
  v8 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  v9 = type metadata accessor for PBHKConcept(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept, 1, 1, v9);
  v11 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = v0
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  v13 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return v0;
}

uint64_t sub_21FB6F994(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v80 = (uint64_t)&v66 - v5;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v3);
  MEMORY[0x24BDAC7A8](v6);
  v79 = (uint64_t)&v66 - v7;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, v3);
  MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)&v66 - v9;
  sub_21FA2D1A0(0, &qword_2555405A0, type metadata accessor for PBHKRatioValue, v3);
  MEMORY[0x24BDAC7A8](v10);
  v69 = (uint64_t)&v66 - v11;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  *(_QWORD *)(v1 + 48) = 0;
  v67 = (_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 56) = 0xE000000000000000;
  v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  v68 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  v13 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  *v14 = 0;
  v14[1] = 0xE000000000000000;
  v15 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  v70 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  v16 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  v71 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  v72 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
  v18 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings) = MEMORY[0x24BEE4AF8];
  v74 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings) = v18;
  v19 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
  *v19 = v18;
  v20 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  v75 = v19;
  v76 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  v21 = type metadata accessor for PBHKConcept(0);
  v22 = *(void (**)(void))(*(_QWORD *)(v21 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v20, 1, 1, v21);
  v77 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  v22();
  v23 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  v78 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *v23 = 0;
  v23[1] = 0xE000000000000000;
  v24 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  v25 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 16);
  LOBYTE(v22) = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v26;
  *(_BYTE *)(v1 + 24) = (_BYTE)v22;
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 32);
  v28 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v27;
  *(_QWORD *)(v1 + 40) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v30 = *(_QWORD *)(a1 + 48);
  v29 = *(_QWORD *)(a1 + 56);
  v31 = v67;
  swift_beginAccess();
  *v31 = v30;
  *(_QWORD *)(v1 + 56) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  v33 = v69;
  sub_21FA44968(v32, v69, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  v34 = v68;
  swift_beginAccess();
  sub_21FA2D2D8(v33, v34, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  swift_endAccess();
  v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  swift_beginAccess();
  v37 = *v35;
  v36 = v35[1];
  swift_beginAccess();
  *v14 = v37;
  v14[1] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  v39 = v73;
  sub_21FA44968(v38, v73, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v40 = v70;
  swift_beginAccess();
  sub_21FA2D2D8(v39, v40, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  swift_beginAccess();
  v43 = *v41;
  v42 = v41[1];
  v44 = v71;
  swift_beginAccess();
  *v44 = v43;
  v44[1] = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
  swift_beginAccess();
  v46 = *v45;
  v47 = v72;
  swift_beginAccess();
  *v47 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
  swift_beginAccess();
  v49 = *v48;
  v50 = v74;
  swift_beginAccess();
  *v50 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
  swift_beginAccess();
  v52 = *v51;
  v53 = v75;
  swift_beginAccess();
  *v53 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  v55 = v79;
  sub_21FA44968(v54, v79, &qword_255540590, type metadata accessor for PBHKConcept);
  v56 = v76;
  swift_beginAccess();
  sub_21FA2D2D8(v55, v56, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v57 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_21FA44968(v57, v55, &qword_255540590, type metadata accessor for PBHKConcept);
  v58 = v77;
  swift_beginAccess();
  sub_21FA2D2D8(v55, v58, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v59 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  v61 = *v59;
  v60 = v59[1];
  v62 = v78;
  swift_beginAccess();
  *v62 = v61;
  v62[1] = v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  v64 = v80;
  sub_21FA44968(v63, v80, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8(v64, v24, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  swift_endAccess();
  return v1;
}

uint64_t sub_21FB701C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  return v0;
}

uint64_t sub_21FB70300()
{
  return sub_21FB877D4((void (*)(void))sub_21FB701C0);
}

uint64_t PBHKInspectableValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB70340);
}

uint64_t sub_21FB70340()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t (*v6)(uint64_t);
  void *v7;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_21FB9E344();
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_5;
        case 2:
        case 3:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKRatioValue(0);
          sub_21FA2A08C(&qword_255544D20, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          v5 = &qword_25553EAE0;
          v6 = type metadata accessor for PBDateRange;
          v7 = &protocol conformance descriptor for PBDateRange;
          goto LABEL_15;
        case 7:
        case 14:
          swift_beginAccess();
          sub_21FC5AE3C();
          goto LABEL_19;
        case 8:
        case 10:
          swift_beginAccess();
          sub_21FC5AE18();
          goto LABEL_19;
        case 11:
          swift_beginAccess();
          type metadata accessor for PBHKCodedValue(0);
          sub_21FA2A08C(&qword_255544D68, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
          sub_21FC5AE54();
          goto LABEL_19;
        case 12:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          v5 = &qword_255544BE8;
          v6 = type metadata accessor for PBHKConcept;
          v7 = &protocol conformance descriptor for PBHKConcept;
LABEL_15:
          sub_21FA2A08C(v5, v6, (uint64_t)v7);
          goto LABEL_17;
        case 13:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
LABEL_17:
          sub_21FC5AE60();
LABEL_19:
          swift_endAccess();
          break;
        case 15:
          swift_beginAccess();
          type metadata accessor for PBHKCodedQuantity(0);
          sub_21FA2A08C(&qword_255544D80, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
          sub_21FC5AE60();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKInspectableValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB7086C);
}

uint64_t sub_21FB7086C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v79 = (uint64_t)&v77 - v8;
  v80 = type metadata accessor for PBHKCodedQuantity(0);
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v77 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v6);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v90 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v89 = (char *)&v77 - v13;
  v14 = type metadata accessor for PBHKConcept(0);
  v83 = *(_QWORD *)(v14 - 8);
  v84 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v81 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v82 = (uint64_t)&v77 - v17;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, v6);
  MEMORY[0x24BDAC7A8](v18);
  v87 = (uint64_t)&v77 - v19;
  v88 = type metadata accessor for PBDateRange(0);
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v85 = (uint64_t)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_2555405A0, type metadata accessor for PBHKRatioValue, v6);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v77 - v22;
  v24 = type metadata accessor for PBHKRatioValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 16))
  {
    v28 = *(_BYTE *)(a1 + 24);
    v92 = *(_QWORD *)(a1 + 16);
    v93 = v28;
    sub_21FB9E344();
    v29 = v94;
    result = sub_21FC5AED8();
    if (v29)
      return result;
    v94 = 0;
  }
  v91 = a4;
  swift_beginAccess();
  v31 = *(_QWORD *)(a1 + 40);
  v32 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0)
    v32 = *(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
  if (v32)
  {
    swift_bridgeObjectRetain();
    v33 = v94;
    sub_21FC5AF2C();
    if (v33)
      return swift_bridgeObjectRelease();
    v94 = 0;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v34 = *(_QWORD *)(a1 + 56);
  v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0)
    v35 = *(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
  if (v35)
  {
    swift_bridgeObjectRetain();
    v36 = v94;
    sub_21FC5AF2C();
    if (v36)
      return swift_bridgeObjectRelease();
    v94 = 0;
    swift_bridgeObjectRelease();
  }
  v37 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  sub_21FA44968(v37, (uint64_t)v23, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_21FA2D1F8((uint64_t)v23, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v23, (uint64_t)v27, type metadata accessor for PBHKRatioValue);
    sub_21FA2A08C(&qword_255544D20, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
    v38 = v94;
    sub_21FC5AF50();
    v94 = v38;
    v39 = type metadata accessor for PBHKRatioValue;
    v40 = (uint64_t)v27;
    if (v38)
      return sub_21FA326EC(v40, v39);
    sub_21FA326EC((uint64_t)v27, type metadata accessor for PBHKRatioValue);
  }
  v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  swift_beginAccess();
  v42 = *v41;
  v43 = v41[1];
  v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0)
    v44 = v42 & 0xFFFFFFFFFFFFLL;
  v45 = (uint64_t)v89;
  v46 = (uint64_t)v90;
  if (v44)
  {
    swift_bridgeObjectRetain();
    v47 = v94;
    sub_21FC5AF2C();
    v94 = v47;
    if (v47)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v48 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  v49 = v48;
  v50 = v87;
  sub_21FA44968(v49, v87, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v50, 1, v88) == 1)
  {
    sub_21FA2D1F8(v50, &qword_25553E0F8, type metadata accessor for PBDateRange);
    goto LABEL_29;
  }
  v51 = v85;
  sub_21FA2D23C(v50, v85, type metadata accessor for PBDateRange);
  sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
  v52 = v94;
  sub_21FC5AF50();
  v94 = v52;
  v39 = type metadata accessor for PBDateRange;
  v40 = v51;
  if (v52)
    return sub_21FA326EC(v40, v39);
  sub_21FA326EC(v51, type metadata accessor for PBDateRange);
LABEL_29:
  v53 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  swift_beginAccess();
  v54 = *v53;
  v55 = v53[1];
  v56 = HIBYTE(v55) & 0xF;
  if ((v55 & 0x2000000000000000) == 0)
    v56 = v54 & 0xFFFFFFFFFFFFLL;
  if (v56)
  {
    swift_bridgeObjectRetain();
    v57 = v94;
    sub_21FC5AF2C();
    v94 = v57;
    if (v57)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v58 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v58 + 16))
  {
    swift_bridgeObjectRetain();
    v59 = v94;
    sub_21FC5AF14();
    result = swift_bridgeObjectRelease();
    if (v59)
      return result;
  }
  else
  {
    v59 = v94;
  }
  v60 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v60 + 16)
    || (swift_bridgeObjectRetain(), sub_21FC5AF14(), result = swift_bridgeObjectRelease(), !v59))
  {
    v61 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues;
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v61 + 16)
      || (type metadata accessor for PBHKCodedValue(0),
          sub_21FA2A08C(&qword_255544D68, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v59))
    {
      v94 = v59;
      v62 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
      swift_beginAccess();
      sub_21FA44968(v62, v45, &qword_255540590, type metadata accessor for PBHKConcept);
      v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
      if (v63(v45, 1, v84) == 1)
      {
        sub_21FA2D1F8(v45, &qword_255540590, type metadata accessor for PBHKConcept);
        v64 = v94;
      }
      else
      {
        v65 = v82;
        sub_21FA2D23C(v45, v82, type metadata accessor for PBHKConcept);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        v64 = v94;
        sub_21FC5AF50();
        result = sub_21FA326EC(v65, type metadata accessor for PBHKConcept);
        if (v64)
          return result;
      }
      v66 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
      swift_beginAccess();
      sub_21FA44968(v66, v46, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v63(v46, 1, v84) == 1)
      {
        sub_21FA2D1F8(v46, &qword_255540590, type metadata accessor for PBHKConcept);
      }
      else
      {
        v67 = v81;
        sub_21FA2D23C(v46, v81, type metadata accessor for PBHKConcept);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        sub_21FC5AF50();
        result = sub_21FA326EC(v67, type metadata accessor for PBHKConcept);
        if (v64)
          return result;
      }
      v68 = v64;
      v69 = (uint64_t *)(a1
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
      swift_beginAccess();
      v70 = *v69;
      v71 = v69[1];
      v72 = HIBYTE(v71) & 0xF;
      if ((v71 & 0x2000000000000000) == 0)
        v72 = v70 & 0xFFFFFFFFFFFFLL;
      if (!v72 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v68))
      {
        v73 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
        swift_beginAccess();
        v74 = v79;
        sub_21FA44968(v73, v79, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v74, 1, v80) == 1)
        {
          return sub_21FA2D1F8(v74, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
        }
        else
        {
          v75 = v74;
          v76 = v77;
          sub_21FA2D23C(v75, v77, type metadata accessor for PBHKCodedQuantity);
          sub_21FA2A08C(&qword_255544D80, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
          sub_21FC5AF50();
          return sub_21FA326EC(v76, type metadata accessor for PBHKCodedQuantity);
        }
      }
    }
  }
  return result;
}

uint64_t static PBHKInspectableValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_21FB713EC) & 1;
}

BOOL sub_21FB713EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _BOOL8 result;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  _QWORD *v62;
  int v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t);
  int v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int v89;
  unint64_t *v90;
  unint64_t *v91;
  uint64_t (*v92)(uint64_t);
  uint64_t v93;
  char v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD **v100;
  _QWORD *v101;
  _QWORD **v102;
  _QWORD **v103;
  _QWORD *v104;
  _QWORD **v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  int v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;

  v4 = type metadata accessor for PBHKCodedQuantity(0);
  v157 = *(_QWORD *)(v4 - 8);
  v158 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v154 = (uint64_t)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A758, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
  v156 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v159 = (uint64_t)&v151 - v7;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v155 = (uint64_t)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v175 = (char *)&v151 - v12;
  v167 = type metadata accessor for PBHKConcept(0);
  v164 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v161 = (uint64_t)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v166 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v162 = (uint64_t)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v165 = (uint64_t)&v151 - v17;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v160 = (uint64_t)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v174 = (char *)&v151 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v163 = (uint64_t)&v151 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v173 = (char *)&v151 - v25;
  v26 = type metadata accessor for PBDateRange(0);
  v170 = *(_QWORD *)(v26 - 8);
  v171 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v168 = (uint64_t)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v169 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v172 = (uint64_t)&v151 - v29;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, v8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v177 = (uint64_t)&v151 - v34;
  v178 = type metadata accessor for PBHKRatioValue(0);
  v35 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v176 = (uint64_t *)((char *)&v151 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_25554A760, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
  v38 = v37;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v151 - v39;
  sub_21FA2D1A0(0, &qword_2555405A0, type metadata accessor for PBHKRatioValue, v8);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v151 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v151 - v45;
  swift_beginAccess();
  v179 = a1;
  v47 = a1[2];
  swift_beginAccess();
  v48 = *(_QWORD *)(a2 + 16);
  if (*(_BYTE *)(a2 + 24) == 1)
    __asm { BR              X10 }
  if (v47 != v48)
    return 0;
  v153 = v44;
  v49 = v179;
  swift_beginAccess();
  v51 = v49[4];
  v50 = v49[5];
  swift_beginAccess();
  if (v51 == *(_QWORD *)(a2 + 32) && v50 == *(_QWORD *)(a2 + 40)
    || (v52 = sub_21FC5BDF0(), result = 0, (v52 & 1) != 0))
  {
    if ((swift_beginAccess(), v54 = v49[6], v55 = v49[7], swift_beginAccess(), v54 == *(_QWORD *)(a2 + 48))
      && v55 == *(_QWORD *)(a2 + 56)
      || (v56 = sub_21FC5BDF0(), result = 0, (v56 & 1) != 0))
    {
      v152 = v33;
      v57 = (uint64_t)v49
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
      swift_beginAccess();
      sub_21FA44968(v57, (uint64_t)v46, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
      v58 = a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
      swift_beginAccess();
      v59 = (uint64_t)&v40[*(int *)(v38 + 48)];
      sub_21FA44968((uint64_t)v46, (uint64_t)v40, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
      sub_21FA44968(v58, v59, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
      v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
      v61 = v178;
      if (v60((uint64_t)v40, 1, v178) == 1)
      {
        v62 = v179;
        swift_retain();
        swift_retain();
        sub_21FA2D1F8((uint64_t)v46, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
        v63 = v60(v59, 1, v61);
        v64 = v62;
        if (v63 == 1)
        {
          sub_21FA2D1F8((uint64_t)v40, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
          goto LABEL_23;
        }
      }
      else
      {
        v65 = v153;
        sub_21FA44968((uint64_t)v40, (uint64_t)v153, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
        if (v60(v59, 1, v61) != 1)
        {
          v66 = v176;
          sub_21FA2D23C(v59, (uint64_t)v176, type metadata accessor for PBHKRatioValue);
          if ((*v65 != *v66 || v65[1] != v66[1]) && (sub_21FC5BDF0() & 1) == 0
            || (v65[2] != v66[2] || v65[3] != v66[3]) && (sub_21FC5BDF0() & 1) == 0)
          {
            swift_retain();
            swift_retain();
            sub_21FA326EC((uint64_t)v66, type metadata accessor for PBHKRatioValue);
            sub_21FA2D1F8((uint64_t)v46, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
            sub_21FA326EC((uint64_t)v65, type metadata accessor for PBHKRatioValue);
            sub_21FA2D1F8((uint64_t)v40, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
            goto LABEL_62;
          }
          sub_21FC5AD1C();
          sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v67 = v179;
          swift_retain();
          swift_retain();
          v68 = sub_21FC5B5D4();
          sub_21FA326EC((uint64_t)v66, type metadata accessor for PBHKRatioValue);
          sub_21FA2D1F8((uint64_t)v46, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
          sub_21FA326EC((uint64_t)v153, type metadata accessor for PBHKRatioValue);
          v64 = v67;
          sub_21FA2D1F8((uint64_t)v40, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
          if ((v68 & 1) == 0)
          {
LABEL_62:
            swift_release();
            swift_release();
            return 0;
          }
LABEL_23:
          v69 = (_QWORD *)((char *)v64
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
          swift_beginAccess();
          v70 = *v69;
          v71 = v69[1];
          v72 = (_QWORD *)(a2
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
          swift_beginAccess();
          if ((v70 != *v72 || v71 != v72[1]) && (sub_21FC5BDF0() & 1) == 0)
            goto LABEL_62;
          v73 = (uint64_t)v179
              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
          swift_beginAccess();
          v74 = v177;
          sub_21FA44968(v73, v177, &qword_25553E0F8, type metadata accessor for PBDateRange);
          v75 = a2
              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
          swift_beginAccess();
          v76 = v172;
          v77 = v172 + *(int *)(v169 + 48);
          sub_21FA44968(v74, v172, &qword_25553E0F8, type metadata accessor for PBDateRange);
          v78 = v75;
          v79 = v76;
          sub_21FA44968(v78, v77, &qword_25553E0F8, type metadata accessor for PBDateRange);
          v80 = v171;
          v81 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v170 + 48);
          if (v81(v76, 1, v171) == 1)
          {
            sub_21FA2D1F8(v74, &qword_25553E0F8, type metadata accessor for PBDateRange);
            v82 = v81(v77, 1, v80);
            v83 = v179;
            v85 = (uint64_t)v174;
            v84 = (uint64_t)v175;
            v86 = (uint64_t)v173;
            if (v82 == 1)
            {
              sub_21FA2D1F8(v76, &qword_25553E0F8, type metadata accessor for PBDateRange);
              goto LABEL_35;
            }
          }
          else
          {
            v87 = v76;
            v88 = v152;
            sub_21FA44968(v87, (uint64_t)v152, &qword_25553E0F8, type metadata accessor for PBDateRange);
            v89 = v81(v77, 1, v80);
            v85 = (uint64_t)v174;
            v84 = (uint64_t)v175;
            v86 = (uint64_t)v173;
            if (v89 != 1)
            {
              v93 = v168;
              sub_21FA2D23C(v77, v168, type metadata accessor for PBDateRange);
              v94 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v88, v93);
              sub_21FA326EC(v93, type metadata accessor for PBDateRange);
              sub_21FA2D1F8(v177, &qword_25553E0F8, type metadata accessor for PBDateRange);
              sub_21FA326EC((uint64_t)v88, type metadata accessor for PBDateRange);
              sub_21FA2D1F8(v79, &qword_25553E0F8, type metadata accessor for PBDateRange);
              v83 = v179;
              if ((v94 & 1) == 0)
                goto LABEL_62;
LABEL_35:
              v95 = (_QWORD *)((char *)v83
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
              swift_beginAccess();
              v96 = *v95;
              v97 = v95[1];
              v98 = (_QWORD *)(a2
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
              swift_beginAccess();
              if ((v96 != *v98 || v97 != v98[1]) && (sub_21FC5BDF0() & 1) == 0)
                goto LABEL_62;
              v99 = v179;
              v100 = (_QWORD **)((char *)v179
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
              swift_beginAccess();
              v101 = *v100;
              v102 = (_QWORD **)(a2
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
              swift_beginAccess();
              if ((sub_21FB0E158(v101, *v102) & 1) == 0)
                goto LABEL_62;
              v103 = (_QWORD **)((char *)v99
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
              swift_beginAccess();
              v104 = *v103;
              v105 = (_QWORD **)(a2
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
              swift_beginAccess();
              if ((sub_21FB0E158(v104, *v105) & 1) == 0)
                goto LABEL_62;
              v106 = (_QWORD *)((char *)v99
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
              swift_beginAccess();
              v107 = *v106;
              v108 = (uint64_t *)(a2
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
              swift_beginAccess();
              v109 = *v108;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v110 = sub_21FB1229C(v107, v109);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v110 & 1) == 0)
                goto LABEL_62;
              v111 = (uint64_t)v99
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
              swift_beginAccess();
              sub_21FA44968(v111, v86, &qword_255540590, type metadata accessor for PBHKConcept);
              v112 = a2
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
              swift_beginAccess();
              v113 = v165;
              v114 = v165 + *(int *)(v166 + 48);
              sub_21FA44968(v86, v165, &qword_255540590, type metadata accessor for PBHKConcept);
              v115 = v112;
              v79 = v113;
              sub_21FA44968(v115, v114, &qword_255540590, type metadata accessor for PBHKConcept);
              v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
              v117 = v167;
              if (v116(v79, 1, v167) == 1)
              {
                sub_21FA2D1F8(v86, &qword_255540590, type metadata accessor for PBHKConcept);
                v118 = v116(v114, 1, v117);
                v119 = v179;
                if (v118 != 1)
                {
LABEL_54:
                  v90 = &qword_25554A750;
                  v91 = &qword_255540590;
                  v92 = type metadata accessor for PBHKConcept;
                  goto LABEL_32;
                }
                sub_21FA2D1F8(v79, &qword_255540590, type metadata accessor for PBHKConcept);
              }
              else
              {
                v120 = v163;
                sub_21FA44968(v79, v163, &qword_255540590, type metadata accessor for PBHKConcept);
                if (v116(v114, 1, v117) == 1)
                {
                  sub_21FA2D1F8(v86, &qword_255540590, type metadata accessor for PBHKConcept);
                  v121 = v120;
LABEL_53:
                  sub_21FA326EC(v121, type metadata accessor for PBHKConcept);
                  goto LABEL_54;
                }
                v122 = v114;
                v123 = v86;
                v124 = v120;
                v125 = v161;
                sub_21FA2D23C(v122, v161, type metadata accessor for PBHKConcept);
                LODWORD(v178) = sub_21FA449D4(v124, v125, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
                sub_21FA326EC(v125, type metadata accessor for PBHKConcept);
                sub_21FA2D1F8(v123, &qword_255540590, type metadata accessor for PBHKConcept);
                sub_21FA326EC(v124, type metadata accessor for PBHKConcept);
                sub_21FA2D1F8(v79, &qword_255540590, type metadata accessor for PBHKConcept);
                v119 = v179;
                if ((v178 & 1) == 0)
                  goto LABEL_62;
              }
              v126 = (uint64_t)v119
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
              swift_beginAccess();
              sub_21FA44968(v126, v85, &qword_255540590, type metadata accessor for PBHKConcept);
              v127 = a2
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
              swift_beginAccess();
              v128 = v162;
              v129 = v162 + *(int *)(v166 + 48);
              sub_21FA44968(v85, v162, &qword_255540590, type metadata accessor for PBHKConcept);
              v130 = v127;
              v79 = v128;
              sub_21FA44968(v130, v129, &qword_255540590, type metadata accessor for PBHKConcept);
              v131 = v167;
              if (v116(v128, 1, v167) == 1)
              {
                sub_21FA2D1F8(v85, &qword_255540590, type metadata accessor for PBHKConcept);
                v132 = v116(v129, 1, v131);
                v133 = v179;
                if (v132 == 1)
                {
                  sub_21FA2D1F8(v128, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_56:
                  v138 = (_QWORD *)((char *)v133
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                  swift_beginAccess();
                  v139 = *v138;
                  v140 = v138[1];
                  v141 = (_QWORD *)(a2
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                  swift_beginAccess();
                  if (v139 == *v141 && v140 == v141[1] || (sub_21FC5BDF0() & 1) != 0)
                  {
                    v142 = (uint64_t)v179
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
                    swift_beginAccess();
                    sub_21FA44968(v142, v84, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                    v143 = a2
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
                    swift_beginAccess();
                    v144 = v159;
                    v145 = v159 + *(int *)(v156 + 48);
                    sub_21FA44968(v84, v159, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                    sub_21FA44968(v143, v145, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                    v146 = v158;
                    v147 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
                    if (v147(v144, 1, v158) == 1)
                    {
                      swift_release();
                      swift_release();
                      sub_21FA2D1F8(v84, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                      if (v147(v145, 1, v146) == 1)
                      {
                        sub_21FA2D1F8(v144, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                        return 1;
                      }
                    }
                    else
                    {
                      v148 = v155;
                      sub_21FA44968(v144, v155, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                      if (v147(v145, 1, v146) != 1)
                      {
                        v149 = v154;
                        sub_21FA2D23C(v145, v154, type metadata accessor for PBHKCodedQuantity);
                        v150 = _s19HealthRecordsDaemon17PBHKCodedQuantityV2eeoiySbAC_ACtFZ_0(v148, v149);
                        swift_release();
                        swift_release();
                        sub_21FA326EC(v149, type metadata accessor for PBHKCodedQuantity);
                        sub_21FA2D1F8(v84, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                        sub_21FA326EC(v148, type metadata accessor for PBHKCodedQuantity);
                        sub_21FA2D1F8(v144, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                        return (v150 & 1) != 0;
                      }
                      swift_release();
                      swift_release();
                      sub_21FA2D1F8(v84, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                      sub_21FA326EC(v148, type metadata accessor for PBHKCodedQuantity);
                    }
                    sub_21FA48E3C(v144, &qword_25554A758, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity);
                    return 0;
                  }
                  goto LABEL_62;
                }
                goto LABEL_54;
              }
              v134 = v128;
              v135 = v160;
              sub_21FA44968(v134, v160, &qword_255540590, type metadata accessor for PBHKConcept);
              if (v116(v129, 1, v131) != 1)
              {
                v136 = v161;
                sub_21FA2D23C(v129, v161, type metadata accessor for PBHKConcept);
                v137 = sub_21FA449D4(v135, v136, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
                sub_21FA326EC(v136, type metadata accessor for PBHKConcept);
                sub_21FA2D1F8(v85, &qword_255540590, type metadata accessor for PBHKConcept);
                sub_21FA326EC(v135, type metadata accessor for PBHKConcept);
                sub_21FA2D1F8(v79, &qword_255540590, type metadata accessor for PBHKConcept);
                v133 = v179;
                if ((v137 & 1) == 0)
                  goto LABEL_62;
                goto LABEL_56;
              }
              sub_21FA2D1F8(v85, &qword_255540590, type metadata accessor for PBHKConcept);
              v121 = v135;
              goto LABEL_53;
            }
            sub_21FA2D1F8(v177, &qword_25553E0F8, type metadata accessor for PBDateRange);
            sub_21FA326EC((uint64_t)v88, type metadata accessor for PBDateRange);
          }
          v90 = &qword_25553EAB0;
          v91 = &qword_25553E0F8;
          v92 = type metadata accessor for PBDateRange;
LABEL_32:
          sub_21FA48E3C(v79, v90, v91, v92);
          goto LABEL_62;
        }
        swift_retain();
        swift_retain();
        sub_21FA2D1F8((uint64_t)v46, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
        sub_21FA326EC((uint64_t)v65, type metadata accessor for PBHKRatioValue);
      }
      sub_21FA48E3C((uint64_t)v40, &qword_25554A760, &qword_2555405A0, type metadata accessor for PBHKRatioValue);
      goto LABEL_62;
    }
  }
  return result;
}

uint64_t PBHKInspectableValue.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKInspectableValue, &qword_255544798, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
}

uint64_t sub_21FB7284C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D9C8, &qword_255543D10, a2);
}

unint64_t sub_21FB72868()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB72884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB72898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB728AC()
{
  sub_21FA2A08C(&qword_25554A5C8, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
  return sub_21FC5AD70();
}

uint64_t sub_21FB728FC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D9C0, (uint64_t)qword_255543CF8, a1);
}

uint64_t sub_21FB72918()
{
  sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB72958()
{
  sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
  return sub_21FC5AEA8();
}

unint64_t static PBHKCodedValue.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_21FB729C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543D18);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543D18);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "concept";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "value";
  *((_QWORD *)v12 + 1) = 5;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "referenceRanges";
  *(_QWORD *)(v13 + 8) = 15;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKCodedValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D9D0, (uint64_t)qword_255543D18, a1);
}

uint64_t sub_21FB72B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for PBHKCodedValue._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  v2 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  v4 = type metadata accessor for PBHKInspectableValue(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = MEMORY[0x24BEE4AF8];
  qword_255543D30 = v0;
  return result;
}

uint64_t sub_21FB72C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _BYTE v20[24];

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v20[-v5];
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v3);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v20[-v8];
  v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  v11 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  v13 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = MEMORY[0x24BEE4AF8];
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v9, v10, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v16 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v16, (uint64_t)v6, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v12, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  v18 = *v17;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v14 = v18;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FB72EB4()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKCodedValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKCodedValue, (void (*)(_QWORD))type metadata accessor for PBHKCodedValue._StorageClass, sub_21FB72C34, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB72F58);
}

uint64_t sub_21FB72F58()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        type metadata accessor for PBHKInspectableValue(0);
        sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
LABEL_13:
        v4 = v3;
        sub_21FC5AE60();
LABEL_5:
        v3 = v4;
        swift_endAccess();
        goto LABEL_6;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBHKConcept(0);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        goto LABEL_13;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBHKReferenceRange(0);
    sub_21FA2A08C(&qword_255544D08, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
    v4 = v3;
    sub_21FC5AE54();
    goto LABEL_5;
  }
  return result;
}

uint64_t PBHKCodedValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKCodedValue, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB73150);
}

uint64_t sub_21FB73150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a3;
  v32 = a4;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - v7;
  v9 = type metadata accessor for PBHKInspectableValue(0);
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v27 = (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v5);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - v12;
  v14 = type metadata accessor for PBHKConcept(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v18, (uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21FA2D1F8((uint64_t)v13, &qword_255540590, type metadata accessor for PBHKConcept);
    v19 = v30;
    v20 = v33;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    v21 = v30;
    sub_21FC5AF50();
    v19 = v21;
    result = sub_21FA326EC((uint64_t)v17, type metadata accessor for PBHKConcept);
    v20 = v33;
    if (v21)
      return result;
  }
  v23 = v20
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_21FA44968(v23, (uint64_t)v8, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v8, 1, v29) == 1)
  {
    sub_21FA2D1F8((uint64_t)v8, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    v24 = v27;
    sub_21FA2D23C((uint64_t)v8, v27, type metadata accessor for PBHKInspectableValue);
    sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
    sub_21FC5AF50();
    result = sub_21FA326EC(v24, type metadata accessor for PBHKInspectableValue);
    if (v19)
      return result;
  }
  v25 = v20
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v25 + 16))
  {
    type metadata accessor for PBHKReferenceRange(0);
    sub_21FA2A08C(&qword_255544D08, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
    swift_bridgeObjectRetain();
    sub_21FC5AF44();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static PBHKCodedValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKCodedValue, sub_21FB7352C) & 1;
}

uint64_t sub_21FB7352C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v62 = a2;
  v58 = type metadata accessor for PBHKInspectableValue(0);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v52 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A748, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v55 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v59 = (uint64_t)&v52 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v53 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (uint64_t)&v52 - v10;
  v11 = type metadata accessor for PBHKConcept(0);
  v61 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v54 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v52 - v15;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v6);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v60 = (uint64_t)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v52 - v20;
  v22 = a1;
  v23 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_21FA44968(v23, (uint64_t)v21, &qword_255540590, type metadata accessor for PBHKConcept);
  v24 = v62;
  v25 = v62
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  v26 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_21FA44968((uint64_t)v21, (uint64_t)v16, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA44968(v25, v26, &qword_255540590, type metadata accessor for PBHKConcept);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  if (v27((uint64_t)v16, 1, v11) != 1)
  {
    v29 = v60;
    sub_21FA44968((uint64_t)v16, v60, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v27(v26, 1, v11) != 1)
    {
      v34 = v54;
      sub_21FA2D23C(v26, v54, type metadata accessor for PBHKConcept);
      swift_retain();
      v28 = v24;
      swift_retain();
      v35 = sub_21FA449D4(v29, v34, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
      sub_21FA326EC(v34, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8((uint64_t)v21, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA326EC(v29, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8((uint64_t)v16, &qword_255540590, type metadata accessor for PBHKConcept);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v21, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v29, type metadata accessor for PBHKConcept);
LABEL_6:
    v30 = &qword_25554A750;
    v31 = &qword_255540590;
    v32 = type metadata accessor for PBHKConcept;
    v33 = (uint64_t)v16;
LABEL_14:
    sub_21FA48E3C(v33, v30, v31, v32);
    goto LABEL_15;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v21, &qword_255540590, type metadata accessor for PBHKConcept);
  v28 = v24;
  if (v27(v26, 1, v11) != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v16, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_8:
  v36 = v22
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  v37 = v57;
  sub_21FA44968(v36, v57, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v38 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  v39 = v59;
  v40 = v59 + *(int *)(v55 + 48);
  sub_21FA44968(v37, v59, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  sub_21FA44968(v38, v40, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v42 = v58;
  if (v41(v39, 1, v58) == 1)
  {
    sub_21FA2D1F8(v37, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    if (v41(v40, 1, v42) == 1)
    {
      sub_21FA2D1F8(v39, &qword_255540580, type metadata accessor for PBHKInspectableValue);
LABEL_18:
      v48 = (uint64_t *)(v22
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
      swift_beginAccess();
      v49 = *v48;
      v50 = (uint64_t *)(v28
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
      swift_beginAccess();
      v51 = *v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = sub_21FB11C10(v49, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  v43 = v53;
  sub_21FA44968(v39, v53, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  if (v41(v40, 1, v42) == 1)
  {
    sub_21FA2D1F8(v37, &qword_255540580, type metadata accessor for PBHKInspectableValue);
    sub_21FA326EC(v43, type metadata accessor for PBHKInspectableValue);
LABEL_13:
    v30 = &qword_25554A748;
    v31 = &qword_255540580;
    v32 = type metadata accessor for PBHKInspectableValue;
    v33 = v39;
    goto LABEL_14;
  }
  v46 = v52;
  sub_21FA2D23C(v40, v52, type metadata accessor for PBHKInspectableValue);
  v47 = sub_21FA449D4(v43, v46, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_21FB713EC);
  sub_21FA326EC(v46, type metadata accessor for PBHKInspectableValue);
  sub_21FA2D1F8(v37, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  sub_21FA326EC(v43, type metadata accessor for PBHKInspectableValue);
  sub_21FA2D1F8(v39, &qword_255540580, type metadata accessor for PBHKInspectableValue);
  if ((v47 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v44 = 0;
LABEL_16:
  swift_release();
  swift_release();
  return v44 & 1;
}

uint64_t PBHKCodedValue.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKCodedValue, &qword_2555447A0, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
}

uint64_t sub_21FB73C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D9D8, &qword_255543D30, a2);
}

unint64_t sub_21FB73CAC()
{
  return 0xD000000000000027;
}

uint64_t sub_21FB73CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKCodedValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB73CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKCodedValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB73CF0()
{
  sub_21FA2A08C(&qword_25554A5C0, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
  return sub_21FC5AD70();
}

uint64_t sub_21FB73D40@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D9D0, (uint64_t)qword_255543D18, a1);
}

uint64_t sub_21FB73D5C()
{
  sub_21FA2A08C(&qword_255544D68, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB73D9C()
{
  sub_21FA2A08C(&qword_255544D68, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB73DEC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKCodedValue, sub_21FB7352C) & 1;
}

unint64_t static PBHKCodedQuantity.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB73E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543D38);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543D38);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5FEE0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "rawValue";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "localizedValue";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "doubleValue";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "comparatorDisplayString";
  *((_QWORD *)v16 + 1) = 23;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "unitDisplayString";
  *((_QWORD *)v18 + 1) = 17;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "codedQuantityDisplayString";
  *((_QWORD *)v20 + 1) = 26;
  v20[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKCodedQuantity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D9E0, (uint64_t)qword_255543D38, a1);
}

uint64_t PBHKCodedQuantity.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
        case 5:
        case 6:
          sub_21FC5AE3C();
          break;
        case 3:
          sub_21FC5AE00();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKCodedQuantity.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_21FC5AF2C(), !v1))
    {
      if (*(float *)(v0 + 32) == 0.0 || (result = sub_21FC5AEFC(), !v1))
      {
        v7 = *(_QWORD *)(v0 + 48);
        v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0)
          v8 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
        if (!v8 || (result = sub_21FC5AF2C(), !v1))
        {
          v9 = *(_QWORD *)(v0 + 64);
          v10 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000) == 0)
            v10 = *(_QWORD *)(v0 + 56) & 0xFFFFFFFFFFFFLL;
          if (!v10 || (result = sub_21FC5AF2C(), !v1))
          {
            v11 = *(_QWORD *)(v0 + 80);
            v12 = HIBYTE(v11) & 0xF;
            if ((v11 & 0x2000000000000000) == 0)
              v12 = *(_QWORD *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
            if (!v12 || (result = sub_21FC5AF2C(), !v1))
            {
              type metadata accessor for PBHKCodedQuantity(0);
              return sub_21FC5AD04();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBHKCodedQuantity.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKCodedQuantity, &qword_2555447A8, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
}

uint64_t sub_21FB74344@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FB7437C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_21FB74398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FB743D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 40);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_21FB74418())()
{
  return nullsub_1;
}

uint64_t sub_21FB7442C()
{
  return PBHKCodedQuantity.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB74440()
{
  return PBHKCodedQuantity.traverse<A>(visitor:)();
}

uint64_t sub_21FB74454()
{
  sub_21FA2A08C(&qword_25554A5B8, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
  return sub_21FC5AD70();
}

uint64_t sub_21FB744A4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D9E0, (uint64_t)qword_255543D38, a1);
}

uint64_t sub_21FB744C0()
{
  sub_21FA2A08C(&qword_255544D80, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB74500()
{
  sub_21FA2A08C(&qword_255544D80, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
  return sub_21FC5AEA8();
}

unint64_t static PBHKDiagnosticTestReport.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB74570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543D50);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543D50);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "diagnostic_test";
  *(_QWORD *)(v8 + 8) = 15;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "effective_end_date";
  *(_QWORD *)(v12 + 8) = 18;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "effective_start_date";
  *((_QWORD *)v14 + 1) = 20;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "issue_date";
  *((_QWORD *)v16 + 1) = 10;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "panel_name";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "results";
  *((_QWORD *)v20 + 1) = 7;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "status";
  *((_QWORD *)v22 + 1) = 6;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKDiagnosticTestReport._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D9E8, (uint64_t)qword_255543D50, a1);
}

uint64_t sub_21FB7480C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t result;

  type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  v2 = type metadata accessor for PBHKConcept(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results) = MEMORY[0x24BEE4AF8];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  qword_255543D68 = v0;
  return result;
}

uint64_t sub_21FB748F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (uint64_t)&v34 - v4;
  v5 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  v6 = type metadata accessor for PBHKConcept(0);
  v7 = *(void (**)(void))(*(_QWORD *)(v6 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v6);
  v36 = v1;
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v34 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results) = MEMORY[0x24BEE4AF8];
  v35 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v7();
  v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  v13 = v37;
  sub_21FA44968(v12, v37, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_beginAccess();
  sub_21FA2D2D8(v13, v5, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v16 = *v14;
  v15 = v14[1];
  swift_beginAccess();
  *v8 = v16;
  v8[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v19 = *v17;
  v18 = v17[1];
  swift_beginAccess();
  *v9 = v19;
  v9[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  v22 = *v20;
  v21 = v20[1];
  swift_beginAccess();
  *v10 = v22;
  v10[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  v25 = *v23;
  v24 = v23[1];
  swift_beginAccess();
  *v11 = v25;
  v11[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  v27 = *v26;
  v28 = v34;
  swift_beginAccess();
  *v28 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v30 = v29;
  v31 = v37;
  sub_21FA44968(v30, v37, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_release();
  v32 = v35;
  swift_beginAccess();
  sub_21FA2D2D8(v31, v32, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return v36;
}

uint64_t sub_21FB74CD4()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, &qword_255540590, type metadata accessor for PBHKConcept);
  return swift_deallocClassInstance();
}

uint64_t PBHKDiagnosticTestReport.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB74DD8);
}

uint64_t sub_21FB74DD8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBFHIRIdentifier(0);
          sub_21FA2A08C(&qword_255544BD0, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKDiagnosticTestReport.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB750C8);
}

uint64_t sub_21FB750C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a4;
  v49 = a3;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v47 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - v8;
  v10 = type metadata accessor for PBHKConcept(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v44 - v14;
  v16 = a1;
  v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v17, (uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v19 = v18(v9, 1, v10);
  v46 = v10;
  if (v19 == 1)
  {
    sub_21FA2D1F8((uint64_t)v9, &qword_255540590, type metadata accessor for PBHKConcept);
    v20 = v48;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v9, (uint64_t)v15, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    v21 = v48;
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v15, type metadata accessor for PBHKConcept);
    v20 = v21;
    if (v21)
      return result;
  }
  v23 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v24 = *v23;
  v25 = v23[1];
  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = v24 & 0xFFFFFFFFFFFFLL;
  if (!v26 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v20))
  {
    v27 = (uint64_t *)(v16
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
    swift_beginAccess();
    v28 = *v27;
    v29 = v27[1];
    v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0)
      v30 = v28 & 0xFFFFFFFFFFFFLL;
    if (!v30 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v20))
    {
      v31 = (uint64_t *)(v16
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
      swift_beginAccess();
      v32 = *v31;
      v33 = v31[1];
      v34 = HIBYTE(v33) & 0xF;
      if ((v33 & 0x2000000000000000) == 0)
        v34 = v32 & 0xFFFFFFFFFFFFLL;
      if (!v34 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v20))
      {
        v35 = (uint64_t *)(v16
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
        swift_beginAccess();
        v36 = *v35;
        v37 = v35[1];
        v38 = HIBYTE(v37) & 0xF;
        if ((v37 & 0x2000000000000000) == 0)
          v38 = v36 & 0xFFFFFFFFFFFFLL;
        if (!v38 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v20))
        {
          v39 = v16
              + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results;
          swift_beginAccess();
          if (!*(_QWORD *)(*(_QWORD *)v39 + 16)
            || (type metadata accessor for PBFHIRIdentifier(0),
                sub_21FA2A08C(&qword_255544BD0, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v20))
          {
            v40 = v16
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
            swift_beginAccess();
            v41 = v40;
            v42 = v47;
            sub_21FA44968(v41, v47, &qword_255540590, type metadata accessor for PBHKConcept);
            if (v18((char *)v42, 1, v46) == 1)
            {
              return sub_21FA2D1F8(v42, &qword_255540590, type metadata accessor for PBHKConcept);
            }
            else
            {
              v43 = v45;
              sub_21FA2D23C(v42, v45, type metadata accessor for PBHKConcept);
              sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
              sub_21FC5AF50();
              return sub_21FA326EC(v43, type metadata accessor for PBHKConcept);
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_21FB75624(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;

  v71 = a2;
  v3 = type metadata accessor for PBHKConcept(0);
  v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 - 8);
  v73 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v69 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v6 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v68 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v65 - v9;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v65 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v67 = (uint64_t)&v65 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v70 = (uint64_t)&v65 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v65 - v18;
  v20 = a1;
  v21 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_21FA44968(v21, (uint64_t)v19, &qword_255540590, type metadata accessor for PBHKConcept);
  v22 = v71;
  v23 = v71
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  v66 = v6;
  v24 = (uint64_t)&v10[*(int *)(v6 + 48)];
  sub_21FA44968((uint64_t)v19, (uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
  v25 = v73;
  sub_21FA44968(v23, v24, &qword_255540590, type metadata accessor for PBHKConcept);
  v26 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v72 + 6);
  if (v26((uint64_t)v10, 1, v25) != 1)
  {
    sub_21FA44968((uint64_t)v10, v70, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v26(v24, 1, v25) != 1)
    {
      v30 = v69;
      sub_21FA2D23C(v24, v69, type metadata accessor for PBHKConcept);
      v29 = v20;
      swift_retain();
      swift_retain();
      v31 = v70;
      v32 = sub_21FA449D4(v70, v30, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
      sub_21FA326EC(v30, type metadata accessor for PBHKConcept);
      sub_21FA2D1F8((uint64_t)v19, &qword_255540590, type metadata accessor for PBHKConcept);
      sub_21FA326EC(v31, type metadata accessor for PBHKConcept);
      v28 = v22;
      sub_21FA2D1F8((uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
      if ((v32 & 1) != 0)
        goto LABEL_8;
LABEL_24:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v19, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v70, type metadata accessor for PBHKConcept);
LABEL_6:
    sub_21FA48E3C((uint64_t)v10, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    goto LABEL_24;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v19, &qword_255540590, type metadata accessor for PBHKConcept);
  v27 = v26(v24, 1, v25);
  v28 = v22;
  v29 = v20;
  if (v27 != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v10, &qword_255540590, type metadata accessor for PBHKConcept);
LABEL_8:
  v72 = v26;
  v33 = (uint64_t *)(v29
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  v34 = *v33;
  v35 = v33[1];
  v36 = (_QWORD *)(v28
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  if ((v34 != *v36 || v35 != v36[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_24;
  v37 = (uint64_t *)(v29
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  v38 = *v37;
  v39 = v37[1];
  v40 = (_QWORD *)(v28
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  if ((v38 != *v40 || v39 != v40[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_24;
  v41 = (uint64_t *)(v29
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  v42 = *v41;
  v43 = v41[1];
  v44 = (_QWORD *)(v28
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  if ((v42 != *v44 || v43 != v44[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_24;
  v45 = (uint64_t *)(v29
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  v46 = *v45;
  v47 = v45[1];
  v48 = (_QWORD *)(v28
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  if ((v46 != *v48 || v47 != v48[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_24;
  v49 = (uint64_t *)(v29
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  v50 = *v49;
  v51 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  v52 = *v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = sub_21FB122B0(v50, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v53 & 1) == 0)
    goto LABEL_24;
  v54 = v29
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v55 = v67;
  sub_21FA44968(v54, v67, &qword_255540590, type metadata accessor for PBHKConcept);
  v56 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v57 = v68;
  v58 = v68 + *(int *)(v66 + 48);
  sub_21FA44968(v55, v68, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA44968(v56, v58, &qword_255540590, type metadata accessor for PBHKConcept);
  v60 = v72;
  v59 = v73;
  if (v72(v57, 1, v73) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v55, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v60(v58, 1, v59) == 1)
    {
      sub_21FA2D1F8(v57, &qword_255540590, type metadata accessor for PBHKConcept);
      return 1;
    }
    goto LABEL_29;
  }
  v62 = v65;
  sub_21FA44968(v57, v65, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v60(v58, 1, v59) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v55, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v62, type metadata accessor for PBHKConcept);
LABEL_29:
    sub_21FA48E3C(v57, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    return 0;
  }
  v63 = v69;
  sub_21FA2D23C(v58, v69, type metadata accessor for PBHKConcept);
  v64 = sub_21FA449D4(v62, v63, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  swift_release();
  swift_release();
  sub_21FA326EC(v63, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v55, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v62, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v57, &qword_255540590, type metadata accessor for PBHKConcept);
  return (v64 & 1) != 0;
}

uint64_t PBHKDiagnosticTestReport.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKDiagnosticTestReport, &qword_2555447B0, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
}

uint64_t sub_21FB75E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553D9F0, &qword_255543D68, a2);
}

unint64_t sub_21FB75EB4()
{
  return 0xD000000000000031;
}

uint64_t sub_21FB75ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestReport.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB75EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestReport.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB75EF8()
{
  sub_21FA2A08C(&qword_25554A5B0, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
  return sub_21FC5AD70();
}

uint64_t sub_21FB75F48@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D9E8, (uint64_t)qword_255543D50, a1);
}

uint64_t sub_21FB75F64()
{
  sub_21FA2A08C(&qword_255544D98, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB75FA4()
{
  sub_21FA2A08C(&qword_255544D98, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB75FF4(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t (*)(uint64_t, uint64_t))sub_21FB75624) & 1;
}

unint64_t static PBHKAccountOwner.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB76038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543D70);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543D70);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "birth_date";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "name";
  *((_QWORD *)v12 + 1) = 4;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKAccountOwner._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553D9F8, (uint64_t)qword_255543D70, a1);
}

uint64_t PBHKAccountOwner.decodeMessage<A>(decoder:)()
{
  return sub_21FB82E58();
}

uint64_t PBHKAccountOwner.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB6D5CC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKAccountOwner);
}

uint64_t PBHKAccountOwner.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKAccountOwner, &qword_2555447B8, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
}

unint64_t sub_21FB76208()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB76224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAccountOwner.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB76238()
{
  sub_21FA2A08C(&qword_25554A5A8, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
  return sub_21FC5AD70();
}

uint64_t sub_21FB76288@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553D9F8, (uint64_t)qword_255543D70, a1);
}

uint64_t sub_21FB762A4()
{
  sub_21FA2A08C(&qword_255544DB0, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB762E4()
{
  sub_21FA2A08C(&qword_255544DB0, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB76334(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBHKAccountOwner) & 1;
}

unint64_t static PBHKProcedureRecord.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB76370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v34;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543D88);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543D88);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_21FC62990;
  v6 = v34 + v5;
  v7 = v34 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v34 + v5) = 1;
  *(_QWORD *)v7 = "body_sites";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "category";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "complications";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "execution_end_date";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "execution_start_date";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "follow_ups";
  *((_QWORD *)v19 + 1) = 10;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "not_performed";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "outcome";
  *((_QWORD *)v23 + 1) = 7;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "performers";
  *(_QWORD *)(v24 + 8) = 10;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "procedure";
  *((_QWORD *)v26 + 1) = 9;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "reason";
  *((_QWORD *)v28 + 1) = 6;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v6 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "reasons_not_performed";
  *((_QWORD *)v30 + 1) = 21;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v6 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "status";
  *((_QWORD *)v32 + 1) = 6;
  v32[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBHKProcedureRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA00, (uint64_t)qword_255543D88, a1);
}

uint64_t sub_21FB76774(uint64_t a1)
{
  return sub_21FB5E550(a1, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB76790, &qword_255543DA0);
}

uint64_t sub_21FB76790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;
  _QWORD *v6;

  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  v2 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  v3 = type metadata accessor for PBHKConcept(0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications) = v1;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps) = v1;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed) = 0;
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome, 1, 1, v3);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers) = v1;
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure, 1, 1, v3);
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason, 1, 1, v3);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed) = v1;
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v3);
  return v0;
}

uint64_t sub_21FB768CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _BYTE *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v56 = (uint64_t)&v46 - v5;
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
  v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  v47 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  v8 = type metadata accessor for PBHKConcept(0);
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  *v10 = v6;
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v48 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  *v48 = v6;
  v49 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  *v49 = 0;
  v50 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  v9();
  v51 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  *v51 = v6;
  v52 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  v9();
  v53 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  v9();
  v54 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  *v54 = v6;
  v55 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v9();
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  v15 = v56;
  sub_21FA44968(v14, v56, &qword_255540590, type metadata accessor for PBHKConcept);
  v16 = v47;
  swift_beginAccess();
  sub_21FA2D2D8(v15, v16, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  v18 = *v17;
  swift_beginAccess();
  *v10 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  v21 = *v19;
  v20 = v19[1];
  swift_beginAccess();
  *v11 = v21;
  v11[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  v24 = *v22;
  v23 = v22[1];
  swift_beginAccess();
  *v12 = v24;
  v12[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  v26 = *v25;
  v27 = v48;
  swift_beginAccess();
  *v27 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  LOBYTE(v28) = *v28;
  v29 = v49;
  swift_beginAccess();
  *v29 = (_BYTE)v28;
  v30 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  v31 = v56;
  sub_21FA44968(v30, v56, &qword_255540590, type metadata accessor for PBHKConcept);
  v32 = v50;
  swift_beginAccess();
  sub_21FA2D2D8(v31, v32, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v33 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  v34 = *v33;
  v35 = v51;
  swift_beginAccess();
  *v35 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_21FA44968(v36, v31, &qword_255540590, type metadata accessor for PBHKConcept);
  v37 = v52;
  swift_beginAccess();
  sub_21FA2D2D8(v31, v37, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v38 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_21FA44968(v38, v31, &qword_255540590, type metadata accessor for PBHKConcept);
  v39 = v53;
  swift_beginAccess();
  sub_21FA2D2D8(v31, v39, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v40 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  v41 = *v40;
  v42 = v54;
  swift_beginAccess();
  *v42 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_21FA44968(v43, v31, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_release();
  v44 = v55;
  swift_beginAccess();
  sub_21FA2D2D8(v31, v44, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return v2;
}

uint64_t sub_21FB76F54()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, &qword_255540590, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_21FB77070()
{
  return sub_21FB877D4((void (*)(void))sub_21FB76F54);
}

uint64_t PBHKProcedureRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB770B0);
}

uint64_t sub_21FB770B0()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 4:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 6:
        case 12:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADAC();
          goto LABEL_5;
        case 8:
        case 10:
        case 11:
        case 13:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 9:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE18();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKProcedureRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB774E8);
}

uint64_t sub_21FB774E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v27)(_QWORD, _QWORD, _QWORD);
  uint64_t result;
  uint64_t v29;
  unsigned int (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(_QWORD, _QWORD, _QWORD);
  uint64_t v70;
  uint64_t v71;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v62 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v65 = (uint64_t)&v61 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v66 = (uint64_t)&v61 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v68 = (uint64_t)&v61 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v61 - v11;
  v13 = type metadata accessor for PBHKConcept(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v61 = (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v63 = (uint64_t)&v61 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v64 = (uint64_t)&v61 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v67 = (uint64_t)&v61 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v61 - v23;
  swift_beginAccess();
  v71 = a1;
  v25 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v70 = v13;
  if (v25)
  {
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    swift_bridgeObjectRetain();
    v26 = v69;
    sub_21FC5AF44();
    v27 = v26;
    if (v26)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = v69;
  }
  v29 = v71
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v29, (uint64_t)v12, &qword_255540590, type metadata accessor for PBHKConcept);
  v69 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v14 + 48);
  if (v69(v12, 1, v70) == 1)
  {
    sub_21FA2D1F8((uint64_t)v12, &qword_255540590, type metadata accessor for PBHKConcept);
    v30 = v27;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v12, (uint64_t)v24, type metadata accessor for PBHKConcept);
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    sub_21FC5AF50();
    v30 = v27;
    if (v27)
      return sub_21FA326EC((uint64_t)v24, type metadata accessor for PBHKConcept);
    sub_21FA326EC((uint64_t)v24, type metadata accessor for PBHKConcept);
  }
  v31 = v71;
  v32 = v71
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v32 + 16))
  {
    sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
    swift_bridgeObjectRetain();
    sub_21FC5AF44();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v33 = (uint64_t *)(v31
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  v34 = *v33;
  v35 = v33[1];
  v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v36 = v34 & 0xFFFFFFFFFFFFLL;
  if (!v36)
    goto LABEL_19;
  swift_bridgeObjectRetain();
  sub_21FC5AF2C();
  if (v30)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  v37 = (uint64_t *)(v31
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  v38 = *v37;
  v39 = v37[1];
  v40 = HIBYTE(v39) & 0xF;
  if ((v39 & 0x2000000000000000) == 0)
    v40 = v38 & 0xFFFFFFFFFFFFLL;
  if (v40)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v30)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v41 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v41 + 16)
    || (sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v30))
  {
    v42 = (_BYTE *)(v31
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
    swift_beginAccess();
    if (*v42 != 1 || (result = sub_21FC5AECC(), !v30))
    {
      v43 = v31
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
      swift_beginAccess();
      v44 = v43;
      v45 = v68;
      sub_21FA44968(v44, v68, &qword_255540590, type metadata accessor for PBHKConcept);
      if (v69(v45, 1, v70) == 1)
      {
        sub_21FA2D1F8(v45, &qword_255540590, type metadata accessor for PBHKConcept);
      }
      else
      {
        v46 = v67;
        sub_21FA2D23C(v45, v67, type metadata accessor for PBHKConcept);
        sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
        sub_21FC5AF50();
        result = sub_21FA326EC(v46, type metadata accessor for PBHKConcept);
        if (v30)
          return result;
      }
      v47 = v31
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers;
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)v47 + 16)
        || (swift_bridgeObjectRetain(), sub_21FC5AF14(), result = swift_bridgeObjectRelease(), !v30))
      {
        v48 = v31
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
        swift_beginAccess();
        v49 = v48;
        v50 = v66;
        sub_21FA44968(v49, v66, &qword_255540590, type metadata accessor for PBHKConcept);
        if (v69(v50, 1, v70) == 1)
        {
          sub_21FA2D1F8(v50, &qword_255540590, type metadata accessor for PBHKConcept);
        }
        else
        {
          v51 = v64;
          sub_21FA2D23C(v50, v64, type metadata accessor for PBHKConcept);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          sub_21FC5AF50();
          result = sub_21FA326EC(v51, type metadata accessor for PBHKConcept);
          if (v30)
            return result;
        }
        v52 = v31
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
        swift_beginAccess();
        v53 = v52;
        v54 = v65;
        sub_21FA44968(v53, v65, &qword_255540590, type metadata accessor for PBHKConcept);
        if (v69(v54, 1, v70) == 1)
        {
          sub_21FA2D1F8(v54, &qword_255540590, type metadata accessor for PBHKConcept);
        }
        else
        {
          v55 = v63;
          sub_21FA2D23C(v54, v63, type metadata accessor for PBHKConcept);
          sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
          sub_21FC5AF50();
          result = sub_21FA326EC(v55, type metadata accessor for PBHKConcept);
          if (v30)
            return result;
        }
        v56 = v31
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed;
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)v56 + 16)
          || (sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v30))
        {
          v57 = v31
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
          swift_beginAccess();
          v58 = v57;
          v59 = v62;
          sub_21FA44968(v58, v62, &qword_255540590, type metadata accessor for PBHKConcept);
          if (v69(v59, 1, v70) == 1)
          {
            return sub_21FA2D1F8(v59, &qword_255540590, type metadata accessor for PBHKConcept);
          }
          else
          {
            v60 = v61;
            sub_21FA2D23C(v59, v61, type metadata accessor for PBHKConcept);
            sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
            sub_21FC5AF50();
            return sub_21FA326EC(v60, type metadata accessor for PBHKConcept);
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_21FB77EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char v72;
  unsigned __int8 *v73;
  int v74;
  unsigned __int8 *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _QWORD **v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD **v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v4 = type metadata accessor for PBHKConcept(0);
  v155 = *(_QWORD *)(v4 - 8);
  v156 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v153 = (uint64_t)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v142 = (uint64_t)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v145 = (uint64_t)&v138 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v148 = (uint64_t)&v138 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v152 = (uint64_t)&v138 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v138 - v16;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v141 = (uint64_t)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v143 = (uint64_t)&v138 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v144 = (uint64_t)&v138 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v147 = (uint64_t)&v138 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v146 = (uint64_t)&v138 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v150 = (char *)&v138 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v149 = (uint64_t)&v138 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v151 = (uint64_t)&v138 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v138 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v138 - v38;
  swift_beginAccess();
  v40 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v41 = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = sub_21FB11504(v40, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v42 & 1) == 0)
    goto LABEL_48;
  v140 = a1;
  v43 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_21FA44968(v43, (uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
  v154 = a2;
  v44 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  v139 = v7;
  v45 = (uint64_t)&v17[*(int *)(v7 + 48)];
  sub_21FA44968((uint64_t)v39, (uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA44968(v44, v45, &qword_255540590, type metadata accessor for PBHKConcept);
  v46 = v156;
  v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v155 + 48);
  if (v47((uint64_t)v17, 1, v156) == 1)
  {
    sub_21FA2D1F8((uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
    v48 = v47(v45, 1, v46);
    v49 = v140;
    if (v48 == 1)
    {
      sub_21FA2D1F8((uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_12;
    }
LABEL_8:
    v50 = (uint64_t)v17;
LABEL_9:
    sub_21FA48E3C(v50, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    goto LABEL_48;
  }
  sub_21FA44968((uint64_t)v17, (uint64_t)v37, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v47(v45, 1, v46) == 1)
  {
    sub_21FA2D1F8((uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC((uint64_t)v37, type metadata accessor for PBHKConcept);
    goto LABEL_8;
  }
  v51 = v153;
  sub_21FA2D23C(v45, v153, type metadata accessor for PBHKConcept);
  v52 = sub_21FA449D4((uint64_t)v37, v51, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  sub_21FA326EC(v51, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8((uint64_t)v39, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC((uint64_t)v37, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8((uint64_t)v17, &qword_255540590, type metadata accessor for PBHKConcept);
  v49 = v140;
  if ((v52 & 1) == 0)
    goto LABEL_48;
LABEL_12:
  v53 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  v54 = *v53;
  v55 = v154;
  v56 = (uint64_t *)(v154
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  v57 = *v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = sub_21FB11504(v54, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v58 & 1) == 0)
    goto LABEL_48;
  v59 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  v60 = *v59;
  v61 = v59[1];
  v62 = (_QWORD *)(v55
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  if ((v60 != *v62 || v61 != v62[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_48;
  v63 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  v64 = *v63;
  v65 = v63[1];
  v66 = (_QWORD *)(v154
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  if ((v64 != *v66 || v65 != v66[1]) && (sub_21FC5BDF0() & 1) == 0)
    goto LABEL_48;
  v67 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  v68 = *v67;
  v69 = v154;
  v70 = (uint64_t *)(v154
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  v71 = *v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v72 = sub_21FB11504(v68, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v72 & 1) == 0)
    goto LABEL_48;
  v73 = (unsigned __int8 *)(v49
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  v74 = *v73;
  v75 = (unsigned __int8 *)(v69
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  if (v74 != *v75)
    goto LABEL_48;
  v76 = v49
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  v77 = v151;
  sub_21FA44968(v76, v151, &qword_255540590, type metadata accessor for PBHKConcept);
  v78 = v69
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  v79 = v152;
  v80 = v152 + *(int *)(v139 + 48);
  sub_21FA44968(v77, v152, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA44968(v78, v80, &qword_255540590, type metadata accessor for PBHKConcept);
  v81 = v156;
  if (v47(v79, 1, v156) == 1)
  {
    sub_21FA2D1F8(v77, &qword_255540590, type metadata accessor for PBHKConcept);
    v82 = v47(v80, 1, v81);
    v83 = (uint64_t)v150;
    if (v82 == 1)
    {
      sub_21FA2D1F8(v79, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  v84 = v149;
  sub_21FA44968(v79, v149, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v47(v80, 1, v81) == 1)
  {
    sub_21FA2D1F8(v77, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v84, type metadata accessor for PBHKConcept);
LABEL_27:
    v50 = v79;
    goto LABEL_9;
  }
  v85 = v79;
  v86 = v153;
  sub_21FA2D23C(v80, v153, type metadata accessor for PBHKConcept);
  v87 = sub_21FA449D4(v84, v86, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  sub_21FA326EC(v86, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v77, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v84, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v85, &qword_255540590, type metadata accessor for PBHKConcept);
  v83 = (uint64_t)v150;
  if ((v87 & 1) == 0)
    goto LABEL_48;
LABEL_29:
  v88 = (_QWORD **)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  v89 = *v88;
  v90 = v154;
  v91 = (_QWORD **)(v154
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  if ((sub_21FB0E158(v89, *v91) & 1) == 0)
  {
LABEL_48:
    swift_release();
    swift_release();
    return 0;
  }
  v92 = v49
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_21FA44968(v92, v83, &qword_255540590, type metadata accessor for PBHKConcept);
  v93 = v90
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  v94 = v139;
  v95 = v148;
  v96 = v148 + *(int *)(v139 + 48);
  sub_21FA44968(v83, v148, &qword_255540590, type metadata accessor for PBHKConcept);
  v97 = v95;
  sub_21FA44968(v93, v96, &qword_255540590, type metadata accessor for PBHKConcept);
  v98 = v95;
  v99 = v156;
  if (v47(v98, 1, v156) == 1)
  {
    sub_21FA2D1F8(v83, &qword_255540590, type metadata accessor for PBHKConcept);
    v100 = v47(v96, 1, v99);
    v101 = v147;
    if (v100 == 1)
    {
      v102 = v94;
      sub_21FA2D1F8(v97, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_37;
    }
    goto LABEL_35;
  }
  v103 = v146;
  sub_21FA44968(v97, v146, &qword_255540590, type metadata accessor for PBHKConcept);
  v104 = v47(v96, 1, v99);
  v101 = v147;
  if (v104 == 1)
  {
    sub_21FA2D1F8(v83, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v103, type metadata accessor for PBHKConcept);
LABEL_35:
    v50 = v97;
    goto LABEL_9;
  }
  v105 = v83;
  v102 = v94;
  v106 = v105;
  v107 = v153;
  sub_21FA2D23C(v96, v153, type metadata accessor for PBHKConcept);
  v108 = sub_21FA449D4(v103, v107, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  sub_21FA326EC(v107, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v106, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v103, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v148, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((v108 & 1) == 0)
    goto LABEL_48;
LABEL_37:
  v109 = v49
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_21FA44968(v109, v101, &qword_255540590, type metadata accessor for PBHKConcept);
  v110 = v101;
  v111 = v154
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  v112 = v145;
  v113 = v145 + *(int *)(v102 + 48);
  sub_21FA44968(v110, v145, &qword_255540590, type metadata accessor for PBHKConcept);
  v114 = v111;
  v115 = v112;
  v116 = v156;
  sub_21FA44968(v114, v113, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v47(v115, 1, v116) == 1)
  {
    sub_21FA2D1F8(v110, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v47(v113, 1, v116) == 1)
    {
      sub_21FA2D1F8(v115, &qword_255540590, type metadata accessor for PBHKConcept);
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  v117 = v144;
  sub_21FA44968(v115, v144, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v47(v113, 1, v116) == 1)
  {
    sub_21FA2D1F8(v147, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v117, type metadata accessor for PBHKConcept);
LABEL_42:
    v50 = v115;
    goto LABEL_9;
  }
  v118 = v153;
  sub_21FA2D23C(v113, v153, type metadata accessor for PBHKConcept);
  v119 = sub_21FA449D4(v117, v118, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  sub_21FA326EC(v118, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v147, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v117, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v115, &qword_255540590, type metadata accessor for PBHKConcept);
  if ((v119 & 1) == 0)
    goto LABEL_48;
LABEL_44:
  v120 = (uint64_t *)(v49
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  v121 = *v120;
  v122 = v154;
  v123 = (uint64_t *)(v154
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  v124 = *v123;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v125 = sub_21FB11504(v121, v124);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v125 & 1) == 0)
    goto LABEL_48;
  v126 = v49
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v127 = v126;
  v128 = v102;
  v129 = v143;
  sub_21FA44968(v127, v143, &qword_255540590, type metadata accessor for PBHKConcept);
  v130 = v122
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  v131 = v142;
  v132 = v142 + *(int *)(v128 + 48);
  sub_21FA44968(v129, v142, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA44968(v130, v132, &qword_255540590, type metadata accessor for PBHKConcept);
  v133 = v156;
  if (v47(v131, 1, v156) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v143, &qword_255540590, type metadata accessor for PBHKConcept);
    if (v47(v132, 1, v133) == 1)
    {
      sub_21FA2D1F8(v131, &qword_255540590, type metadata accessor for PBHKConcept);
      return 1;
    }
LABEL_52:
    sub_21FA48E3C(v131, &qword_25554A750, &qword_255540590, type metadata accessor for PBHKConcept);
    return 0;
  }
  v135 = v141;
  sub_21FA44968(v131, v141, &qword_255540590, type metadata accessor for PBHKConcept);
  if (v47(v132, 1, v133) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v143, &qword_255540590, type metadata accessor for PBHKConcept);
    sub_21FA326EC(v135, type metadata accessor for PBHKConcept);
    v131 = v142;
    goto LABEL_52;
  }
  v136 = v153;
  sub_21FA2D23C(v132, v153, type metadata accessor for PBHKConcept);
  v137 = sub_21FA449D4(v135, v136, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_21FB58418);
  swift_release();
  swift_release();
  sub_21FA326EC(v136, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v143, &qword_255540590, type metadata accessor for PBHKConcept);
  sub_21FA326EC(v135, type metadata accessor for PBHKConcept);
  sub_21FA2D1F8(v142, &qword_255540590, type metadata accessor for PBHKConcept);
  return (v137 & 1) != 0;
}

uint64_t PBHKProcedureRecord.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKProcedureRecord, &qword_2555447C0, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
}

uint64_t sub_21FB78FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DA08, &qword_255543DA0, a2);
}

unint64_t sub_21FB78FF4()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB79010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKProcedureRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB79024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKProcedureRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB79038()
{
  sub_21FA2A08C(&qword_25554A5A0, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
  return sub_21FC5AD70();
}

uint64_t sub_21FB79088@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA00, (uint64_t)qword_255543D88, a1);
}

uint64_t sub_21FB790A4()
{
  sub_21FA2A08C(&qword_255544DC8, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB790E4()
{
  sub_21FA2A08C(&qword_255544DC8, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB79134(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKProcedureRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB77EE4) & 1;
}

unint64_t static PBCycleTracking.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_21FB79178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543DA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543DA8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5FEE0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "cycles";
  *(_QWORD *)(v8 + 8) = 6;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "typical_cycle_length_days";
  *(_QWORD *)(v12 + 8) = 25;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "typical_cycle_length_range";
  *((_QWORD *)v14 + 1) = 26;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "typical_period_length_days";
  *((_QWORD *)v16 + 1) = 26;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "typical_period_length_range";
  *((_QWORD *)v18 + 1) = 27;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "last_menstrual_period_date";
  *((_QWORD *)v20 + 1) = 26;
  v20[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA10, (uint64_t)qword_255543DA8, a1);
}

uint64_t sub_21FB793E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v5;

  type metadata accessor for PBCycleTracking._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(v0 + 24) = 0;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  v2 = type metadata accessor for PBCycleTracking.Range(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays) = 0;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, 1, 1, v2);
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  qword_255543DC0 = v0;
  return result;
}

uint64_t type metadata accessor for PBECGMeasurement(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546C50);
}

uint64_t type metadata accessor for PBActivitySummarySeries(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546D08);
}

uint64_t sub_21FB794CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  _DWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - v5;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(v1 + 24) = 0;
  v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  v8 = type metadata accessor for PBCycleTracking.Range(0);
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  v10 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  *v10 = 0;
  v22 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  v9();
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = *(_DWORD *)(a1 + 24);
  swift_beginAccess();
  *(_DWORD *)(v2 + 24) = v13;
  v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  sub_21FA44968(v14, (uint64_t)v6, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v7, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  v15 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  LODWORD(v15) = *v15;
  swift_beginAccess();
  *v10 = (_DWORD)v15;
  v16 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  sub_21FA44968(v16, (uint64_t)v6, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v17 = v22;
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v6, v17, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  v20 = *v18;
  v19 = v18[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v11 = v20;
  v11[1] = v19;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21FB797D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBCycleTracking.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBCycleTracking, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB79894);
}

uint64_t sub_21FB79894()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBCycleTracking.Cycle(0);
          sub_21FA2A08C(&qword_255544E30, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 2:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE0C();
          goto LABEL_5;
        case 3:
        case 5:
          swift_beginAccess();
          type metadata accessor for PBCycleTracking.Range(0);
          sub_21FA2A08C(&qword_255544DF0, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
          v4 = v3;
          sub_21FC5AE60();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_21FC5AE3C();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBCycleTracking.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCycleTracking, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB79B14);
}

uint64_t sub_21FB79B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - v10;
  v36 = type metadata accessor for PBCycleTracking.Range(0);
  v12 = *(_QWORD *)(v36 - 8);
  v13 = MEMORY[0x24BDAC7A8](v36);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v35 = (uint64_t)&v32 - v16;
  swift_beginAccess();
  v17 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v37 = a4;
  v33 = v15;
  if (!v17
    || (type metadata accessor for PBCycleTracking.Cycle(0),
        sub_21FA2A08C(&qword_255544E30, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    if (!*(_DWORD *)(a1 + 24) || (result = sub_21FC5AF08(), !v4))
    {
      v19 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
      swift_beginAccess();
      sub_21FA44968(v19, (uint64_t)v11, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v20(v11, 1, v36) == 1)
      {
        sub_21FA2D1F8((uint64_t)v11, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
      }
      else
      {
        v21 = (uint64_t)v11;
        v22 = v35;
        sub_21FA2D23C(v21, v35, type metadata accessor for PBCycleTracking.Range);
        sub_21FA2A08C(&qword_255544DF0, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
        sub_21FC5AF50();
        result = sub_21FA326EC(v22, type metadata accessor for PBCycleTracking.Range);
        if (v4)
          return result;
      }
      v23 = (_DWORD *)(a1
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
      swift_beginAccess();
      if (!*v23 || (result = sub_21FC5AF08(), !v4))
      {
        v24 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
        swift_beginAccess();
        v25 = v24;
        v26 = v34;
        sub_21FA44968(v25, v34, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
        if (v20((char *)v26, 1, v36) == 1)
        {
          sub_21FA2D1F8(v26, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
        }
        else
        {
          v27 = (uint64_t)v33;
          sub_21FA2D23C(v26, (uint64_t)v33, type metadata accessor for PBCycleTracking.Range);
          sub_21FA2A08C(&qword_255544DF0, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
          sub_21FC5AF50();
          result = sub_21FA326EC(v27, type metadata accessor for PBCycleTracking.Range);
          if (v4)
            return result;
        }
        v28 = (uint64_t *)(a1
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
        result = swift_beginAccess();
        v30 = *v28;
        v29 = v28[1];
        v31 = HIBYTE(v29) & 0xF;
        if ((v29 & 0x2000000000000000) == 0)
          v31 = v30 & 0xFFFFFFFFFFFFLL;
        if (v31)
        {
          swift_bridgeObjectRetain();
          sub_21FC5AF2C();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_21FB79F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  int v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;
  _DWORD *v57;
  _DWORD *v58;
  char v59;
  _DWORD *v61;
  _DWORD *v62;
  char v63;
  _DWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _DWORD *v68;
  char *v69;
  _DWORD *v70;
  uint64_t v71;
  _DWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v76 = type metadata accessor for PBCycleTracking.Range(0);
  v73 = *(_QWORD *)(v76 - 8);
  v4 = MEMORY[0x24BDAC7A8](v76);
  v70 = (_DWORD *)((char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v72 = (_DWORD *)((char *)&v64 - v6);
  sub_21FA48F60(0, &qword_25554A828, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v75 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v71 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v74 = (uint64_t)&v64 - v10;
  sub_21FA2D1A0(0, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v64 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v64 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v64 - v21;
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v24 = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = sub_21FB124B8(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    v56 = 0;
    goto LABEL_23;
  }
  v68 = v20;
  v69 = v22;
  v64 = v14;
  v65 = v17;
  v26 = v75;
  v27 = v76;
  swift_beginAccess();
  v28 = *(_DWORD *)(a1 + 24);
  swift_beginAccess();
  if (v28 != *(_DWORD *)(a2 + 24))
    goto LABEL_20;
  v67 = a1;
  v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  v30 = (uint64_t)v69;
  sub_21FA44968(v29, (uint64_t)v69, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v66 = a2;
  v31 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  v32 = v26;
  v33 = *(int *)(v26 + 48);
  v34 = v74;
  v35 = v74 + v33;
  sub_21FA44968(v30, v74, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  sub_21FA44968(v31, v35, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  if (v36(v34, 1, v27) == 1)
  {
    sub_21FA2D1F8(v30, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
    v37 = v36(v35, 1, v27);
    v38 = v67;
    if (v37 == 1)
    {
      sub_21FA2D1F8(v34, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
      v39 = v66;
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  v57 = v68;
  sub_21FA44968(v34, (uint64_t)v68, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  if (v36(v35, 1, v27) == 1)
  {
    sub_21FA2D1F8(v30, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
    sub_21FA326EC((uint64_t)v57, type metadata accessor for PBCycleTracking.Range);
LABEL_16:
    sub_21FA48E3C(v34, &qword_25554A828, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
LABEL_22:
    v56 = 0;
    goto LABEL_23;
  }
  v58 = v72;
  sub_21FA2D23C(v35, (uint64_t)v72, type metadata accessor for PBCycleTracking.Range);
  if (*v57 != *v58 || v57[1] != v58[1])
  {
    sub_21FA326EC((uint64_t)v58, type metadata accessor for PBCycleTracking.Range);
    sub_21FA2D1F8((uint64_t)v69, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
    sub_21FA326EC((uint64_t)v57, type metadata accessor for PBCycleTracking.Range);
    sub_21FA2D1F8(v34, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
    goto LABEL_22;
  }
  sub_21FC5AD1C();
  sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v59 = sub_21FC5B5D4();
  sub_21FA326EC((uint64_t)v58, type metadata accessor for PBCycleTracking.Range);
  sub_21FA2D1F8((uint64_t)v69, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  sub_21FA326EC((uint64_t)v57, type metadata accessor for PBCycleTracking.Range);
  v38 = v67;
  sub_21FA2D1F8(v34, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v39 = v66;
  if ((v59 & 1) == 0)
    goto LABEL_20;
LABEL_6:
  v40 = (int *)(v38
              + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  v41 = *v40;
  v42 = (_DWORD *)(v39
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  if (v41 != *v42)
    goto LABEL_20;
  v43 = v38
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  v44 = v43;
  v45 = (uint64_t)v65;
  sub_21FA44968(v44, (uint64_t)v65, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v46 = v39
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  v47 = v45;
  swift_beginAccess();
  v48 = v71;
  v49 = v71 + *(int *)(v32 + 48);
  sub_21FA44968(v47, v71, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  sub_21FA44968(v46, v49, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  if (v36(v48, 1, v27) != 1)
  {
    v61 = v64;
    sub_21FA44968(v48, (uint64_t)v64, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
    if (v36(v49, 1, v27) == 1)
    {
      sub_21FA2D1F8(v47, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
      sub_21FA326EC((uint64_t)v61, type metadata accessor for PBCycleTracking.Range);
      goto LABEL_26;
    }
    v62 = v70;
    sub_21FA2D23C(v49, (uint64_t)v70, type metadata accessor for PBCycleTracking.Range);
    if (*v61 != *v62 || v61[1] != v62[1])
    {
      sub_21FA326EC((uint64_t)v62, type metadata accessor for PBCycleTracking.Range);
      sub_21FA2D1F8((uint64_t)v65, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
      sub_21FA326EC((uint64_t)v61, type metadata accessor for PBCycleTracking.Range);
      sub_21FA2D1F8(v48, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
      goto LABEL_32;
    }
    sub_21FC5AD1C();
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v63 = sub_21FC5B5D4();
    sub_21FA326EC((uint64_t)v62, type metadata accessor for PBCycleTracking.Range);
    sub_21FA2D1F8((uint64_t)v65, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
    sub_21FA326EC((uint64_t)v61, type metadata accessor for PBCycleTracking.Range);
    sub_21FA2D1F8(v48, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
    v50 = v66;
    v51 = v67;
    if ((v63 & 1) != 0)
      goto LABEL_10;
LABEL_20:
    v56 = 0;
    goto LABEL_23;
  }
  sub_21FA2D1F8(v47, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  if (v36(v49, 1, v27) != 1)
  {
LABEL_26:
    sub_21FA48E3C(v48, &qword_25554A828, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
LABEL_32:
    v56 = 0;
    goto LABEL_23;
  }
  sub_21FA2D1F8(v48, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range);
  v50 = v66;
  v51 = v67;
LABEL_10:
  v52 = (uint64_t *)(v51
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  v53 = *v52;
  v54 = v52[1];
  v55 = (_QWORD *)(v50
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  if (v53 == *v55 && v54 == v55[1])
    v56 = 1;
  else
    v56 = sub_21FC5BDF0();
LABEL_23:
  swift_release();
  swift_release();
  return v56 & 1;
}

uint64_t PBCycleTracking.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCycleTracking, &qword_2555447C8, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
}

uint64_t sub_21FB7A880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DA18, &qword_255543DC0, a2);
}

unint64_t sub_21FB7A89C()
{
  return 0xD000000000000028;
}

uint64_t sub_21FB7A8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB7A8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB7A8E0()
{
  sub_21FA2A08C(&qword_25554A598, type metadata accessor for PBCycleTracking, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7A930@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA10, (uint64_t)qword_255543DA8, a1);
}

uint64_t sub_21FB7A94C()
{
  sub_21FA2A08C(&qword_25553EB48, type metadata accessor for PBCycleTracking, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7A98C()
{
  sub_21FA2A08C(&qword_25553EB48, type metadata accessor for PBCycleTracking, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB7A9DC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCycleTracking, sub_21FB79F74) & 1;
}

uint64_t sub_21FB7AA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543DC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543DC8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5FEE0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "FLOW_NOT_ENTERED";
  *(_QWORD *)(v8 + 8) = 16;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "NO_FLOW";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "UNSPECIFIED";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "LIGHT_FLOW";
  *((_QWORD *)v16 + 1) = 10;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "MEDIUM_FLOW";
  *((_QWORD *)v18 + 1) = 11;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "HEAVY_FLOW";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking.Flow._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA20, (uint64_t)qword_255543DC8, a1);
}

uint64_t sub_21FB7AC64@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA20, (uint64_t)qword_255543DC8, a1);
}

uint64_t sub_21FB7AC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543DE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543DE0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "OVULATION_NOT_ENTERED";
  *(_QWORD *)(v8 + 8) = 21;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "INDETERMINATE";
  *(_QWORD *)(v12 + 8) = 13;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "NEGATIVE";
  *((_QWORD *)v14 + 1) = 8;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "ESTROGEN_SURGE";
  *((_QWORD *)v16 + 1) = 14;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 4;
  *(_QWORD *)v17 = "LUTENIZING_HORMONE_SURGE";
  *(_QWORD *)(v17 + 8) = 24;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking.OvulationTestResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA28, (uint64_t)qword_255543DE0, a1);
}

uint64_t sub_21FB7AEAC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA28, (uint64_t)qword_255543DE0, a1);
}

uint64_t sub_21FB7AEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543DF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543DF8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5FEE0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "MUCUS_NOT_ENTERED";
  *(_QWORD *)(v8 + 8) = 17;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "DRY";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "STICKY";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "CREAMY";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "WATERY";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "EGG_WHITE";
  *((_QWORD *)v20 + 1) = 9;
  v20[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking.CervicalMucusQuality._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA30, (uint64_t)qword_255543DF8, a1);
}

uint64_t sub_21FB7B124@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA30, (uint64_t)qword_255543DF8, a1);
}

uint64_t sub_21FB7B140()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543E10 = 0xD000000000000028;
  *(_QWORD *)algn_255543E18 = 0x800000021FC78880;
  return result;
}

uint64_t static PBCycleTracking.Range.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DA38, &qword_255543E10);
}

uint64_t sub_21FB7B1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543E20);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543E20);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "min";
  *(_QWORD *)(v8 + 8) = 3;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "max";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking.Range._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA40, (uint64_t)qword_255543E20, a1);
}

uint64_t PBCycleTracking.Range.decodeMessage<A>(decoder:)()
{
  return sub_21FB88DD8();
}

uint64_t PBCycleTracking.Range.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB7B374(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_21FB7B374(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  _DWORD *v4;
  uint64_t v5;
  uint64_t result;

  if (!*v4 || (result = sub_21FC5AF08(), !v5))
  {
    if (!v4[1] || (result = sub_21FC5AF08(), !v5))
    {
      a4(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t static PBCycleTracking.Range.== infix(_:_:)(_DWORD *a1, char *a2)
{
  return sub_21FB8CBBC(a1, a2, type metadata accessor for PBCycleTracking.Range) & 1;
}

uint64_t PBCycleTracking.Range.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCycleTracking.Range, &qword_2555447D0, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
}

uint64_t sub_21FB7B474@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  return sub_21FC5AD10();
}

uint64_t sub_21FB7B494(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DA38, &qword_255543E10);
}

uint64_t sub_21FB7B4B4()
{
  return PBCycleTracking.Range.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB7B4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.Range.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB7B4DC()
{
  sub_21FA2A08C(&qword_25554A590, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7B52C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA40, (uint64_t)qword_255543E20, a1);
}

uint64_t sub_21FB7B548()
{
  sub_21FA2A08C(&qword_255544DF0, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7B588()
{
  sub_21FA2A08C(&qword_255544DF0, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB7B5D8(_DWORD *a1, char *a2)
{
  return sub_21FB8CBBC(a1, a2, type metadata accessor for PBCycleTracking.Range) & 1;
}

uint64_t sub_21FB7B5F8()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543E38 = 0xD000000000000028;
  unk_255543E40 = 0x800000021FC78880;
  return result;
}

uint64_t static PBCycleTracking.SexualActivity.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DA48, &qword_255543E38);
}

uint64_t sub_21FB7B68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543E48);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543E48);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "had_sex";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "protection_used";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking.SexualActivity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA50, (uint64_t)qword_255543E48, a1);
}

uint64_t PBCycleTracking.SexualActivity.decodeMessage<A>(decoder:)()
{
  return sub_21FB82910();
}

uint64_t PBCycleTracking.SexualActivity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB829BC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t static PBCycleTracking.SexualActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21FB8D630(a1, a2, type metadata accessor for PBCycleTracking.SexualActivity) & 1;
}

uint64_t PBCycleTracking.SexualActivity.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCycleTracking.SexualActivity, &qword_2555447D8, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
}

uint64_t sub_21FB7B874(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DA48, &qword_255543E38);
}

uint64_t sub_21FB7B894()
{
  return PBPatientMeta.HeartRateMeds.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB7B8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.SexualActivity.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB7B8BC()
{
  sub_21FA2A08C(&qword_25554A588, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7B90C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA50, (uint64_t)qword_255543E48, a1);
}

uint64_t sub_21FB7B928()
{
  sub_21FA2A08C(&qword_255544E08, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7B968()
{
  sub_21FA2A08C(&qword_255544E08, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB7B9B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21FB8D630(a1, a2, type metadata accessor for PBCycleTracking.SexualActivity) & 1;
}

uint64_t sub_21FB7B9D8()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543E60 = 0xD000000000000028;
  *(_QWORD *)algn_255543E68 = 0x800000021FC78880;
  return result;
}

uint64_t static PBCycleTracking.Event.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DA58, &qword_255543E60);
}

uint64_t sub_21FB7BA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543E70);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543E70);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC623E0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "date";
  *(_QWORD *)(v8 + 8) = 4;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "flow";
  *(_QWORD *)(v12 + 8) = 4;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "sexualActivity";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "cervicalMucusQuality";
  *((_QWORD *)v16 + 1) = 20;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "basalBodyTemperature";
  *((_QWORD *)v18 + 1) = 20;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "hadSpotting";
  *((_QWORD *)v20 + 1) = 11;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "symptoms";
  *((_QWORD *)v22 + 1) = 8;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "enum_symptoms";
  *((_QWORD *)v24 + 1) = 13;
  v24[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking.Event._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA60, (uint64_t)qword_255543E70, a1);
}

uint64_t sub_21FB7BD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for PBCycleTracking.Event._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  v1 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  v2 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature) = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting) = 0;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms) = v5;
  qword_255543E88 = v0;
  return result;
}

uint64_t sub_21FB7BE00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int *v18;
  int v19;
  _DWORD *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _BYTE *v33;
  _QWORD *v34;
  _QWORD *v35;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (uint64_t)&v30 - v5;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_BYTE *)(v1 + 40) = 1;
  v6 = v1
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  v7 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v1
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v32 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  *v32 = 0;
  v33 = (_BYTE *)(v1
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
  *v33 = 0;
  v34 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
  v9 = MEMORY[0x24BEE4AF8];
  *v34 = MEMORY[0x24BEE4AF8];
  v35 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
  *v35 = v9;
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v10;
  *(_QWORD *)(v1 + 24) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = v12;
  *(_BYTE *)(v2 + 40) = v13;
  v14 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  v15 = v31;
  sub_21FA44968(v14, v31, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_beginAccess();
  sub_21FA2D2D8(v15, v6, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_endAccess();
  v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
  swift_beginAccess();
  v17 = *v16;
  LOBYTE(v16) = *((_BYTE *)v16 + 8);
  swift_beginAccess();
  *(_QWORD *)v8 = v17;
  *(_BYTE *)(v8 + 8) = (_BYTE)v16;
  v18 = (int *)(a1
              + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  v19 = *v18;
  v20 = v32;
  swift_beginAccess();
  *v20 = v19;
  v21 = (_BYTE *)(a1
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
  swift_beginAccess();
  LOBYTE(v21) = *v21;
  v22 = v33;
  swift_beginAccess();
  *v22 = (_BYTE)v21;
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
  swift_beginAccess();
  v24 = *v23;
  v25 = v34;
  swift_beginAccess();
  *v25 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
  swift_beginAccess();
  v27 = *v26;
  swift_bridgeObjectRetain();
  swift_release();
  v28 = v35;
  swift_beginAccess();
  *v28 = v27;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21FB7C1C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBCycleTracking.Event.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB7C260);
}

uint64_t sub_21FB7C260()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          sub_21FB9E278();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBCycleTracking.SexualActivity(0);
          sub_21FA2A08C(&qword_255544E08, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          sub_21FB9E1F0();
LABEL_5:
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE00();
          goto LABEL_6;
        case 6:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADAC();
          goto LABEL_6;
        case 7:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE18();
          goto LABEL_6;
        case 8:
          swift_beginAccess();
          sub_21FB9E3CC();
          v4 = v3;
          sub_21FC5ADA0();
LABEL_6:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBCycleTracking.Event.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB7C58C);
}

uint64_t sub_21FB7C58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  float *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[11];
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  sub_21FA2D1A0(0, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v25 - v8;
  v10 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v25[0] = (uint64_t)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 24);
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v29 = a4;
  if (!v14 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1 + 32)
      || (v16 = *(_BYTE *)(a1 + 40),
          v27 = *(_QWORD *)(a1 + 32),
          v28 = v16,
          sub_21FB9E278(),
          result = sub_21FC5AED8(),
          !v4))
    {
      v17 = a1
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
      swift_beginAccess();
      sub_21FA44968(v17, (uint64_t)v9, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_21FA2D1F8((uint64_t)v9, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
      }
      else
      {
        v18 = v25[0];
        sub_21FA2D23C((uint64_t)v9, v25[0], type metadata accessor for PBCycleTracking.SexualActivity);
        sub_21FA2A08C(&qword_255544E08, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
        sub_21FC5AF50();
        result = sub_21FA326EC(v18, type metadata accessor for PBCycleTracking.SexualActivity);
        if (v4)
          return result;
      }
      v19 = a1
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
      swift_beginAccess();
      if (!*(_QWORD *)v19
        || (v20 = *(_BYTE *)(v19 + 8),
            v25[10] = *(_QWORD *)v19,
            v26 = v20,
            sub_21FB9E1F0(),
            result = sub_21FC5AED8(),
            !v4))
      {
        v21 = (float *)(a1
                      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
        swift_beginAccess();
        if (*v21 == 0.0 || (result = sub_21FC5AEFC(), !v4))
        {
          v22 = (_BYTE *)(a1
                        + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
          swift_beginAccess();
          if (*v22 != 1 || (result = sub_21FC5AECC(), !v4))
          {
            v23 = a1
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms;
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)v23 + 16)
              || (swift_bridgeObjectRetain(), sub_21FC5AF14(), result = swift_bridgeObjectRelease(), !v4))
            {
              v24 = a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms;
              result = swift_beginAccess();
              if (*(_QWORD *)(*(_QWORD *)v24 + 16))
              {
                sub_21FB9E3CC();
                swift_bridgeObjectRetain();
                sub_21FC5AEB4();
                return swift_bridgeObjectRelease();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static PBCycleTracking.Event.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCycleTracking.Event, sub_21FB7C9F8) & 1;
}

uint64_t sub_21FB7C9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  float *v35;
  float v36;
  float *v37;
  unsigned __int8 *v38;
  int v39;
  unsigned __int8 *v40;
  _QWORD **v41;
  _QWORD *v42;
  _QWORD **v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v52 = (unsigned __int8 *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A738, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v50 - v8;
  sub_21FA2D1A0(0, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v50 - v14;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v56 = a1;
  swift_beginAccess();
  if (v17 == *(_QWORD *)(a2 + 16) && v16 == *(_QWORD *)(a2 + 24) || (v18 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v53 = v15;
    v19 = v56;
    swift_beginAccess();
    v20 = *(_QWORD *)(v19 + 32);
    swift_beginAccess();
    v21 = *(_QWORD *)(a2 + 32);
    if (*(_BYTE *)(a2 + 40) == 1)
      __asm { BR              X10 }
    if (v20 == v21)
    {
      v51 = (unsigned __int8 *)v13;
      v22 = v19
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
      swift_beginAccess();
      v23 = (uint64_t)v53;
      sub_21FA44968(v22, (uint64_t)v53, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
      v24 = a2
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
      swift_beginAccess();
      v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
      sub_21FA44968(v23, (uint64_t)v9, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
      sub_21FA44968(v24, v25, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
      v26 = v55;
      v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
      if (v27((uint64_t)v9, 1, v55) == 1)
      {
        v28 = v56;
        swift_retain();
        swift_retain();
        sub_21FA2D1F8(v23, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
        if (v27(v25, 1, v26) == 1)
        {
          sub_21FA2D1F8((uint64_t)v9, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
LABEL_11:
          v29 = (uint64_t *)(v28
                          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
          swift_beginAccess();
          v30 = *v29;
          v31 = (uint64_t *)(a2
                          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
          swift_beginAccess();
          v32 = *v31;
          if (*((_BYTE *)v31 + 8) == 1)
            __asm { BR              X10 }
          if (v30 == v32)
          {
            v35 = (float *)(v28
                          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
            swift_beginAccess();
            v36 = *v35;
            v37 = (float *)(a2
                          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
            swift_beginAccess();
            if (v36 == *v37)
            {
              v38 = (unsigned __int8 *)(v28
                                      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
              swift_beginAccess();
              v39 = *v38;
              v40 = (unsigned __int8 *)(a2
                                      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
              swift_beginAccess();
              if (v39 == *v40)
              {
                v41 = (_QWORD **)(v28
                                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
                swift_beginAccess();
                v42 = *v41;
                v43 = (_QWORD **)(a2
                                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
                swift_beginAccess();
                if ((sub_21FB0E158(v42, *v43) & 1) != 0)
                {
                  v44 = (uint64_t *)(v28
                                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
                  swift_beginAccess();
                  v45 = *v44;
                  v46 = (uint64_t *)(a2
                                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
                  swift_beginAccess();
                  v18 = sub_21FB128D4(v45, *v46);
LABEL_26:
                  swift_release();
                  swift_release();
                  return v18 & 1;
                }
              }
            }
          }
LABEL_25:
          v18 = 0;
          goto LABEL_26;
        }
      }
      else
      {
        v33 = v51;
        sub_21FA44968((uint64_t)v9, (uint64_t)v51, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
        if (v27(v25, 1, v26) != 1)
        {
          v34 = v52;
          sub_21FA2D23C(v25, (uint64_t)v52, type metadata accessor for PBCycleTracking.SexualActivity);
          if (*v33 != *v34 || v33[1] != v34[1])
          {
            swift_retain();
            swift_retain();
            sub_21FA326EC((uint64_t)v34, type metadata accessor for PBCycleTracking.SexualActivity);
            sub_21FA2D1F8((uint64_t)v53, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
            sub_21FA326EC((uint64_t)v33, type metadata accessor for PBCycleTracking.SexualActivity);
            sub_21FA2D1F8((uint64_t)v9, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
            goto LABEL_25;
          }
          sub_21FC5AD1C();
          sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v47 = v56;
          swift_retain();
          swift_retain();
          v48 = sub_21FC5B5D4();
          sub_21FA326EC((uint64_t)v34, type metadata accessor for PBCycleTracking.SexualActivity);
          sub_21FA2D1F8((uint64_t)v53, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
          sub_21FA326EC((uint64_t)v33, type metadata accessor for PBCycleTracking.SexualActivity);
          v28 = v47;
          sub_21FA2D1F8((uint64_t)v9, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
          if ((v48 & 1) == 0)
            goto LABEL_25;
          goto LABEL_11;
        }
        swift_retain();
        swift_retain();
        sub_21FA2D1F8((uint64_t)v53, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
        sub_21FA326EC((uint64_t)v33, type metadata accessor for PBCycleTracking.SexualActivity);
      }
      sub_21FA48E3C((uint64_t)v9, &qword_25554A738, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity);
      goto LABEL_25;
    }
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t PBCycleTracking.Event.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCycleTracking.Event, &qword_2555447E0, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
}

uint64_t sub_21FB7D164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DA68, &qword_255543E88, a2);
}

uint64_t sub_21FB7D180(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DA58, &qword_255543E60);
}

uint64_t sub_21FB7D1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.Event.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB7D1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.Event.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB7D1C8()
{
  sub_21FA2A08C(&qword_25554A580, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7D218@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA60, (uint64_t)qword_255543E70, a1);
}

uint64_t sub_21FB7D234()
{
  sub_21FA2A08C(&qword_2555447E8, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7D274()
{
  sub_21FA2A08C(&qword_2555447E8, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB7D2C4(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCycleTracking.Event, sub_21FB7C9F8) & 1;
}

uint64_t sub_21FB7D2EC()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543E90 = 0xD000000000000028;
  *(_QWORD *)algn_255543E98 = 0x800000021FC78880;
  return result;
}

uint64_t static PBCycleTracking.Cycle.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DA70, &qword_255543E90);
}

uint64_t sub_21FB7D370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543EA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543EA0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "start";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "end";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "events";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "cycleLength";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 5;
  *(_QWORD *)v17 = "periodLength";
  *(_QWORD *)(v17 + 8) = 12;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBCycleTracking.Cycle._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA78, (uint64_t)qword_255543EA0, a1);
}

uint64_t PBCycleTracking.Cycle.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 3:
          type metadata accessor for PBCycleTracking.Event(0);
          sub_21FA2A08C(&qword_2555447E8, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 4:
        case 5:
          v4 = v3;
          sub_21FC5AE0C();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBCycleTracking.Cycle.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_21FC5AF2C(), !v1))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16)
        || (type metadata accessor for PBCycleTracking.Event(0),
            sub_21FA2A08C(&qword_2555447E8, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event), result = sub_21FC5AF44(), !v1))
      {
        if (!*(_DWORD *)(v0 + 40) || (result = sub_21FC5AF08(), !v1))
        {
          if (!*(_DWORD *)(v0 + 44) || (result = sub_21FC5AF08(), !v1))
          {
            type metadata accessor for PBCycleTracking.Cycle(0);
            return sub_21FC5AD04();
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBCycleTracking.Cycle.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBCycleTracking.Cycle, &qword_2555447F0, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
}

uint64_t sub_21FB7D894@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0;
  a1[1] = 0xE000000000000000;
  v1 = MEMORY[0x24BEE4AF8];
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = v1;
  a1[5] = 0;
  return sub_21FC5AD10();
}

uint64_t sub_21FB7D8C8(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DA70, &qword_255543E90);
}

uint64_t sub_21FB7D8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FB7D928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_21FB7D968())()
{
  return nullsub_1;
}

uint64_t sub_21FB7D97C()
{
  return PBCycleTracking.Cycle.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB7D990()
{
  return PBCycleTracking.Cycle.traverse<A>(visitor:)();
}

uint64_t sub_21FB7D9A4()
{
  sub_21FA2A08C(&qword_25554A578, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7D9F4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA78, (uint64_t)qword_255543EA0, a1);
}

uint64_t sub_21FB7DA10()
{
  sub_21FA2A08C(&qword_255544E30, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7DA50()
{
  sub_21FA2A08C(&qword_255544E30, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
  return sub_21FC5AEA8();
}

unint64_t static PBECGs.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_21FB7DAC0(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255543EB8, (uint64_t)"ecgs", 4, MEMORY[0x24BE5C318]);
}

uint64_t static PBECGs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA80, (uint64_t)qword_255543EB8, a1);
}

uint64_t PBECGs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBECGMeasurement, &qword_25553EB40, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
}

uint64_t PBECGs.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBECGMeasurement, &qword_25553EB40, (uint64_t)&protocol conformance descriptor for PBECGMeasurement, (void (*)(_QWORD))type metadata accessor for PBECGs);
}

uint64_t PBECGs.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBECGs, &qword_2555447F8, (uint64_t)&protocol conformance descriptor for PBECGs);
}

unint64_t sub_21FB7DB78()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_21FB7DB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBECGs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB7DBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBECGs.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB7DBBC()
{
  sub_21FA2A08C(&qword_25554A570, type metadata accessor for PBECGs, (uint64_t)&protocol conformance descriptor for PBECGs);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7DC0C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA80, (uint64_t)qword_255543EB8, a1);
}

uint64_t sub_21FB7DC28()
{
  sub_21FA2A08C(&qword_25553EB50, type metadata accessor for PBECGs, (uint64_t)&protocol conformance descriptor for PBECGs);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7DC68()
{
  sub_21FA2A08C(&qword_25553EB50, type metadata accessor for PBECGs, (uint64_t)&protocol conformance descriptor for PBECGs);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB7DCB8(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0DD18, type metadata accessor for PBECGs) & 1;
}

unint64_t static PBECGMeta.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_21FB7DCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543ED0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543ED0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_21FC66520;
  v6 = v26 + v5;
  v7 = v26 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v26 + v5) = 1;
  *(_QWORD *)v7 = "time";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "sampleRate";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "device";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "classification";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "lead";
  *((_QWORD *)v17 + 1) = 4;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "unit";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "symptoms";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "averageHeartRate";
  *((_QWORD *)v23 + 1) = 16;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "hk_classification";
  *(_QWORD *)(v24 + 8) = 17;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBECGMeta._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA88, (uint64_t)qword_255543ED0, a1);
}

uint64_t PBECGMeta.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_21FC5AE3C();
          break;
        case 2:
        case 8:
          sub_21FC5AE00();
          break;
        case 7:
          sub_21FC5AE18();
          break;
        case 9:
          sub_21FB8F004();
          sub_21FC5ADC4();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBECGMeta.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (result = sub_21FC5AEFC(), !v1))
    {
      v5 = *(_QWORD *)(v0 + 32);
      v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v6 = *(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
      if (!v6 || (result = sub_21FC5AF2C(), !v1))
      {
        v7 = *(_QWORD *)(v0 + 48);
        v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0)
          v8 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
        if (!v8 || (result = sub_21FC5AF2C(), !v1))
        {
          v9 = *(_QWORD *)(v0 + 64);
          v10 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000) == 0)
            v10 = *(_QWORD *)(v0 + 56) & 0xFFFFFFFFFFFFLL;
          if (!v10 || (result = sub_21FC5AF2C(), !v1))
          {
            v11 = *(_QWORD *)(v0 + 80);
            v12 = HIBYTE(v11) & 0xF;
            if ((v11 & 0x2000000000000000) == 0)
              v12 = *(_QWORD *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
            if (!v12 || (result = sub_21FC5AF2C(), !v1))
            {
              if (!*(_QWORD *)(*(_QWORD *)(v0 + 88) + 16) || (result = sub_21FC5AF14(), !v1))
              {
                if (*(float *)(v0 + 96) == 0.0 || (result = sub_21FC5AEFC(), !v1))
                {
                  if (!*(_QWORD *)(v0 + 104) || (sub_21FB8F004(), result = sub_21FC5AED8(), !v1))
                  {
                    type metadata accessor for PBECGMeta(0);
                    return sub_21FC5AD04();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBECGMeta.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBECGMeta, &qword_255544808, (uint64_t)&protocol conformance descriptor for PBECGMeta);
}

uint64_t sub_21FB7E3E8@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  *(_QWORD *)(a1 + 88) = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 1;
  return sub_21FC5AD10();
}

unint64_t sub_21FB7E440()
{
  return 0xD000000000000022;
}

uint64_t sub_21FB7E45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FB7E49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 52);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_21FB7E4DC()
{
  return PBECGMeta.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB7E4F0()
{
  return PBECGMeta.traverse<A>(visitor:)();
}

uint64_t sub_21FB7E504()
{
  sub_21FA2A08C(&qword_25554A568, type metadata accessor for PBECGMeta, (uint64_t)&protocol conformance descriptor for PBECGMeta);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7E554@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA88, (uint64_t)qword_255543ED0, a1);
}

uint64_t sub_21FB7E570()
{
  sub_21FA2A08C(&qword_25553EAD8, type metadata accessor for PBECGMeta, (uint64_t)&protocol conformance descriptor for PBECGMeta);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7E5B0()
{
  sub_21FA2A08C(&qword_25553EAD8, type metadata accessor for PBECGMeta, (uint64_t)&protocol conformance descriptor for PBECGMeta);
  return sub_21FC5AEA8();
}

unint64_t static PBECGMeasurement.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB7E620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v28;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543EE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543EE8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_21FC5F730;
  v6 = v28 + v5;
  v7 = v28 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v28 + v5) = 1;
  *(_QWORD *)v7 = "time";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "sampleRate";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "device";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "classification";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "lead";
  *((_QWORD *)v17 + 1) = 4;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "unit";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "symptoms";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "values";
  *((_QWORD *)v23 + 1) = 6;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "averageHeartRate";
  *(_QWORD *)(v24 + 8) = 16;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "hk_classification";
  *((_QWORD *)v26 + 1) = 17;
  v26[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBECGMeasurement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA90, (uint64_t)qword_255543EE8, a1);
}

uint64_t PBECGMeasurement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_21FC5AE3C();
          break;
        case 2:
        case 9:
          sub_21FC5AE00();
          break;
        case 7:
          sub_21FC5AE18();
          break;
        case 8:
          sub_21FC5ADDC();
          break;
        case 10:
          sub_21FB8F004();
          sub_21FC5ADC4();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBECGMeasurement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (result = sub_21FC5AEFC(), !v1))
    {
      v5 = *(_QWORD *)(v0 + 32);
      v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v6 = *(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
      if (!v6 || (result = sub_21FC5AF2C(), !v1))
      {
        v7 = *(_QWORD *)(v0 + 48);
        v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0)
          v8 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
        if (!v8 || (result = sub_21FC5AF2C(), !v1))
        {
          v9 = *(_QWORD *)(v0 + 64);
          v10 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000) == 0)
            v10 = *(_QWORD *)(v0 + 56) & 0xFFFFFFFFFFFFLL;
          if (!v10 || (result = sub_21FC5AF2C(), !v1))
          {
            v11 = *(_QWORD *)(v0 + 80);
            v12 = HIBYTE(v11) & 0xF;
            if ((v11 & 0x2000000000000000) == 0)
              v12 = *(_QWORD *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
            if (!v12 || (result = sub_21FC5AF2C(), !v1))
            {
              if (!*(_QWORD *)(*(_QWORD *)(v0 + 88) + 16) || (result = sub_21FC5AF14(), !v1))
              {
                if (!*(_QWORD *)(*(_QWORD *)(v0 + 96) + 16) || (result = sub_21FC5AEC0(), !v1))
                {
                  if (*(float *)(v0 + 104) == 0.0 || (result = sub_21FC5AEFC(), !v1))
                  {
                    if (!*(_QWORD *)(v0 + 112) || (sub_21FB8F004(), result = sub_21FC5AED8(), !v1))
                    {
                      type metadata accessor for PBECGMeasurement(0);
                      return sub_21FC5AD04();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBECGMeasurement.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBECGMeasurement, &qword_255544810, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
}

uint64_t sub_21FB7ED80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 96) = v1;
  *(_DWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 1;
  return sub_21FC5AD10();
}

unint64_t sub_21FB7EDD8()
{
  return 0xD000000000000029;
}

uint64_t sub_21FB7EDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 56);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FB7EE34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 56);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_21FB7EE74())()
{
  return nullsub_1;
}

uint64_t sub_21FB7EE88()
{
  return PBECGMeasurement.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB7EE9C()
{
  return PBECGMeasurement.traverse<A>(visitor:)();
}

uint64_t sub_21FB7EEB0()
{
  sub_21FA2A08C(&qword_25554A560, type metadata accessor for PBECGMeasurement, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7EF00@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA90, (uint64_t)qword_255543EE8, a1);
}

uint64_t sub_21FB7EF1C()
{
  sub_21FA2A08C(&qword_25553EB40, type metadata accessor for PBECGMeasurement, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7EF5C()
{
  sub_21FA2A08C(&qword_25553EB40, type metadata accessor for PBECGMeasurement, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
  return sub_21FC5AEA8();
}

unint64_t static PBActivitySummarySeries.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_21FB7EFCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543F00);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543F00);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "date_range";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "activitySummaries";
  *((_QWORD *)v12 + 1) = 17;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBActivitySummarySeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DA98, (uint64_t)qword_255543F00, a1);
}

uint64_t sub_21FB7F150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for PBActivitySummarySeries._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v2 = type metadata accessor for PBDateRange(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries) = MEMORY[0x24BEE4AF8];
  qword_255543F18 = v0;
  return result;
}

uint64_t type metadata accessor for PBPatientMeta(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546E40);
}

uint64_t sub_21FB7F1E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - v4;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries) = MEMORY[0x24BEE4AF8];
  v9 = a1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v9, (uint64_t)v5, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  v10 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  v11 = *v10;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v8 = v11;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FB7F370()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBActivitySummarySeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBActivitySummarySeries, (void (*)(_QWORD))type metadata accessor for PBActivitySummarySeries._StorageClass, sub_21FB7F1E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB7F3F4);
}

uint64_t sub_21FB7F3F4()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBDateRange(0);
        sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
        v4 = v3;
        sub_21FC5AE60();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
    sub_21FA2A08C(&qword_255544E88, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
    v4 = v3;
    sub_21FC5AE54();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBActivitySummarySeries.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBActivitySummarySeries, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB7F594);
}

uint64_t sub_21FB7F594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[10];

  v16[9] = a4;
  v16[0] = a2;
  v16[1] = a3;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - v7;
  v9 = type metadata accessor for PBDateRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v13, (uint64_t)v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21FA2D1F8((uint64_t)v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBDateRange);
    sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v12, type metadata accessor for PBDateRange);
    if (v4)
      return result;
  }
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v15 + 16))
  {
    type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
    sub_21FA2A08C(&qword_255544E88, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
    swift_bridgeObjectRetain();
    sub_21FC5AF44();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21FB7F7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v32 = a2;
  v3 = type metadata accessor for PBDateRange(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v31 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - v13;
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v16 = v32;
  v17 = v32
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21FA44968((uint64_t)v14, (uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA44968(v17, v18, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    v20 = v31;
    sub_21FA44968((uint64_t)v9, (uint64_t)v31, &qword_25553E0F8, type metadata accessor for PBDateRange);
    if (v19(v18, 1, v3) != 1)
    {
      v21 = v30;
      sub_21FA2D23C(v18, v30, type metadata accessor for PBDateRange);
      swift_retain();
      swift_retain();
      v22 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v20, v21);
      sub_21FA326EC(v21, type metadata accessor for PBDateRange);
      sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
      sub_21FA326EC((uint64_t)v20, type metadata accessor for PBDateRange);
      sub_21FA2D1F8((uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v27 = 0;
      goto LABEL_10;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
    sub_21FA326EC((uint64_t)v20, type metadata accessor for PBDateRange);
LABEL_6:
    sub_21FA48E3C((uint64_t)v9, &qword_25553EAB0, &qword_25553E0F8, type metadata accessor for PBDateRange);
    goto LABEL_9;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v14, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if (v19(v18, 1, v3) != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v9, &qword_25553E0F8, type metadata accessor for PBDateRange);
LABEL_8:
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  v24 = *v23;
  v25 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  v26 = *v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = sub_21FB12A08(v24, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_release();
  swift_release();
  return v27 & 1;
}

uint64_t PBActivitySummarySeries.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBActivitySummarySeries, &qword_255544818, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
}

uint64_t sub_21FB7FBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DAA0, &qword_255543F18, a2);
}

unint64_t sub_21FB7FBEC()
{
  return 0xD000000000000030;
}

uint64_t sub_21FB7FC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBActivitySummarySeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB7FC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBActivitySummarySeries.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB7FC30()
{
  sub_21FA2A08C(&qword_25554A558, type metadata accessor for PBActivitySummarySeries, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
  return sub_21FC5AD70();
}

uint64_t sub_21FB7FC80@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DA98, (uint64_t)qword_255543F00, a1);
}

uint64_t sub_21FB7FC9C()
{
  sub_21FA2A08C(&qword_25553EB38, type metadata accessor for PBActivitySummarySeries, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB7FCDC()
{
  sub_21FA2A08C(&qword_25553EB38, type metadata accessor for PBActivitySummarySeries, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB7FD2C(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBActivitySummarySeries, sub_21FB7F7D0) & 1;
}

uint64_t sub_21FB7FD54()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543F20 = 0xD000000000000030;
  *(_QWORD *)algn_255543F28 = 0x800000021FC78930;
  return result;
}

uint64_t static PBActivitySummarySeries.ActivitySummary.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DAA8, &qword_255543F20);
}

uint64_t sub_21FB7FDE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543F30);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543F30);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "activeCalories";
  *(_QWORD *)(v8 + 8) = 14;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "activeCalorieGoal";
  *(_QWORD *)(v12 + 8) = 17;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "moveMinutes";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "moveMinuteGoal";
  *((_QWORD *)v16 + 1) = 14;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "standHours";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "standHoursGoal";
  *((_QWORD *)v20 + 1) = 14;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "recorded_time";
  *((_QWORD *)v22 + 1) = 13;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBActivitySummarySeries.ActivitySummary._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DAB0, (uint64_t)qword_255543F30, a1);
}

uint64_t PBActivitySummarySeries.ActivitySummary.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_21FC5AE0C();
          break;
        case 7:
          sub_21FC5AE3C();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBActivitySummarySeries.ActivitySummary.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*(_DWORD *)v0 || (result = sub_21FC5AF08(), !v1))
  {
    if (!*(_DWORD *)(v0 + 4) || (result = sub_21FC5AF08(), !v1))
    {
      if (!*(_DWORD *)(v0 + 8) || (result = sub_21FC5AF08(), !v1))
      {
        if (!*(_DWORD *)(v0 + 12) || (result = sub_21FC5AF08(), !v1))
        {
          if (!*(_DWORD *)(v0 + 16) || (result = sub_21FC5AF08(), !v1))
          {
            if (!*(_DWORD *)(v0 + 20) || (result = sub_21FC5AF08(), !v1))
            {
              v3 = *(_QWORD *)(v0 + 32);
              v4 = HIBYTE(v3) & 0xF;
              if ((v3 & 0x2000000000000000) == 0)
                v4 = *(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
              if (!v4 || (result = sub_21FC5AF2C(), !v1))
              {
                type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
                return sub_21FC5AD04();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBActivitySummarySeries.ActivitySummary.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBActivitySummarySeries.ActivitySummary, &qword_255544820, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_21FB80328@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  return sub_21FC5AD10();
}

uint64_t sub_21FB80354(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DAA8, &qword_255543F20);
}

uint64_t (*sub_21FB8037C())()
{
  return nullsub_1;
}

uint64_t sub_21FB80390()
{
  return PBActivitySummarySeries.ActivitySummary.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB803A4()
{
  return PBActivitySummarySeries.ActivitySummary.traverse<A>(visitor:)();
}

uint64_t sub_21FB803B8()
{
  sub_21FA2A08C(&qword_25554A550, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
  return sub_21FC5AD70();
}

uint64_t sub_21FB80408@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DAB0, (uint64_t)qword_255543F30, a1);
}

uint64_t sub_21FB80424()
{
  sub_21FA2A08C(&qword_255544E88, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB80464()
{
  sub_21FA2A08C(&qword_255544E88, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
  return sub_21FC5AEA8();
}

unint64_t static PBPatientMeta.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_21FB804D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543F48);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543F48);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "hasWatch";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "chr_meta";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "share_timezone";
  *((_QWORD *)v14 + 1) = 14;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "sex";
  *((_QWORD *)v16 + 1) = 3;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "heartRateMeds";
  *((_QWORD *)v18 + 1) = 13;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "name";
  *((_QWORD *)v20 + 1) = 4;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "dob";
  *((_QWORD *)v22 + 1) = 3;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBPatientMeta._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DAB8, (uint64_t)qword_255543F48, a1);
}

uint64_t sub_21FB80774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;

  type metadata accessor for PBPatientMeta._StorageClass(0);
  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  v2 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  v4 = type metadata accessor for PBPatientMeta.HumanName(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  qword_255543F60 = v0;
  return result;
}

uint64_t type metadata accessor for PBSleepSummary(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555454F0);
}

uint64_t type metadata accessor for PBSleepSeries(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555453C0);
}

uint64_t type metadata accessor for PBHistogramSeries(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545290);
}

uint64_t type metadata accessor for PBMedicationTrackings(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555471B8);
}

uint64_t type metadata accessor for PBMedicationTrackingDoseEvents(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555472F8);
}

uint64_t type metadata accessor for PBMedicationTrackingSchedules(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555474B0);
}

uint64_t type metadata accessor for PBActiveMedications(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547098);
}

uint64_t sub_21FB808CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (uint64_t)&v29 - v6;
  sub_21FA2D1A0(0, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, v4);
  MEMORY[0x24BDAC7A8](v7);
  v29 = (uint64_t)&v29 - v8;
  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0xE000000000000000;
  v9 = v2
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  v10 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  v30 = v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  v12 = type metadata accessor for PBPatientMeta.HumanName(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)(v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  swift_beginAccess();
  v14 = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  *(_BYTE *)(v2 + 16) = v14;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = v17;
  *(_QWORD *)(v2 + 40) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v19;
  *(_QWORD *)(v2 + 56) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  v21 = v29;
  sub_21FA44968(v20, v29, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  swift_beginAccess();
  sub_21FA2D2D8(v21, v9, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  swift_endAccess();
  v22 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  v23 = v31;
  sub_21FA44968(v22, v31, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  v24 = v30;
  swift_beginAccess();
  sub_21FA2D2D8(v23, v24, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  swift_endAccess();
  v25 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  swift_beginAccess();
  v27 = *v25;
  v26 = v25[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v13 = v27;
  v13[1] = v26;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21FB80CA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  sub_21FA2D1F8(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBPatientMeta.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBPatientMeta, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB80D68);
}

uint64_t sub_21FB80D68()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADAC();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBPatientMeta.CHRMeta(0);
          sub_21FA2A08C(&qword_255544EB0, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
          v4 = v3;
          sub_21FC5AE54();
          goto LABEL_5;
        case 3:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBPatientMeta.HeartRateMeds(0);
          sub_21FA2A08C(&qword_255544EC8, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBPatientMeta.HumanName(0);
          sub_21FA2A08C(&qword_255544EE0, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBPatientMeta.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPatientMeta, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB81054);
}

uint64_t sub_21FB81054(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (uint64_t)&v27 - v5;
  v32 = type metadata accessor for PBPatientMeta.HumanName(0);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v29 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, v3);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - v8;
  v10 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 16) != 1 || (result = sub_21FC5AECC(), !v1))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16)
      || (type metadata accessor for PBPatientMeta.CHRMeta(0),
          v28 = a1,
          sub_21FA2A08C(&qword_255544EB0, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta), swift_bridgeObjectRetain(), a1 = v28, sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v1))
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(a1 + 40);
      v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0)
        v15 = *(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
      if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
      {
        swift_beginAccess();
        v16 = *(_QWORD *)(a1 + 56);
        v17 = HIBYTE(v16) & 0xF;
        if ((v16 & 0x2000000000000000) == 0)
          v17 = *(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
        if (!v17 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
        {
          v18 = a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
          swift_beginAccess();
          sub_21FA44968(v18, (uint64_t)v9, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v9, 1, v10) == 1)
          {
            sub_21FA2D1F8((uint64_t)v9, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
          }
          else
          {
            sub_21FA2D23C((uint64_t)v9, (uint64_t)v12, type metadata accessor for PBPatientMeta.HeartRateMeds);
            sub_21FA2A08C(&qword_255544EC8, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
            sub_21FC5AF50();
            result = sub_21FA326EC((uint64_t)v12, type metadata accessor for PBPatientMeta.HeartRateMeds);
            if (v1)
              return result;
          }
          v19 = a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
          swift_beginAccess();
          v20 = v31;
          sub_21FA44968(v19, v31, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v20, 1, v32) == 1)
          {
            sub_21FA2D1F8(v20, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
          }
          else
          {
            v21 = v20;
            v22 = v29;
            sub_21FA2D23C(v21, v29, type metadata accessor for PBPatientMeta.HumanName);
            sub_21FA2A08C(&qword_255544EE0, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
            sub_21FC5AF50();
            result = sub_21FA326EC(v22, type metadata accessor for PBPatientMeta.HumanName);
            if (v1)
              return result;
          }
          v23 = (uint64_t *)(a1
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
          result = swift_beginAccess();
          v25 = *v23;
          v24 = v23[1];
          v26 = HIBYTE(v24) & 0xF;
          if ((v24 & 0x2000000000000000) == 0)
            v26 = v25 & 0xFFFFFFFFFFFFLL;
          if (v26)
          {
            swift_bridgeObjectRetain();
            sub_21FC5AF2C();
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_21FB815C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unsigned __int8 *v47;
  int v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t *v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  unint64_t *v58;
  _QWORD *v59;
  _QWORD *v61;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char v67;
  uint64_t v68;
  unsigned __int8 *v69;
  char *v70;
  _QWORD *v71;
  _QWORD *v72;
  unsigned __int8 *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v77 = type metadata accessor for PBPatientMeta.HumanName(0);
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v71 = (uint64_t *)((char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_25554A818, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
  v74 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v68 - v6;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v72 = (uint64_t *)((char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v76 = (uint64_t)&v68 - v12;
  v13 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v73 = (unsigned __int8 *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A820, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
  v17 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v78 = (uint64_t)&v68 - v18;
  sub_21FA2D1A0(0, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, v8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v68 - v23;
  swift_beginAccess();
  v25 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  if (v25 == *(unsigned __int8 *)(a2 + 16))
  {
    v69 = (unsigned __int8 *)v22;
    v70 = v7;
    swift_beginAccess();
    v27 = *(_QWORD *)(a1 + 24);
    swift_beginAccess();
    v28 = *(_QWORD *)(a2 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_21FB12C4C(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
      goto LABEL_27;
    swift_beginAccess();
    v31 = *(_QWORD *)(a1 + 32);
    v30 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    if (v31 != *(_QWORD *)(a2 + 32) || v30 != *(_QWORD *)(a2 + 40))
    {
      v26 = 0;
      if ((sub_21FC5BDF0() & 1) == 0)
        goto LABEL_28;
    }
    swift_beginAccess();
    v32 = *(_QWORD *)(a1 + 48);
    v33 = *(_QWORD *)(a1 + 56);
    swift_beginAccess();
    if (v32 != *(_QWORD *)(a2 + 48) || v33 != *(_QWORD *)(a2 + 56))
    {
      v26 = 0;
      if ((sub_21FC5BDF0() & 1) == 0)
        goto LABEL_28;
    }
    v34 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
    swift_beginAccess();
    sub_21FA44968(v34, (uint64_t)v24, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
    v35 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
    swift_beginAccess();
    v36 = v78;
    v37 = v78 + *(int *)(v17 + 48);
    sub_21FA44968((uint64_t)v24, v78, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
    sub_21FA44968(v35, v37, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (v38(v36, 1, v13) == 1)
    {
      sub_21FA2D1F8((uint64_t)v24, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
      v39 = v38(v37, 1, v13);
      v40 = (uint64_t)v70;
      if (v39 == 1)
      {
        sub_21FA2D1F8(v36, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
        goto LABEL_13;
      }
    }
    else
    {
      v47 = v69;
      sub_21FA44968(v36, (uint64_t)v69, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
      v48 = v38(v37, 1, v13);
      v49 = (uint64_t)v70;
      if (v48 != 1)
      {
        v54 = v37;
        v55 = v73;
        sub_21FA2D23C(v54, (uint64_t)v73, type metadata accessor for PBPatientMeta.HeartRateMeds);
        if (*v47 != *v55 || v47[1] != v55[1])
        {
          v56 = type metadata accessor for PBPatientMeta.HeartRateMeds;
          sub_21FA326EC((uint64_t)v55, type metadata accessor for PBPatientMeta.HeartRateMeds);
          sub_21FA2D1F8((uint64_t)v24, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
          sub_21FA326EC((uint64_t)v47, type metadata accessor for PBPatientMeta.HeartRateMeds);
          v57 = v36;
          v58 = &qword_255544648;
          goto LABEL_22;
        }
        sub_21FC5AD1C();
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v67 = sub_21FC5B5D4();
        sub_21FA326EC((uint64_t)v55, type metadata accessor for PBPatientMeta.HeartRateMeds);
        sub_21FA2D1F8((uint64_t)v24, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
        sub_21FA326EC((uint64_t)v47, type metadata accessor for PBPatientMeta.HeartRateMeds);
        sub_21FA2D1F8(v78, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
        v40 = v49;
        if ((v67 & 1) == 0)
          goto LABEL_27;
LABEL_13:
        v41 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
        swift_beginAccess();
        v42 = v76;
        sub_21FA44968(v41, v76, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
        v43 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
        swift_beginAccess();
        v44 = v40 + *(int *)(v74 + 48);
        sub_21FA44968(v42, v40, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
        sub_21FA44968(v43, v44, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
        v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
        v46 = v77;
        if (v45(v40, 1, v77) == 1)
        {
          sub_21FA2D1F8(v42, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
          if (v45(v44, 1, v46) == 1)
          {
            sub_21FA2D1F8(v40, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
LABEL_37:
            v63 = (uint64_t *)(a1
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
            swift_beginAccess();
            v64 = *v63;
            v65 = v63[1];
            v66 = (_QWORD *)(a2
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
            swift_beginAccess();
            if (v64 == *v66 && v65 == v66[1])
              v26 = 1;
            else
              v26 = sub_21FC5BDF0();
            goto LABEL_28;
          }
          goto LABEL_25;
        }
        v59 = v72;
        sub_21FA44968(v40, (uint64_t)v72, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
        if (v45(v44, 1, v46) == 1)
        {
          sub_21FA2D1F8(v42, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
          sub_21FA326EC((uint64_t)v59, type metadata accessor for PBPatientMeta.HumanName);
LABEL_25:
          v50 = &qword_25554A818;
          v51 = &qword_25553FF70;
          v52 = type metadata accessor for PBPatientMeta.HumanName;
          v53 = v40;
          goto LABEL_26;
        }
        v61 = v71;
        sub_21FA2D23C(v44, (uint64_t)v71, type metadata accessor for PBPatientMeta.HumanName);
        if ((*v59 == *v61 && v59[1] == v61[1] || (sub_21FC5BDF0() & 1) != 0)
          && (v59[2] == v61[2] && v59[3] == v61[3] || (sub_21FC5BDF0() & 1) != 0))
        {
          sub_21FC5AD1C();
          sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v62 = sub_21FC5B5D4();
          sub_21FA326EC((uint64_t)v61, type metadata accessor for PBPatientMeta.HumanName);
          sub_21FA2D1F8(v42, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
          sub_21FA326EC((uint64_t)v59, type metadata accessor for PBPatientMeta.HumanName);
          sub_21FA2D1F8(v40, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
          if ((v62 & 1) != 0)
            goto LABEL_37;
LABEL_27:
          v26 = 0;
LABEL_28:
          swift_release();
          swift_release();
          return v26 & 1;
        }
        v56 = type metadata accessor for PBPatientMeta.HumanName;
        sub_21FA326EC((uint64_t)v61, type metadata accessor for PBPatientMeta.HumanName);
        sub_21FA2D1F8(v42, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName);
        sub_21FA326EC((uint64_t)v59, type metadata accessor for PBPatientMeta.HumanName);
        v57 = v40;
        v58 = &qword_25553FF70;
LABEL_22:
        sub_21FA2D1F8(v57, v58, v56);
        goto LABEL_27;
      }
      sub_21FA2D1F8((uint64_t)v24, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds);
      sub_21FA326EC((uint64_t)v47, type metadata accessor for PBPatientMeta.HeartRateMeds);
    }
    v50 = &qword_25554A820;
    v51 = &qword_255544648;
    v52 = type metadata accessor for PBPatientMeta.HeartRateMeds;
    v53 = v36;
LABEL_26:
    sub_21FA48E3C(v53, v50, v51, v52);
    goto LABEL_27;
  }
  v26 = 0;
  return v26 & 1;
}

uint64_t PBPatientMeta.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPatientMeta, &qword_255544828, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
}

uint64_t sub_21FB81F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DAC0, &qword_255543F60, a2);
}

unint64_t sub_21FB81FA0()
{
  return 0xD000000000000026;
}

uint64_t sub_21FB81FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB81FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB81FE4()
{
  sub_21FA2A08C(&qword_25554A548, type metadata accessor for PBPatientMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
  return sub_21FC5AD70();
}

uint64_t sub_21FB82034@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DAB8, (uint64_t)qword_255543F48, a1);
}

uint64_t sub_21FB82050()
{
  sub_21FA2A08C(&qword_25553EB30, type metadata accessor for PBPatientMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB82090()
{
  sub_21FA2A08C(&qword_25553EB30, type metadata accessor for PBPatientMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB820E0(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBPatientMeta, sub_21FB815C4) & 1;
}

uint64_t sub_21FB82108()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543F68 = 0xD000000000000026;
  unk_255543F70 = 0x800000021FC78970;
  return result;
}

uint64_t static PBPatientMeta.CHRMeta.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DAC8, &qword_255543F68);
}

uint64_t sub_21FB82190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543F78);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543F78);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "name";
  *(_QWORD *)(v8 + 8) = 4;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "last_sync_time";
  *((_QWORD *)v12 + 1) = 14;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "gateway_id";
  *(_QWORD *)(v13 + 8) = 10;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBPatientMeta.CHRMeta._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DAD0, (uint64_t)qword_255543F78, a1);
}

uint64_t PBPatientMeta.CHRMeta.decodeMessage<A>(decoder:)()
{
  return sub_21FB82370();
}

uint64_t sub_21FB82370()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2 || result == 1)
        sub_21FC5AE3C();
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBPatientMeta.CHRMeta.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB82430(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_21FB82430(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v7 = v4[1];
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = *v4 & 0xFFFFFFFFFFFFLL;
  if (!v8 || (result = sub_21FC5AF2C(), !v5))
  {
    v10 = v4[3];
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v4[2] & 0xFFFFFFFFFFFFLL;
    if (!v11 || (result = sub_21FC5AF2C(), !v5))
    {
      v12 = v4[5];
      v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v13 = v4[4] & 0xFFFFFFFFFFFFLL;
      if (!v13 || (result = sub_21FC5AF2C(), !v5))
      {
        a4(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t static PBPatientMeta.CHRMeta.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB8D4A0(a1, a2, type metadata accessor for PBPatientMeta.CHRMeta) & 1;
}

uint64_t PBPatientMeta.CHRMeta.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPatientMeta.CHRMeta, &qword_255544830, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
}

uint64_t sub_21FB82588(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DAC8, &qword_255543F68);
}

uint64_t sub_21FB825A8()
{
  return PBPatientMeta.CHRMeta.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB825BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.CHRMeta.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB825D0()
{
  sub_21FA2A08C(&qword_25554A540, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
  return sub_21FC5AD70();
}

uint64_t sub_21FB82620@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DAD0, (uint64_t)qword_255543F78, a1);
}

uint64_t sub_21FB8263C()
{
  sub_21FA2A08C(&qword_255544EB0, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB8267C()
{
  sub_21FA2A08C(&qword_255544EB0, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB826CC(_QWORD *a1, char *a2)
{
  return sub_21FB8D4A0(a1, a2, type metadata accessor for PBPatientMeta.CHRMeta) & 1;
}

uint64_t sub_21FB826EC()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543F90 = 0xD000000000000026;
  *(_QWORD *)algn_255543F98 = 0x800000021FC78970;
  return result;
}

uint64_t static PBPatientMeta.HeartRateMeds.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DAD8, &qword_255543F90);
}

uint64_t sub_21FB82780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543FA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543FA0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "calciumChannelBlockers";
  *(_QWORD *)(v8 + 8) = 22;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "betaBlockers";
  *((_QWORD *)v12 + 1) = 12;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBPatientMeta.HeartRateMeds._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DAE0, (uint64_t)qword_255543FA0, a1);
}

uint64_t PBPatientMeta.HeartRateMeds.decodeMessage<A>(decoder:)()
{
  return sub_21FB82910();
}

uint64_t sub_21FB82910()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_21FC5ADAC();
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBPatientMeta.HeartRateMeds.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB829BC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_21FB829BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  if (*v4 != 1 || (result = sub_21FC5AECC(), !v5))
  {
    if (v4[1] != 1 || (result = sub_21FC5AECC(), !v5))
    {
      a4(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t static PBPatientMeta.HeartRateMeds.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21FB8D630(a1, a2, type metadata accessor for PBPatientMeta.HeartRateMeds) & 1;
}

uint64_t PBPatientMeta.HeartRateMeds.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPatientMeta.HeartRateMeds, &qword_255544838, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_21FB82ACC@<X0>(_WORD *a1@<X8>)
{
  *a1 = 0;
  return sub_21FC5AD10();
}

uint64_t sub_21FB82AEC(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DAD8, &qword_255543F90);
}

uint64_t sub_21FB82B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.HeartRateMeds.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB82B20()
{
  sub_21FA2A08C(&qword_25554A538, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
  return sub_21FC5AD70();
}

uint64_t sub_21FB82B70@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DAE0, (uint64_t)qword_255543FA0, a1);
}

uint64_t sub_21FB82B8C()
{
  sub_21FA2A08C(&qword_255544EC8, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB82BCC()
{
  sub_21FA2A08C(&qword_255544EC8, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB82C1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21FB8D630(a1, a2, type metadata accessor for PBPatientMeta.HeartRateMeds) & 1;
}

uint64_t sub_21FB82C3C()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255543FB8 = 0xD000000000000026;
  unk_255543FC0 = 0x800000021FC78970;
  return result;
}

uint64_t static PBPatientMeta.HumanName.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DAE8, &qword_255543FB8);
}

uint64_t sub_21FB82CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543FC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543FC8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "first_name";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "last_name";
  *((_QWORD *)v12 + 1) = 9;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBPatientMeta.HumanName._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DAF0, (uint64_t)qword_255543FC8, a1);
}

uint64_t PBPatientMeta.HumanName.decodeMessage<A>(decoder:)()
{
  return sub_21FB82E58();
}

uint64_t sub_21FB82E58()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_21FC5AE3C();
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBPatientMeta.HumanName.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB6D5CC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t static PBPatientMeta.HumanName.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBPatientMeta.HumanName) & 1;
}

uint64_t PBPatientMeta.HumanName.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPatientMeta.HumanName, &qword_255544840, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
}

uint64_t sub_21FB82F40(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DAE8, &qword_255543FB8);
}

uint64_t sub_21FB82F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.HumanName.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB82F74()
{
  sub_21FA2A08C(&qword_25554A530, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
  return sub_21FC5AD70();
}

uint64_t sub_21FB82FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DAF0, (uint64_t)qword_255543FC8, a1);
}

uint64_t sub_21FB82FE0()
{
  sub_21FA2A08C(&qword_255544EE0, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB83020()
{
  sub_21FA2A08C(&qword_255544EE0, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB83070(_QWORD *a1, char *a2)
{
  return sub_21FB8D338(a1, a2, type metadata accessor for PBPatientMeta.HumanName) & 1;
}

unint64_t static PBActiveMedications.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB830AC(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255543FE0, (uint64_t)"uuids", 5, MEMORY[0x24BE5C318]);
}

uint64_t static PBActiveMedications._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DAF8, (uint64_t)qword_255543FE0, a1);
}

uint64_t PBActiveMedications.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_21FC5AD88();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_21FC5AE18();
  }
  return result;
}

uint64_t PBActiveMedications.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (result = sub_21FC5AF14(), !v1))
  {
    type metadata accessor for PBActiveMedications(0);
    return sub_21FC5AD04();
  }
  return result;
}

uint64_t PBActiveMedications.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBActiveMedications, &qword_255544848, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
}

unint64_t sub_21FB83204()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_21FB83220()
{
  return PBActiveMedications.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB83234()
{
  return PBActiveMedications.traverse<A>(visitor:)();
}

uint64_t sub_21FB83248()
{
  sub_21FA2A08C(&qword_25554A528, type metadata accessor for PBActiveMedications, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
  return sub_21FC5AD70();
}

uint64_t sub_21FB83298@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DAF8, (uint64_t)qword_255543FE0, a1);
}

uint64_t sub_21FB832B4()
{
  sub_21FA2A08C(&qword_25553EAF8, type metadata accessor for PBActiveMedications, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB832F4()
{
  sub_21FA2A08C(&qword_25553EAF8, type metadata accessor for PBActiveMedications, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB83344(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_21FB0E158, type metadata accessor for PBActiveMedications) & 1;
}

unint64_t static PBMedicationTracking.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB83388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255543FF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255543FF8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE10;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "medication_semantic_identifier";
  *(_QWORD *)(v8 + 8) = 30;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "localized_ontology_preferred_name";
  *(_QWORD *)(v12 + 8) = 33;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "localized_ontology_brand_name";
  *((_QWORD *)v14 + 1) = 29;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "localized_ontology_generic_name";
  *((_QWORD *)v16 + 1) = 31;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "specific_rx_norm_code";
  *((_QWORD *)v18 + 1) = 21;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "free_text_medication_form";
  *((_QWORD *)v20 + 1) = 25;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "free_text_quantified_strength";
  *((_QWORD *)v22 + 1) = 29;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "localized_ontology_basic_dose_forms";
  *((_QWORD *)v24 + 1) = 35;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "localized_ontology_logging_unit_singular";
  *(_QWORD *)(v25 + 8) = 40;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "localized_ontology_logging_unit_plural";
  *((_QWORD *)v27 + 1) = 38;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "unlocalized_quantified_unit_strength_preferred_display_string";
  *((_QWORD *)v29 + 1) = 61;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "date_added";
  *((_QWORD *)v31 + 1) = 10;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "last_dosage_event_date";
  *((_QWORD *)v33 + 1) = 22;
  v33[16] = 2;
  v11();
  v34 = (_QWORD *)(v7 + 13 * v4);
  v35 = (char *)v34 + *(int *)(v2 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "generic_rx_norm_code";
  *((_QWORD *)v35 + 1) = 20;
  v35[16] = 2;
  v11();
  v36 = (_QWORD *)(v7 + 14 * v4);
  v37 = (char *)v36 + *(int *)(v2 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "uuid";
  *((_QWORD *)v37 + 1) = 4;
  v37[16] = 2;
  v11();
  v38 = (_QWORD *)(v7 + 15 * v4);
  v39 = (char *)v38 + *(int *)(v2 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "free_text_medication_logging_unit";
  *((_QWORD *)v39 + 1) = 33;
  v39[16] = 2;
  v11();
  v40 = v7 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 16 * v4) = 17;
  *(_QWORD *)v40 = "free_text_medication_name";
  *(_QWORD *)(v40 + 8) = 25;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  v41 = (_QWORD *)(v7 + 17 * v4);
  v42 = (char *)v41 + *(int *)(v2 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "grouper_id";
  *((_QWORD *)v42 + 1) = 10;
  v42[16] = 2;
  v11();
  v43 = (_QWORD *)(v7 + 18 * v4);
  v44 = (char *)v43 + *(int *)(v2 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "free_text_quantified_strength_unit";
  *((_QWORD *)v44 + 1) = 34;
  v44[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTracking._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB00, (uint64_t)qword_255543FF8, a1);
}

uint64_t sub_21FB838A8()
{
  uint64_t result;

  type metadata accessor for PBMedicationTracking._StorageClass();
  swift_allocObject();
  result = sub_21FB838E4();
  qword_255544010 = result;
  return result;
}

uint64_t sub_21FB838E4()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  *(_QWORD *)(v0 + 96) = 0;
  *(_BYTE *)(v0 + 104) = 1;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0xE000000000000000;
  *(_QWORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = 0xE000000000000000;
  *(_QWORD *)(v0 + 144) = 0;
  *(_QWORD *)(v0 + 152) = 0xE000000000000000;
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = 0xE000000000000000;
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0xE000000000000000;
  *(_QWORD *)(v0 + 192) = 0;
  *(_QWORD *)(v0 + 200) = 0xE000000000000000;
  *(_QWORD *)(v0 + 208) = 0;
  *(_QWORD *)(v0 + 216) = 0xE000000000000000;
  *(_QWORD *)(v0 + 224) = 0;
  *(_QWORD *)(v0 + 232) = 0xE000000000000000;
  *(_QWORD *)(v0 + 240) = 0;
  *(_QWORD *)(v0 + 248) = 0xE000000000000000;
  *(_QWORD *)(v0 + 256) = 0;
  *(_BYTE *)(v0 + 264) = 1;
  *(_QWORD *)(v0 + 272) = 0;
  *(_QWORD *)(v0 + 280) = 0xE000000000000000;
  *(_QWORD *)(v0 + 288) = 0;
  *(_QWORD *)(v0 + 296) = 0xE000000000000000;
  *(_QWORD *)(v0 + 304) = 0;
  *(_QWORD *)(v0 + 312) = 0xE000000000000000;
  return result;
}

uint64_t sub_21FB83948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 56) = 0xE000000000000000;
  *(_QWORD *)(v1 + 72) = 0xE000000000000000;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0xE000000000000000;
  *(_QWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 104) = 1;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0xE000000000000000;
  *(_QWORD *)(v1 + 128) = 0;
  *(_QWORD *)(v1 + 136) = 0xE000000000000000;
  *(_QWORD *)(v1 + 144) = 0;
  *(_QWORD *)(v1 + 152) = 0xE000000000000000;
  *(_QWORD *)(v1 + 160) = 0;
  *(_QWORD *)(v1 + 168) = 0xE000000000000000;
  *(_QWORD *)(v1 + 176) = 0;
  *(_QWORD *)(v1 + 184) = 0xE000000000000000;
  *(_QWORD *)(v1 + 192) = 0;
  *(_QWORD *)(v1 + 200) = 0xE000000000000000;
  *(_QWORD *)(v1 + 208) = 0;
  *(_QWORD *)(v1 + 216) = 0xE000000000000000;
  *(_QWORD *)(v1 + 224) = 0;
  *(_QWORD *)(v1 + 232) = 0xE000000000000000;
  *(_QWORD *)(v1 + 240) = 0;
  *(_BYTE *)(v1 + 264) = 1;
  *(_QWORD *)(v1 + 272) = 0;
  *(_QWORD *)(v1 + 280) = 0xE000000000000000;
  *(_QWORD *)(v1 + 288) = 0;
  *(_QWORD *)(v1 + 296) = 0xE000000000000000;
  *(_QWORD *)(v1 + 304) = 0;
  *(_QWORD *)(v1 + 312) = 0xE000000000000000;
  *(_QWORD *)(v1 + 248) = 0xE000000000000000;
  *(_QWORD *)(v1 + 256) = 0;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v6;
  *(_QWORD *)(v1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = v10;
  *(_QWORD *)(v1 + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = v12;
  *(_QWORD *)(v1 + 88) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 96);
  LOBYTE(v7) = *(_BYTE *)(a1 + 104);
  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = v13;
  *(_BYTE *)(v1 + 104) = v7;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 120);
  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = v15;
  *(_QWORD *)(v1 + 120) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 128);
  v16 = *(_QWORD *)(a1 + 136);
  swift_beginAccess();
  *(_QWORD *)(v1 + 128) = v17;
  *(_QWORD *)(v1 + 136) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 152);
  swift_beginAccess();
  *(_QWORD *)(v1 + 144) = v19;
  *(_QWORD *)(v1 + 152) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v21 = *(_QWORD *)(a1 + 160);
  v20 = *(_QWORD *)(a1 + 168);
  swift_beginAccess();
  *(_QWORD *)(v1 + 160) = v21;
  *(_QWORD *)(v1 + 168) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 176);
  v22 = *(_QWORD *)(a1 + 184);
  swift_beginAccess();
  *(_QWORD *)(v1 + 176) = v23;
  *(_QWORD *)(v1 + 184) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v25 = *(_QWORD *)(a1 + 192);
  v24 = *(_QWORD *)(a1 + 200);
  swift_beginAccess();
  *(_QWORD *)(v1 + 192) = v25;
  *(_QWORD *)(v1 + 200) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 208);
  v26 = *(_QWORD *)(a1 + 216);
  swift_beginAccess();
  *(_QWORD *)(v1 + 208) = v27;
  *(_QWORD *)(v1 + 216) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 224);
  v28 = *(_QWORD *)(a1 + 232);
  swift_beginAccess();
  *(_QWORD *)(v1 + 224) = v29;
  *(_QWORD *)(v1 + 232) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v31 = *(_QWORD *)(a1 + 240);
  v30 = *(_QWORD *)(a1 + 248);
  swift_beginAccess();
  *(_QWORD *)(v1 + 240) = v31;
  *(_QWORD *)(v1 + 248) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v32 = *(_QWORD *)(a1 + 256);
  LOBYTE(v30) = *(_BYTE *)(a1 + 264);
  swift_beginAccess();
  *(_QWORD *)(v1 + 256) = v32;
  *(_BYTE *)(v1 + 264) = v30;
  swift_beginAccess();
  v34 = *(_QWORD *)(a1 + 272);
  v33 = *(_QWORD *)(a1 + 280);
  swift_beginAccess();
  *(_QWORD *)(v1 + 272) = v34;
  *(_QWORD *)(v1 + 280) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v36 = *(_QWORD *)(a1 + 288);
  v35 = *(_QWORD *)(a1 + 296);
  swift_beginAccess();
  *(_QWORD *)(v1 + 288) = v36;
  *(_QWORD *)(v1 + 296) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v38 = *(_QWORD *)(a1 + 304);
  v37 = *(_QWORD *)(a1 + 312);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v1 + 304) = v38;
  *(_QWORD *)(v1 + 312) = v37;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FB83FF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21FB84094()
{
  sub_21FB83FF8();
  return swift_deallocClassInstance();
}

uint64_t PBMedicationTracking.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FB83948(v2);
    swift_release();
  }
  swift_retain();
  sub_21FB84178();
  return swift_release();
}

uint64_t sub_21FB84178()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 19:
          swift_beginAccess();
          sub_21FC5AE3C();
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_21FB9E1AC();
          goto LABEL_12;
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 17:
        case 18:
          swift_beginAccess();
          sub_21FC5AE3C();
          goto LABEL_10;
        case 16:
          swift_beginAccess();
          sub_21FB9E168();
LABEL_12:
          sub_21FC5ADC4();
LABEL_10:
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBMedicationTracking.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBMedicationTracking, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB844D8);
}

uint64_t sub_21FB844D8(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  swift_beginAccess();
  v3 = a1[3];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = a1[2] & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v5 = a1[5];
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = a1[4] & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v7 = a1[7];
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = a1[6] & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v9 = a1[9];
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = a1[8] & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v11 = a1[11];
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = a1[10] & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (a1[12])
  {
    sub_21FB9E1AC();
    result = sub_21FC5AED8();
    if (v1)
      return result;
  }
  swift_beginAccess();
  v14 = a1[15];
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = a1[14] & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v16 = a1[17];
  v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0)
    v17 = a1[16] & 0xFFFFFFFFFFFFLL;
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v18 = a1[19];
  v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v19 = a1[18] & 0xFFFFFFFFFFFFLL;
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v20 = a1[21];
  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = a1[20] & 0xFFFFFFFFFFFFLL;
  if (!v21)
    goto LABEL_48;
  swift_bridgeObjectRetain();
  sub_21FC5AF2C();
  if (v1)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_48:
  swift_beginAccess();
  v22 = a1[23];
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = a1[22] & 0xFFFFFFFFFFFFLL;
  if (v23)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v24 = a1[25];
  v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0)
    v25 = a1[24] & 0xFFFFFFFFFFFFLL;
  if (!v25 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    v26 = a1[27];
    v27 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0)
      v27 = a1[26] & 0xFFFFFFFFFFFFLL;
    if (!v27 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
    {
      swift_beginAccess();
      v28 = a1[29];
      v29 = HIBYTE(v28) & 0xF;
      if ((v28 & 0x2000000000000000) == 0)
        v29 = a1[28] & 0xFFFFFFFFFFFFLL;
      if (!v29 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
      {
        swift_beginAccess();
        v30 = a1[31];
        v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0)
          v31 = a1[30] & 0xFFFFFFFFFFFFLL;
        if (!v31 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
        {
          swift_beginAccess();
          if (!a1[32] || (sub_21FB9E168(), result = sub_21FC5AED8(), !v1))
          {
            swift_beginAccess();
            v32 = a1[35];
            v33 = HIBYTE(v32) & 0xF;
            if ((v32 & 0x2000000000000000) == 0)
              v33 = a1[34] & 0xFFFFFFFFFFFFLL;
            if (!v33 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
            {
              swift_beginAccess();
              v34 = a1[37];
              v35 = HIBYTE(v34) & 0xF;
              if ((v34 & 0x2000000000000000) == 0)
                v35 = a1[36] & 0xFFFFFFFFFFFFLL;
              if (!v35 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
              {
                result = swift_beginAccess();
                v36 = a1[38];
                v37 = a1[39];
                v38 = HIBYTE(v37) & 0xF;
                if ((v37 & 0x2000000000000000) == 0)
                  v38 = v36 & 0xFFFFFFFFFFFFLL;
                if (v38)
                {
                  swift_bridgeObjectRetain();
                  sub_21FC5AF2C();
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_21FB84C40(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = sub_21FC5BDF0(), result = 0, (v7 & 1) != 0))
  {
    if ((swift_beginAccess(), v9 = *(_QWORD *)(a1 + 32), v10 = *(_QWORD *)(a1 + 40), swift_beginAccess(), v9 == a2[4])
      && v10 == a2[5]
      || (v11 = sub_21FC5BDF0(), result = 0, (v11 & 1) != 0))
    {
      if ((swift_beginAccess(),
            v12 = *(_QWORD *)(a1 + 48),
            v13 = *(_QWORD *)(a1 + 56),
            swift_beginAccess(),
            v12 == a2[6])
        && v13 == a2[7]
        || (v14 = sub_21FC5BDF0(), result = 0, (v14 & 1) != 0))
      {
        if ((swift_beginAccess(),
              v15 = *(_QWORD *)(a1 + 64),
              v16 = *(_QWORD *)(a1 + 72),
              swift_beginAccess(),
              v15 == a2[8])
          && v16 == a2[9]
          || (v17 = sub_21FC5BDF0(), result = 0, (v17 & 1) != 0))
        {
          if ((swift_beginAccess(),
                v18 = *(_QWORD *)(a1 + 80),
                v19 = *(_QWORD *)(a1 + 88),
                swift_beginAccess(),
                v18 == a2[10])
            && v19 == a2[11]
            || (v20 = sub_21FC5BDF0(), result = 0, (v20 & 1) != 0))
          {
            swift_beginAccess();
            v21 = *(_QWORD *)(a1 + 96);
            v22 = *(unsigned __int8 *)(a1 + 104);
            swift_beginAccess();
            if (!sub_21FA2EDE0(v21, v22, a2[12]))
              return 0;
            swift_beginAccess();
            v23 = *(_QWORD *)(a1 + 112);
            v24 = *(_QWORD *)(a1 + 120);
            swift_beginAccess();
            if (v23 != a2[14] || v24 != a2[15])
            {
              v25 = sub_21FC5BDF0();
              result = 0;
              if ((v25 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v26 = *(_QWORD *)(a1 + 128);
            v27 = *(_QWORD *)(a1 + 136);
            swift_beginAccess();
            if (v26 != a2[16] || v27 != a2[17])
            {
              v28 = sub_21FC5BDF0();
              result = 0;
              if ((v28 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v29 = *(_QWORD *)(a1 + 144);
            v30 = *(_QWORD *)(a1 + 152);
            swift_beginAccess();
            if (v29 != a2[18] || v30 != a2[19])
            {
              v31 = sub_21FC5BDF0();
              result = 0;
              if ((v31 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v32 = *(_QWORD *)(a1 + 160);
            v33 = *(_QWORD *)(a1 + 168);
            swift_beginAccess();
            if (v32 != a2[20] || v33 != a2[21])
            {
              v34 = sub_21FC5BDF0();
              result = 0;
              if ((v34 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v35 = *(_QWORD *)(a1 + 176);
            v36 = *(_QWORD *)(a1 + 184);
            swift_beginAccess();
            if (v35 != a2[22] || v36 != a2[23])
            {
              v37 = sub_21FC5BDF0();
              result = 0;
              if ((v37 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v38 = *(_QWORD *)(a1 + 192);
            v39 = *(_QWORD *)(a1 + 200);
            swift_beginAccess();
            if (v38 != a2[24] || v39 != a2[25])
            {
              v40 = sub_21FC5BDF0();
              result = 0;
              if ((v40 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v41 = *(_QWORD *)(a1 + 208);
            v42 = *(_QWORD *)(a1 + 216);
            swift_beginAccess();
            if (v41 != a2[26] || v42 != a2[27])
            {
              v43 = sub_21FC5BDF0();
              result = 0;
              if ((v43 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v44 = *(_QWORD *)(a1 + 224);
            v45 = *(_QWORD *)(a1 + 232);
            swift_beginAccess();
            if (v44 != a2[28] || v45 != a2[29])
            {
              v46 = sub_21FC5BDF0();
              result = 0;
              if ((v46 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v47 = *(_QWORD *)(a1 + 240);
            v48 = *(_QWORD *)(a1 + 248);
            swift_beginAccess();
            if (v47 != a2[30] || v48 != a2[31])
            {
              v49 = sub_21FC5BDF0();
              result = 0;
              if ((v49 & 1) == 0)
                return result;
            }
            swift_beginAccess();
            v50 = *(_QWORD *)(a1 + 256);
            v51 = *(unsigned __int8 *)(a1 + 264);
            swift_beginAccess();
            if (!sub_21FA2EDE0(v50, v51, a2[32]))
              return 0;
            swift_beginAccess();
            v52 = *(_QWORD *)(a1 + 272);
            v53 = *(_QWORD *)(a1 + 280);
            swift_beginAccess();
            if (v52 == a2[34] && v53 == a2[35] || (v54 = sub_21FC5BDF0(), result = 0, (v54 & 1) != 0))
            {
              if ((swift_beginAccess(),
                    v55 = *(_QWORD *)(a1 + 288),
                    v56 = *(_QWORD *)(a1 + 296),
                    swift_beginAccess(),
                    v55 == a2[36])
                && v56 == a2[37]
                || (v57 = sub_21FC5BDF0(), result = 0, (v57 & 1) != 0))
              {
                swift_beginAccess();
                v59 = *(_QWORD *)(a1 + 304);
                v58 = *(_QWORD *)(a1 + 312);
                swift_beginAccess();
                if (v59 == a2[38] && v58 == a2[39])
                  return 1;
                v60 = sub_21FC5BDF0();
                result = 0;
                if ((v60 & 1) != 0)
                  return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBMedicationTracking.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationTracking, &qword_255544850, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
}

uint64_t sub_21FB85350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DB08, &qword_255544010, a2);
}

unint64_t sub_21FB8536C()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FB85388()
{
  return PBMedicationTracking.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB8539C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTracking.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB853B0()
{
  sub_21FA2A08C(&qword_25554A520, type metadata accessor for PBMedicationTracking, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
  return sub_21FC5AD70();
}

uint64_t sub_21FB85400@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB00, (uint64_t)qword_255543FF8, a1);
}

uint64_t sub_21FB8541C()
{
  sub_21FA2A08C(&qword_255544858, type metadata accessor for PBMedicationTracking, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB8545C()
{
  sub_21FA2A08C(&qword_255544858, type metadata accessor for PBMedicationTracking, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB854B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v43;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255544018);
  __swift_project_value_buffer(v0, (uint64_t)qword_255544018);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_21FC66560;
  v6 = v43 + v5;
  v7 = v43 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v43 + v5) = 0;
  *(_QWORD *)v7 = "NOT_SET";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 1;
  *(_QWORD *)v11 = "CAPSULE";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "CREAM";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "DEVICE";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "DROPS";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "FOAM";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "GEL";
  *((_QWORD *)v21 + 1) = 3;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "INHALER";
  *((_QWORD *)v23 + 1) = 7;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 8;
  *(_QWORD *)v24 = "INJECTION";
  *(_QWORD *)(v24 + 8) = 9;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "LIQUID";
  *((_QWORD *)v26 + 1) = 6;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 10;
  *(_QWORD *)v28 = "LOTION";
  *((_QWORD *)v28 + 1) = 6;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v6 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 11;
  *(_QWORD *)v30 = "OINTMENT";
  *((_QWORD *)v30 + 1) = 8;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v6 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 12;
  *(_QWORD *)v32 = "PATCH";
  *((_QWORD *)v32 + 1) = 5;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v6 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 13;
  *(_QWORD *)v34 = "POWDER";
  *((_QWORD *)v34 + 1) = 6;
  v34[16] = 2;
  v10();
  v35 = (_QWORD *)(v6 + 14 * v4);
  v36 = (char *)v35 + *(int *)(v2 + 48);
  *v35 = 14;
  *(_QWORD *)v36 = "SPRAY";
  *((_QWORD *)v36 + 1) = 5;
  v36[16] = 2;
  v10();
  v37 = (_QWORD *)(v6 + 15 * v4);
  v38 = (char *)v37 + *(int *)(v2 + 48);
  *v37 = 15;
  *(_QWORD *)v38 = "SUPPOSITORY";
  *((_QWORD *)v38 + 1) = 11;
  v38[16] = 2;
  v10();
  v39 = v6 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 16 * v4) = 16;
  *(_QWORD *)v39 = "TABLET";
  *(_QWORD *)(v39 + 8) = 6;
  *(_BYTE *)(v39 + 16) = 2;
  v10();
  v40 = (_QWORD *)(v6 + 17 * v4);
  v41 = (char *)v40 + *(int *)(v2 + 48);
  *v40 = 17;
  *(_QWORD *)v41 = "TOPICAL";
  *((_QWORD *)v41 + 1) = 7;
  v41[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTracking.MedicationFreeTextForm._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB10, (uint64_t)qword_255544018, a1);
}

uint64_t sub_21FB85970@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB10, (uint64_t)qword_255544018, a1);
}

uint64_t sub_21FB8598C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255544030);
  __swift_project_value_buffer(v0, (uint64_t)qword_255544030);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC62990;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "NOT_SET_UNIT";
  *(_QWORD *)(v8 + 8) = 12;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "CAPSULE_UNIT";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "APPLICATION_UNIT";
  *((_QWORD *)v14 + 1) = 16;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "DEVICE_UNIT";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "DROP_UNIT";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "INHALATION_UNIT";
  *((_QWORD *)v20 + 1) = 15;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "INJECTION_UNIT";
  *((_QWORD *)v22 + 1) = 14;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 7;
  *(_QWORD *)v24 = "MILLILITERS_UNIT";
  *((_QWORD *)v24 + 1) = 16;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 8;
  *(_QWORD *)v25 = "PATCH_UNIT";
  *(_QWORD *)(v25 + 8) = 10;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  v26 = (_QWORD *)(v7 + 9 * v4);
  v27 = (char *)v26 + *(int *)(v2 + 48);
  *v26 = 9;
  *(_QWORD *)v27 = "SCOOP_UNIT";
  *((_QWORD *)v27 + 1) = 10;
  v27[16] = 2;
  v11();
  v28 = (_QWORD *)(v7 + 10 * v4);
  v29 = (char *)v28 + *(int *)(v2 + 48);
  *v28 = 10;
  *(_QWORD *)v29 = "SPRAY_UNIT";
  *((_QWORD *)v29 + 1) = 10;
  v29[16] = 2;
  v11();
  v30 = (_QWORD *)(v7 + 11 * v4);
  v31 = (char *)v30 + *(int *)(v2 + 48);
  *v30 = 11;
  *(_QWORD *)v31 = "UNIT_UNIT";
  *((_QWORD *)v31 + 1) = 9;
  v31[16] = 2;
  v11();
  v32 = (_QWORD *)(v7 + 12 * v4);
  v33 = (char *)v32 + *(int *)(v2 + 48);
  *v32 = 12;
  *(_QWORD *)v33 = "TABLET_UNIT";
  *((_QWORD *)v33 + 1) = 11;
  v33[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTracking.MedicationFreeTextLoggingUnit._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB18, (uint64_t)qword_255544030, a1);
}

uint64_t sub_21FB85D58@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB18, (uint64_t)qword_255544030, a1);
}

unint64_t static PBMedicationTrackings.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FB85D90(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255544048, (uint64_t)"medication_tracking", 19, MEMORY[0x24BE5C328]);
}

uint64_t static PBMedicationTrackings._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB20, (uint64_t)qword_255544048, a1);
}

uint64_t PBMedicationTrackings.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBMedicationTracking, &qword_255544858, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
}

uint64_t PBMedicationTrackings.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBMedicationTracking, &qword_255544858, (uint64_t)&protocol conformance descriptor for PBMedicationTracking, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackings);
}

uint64_t PBMedicationTrackings.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationTrackings, &qword_255544860, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
}

unint64_t sub_21FB85E48()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FB85E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackings.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB85E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackings.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB85E8C()
{
  sub_21FA2A08C(&qword_25554A518, type metadata accessor for PBMedicationTrackings, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
  return sub_21FC5AD70();
}

uint64_t sub_21FB85EDC@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB20, (uint64_t)qword_255544048, a1);
}

uint64_t sub_21FB85EF8()
{
  sub_21FA2A08C(&qword_25553EB10, type metadata accessor for PBMedicationTrackings, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB85F38()
{
  sub_21FA2A08C(&qword_25553EB10, type metadata accessor for PBMedicationTrackings, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB85F88(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0F120, type metadata accessor for PBMedicationTrackings) & 1;
}

unint64_t static PBMedicationTrackingDoseEvent.protoMessageName.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_21FB85FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255544060);
  __swift_project_value_buffer(v0, (uint64_t)qword_255544060);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC623E0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "log_origin";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "status";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "schedule_item_identifier";
  *((_QWORD *)v14 + 1) = 24;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "medication_semantic_identifier";
  *((_QWORD *)v16 + 1) = 30;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "scheduled_dose_quantity";
  *((_QWORD *)v18 + 1) = 23;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "dose_quantity";
  *((_QWORD *)v20 + 1) = 13;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "scheduled_date";
  *((_QWORD *)v22 + 1) = 14;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "log_date";
  *((_QWORD *)v24 + 1) = 8;
  v24[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTrackingDoseEvent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB28, (uint64_t)qword_255544060, a1);
}

uint64_t PBMedicationTrackingDoseEvent.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_21FB8F08C();
          goto LABEL_7;
        case 2:
          sub_21FB8F048();
LABEL_7:
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_10;
        case 3:
        case 4:
        case 7:
        case 8:
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_10;
        case 5:
        case 6:
          v4 = v3;
          sub_21FC5AE0C();
LABEL_10:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBMedicationTrackingDoseEvent.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)v0 || (sub_21FB8F08C(), result = sub_21FC5AED8(), !v1))
  {
    if (!*(_QWORD *)(v0 + 16) || (sub_21FB8F048(), result = sub_21FC5AED8(), !v1))
    {
      v3 = *(_QWORD *)(v0 + 40);
      v4 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0)
        v4 = *(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFLL;
      if (!v4 || (result = sub_21FC5AF2C(), !v1))
      {
        v5 = *(_QWORD *)(v0 + 56);
        v6 = HIBYTE(v5) & 0xF;
        if ((v5 & 0x2000000000000000) == 0)
          v6 = *(_QWORD *)(v0 + 48) & 0xFFFFFFFFFFFFLL;
        if (!v6 || (result = sub_21FC5AF2C(), !v1))
        {
          if (!*(_DWORD *)(v0 + 64) || (result = sub_21FC5AF08(), !v1))
          {
            if (!*(_DWORD *)(v0 + 68) || (result = sub_21FC5AF08(), !v1))
            {
              v7 = *(_QWORD *)(v0 + 80);
              v8 = HIBYTE(v7) & 0xF;
              if ((v7 & 0x2000000000000000) == 0)
                v8 = *(_QWORD *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
              if (!v8 || (result = sub_21FC5AF2C(), !v1))
              {
                v9 = *(_QWORD *)(v0 + 96);
                v10 = HIBYTE(v9) & 0xF;
                if ((v9 & 0x2000000000000000) == 0)
                  v10 = *(_QWORD *)(v0 + 88) & 0xFFFFFFFFFFFFLL;
                if (!v10 || (result = sub_21FC5AF2C(), !v1))
                {
                  type metadata accessor for PBMedicationTrackingDoseEvent(0);
                  return sub_21FC5AD04();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBMedicationTrackingDoseEvent.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationTrackingDoseEvent, &qword_255544878, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_21FB86644@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FB86690()
{
  return 0xD000000000000036;
}

uint64_t sub_21FB866AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FB866EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 48);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_21FB8672C())()
{
  return nullsub_1;
}

uint64_t sub_21FB86740()
{
  return PBMedicationTrackingDoseEvent.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB86754()
{
  return PBMedicationTrackingDoseEvent.traverse<A>(visitor:)();
}

uint64_t sub_21FB86768()
{
  sub_21FA2A08C(&qword_25554A510, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
  return sub_21FC5AD70();
}

uint64_t sub_21FB867B8@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB28, (uint64_t)qword_255544060, a1);
}

uint64_t sub_21FB867D4()
{
  sub_21FA2A08C(&qword_255544880, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB86814()
{
  sub_21FA2A08C(&qword_255544880, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB86868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255544078);
  __swift_project_value_buffer(v0, (uint64_t)qword_255544078);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 0;
  *(_QWORD *)v8 = "LOG_ORIGIN_NOT_SET";
  *(_QWORD *)(v8 + 8) = 18;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 1;
  *(_QWORD *)v12 = "AS_NEEDED";
  *((_QWORD *)v12 + 1) = 9;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 2;
  *(_QWORD *)v13 = "SCHEDULE";
  *(_QWORD *)(v13 + 8) = 8;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTrackingDoseEvent.LogOrigin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB30, (uint64_t)qword_255544078, a1);
}

uint64_t sub_21FB86A24@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB30, (uint64_t)qword_255544078, a1);
}

uint64_t sub_21FB86A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255544090);
  __swift_project_value_buffer(v0, (uint64_t)qword_255544090);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "STATUS_NOT_SET";
  *(_QWORD *)(v8 + 8) = 14;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "NOT_INTERACTED";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "NOTIFICATION_NOT_SENT";
  *((_QWORD *)v14 + 1) = 21;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "SNOOZED";
  *((_QWORD *)v16 + 1) = 7;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "TAKEN";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "SKIPPED";
  *((_QWORD *)v20 + 1) = 7;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "NOT_LOGGED";
  *((_QWORD *)v22 + 1) = 10;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTrackingDoseEvent.Status._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB38, (uint64_t)qword_255544090, a1);
}

uint64_t sub_21FB86CD0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB38, (uint64_t)qword_255544090, a1);
}

unint64_t static PBMedicationTrackingDoseEvents.protoMessageName.getter()
{
  return 0xD000000000000037;
}

uint64_t sub_21FB86D08(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_2555440A8, (uint64_t)"medication_tracking_dose_event", 30, MEMORY[0x24BE5C328]);
}

uint64_t static PBMedicationTrackingDoseEvents._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB40, (uint64_t)qword_2555440A8, a1);
}

uint64_t PBMedicationTrackingDoseEvents.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBMedicationTrackingDoseEvent, &qword_255544880, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
}

uint64_t PBMedicationTrackingDoseEvents.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBMedicationTrackingDoseEvent, &qword_255544880, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingDoseEvents);
}

uint64_t PBMedicationTrackingDoseEvents.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationTrackingDoseEvents, &qword_255544888, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
}

unint64_t sub_21FB86DC0()
{
  return 0xD000000000000037;
}

uint64_t sub_21FB86DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingDoseEvents.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB86DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingDoseEvents.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB86E04()
{
  sub_21FA2A08C(&qword_25554A508, type metadata accessor for PBMedicationTrackingDoseEvents, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
  return sub_21FC5AD70();
}

uint64_t sub_21FB86E54@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB40, (uint64_t)qword_2555440A8, a1);
}

uint64_t sub_21FB86E70()
{
  sub_21FA2A08C(&qword_25553EB08, type metadata accessor for PBMedicationTrackingDoseEvents, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB86EB0()
{
  sub_21FA2A08C(&qword_25553EB08, type metadata accessor for PBMedicationTrackingDoseEvents, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB86F00(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0E238, type metadata accessor for PBMedicationTrackingDoseEvents) & 1;
}

unint64_t static PBMedicationTrackingSchedule.protoMessageName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_21FB86F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v28;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555440C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555440C0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_21FC5F730;
  v6 = v28 + v5;
  v7 = v28 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v28 + v5) = 1;
  *(_QWORD *)v7 = "schedule_identifier";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "medication_semantic_identifier";
  *(_QWORD *)(v11 + 8) = 30;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "created_utc_offset";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "start_date_time";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "end_date_time";
  *((_QWORD *)v17 + 1) = 13;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "notes";
  *((_QWORD *)v19 + 1) = 5;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "time_intervals";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "frequency_type";
  *((_QWORD *)v23 + 1) = 14;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "unrecognized";
  *(_QWORD *)(v24 + 8) = 12;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "compatibility_version_range";
  *((_QWORD *)v26 + 1) = 27;
  v26[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTrackingSchedule._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB48, (uint64_t)qword_2555440C0, a1);
}

uint64_t sub_21FB87288(uint64_t a1)
{
  return sub_21FB5E550(a1, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB872A4, &qword_2555440D8);
}

uint64_t sub_21FB872A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0xE000000000000000;
  v1 = MEMORY[0x24BEE4AF8];
  *(_WORD *)(v0 + 128) = 1;
  v2 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  *(_QWORD *)(v0 + 112) = v1;
  *(_QWORD *)(v0 + 120) = 0;
  v3 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return v0;
}

uint64_t sub_21FB87320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_21FA2D1A0(0, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v35 = (uint64_t)&v29 - v4;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 56) = 0xE000000000000000;
  *(_QWORD *)(v1 + 72) = 0xE000000000000000;
  *(_QWORD *)(v1 + 80) = 0;
  v29 = (_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 88) = 0xE000000000000000;
  *(_QWORD *)(v1 + 96) = 0;
  v30 = (_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 104) = 0xE000000000000000;
  *(_QWORD *)(v1 + 112) = MEMORY[0x24BEE4AF8];
  v31 = (_QWORD *)(v1 + 112);
  *(_WORD *)(v1 + 128) = 1;
  v5 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  v33 = v1 + 129;
  v34 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  *(_QWORD *)(v1 + 120) = 0;
  v32 = (_QWORD *)(v1 + 120);
  v6 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)(v1 + 24) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v10;
  *(_QWORD *)(v1 + 40) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = v12;
  *(_QWORD *)(v1 + 56) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = v14;
  *(_QWORD *)(v1 + 72) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 88);
  v17 = v29;
  swift_beginAccess();
  *v17 = v16;
  *(_QWORD *)(v1 + 88) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 96);
  v18 = *(_QWORD *)(a1 + 104);
  v20 = v30;
  swift_beginAccess();
  *v20 = v19;
  *(_QWORD *)(v1 + 104) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v21 = *(_QWORD *)(a1 + 112);
  v22 = v31;
  swift_beginAccess();
  *v22 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 120);
  LOBYTE(v16) = *(_BYTE *)(a1 + 128);
  v24 = v32;
  swift_beginAccess();
  *v24 = v23;
  *(_BYTE *)(v1 + 128) = v16;
  swift_beginAccess();
  LOBYTE(v23) = *(_BYTE *)(a1 + 129);
  swift_beginAccess();
  *(_BYTE *)(v1 + 129) = v23;
  v25 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  v26 = v35;
  sub_21FA44968(v25, v35, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  swift_release();
  v27 = v34;
  swift_beginAccess();
  sub_21FA2D2D8(v26, v27, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  swift_endAccess();
  return v1;
}

uint64_t sub_21FB8775C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return v0;
}

uint64_t sub_21FB877C8()
{
  return sub_21FB877D4((void (*)(void))sub_21FB8775C);
}

uint64_t sub_21FB877D4(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t PBMedicationTrackingSchedule.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB87828);
}

uint64_t sub_21FB87828()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          swift_beginAccess();
          sub_21FC5AE3C();
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_21FC5AE3C();
          goto LABEL_12;
        case 7:
          swift_beginAccess();
          type metadata accessor for PBHKMedicationScheduleIntervalData(0);
          sub_21FA2A08C(&qword_255544F80, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
          sub_21FC5AE54();
          goto LABEL_12;
        case 8:
          swift_beginAccess();
          sub_21FB9E124();
          sub_21FC5ADC4();
          goto LABEL_12;
        case 9:
          swift_beginAccess();
          sub_21FC5ADAC();
LABEL_12:
          swift_endAccess();
          break;
        case 10:
          swift_beginAccess();
          type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
          sub_21FA2A08C(&qword_255544F58, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
          sub_21FC5AE60();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBMedicationTrackingSchedule.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB87B3C);
}

uint64_t sub_21FB87B3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  char v26;
  uint64_t v27;

  sub_21FA2D1A0(0, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v25 - v4;
  v6 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v27 = (uint64_t)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 24);
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 40);
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = *(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
  if (!v13 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 56);
    v15 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0)
      v15 = *(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
    if (!v15 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
    {
      swift_beginAccess();
      v16 = *(_QWORD *)(a1 + 72);
      v17 = HIBYTE(v16) & 0xF;
      if ((v16 & 0x2000000000000000) == 0)
        v17 = *(_QWORD *)(a1 + 64) & 0xFFFFFFFFFFFFLL;
      if (!v17 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
      {
        swift_beginAccess();
        v18 = *(_QWORD *)(a1 + 88);
        v19 = HIBYTE(v18) & 0xF;
        if ((v18 & 0x2000000000000000) == 0)
          v19 = *(_QWORD *)(a1 + 80) & 0xFFFFFFFFFFFFLL;
        if (!v19 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
        {
          swift_beginAccess();
          v20 = *(_QWORD *)(a1 + 104);
          v21 = HIBYTE(v20) & 0xF;
          if ((v20 & 0x2000000000000000) == 0)
            v21 = *(_QWORD *)(a1 + 96) & 0xFFFFFFFFFFFFLL;
          if (!v21 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v1))
          {
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)(a1 + 112) + 16)
              || (v25[0] = type metadata accessor for PBHKMedicationScheduleIntervalData(0),
                  sub_21FA2A08C(&qword_255544F80, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData), swift_bridgeObjectRetain(), sub_21FC5AF44(), result = swift_bridgeObjectRelease(), !v1))
            {
              swift_beginAccess();
              if (!*(_QWORD *)(a1 + 120)
                || (v22 = *(_BYTE *)(a1 + 128),
                    v25[4] = *(_QWORD *)(a1 + 120),
                    v26 = v22,
                    sub_21FB9E124(),
                    result = sub_21FC5AED8(),
                    !v1))
              {
                swift_beginAccess();
                if (*(_BYTE *)(a1 + 129) != 1 || (result = sub_21FC5AECC(), !v1))
                {
                  v23 = a1
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
                  swift_beginAccess();
                  sub_21FA44968(v23, (uint64_t)v5, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
                  {
                    return sub_21FA2D1F8((uint64_t)v5, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  }
                  else
                  {
                    v24 = v27;
                    sub_21FA2D23C((uint64_t)v5, v27, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_21FA2A08C(&qword_255544F58, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_21FC5AF50();
                    return sub_21FA326EC(v24, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static PBMedicationTrackingSchedule.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t (*)(uint64_t, uint64_t))sub_21FB88088) & 1;
}

BOOL sub_21FB88088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _BOOL8 result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _DWORD *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _DWORD *v53;
  uint64_t v54;

  v54 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  v4 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (_DWORD *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_25554A730, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v50 - v8;
  sub_21FA2D1A0(0, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (_DWORD *)((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v50 - v14;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(_QWORD *)(a2 + 16) && v16 == *(_QWORD *)(a2 + 24)
    || (v18 = sub_21FC5BDF0(), result = 0, (v18 & 1) != 0))
  {
    if ((swift_beginAccess(),
          v20 = *(_QWORD *)(a1 + 32),
          v21 = *(_QWORD *)(a1 + 40),
          swift_beginAccess(),
          v20 == *(_QWORD *)(a2 + 32))
      && v21 == *(_QWORD *)(a2 + 40)
      || (v22 = sub_21FC5BDF0(), result = 0, (v22 & 1) != 0))
    {
      if ((swift_beginAccess(),
            v23 = *(_QWORD *)(a1 + 48),
            v24 = *(_QWORD *)(a1 + 56),
            swift_beginAccess(),
            v23 == *(_QWORD *)(a2 + 48))
        && v24 == *(_QWORD *)(a2 + 56)
        || (v25 = sub_21FC5BDF0(), result = 0, (v25 & 1) != 0))
      {
        if ((swift_beginAccess(),
              v26 = *(_QWORD *)(a1 + 64),
              v27 = *(_QWORD *)(a1 + 72),
              swift_beginAccess(),
              v26 == *(_QWORD *)(a2 + 64))
          && v27 == *(_QWORD *)(a2 + 72)
          || (v28 = sub_21FC5BDF0(), result = 0, (v28 & 1) != 0))
        {
          if ((swift_beginAccess(),
                v29 = *(_QWORD *)(a1 + 80),
                v30 = *(_QWORD *)(a1 + 88),
                swift_beginAccess(),
                v29 == *(_QWORD *)(a2 + 80))
            && v30 == *(_QWORD *)(a2 + 88)
            || (v31 = sub_21FC5BDF0(), result = 0, (v31 & 1) != 0))
          {
            if ((swift_beginAccess(),
                  v32 = *(_QWORD *)(a1 + 96),
                  v33 = *(_QWORD *)(a1 + 104),
                  swift_beginAccess(),
                  v32 == *(_QWORD *)(a2 + 96))
              && v33 == *(_QWORD *)(a2 + 104)
              || (v34 = sub_21FC5BDF0(), result = 0, (v34 & 1) != 0))
            {
              v52 = v9;
              swift_beginAccess();
              v35 = *(_QWORD *)(a1 + 112);
              swift_beginAccess();
              v36 = *(_QWORD *)(a2 + 112);
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v37 = sub_21FB12E5C(v35, v36);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v37 & 1) == 0)
                goto LABEL_24;
              swift_beginAccess();
              v38 = *(_QWORD *)(a1 + 120);
              swift_beginAccess();
              v39 = *(_QWORD *)(a2 + 120);
              if (*(_BYTE *)(a2 + 128) == 1)
                __asm { BR              X10 }
              if (v38 != v39
                || (swift_beginAccess(),
                    v40 = *(unsigned __int8 *)(a1 + 129),
                    swift_beginAccess(),
                    v40 != *(unsigned __int8 *)(a2 + 129)))
              {
LABEL_24:
                swift_release();
                swift_release();
                return 0;
              }
              v41 = a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
              swift_beginAccess();
              sub_21FA44968(v41, (uint64_t)v15, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              v42 = a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
              swift_beginAccess();
              v43 = (uint64_t)v52;
              v44 = (uint64_t)&v52[*(int *)(v7 + 48)];
              sub_21FA44968((uint64_t)v15, (uint64_t)v52, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              v51 = v44;
              sub_21FA44968(v42, v44, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
              v46 = v54;
              if (v45(v43, 1, v54) == 1)
              {
                swift_release();
                swift_release();
                sub_21FA2D1F8((uint64_t)v15, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                if (v45(v51, 1, v46) == 1)
                {
                  sub_21FA2D1F8(v43, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  return 1;
                }
              }
              else
              {
                sub_21FA44968(v43, (uint64_t)v13, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                v47 = v51;
                if (v45(v51, 1, v46) != 1)
                {
                  v48 = v53;
                  sub_21FA2D23C(v47, (uint64_t)v53, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  if (*v13 != *v48 || v13[1] != v48[1])
                  {
                    swift_release();
                    swift_release();
                    sub_21FA326EC((uint64_t)v48, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_21FA2D1F8((uint64_t)v15, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_21FA326EC((uint64_t)v13, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_21FA2D1F8(v43, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    return 0;
                  }
                  sub_21FC5AD1C();
                  sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                  v49 = sub_21FC5B5D4();
                  swift_release();
                  swift_release();
                  sub_21FA326EC((uint64_t)v48, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  sub_21FA2D1F8((uint64_t)v15, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  sub_21FA326EC((uint64_t)v13, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  sub_21FA2D1F8(v43, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  return (v49 & 1) != 0;
                }
                swift_release();
                swift_release();
                sub_21FA2D1F8((uint64_t)v15, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                sub_21FA326EC((uint64_t)v13, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              }
              sub_21FA48E3C(v43, &qword_25554A730, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBMedicationTrackingSchedule.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationTrackingSchedule, &qword_255544890, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
}

uint64_t sub_21FB8885C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DB50, &qword_2555440D8, a2);
}

unint64_t sub_21FB88878()
{
  return 0xD000000000000035;
}

uint64_t sub_21FB88894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingSchedule.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB888A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingSchedule.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB888BC()
{
  sub_21FA2A08C(&qword_25554A500, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
  return sub_21FC5AD70();
}

uint64_t sub_21FB8890C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB48, (uint64_t)qword_2555440C0, a1);
}

uint64_t sub_21FB88928()
{
  sub_21FA2A08C(&qword_2555448A0, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB88968()
{
  sub_21FA2A08C(&qword_2555448A0, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB889B8(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t (*)(uint64_t, uint64_t))sub_21FB88088) & 1;
}

uint64_t sub_21FB889E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555440E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555440E0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "FREQUENCY_NOT_SET";
  *(_QWORD *)(v8 + 8) = 17;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "CYCLE";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "DAILY";
  *((_QWORD *)v14 + 1) = 5;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "DAYS_OF_WEEK";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 4;
  *(_QWORD *)v17 = "AS_NEEDED";
  *(_QWORD *)(v17 + 8) = 9;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTrackingSchedule.HKFrequencyType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB58, (uint64_t)qword_2555440E0, a1);
}

uint64_t sub_21FB88C10@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB58, (uint64_t)qword_2555440E0, a1);
}

unint64_t static PBMedicationTrackingScheduleCompatibilityVersionRange.protoMessageName.getter()
{
  return 0xD00000000000004ELL;
}

uint64_t sub_21FB88C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_2555440F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2555440F8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "minimum_compatibility_version";
  *(_QWORD *)(v8 + 8) = 29;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "origin_compatibility_version";
  *((_QWORD *)v12 + 1) = 28;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBMedicationTrackingScheduleCompatibilityVersionRange._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB60, (uint64_t)qword_2555440F8, a1);
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.decodeMessage<A>(decoder:)()
{
  return sub_21FB88DD8();
}

uint64_t sub_21FB88DD8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_21FC5AE0C();
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB7B374(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t static PBMedicationTrackingScheduleCompatibilityVersionRange.== infix(_:_:)(_DWORD *a1, char *a2)
{
  return sub_21FB8CBBC(a1, a2, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange) & 1;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, &qword_255544898, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

unint64_t sub_21FB88EC0()
{
  return 0xD00000000000004ELL;
}

uint64_t sub_21FB88EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingScheduleCompatibilityVersionRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB88EF0()
{
  sub_21FA2A08C(&qword_25554A4F8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return sub_21FC5AD70();
}

uint64_t sub_21FB88F40@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB60, (uint64_t)qword_2555440F8, a1);
}

uint64_t sub_21FB88F5C()
{
  sub_21FA2A08C(&qword_255544F58, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB88F9C()
{
  sub_21FA2A08C(&qword_255544F58, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB88FEC(_DWORD *a1, char *a2)
{
  return sub_21FB8CBBC(a1, a2, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange) & 1;
}

unint64_t static PBMedicationTrackingSchedules.protoMessageName.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_21FB89028(uint64_t a1)
{
  return sub_21FB076FC(a1, qword_255544110, (uint64_t)"medication_tracking_schedule", 28, MEMORY[0x24BE5C328]);
}

uint64_t static PBMedicationTrackingSchedules._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB68, (uint64_t)qword_255544110, a1);
}

uint64_t PBMedicationTrackingSchedules.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB0785C(a1, a2, a3, type metadata accessor for PBMedicationTrackingSchedule, &qword_2555448A0, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
}

uint64_t PBMedicationTrackingSchedules.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB07958(a1, a2, a3, type metadata accessor for PBMedicationTrackingSchedule, &qword_2555448A0, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedules);
}

uint64_t PBMedicationTrackingSchedules.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBMedicationTrackingSchedules, &qword_2555448A8, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
}

unint64_t sub_21FB890E0()
{
  return 0xD000000000000036;
}

uint64_t sub_21FB890FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingSchedules.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB89110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingSchedules.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB89124()
{
  sub_21FA2A08C(&qword_25554A4F0, type metadata accessor for PBMedicationTrackingSchedules, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
  return sub_21FC5AD70();
}

uint64_t sub_21FB89174@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB68, (uint64_t)qword_255544110, a1);
}

uint64_t sub_21FB89190()
{
  sub_21FA2A08C(&qword_25553EB00, type metadata accessor for PBMedicationTrackingSchedules, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB891D0()
{
  sub_21FA2A08C(&qword_25553EB00, type metadata accessor for PBMedicationTrackingSchedules, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB89220(_QWORD *a1, char *a2)
{
  return sub_21FB091BC(a1, a2, sub_21FB0E24C, type metadata accessor for PBMedicationTrackingSchedules) & 1;
}

unint64_t static PBHKMedicationScheduleIntervalData.protoMessageName.getter()
{
  return 0xD00000000000003BLL;
}

uint64_t sub_21FB89264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255544128);
  __swift_project_value_buffer(v0, (uint64_t)qword_255544128);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "days_of_week";
  *(_QWORD *)(v8 + 8) = 12;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "cycle_index";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "cycle_interval_days";
  *((_QWORD *)v14 + 1) = 19;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "dose";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 5;
  *(_QWORD *)v17 = "start_time";
  *(_QWORD *)(v17 + 8) = 10;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKMedicationScheduleIntervalData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB70, (uint64_t)qword_255544128, a1);
}

uint64_t sub_21FB89498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;

  type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  v2 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex) = 0;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays) = 0;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose) = 0;
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  qword_255544140 = v0;
  return result;
}

uint64_t sub_21FB89538(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  sub_21FA2D1A0(0, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v20[-v4];
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  v7 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_DWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex) = 0;
  v9 = (_DWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays) = 0;
  v10 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose) = 0;
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_21FA44968(v12, (uint64_t)v5, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_endAccess();
  v13 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  LODWORD(v13) = *v13;
  swift_beginAccess();
  *v8 = (_DWORD)v13;
  v14 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  LODWORD(v14) = *v14;
  swift_beginAccess();
  *v9 = (_DWORD)v14;
  v15 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  LODWORD(v15) = *v15;
  swift_beginAccess();
  *v10 = (_DWORD)v15;
  v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  v18 = *v16;
  v17 = v16[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v11 = v18;
  v11[1] = v17;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FB897B4()
{
  uint64_t v0;

  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationScheduleIntervalData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41414(a1, a2, a3, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB8983C);
}

uint64_t sub_21FB8983C()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
          sub_21FA2A08C(&qword_255544F98, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE0C();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FB89A58);
}

uint64_t sub_21FB89A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;

  v22[1] = a3;
  v22[2] = a4;
  sub_21FA2D1A0(0, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - v7;
  v9 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1;
  v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_21FA44968(v13, (uint64_t)v8, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21FA2D1F8((uint64_t)v8, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    v14 = v23;
  }
  else
  {
    sub_21FA2D23C((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    sub_21FA2A08C(&qword_255544F98, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v12, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    v14 = v23;
    if (v4)
      return result;
  }
  v16 = (_DWORD *)(v14
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  if (!*v16 || (result = sub_21FC5AF08(), !v4))
  {
    v17 = (_DWORD *)(v14
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
    swift_beginAccess();
    if (!*v17 || (result = sub_21FC5AF08(), !v4))
    {
      v18 = (_DWORD *)(v14
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
      swift_beginAccess();
      if (!*v18 || (result = sub_21FC5AF08(), !v4))
      {
        v19 = (_QWORD *)(v14
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
        result = swift_beginAccess();
        v20 = v19[1];
        v21 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0)
          v21 = *v19 & 0xFFFFFFFFFFFFLL;
        if (v21)
        {
          swift_bridgeObjectRetain();
          sub_21FC5AF2C();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t static PBHKMedicationScheduleIntervalData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, sub_21FB89D70) & 1;
}

uint64_t sub_21FB89D70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  char v23;
  int *v24;
  int v25;
  _DWORD *v26;
  int *v27;
  int v28;
  _DWORD *v29;
  int *v30;
  int v31;
  _DWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  unsigned __int8 *v39;
  unsigned __int8 *v40;
  uint64_t v41;

  v41 = a2;
  v3 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v39 = (unsigned __int8 *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554A728, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v39 - v8;
  sub_21FA2D1A0(0, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v40 = (unsigned __int8 *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - v13;
  v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_21FA44968(v15, (uint64_t)v14, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  v16 = v41;
  v17 = v41
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21FA44968((uint64_t)v14, (uint64_t)v9, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  sub_21FA44968(v17, v18, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    v21 = v39;
    v20 = a1;
    v22 = v40;
    sub_21FA44968((uint64_t)v9, (uint64_t)v40, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    if (v19(v18, 1, v3) != 1)
    {
      sub_21FA2D23C(v18, (uint64_t)v21, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      swift_retain();
      swift_retain();
      v23 = _s19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataV24HKReminderWeekdayOptionsV2eeoiySbAE_AEtFZ_0(v22, v21);
      sub_21FA326EC((uint64_t)v21, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      sub_21FA2D1F8((uint64_t)v14, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      sub_21FA326EC((uint64_t)v22, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      sub_21FA2D1F8((uint64_t)v9, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      if ((v23 & 1) != 0)
        goto LABEL_8;
LABEL_14:
      swift_release();
      swift_release();
      v37 = 0;
      return v37 & 1;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v14, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    sub_21FA326EC((uint64_t)v22, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
LABEL_6:
    sub_21FA48E3C((uint64_t)v9, &qword_25554A728, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    goto LABEL_14;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v14, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  v20 = a1;
  if (v19(v18, 1, v3) != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v9, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
LABEL_8:
  v24 = (int *)(v20
              + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  v25 = *v24;
  v26 = (_DWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  if (v25 != *v26)
    goto LABEL_14;
  v27 = (int *)(v20
              + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  v28 = *v27;
  v29 = (_DWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  if (v28 != *v29)
    goto LABEL_14;
  v30 = (int *)(v20
              + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  v31 = *v30;
  v32 = (_DWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  if (v31 != *v32)
    goto LABEL_14;
  v33 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  v34 = *v33;
  v35 = v33[1];
  v36 = (_QWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  if (v34 == *v36 && v35 == v36[1])
    v37 = 1;
  else
    v37 = sub_21FC5BDF0();
  swift_release();
  swift_release();
  return v37 & 1;
}

uint64_t PBHKMedicationScheduleIntervalData.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKMedicationScheduleIntervalData, &qword_2555448B0, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_21FB8A280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DB78, &qword_255544140, a2);
}

unint64_t sub_21FB8A29C()
{
  return 0xD00000000000003BLL;
}

uint64_t sub_21FB8A2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationScheduleIntervalData.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FB8A2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationScheduleIntervalData.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FB8A2E0()
{
  sub_21FA2A08C(&qword_25554A4E8, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
  return sub_21FC5AD70();
}

uint64_t sub_21FB8A330@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB70, (uint64_t)qword_255544128, a1);
}

uint64_t sub_21FB8A34C()
{
  sub_21FA2A08C(&qword_255544F80, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB8A38C()
{
  sub_21FA2A08C(&qword_255544F80, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
  return sub_21FC5AEA8();
}

uint64_t sub_21FB8A3DC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, sub_21FB89D70) & 1;
}

uint64_t sub_21FB8A404()
{
  uint64_t result;

  result = sub_21FC5B6AC();
  qword_255544148 = 0xD00000000000003BLL;
  unk_255544150 = 0x800000021FC78B80;
  return result;
}

uint64_t static PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.protoMessageName.getter()
{
  return sub_21FB4B638(&qword_25553DB80, &qword_255544148);
}

uint64_t sub_21FB8A498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_255544158);
  __swift_project_value_buffer(v0, (uint64_t)qword_255544158);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "sunday";
  *(_QWORD *)(v8 + 8) = 6;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "monday";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "tuesday";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "wednesday";
  *((_QWORD *)v16 + 1) = 9;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "thursday";
  *((_QWORD *)v18 + 1) = 8;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "friday";
  *((_QWORD *)v20 + 1) = 6;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "saturday";
  *((_QWORD *)v22 + 1) = 8;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DB88, (uint64_t)qword_255544158, a1);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          sub_21FC5ADAC();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_21FC5AECC(), !v1))
  {
    if (v0[1] != 1 || (result = sub_21FC5AECC(), !v1))
    {
      if (v0[2] != 1 || (result = sub_21FC5AECC(), !v1))
      {
        if (v0[3] != 1 || (result = sub_21FC5AECC(), !v1))
        {
          if (v0[4] != 1 || (result = sub_21FC5AECC(), !v1))
          {
            if (v0[5] != 1 || (result = sub_21FC5AECC(), !v1))
            {
              if (v0[6] != 1 || (result = sub_21FC5AECC(), !v1))
              {
                type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
                return sub_21FC5AD04();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, &qword_2555448B8, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_21FB8A9EC@<X0>(_DWORD *a1@<X8>)
{
  *(_DWORD *)((char *)a1 + 3) = 0;
  *a1 = 0;
  return sub_21FC5AD10();
}

uint64_t sub_21FB8AA10(uint64_t a1, uint64_t a2)
{
  return sub_21FB4BAF0(a1, a2, &qword_25553DB80, &qword_255544148);
}

uint64_t sub_21FB8AA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_21FB8AA70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 44);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_21FB8AAB0()
{
  return PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FB8AAC4()
{
  return PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.traverse<A>(visitor:)();
}

uint64_t sub_21FB8AAD8()
{
  sub_21FA2A08C(&qword_25554A4E0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  return sub_21FC5AD70();
}

uint64_t sub_21FB8AB28@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DB88, (uint64_t)qword_255544158, a1);
}

uint64_t sub_21FB8AB44()
{
  sub_21FA2A08C(&qword_255544F98, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  return sub_21FC5AE9C();
}

uint64_t sub_21FB8AB84()
{
  sub_21FA2A08C(&qword_255544F98, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  return sub_21FC5AEA8();
}

uint64_t _s19HealthRecordsDaemon12PBTimeSeriesV5ValueV20OneOf_AdditionalDataO2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (*((_BYTE *)a2 + 8) == 1)
  {
    if (v3)
    {
      if (v3 == 1)
      {
        if (v2 == 1)
          return 1;
      }
      else if (v2 == 2)
      {
        return 1;
      }
    }
    else if (!v2)
    {
      return 1;
    }
  }
  else if (v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_21FB8AC3C(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBWorkout, (uint64_t (*)(uint64_t, uint64_t))sub_21FB51948);
}

uint64_t _s19HealthRecordsDaemon8PBBucketV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
  {
    v11 = type metadata accessor for PBBucket(0);
    v12 = a1 + *(int *)(v11 + 28);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, a2 + *(int *)(v11 + 28), v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_21FC5B5D4();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s19HealthRecordsDaemon29PBMedicationTrackingDoseEventV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *a1;
  v12 = *a2;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    if (v11 != v12)
      goto LABEL_29;
    goto LABEL_11;
  }
  if (!v12)
  {
    if (!v11)
      goto LABEL_11;
LABEL_29:
    v14 = 0;
    return v14 & 1;
  }
  if (v12 != 1)
  {
    if (v11 == 2)
      goto LABEL_11;
    goto LABEL_29;
  }
  if (v11 != 1)
    goto LABEL_29;
LABEL_11:
  v13 = a2[2];
  if (*((_BYTE *)a2 + 24) == 1)
    __asm { BR              X11 }
  if (a1[2] != v13)
    goto LABEL_29;
  if (a1[4] == a2[4] && a1[5] == a2[5] || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if (a1[6] == a2[6] && a1[7] == a2[7] || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if (*((_DWORD *)a1 + 16) != *((_DWORD *)a2 + 16) || *((_DWORD *)a1 + 17) != *((_DWORD *)a2 + 17))
        goto LABEL_29;
      if (a1[9] == a2[9] && a1[10] == a2[10] || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        if (a1[11] == a2[11] && a1[12] == a2[12] || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
        {
          v15 = type metadata accessor for PBMedicationTrackingDoseEvent(0);
          v16 = (uint64_t)a1 + *(int *)(v15 + 48);
          v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
          v17(v10, v16, v4);
          v17(v8, (uint64_t)a2 + *(int *)(v15 + 48), v4);
          sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v14 = sub_21FC5B5D4();
          v18 = *(void (**)(char *, uint64_t))(v5 + 8);
          v18(v8, v4);
          v18(v10, v4);
        }
      }
    }
  }
  return v14 & 1;
}

uint64_t _s19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataV24HKReminderWeekdayOptionsV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;
  unsigned __int8 *v14;
  void (*v15)(char *, unsigned __int8 *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6])
  {
    v13 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
    v14 = &a1[*(int *)(v13 + 44)];
    v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v15(v10, v14, v4);
    v15(v8, &a2[*(int *)(v13 + 44)], v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v11 = sub_21FC5B5D4();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_21FB8B1E4(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBActivitySummarySeries, sub_21FB7F7D0);
}

uint64_t _s19HealthRecordsDaemon23PBActivitySummarySeriesV08ActivityE0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && *(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4)
    && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)
    && *(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12)
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
    && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20))
  {
    if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)
      || (v11 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v12 = type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
      v13 = a1 + *(int *)(v12 + 44);
      v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, v13, v4);
      v14(v8, a2 + *(int *)(v12 + 44), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v11 = sub_21FC5B5D4();
      v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s19HealthRecordsDaemon20PBMedicationTrackingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD **)(a2 + v11);
  if ((_QWORD *)v12 == v13 || (sub_21FB84C40(v12, v13) & 1) != 0)
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1, v4);
    v14(v8, a2, v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v15 = sub_21FC5B5D4();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s19HealthRecordsDaemon17PBHistogramSeriesV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if ((sub_21FB0F578(*a1, *a2) & 1) != 0)
  {
    v11 = a1[1] == a2[1] && a1[2] == a2[2];
    if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v13 = type metadata accessor for PBHistogramSeries(0);
      v14 = (char *)a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, (char *)a2 + *(int *)(v13 + 24), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon17PBHistogramSeriesV5ValueV2eeoiySbAE_AEtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if ((sub_21FB0F954(a1[2], *((_QWORD *)a2 + 2)) & 1) != 0)
    {
      if (a1[3] == *((_QWORD *)a2 + 3) && a1[4] == *((_QWORD *)a2 + 4) || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        v13 = type metadata accessor for PBHistogramSeries.Value(0);
        v14 = (char *)a1 + *(int *)(v13 + 28);
        v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v15(v10, v14, v4);
        v15(v8, &a2[*(int *)(v13 + 28)], v4);
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_21FC5B5D4();
        v16 = *(void (**)(char *, uint64_t))(v5 + 8);
        v16(v8, v4);
        v16(v10, v4);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon17PBHKCodedQuantityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if (*(float *)(a1 + 32) == *(float *)(a2 + 32))
      {
        if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
          || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
        {
          if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64)
            || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
          {
            if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80)
              || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
            {
              v14 = type metadata accessor for PBHKCodedQuantity(0);
              v15 = a1 + *(int *)(v14 + 40);
              v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
              v16(v10, v15, v4);
              v16(v8, a2 + *(int *)(v14 + 40), v4);
              sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
              v12 = sub_21FC5B5D4();
              v17 = *(void (**)(char *, uint64_t))(v5 + 8);
              v17(v8, v4);
              v17(v10, v4);
            }
          }
        }
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_21FB8B9A4(_QWORD *a1, char *a2)
{
  return sub_21FB8D4A0(a1, a2, type metadata accessor for PBCharacteristics);
}

uint64_t _s19HealthRecordsDaemon16PBECGMeasurementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if (*(float *)(a1 + 16) != *(float *)(a2 + 16))
      goto LABEL_24;
    if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)
      || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
        || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64)
          || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
        {
          if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80)
            || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
          {
            if ((sub_21FB0E158(*(_QWORD **)(a1 + 88), *(_QWORD **)(a2 + 88)) & 1) != 0
              && sub_21FB0FB44(*(_QWORD *)(a1 + 96), *(_QWORD *)(a2 + 96))
              && *(float *)(a1 + 104) == *(float *)(a2 + 104)
              && sub_21FA2E028(*(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120), *(_QWORD *)(a2 + 112), *(_BYTE *)(a2 + 120)))
            {
              v13 = type metadata accessor for PBECGMeasurement(0);
              v14 = a1 + *(int *)(v13 + 56);
              v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
              v15(v10, v14, v4);
              v15(v8, a2 + *(int *)(v13 + 56), v4);
              sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
              v12 = sub_21FC5B5D4();
              v16 = *(void (**)(char *, uint64_t))(v5 + 8);
              v16(v8, v4);
              v16(v10, v4);
              return v12 & 1;
            }
LABEL_24:
            v12 = 0;
          }
        }
      }
    }
  }
  return v12 & 1;
}

void _s19HealthRecordsDaemon16PBClinicalRecordV013OneOf_MedicalE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a1;
  v57 = a2;
  v2 = type metadata accessor for PBHKMedicationRecord(0);
  MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PBHKProcedureRecord(0);
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for PBHKAccountOwner(0);
  MEMORY[0x24BDAC7A8](v41);
  v51 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBHKDiagnosticTestReport(0);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PBHKDiagnosticTestResult(0);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PBHKMedicationOrder(0);
  MEMORY[0x24BDAC7A8](v11);
  v46 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  MEMORY[0x24BDAC7A8](v13);
  v45 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PBHKVaccinationRecord(0);
  MEMORY[0x24BDAC7A8](v15);
  v44 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PBHKConditionRecord(0);
  MEMORY[0x24BDAC7A8](v17);
  v43 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PBHKAllergyRecord(0);
  MEMORY[0x24BDAC7A8](v19);
  v42 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v54 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v53 = (char *)&v40 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v55 = (char *)&v40 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v52 = (char *)&v40 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v34 = MEMORY[0x24BDAC7A8](v33);
  MEMORY[0x24BDAC7A8](v34);
  sub_21FA48FCC(0, &qword_25554A808, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v40 + *(int *)(v36 + 48) - v37;
  sub_21FA2D120(v56, (uint64_t)&v40 - v37, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  sub_21FA2D120(v57, (uint64_t)v38, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v39 = (char *)sub_21FB8C020 + 4 * word_21FC66716[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21FB8C020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  sub_21FA2D120(v0, v2, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_21FA326EC(v2, type metadata accessor for PBHKAllergyRecord);
    sub_21FB9E564(v0, &qword_25554A808, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    v4 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 208);
    sub_21FA2D23C(v1, v6, type metadata accessor for PBHKAllergyRecord);
    v4 = sub_21FA449D4(v2, v6, type metadata accessor for PBHKAllergyRecord, (uint64_t (*)(uint64_t, uint64_t))sub_21FB59E20);
    sub_21FA326EC(v6, type metadata accessor for PBHKAllergyRecord);
    sub_21FA326EC(v2, type metadata accessor for PBHKAllergyRecord);
    sub_21FA326EC(v0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  return v4 & 1;
}

uint64_t sub_21FB8C648(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCategorySeries, sub_21FB4DB90);
}

void _s19HealthRecordsDaemon16PBCategorySeriesV5EventV20OneOf_AdditionalDataO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;

  v17 = a2;
  v16[0] = type metadata accessor for PBCategorySeries.Range(0);
  MEMORY[0x24BDAC7A8](v16[0]);
  v16[1] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v16[2] = (char *)v16 - v10;
  sub_21FA48FCC(0, &qword_25554A810, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 + *(int *)(v12 + 48) - v13;
  sub_21FA2D120(a1, (uint64_t)v16 - v13, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  sub_21FA2D120(v17, (uint64_t)v14, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v15 = (char *)sub_21FB8C81C + 4 * byte_21FC6672A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21FB8C81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  char v6;

  v3 = *(_DWORD **)(v2 - 96);
  sub_21FA2D120(v0, (uint64_t)v3, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBCategorySeries.Range);
    sub_21FB9E564(v0, &qword_25554A810, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_8:
    v6 = 0;
    return v6 & 1;
  }
  v4 = v1;
  v5 = *(_DWORD **)(v2 - 104);
  sub_21FA2D23C(v4, (uint64_t)v5, type metadata accessor for PBCategorySeries.Range);
  if (*v3 != *v5
    || v3[1] != v5[1]
    || (sub_21FC5AD1C(),
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]),
        (sub_21FC5B5D4() & 1) == 0))
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Range);
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBCategorySeries.Range);
    sub_21FA326EC(v0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_8;
  }
  sub_21FA326EC((uint64_t)v5, type metadata accessor for PBCategorySeries.Range);
  sub_21FA326EC((uint64_t)v3, type metadata accessor for PBCategorySeries.Range);
  sub_21FA326EC(v0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  v6 = 1;
  return v6 & 1;
}

uint64_t sub_21FB8CBA8(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCycleTracking, sub_21FB79F74);
}

uint64_t sub_21FB8CBBC(_DWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = sub_21FC5AD1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  if (*a1 == *(_DWORD *)a2 && a1[1] == *((_DWORD *)a2 + 1))
  {
    v13 = a3(0);
    v14 = (char *)a1 + *(int *)(v13 + 24);
    v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v15(v12, v14, v6);
    v15(v10, &a2[*(int *)(v13 + 24)], v6);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = sub_21FC5B5D4();
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v10, v6);
    v17(v12, v6);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_21FB8CD04(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBCycleTracking.Event, sub_21FB7C9F8);
}

uint64_t _s19HealthRecordsDaemon15PBCycleTrackingV5CycleV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if ((sub_21FB0FBB0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
        && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40)
        && *(_DWORD *)(a1 + 44) == *(_DWORD *)(a2 + 44))
      {
        v14 = type metadata accessor for PBCycleTracking.Cycle(0);
        v15 = a1 + *(int *)(v14 + 36);
        v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v16(v10, v15, v4);
        v16(v8, a2 + *(int *)(v14 + 36), v4);
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_21FC5B5D4();
        v17 = *(void (**)(char *, uint64_t))(v5 + 8);
        v17(v8, v4);
        v17(v10, v4);
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon14PBSleepSummaryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_21FB0FBC4(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0 && *(float *)(a1 + 8) == *(float *)(a2 + 8))
  {
    v11 = type metadata accessor for PBSleepSummary(0);
    v12 = a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, a2 + *(int *)(v11 + 24), v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_21FC5B5D4();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s19HealthRecordsDaemon14PBSleepSummaryV8ScheduleV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  void (*v13)(char *, unsigned __int8 *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6]
    && *((_DWORD *)a1 + 2) == *((_DWORD *)a2 + 2)
    && *((_DWORD *)a1 + 3) == *((_DWORD *)a2 + 3))
  {
    v11 = type metadata accessor for PBSleepSummary.Schedule(0);
    v12 = &a1[*(int *)(v11 + 52)];
    v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 52)], v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_21FC5B5D4();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s19HealthRecordsDaemon13PBSleepSeriesV5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if (*(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
      && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20)
      && *(_DWORD *)(a1 + 24) == *(_DWORD *)(a2 + 24))
    {
      v13 = type metadata accessor for PBSleepSeries.Value(0);
      v14 = a1 + *(int *)(v13 + 32);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 32), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_21FB8D324(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBPatientMeta, sub_21FB815C4);
}

uint64_t sub_21FB8D338(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v6 = sub_21FC5AD1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  v13 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v13 || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v15 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v15 || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v16 = a3(0);
      v17 = (char *)a1 + *(int *)(v16 + 24);
      v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v18(v12, v17, v6);
      v18(v10, &a2[*(int *)(v16 + 24)], v6);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_21FC5B5D4();
      v19 = *(void (**)(char *, uint64_t))(v7 + 8);
      v19(v10, v6);
      v19(v12, v6);
    }
  }
  return v14 & 1;
}

uint64_t sub_21FB8D4A0(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v6 = sub_21FC5AD1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  v13 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v13 || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v15 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v15 || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if (a1[4] == *((_QWORD *)a2 + 4) && a1[5] == *((_QWORD *)a2 + 5) || (v14 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        v16 = a3(0);
        v17 = (char *)a1 + *(int *)(v16 + 28);
        v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v18(v12, v17, v6);
        v18(v10, &a2[*(int *)(v16 + 28)], v6);
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v14 = sub_21FC5B5D4();
        v19 = *(void (**)(char *, uint64_t))(v7 + 8);
        v19(v10, v6);
        v19(v12, v6);
      }
    }
  }
  return v14 & 1;
}

uint64_t sub_21FB8D630(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  void (*v16)(char *, unsigned __int8 *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = sub_21FC5AD1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    v14 = a3(0);
    v15 = &a1[*(int *)(v14 + 24)];
    v16 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16);
    v16(v12, v15, v6);
    v16(v10, &a2[*(int *)(v14 + 24)], v6);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v13 = sub_21FC5B5D4();
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v10, v6);
    v17(v12, v6);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s19HealthRecordsDaemon12PBTimeSeriesV5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  if (*(float *)a1 != *(float *)a2
    || *(float *)(a1 + 4) != *(float *)(a2 + 4)
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(float *)(a1 + 12) != *(float *)(a2 + 12)
    || *(float *)(a1 + 16) != *(float *)(a2 + 16))
  {
    goto LABEL_34;
  }
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)
    || (v11 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if (*(_DWORD *)(a1 + 40) != *(_DWORD *)(a2 + 40))
      goto LABEL_34;
    if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
      || (v11 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64) && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72)
        || (v11 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        if (*(double *)(a1 + 80) != *(double *)(a2 + 80)
          || *(double *)(a1 + 88) != *(double *)(a2 + 88)
          || *(double *)(a1 + 96) != *(double *)(a2 + 96)
          || *(double *)(a1 + 104) != *(double *)(a2 + 104)
          || *(double *)(a1 + 112) != *(double *)(a2 + 112)
          || (sub_21FB0E158(*(_QWORD **)(a1 + 120), *(_QWORD **)(a2 + 120)) & 1) == 0)
        {
          goto LABEL_34;
        }
        if ((*(_BYTE *)(a1 + 137) & 1) != 0)
        {
          if ((*(_BYTE *)(a2 + 137) & 1) == 0)
            goto LABEL_34;
          goto LABEL_28;
        }
        if ((*(_BYTE *)(a2 + 137) & 1) == 0)
        {
          v12 = *(_QWORD *)(a1 + 128);
          v13 = *(_QWORD *)(a2 + 128);
          if ((*(_BYTE *)(a2 + 136) & 1) != 0)
          {
            if (v13)
            {
              if (v13 == 1)
              {
                if (v12 == 1)
                  goto LABEL_28;
              }
              else if (v12 == 2)
              {
                goto LABEL_28;
              }
            }
            else if (!v12)
            {
              goto LABEL_28;
            }
          }
          else if (v12 == v13)
          {
LABEL_28:
            v14 = type metadata accessor for PBTimeSeries.Value(0);
            v15 = a1 + *(int *)(v14 + 80);
            v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
            v16(v10, v15, v4);
            v16(v8, a2 + *(int *)(v14 + 80), v4);
            sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v11 = sub_21FC5B5D4();
            v17 = *(void (**)(char *, uint64_t))(v5 + 8);
            v17(v8, v4);
            v17(v10, v4);
            return v11 & 1;
          }
        }
LABEL_34:
        v11 = 0;
      }
    }
  }
  return v11 & 1;
}

uint64_t sub_21FB8DA2C(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBTimeSeries, sub_21FB498A4);
}

uint64_t _s19HealthRecordsDaemon9PBECGMetaV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    if (*(float *)(a1 + 16) != *(float *)(a2 + 16))
      goto LABEL_23;
    if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)
      || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
        || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64)
          || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
        {
          if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80)
            || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
          {
            if ((sub_21FB0E158(*(_QWORD **)(a1 + 88), *(_QWORD **)(a2 + 88)) & 1) != 0
              && *(float *)(a1 + 96) == *(float *)(a2 + 96)
              && sub_21FA2E028(*(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112), *(_QWORD *)(a2 + 104), *(_BYTE *)(a2 + 112)))
            {
              v13 = type metadata accessor for PBECGMeta(0);
              v14 = a1 + *(int *)(v13 + 52);
              v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
              v15(v10, v14, v4);
              v15(v8, a2 + *(int *)(v13 + 52), v4);
              sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
              v12 = sub_21FC5B5D4();
              v16 = *(void (**)(char *, uint64_t))(v5 + 8);
              v16(v8, v4);
              v16(v10, v4);
              return v12 & 1;
            }
LABEL_23:
            v12 = 0;
          }
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    v13 = a1[2] == *(_QWORD *)(a2 + 16) && a1[3] == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v14 = *(_QWORD *)(a2 + 32);
      if (*(_BYTE *)(a2 + 40) == 1)
        __asm { BR              X11 }
      if (a1[4] == v14)
      {
        v15 = type metadata accessor for PBDateRange(0);
        v16 = (char *)a1 + *(int *)(v15 + 28);
        v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v17(v10, v16, v4);
        v17(v8, (char *)(a2 + *(int *)(v15 + 28)), v4);
        sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_21FC5B5D4();
        v18 = *(void (**)(char *, uint64_t))(v5 + 8);
        v18(v8, v4);
        v18(v10, v4);
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon10PBQuantityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if (*(double *)a1 == *(double *)a2)
  {
    v11 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
    if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v13 = type metadata accessor for PBQuantity(0);
      v14 = a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 24), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t type metadata accessor for PBECGMeta(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546BA0);
}

uint64_t type metadata accessor for PBTimeSeries._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547648);
}

uint64_t type metadata accessor for PBTimeSeries.Value(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545128);
}

uint64_t type metadata accessor for PBClinicalRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545A50);
}

uint64_t type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545AF8);
}

uint64_t type metadata accessor for PBHKAllergyRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545CB0);
}

uint64_t type metadata accessor for PBHKConditionRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545DD0);
}

uint64_t type metadata accessor for PBHKVaccinationRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545E60);
}

uint64_t type metadata accessor for PBHKMedicationDispenseRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546138);
}

uint64_t type metadata accessor for PBHKMedicationOrder(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555461C8);
}

uint64_t type metadata accessor for PBHKDiagnosticTestResult(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546258);
}

uint64_t type metadata accessor for PBHKDiagnosticTestReport(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546668);
}

uint64_t type metadata accessor for PBHKAccountOwner(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555466F8);
}

uint64_t type metadata accessor for PBHKProcedureRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546790);
}

uint64_t type metadata accessor for PBHKMedicationRecord(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555460A8);
}

uint64_t type metadata accessor for PBMedicationTracking(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547128);
}

uint64_t type metadata accessor for PBPatientMeta._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255549D38);
}

uint64_t type metadata accessor for PBPatientMeta.HumanName(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547000);
}

uint64_t type metadata accessor for PBPatientMeta.CHRMeta(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546ED0);
}

uint64_t type metadata accessor for PBMedicationTrackingSchedule(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547388);
}

uint64_t type metadata accessor for PBMedicationTrackingSchedule._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554A1C8);
}

uint64_t type metadata accessor for PBHKMedicationScheduleIntervalData(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547540);
}

uint64_t type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555475D0);
}

uint64_t type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554A3B8);
}

uint64_t type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547418);
}

uint64_t type metadata accessor for PBHKInspectableValueCollection(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546410);
}

uint64_t type metadata accessor for PBHKInspectableValueCollection._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255549058);
}

uint64_t type metadata accessor for PBHKInspectableValue(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555464A0);
}

uint64_t type metadata accessor for PBHKInspectableValue._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555491C8);
}

uint64_t type metadata accessor for PBHKCodedQuantity(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555465C0);
}

uint64_t type metadata accessor for PBHKRatioValue(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546378);
}

uint64_t type metadata accessor for PBHKConcept(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545C20);
}

uint64_t type metadata accessor for PBHKConcept._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547D38);
}

_QWORD *sub_21FB8E248(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v18;
  uint64_t v19;

  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v19 = (uint64_t)&v18 - v4;
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  v1[6] = 0;
  v1[7] = 0xE000000000000000;
  v5 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  v6 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
  *((_BYTE *)v1
  + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory) = 0;
  swift_beginAccess();
  v9 = a1[2];
  v8 = a1[3];
  swift_beginAccess();
  v1[2] = v9;
  v1[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v11 = a1[4];
  v10 = a1[5];
  swift_beginAccess();
  v1[4] = v11;
  v1[5] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = a1[6];
  v12 = a1[7];
  swift_beginAccess();
  v1[6] = v13;
  v1[7] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  v15 = v19;
  sub_21FA44968(v14, v19, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_beginAccess();
  sub_21FA2D2D8(v15, v5, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v16 = (char *)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
  swift_beginAccess();
  LOBYTE(v16) = *v16;
  swift_beginAccess();
  *v7 = (_BYTE)v16;
  return v1;
}

uint64_t type metadata accessor for PBHKReferenceRange(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555462E8);
}

uint64_t type metadata accessor for PBHKReferenceRange._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548F68);
}

uint64_t type metadata accessor for PBHKCodedValue(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546530);
}

uint64_t type metadata accessor for PBHKCodedValue._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255549438);
}

uint64_t type metadata accessor for PBClinicalRecord._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547B88);
}

_QWORD *sub_21FB8E53C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (uint64_t)&v41 - v6;
  sub_21FA2D1A0(0, &qword_255540590, type metadata accessor for PBHKConcept, v4);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (uint64_t)&v41 - v8;
  v2[2] = 0;
  v2[3] = 0xE000000000000000;
  v2[4] = 0;
  v2[5] = 0xE000000000000000;
  v9 = (char *)v2
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  v42 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  v10 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  v44 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  v12 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v14 = (_QWORD *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  *v14 = 0;
  v14[1] = 0xE000000000000000;
  v15 = (_QWORD *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  v46 = (_QWORD *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  v16 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  v47 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  swift_beginAccess();
  v18 = a1[2];
  v17 = a1[3];
  swift_beginAccess();
  v2[2] = v18;
  v2[3] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v20 = a1[4];
  v19 = a1[5];
  swift_beginAccess();
  v2[4] = v20;
  v2[5] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  v22 = v43;
  sub_21FA44968(v21, v43, &qword_255540590, type metadata accessor for PBHKConcept);
  v23 = (uint64_t)v42;
  swift_beginAccess();
  sub_21FA2D2D8(v22, v23, &qword_255540590, type metadata accessor for PBHKConcept);
  swift_endAccess();
  v24 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  v25 = v45;
  sub_21FA44968(v24, v45, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  v26 = (uint64_t)v44;
  swift_beginAccess();
  sub_21FA2D2D8(v25, v26, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_endAccess();
  v27 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  v29 = *v27;
  v28 = v27[1];
  swift_beginAccess();
  *v13 = v29;
  v13[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  swift_beginAccess();
  v32 = *v30;
  v31 = v30[1];
  swift_beginAccess();
  *v14 = v32;
  v14[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  v35 = *v33;
  v34 = v33[1];
  v36 = v46;
  swift_beginAccess();
  *v36 = v35;
  v36[1] = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = (char *)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  swift_beginAccess();
  v38 = *(_QWORD *)v37;
  LOBYTE(v37) = v37[8];
  v39 = v47;
  swift_beginAccess();
  *(_QWORD *)v39 = v38;
  v39[8] = (char)v37;
  return v2;
}

uint64_t type metadata accessor for PBSleepSeries.Value(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545450);
}

uint64_t type metadata accessor for PBHKDiagnosticTestResult._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548CD8);
}

uint64_t type metadata accessor for PBHistogramSeries.Value(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545328);
}

uint64_t type metadata accessor for PBBucket(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555451F8);
}

uint64_t type metadata accessor for PBGeneralMedication(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546018);
}

uint64_t type metadata accessor for PBHKMedicationRecord._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548808);
}

uint64_t type metadata accessor for PBGeneralMedication._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548698);
}

uint64_t type metadata accessor for PBHKMedicationOrder._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548B28);
}

uint64_t type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555489D8);
}

uint64_t type metadata accessor for PBMedicationDosage(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545EF0);
}

uint64_t type metadata accessor for PBMedicationDosage._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555485A8);
}

uint64_t type metadata accessor for PBSleepSummary.Schedule(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545588);
}

uint64_t type metadata accessor for PBCategorySeries.Range(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555456C8);
}

uint64_t type metadata accessor for PBWorkout._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555479D8);
}

uint64_t sub_21FB8EAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v21 = (uint64_t)&v20 - v5;
  *(_QWORD *)(v1 + 24) = 0;
  v6 = (_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  v8 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v22 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
  *v22 = 0;
  v23 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
  *v23 = 0;
  swift_beginAccess();
  v9 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v9;
  swift_beginAccess();
  v10 = *(_DWORD *)(a1 + 20);
  swift_beginAccess();
  *(_DWORD *)(v2 + 20) = v10;
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  swift_beginAccess();
  *v6 = v11;
  *(_BYTE *)(v2 + 32) = v12;
  swift_beginAccess();
  LODWORD(v11) = *(_DWORD *)(a1 + 36);
  swift_beginAccess();
  *(_DWORD *)(v2 + 36) = v11;
  swift_beginAccess();
  LODWORD(v11) = *(_DWORD *)(a1 + 40);
  swift_beginAccess();
  *(_DWORD *)(v2 + 40) = v11;
  v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  v14 = v21;
  sub_21FA44968(v13, v21, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_21FA2D2D8(v14, v7, &qword_25553E0F8, type metadata accessor for PBDateRange);
  swift_endAccess();
  v15 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
  swift_beginAccess();
  LODWORD(v15) = *v15;
  v16 = v22;
  swift_beginAccess();
  *v16 = (_DWORD)v15;
  v17 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
  swift_beginAccess();
  LODWORD(v17) = *v17;
  v18 = v23;
  swift_beginAccess();
  *v18 = (_DWORD)v17;
  return v2;
}

uint64_t type metadata accessor for PBFHIRIdentifier(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545B88);
}

uint64_t type metadata accessor for PBHKAllergyRecord._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547E88);
}

uint64_t type metadata accessor for PBHKAllergyReaction(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545D40);
}

uint64_t type metadata accessor for PBHKAllergyReaction._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548038);
}

uint64_t type metadata accessor for PBHKConditionRecord._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548148);
}

uint64_t type metadata accessor for PBHKVaccinationRecord._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255548338);
}

uint64_t type metadata accessor for PBQuantity(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255545F80);
}

uint64_t type metadata accessor for PBHKDiagnosticTestReport._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255549548);
}

uint64_t type metadata accessor for PBHKProcedureRecord._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555496D8);
}

uint64_t type metadata accessor for PBCycleTracking._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255549928);
}

uint64_t type metadata accessor for PBCycleTracking.Range(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555468B0);
}

uint64_t type metadata accessor for PBCycleTracking.SexualActivity(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546948);
}

uint64_t type metadata accessor for PBCycleTracking.Event(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_2555469E0);
}

uint64_t type metadata accessor for PBCycleTracking.Event._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255549A98);
}

uint64_t type metadata accessor for PBCycleTracking.Cycle(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546A70);
}

uint64_t type metadata accessor for PBActivitySummarySeries._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255549C48);
}

uint64_t type metadata accessor for PBActivitySummarySeries.ActivitySummary(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546D98);
}

uint64_t type metadata accessor for PBPatientMeta.HeartRateMeds(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255546F68);
}

uint64_t type metadata accessor for PBMedicationTracking._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PBMedicationTrackingDoseEvent(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_255547248);
}

unint64_t sub_21FB8EF7C()
{
  unint64_t result;

  result = qword_255544658;
  if (!qword_255544658)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBGranularity, &type metadata for PBGranularity);
    atomic_store(result, (unint64_t *)&qword_255544658);
  }
  return result;
}

unint64_t sub_21FB8EFC0()
{
  unint64_t result;

  result = qword_255544670;
  if (!qword_255544670)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBGlucoseMealTime, &type metadata for PBGlucoseMealTime);
    atomic_store(result, (unint64_t *)&qword_255544670);
  }
  return result;
}

unint64_t sub_21FB8F004()
{
  unint64_t result;

  result = qword_255544800;
  if (!qword_255544800)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBECGClassification, &type metadata for PBECGClassification);
    atomic_store(result, (unint64_t *)&qword_255544800);
  }
  return result;
}

unint64_t sub_21FB8F048()
{
  unint64_t result;

  result = qword_255544868;
  if (!qword_255544868)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.Status, &type metadata for PBMedicationTrackingDoseEvent.Status);
    atomic_store(result, (unint64_t *)&qword_255544868);
  }
  return result;
}

unint64_t sub_21FB8F08C()
{
  unint64_t result;

  result = qword_255544870;
  if (!qword_255544870)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.LogOrigin, &type metadata for PBMedicationTrackingDoseEvent.LogOrigin);
    atomic_store(result, (unint64_t *)&qword_255544870);
  }
  return result;
}

unint64_t sub_21FB8F0D4()
{
  unint64_t result;

  result = qword_2555448C0;
  if (!qword_2555448C0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueCollectionType, &type metadata for PBInspectableValueCollectionType);
    atomic_store(result, (unint64_t *)&qword_2555448C0);
  }
  return result;
}

unint64_t sub_21FB8F11C()
{
  unint64_t result;

  result = qword_2555448C8;
  if (!qword_2555448C8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueCollectionType, &type metadata for PBInspectableValueCollectionType);
    atomic_store(result, (unint64_t *)&qword_2555448C8);
  }
  return result;
}

unint64_t sub_21FB8F164()
{
  unint64_t result;

  result = qword_2555448D0;
  if (!qword_2555448D0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueCollectionType, &type metadata for PBInspectableValueCollectionType);
    atomic_store(result, (unint64_t *)&qword_2555448D0);
  }
  return result;
}

uint64_t sub_21FB8F1A8()
{
  return sub_21FB095AC(&qword_2555448D8, &qword_2555448E0);
}

unint64_t sub_21FB8F1D8()
{
  unint64_t result;

  result = qword_2555448E8;
  if (!qword_2555448E8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueType, &type metadata for PBInspectableValueType);
    atomic_store(result, (unint64_t *)&qword_2555448E8);
  }
  return result;
}

unint64_t sub_21FB8F220()
{
  unint64_t result;

  result = qword_2555448F0;
  if (!qword_2555448F0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueType, &type metadata for PBInspectableValueType);
    atomic_store(result, (unint64_t *)&qword_2555448F0);
  }
  return result;
}

unint64_t sub_21FB8F268()
{
  unint64_t result;

  result = qword_2555448F8;
  if (!qword_2555448F8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueType, &type metadata for PBInspectableValueType);
    atomic_store(result, (unint64_t *)&qword_2555448F8);
  }
  return result;
}

uint64_t sub_21FB8F2AC()
{
  return sub_21FB095AC(&qword_255544900, &qword_255544908);
}

unint64_t sub_21FB8F2DC()
{
  unint64_t result;

  result = qword_255544910;
  if (!qword_255544910)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBClinicalRecord.MedicalRecordOriginType, &type metadata for PBClinicalRecord.MedicalRecordOriginType);
    atomic_store(result, (unint64_t *)&qword_255544910);
  }
  return result;
}

unint64_t sub_21FB8F324()
{
  unint64_t result;

  result = qword_255544918;
  if (!qword_255544918)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBClinicalRecord.MedicalRecordOriginType, &type metadata for PBClinicalRecord.MedicalRecordOriginType);
    atomic_store(result, (unint64_t *)&qword_255544918);
  }
  return result;
}

unint64_t sub_21FB8F36C()
{
  unint64_t result;

  result = qword_255544920;
  if (!qword_255544920)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBClinicalRecord.MedicalRecordOriginType, &type metadata for PBClinicalRecord.MedicalRecordOriginType);
    atomic_store(result, (unint64_t *)&qword_255544920);
  }
  return result;
}

uint64_t sub_21FB8F3B0()
{
  return sub_21FB095AC(&qword_255544928, &qword_255544930);
}

unint64_t sub_21FB8F3E0()
{
  unint64_t result;

  result = qword_255544938;
  if (!qword_255544938)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBHKMedicationRecord.HKClinicalReferencedActorType, &type metadata for PBHKMedicationRecord.HKClinicalReferencedActorType);
    atomic_store(result, (unint64_t *)&qword_255544938);
  }
  return result;
}

unint64_t sub_21FB8F428()
{
  unint64_t result;

  result = qword_255544940;
  if (!qword_255544940)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBHKMedicationRecord.HKClinicalReferencedActorType, &type metadata for PBHKMedicationRecord.HKClinicalReferencedActorType);
    atomic_store(result, (unint64_t *)&qword_255544940);
  }
  return result;
}

unint64_t sub_21FB8F470()
{
  unint64_t result;

  result = qword_255544948;
  if (!qword_255544948)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBHKMedicationRecord.HKClinicalReferencedActorType, &type metadata for PBHKMedicationRecord.HKClinicalReferencedActorType);
    atomic_store(result, (unint64_t *)&qword_255544948);
  }
  return result;
}

uint64_t sub_21FB8F4B4()
{
  return sub_21FB095AC(&qword_255544950, &qword_255544958);
}

unint64_t sub_21FB8F4E4()
{
  unint64_t result;

  result = qword_255544960;
  if (!qword_255544960)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.Flow, &type metadata for PBCycleTracking.Flow);
    atomic_store(result, (unint64_t *)&qword_255544960);
  }
  return result;
}

unint64_t sub_21FB8F52C()
{
  unint64_t result;

  result = qword_255544968;
  if (!qword_255544968)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.Flow, &type metadata for PBCycleTracking.Flow);
    atomic_store(result, (unint64_t *)&qword_255544968);
  }
  return result;
}

unint64_t sub_21FB8F574()
{
  unint64_t result;

  result = qword_255544970;
  if (!qword_255544970)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.Flow, &type metadata for PBCycleTracking.Flow);
    atomic_store(result, (unint64_t *)&qword_255544970);
  }
  return result;
}

unint64_t sub_21FB8F5BC()
{
  unint64_t result;

  result = qword_255544978;
  if (!qword_255544978)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.OvulationTestResult, &type metadata for PBCycleTracking.OvulationTestResult);
    atomic_store(result, (unint64_t *)&qword_255544978);
  }
  return result;
}

unint64_t sub_21FB8F604()
{
  unint64_t result;

  result = qword_255544980;
  if (!qword_255544980)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.OvulationTestResult, &type metadata for PBCycleTracking.OvulationTestResult);
    atomic_store(result, (unint64_t *)&qword_255544980);
  }
  return result;
}

unint64_t sub_21FB8F64C()
{
  unint64_t result;

  result = qword_255544988;
  if (!qword_255544988)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.OvulationTestResult, &type metadata for PBCycleTracking.OvulationTestResult);
    atomic_store(result, (unint64_t *)&qword_255544988);
  }
  return result;
}

unint64_t sub_21FB8F694()
{
  unint64_t result;

  result = qword_255544990;
  if (!qword_255544990)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.CervicalMucusQuality, &type metadata for PBCycleTracking.CervicalMucusQuality);
    atomic_store(result, (unint64_t *)&qword_255544990);
  }
  return result;
}

unint64_t sub_21FB8F6DC()
{
  unint64_t result;

  result = qword_255544998;
  if (!qword_255544998)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.CervicalMucusQuality, &type metadata for PBCycleTracking.CervicalMucusQuality);
    atomic_store(result, (unint64_t *)&qword_255544998);
  }
  return result;
}

unint64_t sub_21FB8F724()
{
  unint64_t result;

  result = qword_2555449A0;
  if (!qword_2555449A0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.CervicalMucusQuality, &type metadata for PBCycleTracking.CervicalMucusQuality);
    atomic_store(result, (unint64_t *)&qword_2555449A0);
  }
  return result;
}

uint64_t sub_21FB8F768()
{
  return sub_21FB095AC(&qword_2555449A8, &qword_2555449B0);
}

uint64_t sub_21FB8F794()
{
  return sub_21FB095AC(&qword_2555449B8, &qword_2555449C0);
}

uint64_t sub_21FB8F7C0()
{
  return sub_21FB095AC(&qword_2555449C8, &qword_2555449D0);
}

unint64_t sub_21FB8F7F0()
{
  unint64_t result;

  result = qword_2555449D8;
  if (!qword_2555449D8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextForm, &type metadata for PBMedicationTracking.MedicationFreeTextForm);
    atomic_store(result, (unint64_t *)&qword_2555449D8);
  }
  return result;
}

unint64_t sub_21FB8F838()
{
  unint64_t result;

  result = qword_2555449E0;
  if (!qword_2555449E0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextForm, &type metadata for PBMedicationTracking.MedicationFreeTextForm);
    atomic_store(result, (unint64_t *)&qword_2555449E0);
  }
  return result;
}

unint64_t sub_21FB8F880()
{
  unint64_t result;

  result = qword_2555449E8;
  if (!qword_2555449E8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextForm, &type metadata for PBMedicationTracking.MedicationFreeTextForm);
    atomic_store(result, (unint64_t *)&qword_2555449E8);
  }
  return result;
}

unint64_t sub_21FB8F8C8()
{
  unint64_t result;

  result = qword_2555449F0;
  if (!qword_2555449F0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextLoggingUnit, &type metadata for PBMedicationTracking.MedicationFreeTextLoggingUnit);
    atomic_store(result, (unint64_t *)&qword_2555449F0);
  }
  return result;
}

unint64_t sub_21FB8F910()
{
  unint64_t result;

  result = qword_2555449F8;
  if (!qword_2555449F8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextLoggingUnit, &type metadata for PBMedicationTracking.MedicationFreeTextLoggingUnit);
    atomic_store(result, (unint64_t *)&qword_2555449F8);
  }
  return result;
}

unint64_t sub_21FB8F958()
{
  unint64_t result;

  result = qword_255544A00;
  if (!qword_255544A00)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextLoggingUnit, &type metadata for PBMedicationTracking.MedicationFreeTextLoggingUnit);
    atomic_store(result, (unint64_t *)&qword_255544A00);
  }
  return result;
}

uint64_t sub_21FB8F99C()
{
  return sub_21FB095AC(&qword_255544A08, &qword_255544A10);
}

uint64_t sub_21FB8F9C8()
{
  return sub_21FB095AC(&qword_255544A18, &qword_255544A20);
}

unint64_t sub_21FB8F9F8()
{
  unint64_t result;

  result = qword_255544A28;
  if (!qword_255544A28)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.LogOrigin, &type metadata for PBMedicationTrackingDoseEvent.LogOrigin);
    atomic_store(result, (unint64_t *)&qword_255544A28);
  }
  return result;
}

unint64_t sub_21FB8FA40()
{
  unint64_t result;

  result = qword_255544A30;
  if (!qword_255544A30)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.LogOrigin, &type metadata for PBMedicationTrackingDoseEvent.LogOrigin);
    atomic_store(result, (unint64_t *)&qword_255544A30);
  }
  return result;
}

unint64_t sub_21FB8FA88()
{
  unint64_t result;

  result = qword_255544A38;
  if (!qword_255544A38)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.LogOrigin, &type metadata for PBMedicationTrackingDoseEvent.LogOrigin);
    atomic_store(result, (unint64_t *)&qword_255544A38);
  }
  return result;
}

unint64_t sub_21FB8FAD0()
{
  unint64_t result;

  result = qword_255544A40;
  if (!qword_255544A40)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.Status, &type metadata for PBMedicationTrackingDoseEvent.Status);
    atomic_store(result, (unint64_t *)&qword_255544A40);
  }
  return result;
}

unint64_t sub_21FB8FB18()
{
  unint64_t result;

  result = qword_255544A48;
  if (!qword_255544A48)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.Status, &type metadata for PBMedicationTrackingDoseEvent.Status);
    atomic_store(result, (unint64_t *)&qword_255544A48);
  }
  return result;
}

unint64_t sub_21FB8FB60()
{
  unint64_t result;

  result = qword_255544A50;
  if (!qword_255544A50)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingDoseEvent.Status, &type metadata for PBMedicationTrackingDoseEvent.Status);
    atomic_store(result, (unint64_t *)&qword_255544A50);
  }
  return result;
}

uint64_t sub_21FB8FBA4()
{
  return sub_21FB095AC(&qword_255544A58, &qword_255544A60);
}

uint64_t sub_21FB8FBD0()
{
  return sub_21FB095AC(&qword_255544A68, &qword_255544A70);
}

unint64_t sub_21FB8FC00()
{
  unint64_t result;

  result = qword_255544A78;
  if (!qword_255544A78)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingSchedule.HKFrequencyType, &type metadata for PBMedicationTrackingSchedule.HKFrequencyType);
    atomic_store(result, (unint64_t *)&qword_255544A78);
  }
  return result;
}

unint64_t sub_21FB8FC48()
{
  unint64_t result;

  result = qword_255544A80;
  if (!qword_255544A80)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingSchedule.HKFrequencyType, &type metadata for PBMedicationTrackingSchedule.HKFrequencyType);
    atomic_store(result, (unint64_t *)&qword_255544A80);
  }
  return result;
}

unint64_t sub_21FB8FC90()
{
  unint64_t result;

  result = qword_255544A88;
  if (!qword_255544A88)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingSchedule.HKFrequencyType, &type metadata for PBMedicationTrackingSchedule.HKFrequencyType);
    atomic_store(result, (unint64_t *)&qword_255544A88);
  }
  return result;
}

uint64_t sub_21FB8FCD4()
{
  return sub_21FB095AC(&qword_255544A90, &qword_255544A98);
}

uint64_t sub_21FB8FD00()
{
  return sub_21FA2A08C(&qword_255544AA0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
}

uint64_t sub_21FB8FD2C()
{
  return sub_21FA2A08C(&qword_25553EAE0, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
}

uint64_t sub_21FB8FD58()
{
  return sub_21FA2A08C(&qword_255544660, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
}

uint64_t sub_21FB8FD84()
{
  return sub_21FA2A08C(&qword_255544AA8, type metadata accessor for PBDateRange, (uint64_t)&protocol conformance descriptor for PBDateRange);
}

uint64_t sub_21FB8FDB0()
{
  return sub_21FA2A08C(&qword_255544AB0, type metadata accessor for PBTimeSeries, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
}

uint64_t sub_21FB8FDDC()
{
  return sub_21FA2A08C(&qword_25553EB78, type metadata accessor for PBTimeSeries, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
}

uint64_t sub_21FB8FE08()
{
  return sub_21FA2A08C(&qword_255544668, type metadata accessor for PBTimeSeries, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
}

uint64_t sub_21FB8FE34()
{
  return sub_21FA2A08C(&qword_255544AB8, type metadata accessor for PBTimeSeries, (uint64_t)&protocol conformance descriptor for PBTimeSeries);
}

uint64_t sub_21FB8FE60()
{
  return sub_21FA2A08C(&qword_255544AC0, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
}

uint64_t sub_21FB8FE8C()
{
  return sub_21FA2A08C(&qword_255544AC8, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
}

uint64_t sub_21FB8FEB8()
{
  return sub_21FA2A08C(&qword_255544678, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
}

uint64_t sub_21FB8FEE4()
{
  return sub_21FA2A08C(&qword_255544AD0, type metadata accessor for PBTimeSeries.Value, (uint64_t)&protocol conformance descriptor for PBTimeSeries.Value);
}

uint64_t sub_21FB8FF10()
{
  return sub_21FA2A08C(&qword_255544AD8, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
}

uint64_t sub_21FB8FF3C()
{
  return sub_21FA2A08C(&qword_255544698, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
}

uint64_t sub_21FB8FF68()
{
  return sub_21FA2A08C(&qword_255544680, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
}

uint64_t sub_21FB8FF94()
{
  return sub_21FA2A08C(&qword_255544AE0, type metadata accessor for PBBucket, (uint64_t)&protocol conformance descriptor for PBBucket);
}

uint64_t sub_21FB8FFC0()
{
  return sub_21FA2A08C(&qword_255544AE8, type metadata accessor for PBHistogramSeries, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
}

uint64_t sub_21FB8FFEC()
{
  return sub_21FA2A08C(&qword_25553EB18, type metadata accessor for PBHistogramSeries, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
}

uint64_t sub_21FB90018()
{
  return sub_21FA2A08C(&qword_255544690, type metadata accessor for PBHistogramSeries, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
}

uint64_t sub_21FB90044()
{
  return sub_21FA2A08C(&qword_255544AF0, type metadata accessor for PBHistogramSeries, (uint64_t)&protocol conformance descriptor for PBHistogramSeries);
}

uint64_t sub_21FB90070()
{
  return sub_21FA2A08C(&qword_255544AF8, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
}

uint64_t sub_21FB9009C()
{
  return sub_21FA2A08C(&qword_255544688, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
}

uint64_t sub_21FB900C8()
{
  return sub_21FA2A08C(&qword_2555446A0, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
}

uint64_t sub_21FB900F4()
{
  return sub_21FA2A08C(&qword_255544B00, type metadata accessor for PBHistogramSeries.Value, (uint64_t)&protocol conformance descriptor for PBHistogramSeries.Value);
}

uint64_t sub_21FB90120()
{
  return sub_21FA2A08C(&qword_255544B08, type metadata accessor for PBSleepSeries, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
}

uint64_t sub_21FB9014C()
{
  return sub_21FA2A08C(&qword_25553EB20, type metadata accessor for PBSleepSeries, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
}

uint64_t sub_21FB90178()
{
  return sub_21FA2A08C(&qword_2555446B0, type metadata accessor for PBSleepSeries, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
}

uint64_t sub_21FB901A4()
{
  return sub_21FA2A08C(&qword_255544B10, type metadata accessor for PBSleepSeries, (uint64_t)&protocol conformance descriptor for PBSleepSeries);
}

uint64_t sub_21FB901D0()
{
  return sub_21FA2A08C(&qword_255544B18, type metadata accessor for PBSleepSeries.Value, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
}

uint64_t sub_21FB901FC()
{
  return sub_21FA2A08C(&qword_2555446A8, type metadata accessor for PBSleepSeries.Value, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
}

uint64_t sub_21FB90228()
{
  return sub_21FA2A08C(&qword_2555446B8, type metadata accessor for PBSleepSeries.Value, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
}

uint64_t sub_21FB90254()
{
  return sub_21FA2A08C(&qword_255544B20, type metadata accessor for PBSleepSeries.Value, (uint64_t)&protocol conformance descriptor for PBSleepSeries.Value);
}

uint64_t sub_21FB90280()
{
  return sub_21FA2A08C(&qword_255544B28, type metadata accessor for PBSleepSummary, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
}

uint64_t sub_21FB902AC()
{
  return sub_21FA2A08C(&qword_25553EB28, type metadata accessor for PBSleepSummary, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
}

uint64_t sub_21FB902D8()
{
  return sub_21FA2A08C(&qword_2555446C8, type metadata accessor for PBSleepSummary, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
}

uint64_t sub_21FB90304()
{
  return sub_21FA2A08C(&qword_255544B30, type metadata accessor for PBSleepSummary, (uint64_t)&protocol conformance descriptor for PBSleepSummary);
}

uint64_t sub_21FB90330()
{
  return sub_21FA2A08C(&qword_255544B38, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
}

uint64_t sub_21FB9035C()
{
  return sub_21FA2A08C(&qword_2555446C0, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
}

uint64_t sub_21FB90388()
{
  return sub_21FA2A08C(&qword_2555446D0, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
}

uint64_t sub_21FB903B4()
{
  return sub_21FA2A08C(&qword_255544B40, type metadata accessor for PBSleepSummary.Schedule, (uint64_t)&protocol conformance descriptor for PBSleepSummary.Schedule);
}

uint64_t sub_21FB903E0()
{
  return sub_21FA2A08C(&qword_255544B48, type metadata accessor for PBCategorySeries, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
}

uint64_t sub_21FB9040C()
{
  return sub_21FA2A08C(&qword_25553EB70, type metadata accessor for PBCategorySeries, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
}

uint64_t sub_21FB90438()
{
  return sub_21FA2A08C(&qword_2555446D8, type metadata accessor for PBCategorySeries, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
}

uint64_t sub_21FB90464()
{
  return sub_21FA2A08C(&qword_255544B50, type metadata accessor for PBCategorySeries, (uint64_t)&protocol conformance descriptor for PBCategorySeries);
}

uint64_t sub_21FB90490()
{
  return sub_21FA2A08C(&qword_255544B58, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
}

uint64_t sub_21FB904BC()
{
  return sub_21FA2A08C(&qword_255544B60, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
}

uint64_t sub_21FB904E8()
{
  return sub_21FA2A08C(&qword_2555446E0, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
}

uint64_t sub_21FB90514()
{
  return sub_21FA2A08C(&qword_255544B68, type metadata accessor for PBCategorySeries.Range, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Range);
}

uint64_t sub_21FB90540()
{
  return sub_21FA2A08C(&qword_255544B70, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
}

uint64_t sub_21FB9056C()
{
  return sub_21FA2A08C(&qword_255544B78, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
}

uint64_t sub_21FB90598()
{
  return sub_21FA2A08C(&qword_2555446E8, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
}

uint64_t sub_21FB905C4()
{
  return sub_21FA2A08C(&qword_255544B80, type metadata accessor for PBCategorySeries.Event, (uint64_t)&protocol conformance descriptor for PBCategorySeries.Event);
}

uint64_t sub_21FB905F0()
{
  return sub_21FA2A08C(&qword_255544B88, type metadata accessor for PBCharacteristics, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
}

uint64_t sub_21FB9061C()
{
  return sub_21FA2A08C(&qword_25553EB60, type metadata accessor for PBCharacteristics, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
}

uint64_t sub_21FB90648()
{
  return sub_21FA2A08C(&qword_2555446F0, type metadata accessor for PBCharacteristics, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
}

uint64_t sub_21FB90674()
{
  return sub_21FA2A08C(&qword_255544B90, type metadata accessor for PBCharacteristics, (uint64_t)&protocol conformance descriptor for PBCharacteristics);
}

uint64_t sub_21FB906A0()
{
  return sub_21FA2A08C(&qword_255544B98, type metadata accessor for PBWorkout, (uint64_t)&protocol conformance descriptor for PBWorkout);
}

uint64_t sub_21FB906CC()
{
  return sub_21FA2A08C(&qword_25553EB68, type metadata accessor for PBWorkout, (uint64_t)&protocol conformance descriptor for PBWorkout);
}

uint64_t sub_21FB906F8()
{
  return sub_21FA2A08C(&qword_2555446F8, type metadata accessor for PBWorkout, (uint64_t)&protocol conformance descriptor for PBWorkout);
}

uint64_t sub_21FB90724()
{
  return sub_21FA2A08C(&qword_255544BA0, type metadata accessor for PBWorkout, (uint64_t)&protocol conformance descriptor for PBWorkout);
}

uint64_t sub_21FB90750()
{
  return sub_21FA2A08C(&qword_255544BA8, type metadata accessor for PBAllClinicalRecords, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
}

uint64_t sub_21FB9077C()
{
  return sub_21FA2A08C(&qword_25553EB58, type metadata accessor for PBAllClinicalRecords, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
}

uint64_t sub_21FB907A8()
{
  return sub_21FA2A08C(&qword_255544708, type metadata accessor for PBAllClinicalRecords, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
}

uint64_t sub_21FB907D4()
{
  return sub_21FA2A08C(&qword_255544BB0, type metadata accessor for PBAllClinicalRecords, (uint64_t)&protocol conformance descriptor for PBAllClinicalRecords);
}

uint64_t sub_21FB90800()
{
  return sub_21FA2A08C(&qword_255544BB8, type metadata accessor for PBClinicalRecord, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
}

uint64_t sub_21FB9082C()
{
  return sub_21FA2A08C(&qword_255544700, type metadata accessor for PBClinicalRecord, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
}

uint64_t sub_21FB90858()
{
  return sub_21FA2A08C(&qword_255544710, type metadata accessor for PBClinicalRecord, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
}

uint64_t sub_21FB90884()
{
  return sub_21FA2A08C(&qword_255544BC0, type metadata accessor for PBClinicalRecord, (uint64_t)&protocol conformance descriptor for PBClinicalRecord);
}

uint64_t sub_21FB908B0()
{
  return sub_21FA2A08C(&qword_255544BC8, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
}

uint64_t sub_21FB908DC()
{
  return sub_21FA2A08C(&qword_255544BD0, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
}

uint64_t sub_21FB90908()
{
  return sub_21FA2A08C(&qword_255544718, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
}

uint64_t sub_21FB90934()
{
  return sub_21FA2A08C(&qword_255544BD8, type metadata accessor for PBFHIRIdentifier, (uint64_t)&protocol conformance descriptor for PBFHIRIdentifier);
}

uint64_t sub_21FB90960()
{
  return sub_21FA2A08C(&qword_255544BE0, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
}

uint64_t sub_21FB9098C()
{
  return sub_21FA2A08C(&qword_255544BE8, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
}

uint64_t sub_21FB909B8()
{
  return sub_21FA2A08C(&qword_255544720, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
}

uint64_t sub_21FB909E4()
{
  return sub_21FA2A08C(&qword_255544BF0, type metadata accessor for PBHKConcept, (uint64_t)&protocol conformance descriptor for PBHKConcept);
}

uint64_t sub_21FB90A10()
{
  return sub_21FA2A08C(&qword_255544BF8, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
}

uint64_t sub_21FB90A3C()
{
  return sub_21FA2A08C(&qword_255544C00, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
}

uint64_t sub_21FB90A68()
{
  return sub_21FA2A08C(&qword_255544728, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
}

uint64_t sub_21FB90A94()
{
  return sub_21FA2A08C(&qword_255544C08, type metadata accessor for PBHKAllergyRecord, (uint64_t)&protocol conformance descriptor for PBHKAllergyRecord);
}

uint64_t sub_21FB90AC0()
{
  return sub_21FA2A08C(&qword_255544C10, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
}

uint64_t sub_21FB90AEC()
{
  return sub_21FA2A08C(&qword_255544C18, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
}

uint64_t sub_21FB90B18()
{
  return sub_21FA2A08C(&qword_255544730, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
}

uint64_t sub_21FB90B44()
{
  return sub_21FA2A08C(&qword_255544C20, type metadata accessor for PBHKAllergyReaction, (uint64_t)&protocol conformance descriptor for PBHKAllergyReaction);
}

uint64_t sub_21FB90B70()
{
  return sub_21FA2A08C(&qword_255544C28, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
}

uint64_t sub_21FB90B9C()
{
  return sub_21FA2A08C(&qword_255544C30, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
}

uint64_t sub_21FB90BC8()
{
  return sub_21FA2A08C(&qword_255544738, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
}

uint64_t sub_21FB90BF4()
{
  return sub_21FA2A08C(&qword_255544C38, type metadata accessor for PBHKConditionRecord, (uint64_t)&protocol conformance descriptor for PBHKConditionRecord);
}

uint64_t sub_21FB90C20()
{
  return sub_21FA2A08C(&qword_255544C40, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
}

uint64_t sub_21FB90C4C()
{
  return sub_21FA2A08C(&qword_255544C48, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
}

uint64_t sub_21FB90C78()
{
  return sub_21FA2A08C(&qword_255544740, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
}

uint64_t sub_21FB90CA4()
{
  return sub_21FA2A08C(&qword_255544C50, type metadata accessor for PBHKVaccinationRecord, (uint64_t)&protocol conformance descriptor for PBHKVaccinationRecord);
}

uint64_t sub_21FB90CD0()
{
  return sub_21FA2A08C(&qword_255544C58, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
}

uint64_t sub_21FB90CFC()
{
  return sub_21FA2A08C(&qword_255544C60, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
}

uint64_t sub_21FB90D28()
{
  return sub_21FA2A08C(&qword_255544748, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
}

uint64_t sub_21FB90D54()
{
  return sub_21FA2A08C(&qword_255544C68, type metadata accessor for PBMedicationDosage, (uint64_t)&protocol conformance descriptor for PBMedicationDosage);
}

uint64_t sub_21FB90D80()
{
  return sub_21FA2A08C(&qword_255544C70, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
}

uint64_t sub_21FB90DAC()
{
  return sub_21FA2A08C(&qword_255544C78, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
}

uint64_t sub_21FB90DD8()
{
  return sub_21FA2A08C(&qword_255544750, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
}

uint64_t sub_21FB90E04()
{
  return sub_21FA2A08C(&qword_255544C80, type metadata accessor for PBQuantity, (uint64_t)&protocol conformance descriptor for PBQuantity);
}

uint64_t sub_21FB90E30()
{
  return sub_21FA2A08C(&qword_255544C88, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
}

uint64_t sub_21FB90E5C()
{
  return sub_21FA2A08C(&qword_255544C90, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
}

uint64_t sub_21FB90E88()
{
  return sub_21FA2A08C(&qword_255544758, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
}

uint64_t sub_21FB90EB4()
{
  return sub_21FA2A08C(&qword_255544C98, type metadata accessor for PBGeneralMedication, (uint64_t)&protocol conformance descriptor for PBGeneralMedication);
}

uint64_t sub_21FB90EE0()
{
  return sub_21FA2A08C(&qword_255544CA0, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
}

uint64_t sub_21FB90F0C()
{
  return sub_21FA2A08C(&qword_255544CA8, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
}

uint64_t sub_21FB90F38()
{
  return sub_21FA2A08C(&qword_255544760, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
}

uint64_t sub_21FB90F64()
{
  return sub_21FA2A08C(&qword_255544CB0, type metadata accessor for PBHKMedicationRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationRecord);
}

uint64_t sub_21FB90F90()
{
  return sub_21FA2A08C(&qword_255544CB8, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
}

uint64_t sub_21FB90FBC()
{
  return sub_21FA2A08C(&qword_255544CC0, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
}

uint64_t sub_21FB90FE8()
{
  return sub_21FA2A08C(&qword_255544768, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
}

uint64_t sub_21FB91014()
{
  return sub_21FA2A08C(&qword_255544CC8, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t)&protocol conformance descriptor for PBHKMedicationDispenseRecord);
}

uint64_t sub_21FB91040()
{
  return sub_21FA2A08C(&qword_255544CD0, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
}

uint64_t sub_21FB9106C()
{
  return sub_21FA2A08C(&qword_255544CD8, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
}

uint64_t sub_21FB91098()
{
  return sub_21FA2A08C(&qword_255544770, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
}

uint64_t sub_21FB910C4()
{
  return sub_21FA2A08C(&qword_255544CE0, type metadata accessor for PBHKMedicationOrder, (uint64_t)&protocol conformance descriptor for PBHKMedicationOrder);
}

uint64_t sub_21FB910F0()
{
  return sub_21FA2A08C(&qword_255544CE8, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
}

uint64_t sub_21FB9111C()
{
  return sub_21FA2A08C(&qword_255544CF0, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
}

uint64_t sub_21FB91148()
{
  return sub_21FA2A08C(&qword_255544778, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
}

uint64_t sub_21FB91174()
{
  return sub_21FA2A08C(&qword_255544CF8, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestResult);
}

uint64_t sub_21FB911A0()
{
  return sub_21FA2A08C(&qword_255544D00, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
}

uint64_t sub_21FB911CC()
{
  return sub_21FA2A08C(&qword_255544D08, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
}

uint64_t sub_21FB911F8()
{
  return sub_21FA2A08C(&qword_255544780, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
}

uint64_t sub_21FB91224()
{
  return sub_21FA2A08C(&qword_255544D10, type metadata accessor for PBHKReferenceRange, (uint64_t)&protocol conformance descriptor for PBHKReferenceRange);
}

uint64_t sub_21FB91250()
{
  return sub_21FA2A08C(&qword_255544D18, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
}

uint64_t sub_21FB9127C()
{
  return sub_21FA2A08C(&qword_255544D20, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
}

uint64_t sub_21FB912A8()
{
  return sub_21FA2A08C(&qword_255544788, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
}

uint64_t sub_21FB912D4()
{
  return sub_21FA2A08C(&qword_255544D28, type metadata accessor for PBHKRatioValue, (uint64_t)&protocol conformance descriptor for PBHKRatioValue);
}

uint64_t sub_21FB91300()
{
  return sub_21FA2A08C(&qword_255544D30, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB9132C()
{
  return sub_21FA2A08C(&qword_255544D38, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB91358()
{
  return sub_21FA2A08C(&qword_255544790, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB91384()
{
  return sub_21FA2A08C(&qword_255544D40, type metadata accessor for PBHKInspectableValueCollection, (uint64_t)&protocol conformance descriptor for PBHKInspectableValueCollection);
}

uint64_t sub_21FB913B0()
{
  return sub_21FA2A08C(&qword_255544D48, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
}

uint64_t sub_21FB913DC()
{
  return sub_21FA2A08C(&qword_255544D50, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
}

uint64_t sub_21FB91408()
{
  return sub_21FA2A08C(&qword_255544798, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
}

uint64_t sub_21FB91434()
{
  return sub_21FA2A08C(&qword_255544D58, type metadata accessor for PBHKInspectableValue, (uint64_t)&protocol conformance descriptor for PBHKInspectableValue);
}

uint64_t sub_21FB91460()
{
  return sub_21FA2A08C(&qword_255544D60, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
}

uint64_t sub_21FB9148C()
{
  return sub_21FA2A08C(&qword_255544D68, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
}

uint64_t sub_21FB914B8()
{
  return sub_21FA2A08C(&qword_2555447A0, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
}

uint64_t sub_21FB914E4()
{
  return sub_21FA2A08C(&qword_255544D70, type metadata accessor for PBHKCodedValue, (uint64_t)&protocol conformance descriptor for PBHKCodedValue);
}

uint64_t sub_21FB91510()
{
  return sub_21FA2A08C(&qword_255544D78, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
}

uint64_t sub_21FB9153C()
{
  return sub_21FA2A08C(&qword_255544D80, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
}

uint64_t sub_21FB91568()
{
  return sub_21FA2A08C(&qword_2555447A8, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
}

uint64_t sub_21FB91594()
{
  return sub_21FA2A08C(&qword_255544D88, type metadata accessor for PBHKCodedQuantity, (uint64_t)&protocol conformance descriptor for PBHKCodedQuantity);
}

uint64_t sub_21FB915C0()
{
  return sub_21FA2A08C(&qword_255544D90, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
}

uint64_t sub_21FB915EC()
{
  return sub_21FA2A08C(&qword_255544D98, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
}

uint64_t sub_21FB91618()
{
  return sub_21FA2A08C(&qword_2555447B0, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
}

uint64_t sub_21FB91644()
{
  return sub_21FA2A08C(&qword_255544DA0, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t)&protocol conformance descriptor for PBHKDiagnosticTestReport);
}

uint64_t sub_21FB91670()
{
  return sub_21FA2A08C(&qword_255544DA8, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
}

uint64_t sub_21FB9169C()
{
  return sub_21FA2A08C(&qword_255544DB0, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
}

uint64_t sub_21FB916C8()
{
  return sub_21FA2A08C(&qword_2555447B8, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
}

uint64_t sub_21FB916F4()
{
  return sub_21FA2A08C(&qword_255544DB8, type metadata accessor for PBHKAccountOwner, (uint64_t)&protocol conformance descriptor for PBHKAccountOwner);
}

uint64_t sub_21FB91720()
{
  return sub_21FA2A08C(&qword_255544DC0, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
}

uint64_t sub_21FB9174C()
{
  return sub_21FA2A08C(&qword_255544DC8, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
}

uint64_t sub_21FB91778()
{
  return sub_21FA2A08C(&qword_2555447C0, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
}

uint64_t sub_21FB917A4()
{
  return sub_21FA2A08C(&qword_255544DD0, type metadata accessor for PBHKProcedureRecord, (uint64_t)&protocol conformance descriptor for PBHKProcedureRecord);
}

uint64_t sub_21FB917D0()
{
  return sub_21FA2A08C(&qword_255544DD8, type metadata accessor for PBCycleTracking, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
}

uint64_t sub_21FB917FC()
{
  return sub_21FA2A08C(&qword_25553EB48, type metadata accessor for PBCycleTracking, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
}

uint64_t sub_21FB91828()
{
  return sub_21FA2A08C(&qword_2555447C8, type metadata accessor for PBCycleTracking, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
}

uint64_t sub_21FB91854()
{
  return sub_21FA2A08C(&qword_255544DE0, type metadata accessor for PBCycleTracking, (uint64_t)&protocol conformance descriptor for PBCycleTracking);
}

uint64_t sub_21FB91880()
{
  return sub_21FA2A08C(&qword_255544DE8, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
}

uint64_t sub_21FB918AC()
{
  return sub_21FA2A08C(&qword_255544DF0, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
}

uint64_t sub_21FB918D8()
{
  return sub_21FA2A08C(&qword_2555447D0, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
}

uint64_t sub_21FB91904()
{
  return sub_21FA2A08C(&qword_255544DF8, type metadata accessor for PBCycleTracking.Range, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Range);
}

uint64_t sub_21FB91930()
{
  return sub_21FA2A08C(&qword_255544E00, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
}

uint64_t sub_21FB9195C()
{
  return sub_21FA2A08C(&qword_255544E08, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
}

uint64_t sub_21FB91988()
{
  return sub_21FA2A08C(&qword_2555447D8, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
}

uint64_t sub_21FB919B4()
{
  return sub_21FA2A08C(&qword_255544E10, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t)&protocol conformance descriptor for PBCycleTracking.SexualActivity);
}

uint64_t sub_21FB919E0()
{
  return sub_21FA2A08C(&qword_255544E18, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
}

uint64_t sub_21FB91A0C()
{
  return sub_21FA2A08C(&qword_2555447E8, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
}

uint64_t sub_21FB91A38()
{
  return sub_21FA2A08C(&qword_2555447E0, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
}

uint64_t sub_21FB91A64()
{
  return sub_21FA2A08C(&qword_255544E20, type metadata accessor for PBCycleTracking.Event, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Event);
}

uint64_t sub_21FB91A90()
{
  return sub_21FA2A08C(&qword_255544E28, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
}

uint64_t sub_21FB91ABC()
{
  return sub_21FA2A08C(&qword_255544E30, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
}

uint64_t sub_21FB91AE8()
{
  return sub_21FA2A08C(&qword_2555447F0, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
}

uint64_t sub_21FB91B14()
{
  return sub_21FA2A08C(&qword_255544E38, type metadata accessor for PBCycleTracking.Cycle, (uint64_t)&protocol conformance descriptor for PBCycleTracking.Cycle);
}

uint64_t sub_21FB91B40()
{
  return sub_21FA2A08C(&qword_255544E40, type metadata accessor for PBECGs, (uint64_t)&protocol conformance descriptor for PBECGs);
}

uint64_t sub_21FB91B6C()
{
  return sub_21FA2A08C(&qword_25553EB50, type metadata accessor for PBECGs, (uint64_t)&protocol conformance descriptor for PBECGs);
}

uint64_t sub_21FB91B98()
{
  return sub_21FA2A08C(&qword_2555447F8, type metadata accessor for PBECGs, (uint64_t)&protocol conformance descriptor for PBECGs);
}

uint64_t sub_21FB91BC4()
{
  return sub_21FA2A08C(&qword_255544E48, type metadata accessor for PBECGs, (uint64_t)&protocol conformance descriptor for PBECGs);
}

uint64_t sub_21FB91BF0()
{
  return sub_21FA2A08C(&qword_255544E50, type metadata accessor for PBECGMeta, (uint64_t)&protocol conformance descriptor for PBECGMeta);
}

uint64_t sub_21FB91C1C()
{
  return sub_21FA2A08C(&qword_25553EAD8, type metadata accessor for PBECGMeta, (uint64_t)&protocol conformance descriptor for PBECGMeta);
}

uint64_t sub_21FB91C48()
{
  return sub_21FA2A08C(&qword_255544808, type metadata accessor for PBECGMeta, (uint64_t)&protocol conformance descriptor for PBECGMeta);
}

uint64_t sub_21FB91C74()
{
  return sub_21FA2A08C(&qword_255544E58, type metadata accessor for PBECGMeta, (uint64_t)&protocol conformance descriptor for PBECGMeta);
}

uint64_t sub_21FB91CA0()
{
  return sub_21FA2A08C(&qword_255544E60, type metadata accessor for PBECGMeasurement, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
}

uint64_t sub_21FB91CCC()
{
  return sub_21FA2A08C(&qword_25553EB40, type metadata accessor for PBECGMeasurement, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
}

uint64_t sub_21FB91CF8()
{
  return sub_21FA2A08C(&qword_255544810, type metadata accessor for PBECGMeasurement, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
}

uint64_t sub_21FB91D24()
{
  return sub_21FA2A08C(&qword_255544E68, type metadata accessor for PBECGMeasurement, (uint64_t)&protocol conformance descriptor for PBECGMeasurement);
}

uint64_t sub_21FB91D50()
{
  return sub_21FA2A08C(&qword_255544E70, type metadata accessor for PBActivitySummarySeries, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
}

uint64_t sub_21FB91D7C()
{
  return sub_21FA2A08C(&qword_25553EB38, type metadata accessor for PBActivitySummarySeries, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
}

uint64_t sub_21FB91DA8()
{
  return sub_21FA2A08C(&qword_255544818, type metadata accessor for PBActivitySummarySeries, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
}

uint64_t sub_21FB91DD4()
{
  return sub_21FA2A08C(&qword_255544E78, type metadata accessor for PBActivitySummarySeries, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries);
}

uint64_t sub_21FB91E00()
{
  return sub_21FA2A08C(&qword_255544E80, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_21FB91E2C()
{
  return sub_21FA2A08C(&qword_255544E88, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_21FB91E58()
{
  return sub_21FA2A08C(&qword_255544820, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_21FB91E84()
{
  return sub_21FA2A08C(&qword_255544E90, type metadata accessor for PBActivitySummarySeries.ActivitySummary, (uint64_t)&protocol conformance descriptor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_21FB91EB0()
{
  return sub_21FA2A08C(&qword_255544E98, type metadata accessor for PBPatientMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
}

uint64_t sub_21FB91EDC()
{
  return sub_21FA2A08C(&qword_25553EB30, type metadata accessor for PBPatientMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
}

uint64_t sub_21FB91F08()
{
  return sub_21FA2A08C(&qword_255544828, type metadata accessor for PBPatientMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
}

uint64_t sub_21FB91F34()
{
  return sub_21FA2A08C(&qword_255544EA0, type metadata accessor for PBPatientMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta);
}

uint64_t sub_21FB91F60()
{
  return sub_21FA2A08C(&qword_255544EA8, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
}

uint64_t sub_21FB91F8C()
{
  return sub_21FA2A08C(&qword_255544EB0, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
}

uint64_t sub_21FB91FB8()
{
  return sub_21FA2A08C(&qword_255544830, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
}

uint64_t sub_21FB91FE4()
{
  return sub_21FA2A08C(&qword_255544EB8, type metadata accessor for PBPatientMeta.CHRMeta, (uint64_t)&protocol conformance descriptor for PBPatientMeta.CHRMeta);
}

uint64_t sub_21FB92010()
{
  return sub_21FA2A08C(&qword_255544EC0, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_21FB9203C()
{
  return sub_21FA2A08C(&qword_255544EC8, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_21FB92068()
{
  return sub_21FA2A08C(&qword_255544838, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_21FB92094()
{
  return sub_21FA2A08C(&qword_255544ED0, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_21FB920C0()
{
  return sub_21FA2A08C(&qword_255544ED8, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
}

uint64_t sub_21FB920EC()
{
  return sub_21FA2A08C(&qword_255544EE0, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
}

uint64_t sub_21FB92118()
{
  return sub_21FA2A08C(&qword_255544840, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
}

uint64_t sub_21FB92144()
{
  return sub_21FA2A08C(&qword_255544EE8, type metadata accessor for PBPatientMeta.HumanName, (uint64_t)&protocol conformance descriptor for PBPatientMeta.HumanName);
}

uint64_t sub_21FB92170()
{
  return sub_21FA2A08C(&qword_255544EF0, type metadata accessor for PBActiveMedications, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
}

uint64_t sub_21FB9219C()
{
  return sub_21FA2A08C(&qword_25553EAF8, type metadata accessor for PBActiveMedications, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
}

uint64_t sub_21FB921C8()
{
  return sub_21FA2A08C(&qword_255544848, type metadata accessor for PBActiveMedications, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
}

uint64_t sub_21FB921F4()
{
  return sub_21FA2A08C(&qword_255544EF8, type metadata accessor for PBActiveMedications, (uint64_t)&protocol conformance descriptor for PBActiveMedications);
}

uint64_t sub_21FB92220()
{
  return sub_21FA2A08C(&qword_255544F00, type metadata accessor for PBMedicationTracking, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
}

uint64_t sub_21FB9224C()
{
  return sub_21FA2A08C(&qword_255544858, type metadata accessor for PBMedicationTracking, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
}

uint64_t sub_21FB92278()
{
  return sub_21FA2A08C(&qword_255544850, type metadata accessor for PBMedicationTracking, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
}

uint64_t sub_21FB922A4()
{
  return sub_21FA2A08C(&qword_255544F08, type metadata accessor for PBMedicationTracking, (uint64_t)&protocol conformance descriptor for PBMedicationTracking);
}

uint64_t sub_21FB922D0()
{
  return sub_21FA2A08C(&qword_255544F10, type metadata accessor for PBMedicationTrackings, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
}

uint64_t sub_21FB922FC()
{
  return sub_21FA2A08C(&qword_25553EB10, type metadata accessor for PBMedicationTrackings, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
}

uint64_t sub_21FB92328()
{
  return sub_21FA2A08C(&qword_255544860, type metadata accessor for PBMedicationTrackings, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
}

uint64_t sub_21FB92354()
{
  return sub_21FA2A08C(&qword_255544F18, type metadata accessor for PBMedicationTrackings, (uint64_t)&protocol conformance descriptor for PBMedicationTrackings);
}

uint64_t sub_21FB92380()
{
  return sub_21FA2A08C(&qword_255544F20, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_21FB923AC()
{
  return sub_21FA2A08C(&qword_255544880, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_21FB923D8()
{
  return sub_21FA2A08C(&qword_255544878, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_21FB92404()
{
  return sub_21FA2A08C(&qword_255544F28, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_21FB92430()
{
  return sub_21FA2A08C(&qword_255544F30, type metadata accessor for PBMedicationTrackingDoseEvents, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_21FB9245C()
{
  return sub_21FA2A08C(&qword_25553EB08, type metadata accessor for PBMedicationTrackingDoseEvents, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_21FB92488()
{
  return sub_21FA2A08C(&qword_255544888, type metadata accessor for PBMedicationTrackingDoseEvents, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_21FB924B4()
{
  return sub_21FA2A08C(&qword_255544F38, type metadata accessor for PBMedicationTrackingDoseEvents, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_21FB924E0()
{
  return sub_21FA2A08C(&qword_255544F40, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
}

uint64_t sub_21FB9250C()
{
  return sub_21FA2A08C(&qword_2555448A0, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
}

uint64_t sub_21FB92538()
{
  return sub_21FA2A08C(&qword_255544890, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
}

uint64_t sub_21FB92564()
{
  return sub_21FA2A08C(&qword_255544F48, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedule);
}

uint64_t sub_21FB92590()
{
  return sub_21FA2A08C(&qword_255544F50, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_21FB925BC()
{
  return sub_21FA2A08C(&qword_255544F58, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_21FB925E8()
{
  return sub_21FA2A08C(&qword_255544898, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_21FB92614()
{
  return sub_21FA2A08C(&qword_255544F60, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_21FB92640()
{
  return sub_21FA2A08C(&qword_255544F68, type metadata accessor for PBMedicationTrackingSchedules, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
}

uint64_t sub_21FB9266C()
{
  return sub_21FA2A08C(&qword_25553EB00, type metadata accessor for PBMedicationTrackingSchedules, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
}

uint64_t sub_21FB92698()
{
  return sub_21FA2A08C(&qword_2555448A8, type metadata accessor for PBMedicationTrackingSchedules, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
}

uint64_t sub_21FB926C4()
{
  return sub_21FA2A08C(&qword_255544F70, type metadata accessor for PBMedicationTrackingSchedules, (uint64_t)&protocol conformance descriptor for PBMedicationTrackingSchedules);
}

uint64_t sub_21FB926F0()
{
  return sub_21FA2A08C(&qword_255544F78, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_21FB9271C()
{
  return sub_21FA2A08C(&qword_255544F80, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_21FB92748()
{
  return sub_21FA2A08C(&qword_2555448B0, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_21FB92774()
{
  return sub_21FA2A08C(&qword_255544F88, type metadata accessor for PBHKMedicationScheduleIntervalData, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_21FB927A0()
{
  return sub_21FA2A08C(&qword_255544F90, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_21FB927CC()
{
  return sub_21FA2A08C(&qword_255544F98, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_21FB927F8()
{
  return sub_21FA2A08C(&qword_2555448B8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_21FB92824()
{
  return sub_21FA2A08C(&qword_255544FA0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t)&protocol conformance descriptor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_21FB92850@<X0>(uint64_t a1@<X8>)
{
  return PBTimeSeries.dateRange.getter(a1);
}

uint64_t sub_21FB92870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBTimeSeries.dateRange.setter);
}

uint64_t sub_21FB92894@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource, a2);
}

uint64_t sub_21FB928B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBTimeSeries, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t sub_21FB928EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit, a2);
}

uint64_t sub_21FB92910(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBTimeSeries, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
}

uint64_t sub_21FB92944@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values, a2);
}

uint64_t sub_21FB92968(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBTimeSeries, (void (*)(_QWORD))type metadata accessor for PBTimeSeries._StorageClass, sub_21FB49070, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
}

uint64_t sub_21FB9299C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  v2 = *(_QWORD *)(result + 128);
  v3 = *(_BYTE *)(result + 136);
  v4 = *(_BYTE *)(result + 137);
  if (v4)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = (v4 | v3) & 1;
  return result;
}

uint64_t sub_21FB929C4(uint64_t result, uint64_t a2)
{
  unsigned __int8 v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 128) = *(_QWORD *)result;
  *(_WORD *)(a2 + 136) = v2;
  return result;
}

uint64_t sub_21FB929DC@<X0>(uint64_t a1@<X8>)
{
  return PBCategorySeries.dateRange.getter(a1);
}

uint64_t sub_21FB929FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBCategorySeries.dateRange.setter);
}

uint64_t sub_21FB92A20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource, a2);
}

uint64_t sub_21FB92A44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBCategorySeries, (void (*)(_QWORD))type metadata accessor for PBCategorySeries._StorageClass, sub_21FB4D47C, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t sub_21FB92A78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events, a2);
}

uint64_t sub_21FB92A9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBCategorySeries, (void (*)(_QWORD))type metadata accessor for PBCategorySeries._StorageClass, sub_21FB4D47C, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
}

uint64_t sub_21FB92AD0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_15Tm_0(a1, type metadata accessor for PBCategorySeries.Event, a2);
}

uint64_t sub_21FB92AE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB25914(a1, type metadata accessor for PBCategorySeries.Event, a2);
}

uint64_t sub_21FB92AFC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB2596C(a1, a2, a3, a4, type metadata accessor for PBCategorySeries.Event, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_21FB4E9EC);
}

uint64_t sub_21FB92B28@<X0>(uint64_t a1@<X8>)
{
  return PBCategorySeries.Event.recordedTime.getter(a1);
}

uint64_t sub_21FB92B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBCategorySeries.Event.recordedTime.setter);
}

uint64_t sub_21FB92B6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source, a2);
}

uint64_t sub_21FB92B90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBCategorySeries.Event, (void (*)(_QWORD))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_21FB4E9EC, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t sub_21FB92BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA38BE4(a1, type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, a2);
}

uint64_t sub_21FB92BFC@<X0>(_QWORD *a1@<X8>)
{
  return PBCategorySeries.Event.range.getter(a1);
}

uint64_t sub_21FB92C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBCategorySeries.Range, (uint64_t (*)(char *))PBCategorySeries.Event.range.setter);
}

uint64_t sub_21FB92C40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBCategorySeries.Event.heartRateEventThreshold.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FB92C68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return PBCategorySeries.Event.heartRateEventThreshold.setter(v1, v2);
}

_QWORD *sub_21FB92CA4@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_29Tm((_QWORD *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.sleepAnalysis.getter, a1);
}

uint64_t sub_21FB92CB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_30Tm(a1, a2, a3, a4, PBCategorySeries.Event.sleepAnalysis.setter);
}

_QWORD *sub_21FB92CBC@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_29Tm((_QWORD *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.cycleFactor.getter, a1);
}

uint64_t sub_21FB92CC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_30Tm(a1, a2, a3, a4, PBCategorySeries.Event.cycleFactor.setter);
}

_QWORD *sub_21FB92CD4@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_29Tm((_QWORD *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.steadinessEvent.getter, a1);
}

uint64_t sub_21FB92CE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_30Tm(a1, a2, a3, a4, PBCategorySeries.Event.steadinessEvent.setter);
}

_QWORD *sub_21FB92CEC@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_29Tm((_QWORD *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.steadinessClassification.getter, a1);
}

_QWORD *keypath_get_29Tm@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  _QWORD *result;
  char v4;
  uint64_t v5;
  char v6;

  result = a1(&v5);
  v4 = v6;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_21FB92D38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_30Tm(a1, a2, a3, a4, PBCategorySeries.Event.steadinessClassification.setter);
}

uint64_t keypath_set_30Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  char v5;
  uint64_t v7;
  char v8;

  v5 = *((_BYTE *)a1 + 8);
  v7 = *a1;
  v8 = v5;
  return a5(&v7);
}

uint64_t sub_21FB92D80@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_15Tm_0(a1, type metadata accessor for PBWorkout, a2);
}

uint64_t keypath_get_15Tm_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _DWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  result = swift_beginAccess();
  *a3 = *(_DWORD *)(v4 + 16);
  return result;
}

uint64_t sub_21FB92DE4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 20);
  return result;
}

uint64_t sub_21FB92E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 32);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 24);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FB92E9C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_21FB92EF4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 40);
  return result;
}

uint64_t sub_21FB92F4C@<X0>(uint64_t a1@<X8>)
{
  return PBWorkout.dateRange.getter(a1);
}

uint64_t sub_21FB92F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBWorkout.dateRange.setter);
}

uint64_t sub_21FB92F90@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_49Tm(a1, type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount, a2);
}

uint64_t sub_21FB92FA4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1FC5C(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
}

uint64_t sub_21FB92FC0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_49Tm(a1, type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate, a2);
}

uint64_t keypath_get_49Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X4>, _DWORD *a4@<X8>)
{
  _DWORD *v5;
  uint64_t result;

  v5 = (_DWORD *)(*(_QWORD *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  result = swift_beginAccess();
  *a4 = *v5;
  return result;
}

uint64_t sub_21FB9303C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1FC5C(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
}

uint64_t sub_21FB93058@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBClinicalRecord, a2);
}

uint64_t sub_21FB93074(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB22BA4(a1, a2, a3, a4, type metadata accessor for PBClinicalRecord, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E53C);
}

uint64_t sub_21FB930A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBClinicalRecord, a2);
}

uint64_t sub_21FB930BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB22E80(a1, a2, a3, a4, type metadata accessor for PBClinicalRecord, (void (*)(_QWORD))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E53C);
}

uint64_t sub_21FB930EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBClinicalRecord.primaryConcept.setter);
}

uint64_t sub_21FB93110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA38BE4(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, a2);
}

uint64_t sub_21FB93148@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.allergyRecord.getter(a1);
}

uint64_t sub_21FB93168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (uint64_t (*)(char *))PBClinicalRecord.allergyRecord.setter);
}

uint64_t sub_21FB9318C@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.conditionRecord.getter(a1);
}

uint64_t sub_21FB931AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (uint64_t (*)(char *))PBClinicalRecord.conditionRecord.setter);
}

uint64_t sub_21FB931D0@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.vaccinationRecord.getter(a1);
}

uint64_t sub_21FB931F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (uint64_t (*)(char *))PBClinicalRecord.vaccinationRecord.setter);
}

uint64_t sub_21FB93214@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.medicationDispenseRecord.getter(a1);
}

uint64_t sub_21FB93234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t (*)(char *))PBClinicalRecord.medicationDispenseRecord.setter);
}

uint64_t sub_21FB93258@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.medicationOrder.getter(a1);
}

uint64_t sub_21FB93278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (uint64_t (*)(char *))PBClinicalRecord.medicationOrder.setter);
}

uint64_t sub_21FB9329C@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.diagnosticTestResult.getter(a1);
}

uint64_t sub_21FB932BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t (*)(char *))PBClinicalRecord.diagnosticTestResult.setter);
}

uint64_t sub_21FB932E0@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.diagnosticTestReport.getter(a1);
}

uint64_t sub_21FB93300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t (*)(char *))PBClinicalRecord.diagnosticTestReport.setter);
}

uint64_t sub_21FB93324@<X0>(_QWORD *a1@<X8>)
{
  return PBClinicalRecord.accountOwner.getter(a1);
}

uint64_t sub_21FB93344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKAccountOwner, (uint64_t (*)(char *))PBClinicalRecord.accountOwner.setter);
}

uint64_t sub_21FB93368@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.procedureRecord.getter(a1);
}

uint64_t sub_21FB93388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (uint64_t (*)(char *))PBClinicalRecord.procedureRecord.setter);
}

uint64_t sub_21FB933AC@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.medicationRecord.getter(a1);
}

uint64_t sub_21FB933CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (uint64_t (*)(char *))PBClinicalRecord.medicationRecord.setter);
}

uint64_t sub_21FB933F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source, a2);
}

uint64_t sub_21FB93414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB22258(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t sub_21FB93430@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID, a2);
}

uint64_t sub_21FB93454(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB22258(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
}

uint64_t sub_21FB93470@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName, a2);
}

uint64_t sub_21FB93494(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB22258(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
}

uint64_t sub_21FB934B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FB2D660(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType, a2);
}

uint64_t sub_21FB934D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBHKConcept, a2);
}

uint64_t sub_21FB934F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB22BA4(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (void (*)(_QWORD))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E248);
}

uint64_t sub_21FB93520@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBHKConcept, a2);
}

uint64_t sub_21FB9353C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB22E80(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (void (*)(_QWORD))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_21FB8E248);
}

uint64_t sub_21FB93568@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB35750(a1, type metadata accessor for PBHKConcept, a2);
}

uint64_t sub_21FB9358C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConcept.groupBy.setter);
}

uint64_t sub_21FB935B0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_97Tm(a1, type metadata accessor for PBHKConcept, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory, a2);
}

uint64_t sub_21FB935CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyRecord.allergy.setter);
}

uint64_t sub_21FB935F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter, a2);
}

uint64_t sub_21FB93614(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t sub_21FB9364C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyRecord.criticality.setter);
}

uint64_t sub_21FB93670@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate, a2);
}

uint64_t sub_21FB93694(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
}

uint64_t sub_21FB936C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate, a2);
}

uint64_t sub_21FB936EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
}

uint64_t sub_21FB93720@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions, a2);
}

uint64_t sub_21FB93744(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
}

uint64_t sub_21FB93778@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate, a2);
}

uint64_t sub_21FB9379C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(_QWORD))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_21FB58E98, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t sub_21FB937D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyRecord.status.setter);
}

uint64_t sub_21FB937F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB39518(a1, type metadata accessor for PBHKAllergyReaction, a2);
}

uint64_t sub_21FB93814(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB39570(a1, a2, a3, a4, type metadata accessor for PBHKAllergyReaction, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5AC8C);
}

uint64_t sub_21FB93840@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB25914(a1, type metadata accessor for PBHKAllergyReaction, a2);
}

uint64_t sub_21FB9385C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB2596C(a1, a2, a3, a4, type metadata accessor for PBHKAllergyReaction, (void (*)(_QWORD))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5AC8C);
}

uint64_t sub_21FB9388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyReaction.severity.setter);
}

uint64_t sub_21FB938B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBHKConditionRecord, a2);
}

uint64_t sub_21FB938CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8);
}

uint64_t sub_21FB938F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBHKConditionRecord, a2);
}

uint64_t sub_21FB93914(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB35430(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8);
}

uint64_t sub_21FB9394C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.category.setter);
}

uint64_t sub_21FB93974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.clinicalStatus.setter);
}

uint64_t sub_21FB9399C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.condition.setter);
}

uint64_t sub_21FB939C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue, a2);
}

uint64_t sub_21FB939E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
}

uint64_t sub_21FB93A18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate, a2);
}

uint64_t sub_21FB93A3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(_QWORD))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_21FB5BDE8, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t sub_21FB93A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.severity.setter);
}

uint64_t sub_21FB93A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.verificationStatus.setter);
}

uint64_t sub_21FB93AC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBHKVaccinationRecord, a2);
}

uint64_t sub_21FB93ADC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC);
}

uint64_t sub_21FB93B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.bodySite.setter);
}

uint64_t sub_21FB93B30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber, a2);
}

uint64_t sub_21FB93B54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
}

uint64_t sub_21FB93B88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity, a2);
}

uint64_t sub_21FB93BAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
}

uint64_t sub_21FB93BE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate, a2);
}

uint64_t sub_21FB93C04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
}

uint64_t sub_21FB93C38@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_97Tm(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven, a2);
}

uint64_t keypath_get_97Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X4>, _BYTE *a4@<X8>)
{
  _BYTE *v5;
  uint64_t result;

  v5 = (_BYTE *)(*(_QWORD *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  result = swift_beginAccess();
  *a4 = *v5;
  return result;
}

uint64_t sub_21FB93CB4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB29EA4(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
}

uint64_t sub_21FB93CE8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_97Tm(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported, a2);
}

uint64_t sub_21FB93CFC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB29EA4(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
}

uint64_t sub_21FB93D30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer, a2);
}

uint64_t sub_21FB93D54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
}

uint64_t sub_21FB93D88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction, a2);
}

uint64_t sub_21FB93DAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
}

uint64_t sub_21FB93DE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons, a2);
}

uint64_t sub_21FB93E04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
}

uint64_t sub_21FB93E38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven, a2);
}

uint64_t sub_21FB93E5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(_QWORD))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_21FB5E6DC, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
}

uint64_t sub_21FB93E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.route.setter);
}

uint64_t sub_21FB93EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.status.setter);
}

uint64_t sub_21FB93EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.vaccination.setter);
}

uint64_t sub_21FB93F08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBMedicationDosage, a2);
}

uint64_t sub_21FB93F28@<X0>(uint64_t a1@<X8>)
{
  return PBMedicationDosage.timingPeriod.getter(a1);
}

uint64_t sub_21FB93F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBMedicationDosage.timingPeriod.setter);
}

uint64_t sub_21FB93F6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBGeneralMedication, a2);
}

uint64_t sub_21FB93F88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74);
}

uint64_t sub_21FB93FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBGeneralMedication.medication.setter);
}

uint64_t sub_21FB93FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBGeneralMedication.status.setter);
}

uint64_t sub_21FB94004@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages, a2);
}

uint64_t sub_21FB94028(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
}

uint64_t sub_21FB9405C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName, a2);
}

uint64_t sub_21FB94080(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
}

uint64_t sub_21FB940B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet, a2);
}

uint64_t sub_21FB940D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(_QWORD))type metadata accessor for PBGeneralMedication._StorageClass, sub_21FB61F74, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
}

uint64_t sub_21FB94110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (uint64_t (*)(char *))PBHKMedicationRecord.generalMedication.setter);
}

uint64_t sub_21FB94134@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter, a2);
}

uint64_t sub_21FB94158(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t sub_21FB9418C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate, a2);
}

uint64_t sub_21FB941B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
}

uint64_t sub_21FB941E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FB2D660(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType, a2);
}

uint64_t sub_21FB94208(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB3E224(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
}

uint64_t sub_21FB9423C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate, a2);
}

uint64_t sub_21FB94260(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t sub_21FB94294@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate, a2);
}

uint64_t sub_21FB942B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t sub_21FB942EC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_97Tm(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken, a2);
}

uint64_t sub_21FB94300(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB29EA4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
}

uint64_t sub_21FB94334@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse, a2);
}

uint64_t sub_21FB94358(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
}

uint64_t sub_21FB9438C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken, a2);
}

uint64_t sub_21FB943B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_21FB638BC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
}

uint64_t sub_21FB943E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (uint64_t (*)(char *))PBHKMedicationDispenseRecord.generalMedication.setter);
}

uint64_t sub_21FB9440C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB2E980(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity, a2);
}

uint64_t sub_21FB94428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBQuantity, (uint64_t (*)(char *))PBHKMedicationDispenseRecord.daySupplyQuantity.setter);
}

uint64_t sub_21FB9444C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate, a2);
}

uint64_t sub_21FB94470(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_21FB65540, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
}

uint64_t sub_21FB944A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate, a2);
}

uint64_t sub_21FB944C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(_QWORD))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_21FB65540, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
}

uint64_t sub_21FB944FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB2E980(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, a2);
}

uint64_t sub_21FB94518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBQuantity, (uint64_t (*)(char *))PBHKMedicationDispenseRecord.quantityDispensed.setter);
}

uint64_t sub_21FB94540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (uint64_t (*)(char *))PBHKMedicationOrder.generalMedication.setter);
}

uint64_t sub_21FB94564@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate, a2);
}

uint64_t sub_21FB94588(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
}

uint64_t sub_21FB945BC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_49Tm(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills, a2);
}

uint64_t sub_21FB945D0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB3CD3C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
}

uint64_t sub_21FB94604@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber, a2);
}

uint64_t sub_21FB94628(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
}

uint64_t sub_21FB9465C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason, a2);
}

uint64_t sub_21FB94680(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
}

uint64_t sub_21FB946B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKMedicationOrder.reasonEnded.setter);
}

uint64_t sub_21FB946E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKMedicationOrder.statusReason.setter);
}

uint64_t sub_21FB94704@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate, a2);
}

uint64_t sub_21FB94728(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(_QWORD))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_21FB672FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
}

uint64_t sub_21FB94760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.bodySite.setter);
}

uint64_t sub_21FB94784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category, a2);
}

uint64_t sub_21FB947A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

uint64_t sub_21FB947DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments, a2);
}

uint64_t sub_21FB94800(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
}

uint64_t sub_21FB94838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.diagnosticTest.setter);
}

uint64_t sub_21FB9485C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate, a2);
}

uint64_t sub_21FB94880(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t sub_21FB948B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate, a2);
}

uint64_t sub_21FB948D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t sub_21FB94910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.interpretationDeprecated.setter);
}

uint64_t sub_21FB94934@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate, a2);
}

uint64_t sub_21FB94958(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t sub_21FB94990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.method.setter);
}

uint64_t sub_21FB949B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers, a2);
}

uint64_t sub_21FB949D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t sub_21FB94A0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges, a2);
}

uint64_t sub_21FB94A30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t sub_21FB94A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.status.setter);
}

uint64_t sub_21FB94A8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString, a2);
}

uint64_t sub_21FB94AB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
}

uint64_t sub_21FB94AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(char *))PBHKDiagnosticTestResult.value.setter);
}

uint64_t sub_21FB94B0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation, a2);
}

uint64_t sub_21FB94B30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_21FB695E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
}

uint64_t sub_21FB94B64@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBHKReferenceRange, a2);
}

uint64_t sub_21FB94B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(char *))PBHKReferenceRange.valueRange.setter);
}

uint64_t sub_21FB94BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_263Tm(a1, type metadata accessor for PBHKInspectableValueCollection, a2);
}

uint64_t sub_21FB94BB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB351F0(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8);
}

uint64_t sub_21FB94BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKInspectableValueCollection.value.setter);
}

uint64_t sub_21FB94C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKInspectableValueCollection.min.setter);
}

uint64_t sub_21FB94C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKInspectableValueCollection.max.setter);
}

uint64_t sub_21FB94C5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues, a2);
}

uint64_t sub_21FB94C80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
}

uint64_t sub_21FB94CB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString, a2);
}

uint64_t sub_21FB94CD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_21FB6DBA8, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t sub_21FB94D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_263Tm(a1, type metadata accessor for PBHKInspectableValue, a2);
}

uint64_t keypath_get_263Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(_QWORD *)(a1 + *(int *)(a2(0) + 20));
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 24);
  *(_QWORD *)a3 = *(_QWORD *)(v4 + 16);
  *(_BYTE *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_21FB94D74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB351F0(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

uint64_t sub_21FB94DA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBHKInspectableValue, a2);
}

uint64_t sub_21FB94DBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB35430(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

uint64_t sub_21FB94DE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB35750(a1, type metadata accessor for PBHKInspectableValue, a2);
}

uint64_t sub_21FB94E04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB40118(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994);
}

uint64_t sub_21FB94E30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB40C78(a1, &qword_2555405A0, type metadata accessor for PBHKRatioValue, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue, a2);
}

uint64_t sub_21FB94E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKRatioValue, (uint64_t (*)(char *))PBHKInspectableValue.ratioValue.setter);
}

uint64_t sub_21FB94E88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString, a2);
}

uint64_t sub_21FB94EAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
}

uint64_t sub_21FB94EE0@<X0>(uint64_t a1@<X8>)
{
  return PBHKInspectableValue.medicalDateIntervalString.getter(a1);
}

uint64_t sub_21FB94F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBHKInspectableValue.medicalDateIntervalString.setter);
}

uint64_t sub_21FB94F24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents, a2);
}

uint64_t sub_21FB94F48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
}

uint64_t sub_21FB94F7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings, a2);
}

uint64_t sub_21FB94FA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
}

uint64_t sub_21FB94FD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings, a2);
}

uint64_t sub_21FB94FF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
}

uint64_t sub_21FB9502C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues, a2);
}

uint64_t sub_21FB95050(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
}

uint64_t sub_21FB95088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKInspectableValue.concept.setter);
}

uint64_t sub_21FB950B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKInspectableValue.dataAbsentReasonConcept.setter);
}

uint64_t sub_21FB950D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString, a2);
}

uint64_t sub_21FB950F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(_QWORD))type metadata accessor for PBHKInspectableValue._StorageClass, sub_21FB6F994, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t sub_21FB9512C@<X0>(uint64_t a1@<X8>)
{
  return PBHKInspectableValue.codedQuantity.getter(a1);
}

uint64_t sub_21FB9514C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(char *))PBHKInspectableValue.codedQuantity.setter);
}

uint64_t sub_21FB95174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKCodedValue.concept.setter);
}

uint64_t sub_21FB9519C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKCodedValue.value.setter);
}

uint64_t sub_21FB951C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKCodedValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges, a2);
}

uint64_t sub_21FB951E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKCodedValue, (void (*)(_QWORD))type metadata accessor for PBHKCodedValue._StorageClass, sub_21FB72C34, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t sub_21FB9521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestReport.diagnosticTest.setter);
}

uint64_t sub_21FB95240@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate, a2);
}

uint64_t sub_21FB95264(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t sub_21FB95298@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate, a2);
}

uint64_t sub_21FB952BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t sub_21FB952F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate, a2);
}

uint64_t sub_21FB95314(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t sub_21FB95348@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName, a2);
}

uint64_t sub_21FB9536C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
}

uint64_t sub_21FB953A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results, a2);
}

uint64_t sub_21FB953C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(_QWORD))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_21FB748F4, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
}

uint64_t sub_21FB953FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestReport.status.setter);
}

uint64_t sub_21FB95420@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB39518(a1, type metadata accessor for PBHKProcedureRecord, a2);
}

uint64_t sub_21FB9543C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB39570(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC);
}

uint64_t sub_21FB9546C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.category.setter);
}

uint64_t sub_21FB95490@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications, a2);
}

uint64_t sub_21FB954B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
}

uint64_t sub_21FB954E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate, a2);
}

uint64_t sub_21FB9550C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
}

uint64_t sub_21FB95540@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate, a2);
}

uint64_t sub_21FB95564(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
}

uint64_t sub_21FB95598@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps, a2);
}

uint64_t sub_21FB955BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
}

uint64_t sub_21FB955F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_97Tm(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed, a2);
}

uint64_t sub_21FB95604(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB29EA4(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
}

uint64_t sub_21FB9563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.outcome.setter);
}

uint64_t sub_21FB95660@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers, a2);
}

uint64_t sub_21FB95684(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t sub_21FB956BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.procedure.setter);
}

uint64_t sub_21FB956E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.reason.setter);
}

uint64_t sub_21FB95708@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed, a2);
}

uint64_t sub_21FB9572C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(_QWORD))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_21FB768CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
}

uint64_t sub_21FB95764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.status.setter);
}

uint64_t sub_21FB95788@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB39518(a1, type metadata accessor for PBCycleTracking, a2);
}

uint64_t sub_21FB957A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB39570(a1, a2, a3, a4, type metadata accessor for PBCycleTracking, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC);
}

uint64_t sub_21FB957D0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 24);
  return result;
}

uint64_t sub_21FB95828@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB3D0F8(a1, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange, a2);
}

uint64_t sub_21FB9585C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(char *))PBCycleTracking.typicalCycleLengthRange.setter);
}

uint64_t sub_21FB95880@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_49Tm(a1, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays, a2);
}

uint64_t sub_21FB95894(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB3CD3C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
}

uint64_t sub_21FB958C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB3D0F8(a1, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, a2);
}

uint64_t sub_21FB958FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(char *))PBCycleTracking.typicalPeriodLengthRange.setter);
}

uint64_t sub_21FB95920@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate, a2);
}

uint64_t sub_21FB95944(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBCycleTracking, (void (*)(_QWORD))type metadata accessor for PBCycleTracking._StorageClass, sub_21FB794CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
}

uint64_t sub_21FB95978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBCycleTracking.Event, a2);
}

uint64_t sub_21FB95994(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00);
}

uint64_t sub_21FB959C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 40);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 32);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FB95A20@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  return sub_21FB40520(a1, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity, a2);
}

uint64_t sub_21FB95A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(char *))PBCycleTracking.Event.sexualActivity.setter);
}

uint64_t sub_21FB95A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FB2D660(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality, a2);
}

uint64_t sub_21FB95A9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB3E224(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
}

float sub_21FB95AD0@<S0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  float *v3;
  float result;

  v3 = (float *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
               + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_DWORD *)v3;
  return result;
}

uint64_t sub_21FB95B34@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_97Tm(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting, a2);
}

uint64_t sub_21FB95B48(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB29EA4(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
}

uint64_t sub_21FB95B7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms, a2);
}

uint64_t sub_21FB95BA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
}

uint64_t sub_21FB95BD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms, a2);
}

uint64_t sub_21FB95BF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(_QWORD))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_21FB7BE00, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
}

uint64_t sub_21FB95C2C@<X0>(uint64_t a1@<X8>)
{
  return PBActivitySummarySeries.dateRange.getter(a1);
}

uint64_t sub_21FB95C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBActivitySummarySeries.dateRange.setter);
}

uint64_t sub_21FB95C70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1C474(a1, type metadata accessor for PBActivitySummarySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries, a2);
}

uint64_t sub_21FB95C94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1C4E0(a1, a2, a3, a4, type metadata accessor for PBActivitySummarySeries, (void (*)(_QWORD))type metadata accessor for PBActivitySummarySeries._StorageClass, sub_21FB7F1E0, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
}

uint64_t sub_21FB95CC8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_21FB95D28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBPatientMeta, a2);
}

uint64_t sub_21FB95D44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB35430(a1, a2, a3, a4, type metadata accessor for PBPatientMeta, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC);
}

uint64_t sub_21FB95D70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB35750(a1, type metadata accessor for PBPatientMeta, a2);
}

uint64_t sub_21FB95D8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB40118(a1, a2, a3, a4, type metadata accessor for PBPatientMeta, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC);
}

uint64_t sub_21FB95DB8@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  return sub_21FB40520(a1, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds, a2);
}

uint64_t sub_21FB95DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t (*)(char *))PBPatientMeta.heartRateMeds.setter);
}

uint64_t sub_21FB95E10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB40C78(a1, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name, a2);
}

uint64_t sub_21FB95E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(char *))PBPatientMeta.name.setter);
}

uint64_t sub_21FB95E68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob, a2);
}

uint64_t sub_21FB95E8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBPatientMeta, (void (*)(_QWORD))type metadata accessor for PBPatientMeta._StorageClass, sub_21FB808CC, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
}

uint64_t sub_21FB95EC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_21FB95EE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_21FB95F00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB35750(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_21FB95F20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB46360(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_21FB95F40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB466B0(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_21FB95F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 104);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 96);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FB96008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 264);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 256);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FB9608C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_21FB960A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FAFB9D8(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t sub_21FB960D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF7ED0(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_21FB960F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB35430(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t sub_21FB9611C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB35750(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_21FB96138(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB40118(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(_QWORD))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_21FB87320);
}

uint64_t sub_21FB96164@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB46360(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_21FB96184@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB466B0(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_21FB961B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 128);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 120);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FB96214@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 129);
  return result;
}

uint64_t sub_21FB9626C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB3D0F8(a1, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, type metadata accessor for PBMedicationTrackingSchedule, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange, a2);
}

uint64_t sub_21FB962A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(char *))PBMedicationTrackingSchedule.compatibilityVersionRange.setter);
}

uint64_t sub_21FB962C4@<X0>(_DWORD *a1@<X8>)
{
  return PBHKMedicationScheduleIntervalData.daysOfWeek.getter(a1);
}

uint64_t sub_21FB962E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(char *))PBHKMedicationScheduleIntervalData.daysOfWeek.setter);
}

uint64_t sub_21FB96308@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_49Tm(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex, a2);
}

uint64_t sub_21FB9631C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB3CD3C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
}

uint64_t sub_21FB96350@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_49Tm(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays, a2);
}

uint64_t sub_21FB96364(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB3CD3C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
}

uint64_t sub_21FB96398@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_49Tm(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose, a2);
}

uint64_t sub_21FB963AC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB3CD3C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
}

uint64_t sub_21FB963E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FB1B0DC(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime, a2);
}

uint64_t sub_21FB96404(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FB1B148(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(_QWORD))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_21FB89538, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
}

ValueMetadata *type metadata accessor for PBInspectableValueCollectionType()
{
  return &type metadata for PBInspectableValueCollectionType;
}

ValueMetadata *type metadata accessor for PBInspectableValueType()
{
  return &type metadata for PBInspectableValueType;
}

uint64_t getEnumTagSinglePayload for PBDateRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBDateRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB96478()
{
  return sub_21FB0BFBC();
}

uint64_t getEnumTagSinglePayload for PBTimeSeries()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBTimeSeries()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBTimeSeries.Value(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v5 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v5;
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    v6 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v6;
    v7 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v7;
    v8 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v8;
    v9 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v9;
    *(_WORD *)(a1 + 136) = *((_WORD *)a2 + 68);
    v10 = *(int *)(a3 + 80);
    v11 = (uint64_t)a2 + v10;
    v12 = a1 + v10;
    *(_QWORD *)(a1 + 128) = a2[16];
    v13 = sub_21FC5AD1C();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t destroy for PBTimeSeries.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 80);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v9 = *(int *)(a3 + 80);
  v10 = a2 + v9;
  v11 = a1 + v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v12 = sub_21FC5AD1C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v6;
  v7 = *(int *)(a3 + 80);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v6 = *(int *)(a3 + 80);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t assignWithTake for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v10 = *(int *)(a3 + 80);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBTimeSeries.Value()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB969B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 80), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBTimeSeries.Value()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB96A3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 80), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB96AB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PBTimeSeries.Value.OneOf_AdditionalData()
{
  return &type metadata for PBTimeSeries.Value.OneOf_AdditionalData;
}

_QWORD *initializeBufferWithCopyOfBuffer for PBBucket(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v5 = *(int *)(a3 + 28);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_21FC5AD1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBBucket(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBucket()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB96DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBBucket()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB96E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_21FB96E78()
{
  return sub_21FB0BFBC();
}

uint64_t getEnumTagSinglePayload for PBHistogramSeries()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHistogramSeries()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB96EBC()
{
  return sub_21FB9C7C4();
}

uint64_t getEnumTagSinglePayload for PBHistogramSeries.Value()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHistogramSeries.Value()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB96EF4()
{
  return sub_21FB0BFBC();
}

uint64_t getEnumTagSinglePayload for PBSleepSeries()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBSleepSeries()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBSleepSeries.Value(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v6 = *(int *)(a3 + 32);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_21FC5AD1C();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBSleepSeries.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21FC5AD1C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBSleepSeries.Value()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9722C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBSleepSeries.Value()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB972B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB97328()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PBSleepSummary(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_21FC5AD1C();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for PBSleepSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBSleepSummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_469Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBSleepSummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_470Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB97770()
{
  return sub_21FB9C7C4();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBSleepSummary.Schedule(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_WORD *)(a1 + 5) = *(_WORD *)((char *)a2 + 5);
    *(_QWORD *)(a1 + 8) = a2[1];
    v5 = *(int *)(a3 + 52);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_21FC5AD1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 52);
  v3 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 52);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = *(int *)(a3 + 52);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 52);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  v4 = *(int *)(a3 + 52);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBSleepSummary.Schedule()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB97A88(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_21FC5AD1C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 52)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBSleepSummary.Schedule()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_21FB97B10(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 52)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB97B80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBCategorySeries()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCategorySeries()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBCategorySeries.Range()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCategorySeries.Range()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB97C68()
{
  return sub_21FB9C7C4();
}

uint64_t getEnumTagSinglePayload for PBCategorySeries.Event()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCategorySeries.Event()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBCategorySeries.Event.OneOf_AdditionalData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_21FC5AD1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for PBCategorySeries.Event.OneOf_AdditionalData(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = a1 + *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
    v4 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for PBCategorySeries.Event.OneOf_AdditionalData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_21FC5AD1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *assignWithCopy for PBCategorySeries.Event.OneOf_AdditionalData(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_21FA326EC((uint64_t)a1, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_21FC5AD1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_QWORD *initializeWithTake for PBCategorySeries.Event.OneOf_AdditionalData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_21FC5AD1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for PBCategorySeries.Event.OneOf_AdditionalData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_21FA326EC((uint64_t)a1, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_21FC5AD1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_21FB98120()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PBCategorySeries.Range(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBCharacteristics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCharacteristics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB981D4()
{
  return sub_21FB0BFBC();
}

uint64_t getEnumTagSinglePayload for PBWorkout()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBWorkout()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBAllClinicalRecords()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBAllClinicalRecords()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBClinicalRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBClinicalRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeBufferWithCopyOfBuffer for PBClinicalRecord.OneOf_MedicalRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_21FB982A0 + 4 * byte_21FC66744[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for PBClinicalRecord.OneOf_MedicalRecord(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for PBHKAllergyRecord(0);
      goto LABEL_12;
    case 1:
      v4 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for PBHKConditionRecord(0);
      goto LABEL_12;
    case 2:
      v5 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for PBHKVaccinationRecord(0);
      goto LABEL_12;
    case 3:
      v6 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for PBHKMedicationDispenseRecord(0);
      goto LABEL_12;
    case 4:
      v7 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      type metadata accessor for PBHKMedicationOrder(0);
      goto LABEL_12;
    case 5:
      v8 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for PBHKDiagnosticTestResult(0);
      goto LABEL_12;
    case 6:
      v9 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for PBHKDiagnosticTestReport(0);
      goto LABEL_12;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = a1 + *(int *)(type metadata accessor for PBHKAccountOwner(0) + 24);
      v11 = sub_21FC5AD1C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    case 8:
      v13 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
      type metadata accessor for PBHKProcedureRecord(0);
      goto LABEL_12;
    case 9:
      v12 = sub_21FC5AD1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
      type metadata accessor for PBHKMedicationRecord(0);
LABEL_12:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for PBClinicalRecord.OneOf_MedicalRecord()
{
  char *v0;

  v0 = (char *)sub_21FB98818 + 4 * byte_21FC66758[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21FB98818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = type metadata accessor for PBHKAllergyRecord(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for PBClinicalRecord.OneOf_MedicalRecord(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_21FA326EC(result, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    v2 = (char *)&loc_21FB98B88 + 4 * byte_21FC66762[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for PBClinicalRecord.OneOf_MedicalRecord()
{
  char *v0;

  v0 = (char *)sub_21FB98EF0 + 4 * byte_21FC6676C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21FB98EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = type metadata accessor for PBHKAllergyRecord(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for PBClinicalRecord.OneOf_MedicalRecord(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_21FA326EC(result, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    v2 = (char *)&loc_21FB99150 + 4 * byte_21FC66776[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_21FB9934C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  result = type metadata accessor for PBHKAllergyRecord(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PBHKConditionRecord(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for PBHKVaccinationRecord(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for PBHKMedicationDispenseRecord(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for PBHKMedicationOrder(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for PBHKDiagnosticTestResult(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for PBHKDiagnosticTestReport(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for PBHKAccountOwner(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for PBHKProcedureRecord(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for PBHKMedicationRecord(319);
                    if (v10 <= 0x3F)
                    {
                      swift_initEnumMetadataMultiPayload();
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PBClinicalRecord.MedicalRecordOriginType()
{
  return &type metadata for PBClinicalRecord.MedicalRecordOriginType;
}

uint64_t getEnumTagSinglePayload for PBFHIRIdentifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBFHIRIdentifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB994F4()
{
  return sub_21FB9C7C4();
}

uint64_t getEnumTagSinglePayload for PBHKConcept()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKConcept()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKAllergyRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKAllergyRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKAllergyReaction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKAllergyReaction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKConditionRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKConditionRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKVaccinationRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKVaccinationRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBMedicationDosage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBMedicationDosage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBQuantity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_21FC5AD1C();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBQuantity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for PBQuantity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for PBQuantity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBQuantity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9982C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBQuantity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB998B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB99928()
{
  return sub_21FB9C7C4();
}

uint64_t getEnumTagSinglePayload for PBGeneralMedication()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBGeneralMedication()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKMedicationRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBHKMedicationRecord.HKClinicalReferencedActorType()
{
  return &type metadata for PBHKMedicationRecord.HKClinicalReferencedActorType;
}

uint64_t getEnumTagSinglePayload for PBHKMedicationDispenseRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationDispenseRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKMedicationOrder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationOrder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKDiagnosticTestResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKDiagnosticTestResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKReferenceRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKReferenceRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKRatioValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKRatioValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKInspectableValueCollection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKInspectableValueCollection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKInspectableValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKInspectableValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKCodedValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKCodedValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBHKCodedQuantity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    v9 = a2[10];
    v10 = *(int *)(a3 + 40);
    v11 = (uint64_t)a2 + v10;
    v12 = a1 + v10;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v9;
    v13 = sub_21FC5AD1C();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t destroy for PBHKCodedQuantity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(int *)(a3 + 40);
  v10 = a2 + v9;
  v11 = a1 + v9;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v12 = sub_21FC5AD1C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 40);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBHKCodedQuantity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB99EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBHKCodedQuantity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB99F7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB99FF0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBHKDiagnosticTestReport()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKDiagnosticTestReport()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKAccountOwner()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKAccountOwner()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKProcedureRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKProcedureRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBCycleTracking()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBCycleTracking.Flow()
{
  return &type metadata for PBCycleTracking.Flow;
}

ValueMetadata *type metadata accessor for PBCycleTracking.OvulationTestResult()
{
  return &type metadata for PBCycleTracking.OvulationTestResult;
}

ValueMetadata *type metadata accessor for PBCycleTracking.CervicalMucusQuality()
{
  return &type metadata for PBCycleTracking.CervicalMucusQuality;
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.Range()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.Range()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.SexualActivity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.SexualActivity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9A17C()
{
  return sub_21FB9C7C4();
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.Event()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.Event()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBCycleTracking.Cycle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    a1[4] = a2[4];
    v7 = *(int *)(a3 + 36);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[5] = a2[5];
    v10 = sub_21FC5AD1C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PBCycleTracking.Cycle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  a1[5] = a2[5];
  v9 = sub_21FC5AD1C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for PBCycleTracking.Cycle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.Cycle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9A540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.Cycle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9A5C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB9A63C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBECGs()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBECGs()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBECGMeta(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    v9 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    v10 = *(int *)(a3 + 52);
    v16 = (uint64_t)a2 + v10;
    v11 = a1 + v10;
    *(_QWORD *)(a1 + 104) = a2[13];
    v12 = sub_21FC5AD1C();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v16, v12);
  }
  return v3;
}

uint64_t destroy for PBECGMeta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v9 = *(int *)(a3 + 52);
  v14 = a2 + v9;
  v10 = a1 + v9;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v11 = sub_21FC5AD1C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v14, v11);
  return a1;
}

uint64_t assignWithCopy for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v6;
  v7 = *(int *)(a3 + 52);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v4 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v5 = *(int *)(a3 + 52);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_QWORD *)(a1 + 104) = v4;
  v8 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v11 = *(int *)(a3 + 52);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBECGMeta()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9AC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBECGMeta()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9ACCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB9AD40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PBECGMeasurement(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    v9 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v9;
    v10 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v10;
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    v11 = *(int *)(a3 + 56);
    v16 = a1 + v11;
    v17 = (uint64_t)a2 + v11;
    *(_QWORD *)(a1 + 112) = a2[14];
    v12 = sub_21FC5AD1C();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v16, v17, v12);
  }
  return v3;
}

uint64_t destroy for PBECGMeasurement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 56);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v10 = *(int *)(a3 + 56);
  v14 = a1 + v10;
  v15 = a2 + v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v11 = sub_21FC5AD1C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v15, v11);
  return a1;
}

uint64_t assignWithCopy for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  v6 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v6;
  v7 = *(int *)(a3 + 56);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  v4 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v5 = *(int *)(a3 + 56);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_QWORD *)(a1 + 112) = v4;
  v8 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v11 = *(int *)(a3 + 56);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBECGMeasurement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9B370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 56), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBECGMeasurement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9B3F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 56), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB9B46C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBActivitySummarySeries()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBActivitySummarySeries()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBActivitySummarySeries.ActivitySummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v5 = a2[4];
    a1[3] = a2[3];
    a1[4] = v5;
    v6 = *(int *)(a3 + 44);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_21FC5AD1C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(int *)(a3 + 44);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21FC5AD1C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 44);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBActivitySummarySeries.ActivitySummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9B844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBActivitySummarySeries.ActivitySummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9B8CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB9B940()
{
  return sub_21FB9CC44();
}

uint64_t getEnumTagSinglePayload for PBPatientMeta()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBPatientMeta.CHRMeta()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta.CHRMeta()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_21FC5AD1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_WORD *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwcp_0(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwca_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_21FC5AD1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_WORD *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwtk_0(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwta_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_21FC5AD1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPatientMeta.HeartRateMeds()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_543Tm(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_21FC5AD1C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta.HeartRateMeds()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *__swift_store_extra_inhabitant_index_544Tm(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBPatientMeta.HumanName()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_495Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta.HumanName()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_496Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBActiveMedications()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBActiveMedications()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBMedicationTracking()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBMedicationTracking()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBMedicationTracking.MedicationFreeTextForm()
{
  return &type metadata for PBMedicationTracking.MedicationFreeTextForm;
}

ValueMetadata *type metadata accessor for PBMedicationTracking.MedicationFreeTextLoggingUnit()
{
  return &type metadata for PBMedicationTracking.MedicationFreeTextLoggingUnit;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackings()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackings()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v5 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v5;
    v6 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = a2[8];
    v7 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v7;
    v8 = a2[12];
    v9 = *(int *)(a3 + 48);
    v10 = (uint64_t)a2 + v9;
    v11 = a1 + v9;
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v8;
    v12 = sub_21FC5AD1C();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(int *)(a3 + 48);
  v9 = a2 + v8;
  v10 = a1 + v8;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v11 = sub_21FC5AD1C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

uint64_t assignWithCopy for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 48);
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v5 = *(int *)(a3 + 48);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v8 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 48);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingDoseEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9C2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingDoseEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9C370(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB9C3E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PBMedicationTrackingDoseEvent.LogOrigin()
{
  return &type metadata for PBMedicationTrackingDoseEvent.LogOrigin;
}

ValueMetadata *type metadata accessor for PBMedicationTrackingDoseEvent.Status()
{
  return &type metadata for PBMedicationTrackingDoseEvent.Status;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingDoseEvents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingDoseEvents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingSchedule()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingSchedule()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBMedicationTrackingSchedule.HKFrequencyType()
{
  return &type metadata for PBMedicationTrackingSchedule.HKFrequencyType;
}

uint64_t *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_21FC5AD1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwca_0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwtk_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwta_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingScheduleCompatibilityVersionRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_483Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingScheduleCompatibilityVersionRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_484Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_21FB9C7C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingSchedules()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingSchedules()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBHKMedicationScheduleIntervalData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationScheduleIntervalData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_WORD *)(a1 + 5) = *(_WORD *)((char *)a2 + 5);
    v5 = *(int *)(a3 + 44);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_21FC5AD1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 44);
  v3 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  v4 = *(int *)(a3 + 44);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v4 = *(int *)(a3 + 44);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_21FC5AD1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  v4 = *(int *)(a3 + 44);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v4 = *(int *)(a3 + 44);
  v5 = &a2[v4];
  v6 = &a1[v4];
  a1[6] = a2[6];
  v7 = sub_21FC5AD1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, v5, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FB9CB3C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_21FC5AD1C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_21FB9CBC4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FB9CC34()
{
  return sub_21FB9CC44();
}

uint64_t sub_21FB9CC44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21FB9CCBC()
{
  return type metadata accessor for PBTimeSeries._StorageClass(0);
}

void sub_21FB9CCC4()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9CD60()
{
  return type metadata accessor for PBCategorySeries._StorageClass(0);
}

void sub_21FB9CD68()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9CE04()
{
  return type metadata accessor for PBCategorySeries.Event._StorageClass(0);
}

void sub_21FB9CE0C()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_25553E0F0, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB9CED8()
{
  return type metadata accessor for PBWorkout._StorageClass(0);
}

void sub_21FB9CEE0()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9CF88()
{
  return type metadata accessor for PBClinicalRecord._StorageClass(0);
}

void sub_21FB9CF90()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_25553F688, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB9D060()
{
  return type metadata accessor for PBHKConcept._StorageClass(0);
}

void sub_21FB9D068()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D104()
{
  return type metadata accessor for PBHKAllergyRecord._StorageClass(0);
}

void sub_21FB9D10C()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D1B0()
{
  return type metadata accessor for PBHKAllergyReaction._StorageClass(0);
}

void sub_21FB9D1B8()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D254()
{
  return type metadata accessor for PBHKConditionRecord._StorageClass(0);
}

void sub_21FB9D25C()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D308()
{
  return type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
}

void sub_21FB9D310()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D3C8()
{
  return type metadata accessor for PBMedicationDosage._StorageClass(0);
}

void sub_21FB9D3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB9D804(a1, a2, a3, &qword_25553E0F8, type metadata accessor for PBDateRange);
}

uint64_t sub_21FB9D3E4()
{
  return type metadata accessor for PBGeneralMedication._StorageClass(0);
}

void sub_21FB9D3EC()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D490()
{
  return type metadata accessor for PBHKMedicationRecord._StorageClass(0);
}

void sub_21FB9D498()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D550()
{
  return type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
}

void sub_21FB9D558()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_255544520, type metadata accessor for PBQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB9D618()
{
  return type metadata accessor for PBHKMedicationOrder._StorageClass(0);
}

void sub_21FB9D620()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_2555416B8, type metadata accessor for PBGeneralMedication, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB9D700()
{
  return type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
}

void sub_21FB9D708()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB9D7E8()
{
  return type metadata accessor for PBHKReferenceRange._StorageClass(0);
}

void sub_21FB9D7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FB9D804(a1, a2, a3, &qword_2555405C8, type metadata accessor for PBHKInspectableValueCollection);
}

void sub_21FB9D804(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v5;

  sub_21FA2D1A0(319, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v5 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D88C()
{
  return type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
}

void sub_21FB9D894()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9D940()
{
  return type metadata accessor for PBHKInspectableValue._StorageClass(0);
}

void sub_21FB9D948()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_21FA2D1A0(319, &qword_2555405A0, type metadata accessor for PBHKRatioValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
    {
      sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
      {
        sub_21FA2D1A0(319, &qword_2555405A8, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_21FB9DA94()
{
  return type metadata accessor for PBHKCodedValue._StorageClass(0);
}

void sub_21FB9DA9C()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_255540580, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB9DB5C()
{
  return type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
}

void sub_21FB9DB64()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9DC08()
{
  return type metadata accessor for PBHKProcedureRecord._StorageClass(0);
}

void sub_21FB9DC10()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255540590, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9DCC4()
{
  return type metadata accessor for PBCycleTracking._StorageClass(0);
}

void sub_21FB9DCCC()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_2555445E0, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9DD78()
{
  return type metadata accessor for PBCycleTracking.Event._StorageClass(0);
}

void sub_21FB9DD80()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_255544608, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9DE40()
{
  return type metadata accessor for PBActivitySummarySeries._StorageClass(0);
}

void sub_21FB9DE48()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9DED8()
{
  return type metadata accessor for PBPatientMeta._StorageClass(0);
}

void sub_21FB9DEE0()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_255544648, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_25553FF70, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FB9DFB8()
{
  return type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
}

void sub_21FB9DFC0()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25553FFD0, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FB9E07C()
{
  return type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
}

void sub_21FB9E084()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25553FFE0, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_21FB9E124()
{
  unint64_t result;

  result = qword_25554A6D8;
  if (!qword_25554A6D8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTrackingSchedule.HKFrequencyType, &type metadata for PBMedicationTrackingSchedule.HKFrequencyType);
    atomic_store(result, (unint64_t *)&qword_25554A6D8);
  }
  return result;
}

unint64_t sub_21FB9E168()
{
  unint64_t result;

  result = qword_25554A6E0;
  if (!qword_25554A6E0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextLoggingUnit, &type metadata for PBMedicationTracking.MedicationFreeTextLoggingUnit);
    atomic_store(result, (unint64_t *)&qword_25554A6E0);
  }
  return result;
}

unint64_t sub_21FB9E1AC()
{
  unint64_t result;

  result = qword_25554A6E8;
  if (!qword_25554A6E8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBMedicationTracking.MedicationFreeTextForm, &type metadata for PBMedicationTracking.MedicationFreeTextForm);
    atomic_store(result, (unint64_t *)&qword_25554A6E8);
  }
  return result;
}

unint64_t sub_21FB9E1F0()
{
  unint64_t result;

  result = qword_25554A6F0;
  if (!qword_25554A6F0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.CervicalMucusQuality, &type metadata for PBCycleTracking.CervicalMucusQuality);
    atomic_store(result, (unint64_t *)&qword_25554A6F0);
  }
  return result;
}

unint64_t sub_21FB9E234()
{
  unint64_t result;

  result = qword_25554A6F8;
  if (!qword_25554A6F8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.OvulationTestResult, &type metadata for PBCycleTracking.OvulationTestResult);
    atomic_store(result, (unint64_t *)&qword_25554A6F8);
  }
  return result;
}

unint64_t sub_21FB9E278()
{
  unint64_t result;

  result = qword_25554A700;
  if (!qword_25554A700)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleTracking.Flow, &type metadata for PBCycleTracking.Flow);
    atomic_store(result, (unint64_t *)&qword_25554A700);
  }
  return result;
}

unint64_t sub_21FB9E2BC()
{
  unint64_t result;

  result = qword_25554A708;
  if (!qword_25554A708)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBHKMedicationRecord.HKClinicalReferencedActorType, &type metadata for PBHKMedicationRecord.HKClinicalReferencedActorType);
    atomic_store(result, (unint64_t *)&qword_25554A708);
  }
  return result;
}

unint64_t sub_21FB9E300()
{
  unint64_t result;

  result = qword_25554A710;
  if (!qword_25554A710)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBClinicalRecord.MedicalRecordOriginType, &type metadata for PBClinicalRecord.MedicalRecordOriginType);
    atomic_store(result, (unint64_t *)&qword_25554A710);
  }
  return result;
}

unint64_t sub_21FB9E344()
{
  unint64_t result;

  result = qword_25554A718;
  if (!qword_25554A718)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueType, &type metadata for PBInspectableValueType);
    atomic_store(result, (unint64_t *)&qword_25554A718);
  }
  return result;
}

unint64_t sub_21FB9E388()
{
  unint64_t result;

  result = qword_25554A720;
  if (!qword_25554A720)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBInspectableValueCollectionType, &type metadata for PBInspectableValueCollectionType);
    atomic_store(result, (unint64_t *)&qword_25554A720);
  }
  return result;
}

unint64_t sub_21FB9E3CC()
{
  unint64_t result;

  result = qword_25554A740;
  if (!qword_25554A740)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleSymptoms, &type metadata for PBCycleSymptoms);
    atomic_store(result, (unint64_t *)&qword_25554A740);
  }
  return result;
}

unint64_t sub_21FB9E410()
{
  unint64_t result;

  result = qword_25554A7C0;
  if (!qword_25554A7C0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBActivityType, &type metadata for PBActivityType);
    atomic_store(result, (unint64_t *)&qword_25554A7C0);
  }
  return result;
}

unint64_t sub_21FB9E454()
{
  unint64_t result;

  result = qword_25554A7D0;
  if (!qword_25554A7D0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBAppleWalkingSteadinessClassification, &type metadata for PBAppleWalkingSteadinessClassification);
    atomic_store(result, (unint64_t *)&qword_25554A7D0);
  }
  return result;
}

unint64_t sub_21FB9E498()
{
  unint64_t result;

  result = qword_25554A7D8;
  if (!qword_25554A7D8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBAppleWalkingSteadinessEvent, &type metadata for PBAppleWalkingSteadinessEvent);
    atomic_store(result, (unint64_t *)&qword_25554A7D8);
  }
  return result;
}

unint64_t sub_21FB9E4DC()
{
  unint64_t result;

  result = qword_25554A7E0;
  if (!qword_25554A7E0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBCycleFactors, &type metadata for PBCycleFactors);
    atomic_store(result, (unint64_t *)&qword_25554A7E0);
  }
  return result;
}

unint64_t sub_21FB9E520()
{
  unint64_t result;

  result = qword_25554A7E8;
  if (!qword_25554A7E8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBSleepAnalysis, &type metadata for PBSleepAnalysis);
    atomic_store(result, (unint64_t *)&qword_25554A7E8);
  }
  return result;
}

uint64_t sub_21FB9E564(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_21FA48FCC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_21FB9E844()
{
  swift_allocObject();
  swift_weakInit();
  sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
  sub_21FAA6830();
  swift_retain();
  sub_21FC5ACBC();
  return swift_release_n();
}

uint64_t sub_21FB9E908()
{
  id (*v0)(void *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  id v9;
  char *v10;
  void *v11;
  id v12;
  id (**v13)(void *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  char *v20;
  id v21;
  char *v22;
  void *v23;
  id v24;
  id (**v25)(void *);
  id v26;
  objc_super v28;
  objc_super v29;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406BB28, (uint64_t (*)(uint64_t))sub_21FA7B7DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_21FC5F720;
  v2 = sub_21FC5B604();
  v4 = v3;
  v5 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = (uint64_t *)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_identifier];
  *v7 = v2;
  v7[1] = v4;
  v8 = &v6[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_requiredEntitlementOverride];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = objc_allocWithZone(MEMORY[0x24BE40E58]);
  swift_retain();
  v10 = v6;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_21FC5B5E0();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithLabel_, v11);

  *(_QWORD *)&v10[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_listener] = v12;
  v13 = (id (**)(void *))&v10[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_serverGenerator];
  *v13 = sub_21FB9EE1C;
  v13[1] = v0;
  swift_retain();

  v29.receiver = v10;
  v29.super_class = v5;
  v14 = objc_msgSendSuper2(&v29, sel_init);
  swift_release();
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 64) = &off_24E4838E0;
  *(_QWORD *)(v1 + 32) = v14;
  v15 = sub_21FC5B604();
  v17 = v16;
  v18 = (char *)objc_allocWithZone(v5);
  v19 = (uint64_t *)&v18[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_identifier];
  *v19 = v15;
  v19[1] = v17;
  v20 = &v18[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_requiredEntitlementOverride];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = objc_allocWithZone(MEMORY[0x24BE40E58]);
  swift_retain();
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = (void *)sub_21FC5B5E0();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v21, sel_initWithLabel_, v23);

  *(_QWORD *)&v22[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_listener] = v24;
  v25 = (id (**)(void *))&v22[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_serverGenerator];
  *v25 = sub_21FB9F6B0;
  v25[1] = v0;
  swift_retain();

  v28.receiver = v22;
  v28.super_class = v5;
  v26 = objc_msgSendSuper2(&v28, sel_init);
  swift_release();
  *(_QWORD *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 104) = &off_24E4838E0;
  *(_QWORD *)(v1 + 72) = v26;
  return v1;
}

id sub_21FB9EB94(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v14[3];
  uint64_t v15;
  _UNKNOWN **v16;

  v15 = type metadata accessor for ClinicalSharingDaemonPlugin();
  v16 = &off_24E48B3C0;
  v14[0] = a2;
  v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingServer());
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = *v7;
  v10 = a1;
  swift_retain();
  v11 = sub_21FB9F808(v10, v9, v4);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v11;
}

id sub_21FB9EC80(void *a1, uint64_t a2)
{
  uint64_t v3;
  objc_class *v4;
  char *v5;
  id v6;
  char *v7;
  _DWORD *v8;
  id v9;
  objc_super v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 88);
  v4 = (objc_class *)type metadata accessor for ClinicalSharingSyncObserverServer();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client] = a1;
  v6 = a1;
  swift_retain();
  v7 = v5;
  v8 = (_DWORD *)swift_slowAlloc();
  *v8 = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_lock] = v8;
  *(_QWORD *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateSubject] = v3;
  swift_retain();

  v11.receiver = v7;
  v11.super_class = v4;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  return v9;
}

uint64_t sub_21FB9ED6C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingDaemonPlugin()
{
  return objc_opt_self();
}

uint64_t sub_21FB9EDB8()
{
  return sub_21FB9E844();
}

void sub_21FB9EDD8()
{
  sub_21FC46B70();
}

uint64_t sub_21FB9EDFC()
{
  return sub_21FB9E908();
}

id sub_21FB9EE1C(void *a1)
{
  uint64_t v1;

  return sub_21FB9EB94(a1, v1);
}

uint64_t *sub_21FB9EE34(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _DWORD *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;
  _QWORD v15[5];

  v4 = *a2;
  v15[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v15[4] = &off_24E489BC8;
  v5 = swift_allocObject();
  v15[0] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(a1 + 80);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v7;
  *((_OWORD *)a2 + 4) = 0u;
  *((_OWORD *)a2 + 5) = 0u;
  *((_OWORD *)a2 + 6) = 0u;
  *((_OWORD *)a2 + 7) = 0u;
  a2[16] = 0;
  v8 = (_DWORD *)swift_slowAlloc();
  *v8 = 0;
  a2[17] = (uint64_t)v8;
  v14 = v4;
  swift_getMetatypeMetadata();
  a2[18] = sub_21FC5B64C();
  a2[19] = v9;
  sub_21FA2CEA0((uint64_t)v15, (uint64_t)(a2 + 2));
  v10 = objc_allocWithZone(MEMORY[0x24BDD1470]);
  v11 = (void *)sub_21FC5B5E0();
  v12 = objc_msgSend(v10, sel_initWithIdentifier_, v11, v14, v15[0]);

  a2[7] = (uint64_t)v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return a2;
}

uint64_t *sub_21FB9EF5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v24;
  _QWORD v25[3];
  ValueMetadata *v26;
  _UNKNOWN **v27;

  v4 = *a2;
  v26 = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v27 = &off_24E489BC8;
  v5 = swift_allocObject();
  v25[0] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(a1 + 80);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v7;
  v8 = MEMORY[0x24BEE4B08];
  a2[11] = 0;
  a2[12] = v8;
  type metadata accessor for ClinicalSharingDAIState();
  v9 = swift_allocObject();
  v10 = v9
      + OBJC_IVAR____TtC19HealthRecordsDaemonP33_BED11DFC9D090ABA600C4282F599AD2323ClinicalSharingDAIState_startTime;
  v11 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_DWORD *)swift_slowAlloc();
  *v12 = 0;
  *(_QWORD *)(v9 + 16) = v12;
  a2[13] = v9;
  *((_OWORD *)a2 + 7) = 0u;
  *((_OWORD *)a2 + 8) = 0u;
  *((_OWORD *)a2 + 9) = 0u;
  v24 = v4;
  swift_getMetatypeMetadata();
  a2[2] = sub_21FC5B64C();
  a2[3] = v13;
  sub_21FA2CEA0((uint64_t)v25, (uint64_t)(a2 + 4));
  sub_21FB9FA54();
  v14 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  v15 = objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate());
  v16 = objc_msgSend(v15, sel_init, v24, v25[0]);
  v17 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v14, v16, 0);

  a2[9] = (uint64_t)v17;
  sub_21FC5B604();
  v18 = (void *)*__swift_project_boxed_opaque_existential_1(v25, (uint64_t)v26);
  v19 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  v20 = v18;
  v21 = (void *)sub_21FC5B5E0();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v19, sel_initWithCategory_domainName_healthStore_, 3, v21, v20);

  a2[10] = (uint64_t)v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return a2;
}

uint64_t *sub_21FB9F180(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *);
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD v37[3];
  ValueMetadata *v38;
  _UNKNOWN **v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD v43[5];

  v4 = *a2;
  v43[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v43[4] = &off_24E489BC8;
  v5 = swift_allocObject();
  v43[0] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(a1 + 80);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v7;
  sub_21FB9F9F8(0);
  v8 = (_QWORD *)swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *v9 = 0;
  v10 = MEMORY[0x24BEE4AF8];
  v8[2] = v9;
  v8[3] = v10;
  v8[4] = 0;
  a2[12] = (uint64_t)v8;
  *(_OWORD *)(a2 + 13) = 0u;
  *(_OWORD *)(a2 + 15) = 0u;
  a2[17] = 0;
  v40 = v4;
  swift_getMetatypeMetadata();
  a2[9] = sub_21FC5B64C();
  a2[10] = v11;
  sub_21FA2CEA0((uint64_t)v43, (uint64_t)(a2 + 2));
  sub_21FA2CEA0((uint64_t)v43, (uint64_t)&v40);
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v42);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v38 = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v39 = &off_24E489BC8;
  v16 = swift_allocObject();
  v37[0] = v16;
  v17 = *((_OWORD *)v14 + 3);
  *(_OWORD *)(v16 + 48) = *((_OWORD *)v14 + 2);
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 80) = *((_OWORD *)v14 + 4);
  *(_QWORD *)(v16 + 96) = *((_QWORD *)v14 + 10);
  v18 = *((_OWORD *)v14 + 1);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)v14;
  *(_OWORD *)(v16 + 32) = v18;
  type metadata accessor for ClinicalSharingSyncTaskScheduler();
  v19 = (uint64_t *)swift_allocObject();
  v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
  MEMORY[0x24BDAC7A8](v20);
  v22 = *(void (**)(uint64_t *))(v21 + 16);
  v22(&v36 - 12);
  v23 = sub_21FB9EE34((uint64_t)(&v36 - 12), v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  a2[7] = (uint64_t)v23;
  sub_21FA2CEA0((uint64_t)v43, (uint64_t)&v40);
  v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v42);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v37[-1] - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v27 + 16))(v26);
  v38 = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v39 = &off_24E489BC8;
  v28 = swift_allocObject();
  v37[0] = v28;
  v29 = *((_OWORD *)v26 + 3);
  *(_OWORD *)(v28 + 48) = *((_OWORD *)v26 + 2);
  *(_OWORD *)(v28 + 64) = v29;
  *(_OWORD *)(v28 + 80) = *((_OWORD *)v26 + 4);
  *(_QWORD *)(v28 + 96) = *((_QWORD *)v26 + 10);
  v30 = *((_OWORD *)v26 + 1);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)v26;
  *(_OWORD *)(v28 + 32) = v30;
  type metadata accessor for ClinicalSharingDAIManager();
  v31 = (uint64_t *)swift_allocObject();
  v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
  MEMORY[0x24BDAC7A8](v32);
  v22(&v36 - 12);
  v33 = sub_21FB9EF5C((uint64_t)(&v36 - 12), v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  a2[8] = (uint64_t)v33;
  v40 = 0;
  v41 = 2;
  sub_21FAEB6A4();
  swift_allocObject();
  v34 = sub_21FC5B1D8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  a2[11] = v34;
  return a2;
}

uint64_t sub_21FB9F4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;
  _QWORD v25[5];

  v25[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v25[4] = &off_24E489BC8;
  v4 = swift_allocObject();
  v25[0] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 80);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v6;
  sub_21FA2CEA0((uint64_t)v25, a2 + 16);
  sub_21FA2CEA0((uint64_t)v25, (uint64_t)v23);
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v22[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v22[4] = &off_24E489BC8;
  v11 = swift_allocObject();
  v22[0] = v11;
  v12 = *((_OWORD *)v9 + 3);
  *(_OWORD *)(v11 + 48) = *((_OWORD *)v9 + 2);
  *(_OWORD *)(v11 + 64) = v12;
  *(_OWORD *)(v11 + 80) = *((_OWORD *)v9 + 4);
  *(_QWORD *)(v11 + 96) = *((_QWORD *)v9 + 10);
  v13 = *((_OWORD *)v9 + 1);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)v9;
  *(_OWORD *)(v11 + 32) = v13;
  type metadata accessor for ClinicalSharingSyncTaskCoordinator();
  v14 = (uint64_t *)swift_allocObject();
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v22[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  v19 = sub_21FB9F180((uint64_t)v17, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  *(_QWORD *)(a2 + 56) = v19;
  return a2;
}

id sub_21FB9F6B0(void *a1)
{
  uint64_t v1;

  return sub_21FB9EC80(a1, v1);
}

id sub_21FB9F6C8()
{
  id v0;
  id result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];
  id v9[11];

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    sub_21FB0C718(v0, result, (uint64_t)v9);
    v8[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
    v8[4] = &off_24E489BC8;
    v8[0] = swift_allocObject();
    sub_21FB9F988((uint64_t)v9, v8[0] + 16);
    type metadata accessor for ClinicalSharingDaemonPlugin();
    v2 = swift_allocObject();
    v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
    MEMORY[0x24BDAC7A8](v3);
    v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v5);
    v7 = sub_21FB9F4F4((uint64_t)v5, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    sub_21FB9F9C4(v9);
    return (id)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_21FB9F808(void *a1, uint64_t a2, void *a3)
{
  char *v6;
  unint64_t v7;
  id v8;
  id v9;
  objc_super v11;
  _QWORD v12[5];

  v12[3] = type metadata accessor for ClinicalSharingDaemonPlugin();
  v12[4] = &off_24E48B3C0;
  v12[0] = a2;
  v6 = a3;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_21FC5BC7C())
    v7 = sub_21FAC9B78(MEMORY[0x24BEE4AF8]);
  else
    v7 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_cancellables] = v7;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client] = a1;
  sub_21FA2CEA0((uint64_t)v12, (uint64_t)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider]);
  v8 = a1;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for ClinicalSharingServer();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v9;
}

uint64_t sub_21FB9F8FC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21FB9F920(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_21FC46A44(a1, a2, a3);
}

uint64_t sub_21FB9F928()
{
  uint64_t v0;

  return sub_21FBB5828(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_21FB9F934()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  return swift_deallocObject();
}

uint64_t sub_21FB9F988(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ClinicalSharingDefaultDaemonEnvironment(a2, a1);
  return a2;
}

id *sub_21FB9F9C4(id *a1)
{
  destroy for ClinicalSharingDefaultDaemonEnvironment(a1);
  return a1;
}

void sub_21FB9F9F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_25406B438)
  {
    v2 = type metadata accessor for ClinicalSharingSyncTask();
    v4 = type metadata accessor for SingleValuePublisherTaskQueue(a1, v2, (uint64_t)&off_25554E600, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25406B438);
  }
}

unint64_t sub_21FB9FA54()
{
  unint64_t result;

  result = qword_25406CB58;
  if (!qword_25406CB58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25406CB58);
  }
  return result;
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD v9[8];

  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a1;
  v9[6] = a2;
  return sub_21FB9FBEC((void (*)(char *, char *))sub_21FBA0160, (uint64_t)v9, a3, a4, MEMORY[0x24BEE4078], a5, MEMORY[0x24BEE40A8], a8);
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  _QWORD v10[7];
  uint64_t v11;

  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a1;
  v10[6] = a2;
  v8 = sub_21FA2CDB4();
  return sub_21FB9FBEC((void (*)(char *, char *))sub_21FBA017C, (uint64_t)v10, a3, a4, v8, a5, MEMORY[0x24BEE3F20], (uint64_t)&v11);
}

void sub_21FB9FB68(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  void *v11;

  v11 = (void *)MEMORY[0x2207D0ABC]();
  a2(a1);
  objc_autoreleasePoolPop(v11);
  if (v7)
    *a7 = v7;
}

uint64_t sub_21FB9FBEC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_21FC5BAA8();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_21FC5B73C();
  v57 = sub_21FC5BC34();
  v53 = sub_21FC5BC40();
  sub_21FC5BBF8();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_21FC5B730();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_21FC5BAB4();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_21FC5BC28();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_21FC5BAB4();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_21FC5BC28();
      sub_21FC5BAB4();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

void sub_21FBA00F8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  void *v5;

  v5 = (void *)MEMORY[0x2207D0ABC]();
  a2(a1);
  objc_autoreleasePoolPop(v5);
  if (v2)
    __break(1u);
}

uint64_t sub_21FBA0160(uint64_t a1, uint64_t a2)
{
  return sub_21FBA0198(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_21FBA00F8);
}

uint64_t sub_21FBA017C(uint64_t a1, uint64_t a2)
{
  return sub_21FBA0198(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_21FB9FB68);
}

uint64_t sub_21FBA0198(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[5], v3[6], v3[2], v3[3], v3[4], a2);
}

uint64_t Sequence.autoreleasingCompactMap<A>(_:)()
{
  return sub_21FC5B754();
}

{
  return sub_21FC5B754();
}

void sub_21FBA01F4(uint64_t a1, void (*a2)(uint64_t))
{
  void *v4;

  v4 = (void *)MEMORY[0x2207D0ABC]();
  a2(a1);
  objc_autoreleasePoolPop(v4);
}

uint64_t sub_21FBA0258(uint64_t a1)
{
  return sub_21FBA02D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21FBA01F4);
}

uint64_t sub_21FBA02B4(uint64_t a1)
{
  return sub_21FBA02D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21FBA00F8);
}

uint64_t sub_21FBA02D0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t SignedClinicalDataFHIROperationGenerator.init(feature:context:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

_QWORD *SignedClinicalDataFHIROperationGenerator.healthCardsIssueRequests()()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  unint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  int v26;
  uint64_t *boxed_opaque_existential_1;
  char isUniquelyReferenced_nonNull_native;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  _OWORD v45[2];
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - v3;
  v5 = sub_21FC5AAAC();
  v6 = *(_QWORD **)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - v10;
  v12 = v0[1];
  v43 = *v0;
  v13 = objc_msgSend(v12, sel_accountInformation);
  v14 = objc_msgSend(v13, sel_authorization);

  if (!v14)
  {
    sub_21FBA07C8();
    swift_allocError();
    *v22 = xmmword_21FC6DF60;
    swift_willThrow();
    return v6;
  }
  v42 = v1;
  v15 = objc_msgSend(v14, sel_patientID);

  v16 = sub_21FC5B604();
  v18 = v17;

  sub_21FA2D1A0(0, &qword_25554A838, (uint64_t (*)(uint64_t))sub_21FBA080C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FC5EE30;
  *(_BYTE *)(inited + 32) = 7;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = v18;
  v20 = sub_21FA7C80C(inited);
  objc_msgSend(v12, sel_queryMode);
  if ((HKFHIRResourceQueryModeIncludesFullMode() & 1) == 0)
  {
    v23 = objc_msgSend(v12, sel_lastFetchDate);
    if (v23)
    {
      v24 = v23;
      sub_21FC5AA94();

      v25 = (void (*)(char *, char *, uint64_t))v6[4];
      v25(v4, v9, v5);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v6[7])(v4, 0, 1, v5);
      v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v6[6])(v4, 1, v5);
      v21 = v42;
      if (v26 != 1)
      {
        v25(v11, v4, v5);
        v48 = v5;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v46);
        ((void (*)(uint64_t *, char *, uint64_t))v6[2])(boxed_opaque_existential_1, v11, v5);
        sub_21FA7B73C(&v46, v45);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v44 = v20;
        sub_21FA78D6C(v45, 5, isUniquelyReferenced_nonNull_native);
        v20 = v44;
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v6[1])(v11, v5);
        goto LABEL_10;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v6[7])(v4, 1, 1, v5);
      v21 = v42;
    }
    sub_21FA2D1F8((uint64_t)v4, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    goto LABEL_10;
  }
  v21 = v42;
LABEL_10:
  v29 = v43;
  swift_bridgeObjectRetain();
  v30 = objc_msgSend(v29, sel_interactions);
  sub_21FBA0874();
  v31 = sub_21FC5B7A8();

  v32 = sub_21FBA0BE8(v31, 0xD000000000000013, 0x800000021FC760F0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6 = sub_21FBA0A04(v32, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (!v21
    && (v34 = objc_msgSend(v12, sel_accountInformation),
        v35 = objc_msgSend(v34, sel_authorization),
        v34,
        v35)
    && (HKFHIRCredential.asAuthorizationHeader()(), v35, (v36 = *((_QWORD *)&v46 + 1)) != 0))
  {
    v37 = v46;
    v38 = v47;
    v39 = v48;
    sub_21FADE734(v46, *((uint64_t *)&v46 + 1));
    v40 = sub_21FBA08B0((uint64_t)v6, v37, v36, v38, v39);
    sub_21FACD2BC(v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21FACD2BC(v37, v36);
    return (_QWORD *)v40;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_21FBA07C8()
{
  unint64_t result;

  result = qword_25554A830;
  if (!qword_25554A830)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for FHIRServerOperationRequestError, &type metadata for FHIRServerOperationRequestError);
    atomic_store(result, (unint64_t *)&qword_25554A830);
  }
  return result;
}

void sub_21FBA080C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25553FE40)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25553FE40);
  }
}

unint64_t sub_21FBA0874()
{
  unint64_t result;

  result = qword_2555416D0;
  if (!qword_2555416D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2555416D0);
  }
  return result;
}

uint64_t sub_21FBA08B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  _QWORD v19[4];
  __int128 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  HealthRecordsDaemon::HTTPHeader v24;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v23 = MEMORY[0x24BEE4AF8];
    sub_21FC01D78(0, v5, 0);
    v6 = v23;
    v11 = a1 + 32;
    do
    {
      sub_21FA2CEA0(v11, (uint64_t)&v20);
      v19[0] = a2;
      v19[1] = a3;
      v19[2] = a4;
      v19[3] = a5;
      v12 = v21;
      v13 = v22;
      v24.value._object = (void *)__swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v20, (uint64_t)v21);
      v24.name._countAndFlagsBits = (uint64_t)v19;
      v24.name._object = v12;
      v24.value._countAndFlagsBits = v13;
      WebRequest.add(header:)(v24);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21FC01D78(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v23;
      }
      v16 = *(_QWORD *)(v6 + 16);
      v15 = *(_QWORD *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_21FC01D78(v15 > 1, v16 + 1, 1);
        v6 = v23;
      }
      *(_QWORD *)(v6 + 16) = v16 + 1;
      sub_21FA3175C(&v20, v6 + 40 * v16 + 32);
      v11 += 40;
      --v5;
    }
    while (v5);
  }
  return v6;
}

_QWORD *sub_21FBA0A04(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  __int128 v15[2];
  uint64_t v16;

  v16 = a2;
  if (a1 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_21FC5BC7C())
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207D057C](i - 4, a1) : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      HKClinicalGatewayEndpointSchema.asWebRequest(substitutions:)(v16, (uint64_t *)&v13);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      if (v14)
      {
        sub_21FA3175C(&v13, (uint64_t)v15);
        sub_21FA3175C(v15, (uint64_t)&v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_21FA7E614(0, v5[2] + 1, 1, v5);
        v11 = v5[2];
        v10 = v5[3];
        if (v11 >= v10 >> 1)
          v5 = sub_21FA7E614((_QWORD *)(v10 > 1), v11 + 1, 1, v5);
        v5[2] = v11 + 1;
        sub_21FA3175C(&v13, (uint64_t)&v5[5 * v11 + 4]);
      }
      else
      {
        sub_21FA2D1F8((uint64_t)&v13, (unint64_t *)&qword_25554A840, (uint64_t (*)(uint64_t))sub_21FBA0E98);
      }
      if (v9 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_21FBA0BE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v19;

  v19 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_22;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x2207D057C](v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_21;
        v10 = v5;
        v11 = objc_msgSend(v7, sel_name);
        v12 = sub_21FC5B604();
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          sub_21FC5BBE0();
          sub_21FC5BC10();
          sub_21FC5BC1C();
          sub_21FC5BBEC();
          goto LABEL_5;
        }
        v16 = sub_21FC5BDF0();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_17;

LABEL_5:
        ++v6;
        v5 = v10;
        if (v9 == v10)
          return v19;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      v5 = sub_21FC5BC7C();
      if (!v5)
        return MEMORY[0x24BEE4AF8];
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

_QWORD *initializeBufferWithCopyOfBuffer for SignedClinicalDataFHIROperationGenerator(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for SignedClinicalDataFHIROperationGenerator(id *a1)
{

}

uint64_t assignWithCopy for SignedClinicalDataFHIROperationGenerator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for SignedClinicalDataFHIROperationGenerator(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for SignedClinicalDataFHIROperationGenerator()
{
  return &type metadata for SignedClinicalDataFHIROperationGenerator;
}

unint64_t sub_21FBA0E98()
{
  unint64_t result;

  result = qword_25553FE38;
  if (!qword_25553FE38)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25553FE38);
  }
  return result;
}

uint64_t *sub_21FBA0EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21FC5A98C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
  }
  return a1;
}

uint64_t sub_21FBA0FA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21FC5A98C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21FBA0FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_21FC5A98C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

uint64_t sub_21FBA1058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v6 = sub_21FC5A98C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  return a1;
}

uint64_t sub_21FBA10E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_21FC5A98C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

uint64_t sub_21FBA1164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_21FC5A98C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

uint64_t sub_21FBA11E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBA11F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21FC5A98C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21FBA1230()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBA123C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21FC5A98C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WebRequestEndState()
{
  uint64_t result;

  result = qword_25554A8A0;
  if (!qword_25554A8A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21FBA12B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5A98C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21FBA132C(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    sub_21FA2CDB4();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21FBA13A4()
{
  uint64_t result;

  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAC8);
  result = sub_21FC5BA48();
  qword_255572F40 = result;
  return result;
}

id sub_21FBA13E8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v14[3];

  result = sub_21FBA506C();
  v7 = result;
  if (!v3)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
    type metadata accessor for WebRequestPerformer();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 24) = MEMORY[0x24BEE4B08];
    v10 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v7, v8, 0);

    *(_QWORD *)(v9 + 16) = v10;
    v11 = *(void **)(v2 + 40);
    v14[0] = v9;
    v14[1] = v11;
    v14[2] = a2;
    type metadata accessor for ClinicalDocumentDownloadTask();
    swift_allocObject();
    v12 = v11;
    v13 = a2;
    return (id)sub_21FAA6A54((uint64_t)a1, (uint64_t)v14);
  }
  return result;
}

_QWORD *sub_21FBA14F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;

  swift_getMetatypeMetadata();
  v2[2] = sub_21FC5B64C();
  v2[3] = v5;
  v2[4] = a1;
  v2[5] = a2;
  return v2;
}

uint64_t sub_21FBA1544(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 232) = a2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v2;
  v4 = sub_21FC5AAF4();
  *(_QWORD *)(v3 + 152) = v4;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 168) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21FBA15A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 136);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_21FC5BC7C())
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v3;
      v4 = *(_OWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 176) = v4;
      *(_OWORD *)(v3 + 16) = v4;
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v5;
      *v5 = v0;
      v5[1] = sub_21FBA1698;
      return sub_21FC5BCDC();
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA1698()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FBA1704()
{
  uint64_t v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v21;
  uint64_t v22;

  if (*(_BYTE *)(v0 + 232) != 1)
  {
    sub_21FA5BE58(0, (unint64_t *)&qword_25406BAC8);
    v1 = (id)sub_21FC5BA48();
    goto LABEL_5;
  }
  if (qword_25553DB90 != -1)
    goto LABEL_20;
  while (1)
  {
    v1 = (id)qword_255572F40;
LABEL_5:
    v2 = v1;
    *(_QWORD *)(v0 + 208) = v1;
    v3 = *(_QWORD *)(v0 + 176);
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_21FC5BC7C();
      swift_bridgeObjectRelease();
      if (!v4)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v4)
        goto LABEL_17;
    }
    *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE4AF8];
    sub_21FC01898(0, v4 & ~(v4 >> 63), 0);
    if ((v4 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_20:
    swift_once();
  }
  v5 = 0;
  v6 = *(_QWORD *)(v0 + 120);
  v7 = v3 & 0xC000000000000001;
  v21 = v2;
  v22 = *(_QWORD *)(v0 + 176) + 32;
  do
  {
    if (v7)
      v8 = (id)MEMORY[0x2207D057C](v5, *(_QWORD *)(v0 + 176));
    else
      v8 = *(id *)(v22 + 8 * v5);
    v9 = v8;
    v10 = objc_msgSend(v8, sel_identifier);
    sub_21FC5AADC();

    *(_QWORD *)(v0 + 120) = v6;
    v12 = *(_QWORD *)(v6 + 16);
    v11 = *(_QWORD *)(v6 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_21FC01898(v11 > 1, v12 + 1, 1);
      v6 = *(_QWORD *)(v0 + 120);
    }
    v14 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 152);
    ++v5;
    *(_QWORD *)(v6 + 16) = v12 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v6+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v12, v13, v15);
  }
  while (v4 != v5);
  swift_bridgeObjectRelease();
  v2 = v21;
LABEL_18:
  v16 = *(void **)(*(_QWORD *)(v0 + 144) + 32);
  v17 = sub_21FC5B79C();
  *(_QWORD *)(v0 + 216) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = v0 + 128;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_21FBA19F0;
  v18 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v19 = (_QWORD *)(v0 + 80);
  v19[1] = 0x40000000;
  v19[2] = sub_21FBA1BB4;
  v19[3] = &block_descriptor_14;
  v19[4] = v18;
  objc_msgSend(v16, sel_notifyDownloadingCompleteAndRequestMoreWithIdentifiers_requestBatchSize_completion_, v17, v2, v19);
  return swift_continuation_await();
}

uint64_t sub_21FBA19AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA19F0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21FBA1A50()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(void **)(v0 + 216);

  v2 = *(_QWORD *)(v0 + 128);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    *(_QWORD *)(v0 + 176) = v2;
    v3 = *(_QWORD *)(v0 + 144);
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v4;
    *(_QWORD *)(v4 + 16) = v2;
    *(_QWORD *)(v4 + 24) = v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v5;
    *v5 = v0;
    v5[1] = sub_21FBA1698;
    return sub_21FC5BCDC();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA1B64()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 208);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA1BB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_21FA2CDB4();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_21FA5BE58(0, (unint64_t *)&qword_2555414E8);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_21FC5B7A8();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21FBA1C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  v4[32] = a3;
  v4[33] = a4;
  v4[31] = a2;
  v4[34] = type metadata accessor for HTTPError();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, (unint64_t *)&qword_255540CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v6 = sub_21FC5AAF4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4[44] = v6;
  v4[45] = *(_QWORD *)(v6 - 8);
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  sub_21FBA4A44();
  v4[48] = v8;
  v4[49] = *(_QWORD *)(v8 - 8);
  v4[50] = swift_task_alloc();
  sub_21FA2D1A0(0, &qword_25406BE78, v7, v5);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21FBA1E00()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _BYTE *v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;

  v1 = *(_QWORD *)(v0 + 256);
  if (v1 >> 62)
    goto LABEL_27;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 424) = v2;
  if (v2)
  {
    do
    {
      v3 = 0;
      v4 = MEMORY[0x24BEE4B00];
      v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
      while (1)
      {
        *(_QWORD *)(v0 + 432) = v4;
        v6 = *(_QWORD *)(v0 + 256);
        v7 = (v6 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207D057C](v3) : *(id *)(v6 + 8 * v3 + 32);
        *(_QWORD *)(v0 + 440) = v7;
        *(_QWORD *)(v0 + 448) = v3 + 1;
        if (__OFADD__(v3, 1))
          break;
        v8 = objc_msgSend(v7, sel_accountIdentifier);
        if (v8)
        {
          v9 = v8;
          sub_21FC5AADC();

          v10 = 0;
        }
        else
        {
          v10 = 1;
        }
        v11 = *(_QWORD *)(v0 + 408);
        v12 = *(_QWORD *)(v0 + 416);
        v14 = *(_QWORD *)(v0 + 352);
        v13 = *(_QWORD *)(v0 + 360);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, v10, 1, v14);
        sub_21FA44968(v12, v11, &qword_25406BE78, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v14) == 1)
        {
          sub_21FA2D1F8(*(_QWORD *)(v0 + 408), &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
          sub_21FACD244();
          swift_allocError();
          *v41 = 0;
          swift_willThrow();
          v42 = *(void **)(v0 + 440);
          sub_21FA2D1F8(*(_QWORD *)(v0 + 416), &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          return (*(uint64_t (**)(void))(v0 + 8))();
        }
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 352));
        if (!*(_QWORD *)(v4 + 16) || (v15 = sub_21FA73E18(*(_QWORD *)(v0 + 376)), (v16 & 1) == 0))
        {
          v39 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 464) = v39;
          *v39 = v0;
          v39[1] = sub_21FBA2408;
          return sub_21FBB968C(*(_QWORD *)(v0 + 376));
        }
        v17 = *(_QWORD *)(v0 + 360);
        v45 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v15);
        v18 = *(void (**)(_QWORD, _QWORD))(v17 + 8);
        v19 = *(void **)(v0 + 440);
        v20 = *(_QWORD *)(v0 + 416);
        v21 = *(_QWORD *)(v0 + 344);
        v22 = *(_QWORD *)(v0 + 336);
        v23 = *(_QWORD *)(v0 + 264);
        v18(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
        sub_21FA2D1F8(v20, &qword_25406BE78, v5);
        v24 = sub_21FC5B844();
        v25 = *(_QWORD *)(v24 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v21, 1, 1, v24);
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = 0;
        v26[3] = 0;
        v26[4] = v23;
        v26[5] = v19;
        v26[6] = v45;
        sub_21FA44968(v21, v22, (unint64_t *)&qword_255540CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
        LODWORD(v21) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24);
        swift_retain();
        v27 = v19;
        v28 = v45;
        v29 = *(_QWORD *)(v0 + 336);
        if ((_DWORD)v21 == 1)
        {
          sub_21FA2D1F8(*(_QWORD *)(v0 + 336), (unint64_t *)&qword_255540CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
        }
        else
        {
          sub_21FC5B838();
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v24);
        }
        if (v26[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v30 = sub_21FC5B808();
          v32 = v31;
          swift_unknownObjectRelease();
        }
        else
        {
          v30 = 0;
          v32 = 0;
        }
        v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
        v33 = **(_QWORD **)(v0 + 248);
        v34 = v32 | v30;
        if (v32 | v30)
        {
          v34 = v0 + 16;
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v30;
          *(_QWORD *)(v0 + 40) = v32;
        }
        v36 = *(void **)(v0 + 440);
        v35 = *(_QWORD *)(v0 + 448);
        v37 = *(_QWORD *)(v0 + 424);
        v38 = *(_QWORD *)(v0 + 344);
        *(_QWORD *)(v0 + 144) = 1;
        *(_QWORD *)(v0 + 152) = v34;
        *(_QWORD *)(v0 + 160) = v33;
        swift_task_create();

        swift_release();
        sub_21FA2D1F8(v38, (unint64_t *)&qword_255540CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
        if (v35 == v37)
          goto LABEL_28;
        v3 = *(_QWORD *)(v0 + 448);
        v4 = MEMORY[0x24BEE4B00];
      }
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      v43 = sub_21FC5BC7C();
      *(_QWORD *)(v0 + 424) = v43;
    }
    while (v43);
  }
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 456) = sub_21FA2CDB4();
  sub_21FC5B850();
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v44;
  *v44 = v0;
  v44[1] = sub_21FBA2BC4;
  return sub_21FC5B85C();
}

uint64_t sub_21FBA2408(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 472) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 480) = a1;
  return swift_task_switch();
}

id sub_21FBA247C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  void (*v8)(uint64_t, uint64_t);
  id i;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  _QWORD *v45;
  _BYTE *v46;
  void *v47;
  uint64_t v48;

  v1 = *(void **)(v0 + 480);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 360);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v3, *(_QWORD *)(v0 + 376), v4);
  v6 = v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21FA78FD4((uint64_t)v6, v3, isUniquelyReferenced_nonNull_native);
  v48 = v2;
  swift_bridgeObjectRelease();
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v3, v4);
  for (i = *(id *)(v0 + 480); ; i = *(id *)(*(_QWORD *)(v48 + 56) + 8 * v42))
  {
    v10 = *(void **)(v0 + 440);
    v11 = *(_QWORD *)(v0 + 416);
    v12 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 336);
    v14 = *(_QWORD *)(v0 + 264);
    v8(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
    sub_21FA2D1F8(v11, &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    v15 = sub_21FC5B844();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v18 = v17 + 2;
    v17[3] = 0;
    v17[4] = v14;
    v17[5] = v10;
    v17[6] = i;
    sub_21FA44968(v12, v13, (unint64_t *)&qword_255540CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
    LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15);
    swift_retain();
    v19 = v10;
    v20 = i;
    v21 = *(_QWORD *)(v0 + 336);
    if ((_DWORD)v12 == 1)
    {
      v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990];
      sub_21FA2D1F8(*(_QWORD *)(v0 + 336), (unint64_t *)&qword_255540CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
      if (*v18)
        goto LABEL_4;
    }
    else
    {
      sub_21FC5B838();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v15);
      v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990];
      if (*v18)
      {
LABEL_4:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v23 = sub_21FC5B808();
        v25 = v24;
        swift_unknownObjectRelease();
        goto LABEL_7;
      }
    }
    v23 = 0;
    v25 = 0;
LABEL_7:
    v26 = **(_QWORD **)(v0 + 248);
    v27 = v25 | v23;
    if (v25 | v23)
    {
      v27 = v0 + 16;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = v23;
      *(_QWORD *)(v0 + 40) = v25;
    }
    v29 = *(void **)(v0 + 440);
    v28 = *(_QWORD *)(v0 + 448);
    v30 = *(_QWORD *)(v0 + 424);
    v31 = *(_QWORD *)(v0 + 344);
    *(_QWORD *)(v0 + 144) = 1;
    *(_QWORD *)(v0 + 152) = v27;
    *(_QWORD *)(v0 + 160) = v26;
    swift_task_create();

    swift_release();
    sub_21FA2D1F8(v31, (unint64_t *)&qword_255540CF0, v22);
    if (v28 == v30)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 456) = sub_21FA2CDB4();
      sub_21FC5B850();
      v45 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 488) = v45;
      *v45 = v0;
      v45[1] = sub_21FBA2BC4;
      return (id)sub_21FC5B85C();
    }
    v32 = *(_QWORD *)(v0 + 448);
    *(_QWORD *)(v0 + 432) = v48;
    v33 = *(_QWORD *)(v0 + 256);
    result = (v33 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207D057C](v32) : *(id *)(v33 + 8 * v32 + 32);
    *(_QWORD *)(v0 + 440) = result;
    *(_QWORD *)(v0 + 448) = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    v35 = objc_msgSend(result, sel_accountIdentifier);
    if (v35)
    {
      v36 = v35;
      sub_21FC5AADC();

      v37 = 0;
    }
    else
    {
      v37 = 1;
    }
    v38 = *(_QWORD *)(v0 + 408);
    v39 = *(_QWORD *)(v0 + 416);
    v41 = *(_QWORD *)(v0 + 352);
    v40 = *(_QWORD *)(v0 + 360);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v39, v37, 1, v41);
    sub_21FA44968(v39, v38, &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v41) == 1)
    {
      sub_21FA2D1F8(*(_QWORD *)(v0 + 408), &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
      sub_21FACD244();
      swift_allocError();
      *v46 = 0;
      swift_willThrow();
      v47 = *(void **)(v0 + 440);
      sub_21FA2D1F8(*(_QWORD *)(v0 + 416), &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 352));
    if (!*(_QWORD *)(v48 + 16) || (v42 = sub_21FA73E18(*(_QWORD *)(v0 + 376)), (v43 & 1) == 0))
    {
      v44 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 464) = v44;
      *v44 = v0;
      v44[1] = sub_21FBA2408;
      return (id)sub_21FBB968C(*(_QWORD *)(v0 + 376));
    }
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 360) + 8);
  }
  __break(1u);
  return result;
}

uint64_t sub_21FBA2A80()
{
  uint64_t v0;
  void *v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
  v1 = *(void **)(v0 + 440);
  sub_21FA2D1F8(*(_QWORD *)(v0 + 416), &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA2BC4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FBA2C28()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(v0 + 496) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v2;
    *v2 = v0;
    v2[1] = sub_21FBA2BC4;
    return sub_21FC5B85C();
  }
}

uint64_t sub_21FBA2D8C()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t log;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t type;
  os_log_type_t typea[8];
  uint64_t v74;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384));
  v1 = *(void **)(v0 + 208);
  *(_QWORD *)(v0 + 184) = v1;
  v2 = (id *)(v0 + 184);
  v3 = v1;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 320);
    v4 = *(_QWORD *)(v0 + 328);
    v6 = *(_QWORD *)(v0 + 280);

    sub_21FBA4B80(v6, v4);
    sub_21FBA4BC4(v4, v5);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v8 = *(uint64_t **)(v0 + 320);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *v8;
      if (qword_25406B7F8 != -1)
        swift_once();
      v10 = *(_QWORD *)(v0 + 328);
      v11 = *(_QWORD *)(v0 + 304);
      v12 = sub_21FC5AFD4();
      __swift_project_value_buffer(v12, (uint64_t)qword_25406D830);
      sub_21FBA4BC4(v10, v11);
      swift_retain_n();
      v13 = sub_21FC5AFC8();
      v14 = sub_21FC5B97C();
      v15 = os_log_type_enabled(v13, v14);
      v16 = *(_QWORD *)(v0 + 328);
      v17 = *(_QWORD *)(v0 + 304);
      if (v15)
      {
        v64 = *(_QWORD *)(v0 + 296);
        v66 = *(_QWORD *)(v0 + 288);
        v18 = *(_QWORD *)(v0 + 264);
        v19 = swift_slowAlloc();
        v69 = swift_slowAlloc();
        v74 = v69;
        *(_DWORD *)v19 = 136315650;
        v62 = v17;
        v20 = v9;
        v70 = v16;
        v22 = *(_QWORD *)(v18 + 16);
        v21 = *(_QWORD *)(v18 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 224) = sub_21FABDCF8(v22, v21, &v74);
        sub_21FC5BAC0();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v19 + 12) = 2048;
        *(_QWORD *)(v0 + 232) = v20;
        sub_21FC5BAC0();
        *(_WORD *)(v19 + 22) = 2080;
        sub_21FBA4BC4(v17, v64);
        sub_21FBA4BC4(v64, v66);
        sub_21FC5BE08();
        v23 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_21FC5BAF0();
        swift_unknownObjectRelease();
        v24 = sub_21FC5B64C();
        v26 = v25;
        sub_21FBA4C08(v64);
        *(_QWORD *)(v0 + 240) = sub_21FABDCF8(v24, v26, &v74);
        sub_21FC5BAC0();
        swift_bridgeObjectRelease();
        sub_21FBA4C08(v62);
        _os_log_impl(&dword_21FA27000, v13, v14, "%s threw HTTP error statusCode: %ld error: %s. Continue with downloads.", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v69, -1, -1);
        MEMORY[0x2207D105C](v19, -1, -1);

        v27 = v70;
      }
      else
      {

        sub_21FBA4C08(v17);
        swift_release_n();
        v27 = v16;
      }
    }
    else
    {
      sub_21FBA4C08((uint64_t)v8);
      if (qword_25406B7F8 != -1)
        swift_once();
      v44 = *(_QWORD *)(v0 + 328);
      v45 = *(_QWORD *)(v0 + 312);
      v46 = sub_21FC5AFD4();
      __swift_project_value_buffer(v46, (uint64_t)qword_25406D830);
      sub_21FBA4BC4(v44, v45);
      swift_retain_n();
      v47 = sub_21FC5AFC8();
      v48 = sub_21FC5B97C();
      v49 = os_log_type_enabled(v47, v48);
      v50 = *(_QWORD *)(v0 + 328);
      v51 = *(_QWORD *)(v0 + 312);
      if (v49)
      {
        v63 = *(_QWORD *)(v0 + 296);
        v65 = *(_QWORD *)(v0 + 288);
        *(_QWORD *)typea = *(_QWORD *)(v0 + 328);
        v52 = *(_QWORD *)(v0 + 264);
        v53 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v74 = v71;
        *(_DWORD *)v53 = 136315394;
        v67 = v47;
        v54 = v51;
        log = v48;
        v56 = *(_QWORD *)(v52 + 16);
        v55 = *(_QWORD *)(v52 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 200) = sub_21FABDCF8(v56, v55, &v74);
        sub_21FC5BAC0();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v53 + 12) = 2080;
        sub_21FBA4BC4(v51, v63);
        sub_21FBA4BC4(v63, v65);
        sub_21FC5BE08();
        v57 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_21FC5BAF0();
        swift_unknownObjectRelease();
        v58 = sub_21FC5B64C();
        v60 = v59;
        sub_21FBA4C08(v63);
        *(_QWORD *)(v0 + 216) = sub_21FABDCF8(v58, v60, &v74);
        sub_21FC5BAC0();
        swift_bridgeObjectRelease();
        sub_21FBA4C08(v54);
        _os_log_impl(&dword_21FA27000, v67, log, "%s threw HTTP error: %s. Continue with downloads.", (uint8_t *)v53, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2207D105C](v71, -1, -1);
        MEMORY[0x2207D105C](v53, -1, -1);

        v27 = *(_QWORD *)typea;
      }
      else
      {

        sub_21FBA4C08(v51);
        swift_release_n();
        v27 = v50;
      }
    }
    sub_21FBA4C08(v27);
    v43 = *v2;
    goto LABEL_19;
  }

  if (qword_25406B7F8 != -1)
    swift_once();
  v28 = sub_21FC5AFD4();
  __swift_project_value_buffer(v28, (uint64_t)qword_25406D830);
  swift_retain();
  v29 = v1;
  swift_retain();
  v30 = v1;
  v31 = sub_21FC5AFC8();
  v32 = sub_21FC5B97C();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = *(_QWORD *)(v0 + 264);
    v34 = swift_slowAlloc();
    type = swift_slowAlloc();
    v74 = type;
    *(_DWORD *)v34 = 136315394;
    v36 = *(_QWORD *)(v33 + 16);
    v35 = *(_QWORD *)(v33 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 168) = sub_21FABDCF8(v36, v35, &v74);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v34 + 12) = 2080;
    *(_QWORD *)(v0 + 176) = v1;
    v37 = v1;
    v38 = v1;
    sub_21FC5BE08();
    v39 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_21FC5BAF0();
    swift_unknownObjectRelease();
    v40 = sub_21FC5B64C();
    v42 = v41;

    *(_QWORD *)(v0 + 192) = sub_21FABDCF8(v40, v42, &v74);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FA27000, v31, v32, "%s threw error: %s. Continue with downloads.", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](type, -1, -1);
    MEMORY[0x2207D105C](v34, -1, -1);

    v43 = v1;
LABEL_19:

    goto LABEL_20;
  }

  swift_release_n();
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_21FAC1750;
  v10[3] = a6;
  v10[4] = a4;
  v10[2] = a5;
  return swift_task_switch();
}

uint64_t sub_21FBA3780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21FBA379C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;

  *(_QWORD *)(v0 + 40) = sub_21FBA13E8(*(void **)(v0 + 16), *(void **)(v0 + 24));
  v1 = objc_msgSend(*(id *)(v0 + 16), sel_contentType);
  if (!v1)
  {
    sub_21FC5B604();
    goto LABEL_10;
  }
  v2 = v1;
  v3 = sub_21FC5B604();
  v5 = v4;

  v6 = sub_21FC5B604();
  if (!v5)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v3 != v6 || v5 != v7)
  {
    v9 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      goto LABEL_13;
LABEL_11:
    v10 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 32);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v11;
    *v11 = v0;
    v11[1] = sub_21FBA3A20;
    return sub_21FAA6AB8(v10);
  }
  swift_bridgeObjectRelease_n();
LABEL_13:
  v13 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 32);
  v14 = objc_msgSend(*(id *)(v0 + 16), sel_FHIRVersion);
  *(_QWORD *)(v0 + 48) = v14;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489A8]), sel_init);
  *(_QWORD *)(v0 + 56) = v15;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v16;
  *v16 = v0;
  v16[1] = sub_21FBA3974;
  return sub_21FAA7BE4(v13, (uint64_t)v14, (uint64_t)v15);
}

uint64_t sub_21FBA3974()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v2 = *(void **)(*(_QWORD *)v1 + 56);
  v3 = *(void **)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_21FBA39EC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA3A20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FBA3A84()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA3AB8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA3AEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[43] = a1;
  v2[44] = v1;
  sub_21FA2D1A0(0, &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2[45] = swift_task_alloc();
  v3 = sub_21FC5AAF4();
  v2[46] = v3;
  v2[47] = *(_QWORD *)(v3 - 8);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21FBA3B94()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0[44] + 32);
  v0[50] = v1;
  v2 = sub_21FC5AAC4();
  v0[51] = v2;
  v0[15] = v0 + 42;
  v0[10] = v0;
  v0[11] = sub_21FBA3C54;
  v0[40] = swift_continuation_init();
  v0[36] = MEMORY[0x24BDAC760];
  v0[37] = 0x40000000;
  v0[38] = sub_21FAA9320;
  v0[39] = &block_descriptor_11;
  objc_msgSend(v1, sel_fetchAttachmentWithIdentifier_completion_, v2, v0 + 36);
  return swift_continuation_await();
}

uint64_t sub_21FBA3C54()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 416) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_21FBA3CB4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  _BYTE *v12;

  v1 = *(void **)(v0 + 408);
  v2 = *(void **)(v0 + 336);
  *(_QWORD *)(v0 + 424) = v2;

  v3 = objc_msgSend(v2, sel_accountIdentifier);
  if (v3)
  {
    v4 = v3;
    v6 = *(_QWORD *)(v0 + 376);
    v5 = *(_QWORD *)(v0 + 384);
    v8 = *(_QWORD *)(v0 + 360);
    v7 = *(_QWORD *)(v0 + 368);
    sub_21FC5AADC();

    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v9(v8, v5, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) != 1)
    {
      v9(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368));
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 432) = v10;
      *v10 = v0;
      v10[1] = sub_21FBA3E58;
      return sub_21FBB968C(*(_QWORD *)(v0 + 392));
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 376) + 56))(*(_QWORD *)(v0 + 360), 1, 1, *(_QWORD *)(v0 + 368));
  }
  sub_21FA2D1F8(*(_QWORD *)(v0 + 360), &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_21FACD244();
  swift_allocError();
  *v12 = 0;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA3E58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)*v2;
  v4[55] = a1;
  v4[56] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = (_QWORD *)swift_task_alloc();
    v4[57] = v5;
    *v5 = v4;
    v5[1] = sub_21FBA3EFC;
    v6 = v4[53];
    v7 = v4[44];
    v5[3] = a1;
    v5[4] = v7;
    v5[2] = v6;
  }
  return swift_task_switch();
}

uint64_t sub_21FBA3EFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FBA3F60()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[50];
  v2 = sub_21FC5AAC4();
  v0[59] = v2;
  v0[7] = v0 + 41;
  v0[2] = v0;
  v0[3] = sub_21FBA4010;
  v3 = swift_continuation_init();
  v0[31] = MEMORY[0x24BDAC760];
  v4 = v0 + 31;
  v4[1] = 0x40000000;
  v4[2] = sub_21FAA9320;
  v4[3] = &block_descriptor_6;
  v4[4] = v3;
  objc_msgSend(v1, sel_fetchAttachmentWithIdentifier_completion_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_21FBA4010()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 480) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21FBA4070()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;
  void *v9;

  v1 = *(void **)(v0 + 472);
  v2 = *(void **)(v0 + 328);
  *(_QWORD *)(v0 + 488) = v2;

  if (objc_msgSend(v2, sel_status) == (id)3)
  {
    v3 = *(void **)(v0 + 400);
    v4 = sub_21FC5AAC4();
    *(_QWORD *)(v0 + 496) = v4;
    *(_QWORD *)(v0 + 144) = v0;
    *(_QWORD *)(v0 + 152) = sub_21FBA41A0;
    v5 = swift_continuation_init();
    *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
    v6 = (_QWORD *)(v0 + 208);
    v6[1] = 0x40000000;
    v6[2] = sub_21FBA132C;
    v6[3] = &block_descriptor_8;
    v6[4] = v5;
    objc_msgSend(v3, sel_processAttachmentWithIdentifier_completion_, v4, v6);
    return swift_continuation_await();
  }
  else
  {
    v8 = *(void **)(v0 + 440);
    v9 = *(void **)(v0 + 424);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 368));

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21FBA41A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 504) = *(_QWORD *)(*(_QWORD *)v0 + 176);
  return swift_task_switch();
}

uint64_t sub_21FBA4200()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 440);
  v2 = *(void **)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 376);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA4294()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 408);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA42F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA4360()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 376);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA43D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 472);
  v2 = *(void **)(v0 + 440);
  v3 = *(void **)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA446C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 496);
  v2 = *(void **)(v0 + 488);
  v3 = *(void **)(v0 + 440);
  v4 = *(void **)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 392);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 376);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA4510(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  sub_21FA2D1A0(0, &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2[4] = swift_task_alloc();
  v3 = sub_21FC5AAF4();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21FBA45B8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  _BYTE *v10;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_accountIdentifier);
  if (v1)
  {
    v2 = v1;
    v4 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    sub_21FC5AADC();

    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v7(v6, v3, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) != 1)
    {
      v7(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v8;
      *v8 = v0;
      v8[1] = sub_21FBA4738;
      return sub_21FBB968C(*(_QWORD *)(v0 + 64));
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 40));
  }
  sub_21FA2D1F8(*(_QWORD *)(v0 + 32), &qword_25406BE78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_21FACD244();
  swift_allocError();
  *v10 = 0;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA4738(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)*v2;
  v4[10] = a1;
  v4[11] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = (_QWORD *)swift_task_alloc();
    v4[12] = v5;
    *v5 = v4;
    v5[1] = sub_21FBA47D8;
    v7 = v4[2];
    v6 = v4[3];
    v5[3] = a1;
    v5[4] = v6;
    v5[2] = v7;
  }
  return swift_task_switch();
}

uint64_t sub_21FBA47D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21FBA483C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA48B4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA4914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21FBA4984()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalDocumentDownloadTaskCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_21FBA49D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_21FAC1750;
  return sub_21FBA1C58(a1, a2, v7, v6);
}

void sub_21FBA4A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554AA20)
  {
    sub_21FA2CDB4();
    v0 = sub_21FC5B868();
    if (!v1)
      atomic_store(v0, &qword_25554AA20);
  }
}

uint64_t sub_21FBA4AAC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21FBA4AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21FAC1B10;
  v4 = swift_task_alloc();
  v3[2] = v4;
  *(_QWORD *)v4 = v3;
  *(_QWORD *)(v4 + 8) = sub_21FAC1750;
  *(_QWORD *)(v4 + 32) = v2;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch();
}

uint64_t sub_21FBA4B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HTTPError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBA4BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HTTPError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBA4C08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HTTPError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21FBA4C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t inited;
  void **v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  os_log_t v33;
  _QWORD *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39[11];

  v39[10] = *(id *)MEMORY[0x24BDAC8D0];
  v37 = sub_21FC5A98C();
  v2 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v6 = (void *)sub_21FC5A920();
  sub_21FA2D1A0(0, &qword_25554AA38, (uint64_t (*)(uint64_t))sub_21FA80148, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  v8 = (void **)MEMORY[0x24BDD0CF0];
  *(_OWORD *)(inited + 16) = xmmword_21FC5EE30;
  v9 = *v8;
  *(_QWORD *)(inited + 32) = *v8;
  v10 = (void *)*MEMORY[0x24BDD0CD8];
  type metadata accessor for FileProtectionType(0);
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 40) = v10;
  v12 = v9;
  v13 = v5;
  v14 = v10;
  sub_21FA7C6E4(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_21FBA521C();
  v15 = (void *)sub_21FC5B55C();
  swift_bridgeObjectRelease();
  v39[0] = 0;
  LOBYTE(inited) = objc_msgSend(v5, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v6, 1, v15, v39);

  if ((inited & 1) != 0)
  {
    v16 = v39[0];
  }
  else
  {
    v17 = v39[0];
    v18 = (void *)sub_21FC5A8E4();

    swift_willThrow();
    if (qword_25406B7F8 != -1)
      swift_once();
    v19 = sub_21FC5AFD4();
    __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
    v20 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, a1, v37);
    v21 = v18;
    v22 = v18;
    v23 = sub_21FC5AFC8();
    v24 = sub_21FC5B970();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      v35 = (void *)swift_slowAlloc();
      v39[0] = v35;
      *(_DWORD *)v25 = 136315394;
      v36 = v13;
      v33 = v23;
      v26 = sub_21FC5A968();
      v38 = sub_21FABDCF8(v26, v27, (uint64_t *)v39);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
      *(_WORD *)(v25 + 12) = 2112;
      v28 = v18;
      v29 = _swift_stdlib_bridgeErrorToNSError();
      v38 = v29;
      sub_21FC5BAC0();
      v30 = v34;
      *v34 = v29;
      v13 = v36;

      v23 = v33;
      _os_log_impl(&dword_21FA27000, v33, v24, "ClinicalDocumentDownloadTaskCoordinator creating directory: %s failed %@)", (uint8_t *)v25, 0x16u);
      sub_21FADEAA0();
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v30, -1, -1);
      v31 = v35;
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v31, -1, -1);
      MEMORY[0x2207D105C](v25, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);

    }
    swift_willThrow();
  }

}

id sub_21FBA506C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  void (*v11)(char *, uint64_t);
  id v12;
  void *v13;
  _QWORD v15[2];

  v1 = sub_21FC5A98C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v15 - v6;
  sub_21FA5BE58(0, (unint64_t *)&qword_25406CB58);
  v8 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  objc_msgSend(v8, sel_setAllowsConstrainedNetworkAccess_, 0);
  objc_msgSend(v8, sel_set_downloadFileProtectionType_, *MEMORY[0x24BDD0CD8]);
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_downloadableAttachmentsDirectory);
  sub_21FC5A950();

  sub_21FBA4C44((uint64_t)v7);
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);

  }
  else
  {
    v11 = *(void (**)(char *, uint64_t))(v2 + 8);
    v11(v7, v1);
    v12 = objc_msgSend(v9, sel_downloadableAttachmentsDirectory);
    sub_21FC5A950();

    v13 = (void *)sub_21FC5A920();
    v11(v5, v1);
    objc_msgSend(v8, sel_set_directoryForDownloadedFiles_, v13);

  }
  return v8;
}

unint64_t sub_21FBA521C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25553DF30;
  if (!qword_25553DF30)
  {
    type metadata accessor for FileAttributeKey(255);
    result = MEMORY[0x2207D0F78](&unk_21FC5DBE0, v1);
    atomic_store(result, (unint64_t *)&qword_25553DF30);
  }
  return result;
}

id sub_21FBA5268(void *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_allocWithZone((Class)type metadata accessor for ClinicalDocumentDownloader());
  v3 = a1;
  v4 = sub_21FADF9BC(v3);

  return v4;
}

uint64_t type metadata accessor for ClinicalDocumentDownloaderPlugin()
{
  return objc_opt_self();
}

uint64_t sub_21FBA52E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  id v6;

  sub_21FAEA068();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21FC5EE30;
  v1 = sub_21FC5B604();
  v3 = v2;
  v4 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  v5 = objc_allocWithZone(v4);
  v6 = sub_21FA2EF8C(v1, v3, 0, 0, (uint64_t)sub_21FBA5268, 0);
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = &off_24E4838E0;
  *(_QWORD *)(v0 + 32) = v6;
  return v0;
}

SecAccessControlRef sub_21FBA5388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  SecAccessControlRef result;
  void *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[2];
  uint64_t v24;
  _BYTE v25[40];
  _BYTE v26[24];
  ValueMetadata *v27;
  _UNKNOWN **v28;
  void *v29;
  void *v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v7 = sub_21FC5B460();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = &_s35DeviceIdentityBAASignatureGeneratorVN;
  v28 = &off_24E487660;
  sub_21FA2CEA0((uint64_t)v26, (uint64_t)v25);
  *((_QWORD *)&v22 + 1) = 0x4143C68000000000;
  *(_QWORD *)&v20 = a1;
  *((_QWORD *)&v20 + 1) = a2;
  sub_21FA2CEA0((uint64_t)v25, (uint64_t)v23);
  *(_QWORD *)&v21 = 0xD000000000000010;
  *((_QWORD *)&v21 + 1) = 0x800000021FC7BEE0;
  result = SecAccessControlCreateWithFlags(0, (CFTypeRef)*MEMORY[0x24BDE8F70], 0, 0);
  if (result)
  {
    sub_21FC5B448();
    if (v3)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
    else
    {
      v36 = v7;
      v19 = a3;
      sub_21FA5F68C();
      v12 = (void *)sub_21FC5BA48();
      v13 = (void *)sub_21FC5BA48();
      v14 = (void *)sub_21FC5BA48();
      v29 = v12;
      v30 = v13;
      v31 = v14;
      v32 = 0xD000000000000010;
      v33 = 0x800000021FC7BEE0;
      v34 = 0xD000000000000010;
      v35 = 0x800000021FC7BEE0;
      v15 = sub_21FC0C85C();
      swift_bridgeObjectRelease_n();

      *(_QWORD *)&v22 = v15;
      sub_21FAAEB64();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v36);
      v16 = v23[0];
      v17 = v19;
      *(_OWORD *)(v19 + 32) = v22;
      *(_OWORD *)(v17 + 48) = v16;
      *(_OWORD *)(v17 + 64) = v23[1];
      *(_QWORD *)(v17 + 80) = v24;
      v18 = v21;
      *(_OWORD *)v17 = v20;
      *(_OWORD *)(v17 + 16) = v18;
    }
    return (SecAccessControlRef)__swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21FBA5628(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_21FC5A764();
  if (!result || (result = sub_21FC5A788(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_21FC5A77C();
      return sub_21FC5A9C8();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_21FBA56B8(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_21FBA571C
     + *((int *)qword_21FBA58C0 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x24BDCDDE8])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_21FBA572C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_21FA32314(v1, v0);
  sub_21FC5A9C8();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
}

void sub_21FBA58D0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  sub_21FBA5B14();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_21FC5B4CC();
  v29 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v33 = a2;
  v17 = sub_21FC5B4A8();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, a6, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
  v30 = a3;
  v31 = a4;
  sub_21FBA5B68();
  sub_21FC5B484();
  sub_21FBA5BAC((uint64_t)v14);
  if (v6)
  {
    v32 = 0;
    v33 = 0xE000000000000000;
    v30 = v6;
    sub_21FA2CDB4();
    sub_21FC5BC4C();
    v19 = v32;
    v20 = v33;
    sub_21FAAF6EC();
    swift_allocError();
    *(_QWORD *)v21 = v19;
    *(_QWORD *)(v21 + 8) = v20;
    *(_BYTE *)(v21 + 16) = 3;
    swift_willThrow();

  }
  else
  {
    v22 = sub_21FC5B4B4();
    v24 = v23;
    v25 = sub_21FC5B4C0();
    v27 = v26;
    v32 = v22;
    v33 = v24;
    sub_21FA32314(v22, v24);
    sub_21FBA56B8(v25, v27);
    sub_21FA2D770(v25, v27);
    sub_21FA2D770(v22, v24);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v34);
  }
}

void sub_21FBA5B14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554AA40)
  {
    sub_21FC5B4A8();
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554AA40);
  }
}

unint64_t sub_21FBA5B68()
{
  unint64_t result;

  result = qword_25554AA48;
  if (!qword_25554AA48)
  {
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25554AA48);
  }
  return result;
}

uint64_t sub_21FBA5BAC(uint64_t a1)
{
  uint64_t v2;

  sub_21FBA5B14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ClinicalSharingEncryption.BAACertSignature(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_21FA2D770(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *_s19HealthRecordsDaemon25ClinicalSharingEncryptionV16BAACertSignatureVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_21FA32314(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingEncryption.BAACertSignature(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[1];
  v4 = a2[2];
  sub_21FA32314(v5, v4);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_21FA2D770(v6, v7);
  return a1;
}

_QWORD *assignWithTake for ClinicalSharingEncryption.BAACertSignature(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = a1[1];
  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_21FA2D770(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingEncryption.BAACertSignature()
{
  return &type metadata for ClinicalSharingEncryption.BAACertSignature;
}

uint64_t destroy for ClinicalSharingEncryption(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
}

uint64_t initializeWithCopy for ClinicalSharingEncryption(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = a2 + 48;
  v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 48, v6, v8);
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingEncryption(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  return a1;
}

uint64_t assignWithTake for ClinicalSharingEncryption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingEncryption(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingEncryption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingEncryption()
{
  return &type metadata for ClinicalSharingEncryption;
}

uint64_t sub_21FBA5F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  uint64_t v7;

  v6 = (void *)(*(uint64_t (**)(void))(a2 + 88))();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  sub_21FC1AD2C(v7, 0, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBA6010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  uint64_t v7;

  v6 = (void *)(*(uint64_t (**)(void))(a2 + 80))();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  sub_21FC1AD2C(v7, 0, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBA6090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  uint64_t v7;

  v6 = (void *)(*(uint64_t (**)(void))(a2 + 72))();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  sub_21FC1AD2C(v7, 0, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBA6110@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v8;
  uint64_t v9;

  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 96))(a2, a3);
  sub_21FC1AD2C(v9, a1, a4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBA61A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id *v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a1)
  {
    case 1:
      sub_21FBA62C0();
      v3 = (id *)MEMORY[0x24BDD2AC0];
      goto LABEL_7;
    case 2:
      sub_21FBA62C0();
      v3 = (id *)MEMORY[0x24BDD2AB8];
      goto LABEL_7;
    case 3:
      sub_21FBA62C0();
      v3 = (id *)MEMORY[0x24BDD2AC8];
      goto LABEL_7;
    case 6:
      sub_21FBA62C0();
      v3 = (id *)MEMORY[0x24BDD2AB0];
LABEL_7:
      *a2 = MEMORY[0x2207D039C](*v3);
      v8 = *MEMORY[0x24BE458E8];
      v9 = sub_21FC5ACD4();
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
      v5 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v6 = a2;
      v7 = 0;
      v4 = v9;
      break;
    default:
      v4 = sub_21FC5ACD4();
      v5 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v6 = a2;
      v7 = 1;
      break;
  }
  return v5(v6, v7, 1, v4);
}

unint64_t sub_21FBA62C0()
{
  unint64_t result;

  result = qword_25554AA50;
  if (!qword_25554AA50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25554AA50);
  }
  return result;
}

uint64_t sub_21FBA62FC()
{
  uint64_t v0;
  id v1;

  v0 = sub_21FC5AFD4();
  __swift_allocate_value_buffer(v0, qword_25406D830);
  __swift_project_value_buffer(v0, (uint64_t)qword_25406D830);
  _HKInitializeLogging();
  v1 = (id)*MEMORY[0x24BDD2FF8];
  return sub_21FC5AFE0();
}

uint64_t sub_21FBA635C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  id v8;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_21FBA6510();
  swift_allocObject();
  v7 = a1;
  v8 = a2;
  result = sub_21FC5B25C();
  *a3 = result;
  return result;
}

void sub_21FBA63E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_21FA5F86C;
  *(_QWORD *)(v9 + 24) = v8;
  v11[4] = sub_21FBA668C;
  v11[5] = v9;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_21FA89518;
  v11[3] = &block_descriptor_12;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, a4, 1, v10);
  _Block_release(v10);
}

uint64_t sub_21FBA64DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21FBA6508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FBA63E4(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_21FBA6510()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554AA58)
  {
    sub_21FBA657C();
    sub_21FA2CDB4();
    v0 = sub_21FC5B250();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554AA58);
  }
}

void sub_21FBA657C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554AA60)
  {
    sub_21FBA65D0();
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554AA60);
  }
}

unint64_t sub_21FBA65D0()
{
  unint64_t result;

  result = qword_255540D40;
  if (!qword_255540D40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255540D40);
  }
  return result;
}

uint64_t sub_21FBA660C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21FBA6630(int a1, id a2, void (*a3)(void))
{
  id v5;

  if (a2)
  {
    v5 = a2;
    ((void (*)(id, uint64_t))a3)(a2, 1);

  }
  else
  {
    a3();
  }
}

void sub_21FBA668C(int a1, void *a2)
{
  uint64_t v2;

  sub_21FBA6630(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_21FBA66B0()
{
  sub_21FBA9B6C();
  return sub_21FC5AD7C();
}

void sub_21FBA66E8()
{
  qword_25554AA68 = (uint64_t)&unk_24E481328;
}

uint64_t static PBServiceType.allCases.getter()
{
  return sub_21FAFC660(&qword_25553DBA0);
}

uint64_t static PBServiceType.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553DBA0, &qword_25554AA68);
}

uint64_t (*static PBServiceType.allCases.modify())()
{
  if (qword_25553DBA0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FBA67A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553DBA0, &qword_25554AA68, a1);
}

uint64_t sub_21FBA67BC()
{
  sub_21FBABB50();
  return sub_21FC5AD7C();
}

void sub_21FBA67F4()
{
  qword_25554AA70 = (uint64_t)&unk_24E481378;
}

uint64_t static PBDataProtocolVersion.allCases.getter()
{
  return sub_21FAFC660(&qword_25553DBA8);
}

uint64_t static PBDataProtocolVersion.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553DBA8, &qword_25554AA70);
}

uint64_t (*static PBDataProtocolVersion.allCases.modify())()
{
  if (qword_25553DBA8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FBA68AC@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553DBA8, &qword_25554AA70, a1);
}

void PBAlgorithm.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t PBAlgorithm.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBAlgorithm.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_21FBA68F8()
{
  sub_21FBABB0C();
  return sub_21FC5AD7C();
}

void sub_21FBA6930()
{
  qword_25554AA78 = (uint64_t)&unk_24E4813C8;
}

uint64_t static PBAlgorithm.allCases.getter()
{
  return sub_21FAFC660(&qword_25553DBB0);
}

uint64_t static PBAlgorithm.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553DBB0, &qword_25554AA78);
}

uint64_t (*static PBAlgorithm.allCases.modify())()
{
  if (qword_25553DBB0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21FBA69E8@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553DBB0, &qword_25554AA78, a1);
}

uint64_t PBAssociatedData.healthInstituteID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBAssociatedData.healthInstituteID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBAssociatedData.healthInstituteID.modify())()
{
  return nullsub_1;
}

uint64_t PBAssociatedData.deletionCommitment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_21FA32314(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t PBAssociatedData.deletionCommitment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21FA2D770(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBAssociatedData.deletionCommitment.modify())()
{
  return nullsub_1;
}

uint64_t PBAssociatedData.vkHr.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_21FA32314(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t PBAssociatedData.vkHr.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21FA2D770(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PBAssociatedData.vkHr.modify())()
{
  return nullsub_1;
}

void PBAssociatedData.type.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBAssociatedData.type.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 56) = v2;
  return result;
}

uint64_t (*PBAssociatedData.type.modify())()
{
  return nullsub_1;
}

void PBAssociatedData.serviceType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBAssociatedData.serviceType.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 64) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 72) = v2;
  return result;
}

uint64_t (*PBAssociatedData.serviceType.modify())()
{
  return nullsub_1;
}

uint64_t PBAssociatedData.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBAssociatedData(0) + 36);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PBAssociatedData(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554AC48);
}

uint64_t PBAssociatedData.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBAssociatedData(0) + 36);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBAssociatedData.unknownFields.modify())()
{
  type metadata accessor for PBAssociatedData(0);
  return nullsub_1;
}

uint64_t PBAssociatedData.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = sub_21FC5ACF8();
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = sub_21FC5ACF8();
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 1;
  type metadata accessor for PBAssociatedData(0);
  return sub_21FC5AD10();
}

uint64_t PBNode.iv.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  sub_21FA32314(v2, *(_QWORD *)(v1 + 24));
  return v2;
}

uint64_t type metadata accessor for PBNode(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554ACE8);
}

uint64_t sub_21FBA6D64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  *a2 = v4;
  a2[1] = v5;
  return sub_21FA32314(v4, v5);
}

uint64_t sub_21FBA6DBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  sub_21FA32314(v3, v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBA9658(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v4;
  return sub_21FA2D770(v8, v9);
}

uint64_t PBNode.iv.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FBA9658(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return sub_21FA2D770(v8, v9);
}

uint64_t type metadata accessor for PBNode._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554AD48);
}

void (*PBNode.iv.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  v3[9] = v6;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBA6FB8;
}

void sub_21FBA6FB8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    sub_21FA32314(*(_QWORD *)(*a1 + 72), v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FBA9658(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    v9 = *(_QWORD *)(v8 + 16);
    v10 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v8 + 16) = v3;
    *(_QWORD *)(v8 + 24) = v4;
    sub_21FA2D770(v9, v10);
    v11 = *(_QWORD *)(v2 + 72);
    v12 = *(_QWORD *)(v2 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = *(int *)(v2 + 96);
      v14 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = sub_21FBA9658(v15);
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    v11 = *(_QWORD *)(v16 + 16);
    v12 = *(_QWORD *)(v16 + 24);
    *(_QWORD *)(v16 + 16) = v3;
    *(_QWORD *)(v16 + 24) = v4;
  }
  sub_21FA2D770(v11, v12);
  free((void *)v2);
}

uint64_t PBNode.associatedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBNode(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_21FBA997C(v6, (uint64_t)v5);
  v7 = type metadata accessor for PBAssociatedData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FBA9A2C((uint64_t)v5, a1);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = sub_21FC5ACF8();
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = sub_21FC5ACF8();
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 1;
  sub_21FC5AD10();
  return sub_21FBA99D8((uint64_t)v5);
}

uint64_t sub_21FBA7244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for PBAssociatedData(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBA9B28(a1, (uint64_t)v4);
  return PBNode.associatedData.setter((uint64_t)v4);
}

uint64_t PBNode.associatedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FBA9658(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FBA9A2C(a1, (uint64_t)v8);
  v12 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FBA9A70((uint64_t)v8, (uint64_t)v6);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  swift_retain();
  sub_21FBA9ACC((uint64_t)v6, v13);
  swift_endAccess();
  return swift_release();
}

void (*PBNode.associatedData.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBAssociatedData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBNode(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_21FBA997C(v10, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = sub_21FC5ACF8();
    v9[3] = v11;
    v9[4] = sub_21FC5ACF8();
    v9[5] = v12;
    v9[6] = 0;
    *((_BYTE *)v9 + 56) = 1;
    v9[8] = 0;
    *((_BYTE *)v9 + 72) = 1;
    sub_21FC5AD10();
    sub_21FBA99D8((uint64_t)v5);
  }
  else
  {
    sub_21FBA9A2C((uint64_t)v5, (uint64_t)v9);
  }
  return sub_21FBA7590;
}

void sub_21FBA7590(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    sub_21FBA9B28((uint64_t)v4, (uint64_t)v3);
    PBNode.associatedData.setter((uint64_t)v3);
    sub_21FA326EC((uint64_t)v4, type metadata accessor for PBAssociatedData);
  }
  else
  {
    PBNode.associatedData.setter((uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL PBNode.hasAssociatedData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_21FBA997C(v4, (uint64_t)v3);
  v5 = type metadata accessor for PBAssociatedData(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_21FBA99D8((uint64_t)v3);
  return v6;
}

Swift::Void __swiftcall PBNode.clearAssociatedData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - v2;
  v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v0 + v4) = sub_21FBA9658(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + v4);
  v7 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  swift_retain();
  sub_21FBA9ACC((uint64_t)v3, v8);
  swift_endAccess();
  swift_release();
}

uint64_t PBNode.cyphertext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  sub_21FA32314(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_21FBA788C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20))
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_21FA32314(v4, v5);
}

uint64_t sub_21FBA78F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  sub_21FA32314(v3, v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBA9658(v6);
    swift_release();
  }
  v7 = (uint64_t *)(*(_QWORD *)(a2 + v5)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  v8 = *v7;
  v9 = v7[1];
  *v7 = v3;
  v7[1] = v4;
  return sub_21FA2D770(v8, v9);
}

uint64_t PBNode.cyphertext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FBA9658(v6);
    swift_release();
  }
  v7 = (uint64_t *)(*(_QWORD *)(v2 + v5)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  v8 = *v7;
  v9 = v7[1];
  *v7 = a1;
  v7[1] = a2;
  return sub_21FA2D770(v8, v9);
}

void (*PBNode.cyphertext.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (uint64_t *)(*(_QWORD *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBA7AFC;
}

void sub_21FBA7AFC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    sub_21FA32314(*(_QWORD *)(*a1 + 72), v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FBA9658(v7);
      swift_release();
    }
    v8 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
    swift_beginAccess();
    v9 = *v8;
    v10 = v8[1];
    *v8 = v3;
    v8[1] = v4;
    sub_21FA2D770(v9, v10);
    v11 = *(_QWORD *)(v2 + 72);
    v12 = *(_QWORD *)(v2 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = *(int *)(v2 + 96);
      v14 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      v15 = swift_retain();
      *(_QWORD *)(v14 + v13) = sub_21FBA9658(v15);
      swift_release();
    }
    v16 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
    swift_beginAccess();
    v11 = *v16;
    v12 = v16[1];
    *v16 = v3;
    v16[1] = v4;
  }
  sub_21FA2D770(v11, v12);
  free((void *)v2);
}

uint64_t PBNode.dataProtocolVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FBA7D2C(&OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion, a1);
}

uint64_t PBNode.dataProtocolVersion.setter(uint64_t *a1)
{
  return sub_21FBA7ED8(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
}

void (*PBNode.dataProtocolVersion.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FBA7D14;
}

void sub_21FBA7D14(uint64_t *a1, char a2)
{
  sub_21FBA8030(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
}

uint64_t PBNode.algorithm.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FBA7D2C(&OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm, a1);
}

uint64_t sub_21FBA7D2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for PBNode(0) + 20)) + *a1;
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v4;
  *(_BYTE *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_21FBA7D98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20)) + *a2;
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 8);
  *(_QWORD *)a3 = *(_QWORD *)v4;
  *(_BYTE *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_21FBA7E08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a1;
  v8 = *((_BYTE *)a1 + 8);
  v9 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(a2 + v9) = sub_21FBA9658(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(a2 + v9) + *a5;
  result = swift_beginAccess();
  *(_QWORD *)v11 = v7;
  *(_BYTE *)(v11 + 8) = v8;
  return result;
}

uint64_t PBNode.algorithm.setter(uint64_t *a1)
{
  return sub_21FBA7ED8(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
}

uint64_t sub_21FBA7ED8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v5 = *((_BYTE *)a1 + 8);
  v6 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v2 + v6) = sub_21FBA9658(v7);
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v6) + *a2;
  result = swift_beginAccess();
  *(_QWORD *)v8 = v4;
  *(_BYTE *)(v8 + 8) = v5;
  return result;
}

void (*PBNode.algorithm.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FBA8024;
}

void sub_21FBA8024(uint64_t *a1, char a2)
{
  sub_21FBA8030(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
}

void sub_21FBA8030(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *a1;
  v6 = *(_QWORD *)(*a1 + 72);
  v7 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v9 = *(int *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 88);
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v10 + v9) = sub_21FBA9658(v11);
    swift_release();
  }
LABEL_4:
  v12 = *(_QWORD *)(*(_QWORD *)(v5 + 88) + *(int *)(v5 + 84)) + *a3;
  swift_beginAccess();
  *(_QWORD *)v12 = v6;
  *(_BYTE *)(v12 + 8) = v7;
  free((void *)v5);
}

uint64_t PBNode.clientVersion.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20))
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FBA8184@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20))
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBA81E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBA9658(v6);
    swift_release();
  }
  v7 = (_QWORD *)(*(_QWORD *)(a2 + v5)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  *v7 = v4;
  v7[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBNode.clientVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FBA9658(v6);
    swift_release();
  }
  v7 = (_QWORD *)(*(_QWORD *)(v2 + v5)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  *v7 = a1;
  v7[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*PBNode.clientVersion.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FBA83F4;
}

void sub_21FBA83F4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FBA9658(v7);
      swift_release();
    }
    v8 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
    swift_beginAccess();
    *v8 = v3;
    v8[1] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FBA9658(v11);
      swift_release();
    }
    v12 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
    swift_beginAccess();
    *v12 = v3;
    v12[1] = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBNode.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PBNode.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PBNode.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBNode.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_21FC5AD10();
  v2 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if (qword_25553DBE0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_25554AAF8;
  return swift_retain();
}

uint64_t sub_21FBA8648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554AA80);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554AA80);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 0;
  *(_QWORD *)v8 = "UNDEFINED_SERVICE";
  *(_QWORD *)(v8 + 8) = 17;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 1;
  *(_QWORD *)v12 = "HEALTH_INSTITUTION";
  *((_QWORD *)v12 + 1) = 18;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 2;
  *(_QWORD *)v13 = "OTS";
  *(_QWORD *)(v13 + 8) = 3;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBServiceType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DBB8, (uint64_t)qword_25554AA80, a1);
}

uint64_t sub_21FBA8804@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DBB8, (uint64_t)qword_25554AA80, a1);
}

uint64_t sub_21FBA8820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554AA98);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554AA98);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 0;
  *(_QWORD *)v8 = "VX";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 1;
  *(_QWORD *)v12 = "V1";
  *((_QWORD *)v12 + 1) = 2;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 2;
  *(_QWORD *)v13 = "V2";
  *(_QWORD *)(v13 + 8) = 2;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBDataProtocolVersion._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DBC0, (uint64_t)qword_25554AA98, a1);
}

uint64_t sub_21FBA89D0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DBC0, (uint64_t)qword_25554AA98, a1);
}

uint64_t sub_21FBA89EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554AAB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554AAB0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 0;
  *(_QWORD *)v8 = "ALG_X";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 1;
  *(_QWORD *)v12 = "AES_ECM";
  *((_QWORD *)v12 + 1) = 7;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 2;
  *(_QWORD *)v13 = "AES_GCM";
  *(_QWORD *)(v13 + 8) = 7;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBAlgorithm._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DBC8, (uint64_t)qword_25554AAB0, a1);
}

uint64_t sub_21FBA8BA4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DBC8, (uint64_t)qword_25554AAB0, a1);
}

unint64_t static PBAssociatedData.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FBA8BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554AAC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554AAC8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE20;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "health_institute_id";
  *(_QWORD *)(v8 + 8) = 19;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "deletion_commitment";
  *(_QWORD *)(v12 + 8) = 19;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "vk_hr";
  *((_QWORD *)v14 + 1) = 5;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "type";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v11();
  v17 = v7 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 4 * v4) = 5;
  *(_QWORD *)v17 = "service_type";
  *(_QWORD *)(v17 + 8) = 12;
  *(_BYTE *)(v17 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBAssociatedData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DBD0, (uint64_t)qword_25554AAC8, a1);
}

uint64_t PBAssociatedData.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_6;
        case 2:
        case 3:
          v4 = v3;
          sub_21FC5ADF4();
          goto LABEL_6;
        case 4:
          sub_21FA64E10();
          goto LABEL_5;
        case 5:
          sub_21FBA9B6C();
LABEL_5:
          v4 = v3;
          sub_21FC5ADC4();
LABEL_6:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBAssociatedData.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_21FC5AF2C(), !v1))
    __asm { BR              X10 }
  return result;
}

uint64_t PBAssociatedData.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBAssociatedData, &qword_25554AB38, (uint64_t)&protocol conformance descriptor for PBAssociatedData);
}

uint64_t sub_21FBA9164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = sub_21FC5ACF8();
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = sub_21FC5ACF8();
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 1;
  return sub_21FC5AD10();
}

unint64_t sub_21FBA91BC()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FBA91D8()
{
  return PBAssociatedData.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBA91EC()
{
  return PBAssociatedData.traverse<A>(visitor:)();
}

uint64_t sub_21FBA9200()
{
  sub_21FA2A08C(&qword_25554AE98, type metadata accessor for PBAssociatedData, (uint64_t)&protocol conformance descriptor for PBAssociatedData);
  return sub_21FC5AD70();
}

uint64_t sub_21FBA9250@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DBD0, (uint64_t)qword_25554AAC8, a1);
}

uint64_t sub_21FBA926C()
{
  sub_21FA2A08C(&qword_25554ABC8, type metadata accessor for PBAssociatedData, (uint64_t)"QՁ.");
  return sub_21FC5AE9C();
}

uint64_t sub_21FBA92AC()
{
  sub_21FA2A08C(&qword_25554ABC8, type metadata accessor for PBAssociatedData, (uint64_t)"QՁ.");
  return sub_21FC5AEA8();
}

unint64_t static PBNode.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_21FBA931C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554AAE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554AAE0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5FEE0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 2;
  *(_QWORD *)v8 = "iv";
  *(_QWORD *)(v8 + 8) = 2;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 3;
  *(_QWORD *)v12 = "associated_data";
  *(_QWORD *)(v12 + 8) = 15;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "cyphertext";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "data_protocol_version";
  *((_QWORD *)v16 + 1) = 21;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "algorithm";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "client_version";
  *((_QWORD *)v20 + 1) = 14;
  v20[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBNode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DBD8, (uint64_t)qword_25554AAE0, a1);
}

uint64_t sub_21FBA958C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  type metadata accessor for PBNode._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_21FC5ACF8();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  v3 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  result = sub_21FC5ACF8();
  *v4 = result;
  v4[1] = v6;
  v7 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  qword_25554AAF8 = v0;
  return result;
}

uint64_t sub_21FBA9658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (uint64_t)&v36 - v4;
  *(_QWORD *)(v1 + 16) = sub_21FC5ACF8();
  *(_QWORD *)(v1 + 24) = v5;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  v36 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  v7 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  *v8 = sub_21FC5ACF8();
  v8[1] = v9;
  v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = v1 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  v38 = v1 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  v39 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v15 = *(_QWORD *)(v1 + 16);
  v16 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 16) = v13;
  *(_QWORD *)(v1 + 24) = v14;
  sub_21FA32314(v13, v14);
  sub_21FA2D770(v15, v16);
  v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  v18 = v17;
  v19 = v37;
  sub_21FBA997C(v18, v37);
  v20 = v36;
  swift_beginAccess();
  sub_21FBA9ACC(v19, v20);
  swift_endAccess();
  v21 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  v23 = *v21;
  v22 = v21[1];
  swift_beginAccess();
  v24 = *v8;
  v25 = v8[1];
  *v8 = v23;
  v8[1] = v22;
  sub_21FA32314(v23, v22);
  sub_21FA2D770(v24, v25);
  v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
  swift_beginAccess();
  v27 = *v26;
  LOBYTE(v26) = *((_BYTE *)v26 + 8);
  swift_beginAccess();
  *(_QWORD *)v10 = v27;
  *(_BYTE *)(v10 + 8) = (_BYTE)v26;
  v28 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
  swift_beginAccess();
  v29 = *v28;
  LOBYTE(v28) = *((_BYTE *)v28 + 8);
  v30 = v38;
  swift_beginAccess();
  *(_QWORD *)v30 = v29;
  *(_BYTE *)(v30 + 8) = (_BYTE)v28;
  v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  v33 = *v31;
  v32 = v31[1];
  swift_bridgeObjectRetain();
  swift_release();
  v34 = v39;
  swift_beginAccess();
  *v34 = v33;
  v34[1] = v32;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FBA997C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBA99D8(uint64_t a1)
{
  uint64_t v2;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21FBA9A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBA9A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBA9ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBA9B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21FBA9B6C()
{
  unint64_t result;

  result = qword_25554AB30;
  if (!qword_25554AB30)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBServiceType, &type metadata for PBServiceType);
    atomic_store(result, (unint64_t *)&qword_25554AB30);
  }
  return result;
}

uint64_t sub_21FBA9BB0()
{
  uint64_t v0;

  sub_21FA2D770(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_21FBA99D8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData);
  sub_21FA2D770(*(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext), *(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext+ 8));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBNode.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FBA9658(v2);
    swift_release();
  }
  swift_retain();
  sub_21FBA9CD8();
  return swift_release();
}

uint64_t sub_21FBA9CD8()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 2:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5ADF4();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBAssociatedData(0);
          sub_21FA2A08C(&qword_25554ABC8, type metadata accessor for PBAssociatedData, (uint64_t)"QՁ.");
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          sub_21FBABB50();
          goto LABEL_12;
        case 6:
          swift_beginAccess();
          sub_21FBABB0C();
LABEL_12:
          v4 = v3;
          sub_21FC5ADC4();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        case 7:
          swift_beginAccess();
          sub_21FC5AE3C();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBNode.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  type metadata accessor for PBNode(0);
  v1 = swift_retain();
  sub_21FBA9FD0(v1);
  result = swift_release();
  if (!v0)
    return sub_21FC5AD04();
  return result;
}

void sub_21FBA9FD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for PBAssociatedData(0);
  MEMORY[0x24BDAC7A8](v3);
  swift_beginAccess();
  __asm { BR              X10 }
}

uint64_t sub_21FBAA0B8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  if ((v0 & 0xFF000000000000) == 0 || (sub_21FA32314(v7, v0), sub_21FC5AEF0(), result = sub_21FA2D770(v7, v0), !v1))
  {
    v9 = v3
       + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
    swift_beginAccess();
    sub_21FBA997C(v9, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v5) == 1)
    {
      sub_21FBA99D8(v6);
      goto LABEL_6;
    }
    sub_21FBA9A2C(v6, v4);
    sub_21FA2A08C(&qword_25554ABC8, type metadata accessor for PBAssociatedData, (uint64_t)"QՁ.");
    sub_21FC5AF50();
    result = sub_21FA326EC(v4, type metadata accessor for PBAssociatedData);
    if (!v1)
    {
LABEL_6:
      v10 = v3
          + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext;
      swift_beginAccess();
      __asm { BR              X10 }
    }
  }
  return result;
}

uint64_t sub_21FBAA3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for PBAssociatedData(0);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v55 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBABB94();
  v56 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v55 - v12;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  sub_21FA32314(v15, v14);
  sub_21FA32314(v16, v17);
  sub_21FB13260(v15, v14);
  v19 = v18;
  sub_21FA2D770(v16, v17);
  sub_21FA2D770(v15, v14);
  if ((v19 & 1) == 0)
  {
    v28 = 0;
    goto LABEL_34;
  }
  v20 = (uint64_t)v11;
  v21 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_21FBA997C(v21, (uint64_t)v13);
  v22 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  v23 = v57;
  v24 = v57 + *(int *)(v56 + 48);
  sub_21FBA997C((uint64_t)v13, v57);
  sub_21FBA997C(v22, v24);
  v25 = v59;
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  v27 = a1;
  if (v26(v23, 1, v59) == 1)
  {
    sub_21FBA99D8((uint64_t)v13);
    if (v26(v24, 1, v25) == 1)
    {
      sub_21FBA99D8(v23);
      goto LABEL_10;
    }
LABEL_8:
    sub_21FA326EC(v23, (uint64_t (*)(_QWORD))sub_21FBABB94);
    goto LABEL_33;
  }
  v29 = a2;
  v30 = (_QWORD *)v20;
  sub_21FBA997C(v23, v20);
  if (v26(v24, 1, v25) == 1)
  {
    sub_21FBA99D8((uint64_t)v13);
    sub_21FA326EC(v20, type metadata accessor for PBAssociatedData);
    goto LABEL_8;
  }
  v31 = v55;
  sub_21FBA9A2C(v24, v55);
  v32 = _s19HealthRecordsDaemon16PBAssociatedDataV2eeoiySbAC_ACtFZ_0(v30, v31);
  sub_21FA326EC(v31, type metadata accessor for PBAssociatedData);
  sub_21FBA99D8((uint64_t)v13);
  sub_21FA326EC((uint64_t)v30, type metadata accessor for PBAssociatedData);
  sub_21FBA99D8(v23);
  a2 = v29;
  if ((v32 & 1) == 0)
    goto LABEL_33;
LABEL_10:
  v33 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  v35 = *v33;
  v34 = v33[1];
  v36 = (uint64_t *)(a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  v38 = *v36;
  v37 = v36[1];
  sub_21FA32314(v35, v34);
  sub_21FA32314(v38, v37);
  sub_21FB13260(v35, v34);
  v39 = a2;
  v41 = v40;
  sub_21FA2D770(v38, v37);
  sub_21FA2D770(v35, v34);
  if ((v41 & 1) == 0)
  {
    v28 = 0;
    goto LABEL_34;
  }
  v42 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
  swift_beginAccess();
  v43 = *v42;
  v44 = (uint64_t *)(v39
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
  swift_beginAccess();
  v45 = *v44;
  if (*((_BYTE *)v44 + 8) == 1)
  {
    if (v45)
    {
      if (v45 == 1)
      {
        if (v43 != 1)
          goto LABEL_33;
      }
      else if (v43 != 2)
      {
        goto LABEL_33;
      }
    }
    else if (v43)
    {
      goto LABEL_33;
    }
  }
  else if (v43 != v45)
  {
    goto LABEL_33;
  }
  v46 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
  swift_beginAccess();
  v47 = *v46;
  v48 = (uint64_t *)(v39
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
  swift_beginAccess();
  v49 = *v48;
  if (*((_BYTE *)v48 + 8) == 1)
  {
    if (v49)
    {
      if (v49 == 1)
      {
        if (v47 == 1)
          goto LABEL_28;
      }
      else if (v47 == 2)
      {
        goto LABEL_28;
      }
LABEL_33:
      v28 = 0;
      goto LABEL_34;
    }
    if (v47)
      goto LABEL_33;
  }
  else if (v47 != v49)
  {
    goto LABEL_33;
  }
LABEL_28:
  v50 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  v51 = *v50;
  v52 = v50[1];
  v53 = (_QWORD *)(v39
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  if (v51 == *v53 && v52 == v53[1])
    v28 = 1;
  else
    v28 = sub_21FC5BDF0();
LABEL_34:
  swift_release();
  swift_release();
  return v28 & 1;
}

uint64_t PBNode.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBNode, &qword_25554AB40, (uint64_t)&protocol conformance descriptor for PBNode);
}

uint64_t sub_21FBAA960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  sub_21FC5AD10();
  v4 = *(int *)(a1 + 20);
  if (qword_25553DBE0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v4) = qword_25554AAF8;
  return swift_retain();
}

unint64_t sub_21FBAA9BC()
{
  return 0xD000000000000024;
}

uint64_t sub_21FBAA9D8()
{
  return PBNode.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBAA9EC()
{
  return PBNode.traverse<A>(visitor:)();
}

uint64_t sub_21FBAAA00()
{
  sub_21FA2A08C(&qword_25554AE90, type metadata accessor for PBNode, (uint64_t)&protocol conformance descriptor for PBNode);
  return sub_21FC5AD70();
}

uint64_t sub_21FBAAA50@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DBD8, (uint64_t)qword_25554AAE0, a1);
}

uint64_t sub_21FBAAA6C()
{
  sub_21FA2A08C((unint64_t *)&qword_25554ABE0, type metadata accessor for PBNode, (uint64_t)&protocol conformance descriptor for PBNode);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBAAAAC()
{
  sub_21FA2A08C((unint64_t *)&qword_25554ABE0, type metadata accessor for PBNode, (uint64_t)&protocol conformance descriptor for PBNode);
  return sub_21FC5AEA8();
}

uint64_t _s19HealthRecordsDaemon6PBNodeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for PBNode(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), v14 = sub_21FBAA3D4(v12, v13), swift_release(), swift_release(), (v14 & 1) != 0))
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = sub_21FC5B5D4();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t _s19HealthRecordsDaemon16PBAssociatedDataV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
  {
    sub_21FB13260(a1[2], a1[3]);
    if ((v13 & 1) == 0)
      goto LABEL_19;
    sub_21FB13260(a1[4], a1[5]);
    if ((v14 & 1) == 0)
      goto LABEL_19;
    v15 = *(_QWORD *)(a2 + 48);
    if (*(_BYTE *)(a2 + 56) == 1)
      __asm { BR              X11 }
    if (a1[6] != v15)
      goto LABEL_19;
    v16 = a1[8];
    v17 = *(_QWORD *)(a2 + 64);
    if (*(_BYTE *)(a2 + 72) == 1)
    {
      if (v17)
      {
        if (v17 == 1)
        {
          if (v16 == 1)
            goto LABEL_17;
        }
        else if (v16 == 2)
        {
          goto LABEL_17;
        }
LABEL_19:
        v12 = 0;
        return v12 & 1;
      }
      if (v16)
        goto LABEL_19;
    }
    else if (v16 != v17)
    {
      goto LABEL_19;
    }
LABEL_17:
    v18 = type metadata accessor for PBAssociatedData(0);
    v19 = (char *)a1 + *(int *)(v18 + 36);
    v20 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v20(v10, v19, v4);
    v20(v8, (char *)(a2 + *(int *)(v18 + 36)), v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v12 = sub_21FC5B5D4();
    v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v8, v4);
    v21(v10, v4);
  }
  return v12 & 1;
}

unint64_t sub_21FBAAE78()
{
  unint64_t result;

  result = qword_25554AB48;
  if (!qword_25554AB48)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBServiceType, &type metadata for PBServiceType);
    atomic_store(result, (unint64_t *)&qword_25554AB48);
  }
  return result;
}

unint64_t sub_21FBAAEC0()
{
  unint64_t result;

  result = qword_25554AB50;
  if (!qword_25554AB50)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBServiceType, &type metadata for PBServiceType);
    atomic_store(result, (unint64_t *)&qword_25554AB50);
  }
  return result;
}

unint64_t sub_21FBAAF08()
{
  unint64_t result;

  result = qword_25554AB58;
  if (!qword_25554AB58)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBServiceType, &type metadata for PBServiceType);
    atomic_store(result, (unint64_t *)&qword_25554AB58);
  }
  return result;
}

uint64_t sub_21FBAAF4C()
{
  return sub_21FB095AC(&qword_25554AB60, &qword_25554AB68);
}

unint64_t sub_21FBAAF7C()
{
  unint64_t result;

  result = qword_25554AB70;
  if (!qword_25554AB70)
  {
    result = MEMORY[0x2207D0F78]("!ׁ.", &type metadata for PBDataProtocolVersion);
    atomic_store(result, (unint64_t *)&qword_25554AB70);
  }
  return result;
}

unint64_t sub_21FBAAFC4()
{
  unint64_t result;

  result = qword_25554AB78;
  if (!qword_25554AB78)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBDataProtocolVersion, &type metadata for PBDataProtocolVersion);
    atomic_store(result, (unint64_t *)&qword_25554AB78);
  }
  return result;
}

unint64_t sub_21FBAB00C()
{
  unint64_t result;

  result = qword_25554AB80;
  if (!qword_25554AB80)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBDataProtocolVersion, &type metadata for PBDataProtocolVersion);
    atomic_store(result, (unint64_t *)&qword_25554AB80);
  }
  return result;
}

uint64_t sub_21FBAB050()
{
  return sub_21FB095AC(&qword_25554AB88, &qword_25554AB90);
}

unint64_t sub_21FBAB080()
{
  unint64_t result;

  result = qword_25554AB98;
  if (!qword_25554AB98)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBAlgorithm, &type metadata for PBAlgorithm);
    atomic_store(result, (unint64_t *)&qword_25554AB98);
  }
  return result;
}

unint64_t sub_21FBAB0C8()
{
  unint64_t result;

  result = qword_25554ABA0;
  if (!qword_25554ABA0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBAlgorithm, &type metadata for PBAlgorithm);
    atomic_store(result, (unint64_t *)&qword_25554ABA0);
  }
  return result;
}

unint64_t sub_21FBAB110()
{
  unint64_t result;

  result = qword_25554ABA8;
  if (!qword_25554ABA8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBAlgorithm, &type metadata for PBAlgorithm);
    atomic_store(result, (unint64_t *)&qword_25554ABA8);
  }
  return result;
}

uint64_t sub_21FBAB154()
{
  return sub_21FB095AC(&qword_25554ABB0, &qword_25554ABB8);
}

uint64_t sub_21FBAB180()
{
  return sub_21FA2A08C(&qword_25554ABC0, type metadata accessor for PBAssociatedData, (uint64_t)&protocol conformance descriptor for PBAssociatedData);
}

uint64_t sub_21FBAB1AC()
{
  return sub_21FA2A08C(&qword_25554ABC8, type metadata accessor for PBAssociatedData, (uint64_t)"QՁ.");
}

uint64_t sub_21FBAB1D8()
{
  return sub_21FA2A08C(&qword_25554AB38, type metadata accessor for PBAssociatedData, (uint64_t)&protocol conformance descriptor for PBAssociatedData);
}

uint64_t sub_21FBAB204()
{
  return sub_21FA2A08C(&qword_25554ABD0, type metadata accessor for PBAssociatedData, (uint64_t)&protocol conformance descriptor for PBAssociatedData);
}

uint64_t sub_21FBAB230()
{
  return sub_21FA2A08C(&qword_25554ABD8, type metadata accessor for PBNode, (uint64_t)&protocol conformance descriptor for PBNode);
}

uint64_t sub_21FBAB25C()
{
  return sub_21FA2A08C((unint64_t *)&qword_25554ABE0, type metadata accessor for PBNode, (uint64_t)&protocol conformance descriptor for PBNode);
}

uint64_t sub_21FBAB288()
{
  return sub_21FA2A08C(&qword_25554AB40, type metadata accessor for PBNode, (uint64_t)&protocol conformance descriptor for PBNode);
}

uint64_t sub_21FBAB2B4()
{
  return sub_21FA2A08C(&qword_25554ABE8, type metadata accessor for PBNode, (uint64_t)&protocol conformance descriptor for PBNode);
}

uint64_t sub_21FBAB2E8@<X0>(uint64_t a1@<X8>)
{
  return PBNode.associatedData.getter(a1);
}

uint64_t sub_21FBAB314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FBA7D98(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion, a2);
}

uint64_t sub_21FBAB330(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBA7E08(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
}

uint64_t sub_21FBAB34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FBA7D98(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm, a2);
}

uint64_t sub_21FBAB368(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBA7E08(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
}

ValueMetadata *type metadata accessor for PBServiceType()
{
  return &type metadata for PBServiceType;
}

ValueMetadata *type metadata accessor for PBDataProtocolVersion()
{
  return &type metadata for PBDataProtocolVersion;
}

ValueMetadata *type metadata accessor for PBAlgorithm()
{
  return &type metadata for PBAlgorithm;
}

uint64_t initializeBufferWithCopyOfBuffer for PBAssociatedData(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_21FA32314(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    v10 = a2[4];
    v11 = a2[5];
    sub_21FA32314(v10, v11);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = a2[8];
    v12 = *((_BYTE *)a2 + 72);
    v13 = *(int *)(a3 + 36);
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_BYTE *)(a1 + 72) = v12;
    v16 = sub_21FC5AD1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return a1;
}

uint64_t destroy for PBAssociatedData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_21FA2D770(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_21FA2D770(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_21FA32314(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  sub_21FA32314(v9, v10);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v11 = *(_BYTE *)(a2 + 72);
  v12 = *(int *)(a3 + 36);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)(a1 + 72) = v11;
  v15 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  sub_21FA32314(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  sub_21FA2D770(v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  sub_21FA32314(v10, v11);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  sub_21FA2D770(v12, v13);
  v14 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v14;
  v15 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v15;
  v16 = *(int *)(a3 + 36);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v5 = *(int *)(a3 + 36);
  v6 = a2 + v5;
  v7 = a1 + v5;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, v6, v8);
  return a1;
}

uint64_t assignWithTake for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_21FA2D770(v7, v8);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_21FA2D770(v9, v10);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v11 = *(int *)(a3 + 36);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBAssociatedData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBAB7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBAssociatedData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBAB850(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FBAB8C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBNode()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBAB95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21FC5AD1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PBNode()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBAB9E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21FC5AD1C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_21FBABA5C()
{
  return type metadata accessor for PBNode._StorageClass(0);
}

void sub_21FBABA64()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_21FBABB0C()
{
  unint64_t result;

  result = qword_25554AEA0;
  if (!qword_25554AEA0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBAlgorithm, &type metadata for PBAlgorithm);
    atomic_store(result, (unint64_t *)&qword_25554AEA0);
  }
  return result;
}

unint64_t sub_21FBABB50()
{
  unint64_t result;

  result = qword_25554AEA8;
  if (!qword_25554AEA8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBDataProtocolVersion, &type metadata for PBDataProtocolVersion);
    atomic_store(result, (unint64_t *)&qword_25554AEA8);
  }
  return result;
}

void sub_21FBABB94()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25554AEB0)
  {
    sub_21FA2D1A0(255, &qword_25554AB00, type metadata accessor for PBAssociatedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25554AEB0);
  }
}

uint64_t sub_21FBABC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  unint64_t v79;

  v72 = a7;
  v69 = a6;
  v68 = a5;
  v65 = a3;
  v64 = a2;
  v70 = type metadata accessor for PBTypedData(0);
  MEMORY[0x24BDAC7A8](v70);
  v66 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v62 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v59 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v59 - v18;
  v20 = type metadata accessor for PBDateRange(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = type metadata accessor for PBReference(0);
  MEMORY[0x24BDAC7A8](v30);
  v63 = (uint64_t)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ClinicalSharingQueryOutput(0) + 20));
  v71 = a8;
  *a8 = v32;
  swift_bridgeObjectRetain();
  v67 = a4;
  swift_bridgeObjectRetain();
  sub_21FC5B400();
  v61 = v78;
  v60 = v79;
  v33 = *(int *)(v70 + 20);
  v70 = a1;
  v34 = *(_QWORD *)(a1 + v33);
  swift_beginAccess();
  v35 = *(_BYTE *)(v34 + 24);
  v76 = *(_QWORD *)(v34 + 16);
  v77 = v35;
  v36 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FBAC1A8(v36, (uint64_t)v19);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v37(v19, 1, v20) == 1)
  {
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0xE000000000000000;
    *((_QWORD *)v29 + 2) = 0;
    *((_QWORD *)v29 + 3) = 0xE000000000000000;
    *((_QWORD *)v29 + 4) = 0;
    v29[40] = 1;
    sub_21FC5AD10();
    sub_21FBAC1FC((uint64_t)v19);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v19, (uint64_t)v29, type metadata accessor for PBDateRange);
  }
  v38 = *((_QWORD *)v29 + 1);
  v59 = *(_QWORD *)v29;
  swift_bridgeObjectRetain();
  sub_21FA326EC((uint64_t)v29, type metadata accessor for PBDateRange);
  v39 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FBAC1A8(v39, (uint64_t)v17);
  v40 = v37(v17, 1, v20);
  v41 = (uint64_t)v62;
  if (v40 == 1)
  {
    *(_QWORD *)v27 = 0;
    *((_QWORD *)v27 + 1) = 0xE000000000000000;
    *((_QWORD *)v27 + 2) = 0;
    *((_QWORD *)v27 + 3) = 0xE000000000000000;
    *((_QWORD *)v27 + 4) = 0;
    v27[40] = 1;
    sub_21FC5AD10();
    sub_21FBAC1FC((uint64_t)v17);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v17, (uint64_t)v27, type metadata accessor for PBDateRange);
  }
  v42 = *((_QWORD *)v27 + 2);
  v43 = *((_QWORD *)v27 + 3);
  swift_bridgeObjectRetain();
  sub_21FA326EC((uint64_t)v27, type metadata accessor for PBDateRange);
  v44 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  sub_21FBAC1A8(v44, v41);
  if (v37((char *)v41, 1, v20) == 1)
  {
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0xE000000000000000;
    *((_QWORD *)v24 + 2) = 0;
    *((_QWORD *)v24 + 3) = 0xE000000000000000;
    *((_QWORD *)v24 + 4) = 0;
    v24[40] = 1;
    sub_21FC5AD10();
    sub_21FBAC1FC(v41);
  }
  else
  {
    sub_21FA2D23C(v41, (uint64_t)v24, type metadata accessor for PBDateRange);
  }
  v45 = *((_QWORD *)v24 + 4);
  v46 = v24[40];
  sub_21FA326EC((uint64_t)v24, type metadata accessor for PBDateRange);
  v73 = v45;
  v74 = v46;
  v75 = 0;
  v58 = v43;
  v47 = v63;
  v48 = v65;
  v49 = v67;
  sub_21FA64EB4(v65, v67, v61, v60, &v76, v59, v38, v42, v63, v58, &v73);
  v50 = sub_21FC5B418();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v72, v50);
  sub_21FA97E00(v64);
  v51 = (int *)type metadata accessor for ClinicalSharingDataNodeInfo();
  v52 = v71;
  sub_21FA2D23C(v47, (uint64_t)v71 + v51[5], type metadata accessor for PBReference);
  v53 = (_QWORD *)((char *)v52 + v51[6]);
  *v53 = v48;
  v53[1] = v49;
  v54 = v69;
  v55 = v70;
  v53[2] = v68;
  v53[3] = v54;
  v56 = v66;
  sub_21FAAE00C(v55, v66);
  sub_21FA326EC(v55, type metadata accessor for ClinicalSharingQueryOutput);
  return sub_21FA2D23C(v56, (uint64_t)v52 + v51[7], type metadata accessor for PBTypedData);
}

uint64_t sub_21FBAC1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA2ED54(0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBAC1FC(uint64_t a1)
{
  uint64_t v2;

  sub_21FA2ED54(0, &qword_25553E0F8, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ClinicalSharingDataNodeInfo()
{
  uint64_t result;

  result = qword_25554AF10;
  if (!qword_25554AF10)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_21FBAC284(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = (char *)a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21FC5AD1C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = type metadata accessor for PBReference(0);
    *(_QWORD *)&v9[*(int *)(v13 + 20)] = *(_QWORD *)&v10[*(int *)(v13 + 20)];
    v14 = a3[6];
    v15 = &v7[v14];
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *(_QWORD *)v15 = *v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v16[2];
    v19 = v16[3];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_21FA32314(v18, v19);
    *((_QWORD *)v15 + 2) = v18;
    *((_QWORD *)v15 + 3) = v19;
    v20 = a3[7];
    v21 = &v7[v20];
    v22 = (char *)a2 + v20;
    v12(&v7[v20], v22, v11);
    v23 = type metadata accessor for PBTypedData(0);
    *(_QWORD *)&v21[*(int *)(v23 + 20)] = *(_QWORD *)&v22[*(int *)(v23 + 20)];
  }
  swift_retain();
  return v7;
}

uint64_t sub_21FBAC3AC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_21FC5AD1C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  type metadata accessor for PBReference(0);
  swift_release();
  v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  sub_21FA2D770(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24));
  v6(a1 + a2[7], v5);
  type metadata accessor for PBTypedData(0);
  return swift_release();
}

char *sub_21FBAC45C(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = type metadata accessor for PBReference(0);
  *(_QWORD *)&v7[*(int *)(v11 + 20)] = *(_QWORD *)&v8[*(int *)(v11 + 20)];
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *(_QWORD *)v13 = *v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v14[2];
  v17 = v14[3];
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21FA32314(v16, v17);
  *((_QWORD *)v13 + 2) = v16;
  *((_QWORD *)v13 + 3) = v17;
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = (char *)a2 + v18;
  v10(&a1[v18], v20, v9);
  v21 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
  swift_retain();
  return a1;
}

char *sub_21FBAC560(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = type metadata accessor for PBReference(0);
  *(_QWORD *)&v7[*(int *)(v11 + 20)] = *(_QWORD *)&v8[*(int *)(v11 + 20)];
  swift_retain();
  swift_release();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)((char *)a2 + v12);
  *((_QWORD *)v13 + 1) = *(_QWORD *)((char *)a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)v14 + 2);
  v16 = *((_QWORD *)v14 + 3);
  sub_21FA32314(v15, v16);
  v17 = *((_QWORD *)v13 + 2);
  v18 = *((_QWORD *)v13 + 3);
  *((_QWORD *)v13 + 2) = v15;
  *((_QWORD *)v13 + 3) = v16;
  sub_21FA2D770(v17, v18);
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = (char *)a2 + v19;
  v10(&a1[v19], v21, v9);
  v22 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)&v20[*(int *)(v22 + 20)] = *(_QWORD *)&v21[*(int *)(v22 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_21FBAC694(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _OWORD *v15;
  __int128 v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = type metadata accessor for PBReference(0);
  *(_QWORD *)&v7[*(int *)(v11 + 20)] = *(_QWORD *)&v8[*(int *)(v11 + 20)];
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = (_OWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *(_OWORD *)v14 = *v15;
  *((_OWORD *)v14 + 1) = v16;
  v17 = &a1[v13];
  v18 = (char *)a2 + v13;
  v10(&a1[v13], v18, v9);
  v19 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)&v17[*(int *)(v19 + 20)] = *(_QWORD *)&v18[*(int *)(v19 + 20)];
  return a1;
}

char *sub_21FBAC760(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AD1C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = type metadata accessor for PBReference(0);
  *(_QWORD *)&v7[*(int *)(v11 + 20)] = *(_QWORD *)&v8[*(int *)(v11 + 20)];
  swift_release();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)((char *)a2 + v12);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  sub_21FA2D770(v16, v17);
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = (char *)a2 + v18;
  v10(&a1[v18], v20, v9);
  v21 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_21FBAC860()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBAC86C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PBReference(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for PBTypedData(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_21FBAC90C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FBAC918(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for PBReference(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for PBTypedData(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_21FBAC9B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PBReference(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PBTypedData(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21FBACA50(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_21FC5BE8C();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    v18 = sub_21FC5BEB0();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_39;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_21FC5BDF0() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_21FC5BDF0() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_21FBACCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v4 = sub_21FC5AAF4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v34 - v9;
  sub_21FA2ED54(0, &qword_25406BE78, v10);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - v13;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v15 = 0;
    v16 = *(_QWORD *)(a1 + 56);
    v35 = a1;
    v36 = a1 + 56;
    v17 = 1 << *(_BYTE *)(a1 + 32);
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v19 = v18 & v16;
    v37 = (unint64_t)(v17 + 63) >> 6;
    v40 = a2 + 56;
    v34 = v14;
    if (!v19)
      goto LABEL_8;
LABEL_7:
    v39 = (v19 - 1) & v19;
    for (i = __clz(__rbit64(v19)) | (v15 << 6); ; i = __clz(__rbit64(v22)) + (v15 << 6))
    {
      v24 = *(_QWORD *)(v5 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v25(v14, *(_QWORD *)(a1 + 48) + v24 * i, v4);
      v26 = 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
        return v26;
      v38 = v15;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v41, v14, v4);
      sub_21FA822D0((unint64_t *)&qword_25406AAF0, MEMORY[0x24BDCEA88]);
      v27 = sub_21FC5B58C();
      v28 = -1 << *(_BYTE *)(a2 + 32);
      v29 = v27 & ~v28;
      if (((*(_QWORD *)(v40 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
        break;
      v30 = a2;
      v31 = ~v28;
      while (1)
      {
        v25(v8, *(_QWORD *)(v30 + 48) + v29 * v24, v4);
        sub_21FA822D0(&qword_25553FB98, MEMORY[0x24BDCEA98]);
        v32 = sub_21FC5B5D4();
        v33 = *(void (**)(char *, uint64_t))(v5 + 8);
        v33(v8, v4);
        if ((v32 & 1) != 0)
          break;
        v29 = (v29 + 1) & v31;
        if (((*(_QWORD *)(v40 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
          goto LABEL_32;
      }
      result = ((uint64_t (*)(char *, uint64_t))v33)(v41, v4);
      a2 = v30;
      v14 = v34;
      a1 = v35;
      v15 = v38;
      v19 = v39;
      if (v39)
        goto LABEL_7;
LABEL_8:
      v21 = v15 + 1;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
LABEL_37:
        __break(1u);
        return result;
      }
      if (v21 >= v37)
        goto LABEL_35;
      v22 = *(_QWORD *)(v36 + 8 * v21);
      ++v15;
      if (!v22)
      {
        v15 = v21 + 1;
        if (v21 + 1 >= v37)
          goto LABEL_35;
        v22 = *(_QWORD *)(v36 + 8 * v15);
        if (!v22)
        {
          v15 = v21 + 2;
          if (v21 + 2 >= v37)
            goto LABEL_35;
          v22 = *(_QWORD *)(v36 + 8 * v15);
          if (!v22)
          {
            v23 = v21 + 3;
            if (v23 >= v37)
            {
LABEL_35:
              v26 = 1;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
              return v26;
            }
            v22 = *(_QWORD *)(v36 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                v15 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_37;
                if (v15 >= v37)
                  goto LABEL_35;
                v22 = *(_QWORD *)(v36 + 8 * v15);
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v15 = v23;
          }
        }
      }
LABEL_21:
      v39 = (v22 - 1) & v22;
    }
    v33 = *(void (**)(char *, uint64_t))(v5 + 8);
LABEL_32:
    v33(v41, v4);
  }
  return 0;
}

uint64_t sub_21FBAD0A0(uint64_t *a1, uint64_t *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  char v12;

  if ((sub_21FBACCD4(*a1, *a2) & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for ClinicalSharingDataNodeInfo();
  if ((static PBReference.== infix(_:_:)((uint64_t)a1 + v4[5], (uint64_t)a2 + v4[5]) & 1) == 0)
    return 0;
  v5 = v4[6];
  v6 = *(uint64_t *)((char *)a1 + v5);
  v7 = *(uint64_t *)((char *)a1 + v5 + 8);
  v8 = *(uint64_t *)((char *)a1 + v5 + 16);
  v9 = *(uint64_t *)((char *)a1 + v5 + 24);
  v10 = (uint64_t *)((char *)a2 + v5);
  v11 = v6 == *v10 && v7 == v10[1];
  if ((v11 || (sub_21FC5BDF0() & 1) != 0) && (sub_21FB13260(v8, v9), (v12 & 1) != 0))
    return static PBTypedData.== infix(_:_:)((uint64_t)a1 + v4[7], (uint64_t)a2 + v4[7]);
  else
    return 0;
}

void sub_21FBAD17C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;

  v29 = a7;
  v30 = a8;
  v26 = a6;
  v27 = a3;
  v28 = a4;
  v11 = sub_21FC5A83C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21FC5AAAC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v26, v11);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_21FA5F86C;
  *(_QWORD *)(v20 + 24) = v19;
  objc_allocWithZone(MEMORY[0x24BDD40D8]);
  swift_retain();
  v21 = v27;
  v22 = v28;
  v23 = v29;
  swift_bridgeObjectRetain();
  v24 = sub_21FBAD3F4(v21, v22, (uint64_t)v18, (uint64_t)v14, v23, (uint64_t)sub_21FBAD3EC, v20);
  objc_msgSend(v30, sel_executeQuery_, v24);

}

uint64_t sub_21FBAD32C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21FBAD350(int a1, void *a2, id a3, void (*a4)(id, BOOL))
{
  id v6;
  uint64_t v8;
  id v9;
  id v10;

  v6 = a2;
  if (!a2)
  {
    v6 = a3;
    if (!a3)
    {
      sub_21FA720B8();
      v6 = (id)swift_allocError();
      *(_QWORD *)v8 = 0;
      *(_QWORD *)(v8 + 8) = 0;
      *(_BYTE *)(v8 + 16) = 2;
    }
    v9 = a3;
  }
  v10 = a2;
  a4(v6, a2 == 0);
  sub_21FBAD630(v6);
}

void sub_21FBAD3EC(int a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_21FBAD350(a1, a2, a3, *(void (**)(id, BOOL))(v3 + 16));
}

id sub_21FBAD3F4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v8 = v7;
  v14 = (void *)sub_21FC5AA64();
  v15 = (void *)sub_21FC5A7A0();
  sub_21FBAD554();
  v16 = (void *)sub_21FC5B79C();
  swift_bridgeObjectRelease();
  aBlock[4] = a6;
  aBlock[5] = a7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21FBAD590;
  aBlock[3] = &block_descriptor_13;
  v17 = _Block_copy(aBlock);
  v18 = objc_msgSend(v8, sel_initWithQuantityType_quantitySamplePredicate_anchorDate_intervalComponents_quantityRanges_resultsHandler_, a1, a2, v14, v15, v16, v17);
  _Block_release(v17);

  v19 = sub_21FC5A83C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a4, v19);
  v20 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a3, v20);
  swift_release();
  return v18;
}

unint64_t sub_21FBAD554()
{
  unint64_t result;

  result = qword_25554AF50;
  if (!qword_25554AF50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25554AF50);
  }
  return result;
}

void sub_21FBAD590(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_21FBAD630(id a1)
{

}

void sub_21FBAD644(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_21FBAD67C()
{
  sub_21FC5BB74();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  return 0xD000000000000022;
}

uint64_t sub_21FBAD8FC()
{
  uint64_t v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)&loc_21FBAD8E8 + 4 * byte_21FC6E919[v0]))(0xD000000000000026, 0x800000021FC7C2A0);
}

void sub_21FBAD930()
{
  JUMPOUT(0x21FBAD8E8);
}

void sub_21FBAD968()
{
  uint64_t v0;

  sub_21FBAD644(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_21FBAD974(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    default:
      return;
  }
}

id sub_21FBAD9B0(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ClinicalSharingDocumentReferenceInfoError(uint64_t a1)
{
  sub_21FBAD974(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19HealthRecordsDaemon41ClinicalSharingDocumentReferenceInfoErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21FBAD9B0(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingDocumentReferenceInfoError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21FBAD9B0(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_21FBAD974(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDocumentReferenceInfoError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_21FBAD974(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingDocumentReferenceInfoError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingDocumentReferenceInfoError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_21FBADB78(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 7u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 8);
}

uint64_t sub_21FBADB90(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(_QWORD *)result = a2 - 8;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 8;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDocumentReferenceInfoError()
{
  return &type metadata for ClinicalSharingDocumentReferenceInfoError;
}

uint64_t sub_21FBADBB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  v6 = sub_21FC5BDE4();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  v9 = (void *)sub_21FC5A8D8();

  v10 = objc_msgSend(v9, sel_hrs_safelyLoggableDescription);
  v11 = sub_21FC5B604();

  return v11;
}

id sub_21FBADCD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  _BYTE v21[80];

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  v6 = sub_21FC5BDE4();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 32))(v8, v5, a1);
  }
  v9 = (void *)sub_21FC5A8D8();

  v10 = objc_msgSend(v9, sel_domain);
  sub_21FC5B604();

  v11 = objc_msgSend(v9, sel_code);
  sub_21FBADEE4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FC5EE30;
  *(_QWORD *)(inited + 32) = sub_21FC5B604();
  *(_QWORD *)(inited + 40) = v13;
  v14 = Error.hdhr_friendlyDescription.getter(a1);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = v15;
  sub_21FA7C420(inited);
  v16 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v17 = (void *)sub_21FC5B5E0();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_21FC5B55C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, v11, v18);

  return v19;
}

void sub_21FBADEE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406BB40)
  {
    sub_21FAAF640();
    v0 = sub_21FC5BDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406BB40);
  }
}

uint64_t Daemon.__allocating_init(machService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;

  sub_21FBAF13C(0, &qword_25406BB30, &qword_25406ACD8, (uint64_t)&protocol descriptor for DaemonPlugin, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21FC5EE20;
  v5 = type metadata accessor for ClinicalDocumentDownloaderPlugin();
  v6 = swift_allocObject();
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = &off_24E48B568;
  *(_QWORD *)(v4 + 32) = v6;
  v7 = sub_21FB9F6C8();
  *(_QWORD *)(v4 + 96) = type metadata accessor for ClinicalSharingDaemonPlugin();
  *(_QWORD *)(v4 + 104) = &off_24E48B3D8;
  *(_QWORD *)(v4 + 72) = v7;
  v8 = type metadata accessor for IngestionServiceDaemonPlugin();
  v9 = swift_allocObject();
  *(_QWORD *)(v4 + 136) = v8;
  *(_QWORD *)(v4 + 144) = &off_24E488FF8;
  *(_QWORD *)(v4 + 112) = v9;
  v10 = type metadata accessor for IssuerDirectoryDownloadDaemonPlugin();
  swift_allocObject();
  v11 = sub_21FC4491C();
  *(_QWORD *)(v4 + 176) = v10;
  *(_QWORD *)(v4 + 184) = &off_24E4913D8;
  *(_QWORD *)(v4 + 152) = v11;
  v12 = type metadata accessor for SignedClinicalDataDaemonPlugin();
  v13 = swift_allocObject();
  *(_QWORD *)(v4 + 216) = v12;
  *(_QWORD *)(v4 + 224) = &off_24E48DF48;
  *(_QWORD *)(v4 + 192) = v13;
  type metadata accessor for Daemon();
  v14 = swift_allocObject();
  v15 = objc_allocWithZone((Class)type metadata accessor for DaemonXPCConnectionManager());
  v16 = sub_21FC58F08(a1, a2);
  *(_QWORD *)(v14 + 16) = v4;
  *(_QWORD *)(v14 + 24) = v16;
  return v14;
}

uint64_t sub_21FBAE0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  id v35;
  unint64_t v36;
  char v37;
  char v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _UNKNOWN **v75;
  __int128 v76;
  uint64_t v77;
  _UNKNOWN **v78;
  _QWORD *v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  _QWORD v85[5];
  _QWORD v86[5];
  uint64_t v87[3];
  uint64_t v88;
  uint64_t v89;

  v1 = *(_QWORD *)(v0 + 16);
  v66 = *(_QWORD *)(v1 + 16);
  if (!v66)
    goto LABEL_34;
  v2 = v1 + 32;
  swift_bridgeObjectRetain();
  v3 = 0;
  v63 = v1 + 32;
  v64 = v1;
  do
  {
    if (v3 >= *(_QWORD *)(v1 + 16))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      swift_once();
      goto LABEL_35;
    }
    sub_21FA2CEA0(v2 + 40 * v3, (uint64_t)v87);
    v4 = v88;
    v5 = v89;
    __swift_project_boxed_opaque_existential_1(v87, v88);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v68 = v3;
      v8 = (uint64_t *)(*(_QWORD *)(v65 + 24)
                     + OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_serviceMap);
      v67 = v6;
      v9 = v6 + 32;
      v69 = v8;
      while (1)
      {
        sub_21FA2CEA0(v9, (uint64_t)v86);
        v11 = (void *)*__swift_project_boxed_opaque_existential_1(v86, v86[3]);
        v12 = type metadata accessor for DefaultDaemonXPCService();
        v85[3] = v12;
        v85[4] = &off_24E4838E0;
        v85[0] = v11;
        v13 = (uint64_t *)(*__swift_project_boxed_opaque_existential_1(v85, v12)
                        + OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_identifier);
        v14 = *v13;
        v15 = v13[1];
        sub_21FA2CEA0((uint64_t)v85, (uint64_t)&v83);
        swift_beginAccess();
        if (!v84)
        {
          v35 = v11;
          swift_bridgeObjectRetain();
          sub_21FBAF0E0((uint64_t)&v83);
          swift_bridgeObjectRetain();
          v36 = sub_21FA73F34(v14, v15);
          v38 = v37;
          swift_bridgeObjectRelease();
          if ((v38 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v40 = *v8;
            *(_QWORD *)&v76 = *v8;
            *v8 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_21FA7A9E0();
              v40 = v76;
            }
            swift_bridgeObjectRelease();
            sub_21FA3175C((__int128 *)(*(_QWORD *)(v40 + 56) + 40 * v36), (uint64_t)&v80);
            sub_21FBAEED8(v36, v40);
            *v8 = v40;
            swift_bridgeObjectRelease();
          }
          else
          {
            v82 = 0;
            v80 = 0u;
            v81 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_21FBAF0E0((uint64_t)&v80);
          goto LABEL_10;
        }
        v71 = v9;
        v72 = v7;
        sub_21FA3175C(&v83, (uint64_t)&v80);
        v16 = v11;
        swift_bridgeObjectRetain();
        v17 = swift_isUniquelyReferenced_nonNull_native();
        v79 = (_QWORD *)*v8;
        v18 = v79;
        *v8 = 0x8000000000000000;
        v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v80, *((uint64_t *)&v81 + 1));
        v70 = &v62;
        MEMORY[0x24BDAC7A8](v19);
        v21 = (uint64_t *)((char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(uint64_t *))(v22 + 16))(v21);
        v23 = *v21;
        v77 = v12;
        v78 = &off_24E4838E0;
        *(_QWORD *)&v76 = v23;
        v24 = v14;
        v25 = v15;
        v27 = sub_21FA73F34(v14, v15);
        v28 = v18[2];
        v29 = (v26 & 1) == 0;
        v30 = v28 + v29;
        if (__OFADD__(v28, v29))
        {
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        v31 = v26;
        if (v18[3] >= v30)
        {
          if ((v17 & 1) != 0)
          {
            v34 = v79;
            if ((v26 & 1) == 0)
              goto LABEL_23;
          }
          else
          {
            sub_21FA7A9E0();
            v34 = v79;
            if ((v31 & 1) == 0)
              goto LABEL_23;
          }
        }
        else
        {
          sub_21FA77338(v30, v17);
          v32 = sub_21FA73F34(v24, v15);
          if ((v31 & 1) != (v33 & 1))
          {
            result = sub_21FC5BE20();
            __break(1u);
            return result;
          }
          v27 = v32;
          v34 = v79;
          if ((v31 & 1) == 0)
          {
LABEL_23:
            v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v76, v77);
            MEMORY[0x24BDAC7A8](v41);
            v43 = (uint64_t *)((char *)&v62 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v44 + 16))(v43);
            v45 = *v43;
            v74 = v12;
            v75 = &off_24E4838E0;
            *(_QWORD *)&v73 = v45;
            v34[(v27 >> 6) + 8] |= 1 << v27;
            v46 = (uint64_t *)(v34[6] + 16 * v27);
            *v46 = v24;
            v46[1] = v25;
            sub_21FA3175C(&v73, v34[7] + 40 * v27);
            v47 = v34[2];
            v48 = __OFADD__(v47, 1);
            v49 = v47 + 1;
            if (v48)
              goto LABEL_39;
            v34[2] = v49;
            swift_bridgeObjectRetain();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v76);
            goto LABEL_9;
          }
        }
        v10 = v34[7] + 40 * v27;
        __swift_destroy_boxed_opaque_existential_1(v10);
        sub_21FA3175C(&v76, v10);
LABEL_9:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
        v8 = v69;
        *v69 = (uint64_t)v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v71;
        v7 = v72;
LABEL_10:
        swift_endAccess();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
        v9 += 40;
        if (!--v7)
        {
          swift_bridgeObjectRelease();
          v2 = v63;
          v1 = v64;
          v3 = v68;
          goto LABEL_4;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_4:
    ++v3;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
  }
  while (v3 != v66);
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v1 + 16);
  if (v50)
  {
    swift_bridgeObjectRetain();
    do
    {
      sub_21FA2CEA0(v2, (uint64_t)v87);
      v51 = v88;
      v52 = v89;
      __swift_project_boxed_opaque_existential_1(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v52);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      v2 += 40;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
  }
LABEL_34:
  sub_21FC590B8();
  if (qword_25406B7F8 != -1)
    goto LABEL_41;
LABEL_35:
  v53 = sub_21FC5AFD4();
  __swift_project_value_buffer(v53, (uint64_t)qword_25406D830);
  v54 = sub_21FC5AFC8();
  v55 = sub_21FC5B994();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    *(_DWORD *)v56 = 136315138;
    v87[0] = v57;
    v58 = sub_21FC5B604();
    v86[0] = sub_21FABDCF8(v58, v59, v87);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v54, v55, "Daemon launch finished, posting %s", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v57, -1, -1);
    MEMORY[0x2207D105C](v56, -1, -1);
  }

  sub_21FC5B604();
  v60 = sub_21FC5B658();
  swift_bridgeObjectRelease();
  notify_post((const char *)(v60 + 32));
  return swift_release();
}

uint64_t sub_21FBAE794()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  result = sub_21FC59350();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_21FA2CEA0(v4, (uint64_t)v7);
      v5 = v8;
      v6 = v9;
      __swift_project_boxed_opaque_existential_1(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      v4 += 40;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Daemon.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t Daemon.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_21FBAE884(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21FC5BB14();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = 16 * v6;
        sub_21FC5BE8C();
        sub_21FA79AF8();
        sub_21FC5B598();
        result = sub_21FC5BEB0();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + v9);
        if (16 * v3 != v9 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_21FC5AAAC() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21FBAEA98(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = sub_21FC5AAF4();
  v31 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_21FC5BB14();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_21FBAF1C0();
        v15 = sub_21FC5B58C();
        result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v23 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21FBAECFC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _BYTE v25[72];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21FC5BB14();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_21FC5BE8C();
        v10 = *(void (**)(_BYTE *))(*(_QWORD *)v9 + 136);
        swift_retain();
        v10(v25);
        v11 = sub_21FC5BEB0();
        result = swift_release();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21FBAEED8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21FC5BB14();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21FC5BE8C();
        swift_bridgeObjectRetain();
        sub_21FC5B67C();
        v11 = sub_21FC5BEB0();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t type metadata accessor for Daemon()
{
  return objc_opt_self();
}

uint64_t sub_21FBAF0E0(uint64_t a1)
{
  uint64_t v2;

  sub_21FBAF13C(0, (unint64_t *)&qword_25554E940, (unint64_t *)&qword_25406ACD0, (uint64_t)&protocol descriptor for DaemonXPCService, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21FBAF13C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_21FA50724(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t method lookup function for Daemon()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Daemon.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of Daemon.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

unint64_t sub_21FBAF1C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25406AAF0;
  if (!qword_25406AAF0)
  {
    v1 = sub_21FC5AAF4();
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_25406AAF0);
  }
  return result;
}

void sub_21FBAF208(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (a1 >= 6)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v4 = sub_21FC5AFD4();
    __swift_project_value_buffer(v4, (uint64_t)qword_25406D830);
    v5 = sub_21FC5AFC8();
    v6 = sub_21FC5B988();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 134217984;
      sub_21FC5BAC0();
      _os_log_impl(&dword_21FA27000, v5, v6, "Unknown asserter type: %ld", v7, 0xCu);
      MEMORY[0x2207D105C](v7, -1, -1);
    }

    v3 = 0;
  }
  else
  {
    v3 = a1 + 1;
  }
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = 1;
}

uint64_t *sub_21FBAF334(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21FC5A6C8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + v13) = (uint64_t)v15;
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v7 + v14) = (uint64_t)v16;
    v17 = a3[8];
    v18 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v7 + v17) = (uint64_t)v18;
    v19 = v15;
    v20 = v16;
    v21 = v18;
  }
  return v7;
}

void sub_21FBAF408(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + a2[5];
  v5 = sub_21FC5A6C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_QWORD *sub_21FBAF47C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v13;
  v14 = *(void **)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v14;
  v15 = a3[8];
  v16 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v16;
  v17 = v13;
  v18 = v14;
  v19 = v16;
  return a1;
}

_QWORD *sub_21FBAF528(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  v14 = a3[7];
  v15 = *(void **)((char *)a2 + v14);
  v16 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v17 = v15;

  v18 = a3[8];
  v19 = *(void **)((char *)a2 + v18);
  v20 = *(void **)((char *)a1 + v18);
  *(_QWORD *)((char *)a1 + v18) = v19;
  v21 = v19;

  return a1;
}

_QWORD *sub_21FBAF5EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_21FBAF678(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);

  v12 = a3[7];
  v13 = *(void **)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);

  v14 = a3[8];
  v15 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);

  return a1;
}

uint64_t sub_21FBAF728()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBAF734(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5A6C8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_21FBAF7B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FBAF7BC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5A6C8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingActivitySummaryQuery()
{
  uint64_t result;

  result = qword_25554AFB0;
  if (!qword_25554AFB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21FBAF86C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5A6C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21FBAF8F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v1 = type metadata accessor for ClinicalSharingActivitySummaryQuery();
  v27 = *(_QWORD *)(v1 - 8);
  v2 = *(_QWORD *)(v27 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21FC5B904();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBB0B08(0, &qword_25554AFF8, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  v29 = v8;
  v31 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v26 = (char *)&v24 - v9;
  sub_21FBB0B08(0, &qword_25554B020, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  v28 = v10;
  v30 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - v11;
  sub_21FA2CEA0(*v0 + 16, (uint64_t)v33);
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  v13 = (uint64_t)v0;
  v25 = v0;
  v14 = sub_21FBAFC5C();
  sub_21FC5B928();
  sub_21FA2A08C(&qword_25554B028, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A58], MEMORY[0x24BE45A50]);
  v15 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  v32 = v15;
  sub_21FA2D120(v13, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingActivitySummaryQuery);
  v16 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v17 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v3, v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingActivitySummaryQuery);
  sub_21FBB0A48();
  type metadata accessor for PBTypedData(0);
  sub_21FA2A08C(&qword_25554B018, (uint64_t (*)(uint64_t))sub_21FBB0A48, MEMORY[0x24BDB9AF8]);
  v18 = v26;
  sub_21FC5B28C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  sub_21FA2D120((uint64_t)v25, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingActivitySummaryQuery);
  v19 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v3, v19 + v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingActivitySummaryQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  v20 = v29;
  sub_21FC5AFF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v20);
  sub_21FBB0CFC();
  v21 = v28;
  v22 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v21);
  return v22;
}

id sub_21FBAFC5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(unint64_t, _QWORD, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  _QWORD v34[2];
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  sub_21FA2D1A0(0, &qword_25553F0B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v40 = (char *)v34 - v2;
  v3 = sub_21FC5AAAC();
  v38 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21FC5A83C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v34 - v9;
  sub_21FA2D1A0(0, qword_255540490, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v11 = sub_21FC5ABF0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_21FC603D0;
  v16 = v15 + v14;
  v17 = *(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104);
  v17(v16, *MEMORY[0x24BDCF220], v11);
  v17(v16 + v13, *MEMORY[0x24BDCF250], v11);
  v17(v16 + 2 * v13, *MEMORY[0x24BDCF240], v11);
  v17(v16 + 3 * v13, *MEMORY[0x24BDCF228], v11);
  v34[1] = sub_21FAC98F8(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  type metadata accessor for ClinicalSharingActivitySummaryQuery();
  v35 = v0;
  sub_21FC5A6A4();
  v37 = v10;
  sub_21FC5AB48();
  v18 = *(void (**)(char *, uint64_t))(v38 + 8);
  v18(v5, v3);
  v19 = *v0 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
  v20 = sub_21FC5AC08();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v23 = v40;
  v22(v40, v19, v20);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v24(v23, 0, 1, v20);
  sub_21FC5A830();
  sub_21FC5A680();
  v25 = v39;
  sub_21FC5AB48();
  swift_bridgeObjectRelease();
  v18(v5, v36);
  v22(v23, *v35 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v20);
  v24(v23, 0, 1, v20);
  sub_21FC5A830();
  v26 = (void *)objc_opt_self();
  v27 = v37;
  v28 = (void *)sub_21FC5A7A0();
  v29 = (void *)sub_21FC5A7A0();
  v30 = objc_msgSend(v26, sel_predicateForActivitySummariesBetweenStartDateComponents_endDateComponents_, v28, v29);

  v31 = v42;
  v32 = *(void (**)(char *, uint64_t))(v41 + 8);
  v32(v25, v42);
  v32(v27, v31);
  return v30;
}

uint64_t sub_21FBB004C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - v6;
  sub_21FA2D1A0(0, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v4);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for PBDateRange(0);
  v37 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PBActivitySummarySeries(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
    if (v32)
      goto LABEL_3;
LABEL_9:
    v33 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a2, 1, 1, v33);
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_9;
LABEL_3:
  v35 = v11;
  v36 = a2;
  sub_21FC5AD10();
  v20 = *(int *)(v14 + 20);
  if (qword_25553DAA0 != -1)
    swift_once();
  v21 = qword_255543F18;
  *(_QWORD *)&v19[v20] = qword_255543F18;
  MEMORY[0x24BDAC7A8](v21);
  *(&v34 - 2) = v38;
  swift_retain();
  v22 = sub_21FBB0D78(a1, (void (*)(char **))sub_21FBB0D54, (uint64_t)(&v34 - 4));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBActivitySummarySeries._StorageClass(0);
    swift_allocObject();
    v23 = swift_retain();
    *(_QWORD *)&v19[v20] = sub_21FB7F1E0(v23);
    swift_release();
  }
  v24 = (uint64_t *)(*(_QWORD *)&v19[v20]
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  *v24 = v22;
  swift_bridgeObjectRelease();
  v25 = v38 + *(int *)(type metadata accessor for ClinicalSharingActivitySummaryQuery() + 20);
  v26 = sub_21FC5A6C8();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
  v28 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v10, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v26);
  sub_21FBE7E8C(2, 1, v10);
  sub_21FA2D1F8((uint64_t)v10, &qword_25553E0E8, v27);
  sub_21FA2D120((uint64_t)v13, (uint64_t)v7, type metadata accessor for PBDateRange);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v7, 0, 1, v35);
  v29 = v36;
  sub_21FBE90E4((uint64_t)v7, v36);
  sub_21FA2D1F8((uint64_t)v7, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA2D120((uint64_t)v19, (uint64_t)v17, type metadata accessor for PBActivitySummarySeries);
  PBTypedData.activitySummaries.setter((uint64_t)v17);
  sub_21FA326EC((uint64_t)v13, type metadata accessor for PBDateRange);
  sub_21FA326EC((uint64_t)v19, type metadata accessor for PBActivitySummarySeries);
  v30 = type metadata accessor for PBTypedData(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
}

void sub_21FBB0478(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int *v18;
  uint64_t v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  id v25;
  uint64_t v26;
  double v27;
  double v28;
  id v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  double v34;
  double v35;
  id v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = v2;
  v6 = sub_21FC5A83C();
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21FC5AC08();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - v13;
  v15 = sub_21FC5AAAC();
  v58 = *(_QWORD *)(v15 - 8);
  v59 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v53 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0xE000000000000000;
  type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  sub_21FC5AD10();
  v17 = objc_msgSend(a1, sel_activeEnergyBurned);
  v18 = (int *)type metadata accessor for ClinicalSharingActivitySummaryQuery();
  v19 = *(_QWORD *)((char *)v3 + v18[7]);
  objc_msgSend(v17, sel_doubleValueForUnit_, v19);
  v21 = v20;

  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v21 <= -2147483650.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v21 >= 2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(_DWORD *)a2 = (int)v21;
  v22 = objc_msgSend(a1, sel_activeEnergyBurnedGoal);
  objc_msgSend(v22, sel_doubleValueForUnit_, v19);
  v24 = v23;

  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v24 <= -2147483650.0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v24 >= 2147483650.0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(_DWORD *)(a2 + 4) = (int)v24;
  v25 = objc_msgSend(a1, sel_appleExerciseTime);
  v26 = *(_QWORD *)((char *)v3 + v18[8]);
  objc_msgSend(v25, sel_doubleValueForUnit_, v26);
  v28 = v27;

  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v28 <= -2147483650.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v28 >= 2147483650.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_DWORD *)(a2 + 8) = (int)v28;
  v29 = objc_msgSend(a1, sel_appleExerciseTimeGoal);
  objc_msgSend(v29, sel_doubleValueForUnit_, v26);
  v31 = v30;

  if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v31 <= -2147483650.0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v31 >= 2147483650.0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  *(_DWORD *)(a2 + 12) = (int)v31;
  v32 = objc_msgSend(a1, sel_appleStandHours);
  v33 = *(_QWORD *)((char *)v3 + v18[6]);
  objc_msgSend(v32, sel_doubleValueForUnit_, v33);
  v35 = v34;

  if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) == 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v35 <= -2147483650.0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v35 >= 2147483650.0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *(_DWORD *)(a2 + 16) = (int)v35;
  v36 = objc_msgSend(a1, sel_appleStandHoursGoal);
  objc_msgSend(v36, sel_doubleValueForUnit_, v33);
  v38 = v37;

  if ((~*(_QWORD *)&v38 & 0x7FF0000000000000) == 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v38 <= -2147483650.0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v38 >= 2147483650.0)
  {
LABEL_39:
    __break(1u);
    return;
  }
  *(_DWORD *)(a2 + 20) = (int)v38;
  v40 = v54;
  v39 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, *v3 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v55);
  v41 = (void *)sub_21FC5AB6C();
  v42 = objc_msgSend(a1, sel_dateComponentsForCalendar_, v41);

  sub_21FC5A7AC();
  sub_21FC5AB84();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v39);
  v44 = v58;
  v43 = v59;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v14, 1, v59) == 1)
  {
    sub_21FA2D1F8((uint64_t)v14, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    v45 = v53;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v53, v14, v43);
    v46 = *(id *)(*v3 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v47 = (void *)sub_21FC5AA64();
    v48 = objc_msgSend(v46, sel_stringFromDate_, v47);

    v49 = sub_21FC5B604();
    v51 = v50;

    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 24) = v49;
    *(_QWORD *)(a2 + 32) = v51;
  }
}

void sub_21FBB0A48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554B000)
  {
    sub_21FA2D1A0(255, &qword_25554B008, (uint64_t (*)(uint64_t))sub_21FBB0ACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_21FA2CDB4();
    v0 = sub_21FC5B190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554B000);
  }
}

unint64_t sub_21FBB0ACC()
{
  unint64_t result;

  result = qword_25554B010;
  if (!qword_25554B010)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25554B010);
  }
  return result;
}

void sub_21FBB0B08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_21FBB0A48();
    a3(255);
    sub_21FA2A08C(&qword_25554B018, (uint64_t (*)(uint64_t))sub_21FBB0A48, MEMORY[0x24BDB9AF8]);
    v5 = sub_21FC5B004();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_21FBB0BA4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ClinicalSharingActivitySummaryQuery();
  return sub_21FBB004C(*a1, a2);
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (int *)type metadata accessor for ClinicalSharingActivitySummaryQuery();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + v1[5];
  v5 = sub_21FC5A6C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_21FBB0CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ClinicalSharingActivitySummaryQuery();
  return sub_21FBE72C8(a1, 0, a2);
}

unint64_t sub_21FBB0CFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554B030;
  if (!qword_25554B030)
  {
    sub_21FBB0B08(255, &qword_25554B020, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB94C8], v1);
    atomic_store(result, (unint64_t *)&qword_25554B030);
  }
  return result;
}

void sub_21FBB0D54(void **a1@<X0>, uint64_t a2@<X8>)
{
  sub_21FBB0478(*a1, a2);
}

uint64_t sub_21FBB0D78(uint64_t a1, void (*a2)(char **), uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  void (*v32)(char **);
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;

  v4 = v3;
  v32 = a2;
  v33 = a3;
  v6 = type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v26 - v11;
  v31 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_44;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v36 = MEMORY[0x24BEE4AF8];
    v29 = (char *)(v13 & ~(v13 >> 63));
    result = sub_21FC01DAC(0, (int64_t)v29, 0);
    if (v13 < 0)
    {
      __break(1u);
      return result;
    }
    v30 = v12;
    v15 = v36;
    v26 = v4;
    if (!v13)
      break;
    v27 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v31)
    {
      swift_bridgeObjectRetain();
      v28 = sub_21FC5BC7C();
    }
    else
    {
      v28 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v12 = 0;
    v34 = a1 & 0xC000000000000001;
    while (v29 != v12)
    {
      if ((char *)v28 == v12)
        goto LABEL_42;
      if (v34)
      {
        v16 = (char *)MEMORY[0x2207D057C](v12, a1);
      }
      else
      {
        if ((unint64_t)v12 >= *(_QWORD *)(v27 + 16))
          goto LABEL_43;
        v16 = (char *)*(id *)(a1 + 8 * (_QWORD)v12 + 32);
      }
      v17 = v16;
      v18 = (void *)MEMORY[0x2207D0ABC]();
      v35 = v17;
      v32(&v35);
      objc_autoreleasePoolPop(v18);

      v36 = v15;
      v4 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v4 >= v19 >> 1)
      {
        sub_21FC01DAC(v19 > 1, v4 + 1, 1);
        v15 = v36;
      }
      ++v12;
      *(_QWORD *)(v15 + 16) = v4 + 1;
      sub_21FA2D23C((uint64_t)v10, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v4, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      if ((char *)v13 == v12)
      {
        v4 = v27;
        goto LABEL_20;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    v13 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
  }
  v4 = a1 & 0xFFFFFFFFFFFFFF8;
  v34 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_20:
  if (a1 < 0)
    v20 = a1;
  else
    v20 = v4;
  v29 = (char *)v20;
  v10 = v30;
  if (v31)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      v21 = sub_21FC5BC7C();
      swift_bridgeObjectRelease();
      if (v13 == v21)
        break;
LABEL_27:
      if (v34)
      {
        v22 = (char *)MEMORY[0x2207D057C](v13, a1);
      }
      else
      {
        if (v13 < 0)
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if ((unint64_t)v13 >= *(_QWORD *)(v4 + 16))
          goto LABEL_39;
        v22 = (char *)*(id *)(a1 + 8 * v13 + 32);
      }
      v12 = v22;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      v23 = (void *)MEMORY[0x2207D0ABC]();
      v35 = v12;
      v32(&v35);
      objc_autoreleasePoolPop(v23);

      v36 = v15;
      v25 = *(_QWORD *)(v15 + 16);
      v24 = *(_QWORD *)(v15 + 24);
      v12 = (char *)(v25 + 1);
      if (v25 >= v24 >> 1)
      {
        sub_21FC01DAC(v24 > 1, v25 + 1, 1);
        v15 = v36;
      }
      *(_QWORD *)(v15 + 16) = v12;
      sub_21FA2D23C((uint64_t)v10, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v25, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      ++v13;
      if (!v31)
        goto LABEL_24;
    }
  }
  else
  {
LABEL_24:
    if (v13 != *(_QWORD *)(v4 + 16))
      goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_21FBB1134()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    type metadata accessor for SignedClinicalDataManager();
    v1 = swift_allocObject();
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_21FBB1188(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *v2;
  sub_21FBB1480();
  v19 = v6;
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBB1548();
  v20 = v9;
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBB1134();
  v12 = sub_21FBBB318(a1, 1);
  swift_release();
  v23 = v12;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = v5;
  sub_21FBB1634(0, &qword_25554B108, (unint64_t *)&unk_25554BB00);
  sub_21FA5BE58(0, (unint64_t *)&qword_2555412D0);
  sub_21FBB16A8(&qword_25554BB10, &qword_25554B108, (unint64_t *)&unk_25554BB00);
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v5;
  sub_21FBB1634(0, (unint64_t *)&qword_2555412C8, (unint64_t *)&qword_2555412D0);
  sub_21FA2A08C(&qword_25554B118, (uint64_t (*)(uint64_t))sub_21FBB1480, MEMORY[0x24BDB96C0]);
  sub_21FBB16A8((unint64_t *)&qword_2555412E0, (unint64_t *)&qword_2555412C8, (unint64_t *)&qword_2555412D0);
  v14 = v19;
  sub_21FC5B364();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v14);
  sub_21FA2A08C(&qword_25554B120, (uint64_t (*)(uint64_t))sub_21FBB1548, MEMORY[0x24BDB9998]);
  v15 = v20;
  v16 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v15);
  return v16;
}

uint64_t sub_21FBB143C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VerifiableHealthRecordsParsingService()
{
  return objc_opt_self();
}

void sub_21FBB1480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554B100)
  {
    sub_21FBB1634(255, &qword_25554B108, (unint64_t *)&unk_25554BB00);
    sub_21FA5BE58(255, (unint64_t *)&qword_2555412D0);
    sub_21FBB16A8(&qword_25554BB10, &qword_25554B108, (unint64_t *)&unk_25554BB00);
    v0 = sub_21FC5B064();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554B100);
  }
}

void sub_21FBB1548()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554B110)
  {
    sub_21FBB1480();
    sub_21FBB1634(255, (unint64_t *)&qword_2555412C8, (unint64_t *)&qword_2555412D0);
    sub_21FA2A08C(&qword_25554B118, (uint64_t (*)(uint64_t))sub_21FBB1480, MEMORY[0x24BDB96C0]);
    sub_21FBB16A8((unint64_t *)&qword_2555412E0, (unint64_t *)&qword_2555412C8, (unint64_t *)&qword_2555412D0);
    v0 = sub_21FC5B13C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554B110);
  }
}

void sub_21FBB1634(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_21FA5BE58(255, a3);
    sub_21FA2CDB4();
    v4 = sub_21FC5B190();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_21FBB16A8(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_21FBB1634(255, a2, a3);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FBB16E8()
{
  return swift_deallocObject();
}

uint64_t sub_21FBB16F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21FBB1764(*a1, *(_QWORD *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_21FBB1724()
{
  return swift_deallocObject();
}

uint64_t sub_21FBB1734(void **a1)
{
  sub_21FBB199C(*a1);
  return swift_willThrow();
}

uint64_t sub_21FBB1764(void *a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;

  v3 = objc_msgSend(a1, sel_items);
  sub_21FA5BE58(0, &qword_25554B128);
  v4 = sub_21FC5B7A8();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v22 = a2;
    if (v5)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease_n();
    v19 = objc_allocWithZone(MEMORY[0x24BE48A98]);
    v20 = (void *)sub_21FC5B79C();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v19, sel_initWithOptions_localizedTypeDisplayNames_, v22, v20);

    return (uint64_t)v21;
  }
  swift_bridgeObjectRetain();
  result = sub_21FC5BC7C();
  v5 = result;
  v22 = a2;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x2207D057C](v7, v4);
      else
        v9 = *(id *)(v4 + 8 * v7 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_mainRecord);
      v12 = objc_msgSend(v11, sel_recordTypeDisplayName);

      v13 = sub_21FC5B604();
      v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_21FA7DD0C(0, v8[2] + 1, 1, v8);
      v17 = v8[2];
      v16 = v8[3];
      if (v17 >= v16 >> 1)
        v8 = sub_21FA7DD0C((_QWORD *)(v16 > 1), v17 + 1, 1, v8);
      ++v7;
      v8[2] = v17 + 1;
      v18 = &v8[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
    }
    while (v5 != v7);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

id sub_21FBB199C(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v16;
  id v17;
  id v18;

  v2 = (void *)sub_21FC5A8D8();
  v3 = objc_msgSend(v2, sel_domain);
  v4 = sub_21FC5B604();
  v6 = v5;

  if (v4 == 0xD000000000000023 && v6 == 0x800000021FC7C430)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      goto LABEL_8;
  }
  v8 = objc_msgSend(v2, sel_code);
  if (v8 == (id)104)
  {
    sub_21FC5B604();
    v16 = objc_msgSend(v2, sel_userInfo);
    sub_21FC5B568();

    v17 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v11 = (void *)sub_21FC5B5E0();
    swift_bridgeObjectRelease();
    v12 = (void *)sub_21FC5B55C();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v11, 1, v12);
    goto LABEL_10;
  }
  if (v8 != (id)103)
  {
LABEL_8:

    v14 = a1;
    return a1;
  }
  sub_21FC5B604();
  v9 = objc_msgSend(v2, sel_userInfo);
  sub_21FC5B568();

  v10 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v11 = (void *)sub_21FC5B5E0();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_21FC5B55C();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v10, sel_initWithDomain_code_userInfo_, v11, 2, v12);
LABEL_10:
  v18 = v13;

  return v18;
}

HealthRecordsDaemon::VCJWK::KeyType_optional __swiftcall VCJWK.KeyType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (HealthRecordsDaemon::VCJWK::KeyType_optional)sub_21FBB1EFC(v1);
}

uint64_t VCJWK.KeyType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 17221;
  if (*v0 != 1)
    v1 = 5262159;
  if (*v0)
    return v1;
  else
    return 4281170;
}

uint64_t sub_21FBB1C88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21FA2DCB8(*a1, *a2);
}

uint64_t sub_21FBB1C94()
{
  sub_21FC5BE8C();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

uint64_t sub_21FBB1D18()
{
  sub_21FC5B67C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBB1D78()
{
  sub_21FC5BE8C();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

HealthRecordsDaemon::VCJWK::KeyType_optional sub_21FBB1DF8(Swift::String *a1)
{
  return VCJWK.KeyType.init(rawValue:)(*a1);
}

void sub_21FBB1E04(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xE200000000000000;
  v5 = 17221;
  if (v2 != 1)
  {
    v5 = 5262159;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 4281170;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21FBB1E48()
{
  sub_21FBB4A94();
  return sub_21FC5B778();
}

uint64_t sub_21FBB1EA4()
{
  sub_21FBB4A94();
  return sub_21FC5B760();
}

HealthRecordsDaemon::VCJWK::Curve_optional __swiftcall VCJWK.Curve.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (HealthRecordsDaemon::VCJWK::Curve_optional)sub_21FBB1EFC(v1);
}

uint64_t sub_21FBB1EFC@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_21FC5BCD0();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t VCJWK.Curve.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x3635322D50;
  if (*v0 != 1)
    v1 = 0x39313535326445;
  if (*v0)
    return v1;
  else
    return 0x6B36353270636573;
}

uint64_t sub_21FBB1FAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21FA2DBA8(*a1, *a2);
}

uint64_t sub_21FBB1FB8()
{
  sub_21FC5BE8C();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

uint64_t sub_21FBB2058()
{
  sub_21FC5B67C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBB20D4()
{
  sub_21FC5BE8C();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

HealthRecordsDaemon::VCJWK::Curve_optional sub_21FBB2170(Swift::String *a1)
{
  return VCJWK.Curve.init(rawValue:)(*a1);
}

void sub_21FBB217C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000031;
  v4 = 0xE500000000000000;
  v5 = 0x3635322D50;
  if (v2 != 1)
  {
    v5 = 0x39313535326445;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6B36353270636573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21FBB21DC()
{
  sub_21FBB4A50();
  return sub_21FC5B778();
}

uint64_t sub_21FBB2238()
{
  sub_21FBB4A50();
  return sub_21FC5B760();
}

void VCJWK.kty.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void VCJWK.crv.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t VCJWK.alg.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.ext.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t VCJWK.e.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.n.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.x.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.y.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.kid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.keyOps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VCJWK.use.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 VCJWK.init(kty:crv:alg:ext:e:n:x:y:keyOps:kid:use:)@<Q0>(_BYTE *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  __n128 result;
  char v18;

  result = a11;
  v18 = *a2;
  *(_BYTE *)a9 = *a1;
  *(_BYTE *)(a9 + 1) = v18;
  *(_QWORD *)(a9 + 8) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_BYTE *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_QWORD *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  *(_OWORD *)(a9 + 56) = a10;
  *(__n128 *)(a9 + 72) = a11;
  *(_QWORD *)(a9 + 88) = a12;
  *(_QWORD *)(a9 + 96) = a14;
  *(_QWORD *)(a9 + 104) = a15;
  *(_QWORD *)(a9 + 112) = a13;
  *(_QWORD *)(a9 + 120) = a16;
  *(_QWORD *)(a9 + 128) = a17;
  return result;
}

__n128 VCJWK.init(data:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v8;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  sub_21FC5A614();
  swift_allocObject();
  sub_21FC5A608();
  sub_21FBB250C();
  sub_21FC5A5FC();
  sub_21FA2D770(a1, a2);
  swift_release();
  if (!v3)
  {
    *(_OWORD *)(a3 + 96) = v14;
    *(_OWORD *)(a3 + 112) = v15;
    *(_QWORD *)(a3 + 128) = v16;
    *(_OWORD *)(a3 + 32) = v10;
    *(_OWORD *)(a3 + 48) = v11;
    *(_OWORD *)(a3 + 64) = v12;
    *(_OWORD *)(a3 + 80) = v13;
    result = v9;
    *(_OWORD *)a3 = v8;
    *(__n128 *)(a3 + 16) = v9;
  }
  return result;
}

unint64_t sub_21FBB250C()
{
  unint64_t result;

  result = qword_25554B130;
  if (!qword_25554B130)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK, &type metadata for VCJWK);
    atomic_store(result, (unint64_t *)&qword_25554B130);
  }
  return result;
}

uint64_t sub_21FBB2550(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21FBB257C + 4 * byte_21FC6EAB0[a1]))(7959659, 0xE300000000000000);
}

uint64_t sub_21FBB257C()
{
  return 7762531;
}

uint64_t sub_21FBB2588()
{
  return 6777953;
}

uint64_t sub_21FBB2594()
{
  return 7632997;
}

uint64_t sub_21FBB25A0()
{
  return 101;
}

uint64_t sub_21FBB25AC()
{
  return 110;
}

uint64_t sub_21FBB25B8()
{
  return 120;
}

uint64_t sub_21FBB25C4()
{
  return 121;
}

uint64_t sub_21FBB25D0()
{
  return 0x73706F5F79656BLL;
}

uint64_t sub_21FBB25E8()
{
  return 6648693;
}

uint64_t sub_21FBB25F4()
{
  return 6580587;
}

uint64_t sub_21FBB2600(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21FBB262C + 4 * byte_21FC6EABB[a1]))(7959659, 0xE300000000000000);
}

uint64_t sub_21FBB262C()
{
  return 7762531;
}

uint64_t sub_21FBB2638()
{
  return 6777953;
}

uint64_t sub_21FBB2644()
{
  return 7632997;
}

uint64_t sub_21FBB2650()
{
  return 101;
}

uint64_t sub_21FBB265C()
{
  return 110;
}

uint64_t sub_21FBB2668()
{
  return 120;
}

uint64_t sub_21FBB2674()
{
  return 121;
}

uint64_t sub_21FBB2680()
{
  return 0x73706F5F79656BLL;
}

uint64_t sub_21FBB2698()
{
  return 6648693;
}

uint64_t sub_21FBB26A4()
{
  return 6580587;
}

uint64_t sub_21FBB26B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_21FBB2550(*a1);
  v5 = v4;
  if (v3 == sub_21FBB2550(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_21FC5BDF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21FBB2738()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_21FC5BE8C();
  sub_21FBB2550(v1);
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

uint64_t sub_21FBB2798()
{
  unsigned __int8 *v0;

  sub_21FBB2550(*v0);
  sub_21FC5B67C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBB27D8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_21FC5BE8C();
  sub_21FBB2550(v1);
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

uint64_t sub_21FBB2834@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21FBB4A08();
  *a1 = result;
  return result;
}

uint64_t sub_21FBB2860@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21FBB2550(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21FBB2888()
{
  unsigned __int8 *v0;

  return sub_21FBB2600(*v0);
}

uint64_t sub_21FBB2890@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21FBB4A08();
  *a1 = result;
  return result;
}

void sub_21FBB28B4(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_21FBB28C0()
{
  sub_21FBB3E3C();
  return sub_21FC5BF10();
}

uint64_t sub_21FBB28E8()
{
  sub_21FBB3E3C();
  return sub_21FC5BF1C();
}

uint64_t VCJWK.hash(into:)()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v1 = *(unsigned __int8 *)(v0 + 1);
  v2 = *(_QWORD *)(v0 + 16);
  v13 = *(unsigned __int8 *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 128);
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  sub_21FC5BEA4();
  if (v1 != 3)
  {
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
  }
  sub_21FC5BEA4();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
  }
  if (v13 != 2)
    sub_21FC5BEA4();
  sub_21FC5BEA4();
  if (v3)
  {
    sub_21FC5BEA4();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_9;
  }
  else
  {
    sub_21FC5BEA4();
    if (v11)
    {
LABEL_9:
      sub_21FC5BEA4();
      swift_bridgeObjectRetain();
      sub_21FC5B67C();
      swift_bridgeObjectRelease();
      if (v12)
        goto LABEL_10;
      goto LABEL_21;
    }
  }
  sub_21FC5BEA4();
  if (v12)
  {
LABEL_10:
    sub_21FC5BEA4();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  sub_21FC5BEA4();
  if (v4)
  {
LABEL_11:
    sub_21FC5BEA4();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  sub_21FC5BEA4();
  if (v5)
  {
LABEL_12:
    sub_21FC5BEA4();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_13;
    goto LABEL_24;
  }
LABEL_23:
  sub_21FC5BEA4();
  if (v6)
  {
LABEL_13:
    sub_21FC5BEA4();
    sub_21FC5BE98();
    v8 = *(_QWORD *)(v6 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = v6 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_21FC5B67C();
        swift_bridgeObjectRelease();
        v9 += 16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    if (v7)
      goto LABEL_18;
    return sub_21FC5BEA4();
  }
LABEL_24:
  sub_21FC5BEA4();
  if (v7)
  {
LABEL_18:
    sub_21FC5BEA4();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    return swift_bridgeObjectRelease();
  }
  return sub_21FC5BEA4();
}

uint64_t VCJWK.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;

  sub_21FBB3F08(0, &qword_25554B138, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v18 - v6;
  v8 = *v1;
  LODWORD(v33) = v1[1];
  v9 = *((_QWORD *)v1 + 1);
  v31 = *((_QWORD *)v1 + 2);
  v32 = v9;
  v36 = v1[24];
  v30 = *((_QWORD *)v1 + 4);
  v10 = *((_QWORD *)v1 + 5);
  v11 = *((_QWORD *)v1 + 6);
  v27 = *((_QWORD *)v1 + 7);
  v28 = v10;
  v12 = *((_QWORD *)v1 + 8);
  v25 = *((_QWORD *)v1 + 9);
  v26 = v11;
  v13 = *((_QWORD *)v1 + 10);
  v23 = *((_QWORD *)v1 + 11);
  v24 = v12;
  v14 = *((_QWORD *)v1 + 12);
  v21 = *((_QWORD *)v1 + 13);
  v22 = v13;
  v19 = *((_QWORD *)v1 + 14);
  v20 = v14;
  v15 = *((_QWORD *)v1 + 16);
  v29 = *((_QWORD *)v1 + 15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FBB3E3C();
  sub_21FC5BEEC();
  LOBYTE(v35) = v8;
  v37 = 0;
  sub_21FBB3E80();
  v16 = v34;
  sub_21FC5BD9C();
  if (!v16)
  {
    v34 = v15;
    LOBYTE(v35) = v33;
    v37 = 1;
    sub_21FBB3EC4();
    sub_21FC5BD6C();
    LOBYTE(v35) = 2;
    sub_21FC5BD48();
    v33 = v5;
    LOBYTE(v35) = 3;
    sub_21FC5BD54();
    LOBYTE(v35) = 4;
    sub_21FC5BD48();
    LOBYTE(v35) = 5;
    sub_21FC5BD48();
    LOBYTE(v35) = 6;
    sub_21FC5BD48();
    LOBYTE(v35) = 7;
    sub_21FC5BD48();
    LOBYTE(v35) = 8;
    sub_21FC5BD48();
    v35 = v19;
    v37 = 9;
    sub_21FAC8DA4();
    sub_21FBB3FEC((unint64_t *)&qword_25553EF58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_21FC5BD6C();
    LOBYTE(v35) = 10;
    sub_21FC5BD48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VCJWK.hashValue.getter()
{
  sub_21FC5BE8C();
  VCJWK.hash(into:)();
  return sub_21FC5BEB0();
}

uint64_t VCJWK.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _QWORD v67[3];
  char v68;
  _BYTE v69[7];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[11];
  __int16 v85;
  _QWORD *v86;

  sub_21FBB3F08(0, &qword_25554B158, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = a1[3];
  v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_21FBB3E3C();
  sub_21FC5BEE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  LOBYTE(v58) = 0;
  sub_21FBB3F64();
  sub_21FC5BD30();
  v11 = LOBYTE(v67[0]);
  LOBYTE(v58) = 1;
  sub_21FBB3FA8();
  sub_21FC5BD0C();
  v12 = LOBYTE(v67[0]);
  LOBYTE(v67[0]) = 2;
  v53 = sub_21FC5BCE8();
  v54 = v12;
  LOBYTE(v67[0]) = 3;
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_21FC5BCF4();
  v57 = v14;
  v52 = v15;
  LOBYTE(v67[0]) = 4;
  v51 = sub_21FC5BCE8();
  LOBYTE(v67[0]) = 5;
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_21FC5BCE8();
  v56 = v17;
  v50 = v18;
  LOBYTE(v67[0]) = 6;
  v20 = v19;
  swift_bridgeObjectRetain();
  v21 = sub_21FC5BCE8();
  v55 = v20;
  v49 = v21;
  LOBYTE(v67[0]) = 7;
  v23 = v22;
  swift_bridgeObjectRetain();
  v47 = sub_21FC5BCE8();
  v48 = v11;
  LOBYTE(v67[0]) = 8;
  v25 = v24;
  swift_bridgeObjectRetain();
  v46 = sub_21FC5BCE8();
  v27 = v26;
  sub_21FAC8DA4();
  v45 = v28;
  LOBYTE(v58) = 9;
  sub_21FBB3FEC(&qword_25554B170, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  v44 = v27;
  swift_bridgeObjectRetain();
  sub_21FC5BD0C();
  v83 = 10;
  v45 = v67[0];
  swift_bridgeObjectRetain();
  v29 = sub_21FC5BCE8();
  v43 = v30;
  v31 = v29;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v58) = v48;
  BYTE1(v58) = v54;
  *((_QWORD *)&v58 + 1) = v53;
  *(_QWORD *)&v59 = v57;
  BYTE8(v59) = v52;
  *(_QWORD *)&v60 = v51;
  *((_QWORD *)&v60 + 1) = v56;
  *(_QWORD *)&v61 = v50;
  *((_QWORD *)&v61 + 1) = v55;
  *(_QWORD *)&v62 = v49;
  *((_QWORD *)&v62 + 1) = v23;
  v41 = v23;
  v42 = v31;
  *(_QWORD *)&v63 = v47;
  *((_QWORD *)&v63 + 1) = v25;
  v32 = v45;
  v33 = v44;
  *(_QWORD *)&v64 = v46;
  *((_QWORD *)&v64 + 1) = v44;
  *(_QWORD *)&v65 = v45;
  *((_QWORD *)&v65 + 1) = v31;
  v66 = v43;
  sub_21FBB4048((uint64_t)&v58);
  v34 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v55;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v65;
  *(_OWORD *)(a2 + 96) = v64;
  *(_OWORD *)(a2 + 112) = v36;
  *(_QWORD *)(a2 + 128) = v66;
  v37 = v61;
  *(_OWORD *)(a2 + 32) = v60;
  *(_OWORD *)(a2 + 48) = v37;
  v38 = v63;
  *(_OWORD *)(a2 + 64) = v62;
  *(_OWORD *)(a2 + 80) = v38;
  v39 = v59;
  *(_OWORD *)a2 = v58;
  *(_OWORD *)(a2 + 16) = v39;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  LOBYTE(v67[0]) = v48;
  BYTE1(v67[0]) = v54;
  *(_DWORD *)((char *)v67 + 2) = *(_DWORD *)&v84[7];
  HIWORD(v67[0]) = v85;
  v67[1] = v53;
  v67[2] = v34;
  v68 = v52;
  *(_DWORD *)v69 = *(_DWORD *)v84;
  *(_DWORD *)&v69[3] = *(_DWORD *)&v84[3];
  v70 = v51;
  v71 = v56;
  v72 = v50;
  v73 = v35;
  v74 = v49;
  v75 = v41;
  v76 = v47;
  v77 = v25;
  v78 = v46;
  v79 = v33;
  v80 = v32;
  v81 = v42;
  v82 = v43;
  return sub_21FBB40D8((uint64_t)v67);
}

uint64_t sub_21FBB3830@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VCJWK.init(from:)(a1, a2);
}

uint64_t sub_21FBB3844(_QWORD *a1)
{
  return VCJWK.encode(to:)(a1);
}

uint64_t sub_21FBB385C()
{
  sub_21FC5BE8C();
  VCJWK.hash(into:)();
  return sub_21FC5BEB0();
}

uint64_t sub_21FBB389C()
{
  sub_21FC5BE8C();
  VCJWK.hash(into:)();
  return sub_21FC5BEB0();
}

BOOL _s19HealthRecordsDaemon5VCJWKV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  _BOOL8 result;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = 4281170;
  if (!*(_BYTE *)a1)
  {
    v3 = 0xE300000000000000;
    v4 = 4281170;
    if (*(_BYTE *)a2)
      goto LABEL_6;
    goto LABEL_9;
  }
  if (*(_BYTE *)a1 != 1)
  {
    v3 = 0xE300000000000000;
    v4 = 5262159;
    if (*(_BYTE *)a2)
      goto LABEL_6;
LABEL_9:
    v5 = 0xE300000000000000;
    goto LABEL_11;
  }
  v3 = 0xE200000000000000;
  v4 = 17221;
  if (!*(_BYTE *)a2)
    goto LABEL_9;
LABEL_6:
  if (*(_BYTE *)a2 == 1)
  {
    v5 = 0xE200000000000000;
    v2 = 17221;
  }
  else
  {
    v5 = 0xE300000000000000;
    v2 = 5262159;
  }
LABEL_11:
  v6 = *(unsigned __int8 *)(a1 + 1);
  v7 = *(_QWORD *)(a1 + 16);
  v47 = *(_QWORD *)(a1 + 32);
  v51 = *(_QWORD *)(a1 + 40);
  v52 = *(_QWORD *)(a1 + 8);
  v43 = *(_QWORD *)(a1 + 48);
  v49 = *(_QWORD *)(a1 + 56);
  v39 = *(_QWORD *)(a1 + 64);
  v45 = *(_QWORD *)(a1 + 72);
  v35 = *(_QWORD *)(a1 + 80);
  v41 = *(_QWORD *)(a1 + 88);
  v33 = *(_QWORD *)(a1 + 96);
  v37 = *(_QWORD *)(a1 + 104);
  v29 = *(_QWORD *)(a1 + 128);
  v8 = *(unsigned __int8 *)(a2 + 1);
  v10 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v46 = *(_QWORD *)(a2 + 32);
  v50 = *(_QWORD *)(a2 + 40);
  v42 = *(_QWORD *)(a2 + 48);
  v48 = *(_QWORD *)(a2 + 56);
  v38 = *(_QWORD *)(a2 + 64);
  v44 = *(_QWORD *)(a2 + 72);
  v34 = *(_QWORD *)(a2 + 80);
  v40 = *(_QWORD *)(a2 + 88);
  v36 = *(_QWORD *)(a2 + 104);
  v11 = *(unsigned __int8 *)(a1 + 24);
  v30 = *(_QWORD **)(a1 + 112);
  v27 = *(_QWORD *)(a1 + 120);
  v28 = *(_QWORD *)(a2 + 128);
  v12 = *(unsigned __int8 *)(a2 + 24);
  v26 = *(_QWORD *)(a2 + 120);
  v31 = *(_QWORD **)(a2 + 112);
  v32 = *(_QWORD *)(a2 + 96);
  if (v4 == v2 && v3 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v13 & 1) == 0)
      return result;
  }
  if (v6 != 3)
  {
    if (v8 == 3)
      return 0;
    v15 = 0xE900000000000031;
    v16 = 0x6B36353270636573;
    if (v6)
    {
      if (v6 == 1)
      {
        v17 = 0xE500000000000000;
        v18 = 0x3635322D50;
        if (!v8)
          goto LABEL_28;
      }
      else
      {
        v17 = 0xE700000000000000;
        v18 = 0x39313535326445;
        if (!v8)
          goto LABEL_28;
      }
    }
    else
    {
      v18 = 0x6B36353270636573;
      v17 = 0xE900000000000031;
      if (!v8)
        goto LABEL_28;
    }
    if (v8 != 1)
    {
      v15 = 0xE700000000000000;
      if (v18 != 0x39313535326445)
        goto LABEL_33;
      goto LABEL_31;
    }
    v15 = 0xE500000000000000;
    v16 = 0x3635322D50;
LABEL_28:
    if (v18 != v16)
    {
LABEL_33:
      v19 = sub_21FC5BDF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v19 & 1) == 0)
        return result;
      goto LABEL_34;
    }
LABEL_31:
    if (v17 == v15)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v8 != 3)
    return 0;
LABEL_34:
  if (!v7)
  {
    if (v9)
      return 0;
LABEL_41:
    if (v11 == 2)
    {
      if (v12 != 2)
        return 0;
    }
    else
    {
      result = 0;
      if (v12 == 2 || ((((v11 & 1) == 0) ^ v12) & 1) == 0)
        return result;
    }
    if (v51)
    {
      if (!v50)
        return 0;
      if (v47 != v46 || v51 != v50)
      {
        v21 = sub_21FC5BDF0();
        result = 0;
        if ((v21 & 1) == 0)
          return result;
      }
    }
    else if (v50)
    {
      return 0;
    }
    if (v49)
    {
      if (!v48)
        return 0;
      if (v43 != v42 || v49 != v48)
      {
        v22 = sub_21FC5BDF0();
        result = 0;
        if ((v22 & 1) == 0)
          return result;
      }
    }
    else if (v48)
    {
      return 0;
    }
    if (v45)
    {
      if (!v44)
        return 0;
      if (v39 != v38 || v45 != v44)
      {
        v23 = sub_21FC5BDF0();
        result = 0;
        if ((v23 & 1) == 0)
          return result;
      }
    }
    else if (v44)
    {
      return 0;
    }
    if (v41)
    {
      if (!v40)
        return 0;
      if (v35 != v34 || v41 != v40)
      {
        v24 = sub_21FC5BDF0();
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
    }
    else if (v40)
    {
      return 0;
    }
    if (v37)
    {
      if (!v36)
        return 0;
      if (v33 != v32 || v37 != v36)
      {
        v25 = sub_21FC5BDF0();
        result = 0;
        if ((v25 & 1) == 0)
          return result;
      }
    }
    else if (v36)
    {
      return 0;
    }
    if (v30)
    {
      if (!v31 || (sub_21FB0E158(v30, v31) & 1) == 0)
        return 0;
    }
    else if (v31)
    {
      return 0;
    }
    if (v29)
      return v28 && (v27 == v26 && v29 == v28 || (sub_21FC5BDF0() & 1) != 0);
    return !v28;
  }
  if (!v9)
    return 0;
  if (v52 == v10 && v7 == v9)
    goto LABEL_41;
  v20 = sub_21FC5BDF0();
  result = 0;
  if ((v20 & 1) != 0)
    goto LABEL_41;
  return result;
}

unint64_t sub_21FBB3E3C()
{
  unint64_t result;

  result = qword_25554B140;
  if (!qword_25554B140)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6EEE0, &type metadata for VCJWK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25554B140);
  }
  return result;
}

unint64_t sub_21FBB3E80()
{
  unint64_t result;

  result = qword_25554B148;
  if (!qword_25554B148)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.KeyType, &type metadata for VCJWK.KeyType);
    atomic_store(result, (unint64_t *)&qword_25554B148);
  }
  return result;
}

unint64_t sub_21FBB3EC4()
{
  unint64_t result;

  result = qword_25554B150;
  if (!qword_25554B150)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.Curve, &type metadata for VCJWK.Curve);
    atomic_store(result, (unint64_t *)&qword_25554B150);
  }
  return result;
}

void sub_21FBB3F08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_21FBB3E3C();
    v7 = a3(a1, &type metadata for VCJWK.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_21FBB3F64()
{
  unint64_t result;

  result = qword_25554B160;
  if (!qword_25554B160)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.KeyType, &type metadata for VCJWK.KeyType);
    atomic_store(result, (unint64_t *)&qword_25554B160);
  }
  return result;
}

unint64_t sub_21FBB3FA8()
{
  unint64_t result;

  result = qword_25554B168;
  if (!qword_25554B168)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.Curve, &type metadata for VCJWK.Curve);
    atomic_store(result, (unint64_t *)&qword_25554B168);
  }
  return result;
}

uint64_t sub_21FBB3FEC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_21FAC8DA4();
    v8 = a2;
    result = MEMORY[0x2207D0F78](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FBB4048(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21FBB40D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_21FBB416C()
{
  unint64_t result;

  result = qword_25554B178;
  if (!qword_25554B178)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.KeyType, &type metadata for VCJWK.KeyType);
    atomic_store(result, (unint64_t *)&qword_25554B178);
  }
  return result;
}

unint64_t sub_21FBB41B4()
{
  unint64_t result;

  result = qword_25554B180;
  if (!qword_25554B180)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.Curve, &type metadata for VCJWK.Curve);
    atomic_store(result, (unint64_t *)&qword_25554B180);
  }
  return result;
}

unint64_t sub_21FBB41FC()
{
  unint64_t result;

  result = qword_25554B188;
  if (!qword_25554B188)
  {
    result = MEMORY[0x2207D0F78]("5ҁ.", &type metadata for VCJWK);
    atomic_store(result, (unint64_t *)&qword_25554B188);
  }
  return result;
}

uint64_t destroy for VCJWK()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VCJWK(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VCJWK(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for VCJWK(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VCJWK(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VCJWK(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for VCJWK()
{
  return &type metadata for VCJWK;
}

ValueMetadata *type metadata accessor for VCJWK.KeyType()
{
  return &type metadata for VCJWK.KeyType;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataFHIROperationHandlerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19HealthRecordsDaemon5VCJWKV7KeyTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21FBB4754 + 4 * byte_21FC6EACB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21FBB4788 + 4 * byte_21FC6EAC6[v4]))();
}

uint64_t sub_21FBB4788(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBB4790(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FBB4798);
  return result;
}

uint64_t sub_21FBB47A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FBB47ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21FBB47B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBB47B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VCJWK.Curve()
{
  return &type metadata for VCJWK.Curve;
}

uint64_t getEnumTagSinglePayload for VCJWK.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VCJWK.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_21FBB48B0 + 4 * byte_21FC6EAD5[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_21FBB48E4 + 4 * byte_21FC6EAD0[v4]))();
}

uint64_t sub_21FBB48E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBB48EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FBB48F4);
  return result;
}

uint64_t sub_21FBB4900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FBB4908);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_21FBB490C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBB4914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VCJWK.CodingKeys()
{
  return &type metadata for VCJWK.CodingKeys;
}

unint64_t sub_21FBB4934()
{
  unint64_t result;

  result = qword_25554B190;
  if (!qword_25554B190)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6EEB8, &type metadata for VCJWK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25554B190);
  }
  return result;
}

unint64_t sub_21FBB497C()
{
  unint64_t result;

  result = qword_25554B198;
  if (!qword_25554B198)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6EDF0, &type metadata for VCJWK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25554B198);
  }
  return result;
}

unint64_t sub_21FBB49C4()
{
  unint64_t result;

  result = qword_25554B1A0;
  if (!qword_25554B1A0)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6EE18, &type metadata for VCJWK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25554B1A0);
  }
  return result;
}

uint64_t sub_21FBB4A08()
{
  unint64_t v0;

  v0 = sub_21FC5BCD0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

unint64_t sub_21FBB4A50()
{
  unint64_t result;

  result = qword_25554B1A8;
  if (!qword_25554B1A8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.Curve, &type metadata for VCJWK.Curve);
    atomic_store(result, (unint64_t *)&qword_25554B1A8);
  }
  return result;
}

unint64_t sub_21FBB4A94()
{
  unint64_t result;

  result = qword_25554B1B0;
  if (!qword_25554B1B0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for VCJWK.KeyType, &type metadata for VCJWK.KeyType);
    atomic_store(result, (unint64_t *)&qword_25554B1B0);
  }
  return result;
}

uint64_t sub_21FBB4AD8(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

void sub_21FBB4B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  v5 = v3;
  v7 = sub_21FC5B640();
  MEMORY[0x24BDAC7A8](v7);
  if (a3)
  {
    sub_21FC5A65C();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_21FC5A650();
    sub_21FBB8398();
    v8 = sub_21FC5A644();
    v10 = v9;
    swift_release();
    if (!v4)
    {
      sub_21FC5B634();
      sub_21FC5B61C();
      if (v11)
      {
        v12 = (void *)sub_21FC5B5E0();
        swift_bridgeObjectRelease();
        v13 = (void *)sub_21FC5B5E0();
        objc_msgSend(v5, sel_setValue_forKey_, v12, v13);

      }
      else
      {
        sub_21FA720B8();
        swift_allocError();
        *(_OWORD *)v15 = xmmword_21FC6EF30;
        *(_BYTE *)(v15 + 16) = 2;
        swift_willThrow();
      }
      sub_21FA2D770(v8, v10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (void *)sub_21FC5B5E0();
    objc_msgSend(v5, sel_setValue_forKey_, 0, v14);

  }
}

uint64_t sub_21FBB4D04()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = v0;
  v3 = sub_21FC5B640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_21FC5B5E0();
  v8 = objc_msgSend(v2, sel_stringForKey_, v7);

  if (!v8)
    return 0;
  sub_21FC5B604();

  sub_21FC5B634();
  v9 = sub_21FC5B610();
  v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v11 >> 60 == 15)
  {
    sub_21FA720B8();
    swift_allocError();
    *(_OWORD *)v12 = xmmword_21FC6EF30;
    *(_BYTE *)(v12 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    sub_21FC5A614();
    swift_allocObject();
    sub_21FC5A608();
    sub_21FBB8800();
    sub_21FC5A5FC();
    if (v1)
    {
      swift_release();
      return sub_21FA3239C(v9, v11);
    }
    else
    {
      sub_21FA3239C(v9, v11);
      swift_release();
      return v14[1];
    }
  }
}

uint64_t sub_21FBB4EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v8;

  v8 = a5 & 1;
  swift_bridgeObjectRetain();
  sub_21FBB4B08(a4, v8, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBB51CC(_QWORD *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v15 = a4;
  sub_21FBB8D30(0, &qword_25406BB20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v14 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21FBB8A00();
  sub_21FC5BEEC();
  v16 = a2;
  v17 = a3 & 1;
  v18 = 0;
  type metadata accessor for HKClinicalSharingReason(0);
  sub_21FA2A08C(&qword_25406BA90, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalSharingReason, (uint64_t)&protocol conformance descriptor for HKClinicalSharingReason);
  sub_21FC5BD6C();
  if (!v4)
  {
    v16 = v15;
    v18 = 1;
    sub_21FA2D1A0(0, &qword_25406BA10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_21FBB8D8C(&qword_25406BA18, &qword_25406AAD8, MEMORY[0x24BDCE920], MEMORY[0x24BEE12A0]);
    sub_21FC5BD9C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_21FBB538C()
{
  _BYTE *v0;

  if (*v0)
    return 0x4474736575716572;
  else
    return 0x6E6F73616572;
}

uint64_t sub_21FBB53CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21FBB8A44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21FBB53F0()
{
  sub_21FBB8A00();
  return sub_21FC5BF10();
}

uint64_t sub_21FBB5418()
{
  sub_21FBB8A00();
  return sub_21FC5BF1C();
}

uint64_t sub_21FBB5440@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;
  uint64_t v6;

  result = sub_21FBB8B44(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_21FBB5474(_QWORD *a1)
{
  uint64_t v1;

  return sub_21FBB51CC(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_21FBB549C(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v9;

  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if (!v6)
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v9 = v6;
    else
      v9 = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  return sub_21FB0E21C(v5, v7);
}

double sub_21FBB54DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double result;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v16 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(v3 + 40);
  v15 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_21FAB6D08((uint64_t (*)(char *))sub_21FBB849C, (uint64_t)v14, v6);
  if (*(_BYTE *)(v3 + 32) == 1)
  {
    *(_QWORD *)(v3 + 24) = a1;
    *(_BYTE *)(v3 + 32) = 0;
    sub_21FA2D1A0(0, (unint64_t *)&unk_25406AA58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v8 = sub_21FC5AAAC();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_21FC5EE30;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 16))(v11 + v10, a2, v8);
    swift_bridgeObjectRetain();
    sub_21FBDFF08(v11);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 40) = v7;
    sub_21FBB4EF0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), a1, 0, v7);
  }
  v12 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  result = 14400.0;
  if (v12 < 3)
    return 0.0;
  return result;
}

void *sub_21FBB5668@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  unint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  char v16;
  uint64_t v17;
  id v18;
  void *result;
  void *v20;

  v4 = (void *)v1[9];
  v3 = v1[10];
  v5 = v1[11];
  v6 = v1[12];
  v7 = v1[14];
  if (v4)
  {
    LOBYTE(v8) = v1[13] & 1;
    v9 = (id)v1[9];
    v10 = v3;
    v11 = v5;
    v12 = v6;
    v13 = v7;
  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v11 = 0x800000021FC7C510;
    v12 = sub_21FBB8534();
    v16 = v15;
    v13 = v17;

    v8 = v16 & 1;
    v20 = (void *)v1[9];
    v1[9] = v14;
    v1[10] = 0xD00000000000001DLL;
    v1[11] = 0x800000021FC7C510;
    v1[12] = v12;
    v1[13] = v8;
    v1[14] = v13;
    v18 = v14;
    v10 = 0xD00000000000001DLL;
    v9 = v18;
    swift_bridgeObjectRetain();
    sub_21FBB8358(v20);
  }
  result = sub_21FBB8790(v4);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v13;
  return result;
}

uint64_t sub_21FBB57C4()
{
  uint64_t v0;

  MEMORY[0x2207D105C](*(_QWORD *)(v0 + 136), -1, -1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  sub_21FBB8358(*(void **)(v0 + 72));
  sub_21FA97DF0(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21FBB5828(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v6 = (void *)a1[7];
  objc_msgSend(v6, sel_setPreregistered_, 1);
  v7 = swift_allocObject();
  swift_weakInit();
  v25 = sub_21FBB8868;
  v26 = v7;
  v8 = MEMORY[0x24BDAC760];
  v21 = MEMORY[0x24BDAC760];
  v22 = 1107296256;
  v23 = sub_21FAA5654;
  v24 = &block_descriptor_26;
  v9 = _Block_copy(&v21);
  swift_release();
  objc_msgSend(v6, sel_scheduleWithBlock_, v9);
  _Block_release(v9);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultSyncActivityCriteria);
  v11 = (void *)*MEMORY[0x24BDD2FF8];
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = objc_allocWithZone(MEMORY[0x24BE40E50]);
  v14 = v11;
  swift_retain();
  v15 = (void *)sub_21FC5B5E0();
  v25 = sub_21FBB8870;
  v26 = v12;
  v21 = v8;
  v22 = 1107296256;
  v23 = sub_21FBB82A4;
  v24 = &block_descriptor_30;
  v16 = _Block_copy(&v21);
  v17 = objc_msgSend(v13, sel_initWithName_criteria_loggingCategory_handler_, v15, v10, v14, v16);

  swift_unknownObjectRelease();
  _Block_release(v16);
  swift_release();
  swift_release();
  v18 = (void *)a1[8];
  a1[8] = v17;

  v19 = a1[15];
  a1[15] = a2;
  a1[16] = a3;
  swift_retain();
  return sub_21FA97DF0(v19);
}

void sub_21FBB5A60(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t Strong;
  id v5;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = *(id *)(Strong + 56);
    sub_21FBB6B68(v5, a1, a2);
    swift_release();

  }
  else
  {
    a1(1);
  }
}

uint64_t sub_21FBB5AEC(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return a3(0, 0);
  sub_21FBB74B0(a1, a3, a4);
  return swift_release();
}

uint64_t sub_21FBB5B70()
{
  return sub_21FBB68C4(MEMORY[0x24BEE78F0], "%s: invalidated");
}

id sub_21FBB5B8C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  sub_21FA97DF0(v2);
  v3 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = 0;

  return objc_msgSend(*(id *)(a1 + 56), sel_invalidate);
}

void sub_21FBB5BD0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t aBlock;
  __int128 v32;
  void *v33;
  uint64_t (*v34)();
  uint64_t v35;

  v6 = sub_21FC5AAAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBB5668((uint64_t)&aBlock);
  sub_21FC5AAA0();
  v10 = sub_21FBB54DC(a2, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = v32;
  v12 = v33;
  v13 = v34;
  v14 = v35;
  v15 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = aBlock;
  *(_OWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  sub_21FBB8358(v15);
  if (v10 > a3)
    a3 = v10;
  v16 = *(void **)(a1 + 64);
  if (v16)
  {
    v34 = nullsub_1;
    v35 = 0;
    aBlock = MEMORY[0x24BDAC760];
    *(_QWORD *)&v32 = 1107296256;
    *((_QWORD *)&v32 + 1) = sub_21FBB5FDC;
    v33 = &block_descriptor_14;
    v17 = _Block_copy(&aBlock);
    v18 = v16;
    objc_msgSend(v18, sel_requestRunWithMaximumDelay_completion_, v17, a3);
    _Block_release(v17);

  }
  if (qword_25406B7F8 != -1)
    swift_once();
  v19 = sub_21FC5AFD4();
  __swift_project_value_buffer(v19, (uint64_t)qword_25406D830);
  swift_retain();
  v20 = sub_21FC5AFC8();
  v21 = sub_21FC5B994();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    aBlock = v23;
    *(_DWORD *)v22 = 136315650;
    v24 = *(_QWORD *)(a1 + 144);
    v25 = *(_QWORD *)(a1 + 152);
    swift_bridgeObjectRetain();
    v30 = sub_21FABDCF8(v24, v25, &aBlock);
    sub_21FC5BAC0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    v26 = a2 - 1;
    v27 = 0xED00006E6F697461;
    v28 = 0x7A69726F68747561;
    switch(v26)
    {
      case 0:
        break;
      case 1:
        v27 = 0xE800000000000000;
        v28 = 0x617461642D77656ELL;
        break;
      case 2:
        v27 = 0xEA0000000000646ELL;
        v28 = 0x756F72676B636162;
        break;
      case 3:
        v27 = 0xE700000000000000;
        v28 = 0x676E6974736574;
        break;
      case 4:
        v27 = 0xEE00646574616974;
        v28 = 0x696E692D72657375;
        break;
      case 5:
        v27 = 0x800000021FC75C40;
        v28 = 0xD000000000000010;
        break;
      default:
        v27 = 0xE700000000000000;
        v28 = 0x6E776F6E6B6E75;
        break;
    }
    v30 = sub_21FABDCF8(v28, v27, &aBlock);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2048;
    v30 = *(_QWORD *)&a3;
    sub_21FC5BAC0();
    _os_log_impl(&dword_21FA27000, v20, v21, "%s: scheduled run for reason %s with max delay %f", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v23, -1, -1);
    MEMORY[0x2207D105C](v22, -1, -1);

  }
  else
  {

    swift_release();
  }
}

void sub_21FBB5FDC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_21FBB603C(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23[11];

  v3 = v2;
  swift_getErrorValue();
  if ((sub_21FBB64C4(v23[10]) & 1) != 0 || (swift_getErrorValue(), result = sub_21FBB65A0(v23[6]), (result & 1) != 0))
  {
    if (a2 != 6)
    {
      swift_getErrorValue();
      sub_21FBB64C4(v23[2]);
    }
    if (qword_25406B7F8 != -1)
      swift_once();
    v7 = sub_21FC5AFD4();
    __swift_project_value_buffer(v7, (uint64_t)qword_25406D830);
    swift_retain();
    v8 = a1;
    swift_retain();
    v9 = a1;
    v10 = sub_21FC5AFC8();
    v11 = sub_21FC5B994();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v23[0] = v13;
      *(_DWORD *)v12 = 136315906;
      v14 = v3[18];
      v15 = v3[19];
      swift_bridgeObjectRetain();
      sub_21FABDCF8(v14, v15, v23);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2048;
      sub_21FC5BAC0();
      *(_WORD *)(v12 + 22) = 2080;
      v16 = a2 - 1;
      v17 = 0xED00006E6F697461;
      v18 = 0x7A69726F68747561;
      switch(v16)
      {
        case 0:
          break;
        case 1:
          v17 = 0xE800000000000000;
          v18 = 0x617461642D77656ELL;
          break;
        case 2:
          v17 = 0xEA0000000000646ELL;
          v18 = 0x756F72676B636162;
          break;
        case 3:
          v17 = 0xE700000000000000;
          v18 = 0x676E6974736574;
          break;
        case 4:
          v17 = 0xEE00646574616974;
          v18 = 0x696E692D72657375;
          break;
        case 5:
          v17 = 0x800000021FC75C40;
          v18 = 0xD000000000000010;
          break;
        default:
          v17 = 0xE700000000000000;
          v18 = 0x6E776F6E6B6E75;
          break;
      }
      sub_21FABDCF8(v18, v17, v23);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 32) = 2080;
      v19 = a1;
      sub_21FA2CDB4();
      v20 = sub_21FC5B64C();
      sub_21FABDCF8(v20, v21, v23);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v10, v11, "%s: scheduling sync retry after %f because %s sync encountered error %s", (uint8_t *)v12, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v13, -1, -1);
      MEMORY[0x2207D105C](v12, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    v23[0] = v3[17];
    MEMORY[0x24BDAC7A8](v22);
    sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
    sub_21FAA6830();
    return sub_21FC5ACBC();
  }
  return result;
}

uint64_t sub_21FBB64C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  void *v5;
  void *v6;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for HKError(0);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v4 = v6;
    v5 = v6;
    sub_21FA2A08C(&qword_25553DF18, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_21FC5DC24);
    sub_21FC5A8B4();

    return v6 == (void *)6;
  }
  return result;
}

uint64_t sub_21FBB65A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char v25;
  char v26;
  uint64_t v28;
  char *v29;

  v2 = v1;
  v4 = sub_21FC5AC8C();
  v28 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)&v28 - v8;
  sub_21FA2D1A0(0, &qword_25554B1B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21FC5ACA4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v2, a1);
  v20 = swift_dynamicCast();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v20)
  {
    v21(v12, 0, 1, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v12, v16);
    sub_21FA2A08C(&qword_25554B1C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], MEMORY[0x24BDCF608]);
    v22 = v29;
    sub_21FC5A8B4();
    sub_21FC5AC80();
    sub_21FA2A08C(&qword_25554B1C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF5D8], MEMORY[0x24BDCF5E8]);
    v23 = sub_21FC5B5D4();
    v24 = *(void (**)(char *, uint64_t))(v28 + 8);
    v24(v7, v4);
    if ((v23 & 1) != 0 || (sub_21FC5AC68(), v25 = sub_21FC5B5D4(), v24(v7, v4), (v25 & 1) != 0))
    {
      v24(v22, v4);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      v26 = 1;
    }
    else
    {
      sub_21FC5AC74();
      v26 = sub_21FC5B5D4();
      v24(v7, v4);
      v24(v22, v4);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  else
  {
    v21(v12, 1, 1, v16);
    sub_21FBB84D8((uint64_t)v12);
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_21FBB68A8()
{
  return sub_21FBB68C4(MEMORY[0x24BEE7928], "%s: marking as run");
}

uint64_t sub_21FBB68C4(uint64_t (*a1)(void), const char *a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = v2;
  if (qword_25406B7F8 != -1)
    swift_once();
  v6 = sub_21FC5AFD4();
  __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
  swift_retain();
  v7 = sub_21FC5AFC8();
  v8 = a1();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    v12 = v5[18];
    v11 = v5[19];
    swift_bridgeObjectRetain();
    sub_21FABDCF8(v12, v11, &v14);
    sub_21FC5BAC0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v7, v8, a2, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v10, -1, -1);
    MEMORY[0x2207D105C](v9, -1, -1);

  }
  else
  {

    swift_release();
  }
  v14 = v5[17];
  sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
  sub_21FAA6830();
  return sub_21FC5ACBC();
}

void *sub_21FBB6ABC(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v2 = (void *)a1[8];
  if (v2)
    objc_msgSend(v2, sel_setWaitingForTrigger_, 0);
  sub_21FBB5668((uint64_t)&v10);
  v3 = v10;
  v4 = v11;
  v5 = v12;
  v6 = v15;
  if ((v14 & 1) != 0)
  {
    v7 = v13;
  }
  else
  {
    sub_21FBB4EF0(v10, v11, v12, 0, 1, v15);
    v7 = 0;
  }
  v8 = (void *)a1[9];
  a1[9] = v3;
  a1[10] = v4;
  a1[11] = v5;
  a1[12] = v7;
  a1[13] = 1;
  a1[14] = v6;
  return sub_21FBB8358(v8);
}

uint64_t sub_21FBB6B68(void *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t *, uint64_t *);
  _QWORD *v22;
  uint64_t v23;
  id v24;
  os_log_type_t type;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];

  v4 = v3;
  if (qword_25406B7F8 != -1)
    swift_once();
  v8 = sub_21FC5AFD4();
  __swift_project_value_buffer(v8, (uint64_t)qword_25406D830);
  v9 = a1;
  swift_retain();
  v10 = sub_21FC5AFC8();
  v11 = sub_21FC5B994();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v29[0] = v27;
    *(_DWORD *)v12 = 136315394;
    v14 = v4[18];
    v13 = v4[19];
    swift_bridgeObjectRetain();
    sub_21FABDCF8(v14, v13, v29);
    sub_21FC5BAC0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v15 = objc_msgSend(v9, sel_identifier);
    type = v11;
    v16 = sub_21FC5B604();
    v17 = a2;
    v18 = a3;
    v20 = v19;

    v28 = sub_21FABDCF8(v16, v20, v29);
    sub_21FC5BAC0();

    a3 = v18;
    a2 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v10, type, "%s: activity \"%s\" fired", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v27, -1, -1);
    MEMORY[0x2207D105C](v12, -1, -1);

  }
  else
  {

    swift_release();
  }
  v28 = v4[17];
  sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
  sub_21FA2D1A0(0, &qword_25406BB80, (uint64_t (*)(uint64_t))sub_21FBB8208, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_21FAA6830();
  sub_21FC5ACB0();
  v21 = (void (*)(uint64_t *, uint64_t *))v29[0];
  if (!v29[0])
    return a2(1);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v4;
  v22[3] = v9;
  v22[4] = a2;
  v22[5] = a3;
  v28 = 3;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_21FBB844C;
  *(_QWORD *)(v23 + 24) = v22;
  v29[0] = (uint64_t)sub_21FBB8FC8;
  v29[1] = v23;
  v24 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  v21(&v28, v29);
  swift_release();
  swift_release();
  return sub_21FA97DF0((uint64_t)v21);
}

uint64_t sub_21FBB6EE4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_21FBB8FE4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_21FA97D28(v3);
}

uint64_t sub_21FBB6F48(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v6 = *a2;
  v5 = a2[1];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  swift_retain();
  a3(v4, sub_21FBB83DC, v7);
  return swift_release();
}

uint64_t sub_21FBB6FBC(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD))
{
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t (*v40)(_QWORD);
  uint64_t v41;

  if (a1)
  {
    v8 = a1;
    if (qword_25406B7F8 != -1)
      swift_once();
    v9 = sub_21FC5AFD4();
    __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
    v10 = a3;
    swift_retain();
    v11 = a1;
    v12 = v10;
    swift_retain();
    v13 = a1;
    v14 = sub_21FC5AFC8();
    v15 = sub_21FC5B97C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v41 = v39;
      *(_DWORD *)v16 = 136315650;
      v40 = a4;
      v17 = *(_QWORD *)(a2 + 144);
      v18 = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_21FABDCF8(v17, v18, &v41);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v19 = objc_msgSend(v12, sel_identifier);
      v20 = sub_21FC5B604();
      v22 = v21;

      sub_21FABDCF8(v20, v22, &v41);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2080;
      v23 = a1;
      sub_21FA2CDB4();
      v24 = sub_21FC5B64C();
      sub_21FABDCF8(v24, v25, &v41);
      a4 = v40;
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v14, v15, "%s: activity \"%s\" failed: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v39, -1, -1);
      MEMORY[0x2207D105C](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v26 = sub_21FC5AFD4();
    __swift_project_value_buffer(v26, (uint64_t)qword_25406D830);
    v27 = a3;
    swift_retain();
    v28 = sub_21FC5AFC8();
    v29 = sub_21FC5B994();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v41 = v31;
      *(_DWORD *)v30 = 136315394;
      v32 = *(_QWORD *)(a2 + 144);
      v33 = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_21FABDCF8(v32, v33, &v41);
      sub_21FC5BAC0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v34 = objc_msgSend(v27, sel_identifier);
      v35 = sub_21FC5B604();
      v37 = v36;

      sub_21FABDCF8(v35, v37, &v41);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v28, v29, "%s: activity \"%s succeeded", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v31, -1, -1);
      MEMORY[0x2207D105C](v30, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  return a4(1);
}

uint64_t sub_21FBB74B0(void *a1, uint64_t (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD, _QWORD);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t *, uint64_t *);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  os_log_type_t type;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];
  char v32;

  v4 = v3;
  if (qword_25406B7F8 != -1)
    swift_once();
  v8 = sub_21FC5AFD4();
  __swift_project_value_buffer(v8, (uint64_t)qword_25406D830);
  v9 = a1;
  swift_retain();
  v10 = sub_21FC5AFC8();
  v11 = sub_21FC5B994();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31[0] = v29;
    *(_DWORD *)v12 = 136315394;
    v13 = v9;
    v15 = v4[18];
    v14 = v4[19];
    swift_bridgeObjectRetain();
    sub_21FABDCF8(v15, v14, v31);
    sub_21FC5BAC0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v16 = objc_msgSend(v9, sel_name);
    type = v11;
    v17 = sub_21FC5B604();
    v18 = a2;
    v19 = a3;
    v21 = v20;

    v9 = v13;
    v30 = sub_21FABDCF8(v17, v21, v31);
    sub_21FC5BAC0();

    a3 = v19;
    a2 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v10, type, "%s: activity \"%s\" fired", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v29, -1, -1);
    MEMORY[0x2207D105C](v12, -1, -1);

  }
  else
  {

    swift_release();
  }
  v30 = v4[17];
  sub_21FA2D1A0(0, &qword_25406BAE0, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x24BEE1C28]);
  sub_21FBB8164();
  sub_21FAA6830();
  sub_21FC5ACB0();
  v22 = (void (*)(uint64_t *, uint64_t *))v31[0];
  if (!v31[0])
    return a2(0, 0);
  if (v32)
    v23 = 3;
  else
    v23 = v31[2];
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v4;
  v24[3] = v9;
  v24[4] = a2;
  v24[5] = a3;
  v30 = v23;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_21FBB8274;
  *(_QWORD *)(v25 + 24) = v24;
  v31[0] = (uint64_t)sub_21FBB8280;
  v31[1] = v25;
  v26 = v9;
  swift_retain();
  sub_21FA97D28((uint64_t)v22);
  swift_retain();
  swift_retain();
  v22(&v30, v31);
  swift_release();
  sub_21FA97DF0((uint64_t)v22);
  sub_21FA97DF0((uint64_t)v22);
  return swift_release();
}

uint64_t sub_21FBB7844@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  uint64_t (*v15)(uint64_t *, uint64_t *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v4 = a1[15];
  v5 = a1[16];
  sub_21FA97D28(v4);
  sub_21FBB5668((uint64_t)&v16);
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = v19;
  if ((v20 & 1) == 0)
  {
    sub_21FBB4EF0(v16, v17, v18, 0, 1, v21);
    v12 = 0;
  }
  v13 = (void *)a1[9];
  a1[9] = v6;
  a1[10] = v7;
  a1[11] = v8;
  a1[12] = v12;
  a1[13] = 1;
  a1[14] = v11;
  sub_21FBB8358(v13);
  if (v4)
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v5;
    v15 = sub_21FBB8390;
  }
  else
  {
    v15 = 0;
    result = 0;
  }
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = result;
  *(_QWORD *)(a2 + 16) = v9;
  *(_BYTE *)(a2 + 24) = v10 & 1;
  return result;
}

uint64_t sub_21FBB793C(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t (*v40)(_QWORD, _QWORD);
  uint64_t v41;

  if (a1)
  {
    v8 = a1;
    if (qword_25406B7F8 != -1)
      swift_once();
    v9 = sub_21FC5AFD4();
    __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
    v10 = a3;
    swift_retain();
    v11 = a1;
    v12 = v10;
    swift_retain();
    v13 = a1;
    v14 = sub_21FC5AFC8();
    v15 = sub_21FC5B97C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v41 = v39;
      *(_DWORD *)v16 = 136315650;
      v40 = a4;
      v17 = *(_QWORD *)(a2 + 144);
      v18 = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_21FABDCF8(v17, v18, &v41);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v19 = objc_msgSend(v12, sel_name);
      v20 = sub_21FC5B604();
      v22 = v21;

      sub_21FABDCF8(v20, v22, &v41);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2080;
      v23 = a1;
      sub_21FA2CDB4();
      v24 = sub_21FC5B64C();
      sub_21FABDCF8(v24, v25, &v41);
      a4 = v40;
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v14, v15, "%s: activity \"%s\" failed: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v39, -1, -1);
      MEMORY[0x2207D105C](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v26 = sub_21FC5AFD4();
    __swift_project_value_buffer(v26, (uint64_t)qword_25406D830);
    v27 = a3;
    swift_retain();
    v28 = sub_21FC5AFC8();
    v29 = sub_21FC5B994();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v41 = v31;
      *(_DWORD *)v30 = 136315394;
      v32 = *(_QWORD *)(a2 + 144);
      v33 = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_21FABDCF8(v32, v33, &v41);
      sub_21FC5BAC0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v34 = objc_msgSend(v27, sel_name);
      v35 = sub_21FC5B604();
      v37 = v36;

      sub_21FABDCF8(v35, v37, &v41);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v28, v29, "%s: activity \"%s succeeded", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v31, -1, -1);
      MEMORY[0x2207D105C](v30, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  return a4(0, 0);
}

uint64_t sub_21FBB7E34()
{
  sub_21FA2A08C(&qword_25406BA98, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalSharingReason, (uint64_t)&unk_21FC5D170);
  return sub_21FC5B784();
}

uint64_t sub_21FBB7EA8()
{
  sub_21FA2A08C(&qword_25406BA98, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalSharingReason, (uint64_t)&unk_21FC5D170);
  return sub_21FC5B76C();
}

uint64_t type metadata accessor for ClinicalSharingSyncTaskScheduler()
{
  return objc_opt_self();
}

uint64_t destroy for ClinicalSharingSyncTaskScheduler.AdHocSyncState(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncTaskScheduler.AdHocSyncState()
{
  return &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState;
}

uint64_t sub_21FBB815C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_21FBB7844(v1, a1);
}

void sub_21FBB8164()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_25406BB88)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_21FA2D1A0(255, &qword_25406BB80, (uint64_t (*)(uint64_t))sub_21FBB8208, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_21FA2D1A0(255, &qword_25406BAB0, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalSharingReason, v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25406BB88);
  }
}

unint64_t sub_21FBB8208()
{
  unint64_t result;

  result = qword_25406BB78;
  if (!qword_25406BB78)
  {
    type metadata accessor for HKClinicalSharingReason(255);
    sub_21FAA69A0(255);
    result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_25406BB78);
  }
  return result;
}

uint64_t sub_21FBB8274(void *a1)
{
  uint64_t v1;

  return sub_21FBB793C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(_QWORD, _QWORD))(v1 + 32));
}

uint64_t sub_21FBB8280(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_21FBB82A4(uint64_t a1, void *a2, uint64_t a3, void *aBlock)
{
  void (*v6)(id, uint64_t, void (*)(uint64_t, uint64_t), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;

  v6 = *(void (**)(id, uint64_t, void (*)(uint64_t, uint64_t), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v9 = a2;
  swift_unknownObjectRetain();
  v6(v9, a3, sub_21FAD9020, v8);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

}

void *sub_21FBB8358(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21FBB8390(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_21FBB6F48(a1, a2, *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v2 + 16));
}

unint64_t sub_21FBB8398()
{
  unint64_t result;

  result = qword_25406B4F8;
  if (!qword_25406B4F8)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6F088, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage);
    atomic_store(result, (unint64_t *)&qword_25406B4F8);
  }
  return result;
}

uint64_t sub_21FBB83DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_21FBB840C@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;

  return sub_21FBB6EE4(v1, a1);
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FBB844C(void *a1)
{
  uint64_t v1;

  return sub_21FBB6FBC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(_QWORD))(v1 + 32));
}

uint64_t sub_21FBB8458()
{
  swift_release();
  return swift_deallocObject();
}

void *sub_21FBB847C()
{
  _QWORD *v0;

  return sub_21FBB6ABC(v0);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

BOOL sub_21FBB849C()
{
  double v0;

  sub_21FC5AA4C();
  return v0 < 86400.0;
}

uint64_t sub_21FBB84D8(uint64_t a1)
{
  uint64_t v2;

  sub_21FA2D1A0(0, &qword_25554B1B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_21FBB852C()
{
  uint64_t v0;

  return sub_21FBB5B8C(v0);
}

uint64_t sub_21FBB8534()
{
  uint64_t result;
  uint64_t v1;

  result = sub_21FBB4D04();
  if (!v1)
    return 0;
  return result;
}

void *sub_21FBB8790(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21FBB87C8()
{
  unint64_t result;

  result = qword_25554B1D0;
  if (!qword_25554B1D0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25554B1D0);
  }
  return result;
}

unint64_t sub_21FBB8800()
{
  unint64_t result;

  result = qword_25406B500;
  if (!qword_25406B500)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6F060, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage);
    atomic_store(result, (unint64_t *)&qword_25406B500);
  }
  return result;
}

uint64_t sub_21FBB8844()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_21FBB8868(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  sub_21FBB5A60(a1, a2);
}

uint64_t sub_21FBB8870(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  return sub_21FBB5AEC(a1, a2, a3, a4);
}

uint64_t sub_21FBB8878()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t initializeBufferWithCopyOfBuffer for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage()
{
  return &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage;
}

unint64_t sub_21FBB8A00()
{
  unint64_t result;

  result = qword_25406B4E0;
  if (!qword_25406B4E0)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6F174, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25406B4E0);
  }
  return result;
}

uint64_t sub_21FBB8A44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F73616572 && a2 == 0xE600000000000000;
  if (v2 || (sub_21FC5BDF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4474736575716572 && a2 == 0xEC00000073657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21FC5BDF0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21FBB8B44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_21FBB8D30(0, &qword_25406BB10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_21FBB8A00();
  sub_21FC5BEE0();
  if (!v1)
  {
    type metadata accessor for HKClinicalSharingReason(0);
    v11 = 0;
    sub_21FA2A08C(&qword_25406BAA0, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalSharingReason, (uint64_t)&protocol conformance descriptor for HKClinicalSharingReason);
    sub_21FC5BD0C();
    v8 = v12;
    sub_21FA2D1A0(0, &qword_25406BA10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v11 = 1;
    sub_21FBB8D8C(&qword_25406BA20, &qword_25406AAE0, MEMORY[0x24BDCE960], MEMORY[0x24BEE12D0]);
    sub_21FC5BD30();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void sub_21FBB8D30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_21FBB8A00();
    v7 = a3(a1, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_21FBB8D8C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = *a1;
  if (!result)
  {
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_21FA2D1A0(255, &qword_25406BA10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v11 = v10;
    v12 = sub_21FA2A08C(a2, v9, a3);
    result = MEMORY[0x2207D0F78](a4, v11, &v12);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FBB8E70 + 4 * byte_21FC6EF51[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FBB8EA4 + 4 * byte_21FC6EF4C[v4]))();
}

uint64_t sub_21FBB8EA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBB8EAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FBB8EB4);
  return result;
}

uint64_t sub_21FBB8EC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FBB8EC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FBB8ECC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBB8ED4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys()
{
  return &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys;
}

unint64_t sub_21FBB8EF4()
{
  unint64_t result;

  result = qword_25554B1D8;
  if (!qword_25554B1D8)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6F14C, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys);
    atomic_store(result, &qword_25554B1D8);
  }
  return result;
}

unint64_t sub_21FBB8F3C()
{
  unint64_t result;

  result = qword_25406B4F0;
  if (!qword_25406B4F0)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6F0BC, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25406B4F0);
  }
  return result;
}

unint64_t sub_21FBB8F84()
{
  unint64_t result;

  result = qword_25406B4E8;
  if (!qword_25406B4E8)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6F0E4, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25406B4E8);
  }
  return result;
}

uint64_t _s11CryptoErrorOwxx(uint64_t a1)
{
  return sub_21FAC323C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11CryptoErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21FAC3210(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11CryptoErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21FAC3210(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_21FAC323C(v6, v7, v8);
  return a1;
}

uint64_t _s11CryptoErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_21FAC323C(v4, v5, v6);
  return a1;
}

uint64_t _s11CryptoErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s11CryptoErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_21FBB9174(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_21FBB917C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s11CryptoErrorOMa()
{
  return &_s11CryptoErrorON;
}

void sub_21FBB9194(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_21FBB91CC()
{
  sub_21FC5BB74();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  return 0xD000000000000020;
}

void sub_21FBB9368()
{
  uint64_t v0;

  sub_21FBB9194(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_21FBB9374(uint64_t a1)
{
  return sub_21FBB9394(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_21FBB9394(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_21FBB93B0 + 4 * byte_21FC6F1CB[a3]))();
}

uint64_t sub_21FBB93B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_21FC5BDF0();
}

uint64_t sub_21FBB9444(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;

  v42 = a7;
  v40 = a5;
  v41 = a6;
  v38 = a3;
  v39 = a4;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - v13;
  v36 = (uint64_t)&v35 - v13;
  v15 = sub_21FC5AAF4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  sub_21FA7187C(a2, (uint64_t)v14);
  sub_21FA7187C(v38, (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = *(unsigned __int8 *)(v10 + 80);
  v21 = (v17 + v19 + v20) & ~v20;
  v22 = (v11 + v20 + v21) & ~v20;
  v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v19, v18, v15);
  sub_21FA6A41C(v36, v25 + v21);
  sub_21FA6A41C(v37, v25 + v22);
  v27 = v39;
  v26 = v40;
  *(_QWORD *)(v25 + v23) = v39;
  *(_QWORD *)(v25 + v24) = v26;
  v28 = (_QWORD *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
  v29 = v42;
  *v28 = v41;
  v28[1] = v29;
  sub_21FBBA8C8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v30 = v43;
  v31 = v27;
  v32 = v26;
  v44 = sub_21FC5B25C();
  sub_21FAEED80();
  v33 = sub_21FC5B280();
  swift_release();
  return v33;
}

uint64_t sub_21FBB968C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

uint64_t sub_21FBB96A4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[16];
  v1 = (void *)v0[17];
  sub_21FA2D1A0(0, &qword_25553ECD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v3 = sub_21FC5AAF4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5EE30;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v6 + v5, v2, v3);
  v7 = sub_21FC5B79C();
  v0[18] = v7;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_21FBB97E8;
  v8 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v9 = v0 + 10;
  v9[1] = 0x40000000;
  v9[2] = sub_21FBBAA20;
  v9[3] = &block_descriptor_7_0;
  v9[4] = v8;
  objc_msgSend(v1, sel_refreshAccountConnectionInformationForAccountsWithIdentifiers_completion_, v7, v9);
  return swift_continuation_await();
}

uint64_t sub_21FBB97E8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_21FBB9848()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  _BYTE *v6;

  v1 = *(_QWORD *)(v0 + 120);

  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    sub_21FACD244();
    swift_allocError();
    *v6 = 0;
    swift_willThrow();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  swift_bridgeObjectRetain();
  v5 = sub_21FC5BC7C();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_9;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x2207D057C](0, v1);
LABEL_6:
    v3 = v2;
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v3, sel_authorization);

    if (v4)
    {
      (*(void (**)(id))(v0 + 8))(v4);
      return;
    }
    goto LABEL_10;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v1 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_21FBB9978()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21FBB99B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint8_t *v43;
  uint8_t *v44;
  uint64_t v45;
  int v46;
  void (*v47)(char *, uint64_t, uint64_t);
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[6];

  v8 = sub_21FC5AAF4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v43 - v14;
  v50 = v16;
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v43 - v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  v49 = v19;
  v20 = qword_25406B7F8;
  swift_retain();
  if (v20 != -1)
    swift_once();
  v21 = sub_21FC5AFD4();
  __swift_project_value_buffer(v21, (uint64_t)qword_25406D830);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v51 = a3;
  v22(v18, a3, v8);
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B970();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v46 = v25;
    v26 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v52 = v45;
    v48 = a4;
    *(_DWORD *)v26 = 136315138;
    v43 = v26 + 4;
    v44 = v26;
    v22(v15, (uint64_t)v18, v8);
    v22(v12, (uint64_t)v15, v8);
    sub_21FC5BE08();
    v27 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_21FC5BAF0();
    swift_unknownObjectRelease();
    v28 = sub_21FC5B64C();
    v29 = v15;
    v31 = v30;
    v47 = v22;
    v32 = *(void (**)(char *, uint64_t))(v9 + 8);
    v32(v29, v8);
    aBlock[0] = sub_21FABDCF8(v28, v31, &v52);
    a4 = v48;
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    v32(v18, v8);
    v22 = v47;
    v33 = v44;
    _os_log_impl(&dword_21FA27000, v23, (os_log_type_t)v46, "HKClinicalAccountStore.refreshClinicalAccount - STARTING refresh for account: %s", v44, 0xCu);
    v34 = v45;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v34, -1, -1);
    MEMORY[0x2207D105C](v33, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);

    v29 = v15;
  }
  sub_21FA2D1A0(0, &qword_25553ECD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v35 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_21FC5EE30;
  v37 = v51;
  v22((char *)(v36 + v35), v51, v8);
  v38 = v22;
  v39 = (void *)sub_21FC5B79C();
  swift_bridgeObjectRelease();
  v38(v29, v37, v8);
  v40 = swift_allocObject();
  v41 = v49;
  *(_QWORD *)(v40 + 16) = sub_21FA5F648;
  *(_QWORD *)(v40 + 24) = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v40 + v35, v29, v8);
  aBlock[4] = sub_21FBBAB88;
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21FC2EFDC;
  aBlock[3] = &block_descriptor_17;
  v42 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a4, sel_refreshAccountConnectionInformationForAccountsWithIdentifiers_completion_, v39, v42);
  _Block_release(v42);

}

void sub_21FBB9DF8(unint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint8_t *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  uint8_t *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t i;
  id v50;
  void *v51;
  id v52;
  _QWORD v53[2];
  uint8_t *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;

  v57 = a4;
  v9 = sub_21FC5AAF4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v53 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v53 - v17;
  v58 = a3;
  if (!a2)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v33 = sub_21FC5AFD4();
    __swift_project_value_buffer(v33, (uint64_t)qword_25406D830);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v34(v18, a5, v9);
    v35 = sub_21FC5AFC8();
    v36 = sub_21FC5B970();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v56 = v37;
      v38 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v60 = v55;
      v54 = v38;
      *(_DWORD *)v38 = 136315138;
      v53[1] = v38 + 4;
      v34(v16, (uint64_t)v18, v9);
      v34(v13, (uint64_t)v16, v9);
      sub_21FC5BE08();
      v39 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_21FC5BAF0();
      swift_unknownObjectRelease();
      v40 = sub_21FC5B64C();
      v42 = v41;
      v43 = *(void (**)(char *, uint64_t))(v10 + 8);
      v43(v16, v9);
      v59 = sub_21FABDCF8(v40, v42, &v60);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();
      v43(v18, v9);
      v44 = v54;
      _os_log_impl(&dword_21FA27000, v35, (os_log_type_t)v56, "HKClinicalAccountStore.refreshClinicalAccount - FINISHED: Success requesting new accessToken for account: %s", v54, 0xCu);
      v45 = v55;
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v45, -1, -1);
      MEMORY[0x2207D105C](v44, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    }

    v47 = MEMORY[0x24BEE4AF8];
    if (!a1)
      goto LABEL_30;
    v59 = MEMORY[0x24BEE4AF8];
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v48 = sub_21FC5BC7C();
      if (v48)
        goto LABEL_16;
    }
    else
    {
      v48 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v48)
      {
LABEL_16:
        if (v48 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v48; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0)
            v50 = (id)MEMORY[0x2207D057C](i, a1);
          else
            v50 = *(id *)(a1 + 8 * i + 32);
          v51 = v50;
          v52 = objc_msgSend(v50, sel_authorization);

          if (v52)
          {
            MEMORY[0x2207D0180]();
            if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_21FC5B7CC();
            sub_21FC5B7E4();
            sub_21FC5B7C0();
          }
        }
        swift_bridgeObjectRelease();
        v47 = v59;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x24BEE4AF8];
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    v58(v47, 0);
    swift_bridgeObjectRelease();
    return;
  }
  v19 = a2;
  if (qword_25406B7F8 != -1)
    swift_once();
  v20 = sub_21FC5AFD4();
  __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
  v21 = a2;
  v22 = a2;
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B97C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v60 = v26;
    *(_DWORD *)v25 = 136315138;
    v59 = (uint64_t)a2;
    v27 = a2;
    v28 = a2;
    sub_21FA2CDB4();
    sub_21FC5BE08();
    v29 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_21FC5BAF0();
    swift_unknownObjectRelease();
    v30 = sub_21FC5B64C();
    v32 = v31;

    v59 = sub_21FABDCF8(v30, v32, &v60);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FA27000, v23, v24, "HKClinicalAccountStore.refreshClinicalAccount - ERROR: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v26, -1, -1);
    MEMORY[0x2207D105C](v25, -1, -1);
  }
  else
  {

  }
  v46 = a2;
  v58((uint64_t)a2, 1);

}

void sub_21FBBA410(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v35 = a7;
  v36 = a8;
  v34 = a3;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  swift_retain();
  v21 = (void *)sub_21FC5AAC4();
  sub_21FA7187C(a5, (uint64_t)v19);
  v22 = sub_21FC5AAAC();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = 0;
  if (v24(v19, 1, v22) != 1)
  {
    v25 = (void *)sub_21FC5AA64();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v22);
  }
  sub_21FA7187C(a6, (uint64_t)v17);
  if (v24(v17, 1, v22) == 1)
  {
    v26 = 0;
  }
  else
  {
    v26 = (void *)sub_21FC5AA64();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v22);
  }
  v28 = v35;
  v27 = v36;
  v29 = v34;
  if (a10)
    v30 = (void *)sub_21FC5B5E0();
  else
    v30 = 0;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_21FA5F648;
  *(_QWORD *)(v31 + 24) = v20;
  aBlock[4] = sub_21FBBAA00;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21FBB5FDC;
  aBlock[3] = &block_descriptor_15;
  v32 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v29, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v21, v25, v26, v28, v27, v30, v32);
  _Block_release(v32);

}

uint64_t sub_21FBBA67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;

  v1 = sub_21FC5AAF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (v9 + v7 + v8) & ~v7;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v11 = v0 + v8;
  v12 = sub_21FC5AAAC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  if (!v14(v0 + v10, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v10, v12);
  v15 = (v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21FBBA7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v5 = *(_QWORD *)(sub_21FC5AAF4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v7 + v10) & ~v10;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = (v12 + v10 + v11) & ~v10;
  v14 = (v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_21FBBA410(a1, a2, *(void **)(v2 + 16), v2 + v6, v2 + v11, v2 + v13, *(_QWORD *)(v2 + v14), *(_QWORD *)(v2 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v14 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v14 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_21FBBA8C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25406B9C8)
  {
    sub_21FA2CDB4();
    v0 = sub_21FC5B250();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25406B9C8);
  }
}

uint64_t sub_21FBBA92C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

void sub_21FBBA964(char a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  id v5;
  uint64_t v6;
  id v7;

  if ((a1 & 1) != 0)
  {
    a3(1, 0);
  }
  else
  {
    if (a2)
    {
      v5 = a2;
    }
    else
    {
      sub_21FA720B8();
      v5 = (id)swift_allocError();
      *(_QWORD *)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
      *(_BYTE *)(v6 + 16) = 2;
    }
    v7 = a2;
    a3((uint64_t)v5, 1);

  }
}

void sub_21FBBAA00(char a1, void *a2)
{
  uint64_t v2;

  sub_21FBBA964(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_21FBBAA20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_21FA2CDB4();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_21FBBAAB4();
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_21FC5B7A8();
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_21FBBAAB4()
{
  unint64_t result;

  result = qword_25406CB68;
  if (!qword_25406CB68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25406CB68);
  }
  return result;
}

uint64_t sub_21FBBAAF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FBBAB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_21FC5AAF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_21FBBAB88(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_21FC5AAF4() - 8) + 80);
  sub_21FBB9DF8(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

uint64_t ClinicalIngestionAnalyticsInteractionType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E776F6E6B6E75;
  else
    return 0xD000000000000018;
}

HealthRecordsDaemon::ClinicalIngestionAnalyticsInteractionType_optional __swiftcall ClinicalIngestionAnalyticsInteractionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HealthRecordsDaemon::ClinicalIngestionAnalyticsInteractionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_21FC5BCD0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_21FBBAC88(char *a1, char *a2)
{
  return sub_21FA2DD98(*a1, *a2);
}

uint64_t sub_21FBBAC94()
{
  sub_21FC5BE8C();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

uint64_t sub_21FBBAD18()
{
  sub_21FC5B67C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBBAD78()
{
  sub_21FC5BE8C();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  return sub_21FC5BEB0();
}

HealthRecordsDaemon::ClinicalIngestionAnalyticsInteractionType_optional sub_21FBBADF8(Swift::String *a1)
{
  return ClinicalIngestionAnalyticsInteractionType.init(rawValue:)(*a1);
}

void sub_21FBBAE04(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000018;
  if (*v1)
    v2 = 0x6E776F6E6B6E75;
  v3 = 0x800000021FC74B10;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

Swift::Void __swiftcall AnalyticsManager.postClinicalIngestionEvent(_:payload:)(HealthRecordsDaemon::ClinicalIngestionAnalyticsInteractionType _, Swift::OpaquePointer payload)
{
  void *v2;
  id v3;

  v2 = (void *)sub_21FC5B5E0();
  swift_bridgeObjectRelease();
  sub_21FAC7C7C();
  v3 = (id)sub_21FC5B55C();
  AnalyticsSendEvent();

}

unint64_t sub_21FBBAF08()
{
  unint64_t result;

  result = qword_25554B1E8;
  if (!qword_25554B1E8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for ClinicalIngestionAnalyticsInteractionType, &type metadata for ClinicalIngestionAnalyticsInteractionType);
    atomic_store(result, (unint64_t *)&qword_25554B1E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClinicalIngestionAnalyticsInteractionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FBBAF98 + 4 * byte_21FC6F295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FBBAFCC + 4 * byte_21FC6F290[v4]))();
}

uint64_t sub_21FBBAFCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBBAFD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FBBAFDCLL);
  return result;
}

uint64_t sub_21FBBAFE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FBBAFF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FBBAFF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBBAFFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalIngestionAnalyticsInteractionType()
{
  return &type metadata for ClinicalIngestionAnalyticsInteractionType;
}

ValueMetadata *type metadata accessor for AnalyticsManager()
{
  return &type metadata for AnalyticsManager;
}

Swift::String __swiftcall Date.rfc3339String()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v0 = sub_21FBBB09C();
  v1 = (void *)sub_21FC5AA64();
  v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  v3 = sub_21FC5B604();
  v5 = v4;

  v6 = v3;
  v7 = v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

id sub_21FBBB09C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  sub_21FBBB1C0();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v4 = (void *)sub_21FC5B5E0();
  objc_msgSend(v3, sel_setDateFormat_, v4);

  sub_21FC5AC2C();
  v5 = sub_21FC5AC5C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
  {
    v7 = (void *)sub_21FC5AC38();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
  }
  objc_msgSend(v3, sel_setTimeZone_, v7);

  return v3;
}

void sub_21FBBB1C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25553F0B0)
  {
    sub_21FC5AC5C();
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25553F0B0);
  }
}

id sub_21FBBB214()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_21FBBB27C()
{
  uint64_t v1;

  swift_getMetatypeMetadata();
  v1 = sub_21FC5B64C();
  swift_bridgeObjectRetain();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21FBBB318(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(void);
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  ValueMetadata *v48;

  sub_21FBBB890();
  v44 = v4;
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBBE7B4(0, &qword_25554B210, v6, (void (*)(void))sub_21FBBBA10);
  v45 = v7;
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v37 - v8;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489A8]), sel_init);
  sub_21FA5BE58(0, (unint64_t *)&qword_25406CB58);
  v10 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = MEMORY[0x24BEE4B08];
  v13 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v10, v11, 0);

  *(_QWORD *)(v12 + 16) = v13;
  v14 = sub_21FBBB214();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE48A90]), sel_initWithHealthStore_, v14);

  v48 = &type metadata for WellKnownJWKSHandler;
  sub_21FBBBA2C();
  swift_retain();
  v41 = v15;
  v38 = sub_21FC5B64C();
  v17 = v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v9;
  v18[3] = a1;
  v18[4] = a2;
  v19 = MEMORY[0x24BDB9E38];
  sub_21FBBB944(0, &qword_25554B228, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v39 = v9;
  v20 = a1;
  v48 = (ValueMetadata *)sub_21FC5B25C();
  sub_21FBBDD08(&qword_25554B230, &qword_25554B228, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v19, MEMORY[0x24BDB9E58]);
  v21 = sub_21FC5B280();
  swift_release();
  v48 = (ValueMetadata *)v21;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v12;
  v22[3] = v15;
  v22[4] = v38;
  v22[5] = v17;
  v40 = v17;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_21FBBDD60;
  *(_QWORD *)(v23 + 24) = v22;
  swift_retain();
  v41 = v41;
  swift_bridgeObjectRetain();
  sub_21FC5B184();
  v24 = MEMORY[0x24BDB9AE0];
  sub_21FBBB944(0, &qword_25554B1F8, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FA5BE58(0, &qword_25554B200);
  sub_21FBBDD08(&qword_25554B208, &qword_25554B1F8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v24, MEMORY[0x24BDB9AF8]);
  v25 = v42;
  sub_21FC5B34C();
  swift_release();
  swift_release();
  v26 = swift_allocObject();
  v27 = v39;
  *(_QWORD *)(v26 + 16) = v39;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_21FBBDD64;
  *(_QWORD *)(v28 + 24) = v26;
  v29 = v27;
  sub_21FC5B184();
  sub_21FA5BE58(0, (unint64_t *)&unk_25554BB00);
  sub_21FBBB944(0, &qword_25554B108, (unint64_t *)&unk_25554BB00, 0x24BE48A60, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v24);
  sub_21FBBBA10();
  sub_21FBBB9BC(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v24, MEMORY[0x24BDB9AF8]);
  v30 = v43;
  v31 = v44;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v31);
  sub_21FBBDDB0(&qword_25554B238, &qword_25554B210, (void (*)(uint64_t))sub_21FBBB890, (void (*)(void))sub_21FBBBA10);
  v32 = v45;
  v33 = v30;
  v34 = sub_21FC5B280();

  swift_bridgeObjectRelease();
  v35 = v41;

  swift_release_n();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v32);
  return v34;
}

void sub_21FBBB890()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25554B1F0)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_21FBBB944(255, &qword_25554B1F8, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FBBDD08(&qword_25554B208, &qword_25554B1F8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_21FC5B100();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25554B1F0);
  }
}

void sub_21FBBB944(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v8 = sub_21FA5BE58(255, a3);
    v9 = sub_21FA2CDB4();
    v10 = a5(a1, v8, v9, MEMORY[0x24BEE3F20]);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_21FBBB9BC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_21FBBB944(255, a2, (unint64_t *)&unk_25554BB00, 0x24BE48A60, a3);
    result = MEMORY[0x2207D0F78](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FBBBA10()
{
  return sub_21FA2A08C(&qword_25554B218, (uint64_t (*)(uint64_t))sub_21FBBB890, MEMORY[0x24BDB98F0]);
}

unint64_t sub_21FBBBA2C()
{
  unint64_t result;

  result = qword_25554B220;
  if (!qword_25554B220)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25554B220);
  }
  return result;
}

uint64_t sub_21FBBBA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;

  sub_21FBBB890();
  v43 = v4;
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBBE7B4(0, &qword_25554B210, v6, (void (*)(void))sub_21FBBBA10);
  v44 = v7;
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v36 - v8;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489A8]), sel_init);
  sub_21FA5BE58(0, (unint64_t *)&qword_25406CB58);
  v10 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = MEMORY[0x24BEE4B08];
  v13 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v10, v11, 0);

  *(_QWORD *)(v12 + 16) = v13;
  v14 = sub_21FBBB214();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE48A90]), sel_initWithHealthStore_, v14);

  v47 = &type metadata for WellKnownJWKSHandler;
  sub_21FBBBA2C();
  swift_retain();
  v40 = v15;
  v37 = sub_21FC5B64C();
  v17 = v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v9;
  v18[3] = a1;
  v18[4] = a2;
  v19 = MEMORY[0x24BDB9E38];
  sub_21FBBB944(0, &qword_25554B228, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v38 = v9;
  swift_bridgeObjectRetain();
  v47 = (ValueMetadata *)sub_21FC5B25C();
  sub_21FBBDD08(&qword_25554B230, &qword_25554B228, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v19, MEMORY[0x24BDB9E58]);
  v20 = sub_21FC5B280();
  swift_release();
  v47 = (ValueMetadata *)v20;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v12;
  v21[3] = v15;
  v21[4] = v37;
  v21[5] = v17;
  v39 = v17;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_21FBBDD60;
  *(_QWORD *)(v22 + 24) = v21;
  swift_retain();
  v40 = v40;
  swift_bridgeObjectRetain();
  sub_21FC5B184();
  v23 = MEMORY[0x24BDB9AE0];
  sub_21FBBB944(0, &qword_25554B1F8, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FA5BE58(0, &qword_25554B200);
  sub_21FBBDD08(&qword_25554B208, &qword_25554B1F8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v23, MEMORY[0x24BDB9AF8]);
  v24 = v41;
  sub_21FC5B34C();
  swift_release();
  swift_release();
  v25 = swift_allocObject();
  v26 = v38;
  *(_QWORD *)(v25 + 16) = v38;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_21FBBDE28;
  *(_QWORD *)(v27 + 24) = v25;
  v28 = v26;
  sub_21FC5B184();
  sub_21FA5BE58(0, (unint64_t *)&unk_25554BB00);
  sub_21FBBB944(0, &qword_25554B108, (unint64_t *)&unk_25554BB00, 0x24BE48A60, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v23);
  sub_21FBBBA10();
  sub_21FBBB9BC(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v23, MEMORY[0x24BDB9AF8]);
  v29 = v42;
  v30 = v43;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v30);
  sub_21FBBDDB0(&qword_25554B238, &qword_25554B210, (void (*)(uint64_t))sub_21FBBB890, (void (*)(void))sub_21FBBBA10);
  v31 = v44;
  v32 = v29;
  v33 = sub_21FC5B280();

  swift_bridgeObjectRelease();
  v34 = v40;

  swift_release_n();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v31);
  return v33;
}

uint64_t sub_21FBBBFE0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t (*v5)(void);
  id v6;
  id v7;
  uint64_t v8;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = MEMORY[0x24BDB9E38];
  sub_21FBBB944(0, &qword_25554BB20, (unint64_t *)&unk_25554BB00, 0x24BE48A60, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v6 = a2;
  v7 = a1;
  sub_21FC5B25C();
  sub_21FBBB9BC(&qword_25554B240, &qword_25554BB20, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v5, MEMORY[0x24BDB9E58]);
  v8 = sub_21FC5B280();
  swift_release();
  return v8;
}

uint64_t sub_21FBBC0DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v15[6];

  v4 = v3;
  sub_21FC5AFBC();
  swift_allocObject();
  v8 = sub_21FC5AFB0();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE48A90]), sel_initWithHealthStore_, v9);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_BYTE *)(v11 + 40) = 1;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = a1;
  v15[4] = sub_21FBBDE54;
  v15[5] = v11;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_21FA89518;
  v15[3] = &block_descriptor_16;
  v12 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = a1;
  swift_release();
  objc_msgSend(v10, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v13, 11, v12);

  _Block_release(v12);
  return swift_release();
}

uint64_t sub_21FBBC250()
{
  sub_21FC5AFBC();
  swift_allocObject();
  sub_21FC5AFB0();
  sub_21FC5AFA4();
  return swift_release();
}

uint64_t sub_21FBBC29C(void *a1, uint64_t a2, void *a3)
{
  _QWORD *v6;
  uint64_t (*v7)(void);
  id v8;
  id v9;
  uint64_t v10;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  v7 = MEMORY[0x24BDB9E38];
  sub_21FBBB944(0, &qword_25554B228, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v8 = a3;
  v9 = a1;
  sub_21FC5B25C();
  sub_21FBBDD08(&qword_25554B230, &qword_25554B228, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x24BDB9E58]);
  v10 = sub_21FC5B280();
  swift_release();
  return v10;
}

uint64_t sub_21FBBC3A0(uint64_t a1, uint64_t a2)
{
  id v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  id v7;
  uint64_t (*v8)(void);
  uint64_t v9;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489A8]), sel_init);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v6 = MEMORY[0x24BDB9E38];
  sub_21FBBB944(0, &qword_25554BB20, (unint64_t *)&unk_25554BB00, 0x24BE48A60, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v7 = v4;
  swift_bridgeObjectRetain();
  sub_21FC5B25C();
  sub_21FBBB9BC(&qword_25554B240, &qword_25554BB20, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v6, MEMORY[0x24BDB9E58]);
  sub_21FC5B280();
  swift_release();
  v8 = MEMORY[0x24BDB9AE0];
  sub_21FBBB944(0, &qword_25554B108, (unint64_t *)&unk_25554BB00, 0x24BE48A60, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FBBB9BC(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v8, MEMORY[0x24BDB9AF8]);
  v9 = sub_21FC5B280();
  swift_release();

  return v9;
}

uint64_t sub_21FBBC544(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t aBlock;
  unint64_t v59;
  void (*v60)(uint64_t, void *, void *);
  void *v61;
  uint64_t (*v62)();
  uint64_t v63;
  uint64_t v64;

  v2 = v1;
  v4 = *v1;
  sub_21FAA43D4(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v55 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v55 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v55 - v15;
  sub_21FC5AFBC();
  swift_allocObject();
  v17 = sub_21FC5AFB0();
  sub_21FC5AF8C();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v20 = sub_21FC5AFD4();
    __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
    swift_retain_n();
    v21 = a1;
    v22 = sub_21FC5AFC8();
    v23 = sub_21FC5B994();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      v56 = v23;
      v57 = v17;
      v24 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v64 = v55;
      *(_DWORD *)v24 = 136315394;
      aBlock = v4;
      swift_getMetatypeMetadata();
      aBlock = sub_21FC5B64C();
      v59 = v25;
      swift_bridgeObjectRetain();
      sub_21FC5B6AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21FC5B6AC();
      swift_bridgeObjectRelease();
      aBlock = sub_21FABDCF8(aBlock, v59, &v64);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v26 = objc_msgSend(v21, sel_originIdentifier);
      v27 = objc_msgSend(v26, sel_signedClinicalDataRecordIdentifier);

      if (v27)
      {
        sub_21FC5AADC();

        v28 = sub_21FC5AAF4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 0, 1, v28);
      }
      else
      {
        v28 = sub_21FC5AAF4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 1, 1, v28);
      }
      sub_21FBBE9C0((uint64_t)v14, (uint64_t)v16);
      sub_21FC5AAF4();
      v39 = *(_QWORD *)(v28 - 8);
      v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v16, 1, v28);
      v17 = v57;
      if (v40 == 1)
      {
        v41 = 0x7D6C696E7BLL;
        sub_21FBBEA04((uint64_t)v16);
        v42 = 0xE500000000000000;
      }
      else
      {
        v41 = sub_21FC5AAB8();
        v42 = v43;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v28);
      }
      aBlock = sub_21FABDCF8(v41, v42, &v64);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v22, (os_log_type_t)v56, "%s will update Wallet pass for record with sync identifier %s by re-adding it", (uint8_t *)v24, 0x16u);
      v44 = v55;
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v44, -1, -1);
      MEMORY[0x2207D105C](v24, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE48A90]), sel_initWithHealthStore_, v45);
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 24) = 0;
    *(_QWORD *)(v47 + 32) = 0;
    *(_QWORD *)(v47 + 16) = v2;
    *(_BYTE *)(v47 + 40) = 0;
    *(_QWORD *)(v47 + 48) = v17;
    *(_QWORD *)(v47 + 56) = v21;
    v62 = sub_21FBBDE54;
    v63 = v47;
    aBlock = MEMORY[0x24BDAC760];
    v59 = 1107296256;
    v60 = sub_21FA89518;
    v61 = &block_descriptor_68;
    v48 = _Block_copy(&aBlock);
    swift_retain();
    v49 = v21;
    swift_retain();
    swift_release();
    objc_msgSend(v46, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v49, 11, v48);

    _Block_release(v48);
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v29 = sub_21FC5AFD4();
    __swift_project_value_buffer(v29, (uint64_t)qword_25406D830);
    swift_retain_n();
    v30 = a1;
    v31 = sub_21FC5AFC8();
    v32 = sub_21FC5B970();
    if (!os_log_type_enabled(v31, (os_log_type_t)v32))
    {

      swift_release_n();
      return swift_release();
    }
    v56 = v32;
    v57 = v17;
    v33 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v64 = v55;
    *(_DWORD *)v33 = 136315394;
    aBlock = v4;
    swift_getMetatypeMetadata();
    aBlock = sub_21FC5B64C();
    v59 = v34;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    aBlock = sub_21FABDCF8(aBlock, v59, &v64);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    v35 = objc_msgSend(v30, sel_originIdentifier);
    v36 = objc_msgSend(v35, sel_signedClinicalDataRecordIdentifier);

    if (v36)
    {
      sub_21FC5AADC();

      v37 = sub_21FC5AAF4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v8, 0, 1, v37);
    }
    else
    {
      v37 = sub_21FC5AAF4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v8, 1, 1, v37);
    }
    sub_21FBBE9C0((uint64_t)v8, (uint64_t)v11);
    sub_21FC5AAF4();
    v50 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v11, 1, v37) == 1)
    {
      v51 = 0x7D6C696E7BLL;
      sub_21FBBEA04((uint64_t)v11);
      v52 = 0xE500000000000000;
    }
    else
    {
      v51 = sub_21FC5AAB8();
      v52 = v53;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v37);
    }
    aBlock = sub_21FABDCF8(v51, v52, &v64);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v31, (os_log_type_t)v56, "%s no Wallet pass exists for record with sync identifier %s", (uint8_t *)v33, 0x16u);
    v54 = v55;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v54, -1, -1);
    MEMORY[0x2207D105C](v33, -1, -1);

  }
  return swift_release();
}

void sub_21FBBCDE0(void *a1, void *a2, uint64_t a3, void (*a4)(_QWORD, void *), uint64_t a5, char a6, uint64_t a7, void *a8)
{
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  sub_21FAA43D4(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  if (a1)
  {
    v17 = a1;
    if ((a6 & 1) != 0)
      sub_21FC5AF80();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a3;
    v18[3] = a8;
    v18[4] = a4;
    v18[5] = a5;
    swift_retain();
    v19 = a8;
    sub_21FA97D28((uint64_t)a4);
    sub_21FC5AF98();

    swift_release();
    return;
  }
  if (qword_25406B7F8 != -1)
    swift_once();
  v20 = sub_21FC5AFD4();
  __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
  swift_retain();
  v21 = a2;
  swift_retain();
  v22 = a2;
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B97C();
  if (!os_log_type_enabled(v23, v24))
  {
    swift_release_n();

    if (!a4)
      return;
LABEL_14:
    a4(0, a2);
    return;
  }
  v25 = swift_slowAlloc();
  v26 = swift_slowAlloc();
  v32 = v26;
  *(_DWORD *)v25 = 136315394;
  v27 = sub_21FBBB27C();
  sub_21FABDCF8(v27, v28, &v32);
  sub_21FC5BAC0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 12) = 2080;
  if (a2)
  {
    swift_getErrorValue();
    v29 = sub_21FC5BE44();
    v31 = v30;
  }
  else
  {
    v29 = 0x7D6C696E7BLL;
    v31 = 0xE500000000000000;
  }
  sub_21FABDCF8(v29, v31, &v32);
  sub_21FC5BAC0();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_21FA27000, v23, v24, "%s failed to retrieve SCD group with error: %s", (uint8_t *)v25, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2207D105C](v26, -1, -1);
  MEMORY[0x2207D105C](v25, -1, -1);

  if (a4)
    goto LABEL_14;
}

void sub_21FBBD50C(void *a1, uint64_t a2, void *a3, void (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  void (*v45)(uint64_t, _QWORD);
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(_QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a5;
  sub_21FAA43D4(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v58 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v58 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v58 - v18;
  if (a1)
  {
    v20 = a1;
    if (qword_25406B7F8 != -1)
      swift_once();
    v21 = sub_21FC5AFD4();
    __swift_project_value_buffer(v21, (uint64_t)qword_25406D830);
    swift_retain();
    v22 = a3;
    v23 = a1;
    swift_retain();
    v24 = v22;
    v25 = a1;
    v26 = sub_21FC5AFC8();
    v27 = sub_21FC5B97C();
    if (os_log_type_enabled(v26, v27))
    {
      v60 = a4;
      v28 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v63 = v59;
      *(_DWORD *)v28 = 136315650;
      v29 = sub_21FBBB27C();
      v62 = sub_21FABDCF8(v29, v30, &v63);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      v31 = objc_msgSend(v24, sel_originIdentifier);
      v32 = objc_msgSend(v31, sel_signedClinicalDataRecordIdentifier);

      if (v32)
      {
        sub_21FC5AADC();

        v33 = sub_21FC5AAF4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 0, 1, v33);
      }
      else
      {
        v33 = sub_21FC5AAF4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
      }
      sub_21FBBE9C0((uint64_t)v17, (uint64_t)v19);
      sub_21FC5AAF4();
      v46 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v19, 1, v33) == 1)
      {
        v47 = 0x7D6C696E7BLL;
        sub_21FBBEA04((uint64_t)v19);
        v48 = 0xE500000000000000;
      }
      else
      {
        v47 = sub_21FC5AAB8();
        v48 = v49;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v33);
      }
      v62 = sub_21FABDCF8(v47, v48, &v63);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2080;
      swift_getErrorValue();
      v50 = sub_21FC5BE44();
      v62 = sub_21FABDCF8(v50, v51, &v63);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v26, v27, "%s failed to add Wallet pass for record with sync identifier %s: %s", (uint8_t *)v28, 0x20u);
      v52 = v59;
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v52, -1, -1);
      MEMORY[0x2207D105C](v28, -1, -1);

      a4 = v60;
      if (!v60)
        goto LABEL_22;
    }
    else
    {

      swift_release_n();
      if (!a4)
        goto LABEL_22;
    }
    v53 = a1;
    a4(0, a1);

LABEL_22:
    return;
  }
  v60 = a4;
  if (qword_25406B7F8 != -1)
    swift_once();
  v34 = sub_21FC5AFD4();
  __swift_project_value_buffer(v34, (uint64_t)qword_25406D830);
  swift_retain_n();
  v35 = a3;
  v36 = sub_21FC5AFC8();
  v37 = sub_21FC5B994();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v63 = v39;
    *(_DWORD *)v38 = 136315394;
    v40 = sub_21FBBB27C();
    v62 = sub_21FABDCF8(v40, v41, &v63);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v42 = objc_msgSend(v35, sel_originIdentifier);
    v43 = objc_msgSend(v42, sel_signedClinicalDataRecordIdentifier);

    if (v43)
    {
      sub_21FC5AADC();

      v44 = sub_21FC5AAF4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v11, 0, 1, v44);
    }
    else
    {
      v44 = sub_21FC5AAF4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v11, 1, 1, v44);
    }
    sub_21FBBE9C0((uint64_t)v11, (uint64_t)v14);
    sub_21FC5AAF4();
    v54 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v14, 1, v44) == 1)
    {
      v55 = 0x7D6C696E7BLL;
      sub_21FBBEA04((uint64_t)v14);
      v56 = 0xE500000000000000;
    }
    else
    {
      v55 = sub_21FC5AAB8();
      v56 = v57;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v44);
    }
    v62 = sub_21FABDCF8(v55, v56, &v63);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v36, v37, "%s did add Wallet pass for record with sync identifier %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v39, -1, -1);
    MEMORY[0x2207D105C](v38, -1, -1);

    v45 = v60;
    if (v60)
      goto LABEL_28;
  }
  else
  {

    swift_release_n();
    v45 = v60;
    if (v60)
LABEL_28:
      v45(1, 0);
  }
}

uint64_t SignedClinicalDataManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SignedClinicalDataManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_21FBBDCD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21FBBDCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FC1CD00(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_21FBBDD08(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_21FBBB944(255, a2, &qword_25554B200, 0x24BE489A0, a3);
    result = MEMORY[0x2207D0F78](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FBBDD64(void *a1)
{
  uint64_t v1;

  return sub_21FBBBFE0(a1, *(void **)(v1 + 16));
}

uint64_t sub_21FBBDD8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FBBDDB0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_21FBBE7B4(255, a2, a3, a4);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB98F0], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_21FBBDDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FC1CF28(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_21FBBDE04()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21FBBDE28(void *a1)
{
  uint64_t v1;

  return sub_21FBBBFE0(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_21FBBDE70(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  char *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t (*v38)(void);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  ValueMetadata *v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;

  sub_21FBBE584(0);
  v5 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  v59 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBBE77C(0);
  v61 = v7;
  v63 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBBE7B4(0, &qword_25554B3A8, v9, (void (*)(void))sub_21FBBE88C);
  v62 = v10;
  v64 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v48 - v11;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489A8]), sel_init);
  sub_21FA5BE58(0, (unint64_t *)&qword_25406CB58);
  v13 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 24) = MEMORY[0x24BEE4B08];
  v16 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v13, v14, 0);

  *(_QWORD *)(v15 + 16) = v16;
  v17 = sub_21FBBB214();
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE48A90]), sel_initWithHealthStore_, v17);
  v51 = v18;

  v66 = &type metadata for WellKnownJWKSHandler;
  sub_21FBBBA2C();
  swift_retain();
  v52 = v18;
  v50 = sub_21FC5B64C();
  v65 = v19;
  v20 = sub_21FBBB214();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489E0]), sel_initWithHealthStore_, v20);

  v66 = (ValueMetadata *)v15;
  v67 = a1;
  v68 = a2;
  v69 = v21;
  v70 = 0;
  swift_retain();
  v22 = a1;
  v23 = a2;
  v55 = v22;
  v54 = v23;
  v53 = v21;
  v66 = (ValueMetadata *)sub_21FC221D8(0);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v12;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_21FBBE8A8;
  *(_QWORD *)(v25 + 24) = v24;
  v49 = v12;
  sub_21FC5B184();
  sub_21FBBE678();
  sub_21FA5BE58(0, &qword_25554B200);
  v26 = MEMORY[0x24BDB9AE0];
  sub_21FBBB944(0, &qword_25554B1F8, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FBBE760();
  sub_21FBBDD08(&qword_25554B208, &qword_25554B1F8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v26, MEMORY[0x24BDB9AF8]);
  v27 = v56;
  sub_21FC5B34C();
  swift_release();
  swift_release();
  v28 = (_QWORD *)swift_allocObject();
  v29 = v51;
  v28[2] = v15;
  v28[3] = v29;
  v30 = v65;
  v28[4] = v50;
  v28[5] = v30;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_21FBBDD60;
  *(_QWORD *)(v31 + 24) = v28;
  swift_retain();
  v52 = v52;
  swift_bridgeObjectRetain();
  sub_21FC5B184();
  sub_21FBBE798();
  v32 = v57;
  v33 = v58;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v33);
  v34 = swift_allocObject();
  v35 = v49;
  *(_QWORD *)(v34 + 16) = v49;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_21FBBE958;
  *(_QWORD *)(v36 + 24) = v34;
  v37 = v35;
  sub_21FC5B184();
  sub_21FA5BE58(0, (unint64_t *)&unk_25554BB00);
  v38 = MEMORY[0x24BDB9AE0];
  sub_21FBBB944(0, &qword_25554B108, (unint64_t *)&unk_25554BB00, 0x24BE48A60, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FBBE88C();
  sub_21FBBB9BC(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v38, MEMORY[0x24BDB9AF8]);
  v39 = v60;
  v40 = v61;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v40);
  sub_21FBBDDB0(&qword_25554B3B8, &qword_25554B3A8, sub_21FBBE77C, (void (*)(void))sub_21FBBE88C);
  v41 = v62;
  v42 = sub_21FC5B280();

  swift_bridgeObjectRelease();
  v43 = v52;

  v44 = v53;
  v45 = v54;

  v46 = v55;
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v41);
  return v42;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21FBBE4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FC1D050(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t type metadata accessor for SignedClinicalDataManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for SignedClinicalDataManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SignedClinicalDataManager.signedClinicalDataParser(for:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.signedClinicalDataReverificationPublisher(records:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.addCardToWallet(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.didUpdateSignedClinicalDataRecord(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.willDeleteSignedClinicalDataRecord(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.signedClinicalDataHandler(for:context:analyticsAccumulator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.originalSignedClinicalDataProcessor(for:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

void sub_21FBBE584(uint64_t a1)
{
  sub_21FBBE5A0(a1, &qword_25554B370, (void (*)(uint64_t))sub_21FBBE678, (void (*)(void))sub_21FBBE760);
}

void sub_21FBBE5A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t (*v7)(void);
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = MEMORY[0x24BDB9AE0];
    sub_21FBBB944(255, &qword_25554B1F8, &qword_25554B200, 0x24BE489A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a3(255);
    sub_21FBBDD08(&qword_25554B208, &qword_25554B1F8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x24BDB9AF8]);
    a4();
    v8 = sub_21FC5B100();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_21FBBE678()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554B378)
  {
    sub_21FBBE6E4();
    sub_21FA2CDB4();
    v0 = sub_21FC5B190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554B378);
  }
}

void sub_21FBBE6E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25554B380)
  {
    sub_21FA5BE58(255, &qword_25554B388);
    type metadata accessor for HKSignedClinicalDataProcessingOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25554B380);
  }
}

uint64_t sub_21FBBE760()
{
  return sub_21FA2A08C(&qword_25554B390, (uint64_t (*)(uint64_t))sub_21FBBE678, MEMORY[0x24BDB9AF8]);
}

void sub_21FBBE77C(uint64_t a1)
{
  sub_21FBBE5A0(a1, &qword_25554B398, sub_21FBBE584, (void (*)(void))sub_21FBBE798);
}

uint64_t sub_21FBBE798()
{
  return sub_21FA2A08C(&qword_25554B3A0, (uint64_t (*)(uint64_t))sub_21FBBE584, MEMORY[0x24BDB98F0]);
}

void sub_21FBBE7B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t (*v7)(void);
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = MEMORY[0x24BDB9AE0];
    sub_21FBBB944(255, &qword_25554B108, (unint64_t *)&unk_25554BB00, 0x24BE48A60, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a3(255);
    sub_21FBBB9BC(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x24BDB9AF8]);
    a4();
    v8 = sub_21FC5B100();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_21FBBE88C()
{
  return sub_21FA2A08C(&qword_25554B3B0, (uint64_t (*)(uint64_t))sub_21FBBE77C, MEMORY[0x24BDB98F0]);
}

uint64_t sub_21FBBE8A8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21FBBC29C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_21FBBE8B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t objectdestroy_2Tm_3()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FBBE918(void *a1)
{
  return WellKnownJWKSHandler.extractAndLoadJWKS(from:)(a1);
}

uint64_t sub_21FBBE958(void *a1)
{
  uint64_t v1;

  return sub_21FBBBFE0(a1, *(void **)(v1 + 16));
}

uint64_t sub_21FBBE980()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21FBBE9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FC1D178(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_21FBBE9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21FC1CE2C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_21FBBE9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FAA43D4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBBEA04(uint64_t a1)
{
  uint64_t v2;

  sub_21FAA43D4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_31Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_21FBBEA88(void *a1, void *a2)
{
  uint64_t v2;

  sub_21FBBCDE0(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD, void *))(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_21FBBEA9C()
{
  uint64_t v0;

  swift_release();

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_21FBBEAD8(void *a1)
{
  uint64_t v1;

  sub_21FBBD50C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_21FBBEB20(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  id v11;
  id v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *oslog;
  uint64_t v20;

  if (qword_25406B7F8 != -1)
    swift_once();
  v10 = sub_21FC5AFD4();
  __swift_project_value_buffer(v10, (uint64_t)qword_25406D830);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = a1;
  oslog = sub_21FC5AFC8();
  v13 = sub_21FC5B97C();
  if (os_log_type_enabled(oslog, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v20 = v15;
    *(_DWORD *)v14 = 136315906;
    swift_bridgeObjectRetain();
    sub_21FABDCF8(a2, a3, &v20);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_21FABDCF8(a4, a5, &v20);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2048;
    sub_21FC5BAC0();
    *(_WORD *)(v14 + 32) = 2080;
    v16 = a1;
    sub_21FA2CDB4();
    v17 = sub_21FC5B64C();
    sub_21FABDCF8(v17, v18, &v20);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FA27000, oslog, v13, "Sending message to remote object proxy failed at %s:%s:%ld: %s", (uint8_t *)v14, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v15, -1, -1);
    MEMORY[0x2207D105C](v14, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

void sub_21FBBEE00(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  id v16;
  id v17;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = MEMORY[0x24BEE4AF8];
  sub_21FBBEF70();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = v13;
  v14[5] = sub_21FA5F86C;
  v14[6] = v12;
  swift_retain();
  v15 = a4;
  v16 = a6;
  swift_retain();
  v17 = (id)sub_21FC5BA18();
  objc_msgSend(a3, sel_executeQuery_, v17);
  swift_release();

}

uint64_t sub_21FBBEF28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FBBEF4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21FBBEF70()
{
  unint64_t result;

  result = qword_25554B3C0;
  if (!qword_25554B3C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25554B3C0);
  }
  return result;
}

void sub_21FBBEFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id *v16;
  char **v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  id v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  char *v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  float v29;
  id v30;
  id v31;
  uint64_t v32;
  _QWORD v33[4];

  v33[0] = a6;
  v10 = sub_21FC5BA0C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (id *)((char *)v33 - v15);
  v17 = (char **)(a5 + 16);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18((char *)v33 - v15, a2, v10);
  v19 = (*(uint64_t (**)(id *, uint64_t))(v11 + 88))(v16, v10);
  if (v19 == *MEMORY[0x24BDD2640])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v16, v10);
    v20 = *v16;
    v21 = objc_msgSend(*v16, sel_quantityForLead_, a3);
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, sel_doubleValueForUnit_, a4);
      v24 = v23;

      swift_beginAccess();
      v25 = *v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v17 = v25;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v25 = sub_21FA7E890(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
        *v17 = v25;
      }
      v28 = *((_QWORD *)v25 + 2);
      v27 = *((_QWORD *)v25 + 3);
      if (v28 >= v27 >> 1)
      {
        v25 = sub_21FA7E890((char *)(v27 > 1), v28 + 1, 1, v25);
        *v17 = v25;
      }
      v29 = v24;
      *((_QWORD *)v25 + 2) = v28 + 1;
      *(float *)&v25[4 * v28 + 32] = v29;
      swift_endAccess();
    }

  }
  else if (v19 == *MEMORY[0x24BDD2650])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v16, v10);
    v30 = *v16;
    v31 = *v16;
    ((void (*)(id, uint64_t))v33[0])(v30, 1);

  }
  else if (v19 == *MEMORY[0x24BDD2648])
  {
    swift_beginAccess();
    v32 = swift_bridgeObjectRetain();
    ((void (*)(uint64_t, _QWORD))v33[0])(v32, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v18(v14, a2, v10);
    v33[1] = 0;
    v33[2] = 0xE000000000000000;
    sub_21FC5BB74();
    sub_21FC5B6AC();
    sub_21FC5BC4C();
    sub_21FC5BC70();
    __break(1u);
  }
}

uint64_t sub_21FBBF2D0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21FBBF304(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_21FBBEFAC(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

char *sub_21FBBF314(char *a1, char *a2, int *a3)
{
  int v3;
  uint64_t v4;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    v8 = a3[6];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_21FC5AAAC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_retain();
    v13(v9, v10, v11);
    v14 = a3[7];
    v15 = &v7[v14];
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v13(&v7[a3[8]], &a2[a3[8]], v11);
    v18 = a3[10];
    v7[a3[9]] = a2[a3[9]];
    v7[v18] = a2[v18];
    v19 = a3[11];
    v20 = &v7[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_21FBBF490(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  swift_release();
  v4 = a1 + a2[6];
  v5 = sub_21FC5AAAC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  v7(a1 + a2[8], v5);
  return swift_bridgeObjectRelease();
}

char *sub_21FBBF538(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_21FC5AAAC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_retain();
  v12(v8, v9, v10);
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v12(&a1[a3[8]], &a2[a3[8]], v10);
  v17 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v17] = a2[v17];
  v18 = a3[11];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_21FBBF684(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_21FC5AAAC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v11(&a1[a3[8]], &a2[a3[8]], v9);
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  v19 = a3[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_21FBBF83C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_21FC5AAAC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v12(&a1[a3[8]], &a2[a3[8]], v10);
  v17 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v17] = a2[v17];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

char *sub_21FBBF96C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_21FC5AAAC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v11(&a1[a3[8]], &a2[a3[8]], v9);
  v19 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v19] = a2[v19];
  v20 = a3[11];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FBBFB08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBBFB14(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AAAC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_21FBBFBCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FBBFBD8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_21FC5AAAC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingOperationalMetric(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554B420);
}

void sub_21FBBFCA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FC5AAAC();
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_21FBBFD70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  int *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t PushMetricField;
  uint64_t *boxed_opaque_existential_1;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t SuccessfulPushMetricField;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  id v27;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v32 = (uint64_t)&v29 - v2;
  sub_21FA2D1A0(0, (unint64_t *)&qword_25406BE50, (uint64_t (*)(uint64_t))sub_21FAD5334, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FC623E0;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 40) = 0x800000021FC76930;
  v4 = (int *)type metadata accessor for ClinicalSharingOperationalMetric(0);
  v5 = *((_BYTE *)v0 + v4[9]);
  *(_QWORD *)(inited + 72) = &type metadata for IHRMetricField;
  *(_QWORD *)(inited + 80) = &off_24E485000;
  *(_BYTE *)(inited + 48) = v5;
  *(_QWORD *)(inited + 88) = 0x7361655268737570;
  *(_QWORD *)(inited + 96) = 0xEA00000000006E6FLL;
  v6 = v0[1];
  *(_QWORD *)(inited + 128) = &type metadata for PushReasonMetricField;
  *(_QWORD *)(inited + 136) = &off_24E48CD20;
  *(_QWORD *)(inited + 104) = v6;
  *(_QWORD *)(inited + 144) = 0x73736563637573;
  *(_QWORD *)(inited + 152) = 0xE700000000000000;
  v7 = *v0;
  v8 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
  v9 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error) == 0;
  *(_QWORD *)(inited + 184) = &type metadata for SyncSuccessMetricField;
  *(_QWORD *)(inited + 192) = &off_24E48CD08;
  *(_BYTE *)(inited + 160) = v9;
  *(_QWORD *)(inited + 200) = 0x6D6F44726F727265;
  *(_QWORD *)(inited + 208) = 0xEB000000006E6961;
  v31 = *(id *)(v7 + v8);
  v10 = v31;
  *(_QWORD *)(inited + 240) = &type metadata for ErrorDomainMetricField;
  *(_QWORD *)(inited + 248) = &off_24E484FE8;
  *(_QWORD *)(inited + 216) = v10;
  strcpy((char *)(inited + 256), "errorMessage");
  *(_BYTE *)(inited + 269) = 0;
  *(_WORD *)(inited + 270) = -5120;
  v30 = *(id *)(v7 + v8);
  v11 = v30;
  *(_QWORD *)(inited + 296) = &type metadata for ErrorMessageMetricField;
  *(_QWORD *)(inited + 304) = &off_24E484FD0;
  *(_QWORD *)(inited + 272) = v11;
  *(_QWORD *)(inited + 312) = 0xD000000000000014;
  *(_QWORD *)(inited + 320) = 0x800000021FC7C8E0;
  v12 = (uint64_t)v0 + v4[7];
  PushMetricField = type metadata accessor for MinutesSinceLastPushMetricField(0);
  *(_QWORD *)(inited + 352) = PushMetricField;
  *(_QWORD *)(inited + 360) = &off_24E48CCF0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 328));
  sub_21FA7187C(v12, (uint64_t)boxed_opaque_existential_1);
  v15 = (char *)v0 + v4[6];
  v16 = (char *)boxed_opaque_existential_1 + *(int *)(PushMetricField + 20);
  v17 = sub_21FC5AAAC();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v16, v15, v17);
  *(_QWORD *)(inited + 368) = 0xD00000000000001ELL;
  *(_QWORD *)(inited + 376) = 0x800000021FC7C900;
  v19 = v7 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
  swift_beginAccess();
  v20 = v32;
  sub_21FA7187C(v19, v32);
  SuccessfulPushMetricField = type metadata accessor for MinutesSinceLastSuccessfulPushMetricField(0);
  *(_QWORD *)(inited + 408) = SuccessfulPushMetricField;
  *(_QWORD *)(inited + 416) = &off_24E48CCD8;
  v22 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 384));
  v18((char *)v22 + *(int *)(SuccessfulPushMetricField + 20), v15, v17);
  sub_21FA6A41C(v20, (uint64_t)v22);
  *(_QWORD *)(inited + 424) = 0xD000000000000011;
  *(_QWORD *)(inited + 432) = 0x800000021FC7C920;
  v23 = (char *)v0 + v4[8];
  v24 = type metadata accessor for OperationDurationMetricField(0);
  *(_QWORD *)(inited + 464) = v24;
  *(_QWORD *)(inited + 472) = &off_24E48CCC0;
  v25 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 440));
  v18((char *)v25, v23, v17);
  v18((char *)v25 + *(int *)(v24 + 20), v15, v17);
  v26 = v31;
  v27 = v30;
  return sub_21FA7C580(inited);
}

uint64_t sub_21FBC0138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FBC0170(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t type metadata accessor for MinutesSinceLastPushMetricField(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554B5E8);
}

uint64_t type metadata accessor for MinutesSinceLastSuccessfulPushMetricField(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554B558);
}

uint64_t type metadata accessor for OperationDurationMetricField(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554B4C8);
}

uint64_t *sub_21FBC01B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21FC5AAAC();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_21FBC0254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_21FC5AAAC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_21FBC02BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21FC5AAAC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21FBC032C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21FC5AAAC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21FBC039C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21FC5AAAC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21FBC040C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21FC5AAAC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21FBC047C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC0488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21FC5AAAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21FBC04C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC04D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21FC5AAAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21FBC0510()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AAAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21FBC0590()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC05A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_21FBC05B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21FC5AAAC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v7);
    }
    else
    {
      v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
      v11(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      v11((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    }
  }
  return a1;
}

uint64_t sub_21FBC06BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_21FC5AAAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  if (!v6)
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(a1, v4);
    v7 = v9;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 20), v4);
}

char *sub_21FBC0738(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = sub_21FC5AAAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    v9 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v9(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v9(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *sub_21FBC0814(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_21FC5AAAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

char *sub_21FBC093C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = sub_21FC5AAAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    v9 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v9(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v9(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *sub_21FBC0A18(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_21FC5AAAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

uint64_t sub_21FBC0B40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_21FC5AAAC();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_21FBC0BDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_21FA2D1A0(0, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_21FC5AAAC();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21FBC0C80()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, (unint64_t *)&qword_25406AAE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FC5AAAC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for SyncSuccessMetricField(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FBC0D68 + 4 * byte_21FC6F3E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FBC0D9C + 4 * byte_21FC6F3E0[v4]))();
}

uint64_t sub_21FBC0D9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBC0DA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FBC0DACLL);
  return result;
}

uint64_t sub_21FBC0DB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FBC0DC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FBC0DC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FBC0DCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncSuccessMetricField()
{
  return &type metadata for SyncSuccessMetricField;
}

ValueMetadata *type metadata accessor for PushReasonMetricField()
{
  return &type metadata for PushReasonMetricField;
}

uint64_t sub_21FBC0DF8@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FBC0E30((void (*)(_QWORD))type metadata accessor for MinutesSinceLastPushMetricField, a1);
}

uint64_t sub_21FBC0E14@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FBC0E30((void (*)(_QWORD))type metadata accessor for MinutesSinceLastSuccessfulPushMetricField, a1);
}

uint64_t sub_21FBC0E30@<X0>(void (*a1)(_QWORD)@<X3>, _QWORD *a2@<X8>)
{
  uint64_t result;
  double v4;
  double v5;

  a1(0);
  result = sub_21FC5AA4C();
  v5 = v4 / 60.0;
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 9.22337204e18)
  {
    *a2 = (uint64_t)v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_21FBC0ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date;
  v2 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
  v4 = sub_21FC5AC08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_21FBC0F68()
{
  return type metadata accessor for ClinicalSharingQueryContext(0);
}

uint64_t type metadata accessor for ClinicalSharingQueryContext(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554B710);
}

uint64_t sub_21FBC0F84()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21FC5AAAC();
  if (v1 <= 0x3F)
  {
    result = sub_21FC5AC08();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t *sub_21FBC1030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21FC5AD1C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for PBTypedData(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    v9 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(void **)v11;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      v13 = *((_QWORD *)v11 + 1);
      *v10 = v12;
      v10[1] = v13;
      v14 = v12;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
    }
  }
  return a1;
}

uint64_t sub_21FBC1110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  id *v6;

  v4 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PBTypedData(0);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = (id *)(a1 + *(int *)(a2 + 24));
  if (*v6)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21FBC1190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;

  v6 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(void **)(a2 + v8);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 8);
    *v9 = v11;
    v9[1] = v12;
    v13 = v11;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  return a1;
}

uint64_t sub_21FBC1244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v6 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(void **)(a1 + v8);
  v12 = *(void **)v10;
  if (!v11)
  {
    if (v12)
    {
      *(_QWORD *)v9 = v12;
      *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
      v14 = v12;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v9 = *(_OWORD *)v10;
    return a1;
  }
  if (!v12)
  {
    sub_21FBC1348((id *)v9);
    goto LABEL_7;
  }
  *(_QWORD *)v9 = v12;
  v13 = v12;

  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_21FBC1348(id *a1)
{

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FBC1378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_21FBC13F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v6 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for PBTypedData(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(void **)(a1 + v8);
  if (!v11)
    goto LABEL_5;
  if (!*(_QWORD *)v10)
  {
    sub_21FBC1348((id *)v9);
LABEL_5:
    *(_OWORD *)v9 = *(_OWORD *)v10;
    return a1;
  }
  *(_QWORD *)v9 = *(_QWORD *)v10;

  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FBC14B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC14C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for PBTypedData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_21FBC1540()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC154C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PBTypedData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ClinicalSharingQueryOutput(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25406C368);
}

uint64_t sub_21FBC15D8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PBTypedData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ClinicalSharingQueryOutput.AssociatedDateIntervals(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClinicalSharingQueryOutput.AssociatedDateIntervals(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ClinicalSharingQueryOutput.AssociatedDateIntervals(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for ClinicalSharingQueryOutput.AssociatedDateIntervals(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingQueryOutput.AssociatedDateIntervals()
{
  return &type metadata for ClinicalSharingQueryOutput.AssociatedDateIntervals;
}

uint64_t sub_21FBC1758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  sub_21FAC7C7C();
  if ((sub_21FC5BA60() & 1) != 0)
    return sub_21FB0EF60(v2, v3);
  else
    return 0;
}

uint64_t sub_21FBC17C0(uint64_t a1, uint64_t a2)
{
  uint64_t Output;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if ((static PBTypedData.== infix(_:_:)(a1, a2) & 1) != 0)
  {
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    if ((sub_21FBACCD4(*(_QWORD *)(a1 + *(int *)(Output + 20)), *(_QWORD *)(a2 + *(int *)(Output + 20))) & 1) != 0)
    {
      v5 = *(int *)(Output + 24);
      v6 = a1 + v5;
      v7 = *(void **)(a1 + v5);
      v8 = a2 + v5;
      v9 = *(void **)v8;
      if (v7)
      {
        if (v9)
        {
          v10 = *(_QWORD *)(v6 + 8);
          v11 = *(_QWORD *)(v8 + 8);
          sub_21FAC7C7C();
          sub_21FBC18EC(v7);
          sub_21FBC18EC(v7);
          sub_21FBC18EC(v9);
          if ((sub_21FC5BA60() & 1) != 0)
          {
            v12 = sub_21FB0EF60(v10, v11);
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            sub_21FBC1918(v7);
            if ((v12 & 1) != 0)
              return 1;
          }
          else
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            sub_21FBC1918(v7);
          }
        }
      }
      else if (!v9)
      {
        return 1;
      }
    }
  }
  return 0;
}

void *sub_21FBC18EC(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_21FBC1918(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void FHIRServerWebRequest.init(method:url:body:headers:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v11 = *a1;
  *(_BYTE *)a6 = v11;
  v12 = type metadata accessor for FHIRServerWebRequest();
  v13 = a6 + *(int *)(v12 + 24);
  v14 = sub_21FC5A98C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a2, v14);
  v15 = (uint64_t *)(a6 + *(int *)(v12 + 28));
  *v15 = a3;
  v15[1] = a4;
  *(_QWORD *)(a6 + 8) = a5;
  sub_21FA3277C(a3, a4);
  sub_21FC5BB74();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_21FBC1A3C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  sub_21FBC1B88();
  sub_21FC5BDCC();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  sub_21FA3239C(v3, v2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  v8 = (_QWORD *)(v0 + *(int *)(v4 + 32));
  *v8 = v9;
  v8[1] = v10;
  return result;
}

uint64_t type metadata accessor for FHIRServerWebRequest()
{
  uint64_t result;

  result = qword_25554B810;
  if (!qword_25554B810)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21FBC1B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25553E2C8;
  if (!qword_25553E2C8)
  {
    v1 = sub_21FC5A98C();
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_25553E2C8);
  }
  return result;
}

void FHIRServerWebRequest.method.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FHIRServerWebRequest.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FHIRServerWebRequest.headers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FHIRServerWebRequest.headers.modify())()
{
  return nullsub_1;
}

uint64_t FHIRServerWebRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FHIRServerWebRequest() + 24);
  v4 = sub_21FC5A98C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FHIRServerWebRequest.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for FHIRServerWebRequest() + 28);
  v2 = *(_QWORD *)v1;
  sub_21FA3277C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t FHIRServerWebRequest.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FHIRServerWebRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t getEnumTagSinglePayload for FHIRServerWebRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC1CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21FC5A98C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FHIRServerWebRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC1D7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21FC5A98C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_21FBC1DFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5A98C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21FBC1E8C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  id v27;
  unint64_t *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;

  v4 = sub_21FC5AAF4();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA32580();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21FC5A98C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v36 - v14;
  v16 = (int *)type metadata accessor for ClinicalDocumentDownloadRequest();
  v17 = a2 + v16[7];
  *(_OWORD *)v17 = xmmword_21FC5E350;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)a2 = 2;
  v42 = a1;
  v18 = objc_msgSend(a1, sel_webURL);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  v19 = v18;
  sub_21FC5A950();

  v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v20(v8, v13, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_6:
    sub_21FAA51C8((uint64_t)v8);
    sub_21FBC2264();
    swift_allocError();
    *v35 = 0;
    swift_willThrow();

    swift_bridgeObjectRelease();
    sub_21FA3239C(*(_QWORD *)v17, *(_QWORD *)(v17 + 8));
    return;
  }
  v20(v15, v8, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a2 + v16[6], v15, v9);
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_21FC5BB74();
  swift_bridgeObjectRelease();
  v40 = 0xD000000000000024;
  v41 = 0x800000021FC7CA00;
  v21 = objc_msgSend(v42, sel_identifier);
  v22 = v37;
  sub_21FC5AADC();

  sub_21FBC22A8();
  v23 = v39;
  sub_21FC5BDCC();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v23);
  v24 = v40;
  v25 = v41;
  v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27 = v42;
  v26(v15, v9);
  v28 = (unint64_t *)(a2 + v16[8]);
  *v28 = v24;
  v28[1] = v25;
  v29 = objc_msgSend(v27, sel_contentType);
  if (v29)
  {
    v30 = v29;
    v31 = sub_21FC5B604();
    v33 = v32;

    sub_21FACD2EC();
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_21FC5EE30;
    *(_QWORD *)(v34 + 32) = 0x747065636341;
    *(_QWORD *)(v34 + 40) = 0xE600000000000000;
    *(_QWORD *)(v34 + 48) = v31;
    *(_QWORD *)(v34 + 56) = v33;

    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 8) = v34;
  }
  else
  {

  }
}

uint64_t type metadata accessor for ClinicalDocumentDownloadRequest()
{
  uint64_t result;

  result = qword_25554B8B8;
  if (!qword_25554B8B8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21FBC2264()
{
  unint64_t result;

  result = qword_25554B858;
  if (!qword_25554B858)
  {
    result = MEMORY[0x2207D0F78](&unk_21FC6F860, &type metadata for ClinicalDocumentDownloadRequestError);
    atomic_store(result, (unint64_t *)&qword_25554B858);
  }
  return result;
}

unint64_t sub_21FBC22A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25553F0F0;
  if (!qword_25553F0F0)
  {
    v1 = sub_21FC5AAF4();
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_25553F0F0);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for ClinicalDocumentDownloadRequestError(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for ClinicalDocumentDownloadRequestError(id *a1)
{

}

void **assignWithCopy for ClinicalDocumentDownloadRequestError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for ClinicalDocumentDownloadRequestError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalDocumentDownloadRequestError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ClinicalDocumentDownloadRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_21FBC242C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_21FBC2444(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalDocumentDownloadRequestError()
{
  return &type metadata for ClinicalDocumentDownloadRequestError;
}

uint64_t sub_21FBC2474()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC2480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21FC5A98C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_21FBC2504()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC2510(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21FC5A98C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_21FBC2590()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5A98C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingActiveMedicationQuery()
{
  return &type metadata for ClinicalSharingActiveMedicationQuery;
}

uint64_t sub_21FBC2634(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_21FBC2FAC();
  v3 = v2;
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBC314C(0, &qword_25554B930, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  v27 = v6;
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - v7;
  sub_21FBC314C(0, &qword_25554B938, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  v28 = v9;
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - v10;
  sub_21FC5B604();
  v12 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v13 = (void *)sub_21FC5B5E0();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 0);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  sub_21FA2CEE4();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_21FC5E070;
  *(_QWORD *)(v15 + 32) = v14;
  v31 = v15;
  sub_21FC5B7C0();
  v16 = v31;
  v25 = v14;
  v17 = sub_21FC20480(v16);
  swift_bridgeObjectRelease();
  v31 = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_21FBC31C0;
  *(_QWORD *)(v18 + 24) = a1;
  sub_21FBC3034();
  sub_21FA5BE58(0, &qword_25554B920);
  sub_21FBC3104();
  swift_retain();
  sub_21FC5B28C();
  swift_release();
  swift_release();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_21FBC31EC;
  *(_QWORD *)(v19 + 24) = a1;
  type metadata accessor for PBTypedData(0);
  swift_retain();
  sub_21FC5AFF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  swift_retain();
  v20 = v27;
  sub_21FC5AFF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v20);
  sub_21FBC31FC();
  v21 = v28;
  v22 = sub_21FC5B280();

  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v21);
  return v22;
}

uint64_t sub_21FBC29A0(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t result;

  v1 = sub_21FAC1C84(a1);
  if (!v1)
    goto LABEL_13;
  v2 = v1;
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v1 >> 62)
  {
    if (sub_21FC5BC7C())
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_9;
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2207D057C](0, v2);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(id *)(v2 + 32);
LABEL_7:
    v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
LABEL_13:
  result = sub_21FC5BC70();
  __break(1u);
  return result;
}

uint64_t sub_21FBC2A88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  _QWORD *v21;
  _QWORD *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  sub_21FAA333C(0);
  MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBDateRange(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PBActiveMedications(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)((char *)&v46 - v15);
  v17 = sub_21FC5AAF4();
  v55 = *(_QWORD *)(v17 - 8);
  v56 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v37 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a3, 1, 1, v37);
  }
  v50 = v10;
  v20 = a1;
  v21 = objc_msgSend(v20, sel_linkCollection);
  v22 = v21;
  v52 = v20;
  v53 = v14;
  v51 = a2;
  if (!v21)
    goto LABEL_19;
  v49 = v11;
  v23 = objc_msgSend(v21, sel_links);

  sub_21FA5BE58(0, &qword_25554B948);
  v24 = sub_21FC5B7A8();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_5;
LABEL_18:
    swift_bridgeObjectRelease();
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v25)
    goto LABEL_18;
LABEL_5:
  v57 = (_QWORD *)MEMORY[0x24BEE4AF8];
  result = sub_21FC01924(0, v25 & ~(v25 >> 63), 0);
  if (v25 < 0)
  {
    __break(1u);
    return result;
  }
  v47 = v16;
  v48 = a3;
  v27 = 0;
  do
  {
    if ((v24 & 0xC000000000000001) != 0)
      v28 = (id)MEMORY[0x2207D057C](v27, v24);
    else
      v28 = *(id *)(v24 + 8 * v27 + 32);
    v29 = v28;
    v30 = objc_msgSend(v28, sel_targetUUID);
    sub_21FC5AADC();

    v31 = sub_21FC5AAB8();
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v56);

    v22 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_21FC01924(0, v22[2] + 1, 1);
      v22 = v57;
    }
    v35 = v22[2];
    v34 = v22[3];
    if (v35 >= v34 >> 1)
    {
      sub_21FC01924(v34 > 1, v35 + 1, 1);
      v22 = v57;
    }
    ++v27;
    v22[2] = v35 + 1;
    v36 = &v22[2 * v35];
    v36[4] = v31;
    v36[5] = v33;
  }
  while (v25 != v27);
  swift_bridgeObjectRelease();
  v16 = v47;
  a3 = v48;
LABEL_19:
  *v16 = MEMORY[0x24BEE4AF8];
  sub_21FC5AD10();
  if (v22)
    *v16 = v22;
  sub_21FC5AD10();
  v38 = type metadata accessor for PBTypedData(0);
  v39 = *(int *)(v38 + 20);
  if (qword_25553D590 != -1)
    swift_once();
  *(_QWORD *)(a3 + v39) = qword_25553E450;
  v40 = sub_21FC5A6C8();
  v41 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v54, 1, 1, v40);
  swift_retain();
  v42 = (uint64_t)v50;
  sub_21FBE816C(5, 1, v41, v51);
  sub_21FA326EC(v41, (uint64_t (*)(_QWORD))sub_21FAA333C);
  PBTypedData.dateRange.setter(v42);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    v43 = swift_retain();
    *(_QWORD *)(a3 + v39) = sub_21FA3A458(v43);
    swift_release();
  }
  v44 = *(_QWORD *)(a3 + v39);
  swift_beginAccess();
  *(_QWORD *)(v44 + 16) = 132;
  *(_BYTE *)(v44 + 24) = 1;
  v45 = (uint64_t)v53;
  sub_21FA2D120((uint64_t)v16, (uint64_t)v53, type metadata accessor for PBActiveMedications);
  PBTypedData.activeMedications.setter(v45);

  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a3, 0, 1, v38);
  return sub_21FA326EC((uint64_t)v16, type metadata accessor for PBActiveMedications);
}

uint64_t sub_21FBC2FA4()
{
  uint64_t *v0;

  return sub_21FBC2634(*v0);
}

void sub_21FBC2FAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554B900)
  {
    sub_21FBC3034();
    sub_21FA5BE58(255, &qword_25554B920);
    sub_21FBC3104();
    v0 = sub_21FC5B004();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554B900);
  }
}

void sub_21FBC3034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554B908)
  {
    sub_21FBC30A0();
    sub_21FA2CDB4();
    v0 = sub_21FC5B190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554B908);
  }
}

void sub_21FBC30A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554B910)
  {
    sub_21FA5BE58(255, &qword_25554B918);
    v0 = sub_21FC5B7F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554B910);
  }
}

unint64_t sub_21FBC3104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554B928;
  if (!qword_25554B928)
  {
    sub_21FBC3034();
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25554B928);
  }
  return result;
}

void sub_21FBC314C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_21FBC3034();
    a3(255);
    sub_21FBC3104();
    v5 = sub_21FC5B004();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_21FBC31C0(unint64_t a1)
{
  return sub_21FBC29A0(a1);
}

uint64_t sub_21FBC31C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FBC31EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FBC2A88(a1, v2, a2);
}

uint64_t sub_21FBC31F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FA862A8(a1, v2, a2);
}

unint64_t sub_21FBC31FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554B940;
  if (!qword_25554B940)
  {
    sub_21FBC314C(255, &qword_25554B938, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB94C8], v1);
    atomic_store(result, (unint64_t *)&qword_25554B940);
  }
  return result;
}

void FHIRServerOperationRequest.method.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FHIRServerOperationRequest.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FHIRServerOperationRequest.headers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FHIRServerOperationRequest.headers.modify())()
{
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 24);
  return sub_21FBC3310(v3, a1);
}

uint64_t type metadata accessor for FHIRServerOperationRequest()
{
  uint64_t result;

  result = qword_25554B9A8;
  if (!qword_25554B9A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21FBC3310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA32580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FHIRServerOperationRequest.baseURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 24);
  return sub_21FBC3384(a1, v3);
}

uint64_t sub_21FBC3384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA32580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FHIRServerOperationRequest.baseURL.modify())()
{
  type metadata accessor for FHIRServerOperationRequest();
  return nullsub_1;
}

_QWORD *FHIRServerOperationRequest.pathComponents.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;

  v1 = (int *)type metadata accessor for FHIRServerOperationRequest();
  v2 = (uint64_t *)(v0 + v1[9]);
  v3 = v2[1];
  v4 = (uint64_t *)(v0 + v1[10]);
  v6 = *v4;
  v5 = v4[1];
  v7 = (uint64_t *)(v0 + v1[8]);
  v8 = *v7;
  v9 = v7[1];
  if (!v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!v5)
      goto LABEL_12;
    goto LABEL_7;
  }
  v10 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v11 = sub_21FA7DD0C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_21FA7DD0C((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[2 * v13];
  v14[4] = v10;
  v14[5] = v3;
  if (v5)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_21FA7DD0C(0, v11[2] + 1, 1, v11);
    v16 = v11[2];
    v15 = v11[3];
    if (v16 >= v15 >> 1)
      v11 = sub_21FA7DD0C((_QWORD *)(v15 > 1), v16 + 1, 1, v11);
    v11[2] = v16 + 1;
    v17 = &v11[2 * v16];
    v17[4] = v6;
    v17[5] = v5;
  }
LABEL_12:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_21FA7DD0C(0, v11[2] + 1, 1, v11);
  v19 = v11[2];
  v18 = v11[3];
  if (v19 >= v18 >> 1)
    v11 = sub_21FA7DD0C((_QWORD *)(v18 > 1), v19 + 1, 1, v11);
  v11[2] = v19 + 1;
  v20 = &v11[2 * v19];
  v20[4] = v8;
  v20[5] = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t FHIRServerOperationRequest.queryItems.getter()
{
  return 0;
}

uint64_t FHIRServerOperationRequest.fragment.getter()
{
  return 0;
}

uint64_t FHIRServerOperationRequest.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 28);
  v2 = *(_QWORD *)v1;
  sub_21FA3277C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t FHIRServerOperationRequest.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 28);
  result = sub_21FA3239C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*FHIRServerOperationRequest.body.modify())()
{
  type metadata accessor for FHIRServerOperationRequest();
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.title.getter()
{
  FHIRServerOperationRequest.pathComponents.getter();
  sub_21FAC8DA4();
  sub_21FA80314();
  sub_21FC5B5B0();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  return 0x4954415245504F24;
}

uint64_t FHIRServerOperationRequest.operationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FHIRServerOperationRequest.resourceType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FHIRServerOperationRequest.resourceType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FHIRServerOperationRequest.resourceType.modify())()
{
  type metadata accessor for FHIRServerOperationRequest();
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.resourceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FHIRServerOperationRequest.resourceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FHIRServerOperationRequest.resourceID.modify())()
{
  type metadata accessor for FHIRServerOperationRequest();
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.init(method:operationName:baseURL:resourceType:resourceID:body:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11)
{
  char v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  _QWORD *v24;

  v14 = *a1;
  *(_QWORD *)(a9 + 8) = 0;
  v15 = (int *)type metadata accessor for FHIRServerOperationRequest();
  v16 = a9 + v15[6];
  v17 = sub_21FC5A98C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = a9 + v15[7];
  *(_OWORD *)v18 = xmmword_21FC5E350;
  v19 = (_QWORD *)(a9 + v15[9]);
  *v19 = 0;
  v19[1] = 0;
  v20 = (_QWORD *)(a9 + v15[10]);
  *v20 = 0;
  v20[1] = 0;
  *(_BYTE *)a9 = v14;
  sub_21FBC3C84(a4, v16);
  v21 = (_QWORD *)(a9 + v15[8]);
  *v21 = a2;
  v21[1] = a3;
  *v19 = a5;
  v19[1] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a8)
  {
    sub_21FA326EC(a4, (uint64_t (*)(_QWORD))sub_21FA32580);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (a6)
  {
    swift_bridgeObjectRelease();
    v22 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) == 0)
      v22 = a5 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      sub_21FA326EC(a4, (uint64_t (*)(_QWORD))sub_21FA32580);
LABEL_8:
      swift_bridgeObjectRelease();
      *v20 = a7;
      v20[1] = a8;
      result = sub_21FA3239C(*(_QWORD *)v18, *(_QWORD *)(v18 + 8));
      *(_QWORD *)v18 = a10;
      *(_QWORD *)(v18 + 8) = a11;
      return result;
    }
  }
  swift_bridgeObjectRelease();
  sub_21FBA07C8();
  swift_allocError();
  *v24 = 0;
  v24[1] = 0;
  swift_willThrow();
  sub_21FA3239C(a10, a11);
  sub_21FA326EC(a4, (uint64_t (*)(_QWORD))sub_21FA32580);
  return sub_21FA326EC(a9, (uint64_t (*)(_QWORD))type metadata accessor for FHIRServerOperationRequest);
}

uint64_t sub_21FBC3AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FBC3310(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_21FBC3AE4()
{
  return 0;
}

uint64_t sub_21FBC3AEC()
{
  return 0;
}

uint64_t sub_21FBC3AF8()
{
  FHIRServerOperationRequest.pathComponents.getter();
  sub_21FAC8DA4();
  sub_21FA80314();
  sub_21FC5B5B0();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  return 0x4954415245504F24;
}

uint64_t FHIRServerOperationRequestError.errorDescription.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = 0xD000000000000011;
  v2 = *(_QWORD *)(v0 + 8);
  if (!v2)
    return 0xD000000000000013;
  if (v2 != 1)
  {
    if (v2 == 2)
    {
      return 0x6569746170206F4ELL;
    }
    else
    {
      sub_21FC5BB74();
      swift_bridgeObjectRelease();
      sub_21FC5B6AC();
      return 0xD000000000000019;
    }
  }
  return v1;
}

uint64_t sub_21FBC3C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA32580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for FHIRServerOperationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_21FC5A98C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_21FA32580();
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[7];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = *((_QWORD *)v17 + 1);
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
    else
    {
      v19 = *(_QWORD *)v17;
      sub_21FA32314(*(_QWORD *)v17, *((_QWORD *)v17 + 1));
      *(_QWORD *)v16 = v19;
      *((_QWORD *)v16 + 1) = v18;
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = (uint64_t *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (uint64_t *)((char *)v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[10];
    v29 = (uint64_t *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FHIRServerOperationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5A98C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_21FA2D770(*v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_21FC5A98C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_21FA32580();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = (uint64_t *)(a2 + v13);
  v16 = v15[1];
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  else
  {
    v17 = *v15;
    sub_21FA32314(*v15, v15[1]);
    *(_QWORD *)v14 = v17;
    *(_QWORD *)(v14 + 8) = v16;
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(a1 + v19);
  v24 = (_QWORD *)(a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[10];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_21FC5A98C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_21FA32580();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  if (*(_QWORD *)(a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      v20 = *v17;
      sub_21FA32314(v20, v18);
      v21 = *v16;
      v22 = v16[1];
      *v16 = v20;
      v16[1] = v18;
      sub_21FA2D770(v21, v22);
      goto LABEL_14;
    }
    sub_21FA32D54((uint64_t)v16);
    goto LABEL_12;
  }
  if (v18 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_14;
  }
  v19 = *v17;
  sub_21FA32314(v19, v18);
  *v16 = v19;
  v16[1] = v18;
LABEL_14:
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_21FC5A98C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_21FA32580();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_21FC5A98C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_21FA32580();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 8);
  if (v18 >> 60 != 15)
  {
    v19 = v17[1];
    if (v19 >> 60 != 15)
    {
      v20 = *v16;
      *v16 = *v17;
      v16[1] = v19;
      sub_21FA2D770(v20, v18);
      goto LABEL_12;
    }
    sub_21FA32D54((uint64_t)v16);
  }
  *(_OWORD *)v16 = *(_OWORD *)v17;
LABEL_12:
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FHIRServerOperationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBC4588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_21FA32580();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FHIRServerOperationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_21FBC4618(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_21FA32580();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
}

void sub_21FBC4698()
{
  unint64_t v0;

  sub_21FA32580();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t destroy for FHIRServerOperationRequestError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s19HealthRecordsDaemon31FHIRServerOperationRequestErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for FHIRServerOperationRequestError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FHIRServerOperationRequestError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FHIRServerOperationRequestError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FHIRServerOperationRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_21FBC4944(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_21FBC495C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FHIRServerOperationRequestError()
{
  return &type metadata for FHIRServerOperationRequestError;
}

void sub_21FBC498C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_21FC5A8D8();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

id sub_21FBC4A10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsIngestionServiceServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HealthRecordsIngestionServiceServer()
{
  return objc_opt_self();
}

void sub_21FBC4A98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t inited;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t (*v21)(void);
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v9 = sub_21FC5AFD4();
  __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
  v10 = v4;
  v11 = sub_21FC5AFC8();
  v12 = sub_21FC5B994();
  if (os_log_type_enabled(v11, v12))
  {
    v24 = a3;
    v13 = (uint8_t *)swift_slowAlloc();
    v23 = a1;
    v14 = swift_slowAlloc();
    v25 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getMetatypeMetadata();
    v26 = sub_21FC5B64C();
    v27 = v15;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    v26 = sub_21FABDCF8(v26, v27, &v25);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v11, v12, "%s starting", v13, 0xCu);
    swift_arrayDestroy();
    v16 = v14;
    a1 = v23;
    MEMORY[0x2207D105C](v16, -1, -1);
    v17 = v13;
    a3 = v24;
    MEMORY[0x2207D105C](v17, -1, -1);

  }
  else
  {

  }
  type metadata accessor for SignedClinicalDataManager();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  v26 = sub_21FBBB318(a1, a2);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v10;
  v19[3] = a3;
  v19[4] = a4;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v10;
  v20[3] = a3;
  v20[4] = a4;
  v21 = MEMORY[0x24BDB9AE0];
  sub_21FBC9668(0, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FBC96E8(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v21, MEMORY[0x24BDB9AF8]);
  v22 = v10;
  swift_retain_n();
  v22;
  sub_21FC5B2D4();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_21FC5B19C();
  swift_endAccess();
  swift_release();
  swift_setDeallocating();

}

void sub_21FBC4E50(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t inited;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  id v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v8 = sub_21FC5AFD4();
  __swift_project_value_buffer(v8, (uint64_t)qword_25406D830);
  v9 = v4;
  v10 = sub_21FC5AFC8();
  v11 = sub_21FC5B994();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v25 = a3;
    v13 = swift_slowAlloc();
    v27 = v13;
    *(_DWORD *)v12 = 136315138;
    v24 = v12 + 4;
    swift_getMetatypeMetadata();
    v28 = sub_21FC5B64C();
    v29 = v14;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    v28 = sub_21FABDCF8(v28, v29, &v27);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v10, v11, "%s starting", v12, 0xCu);
    swift_arrayDestroy();
    v15 = v13;
    a3 = v25;
    MEMORY[0x2207D105C](v15, -1, -1);
    MEMORY[0x2207D105C](v12, -1, -1);

  }
  else
  {

  }
  if ((objc_msgSend(a2, sel_options, v24) & 1) != 0)
  {
    type metadata accessor for ClinicalIngestionAnalyticsAccumulator();
    v16 = swift_allocObject();
    v17 = sub_21FA7CAA4(MEMORY[0x24BEE4AF8]);
    v18 = MEMORY[0x24BEE4B00];
    *(_QWORD *)(v16 + 16) = v17;
    *(_QWORD *)(v16 + 24) = v18;
  }
  else
  {
    v16 = 0;
  }
  type metadata accessor for SignedClinicalDataManager();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  v28 = sub_21FBBDE70(a1, a2);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v9;
  v20[3] = v16;
  v20[4] = a3;
  v20[5] = a4;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v9;
  v21[3] = v16;
  v21[4] = a3;
  v21[5] = a4;
  v22 = MEMORY[0x24BDB9AE0];
  sub_21FBC9668(0, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FBC96E8(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v22, MEMORY[0x24BDB9AF8]);
  v23 = v9;
  swift_retain_n();
  swift_retain_n();
  v23;
  sub_21FC5B2D4();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_21FC5B19C();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_setDeallocating();

}

void sub_21FBC523C(void **a1, void *a2, uint64_t a3, void (*a4)(_QWORD, id))
{
  void *v5;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  unint64_t v42;
  uint64_t v43[3];

  v5 = *a1;
  if (*a1)
  {
    v8 = v5;
    if (qword_25406B7F8 != -1)
      swift_once();
    v9 = sub_21FC5AFD4();
    __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
    v10 = v5;
    v11 = a2;
    v12 = v5;
    v13 = v11;
    v14 = sub_21FC5AFC8();
    v15 = sub_21FC5B97C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v40[0] = v17;
      *(_DWORD *)v16 = 136315394;
      v18 = sub_21FAD8410();
      sub_21FABDCF8(v18, v19, v40);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      swift_getErrorValue();
      v20 = sub_21FBADBB8(v39);
      sub_21FABDCF8(v20, v21, v40);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v14, v15, "%s failed with %s)", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v17, -1, -1);
      MEMORY[0x2207D105C](v16, -1, -1);

      if (!a3)
        goto LABEL_16;
    }
    else
    {

      if (!a3)
      {
LABEL_16:
        swift_getErrorValue();
        v37 = sub_21FBADCD8(v43[2]);
        a4(0, v37);

        return;
      }
    }
    swift_retain_n();
    v29 = v13;
    v30 = sub_21FC5AFC8();
    v31 = sub_21FC5B970();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v43[0] = v33;
      *(_DWORD *)v32 = 136315394;
      v34 = sub_21FAD8410();
      v40[0] = sub_21FABDCF8(v34, v35, v43);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      swift_beginAccess();
      v41 = sub_21FC2C5F4();
      v42 = v36;
      sub_21FC5B6AC();
      swift_beginAccess();
      sub_21FA7CBA8();
      sub_21FC5B6AC();
      swift_bridgeObjectRelease();
      v41 = sub_21FABDCF8(v41, v42, v43);
      sub_21FC5BAC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v30, v31, "%s captured Analytics \n %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v33, -1, -1);
      MEMORY[0x2207D105C](v32, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_21FC25F68();
    swift_release();
    goto LABEL_16;
  }
  if (qword_25406B7F8 != -1)
    swift_once();
  v22 = sub_21FC5AFD4();
  __swift_project_value_buffer(v22, (uint64_t)qword_25406D830);
  v38 = a2;
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B994();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v40[0] = v26;
    *(_DWORD *)v25 = 136315138;
    v27 = sub_21FAD8410();
    sub_21FABDCF8(v27, v28, v40);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v23, v24, "%s finished successfully", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v26, -1, -1);
    MEMORY[0x2207D105C](v25, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_21FBC58B4(uint64_t *a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v7 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v8 = sub_21FC5AFD4();
  __swift_project_value_buffer(v8, (uint64_t)qword_25406D830);
  v9 = a2;
  v10 = sub_21FC5AFC8();
  v11 = sub_21FC5B970();
  if (os_log_type_enabled(v10, v11))
  {
    v25 = v7;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v27[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_21FAD8410();
    sub_21FABDCF8(v14, v15, v27);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v10, v11, "%s received a parsing result", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v13, -1, -1);
    v16 = v12;
    v7 = v25;
    MEMORY[0x2207D105C](v16, -1, -1);

    if (!a3)
      return a4(v7, 0);
  }
  else
  {

    if (!a3)
      return a4(v7, 0);
  }
  swift_retain_n();
  v17 = v9;
  v18 = sub_21FC5AFC8();
  v19 = sub_21FC5B970();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v20 = 136315394;
    v21 = sub_21FAD8410();
    v27[0] = sub_21FABDCF8(v21, v22, &v30);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    swift_beginAccess();
    v28 = sub_21FC2C5F4();
    v29 = v23;
    sub_21FC5B6AC();
    swift_beginAccess();
    sub_21FA7CBA8();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    v28 = sub_21FABDCF8(v28, v29, &v30);
    sub_21FC5BAC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v18, v19, "%s captured Analytics \n %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v26, -1, -1);
    MEMORY[0x2207D105C](v20, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_21FC25F68();
  swift_release();
  return a4(v7, 0);
}

uint64_t sub_21FBC5D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t (*v17)(void);
  id v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  id v24;
  uint64_t v26;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v7 = sub_21FC5AFD4();
  __swift_project_value_buffer(v7, (uint64_t)qword_25406D830);
  v8 = v4;
  v9 = sub_21FC5AFC8();
  v10 = sub_21FC5B994();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v26 = a3;
    v12 = swift_slowAlloc();
    v29 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_getMetatypeMetadata();
    v30 = sub_21FC5B64C();
    v31 = v13;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    v30 = sub_21FABDCF8(v30, v31, &v29);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v9, v10, "%s starting", v11, 0xCu);
    swift_arrayDestroy();
    v14 = v12;
    a3 = v26;
    MEMORY[0x2207D105C](v14, -1, -1);
    MEMORY[0x2207D105C](v11, -1, -1);

  }
  else
  {

  }
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489A8]), sel_init);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  v17 = MEMORY[0x24BDB9E38];
  sub_21FBC9668(0, &qword_25554BB20, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v18 = v15;
  swift_bridgeObjectRetain();
  v30 = sub_21FC5B25C();
  sub_21FBC96E8(&qword_25554B240, &qword_25554BB20, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v17, MEMORY[0x24BDB9E58]);
  v19 = sub_21FC5B280();
  swift_release();
  v30 = v19;
  v20 = MEMORY[0x24BDB9AE0];
  sub_21FBC9668(0, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FBC96E8(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v20, MEMORY[0x24BDB9AF8]);
  v21 = sub_21FC5B280();
  swift_release();

  v30 = v21;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v8;
  v22[3] = a3;
  v22[4] = a4;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v8;
  v23[3] = a3;
  v23[4] = a4;
  v24 = v8;
  swift_retain_n();
  v24;
  sub_21FC5B2D4();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_21FC5B19C();
  swift_endAccess();
  return swift_release();
}

void sub_21FBC6268(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t (*v24)(void);
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v9 = sub_21FC5AFD4();
  __swift_project_value_buffer(v9, (uint64_t)qword_25406D830);
  v10 = v4;
  v11 = sub_21FC5AFC8();
  v12 = sub_21FC5B994();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v26 = a1;
    v14 = swift_slowAlloc();
    v27 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getMetatypeMetadata();
    v28 = sub_21FC5B64C();
    v29 = v15;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    v28 = sub_21FABDCF8(v28, v29, &v27);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v11, v12, "%s starting", v13, 0xCu);
    swift_arrayDestroy();
    v16 = v14;
    a1 = v26;
    MEMORY[0x2207D105C](v16, -1, -1);
    MEMORY[0x2207D105C](v13, -1, -1);

  }
  else
  {

  }
  type metadata accessor for SignedClinicalDataManager();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  sub_21FA80754(0, (unint64_t *)&qword_25554BAF0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_21FC5E070;
  *(_QWORD *)(v18 + 32) = a1;
  v28 = v18;
  sub_21FC5B7C0();
  v19 = v28;
  v20 = a1;
  v21 = sub_21FBBBA64(v19, a2);
  swift_bridgeObjectRelease();
  v28 = v21;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v10;
  v22[3] = a3;
  v22[4] = a4;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v10;
  v23[3] = a3;
  v23[4] = a4;
  v24 = MEMORY[0x24BDB9AE0];
  sub_21FBC9668(0, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FBC96E8(&qword_25554BB10, &qword_25554B108, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v24, MEMORY[0x24BDB9AF8]);
  v25 = v10;
  swift_retain_n();
  v25;
  sub_21FC5B2D4();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_21FC5B19C();
  swift_endAccess();
  swift_release();
  swift_setDeallocating();

}

void sub_21FBC665C(void **a1, void *a2, void (*a3)(_QWORD, id), uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  void *v8;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  char *format;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = *a1;
  if (*a1)
  {
    v11 = v8;
    if (qword_25406B7F8 != -1)
      swift_once();
    v12 = sub_21FC5AFD4();
    __swift_project_value_buffer(v12, (uint64_t)qword_25406D830);
    v13 = v8;
    v14 = a2;
    v15 = v8;
    v16 = v14;
    v17 = sub_21FC5AFC8();
    v18 = sub_21FC5B97C();
    if (os_log_type_enabled(v17, v18))
    {
      format = a7;
      v19 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v37 = v32;
      *(_DWORD *)v19 = 136315394;
      v20 = sub_21FAD8410();
      sub_21FABDCF8(v20, v21, &v37);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      swift_getErrorValue();
      v22 = sub_21FBADBB8(v35);
      sub_21FABDCF8(v22, v23, &v37);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v17, v18, format, (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v32, -1, -1);
      MEMORY[0x2207D105C](v19, -1, -1);
    }
    else
    {

    }
    swift_getErrorValue();
    v31 = sub_21FBADCD8(v36);
    a3(0, v31);

  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v24 = sub_21FC5AFD4();
    __swift_project_value_buffer(v24, (uint64_t)qword_25406D830);
    v34 = a2;
    v25 = sub_21FC5AFC8();
    v26 = sub_21FC5B994();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v37 = v28;
      *(_DWORD *)v27 = 136315138;
      v29 = sub_21FAD8410();
      sub_21FABDCF8(v29, v30, &v37);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v25, v26, "%s finished successfully", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v28, -1, -1);
      MEMORY[0x2207D105C](v27, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_21FBC6A8C(uint64_t *a1, void *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7, const char *a8)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t (*v23)(_QWORD, _QWORD);
  uint64_t v24;

  v12 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v13 = sub_21FC5AFD4();
  __swift_project_value_buffer(v13, (uint64_t)qword_25406D830);
  v14 = a2;
  v15 = sub_21FC5AFC8();
  v16 = a5();
  if (os_log_type_enabled(v15, v16))
  {
    v23 = a3;
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v24 = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_21FAD8410();
    sub_21FABDCF8(v19, v20, &v24);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v15, v16, a8, v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v18, -1, -1);
    v21 = v17;
    a3 = v23;
    MEMORY[0x2207D105C](v21, -1, -1);

  }
  else
  {

  }
  return a3(v12, 0);
}

uint64_t sub_21FBC6C94(void *a1, int a2, void *a3, uint64_t a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t, uint64_t))
{
  void *v13;
  uint64_t v14;
  id v15;
  id v16;

  v13 = _Block_copy(aBlock);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  v15 = a3;
  v16 = a1;
  a8(v15, a4, a7, v14);

  return swift_release();
}

uint64_t sub_21FBC6D34(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t aBlock;
  unint64_t v30;
  void (*v31)(uint64_t, void *, void *);
  void *v32;
  void (*v33)(void *, void *);
  uint64_t v34;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v7 = sub_21FC5AFD4();
  __swift_project_value_buffer(v7, (uint64_t)qword_25406D830);
  v8 = v3;
  v9 = sub_21FC5AFC8();
  v10 = sub_21FC5B994();
  if (os_log_type_enabled(v9, v10))
  {
    v26 = a2;
    v11 = (uint8_t *)swift_slowAlloc();
    v27 = a1;
    v28 = swift_slowAlloc();
    v12 = v28;
    *(_DWORD *)v11 = 136315138;
    swift_getMetatypeMetadata();
    aBlock = sub_21FC5B64C();
    v30 = v13;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    aBlock = sub_21FABDCF8(aBlock, v30, &v28);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v9, v10, "%s starting", v11, 0xCu);
    swift_arrayDestroy();
    v14 = v12;
    a1 = v27;
    MEMORY[0x2207D105C](v14, -1, -1);
    v15 = v11;
    a2 = v26;
    MEMORY[0x2207D105C](v15, -1, -1);

  }
  else
  {

  }
  type metadata accessor for SignedClinicalDataManager();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v8;
  v17[3] = a2;
  v17[4] = a3;
  sub_21FC5AFBC();
  swift_allocObject();
  v18 = v8;
  swift_retain();
  v19 = sub_21FC5AFB0();
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE48A90]), sel_initWithHealthStore_, v20);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v16;
  *(_QWORD *)(v22 + 24) = sub_21FBC9564;
  *(_QWORD *)(v22 + 32) = v17;
  *(_BYTE *)(v22 + 40) = 1;
  *(_QWORD *)(v22 + 48) = v19;
  *(_QWORD *)(v22 + 56) = a1;
  v33 = sub_21FBBEA88;
  v34 = v22;
  aBlock = MEMORY[0x24BDAC760];
  v30 = 1107296256;
  v31 = sub_21FA89518;
  v32 = &block_descriptor_36;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v24 = a1;
  swift_release();
  objc_msgSend(v21, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v24, 11, v23);

  _Block_release(v23);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_21FBC70F4(char a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t (*v18)(_QWORD, _QWORD);
  uint64_t v19;

  if (qword_25406B7F8 != -1)
    swift_once();
  v8 = sub_21FC5AFD4();
  __swift_project_value_buffer(v8, (uint64_t)qword_25406D830);
  v9 = a3;
  v10 = sub_21FC5AFC8();
  v11 = sub_21FC5B994();
  if (os_log_type_enabled(v10, v11))
  {
    v18 = a4;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v19 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_21FAD8410();
    sub_21FABDCF8(v14, v15, &v19);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v10, v11, "%s finished", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v13, -1, -1);
    v16 = v12;
    a4 = v18;
    MEMORY[0x2207D105C](v16, -1, -1);

  }
  else
  {

  }
  return a4(a1 & 1, a2);
}

uint64_t sub_21FBC736C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock;
  unint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  void (*v44)();
  uint64_t v45;

  ObjectType = swift_getObjectType();
  v3 = sub_21FC5B3A0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21FC5B3C4();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21FC5B3AC();
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25406B7F8 != -1)
    swift_once();
  v12 = sub_21FC5AFD4();
  __swift_project_value_buffer(v12, (uint64_t)qword_25406D830);
  v13 = v1;
  v14 = sub_21FC5AFC8();
  v15 = sub_21FC5B994();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v32 = v9;
    v17 = (uint8_t *)v16;
    v31 = swift_slowAlloc();
    v39 = v31;
    v33 = v4;
    *(_DWORD *)v17 = 136315138;
    v30 = v17 + 4;
    aBlock = ObjectType;
    swift_getMetatypeMetadata();
    v18 = sub_21FC5B64C();
    ObjectType = (uint64_t)a1;
    aBlock = v18;
    v41 = v19;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    a1 = (void *)ObjectType;
    swift_bridgeObjectRelease();
    aBlock = sub_21FABDCF8(aBlock, v41, &v39);
    v4 = v33;
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v14, v15, "%s starting", v17, 0xCu);
    v20 = v31;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v20, -1, -1);
    v21 = v17;
    v9 = v32;
    MEMORY[0x2207D105C](v21, -1, -1);

  }
  else
  {

  }
  sub_21FA5BE58(0, &qword_25554BAD0);
  v22 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v11, *MEMORY[0x24BEE5498], v9);
  v23 = (void *)sub_21FC5BA00();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v13;
  *(_QWORD *)(v24 + 24) = a1;
  v44 = sub_21FBC9558;
  v45 = v24;
  aBlock = MEMORY[0x24BDAC760];
  v41 = 1107296256;
  v42 = sub_21FBC79FC;
  v43 = &block_descriptor_24;
  v25 = _Block_copy(&aBlock);
  v26 = v13;
  v27 = a1;
  v28 = v36;
  sub_21FC5B3B8();
  v39 = MEMORY[0x24BEE4AF8];
  sub_21FA2A08C(&qword_25554BAD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_21FBC94D8();
  sub_21FA2A08C(&qword_25554BAE8, (uint64_t (*)(uint64_t))sub_21FBC94D8, MEMORY[0x24BEE12C8]);
  sub_21FC5BB08();
  MEMORY[0x2207D03E4](0, v28, v6, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v38);
  return swift_release();
}

void sub_21FBC77F0(void *a1, void *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;

  type metadata accessor for SignedClinicalDataManager();
  *(_QWORD *)(swift_allocObject() + 16) = 0;
  sub_21FBBC544(a2);
  if (qword_25406B7F8 != -1)
    swift_once();
  v4 = sub_21FC5AFD4();
  __swift_project_value_buffer(v4, (uint64_t)qword_25406D830);
  v11 = a1;
  v5 = sub_21FC5AFC8();
  v6 = sub_21FC5B994();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_21FAD8410();
    sub_21FABDCF8(v9, v10, &v12);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v5, v6, "%s finished", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v8, -1, -1);
    MEMORY[0x2207D105C](v7, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_21FBC79FC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_21FBC7A7C(uint64_t a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  char *v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock;
  unint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  void (*v53)();
  uint64_t v54;

  v44 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_21FC5B3A0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21FC5B3C4();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_21FC5AAF4();
  v9 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = v10;
  v42 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21FC5B3AC();
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25406B7F8 != -1)
    swift_once();
  v14 = sub_21FC5AFD4();
  __swift_project_value_buffer(v14, (uint64_t)qword_25406D830);
  v15 = v1;
  v16 = sub_21FC5AFC8();
  v17 = sub_21FC5B994();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v37 = v4;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v38 = v3;
    v36 = v20;
    v48 = v20;
    *(_DWORD *)v19 = 136315138;
    v35[1] = v19 + 4;
    aBlock = ObjectType;
    swift_getMetatypeMetadata();
    aBlock = sub_21FC5B64C();
    v50 = v21;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    aBlock = sub_21FABDCF8(aBlock, v50, &v48);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v16, v17, "%s starting", v19, 0xCu);
    v22 = v36;
    swift_arrayDestroy();
    v3 = v38;
    MEMORY[0x2207D105C](v22, -1, -1);
    v23 = v19;
    v4 = v37;
    MEMORY[0x2207D105C](v23, -1, -1);

  }
  else
  {

  }
  sub_21FA5BE58(0, &qword_25554BAD0);
  v24 = v39;
  v25 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v13, *MEMORY[0x24BEE5498], v40);
  v26 = (void *)sub_21FC5BA00();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);
  v28 = v42;
  v27 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v42, v44, v43);
  v29 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30 + v29, v28, v27);
  v53 = sub_21FBC9490;
  v54 = v30;
  aBlock = MEMORY[0x24BDAC760];
  v50 = 1107296256;
  v51 = sub_21FBC79FC;
  v52 = &block_descriptor_17;
  v31 = _Block_copy(&aBlock);
  v32 = v15;
  v33 = v45;
  sub_21FC5B3B8();
  v48 = MEMORY[0x24BEE4AF8];
  sub_21FA2A08C(&qword_25554BAD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_21FBC94D8();
  sub_21FA2A08C(&qword_25554BAE8, (uint64_t (*)(uint64_t))sub_21FBC94D8, MEMORY[0x24BEE12C8]);
  sub_21FC5BB08();
  MEMORY[0x2207D03E4](0, v33, v6, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
  return swift_release();
}

void sub_21FBC7F64(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  type metadata accessor for SignedClinicalDataManager();
  *(_QWORD *)(swift_initStackObject() + 16) = 0;
  sub_21FC5AFBC();
  swift_allocObject();
  sub_21FC5AFB0();
  sub_21FC5AFA4();
  swift_release();
  if (qword_25406B7F8 != -1)
    swift_once();
  v2 = sub_21FC5AFD4();
  __swift_project_value_buffer(v2, (uint64_t)qword_25406D830);
  v3 = a1;
  v4 = sub_21FC5AFC8();
  v5 = sub_21FC5B994();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v10 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_21FAD8410();
    sub_21FABDCF8(v8, v9, &v10);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v4, v5, "%s finished", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v7, -1, -1);
    MEMORY[0x2207D105C](v6, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_21FBC8210(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v6 = sub_21FC5AFD4();
  __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
  v7 = v3;
  v8 = sub_21FC5AFC8();
  v9 = sub_21FC5B994();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v26 = a3;
    v11 = swift_slowAlloc();
    v30 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_getMetatypeMetadata();
    v28 = sub_21FC5B64C();
    v29 = v12;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    sub_21FABDCF8(v28, v29, &v30);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v8, v9, "%s starting", v10, 0xCu);
    swift_arrayDestroy();
    v13 = v11;
    a3 = v26;
    MEMORY[0x2207D105C](v13, -1, -1);
    MEMORY[0x2207D105C](v10, -1, -1);

  }
  else
  {

  }
  type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  v15 = (_DWORD *)swift_slowAlloc();
  *v15 = 0;
  *(_QWORD *)(v14 + 40) = v15;
  *(_OWORD *)(v14 + 48) = xmmword_21FC6FA90;
  sub_21FA5BE58(0, (unint64_t *)&qword_25406CB58);
  v16 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 24) = MEMORY[0x24BEE4B08];
  v19 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v16, v17, 0);

  *(_QWORD *)(v18 + 16) = v19;
  type metadata accessor for IssuerDirectoryDownloadTaskManager();
  v20 = (_QWORD *)swift_allocObject();
  v21 = sub_21FBC9140(v14, v18, 0, v20);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v7;
  v22[3] = a2;
  v22[4] = a3;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v21;
  *(_BYTE *)(v23 + 24) = (a1 & 2) != 0;
  *(_QWORD *)(v23 + 32) = sub_21FBC9394;
  *(_QWORD *)(v23 + 40) = v22;
  v24 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21FABF0E0(a1 & 1, (uint64_t)sub_21FBC940C, v23);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_21FBC860C(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  swift_getObjectType();
  if (qword_25406B7F8 != -1)
    swift_once();
  v6 = sub_21FC5AFD4();
  __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
  v7 = v3;
  v8 = sub_21FC5AFC8();
  v9 = sub_21FC5B994();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v26 = a3;
    v11 = swift_slowAlloc();
    v30 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_getMetatypeMetadata();
    v28 = sub_21FC5B64C();
    v29 = v12;
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    sub_21FABDCF8(v28, v29, &v30);
    sub_21FC5BAC0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FA27000, v8, v9, "%s starting", v10, 0xCu);
    swift_arrayDestroy();
    v13 = v11;
    a3 = v26;
    MEMORY[0x2207D105C](v13, -1, -1);
    MEMORY[0x2207D105C](v10, -1, -1);

  }
  else
  {

  }
  type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  v15 = (_DWORD *)swift_slowAlloc();
  *v15 = 0;
  *(_QWORD *)(v14 + 40) = v15;
  *(_OWORD *)(v14 + 48) = xmmword_21FC6FA90;
  sub_21FA5BE58(0, (unint64_t *)&qword_25406CB58);
  v16 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 24) = MEMORY[0x24BEE4B08];
  v19 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v16, v17, 0);

  *(_QWORD *)(v18 + 16) = v19;
  type metadata accessor for IssuerDirectoryDownloadTaskManager();
  v20 = (_QWORD *)swift_allocObject();
  v21 = sub_21FBC9140(v14, v18, 0, v20);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v7;
  v22[3] = a2;
  v22[4] = a3;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v21;
  *(_BYTE *)(v23 + 24) = (a1 & 2) != 0;
  *(_QWORD *)(v23 + 32) = sub_21FBC924C;
  *(_QWORD *)(v23 + 40) = v22;
  v24 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21FABF0E0(a1 & 1, (uint64_t)sub_21FBC9298, v23);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_21FBC89EC(unint64_t a1, void *a2, id a3, void *a4, uint64_t (*a5)(unint64_t, void *, id), int a6, int a7, int a8, const char *a9)
{
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  os_log_type_t type[8];
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;

  if (a3)
  {
    v14 = a3;
    if (qword_25406B7F8 != -1)
      swift_once();
    v15 = sub_21FC5AFD4();
    __swift_project_value_buffer(v15, (uint64_t)qword_25406D830);
    v16 = a4;
    v17 = a3;
    v18 = v16;
    v19 = a3;
    v20 = sub_21FC5AFC8();
    v21 = sub_21FC5B97C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v51 = v48;
      *(_DWORD *)v22 = 136315394;
      v23 = sub_21FAD8410();
      v53 = sub_21FABDCF8(v23, v24, &v51);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      swift_getErrorValue();
      v25 = sub_21FBADBB8(v50);
      v53 = sub_21FABDCF8(v25, v26, &v51);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FA27000, v20, v21, "%s failed with %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v48, -1, -1);
      MEMORY[0x2207D105C](v22, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v27 = sub_21FC5AFD4();
    __swift_project_value_buffer(v27, (uint64_t)qword_25406D830);
    swift_bridgeObjectRetain_n();
    v28 = a4;
    v29 = a2;
    v49 = a2;
    v30 = v28;
    v31 = v29;
    v32 = sub_21FC5AFC8();
    v33 = sub_21FC5B994();
    if (os_log_type_enabled(v32, v33))
    {
      *(_QWORD *)type = a5;
      v34 = a1;
      v35 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v53 = v46;
      *(_DWORD *)v35 = 136315650;
      v36 = sub_21FAD8410();
      sub_21FABDCF8(v36, v37, &v53);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      sub_21FBC92A8();
      v38 = v31;
      v39 = sub_21FC5B64C();
      v51 = sub_21FABDCF8(v39, v40, &v53);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      a2 = v49;
      if (v34)
      {
        v41 = v34;
        if (v34 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_21FC5BC7C();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v41 = 0;
      }
      a5 = *(uint64_t (**)(unint64_t, void *, id))type;
      v52 = v41 == 0;
      sub_21FA80754(0, (unint64_t *)&qword_25554BAB0, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
      v42 = sub_21FC5B64C();
      v51 = sub_21FABDCF8(v42, v43, &v53);
      sub_21FC5BAC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v32, v33, a9, (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v46, -1, -1);
      v44 = v35;
      a1 = v41;
      MEMORY[0x2207D105C](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      a2 = v49;
    }
  }
  return a5(a1, a2, a3);
}

uint64_t sub_21FBC8FB4(void *a1, int a2, uint64_t a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t))
{
  void *v11;
  uint64_t v12;
  id v13;

  v11 = _Block_copy(aBlock);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  v13 = a1;
  a7(a3, a6, v12);

  return swift_release();
}

void sub_21FBC9038(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  void *v8;
  uint64_t v9;
  id v10;

  v8 = a1;
  if (a1)
  {
    sub_21FA5BE58(0, a5);
    v8 = (void *)sub_21FC5B79C();
  }
  if (a3)
    v9 = sub_21FC5A8D8();
  else
    v9 = 0;
  v10 = (id)v9;
  (*(void (**)(uint64_t, void *, uint64_t))(a4 + 16))(a4, v8, a2);

}

uint64_t sub_21FBC90F4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_21FBC9118(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_21FBC9038(a1, a2, a3, *(_QWORD *)(v3 + 16), (unint64_t *)&unk_25554BAC0);
}

_QWORD *sub_21FBC9140(uint64_t a1, uint64_t a2, id a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD v17[5];

  v17[3] = type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  v17[4] = &off_24E486528;
  v17[0] = a1;
  sub_21FBC930C(0, v8, v9, v10);
  v11 = (_QWORD *)swift_allocObject();
  v12 = (_DWORD *)swift_slowAlloc();
  v13 = MEMORY[0x24BEE4AF8];
  *v12 = 0;
  v11[2] = v12;
  v11[3] = v13;
  v11[4] = 0;
  a4[9] = v11;
  sub_21FA2CEA0((uint64_t)v17, (uint64_t)(a4 + 2));
  a4[7] = a2;
  if (!a3)
  {
    v14 = objc_allocWithZone(MEMORY[0x24BDD3C40]);
    swift_retain();
    v15 = objc_msgSend(v14, sel_init);
    a3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE48A90]), sel_initWithHealthStore_, v15);
    swift_release();

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  a4[8] = a3;
  return a4;
}

uint64_t sub_21FBC924C(unint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  return sub_21FBC89EC(a1, a2, a3, *(void **)(v3 + 16), *(uint64_t (**)(unint64_t, void *, id))(v3 + 24), *(_QWORD *)(v3 + 32), 53, 0x1FC7CBA0, "%s finished. Version: %s, public key entries count: %s");
}

void sub_21FBC9298(_QWORD *a1, void *a2)
{
  uint64_t v2;

  sub_21FABED54(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(void (**)(unint64_t, id, void *))(v2 + 32));
}

void sub_21FBC92A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554BAA0)
  {
    sub_21FA5BE58(255, (unint64_t *)&qword_25406BAC8);
    v0 = sub_21FC5BAA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554BAA0);
  }
}

void sub_21FBC930C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_25406C428)
  {
    v4 = type metadata accessor for SingleValuePublisherTaskQueue(0, (uint64_t)&type metadata for IssuerDirectoryDownloadTask, (uint64_t)&off_255540CC0, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25406C428);
  }
}

void sub_21FBC9368(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_21FBC9038(a1, a2, a3, *(_QWORD *)(v3 + 16), &qword_255540D18);
}

uint64_t sub_21FBC9394(unint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  return sub_21FBC89EC(a1, a2, a3, *(void **)(v3 + 16), *(uint64_t (**)(unint64_t, void *, id))(v3 + 24), *(_QWORD *)(v3 + 32), 57, 0x1FC7CBE0, "%s finished. Version: %s, issuer entries count: %s");
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21FBC940C(uint64_t *a1, void *a2)
{
  uint64_t v2;

  sub_21FABE9A4(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(void (**)(unint64_t, id, void *))(v2 + 32));
}

uint64_t sub_21FBC941C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_21FC5AAF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_21FBC9490()
{
  uint64_t v0;

  sub_21FC5AAF4();
  sub_21FBC7F64(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

void sub_21FBC94D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554BAE0)
  {
    sub_21FC5B3A0();
    v0 = sub_21FC5B7F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554BAE0);
  }
}

uint64_t sub_21FBC952C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21FBC9558()
{
  uint64_t v0;

  sub_21FBC77F0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_21FBC9564(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21FBC70F4(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(_QWORD, _QWORD))(v2 + 24));
}

uint64_t sub_21FBC9570()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_21FBC95B8(void **a1)
{
  uint64_t v1;

  sub_21FBC665C(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, id))(v1 + 24), *(_QWORD *)(v1 + 32), 0xD000000000000031, 0x800000021FC7CCC0, "%s failed with %s)");
}

uint64_t sub_21FBC95F8(uint64_t *a1)
{
  uint64_t v1;

  return sub_21FBC6A8C(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), MEMORY[0x24BEE7928], 0xD000000000000031, 0x800000021FC7CCC0, "%s received a verification result");
}

uint64_t sub_21FBC963C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21FBC9668(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_21FA5BE58(255, (unint64_t *)&unk_25554BB00);
    v7 = sub_21FA2CDB4();
    v8 = a3(a1, v6, v7, MEMORY[0x24BEE3F20]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_21FBC96E8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_21FBC9668(255, a2, a3);
    result = MEMORY[0x2207D0F78](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_21FBC972C(void **a1)
{
  uint64_t v1;

  sub_21FBC665C(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, id))(v1 + 24), *(_QWORD *)(v1 + 32), 0xD000000000000046, 0x800000021FC7CD00, "%s failed with %s)");
}

uint64_t sub_21FBC976C(uint64_t *a1)
{
  uint64_t v1;

  return sub_21FBC6A8C(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), MEMORY[0x24BEE7908], 0xD000000000000046, 0x800000021FC7CD00, "%s received a parsing result");
}

void sub_21FBC97B4(void **a1)
{
  uint64_t v1;

  sub_21FBC523C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, id))(v1 + 32));
}

uint64_t objectdestroy_64Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21FBC97F8(uint64_t *a1)
{
  uint64_t v1;

  return sub_21FBC58B4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t, _QWORD))(v1 + 32));
}

void sub_21FBC9808(void **a1)
{
  uint64_t v1;

  sub_21FBC665C(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, id))(v1 + 24), *(_QWORD *)(v1 + 32), 0xD000000000000035, 0x800000021FC7CD90, "%s failed with %s");
}

uint64_t sub_21FBC9848(uint64_t *a1)
{
  uint64_t v1;

  return sub_21FBC6A8C(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), MEMORY[0x24BEE7908], 0xD000000000000035, 0x800000021FC7CD90, "%s received a parsing result");
}

unint64_t PBActor.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 4;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FBC98D4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBActor.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FBC98DC()
{
  sub_21FBDCAD8();
  return sub_21FC5AD7C();
}

void sub_21FBC9914()
{
  qword_25554BB28 = (uint64_t)&unk_24E481700;
}

uint64_t static PBActor.allCases.getter()
{
  return sub_21FAFC660(&qword_25553DBE8);
}

uint64_t static PBActor.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553DBE8, &qword_25554BB28);
}

uint64_t (*static PBActor.allCases.modify())()
{
  if (qword_25553DBE8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FBC99CC@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553DBE8, &qword_25554BB28, a1);
}

void PBEventType.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t PBEventType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0x1C;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t PBEventType.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_21FBC9A20@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBEventType.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FBC9A28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PBEventType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_21FBC9A4C()
{
  sub_21FBDF148();
  return sub_21FC5AD7C();
}

void sub_21FBC9A84()
{
  qword_25554BB30 = (uint64_t)&unk_24E481760;
}

uint64_t static PBEventType.allCases.getter()
{
  return sub_21FAFC660(&qword_25553DBF0);
}

uint64_t static PBEventType.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553DBF0, &qword_25554BB30);
}

uint64_t (*static PBEventType.allCases.modify())()
{
  if (qword_25553DBF0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21FBC9B3C@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553DBF0, &qword_25554BB30, a1);
}

unint64_t PBStep.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0x12;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FBC9B74@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBStep.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FBC9B7C()
{
  sub_21FBDF104();
  return sub_21FC5AD7C();
}

void sub_21FBC9BB4()
{
  qword_25554BB38 = (uint64_t)&unk_24E481940;
}

uint64_t static PBStep.allCases.getter()
{
  return sub_21FAFC660(&qword_25553DBF8);
}

uint64_t static PBStep.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553DBF8, &qword_25554BB38);
}

uint64_t (*static PBStep.allCases.modify())()
{
  if (qword_25553DBF8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FBC9C6C@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553DBF8, &qword_25554BB38, a1);
}

void PBPollParameters.actor.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBPollParameters.actor.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*PBPollParameters.actor.modify())()
{
  return nullsub_1;
}

uint64_t PBPollParameters.mailboxID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPollParameters.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBPollParameters.mailboxID.modify())()
{
  return nullsub_1;
}

uint64_t PBPollParameters.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBPollParameters, a1);
}

uint64_t type metadata accessor for PBPollParameters(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554BF48);
}

uint64_t PBPollParameters.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBPollParameters);
}

uint64_t (*PBPollParameters.unknownFields.modify())()
{
  type metadata accessor for PBPollParameters(0);
  return nullsub_1;
}

uint64_t PBPollParameters.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  type metadata accessor for PBPollParameters(0);
  return sub_21FC5AD10();
}

uint64_t PBPollStateRequest.blobAuth.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FBCD358(type metadata accessor for PBPollStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, a1);
}

uint64_t type metadata accessor for PBPollStateRequest(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554BFE0);
}

uint64_t PBPollStateRequest.blobAuth.setter(uint64_t a1)
{
  return sub_21FBCA294(a1, &qword_255542068, type metadata accessor for PBBlobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

uint64_t type metadata accessor for PBPollStateRequest._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C458);
}

void (*PBPollStateRequest.blobAuth.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBBlobAuth(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    v9[1] = sub_21FC5ACF8();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_21FBC9F98;
}

void sub_21FBC9F98(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBPollStateRequest.blobAuth.setter, type metadata accessor for PBBlobAuth);
}

BOOL PBPollStateRequest.hasBlobAuth.getter()
{
  return sub_21FAF57D4(&qword_255542068, type metadata accessor for PBBlobAuth, type metadata accessor for PBPollStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

Swift::Void __swiftcall PBPollStateRequest.clearBlobAuth()()
{
  sub_21FBCA60C(&qword_255542068, type metadata accessor for PBBlobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

uint64_t PBPollStateRequest.pollParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25554BC98, type metadata accessor for PBPollParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BC98, type metadata accessor for PBPollParameters);
  v7 = type metadata accessor for PBPollParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBPollParameters);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v5, &qword_25554BC98, type metadata accessor for PBPollParameters);
}

uint64_t sub_21FBCA130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25554BC98, type metadata accessor for PBPollParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_25554BC98, type metadata accessor for PBPollParameters);
  v8 = type metadata accessor for PBPollParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBPollParameters);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v6, &qword_25554BC98, type metadata accessor for PBPollParameters);
}

uint64_t PBPollStateRequest.pollParameters.setter(uint64_t a1)
{
  return sub_21FBCA294(a1, &qword_25554BC98, type metadata accessor for PBPollParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters);
}

uint64_t sub_21FBCA294(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  v15 = *(int *)(type metadata accessor for PBPollStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPollStateRequest._StorageClass(0);
    swift_allocObject();
    v16 = swift_retain();
    *(_QWORD *)(v4 + v15) = sub_21FBD6900(v16, &qword_25554BC98, type metadata accessor for PBPollParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters);
    swift_release();
  }
  v17 = *(_QWORD *)(v4 + v15);
  sub_21FA2D23C(a1, (uint64_t)v14, a3);
  v18 = a3(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 0, 1, v18);
  sub_21FA2D280((uint64_t)v14, (uint64_t)v12, a2, a3);
  v19 = v17 + *a4;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v12, v19, a2, a3);
  swift_endAccess();
  return swift_release();
}

void (*PBPollStateRequest.pollParameters.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25554BC98, type metadata accessor for PBPollParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBPollParameters(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25554BC98, type metadata accessor for PBPollParameters);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_QWORD *)v9 = 0;
    v9[8] = 1;
    *((_QWORD *)v9 + 2) = 0;
    *((_QWORD *)v9 + 3) = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BC98, type metadata accessor for PBPollParameters);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPollParameters);
  }
  return sub_21FBCA5B8;
}

void sub_21FBCA5B8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBPollStateRequest.pollParameters.setter, type metadata accessor for PBPollParameters);
}

BOOL PBPollStateRequest.hasPollParameters.getter()
{
  return sub_21FAF57D4(&qword_25554BC98, type metadata accessor for PBPollParameters, type metadata accessor for PBPollStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters);
}

Swift::Void __swiftcall PBPollStateRequest.clearPollParameters()()
{
  sub_21FBCA60C(&qword_25554BC98, type metadata accessor for PBPollParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters);
}

uint64_t sub_21FBCA60C(unint64_t *a1, uint64_t (*a2)(uint64_t), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - v8;
  v10 = *(int *)(type metadata accessor for PBPollStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPollStateRequest._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v3 + v10) = sub_21FBD6900(v11, &qword_25554BC98, type metadata accessor for PBPollParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters);
    swift_release();
  }
  v12 = *(_QWORD *)(v3 + v10);
  v13 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  v14 = v12 + *a3;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v9, v14, a1, a2);
  swift_endAccess();
  return swift_release();
}

uint64_t (*PBPollStateRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPollStateRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBPollStateRequest, &qword_25553DC30, &qword_25554BBC0, a1);
}

uint64_t PBOtherData.version.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t PBOtherData.version.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBOtherData.version.modify())()
{
  return nullsub_1;
}

uint64_t PBOtherData.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBOtherData.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBOtherData.value.modify())()
{
  return nullsub_1;
}

uint64_t PBOtherData.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB1BC90(type metadata accessor for PBOtherData, a1);
}

uint64_t PBOtherData.unknownFields.setter(uint64_t a1)
{
  return sub_21FB1BCE8(a1, type metadata accessor for PBOtherData);
}

uint64_t (*PBOtherData.unknownFields.modify())()
{
  type metadata accessor for PBOtherData(0);
  return nullsub_1;
}

uint64_t PBOtherData.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  type metadata accessor for PBOtherData(0);
  return sub_21FC5AD10();
}

uint64_t PBUpdateParameters.actor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FBCA918(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FBDC5C8(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v8 + 16) = v3;
  *(_BYTE *)(v8 + 24) = v4;
  return result;
}

uint64_t PBUpdateParameters.actor.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FBDC5C8(v6);
    swift_release();
    *(_QWORD *)(v2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v8 + 16) = v3;
  *(_BYTE *)(v8 + 24) = v4;
  return result;
}

void (*PBUpdateParameters.actor.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FBCAAFC;
}

void sub_21FBCAAFC(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_21FBDC5C8(v9);
    swift_release();
    *(_QWORD *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  v11 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v4;
  *(_BYTE *)(v11 + 24) = v5;
  free((void *)v3);
}

uint64_t PBUpdateParameters.mailboxID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FBCAC34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBCAC8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FBDC5C8(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBUpdateParameters.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  v6 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_21FBDC5C8(v7);
    swift_release();
    *(_QWORD *)(v3 + v6) = v8;
    swift_release();
  }
  v9 = *(_QWORD *)(v3 + v6);
  swift_beginAccess();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBUpdateParameters.mailboxID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FBCAE7C;
}

void sub_21FBCAE7C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      v8 = sub_21FBDC5C8(v7);
      swift_release();
      *(_QWORD *)(v6 + v5) = v8;
      swift_release();
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v9 + 32) = v3;
    *(_QWORD *)(v9 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      v12 = swift_retain();
      v13 = sub_21FBDC5C8(v12);
      swift_release();
      *(_QWORD *)(v11 + v10) = v13;
      swift_release();
    }
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v14 + 32) = v3;
    *(_QWORD *)(v14 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBUpdateParameters.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  return sub_21FA44968(v3, a1, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
}

uint64_t sub_21FBCB050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  return sub_21FA44968(v3, a2, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
}

uint64_t sub_21FBCB0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - v5;
  sub_21FA44968(a1, (uint64_t)&v12 - v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_21FBDC5C8(v8);
    swift_release();
    *(_QWORD *)(a2 + v7) = v9;
    swift_release();
  }
  v10 = *(_QWORD *)(a2 + v7)
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v10, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

uint64_t PBUpdateParameters.data.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_21FBDC5C8(v5);
    swift_release();
    *(_QWORD *)(v2 + v4) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8(a1, v7, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateParameters.data.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  v6 = malloc(v5);
  v3[11] = v6;
  v7 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 24) = v7;
  v8 = *(_QWORD *)(v1 + v7)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v6, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  return sub_21FBCB3D8;
}

void sub_21FBCB3D8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_21FA44968(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 80), &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v3 = *(int *)(v2 + 96);
      v4 = *(_QWORD *)(v2 + 72);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      v5 = swift_retain();
      v6 = sub_21FBDC5C8(v5);
      swift_release();
      *(_QWORD *)(v4 + v3) = v6;
      swift_release();
    }
    v8 = *(void **)(v2 + 80);
    v7 = *(void **)(v2 + 88);
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 72) + *(int *)(v2 + 96))
       + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    swift_retain();
    sub_21FA2D2D8((uint64_t)v8, v9, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    swift_endAccess();
    swift_release();
    sub_21FA2D1F8((uint64_t)v7, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 72);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      v12 = swift_retain();
      v13 = sub_21FBDC5C8(v12);
      swift_release();
      *(_QWORD *)(v11 + v10) = v13;
      swift_release();
    }
    v8 = *(void **)(v2 + 80);
    v7 = *(void **)(v2 + 88);
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 72) + *(int *)(v2 + 96))
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    swift_retain();
    sub_21FA2D2D8((uint64_t)v7, v14, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    swift_endAccess();
    swift_release();
  }
  free(v7);
  free(v8);
  free((void *)v2);
}

uint64_t PBUpdateParameters.accessCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
    return 0;
  }
  return *(_QWORD *)v3;
}

uint64_t PBUpdateParameters.accessCode.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

void (*PBUpdateParameters.accessCode.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      v8 = *v5;
      v9 = v5[1];
      goto LABEL_7;
    }
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  v8 = 0;
  v9 = 0xE000000000000000;
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCB864;
}

void sub_21FBCB864(uint64_t a1, char a2)
{
  sub_21FBCCCC4(a1, a2, (void (*)(uint64_t, uint64_t))PBUpdateParameters.accessCode.setter);
}

uint64_t PBUpdateParameters.confirmationB.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_21FC5ACF8();
}

uint64_t PBUpdateParameters.confirmationB.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

uint64_t sub_21FBCB9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = v2;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v19 - v10);
  v12 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v13 = swift_retain();
    v14 = sub_21FBDC5C8(v13);
    swift_release();
    *(_QWORD *)(v3 + v12) = v14;
    swift_release();
  }
  v15 = *(_QWORD *)(v3 + v12);
  *v11 = a1;
  v11[1] = a2;
  v16 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 0, 1, v16);
  sub_21FA2D280((uint64_t)v11, (uint64_t)v9, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v17 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v9, v17, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateParameters.confirmationB.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    v8 = sub_21FC5ACF8();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCBCB8;
}

void sub_21FBCBCB8(uint64_t *a1, char a2)
{
  sub_21FBCC9A8(a1, a2, (void (*)(uint64_t, unint64_t))PBUpdateParameters.confirmationB.setter);
}

uint64_t PBUpdateParameters.pb.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_21FC5ACF8();
}

uint64_t PBUpdateParameters.pb.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

void (*PBUpdateParameters.pb.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    v8 = sub_21FC5ACF8();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCBF4C;
}

void sub_21FBCBF4C(uint64_t *a1, char a2)
{
  sub_21FBCC9A8(a1, a2, (void (*)(uint64_t, unint64_t))PBUpdateParameters.pb.setter);
}

uint64_t PBUpdateParameters.geoEncrypted.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_21FC5ACF8();
}

uint64_t PBUpdateParameters.geoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

void (*PBUpdateParameters.geoEncrypted.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    v8 = sub_21FC5ACF8();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCC1E0;
}

void sub_21FBCC1E0(uint64_t *a1, char a2)
{
  sub_21FBCC9A8(a1, a2, (void (*)(uint64_t, unint64_t))PBUpdateParameters.geoEncrypted.setter);
}

uint64_t PBUpdateParameters.confirmationA.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_21FC5ACF8();
}

uint64_t PBUpdateParameters.confirmationA.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

void (*PBUpdateParameters.confirmationA.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    v8 = sub_21FC5ACF8();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCC474;
}

void sub_21FBCC474(uint64_t *a1, char a2)
{
  sub_21FBCC9A8(a1, a2, (void (*)(uint64_t, unint64_t))PBUpdateParameters.confirmationA.setter);
}

uint64_t PBUpdateParameters.lookupinfoEncrypted.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_21FC5ACF8();
}

uint64_t PBUpdateParameters.lookupinfoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

void (*PBUpdateParameters.lookupinfoEncrypted.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    v8 = sub_21FC5ACF8();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCC708;
}

void sub_21FBCC708(uint64_t *a1, char a2)
{
  sub_21FBCC9A8(a1, a2, (void (*)(uint64_t, unint64_t))PBUpdateParameters.lookupinfoEncrypted.setter);
}

uint64_t PBUpdateParameters.pa.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_21FC5ACF8();
}

uint64_t PBUpdateParameters.pa.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

void (*PBUpdateParameters.pa.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    v8 = sub_21FC5ACF8();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCC99C;
}

void sub_21FBCC99C(uint64_t *a1, char a2)
{
  sub_21FBCC9A8(a1, a2, (void (*)(uint64_t, unint64_t))PBUpdateParameters.pa.setter);
}

void sub_21FBCC9A8(uint64_t *a1, char a2, void (*a3)(uint64_t, unint64_t))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 24);
  v6 = *(void **)(*a1 + 48);
  v7 = *(_QWORD *)(*a1 + 32);
  if ((a2 & 1) != 0)
  {
    sub_21FA32314(*(_QWORD *)(*a1 + 24), v7);
    a3(v5, v7);
    sub_21FA2D770(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
  }
  else
  {
    a3(*(_QWORD *)(*a1 + 24), v7);
  }
  free(v6);
  free((void *)v4);
}

uint64_t PBUpdateParameters.rootDlid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v4, (uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_21FA2D1F8((uint64_t)v3, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
      return *(_QWORD *)v3;
    sub_21FA326EC((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return 0;
}

uint64_t PBUpdateParameters.rootDlid.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBCB9AC(a1, a2);
}

void (*PBUpdateParameters.rootDlid.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    v8 = 0;
    v9 = 0xE000000000000000;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 7)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  v8 = *v5;
  v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_21FBCCCB8;
}

void sub_21FBCCCB8(uint64_t a1, char a2)
{
  sub_21FBCCCC4(a1, a2, (void (*)(uint64_t, uint64_t))PBUpdateParameters.rootDlid.setter);
}

void sub_21FBCCCC4(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v6 = *(void **)(*(_QWORD *)a1 + 48);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    a3(v5, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    a3(*(_QWORD *)(*(_QWORD *)a1 + 24), v7);
  }
  free(v6);
  free(v4);
}

uint64_t PBUpdateParameters.otherData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
      return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBOtherData);
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  type metadata accessor for PBOtherData(0);
  return sub_21FC5AD10();
}

uint64_t PBUpdateParameters.otherData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = sub_21FBDC5C8(v11);
    swift_release();
    *(_QWORD *)(v2 + v10) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v10);
  sub_21FA2D23C(a1, (uint64_t)v9, type metadata accessor for PBOtherData);
  v14 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_21FA2D280((uint64_t)v9, (uint64_t)v7, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v7, v15, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateParameters.otherData.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBOtherData(0) - 8) + 64);
  v3[5] = malloc(v6);
  v7 = malloc(v6);
  v3[6] = v7;
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v9 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    *(_DWORD *)v7 = 0;
    v7[1] = 0;
    v7[2] = 0xE000000000000000;
    sub_21FC5AD10();
    return sub_21FBCD20C;
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
    sub_21FA326EC((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  sub_21FA2D23C((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBOtherData);
  return sub_21FBCD20C;
}

void sub_21FBCD20C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBUpdateParameters.otherData.setter, type metadata accessor for PBOtherData);
}

uint64_t PBUpdateParameters.eventType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB2D5F0(type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType, a1);
}

uint64_t PBUpdateParameters.eventType.setter(uint64_t *a1)
{
  return sub_21FBCEF4C(a1, type metadata accessor for PBUpdateParameters, (void (*)(_QWORD))type metadata accessor for PBUpdateParameters._StorageClass, sub_21FBDC5C8, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
}

void (*PBUpdateParameters.eventType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FBCD2E0;
}

void sub_21FBCD2E0(uint64_t *a1, char a2)
{
  sub_21FBCF0C8(a1, a2, (void (*)(_QWORD))type metadata accessor for PBUpdateParameters._StorageClass, sub_21FBDC5C8, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
}

uint64_t (*PBUpdateParameters.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBUpdateParameters.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBUpdateParameters, &qword_25553DC48, &qword_25554BBF8, a1);
}

uint64_t PBUpdateStateRequest.blobAuth.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FBCD358(type metadata accessor for PBUpdateStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, a1);
}

uint64_t sub_21FBCD358@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - v8;
  v10 = *(_QWORD *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
  v11 = type metadata accessor for PBBlobAuth(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1)
    return sub_21FA2D23C((uint64_t)v9, (uint64_t)a3, type metadata accessor for PBBlobAuth);
  *a3 = MEMORY[0x24BEE4AF8];
  a3[1] = sub_21FC5ACF8();
  a3[2] = v12;
  a3[3] = 0;
  a3[4] = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v9, &qword_255542068, type metadata accessor for PBBlobAuth);
}

uint64_t PBUpdateStateRequest.blobAuth.setter(uint64_t a1)
{
  return sub_21FBCD4CC(a1, &qword_255542068, type metadata accessor for PBBlobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

uint64_t sub_21FBCD4CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  v15 = *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateStateRequest._StorageClass(0);
    swift_allocObject();
    v16 = swift_retain();
    *(_QWORD *)(v4 + v15) = sub_21FBD6900(v16, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters);
    swift_release();
  }
  v17 = *(_QWORD *)(v4 + v15);
  sub_21FA2D23C(a1, (uint64_t)v14, a3);
  v18 = a3(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 0, 1, v18);
  sub_21FA2D280((uint64_t)v14, (uint64_t)v12, a2, a3);
  v19 = v17 + *a4;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v12, v19, a2, a3);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateStateRequest.blobAuth.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBBlobAuth(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    v9[1] = sub_21FC5ACF8();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_255542068, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_21FBCD7F8;
}

void sub_21FBCD7F8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBUpdateStateRequest.blobAuth.setter, type metadata accessor for PBBlobAuth);
}

BOOL PBUpdateStateRequest.hasBlobAuth.getter()
{
  return sub_21FAF57D4(&qword_255542068, type metadata accessor for PBBlobAuth, type metadata accessor for PBUpdateStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

Swift::Void __swiftcall PBUpdateStateRequest.clearBlobAuth()()
{
  sub_21FBCD84C(&qword_255542068, type metadata accessor for PBBlobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

uint64_t sub_21FBCD84C(unint64_t *a1, uint64_t (*a2)(uint64_t), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - v8;
  v10 = *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateStateRequest._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v3 + v10) = sub_21FBD6900(v11, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters);
    swift_release();
  }
  v12 = *(_QWORD *)(v3 + v10);
  v13 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  v14 = v12 + *a3;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v9, v14, a1, a2);
  swift_endAccess();
  return swift_release();
}

uint64_t PBUpdateStateRequest.updateParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  v7 = type metadata accessor for PBUpdateParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBUpdateParameters);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553DC48 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_25554BBF8;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
}

uint64_t sub_21FBCDB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  v8 = type metadata accessor for PBUpdateParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBUpdateParameters);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553DC48 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_25554BBF8;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
}

uint64_t PBUpdateStateRequest.updateParameters.setter(uint64_t a1)
{
  return sub_21FBCD4CC(a1, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters);
}

void (*PBUpdateStateRequest.updateParameters.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBUpdateParameters(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553DC48 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_25554BBF8;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBUpdateParameters);
  }
  return sub_21FBCDE3C;
}

void sub_21FBCDE3C(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBUpdateStateRequest.updateParameters.setter, type metadata accessor for PBUpdateParameters);
}

BOOL PBUpdateStateRequest.hasUpdateParameters.getter()
{
  return sub_21FAF57D4(&qword_25554BCC8, type metadata accessor for PBUpdateParameters, type metadata accessor for PBUpdateStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters);
}

Swift::Void __swiftcall PBUpdateStateRequest.clearUpdateParameters()()
{
  sub_21FBCD84C(&qword_25554BCC8, type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters);
}

uint64_t (*PBUpdateStateRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBUpdateStateRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBUpdateStateRequest, &qword_25553DC58, &qword_25554BC18, a1);
}

uint64_t PBStateResponse.mailboxID.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBStateResponse);
}

uint64_t sub_21FBCDED8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FBDC854(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBStateResponse.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  v6 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_21FBDC854(v7);
    swift_release();
    *(_QWORD *)(v3 + v6) = v8;
    swift_release();
  }
  v9 = *(_QWORD *)(v3 + v6);
  swift_beginAccess();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBStateResponse.mailboxID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FBCE0C8;
}

void sub_21FBCE0C8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      v8 = sub_21FBDC854(v7);
      swift_release();
      *(_QWORD *)(v6 + v5) = v8;
      swift_release();
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v9 + 16) = v3;
    *(_QWORD *)(v9 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      v12 = swift_retain();
      v13 = sub_21FBDC854(v12);
      swift_release();
      *(_QWORD *)(v11 + v10) = v13;
      swift_release();
    }
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v14 + 16) = v3;
    *(_QWORD *)(v14 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBStateResponse.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BCD8, type metadata accessor for PBState);
  v7 = type metadata accessor for PBState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBState);
  sub_21FC5AD10();
  v8 = *(int *)(v7 + 20);
  if (qword_25553DC88 != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = qword_25554BC88;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v5, &qword_25554BCD8, type metadata accessor for PBState);
}

uint64_t sub_21FBCE394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_25554BCD8, type metadata accessor for PBState);
  v8 = type metadata accessor for PBState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBState);
  sub_21FC5AD10();
  v9 = *(int *)(v8 + 20);
  if (qword_25553DC88 != -1)
    swift_once();
  *(_QWORD *)(a2 + v9) = qword_25554BC88;
  swift_retain();
  return sub_21FA2D1F8((uint64_t)v6, &qword_25554BCD8, type metadata accessor for PBState);
}

uint64_t PBStateResponse.state.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = sub_21FBDC854(v11);
    swift_release();
    *(_QWORD *)(v2 + v10) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v10);
  sub_21FA2D23C(a1, (uint64_t)v9, type metadata accessor for PBState);
  v14 = type metadata accessor for PBState(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_21FA2D280((uint64_t)v9, (uint64_t)v7, &qword_25554BCD8, type metadata accessor for PBState);
  v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v7, v15, &qword_25554BCD8, type metadata accessor for PBState);
  swift_endAccess();
  return swift_release();
}

uint64_t PBState.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBState, &qword_25553DC88, &qword_25554BC88, a1);
}

void (*PBStateResponse.state.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25554BCD8, type metadata accessor for PBState);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21FC5AD10();
    v11 = *(int *)(v6 + 20);
    if (qword_25553DC88 != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = qword_25554BC88;
    swift_retain();
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BCD8, type metadata accessor for PBState);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBState);
  }
  return sub_21FBCE860;
}

void sub_21FBCE860(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBStateResponse.state.setter, type metadata accessor for PBState);
}

BOOL PBStateResponse.hasState.getter()
{
  return sub_21FAF57D4(&qword_25554BCD8, type metadata accessor for PBState, type metadata accessor for PBStateResponse, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state);
}

Swift::Void __swiftcall PBStateResponse.clearState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - v3;
  v5 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FBDC854(v6);
    swift_release();
    *(_QWORD *)(v1 + v5) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v1 + v5);
  v9 = type metadata accessor for PBState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = v8
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v4, v10, &qword_25554BCD8, type metadata accessor for PBState);
  swift_endAccess();
  swift_release();
}

uint64_t PBStateResponse.msg.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FBCEA50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBCEAB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_21FBDC854(v6);
    swift_release();
    *(_QWORD *)(a2 + v5) = v7;
    swift_release();
  }
  v8 = (_QWORD *)(*(_QWORD *)(a2 + v5)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  *v8 = v4;
  v8[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBStateResponse.msg.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = v2;
  v6 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_21FBDC854(v7);
    swift_release();
    *(_QWORD *)(v3 + v6) = v8;
    swift_release();
  }
  v9 = (_QWORD *)(*(_QWORD *)(v3 + v6)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  *v9 = a1;
  v9[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*PBStateResponse.msg.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FBCECC8;
}

void sub_21FBCECC8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      v8 = sub_21FBDC854(v7);
      swift_release();
      *(_QWORD *)(v6 + v5) = v8;
      swift_release();
    }
    v9 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
    swift_beginAccess();
    *v9 = v3;
    v9[1] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      v12 = swift_retain();
      v13 = sub_21FBDC854(v12);
      swift_release();
      *(_QWORD *)(v11 + v10) = v13;
      swift_release();
    }
    v14 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
    swift_beginAccess();
    *v14 = v3;
    v14[1] = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBStateResponse.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB2D5F0(type metadata accessor for PBStateResponse, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode, a1);
}

uint64_t sub_21FBCEE58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD), uint64_t (*a7)(uint64_t), _QWORD *a8)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v12 = *a1;
  v13 = *((_BYTE *)a1 + 8);
  v14 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    v15 = swift_retain();
    v16 = a7(v15);
    swift_release();
    *(_QWORD *)(a2 + v14) = v16;
    swift_release();
  }
  v17 = *(_QWORD *)(a2 + v14) + *a8;
  result = swift_beginAccess();
  *(_QWORD *)v17 = v12;
  *(_BYTE *)(v17 + 8) = v13;
  return result;
}

uint64_t PBStateResponse.resultCode.setter(uint64_t *a1)
{
  return sub_21FBCEF4C(a1, type metadata accessor for PBStateResponse, (void (*)(_QWORD))type metadata accessor for PBStateResponse._StorageClass, sub_21FBDC854, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
}

uint64_t sub_21FBCEF4C(uint64_t *a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v9 = v5;
  v10 = *a1;
  v11 = *((_BYTE *)a1 + 8);
  v12 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v13 = swift_retain();
    v14 = a4(v13);
    swift_release();
    *(_QWORD *)(v9 + v12) = v14;
    swift_release();
  }
  v15 = *(_QWORD *)(v9 + v12) + *a5;
  result = swift_beginAccess();
  *(_QWORD *)v15 = v10;
  *(_BYTE *)(v15 + 8) = v11;
  return result;
}

void (*PBStateResponse.resultCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FBCF0AC;
}

void sub_21FBCF0AC(uint64_t *a1, char a2)
{
  sub_21FBCF0C8(a1, a2, (void (*)(_QWORD))type metadata accessor for PBStateResponse._StorageClass, sub_21FBDC854, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
}

void sub_21FBCF0C8(uint64_t *a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 72);
  v11 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v13 = *(int *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 88);
    a3(0);
    swift_allocObject();
    v15 = swift_retain();
    v16 = a4(v15);
    swift_release();
    *(_QWORD *)(v14 + v13) = v16;
    swift_release();
  }
LABEL_4:
  v17 = *(_QWORD *)(*(_QWORD *)(v9 + 88) + *(int *)(v9 + 84)) + *a5;
  swift_beginAccess();
  *(_QWORD *)v17 = v10;
  *(_BYTE *)(v17 + 8) = v11;
  free((void *)v9);
}

uint64_t (*PBStateResponse.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBStateResponse.ResultCode.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 7;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_21FBCF1F8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBStateResponse.ResultCode.init(rawValue:)(*a1, a2);
}

uint64_t sub_21FBCF200()
{
  sub_21FBDF0C0();
  return sub_21FC5AD7C();
}

uint64_t PBStateResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA398EC(type metadata accessor for PBStateResponse, &qword_25553DC68, &qword_25554BC38, a1);
}

void sub_21FBCF25C()
{
  qword_25554BB40 = (uint64_t)&unk_24E481A80;
}

uint64_t static PBStateResponse.ResultCode.allCases.getter()
{
  return sub_21FAFC660(&qword_25553DC00);
}

uint64_t static PBStateResponse.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_21FAFC6D4(a1, &qword_25553DC00, &qword_25554BB40);
}

uint64_t (*static PBStateResponse.ResultCode.allCases.modify())()
{
  if (qword_25553DC00 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21FBCF314@<X0>(_QWORD *a1@<X8>)
{
  return sub_21FAFC7C0(&qword_25553DC00, &qword_25554BB40, a1);
}

double PBGeo.latitude.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void PBGeo.latitude.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*PBGeo.latitude.modify())()
{
  return nullsub_1;
}

double PBGeo.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void PBGeo.longitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*PBGeo.longitude.modify())()
{
  return nullsub_1;
}

uint64_t PBGeo.radius.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t PBGeo.radius.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*PBGeo.radius.modify())()
{
  return nullsub_1;
}

uint64_t PBGeo.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBGeo(0) + 28);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBGeo.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBGeo(0) + 28);
  v4 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBGeo.unknownFields.modify())()
{
  type metadata accessor for PBGeo(0);
  return nullsub_1;
}

uint64_t PBGeo.init()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PBGeo(0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_21FC5AD10();
}

uint64_t PBState.mailboxID.getter()
{
  return sub_21FAF66B4(type metadata accessor for PBState);
}

uint64_t sub_21FBCF48C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBState.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBState.mailboxID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  v3[9] = *(_QWORD *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FBCF674;
}

void sub_21FBCF674(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FBD9604(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 16) = v3;
    *(_QWORD *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FBD9604(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v3;
    *(_QWORD *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBState.actor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 32);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_21FBCF828(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 32) = v3;
  *(_BYTE *)(v7 + 40) = v4;
  return result;
}

uint64_t PBState.actor.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FBD9604(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 32) = v2;
  *(_BYTE *)(v6 + 40) = v3;
  return result;
}

void (*PBState.actor.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 40);
  v3[9] = *(_QWORD *)(v5 + 32);
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FBCFA04;
}

void sub_21FBCFA04(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_21FBD9604(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_QWORD *)(v10 + 32) = v4;
  *(_BYTE *)(v10 + 40) = v5;
  free((void *)v3);
}

uint64_t PBState.accessCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FBCFB38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBCFB90(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBState.accessCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 48) = a1;
  *(_QWORD *)(v7 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBState.accessCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 56);
  v3[9] = *(_QWORD *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FBCFD78;
}

void sub_21FBCFD78(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FBD9604(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 48) = v3;
    *(_QWORD *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FBD9604(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 48) = v3;
    *(_QWORD *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBState.sid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21FBCFF2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 72);
  *a2 = *(_QWORD *)(v3 + 64);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBCFF84(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBState.sid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBState.sid.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 72);
  v3[9] = *(_QWORD *)(v5 + 64);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_21FBD016C;
}

void sub_21FBD016C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v7 = swift_retain();
      *(_QWORD *)(v6 + v5) = sub_21FBD9604(v7);
      swift_release();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v8 + 64) = v3;
    *(_QWORD *)(v8 + 72) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v2 + 96);
      v10 = *(_QWORD *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + v9) = sub_21FBD9604(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v12 + 64) = v3;
    *(_QWORD *)(v12 + 72) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBState.compositeCodeTrials.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 80);
}

uint64_t sub_21FBD0310(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + v4) = sub_21FBD9604(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + v4);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 80) = v3;
  return result;
}

uint64_t PBState.compositeCodeTrials.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(v1 + v3) = sub_21FBD9604(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 80) = a1;
  return result;
}

void (*PBState.compositeCodeTrials.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 80);
  return sub_21FBD04D4;
}

void sub_21FBD04D4(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v7 + v6) = sub_21FBD9604(v8);
    swift_release();
  }
LABEL_4:
  v9 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 80);
  swift_beginAccess();
  *v9 = v4;
  free((void *)v3);
}

uint64_t PBState.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_255542078, v3);
  v8 = sub_21FC5ACEC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  sub_21FC5ACE0();
  return sub_21FA2D1F8((uint64_t)v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

uint64_t sub_21FBD06D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - v6;
  v8 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v8, (uint64_t)v7, &qword_255542078, v4);
  v9 = sub_21FC5ACEC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
  sub_21FC5ACE0();
  return sub_21FA2D1F8((uint64_t)v7, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
}

uint64_t sub_21FBD0808(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_21FC5ACEC();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return PBState.expirationTime.setter((uint64_t)v4);
}

uint64_t PBState.expirationTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - v7;
  v9 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FBD9604(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  v12 = sub_21FC5ACEC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v8, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_255542078, v13);
  v15 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v15, &qword_255542078, v13);
  swift_endAccess();
  return swift_release();
}

void (*PBState.expirationTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v3[4] = v6;
  v7 = sub_21FC5ACEC();
  v3[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[6] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v3[7] = malloc(v9);
  v10 = malloc(v9);
  v3[8] = v10;
  v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_21FA44968(v11, (uint64_t)v6, &qword_255542078, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21FC5ACE0();
    sub_21FA2D1F8((uint64_t)v6, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  return sub_21FBD0B90;
}

void sub_21FBD0B90(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = v2[6];
    v7 = (void *)v2[4];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 56), v4, v5);
    PBState.expirationTime.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v7 = (void *)v2[4];
    PBState.expirationTime.setter(*(_QWORD *)(*(_QWORD *)a1 + 64));
  }
  free(v4);
  free(v3);
  free(v7);
  free(v2);
}

BOOL PBState.hasExpirationTime.getter()
{
  return sub_21FAF57D4(&qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], type metadata accessor for PBState, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime);
}

Swift::Void __swiftcall PBState.clearExpirationTime()()
{
  sub_21FBD1D1C(&qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime);
}

uint64_t PBState.geoEncrypted.getter()
{
  return sub_21FBD0D20(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
}

uint64_t PBState.geoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBD0ED0(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
}

void (*PBState.geoEncrypted.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (uint64_t *)(*(_QWORD *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBD0D08;
}

void sub_21FBD0D08(uint64_t *a1, char a2)
{
  sub_21FBD1028(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
}

uint64_t PBState.pa.getter()
{
  return sub_21FBD0D20(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
}

uint64_t sub_21FBD0D20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20)) + *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  sub_21FA32314(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  return v3;
}

uint64_t sub_21FBD0D88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v4 = (uint64_t *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20)) + *a2);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  *a3 = *v4;
  a3[1] = v6;
  return sub_21FA32314(v5, v6);
}

uint64_t sub_21FBD0DF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;

  v7 = *a1;
  v8 = a1[1];
  v9 = *(int *)(type metadata accessor for PBState(0) + 20);
  sub_21FA32314(v7, v8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(a2 + v9) = sub_21FBD9604(v10);
    swift_release();
  }
  v11 = (uint64_t *)(*(_QWORD *)(a2 + v9) + *a5);
  swift_beginAccess();
  v12 = *v11;
  v13 = v11[1];
  *v11 = v7;
  v11[1] = v8;
  return sub_21FA2D770(v12, v13);
}

uint64_t PBState.pa.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBD0ED0(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
}

uint64_t sub_21FBD0ED0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;

  v7 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v3 + v7) = sub_21FBD9604(v8);
    swift_release();
  }
  v9 = (uint64_t *)(*(_QWORD *)(v3 + v7) + *a3);
  swift_beginAccess();
  v10 = *v9;
  v11 = v9[1];
  *v9 = a1;
  v9[1] = a2;
  return sub_21FA2D770(v10, v11);
}

void (*PBState.pa.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (uint64_t *)(*(_QWORD *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBD101C;
}

void sub_21FBD101C(uint64_t *a1, char a2)
{
  sub_21FBD1028(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
}

void sub_21FBD1028(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 72);
  v6 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    sub_21FA32314(*(_QWORD *)(*a1 + 72), v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = *(int *)(v4 + 96);
      v8 = *(_QWORD *)(v4 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + v7) = sub_21FBD9604(v9);
      swift_release();
    }
    v10 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    v11 = *v10;
    v12 = v10[1];
    *v10 = v5;
    v10[1] = v6;
    sub_21FA2D770(v11, v12);
    v13 = *(_QWORD *)(v4 + 72);
    v14 = *(_QWORD *)(v4 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v15 = *(int *)(v4 + 96);
      v16 = *(_QWORD *)(v4 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      v17 = swift_retain();
      *(_QWORD *)(v16 + v15) = sub_21FBD9604(v17);
      swift_release();
    }
    v18 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    v13 = *v18;
    v14 = v18[1];
    *v18 = v5;
    v18[1] = v6;
  }
  sub_21FA2D770(v13, v14);
  free((void *)v4);
}

uint64_t PBState.pb.getter()
{
  return sub_21FBD0D20(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
}

uint64_t PBState.pb.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBD0ED0(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
}

void (*PBState.pb.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (uint64_t *)(*(_QWORD *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBD1240;
}

void sub_21FBD1240(uint64_t *a1, char a2)
{
  sub_21FBD1028(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
}

uint64_t PBState.confirmationA.getter()
{
  return sub_21FBD0D20(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
}

uint64_t PBState.confirmationA.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBD0ED0(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
}

void (*PBState.confirmationA.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (uint64_t *)(*(_QWORD *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBD12E8;
}

void sub_21FBD12E8(uint64_t *a1, char a2)
{
  sub_21FBD1028(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
}

uint64_t PBState.confirmationB.getter()
{
  return sub_21FBD0D20(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
}

uint64_t PBState.confirmationB.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBD0ED0(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
}

void (*PBState.confirmationB.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (uint64_t *)(*(_QWORD *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBD1390;
}

void sub_21FBD1390(uint64_t *a1, char a2)
{
  sub_21FBD1028(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
}

uint64_t PBState.lookupinfoEncrypted.getter()
{
  return sub_21FBD0D20(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
}

uint64_t PBState.lookupinfoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_21FBD0ED0(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
}

void (*PBState.lookupinfoEncrypted.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = (uint64_t *)(*(_QWORD *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_21FA32314(v6, v7);
  return sub_21FBD1438;
}

void sub_21FBD1438(uint64_t *a1, char a2)
{
  sub_21FBD1028(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
}

uint64_t PBState.step.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FB2D5F0(type metadata accessor for PBState, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step, a1);
}

uint64_t sub_21FBD1458(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(a2 + v5) = sub_21FBD9604(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + v5)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  result = swift_beginAccess();
  *(_QWORD *)v7 = v3;
  *(_BYTE *)(v7 + 8) = v4;
  return result;
}

uint64_t PBState.step.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v1 + v4) = sub_21FBD9604(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  result = swift_beginAccess();
  *(_QWORD *)v6 = v2;
  *(_BYTE *)(v6 + 8) = v3;
  return result;
}

void (*PBState.step.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 8);
  v3[9] = *(_QWORD *)v5;
  *((_BYTE *)v3 + 80) = v6;
  return sub_21FBD1658;
}

void sub_21FBD1658(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  v5 = *(_BYTE *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v3 + 84);
    v8 = *(_QWORD *)(v3 + 88);
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v8 + v7) = sub_21FBD9604(v9);
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + *(int *)(v3 + 84))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  swift_beginAccess();
  *(_QWORD *)v10 = v4;
  *(_BYTE *)(v10 + 8) = v5;
  free((void *)v3);
}

uint64_t PBState.otherData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  sub_21FA44968(v6, (uint64_t)v5, &qword_25554BD38, type metadata accessor for PBOtherData);
  v7 = type metadata accessor for PBOtherData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_21FA2D23C((uint64_t)v5, a1, type metadata accessor for PBOtherData);
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v5, &qword_25554BD38, type metadata accessor for PBOtherData);
}

uint64_t sub_21FBD187C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - v5;
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  sub_21FA44968(v7, (uint64_t)v6, &qword_25554BD38, type metadata accessor for PBOtherData);
  v8 = type metadata accessor for PBOtherData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_21FA2D23C((uint64_t)v6, a2, type metadata accessor for PBOtherData);
  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0xE000000000000000;
  sub_21FC5AD10();
  return sub_21FA2D1F8((uint64_t)v6, &qword_25554BD38, type metadata accessor for PBOtherData);
}

uint64_t PBState.otherData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_21FBD9604(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_21FA2D23C(a1, (uint64_t)v8, type metadata accessor for PBOtherData);
  v12 = type metadata accessor for PBOtherData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_21FA2D280((uint64_t)v8, (uint64_t)v6, &qword_25554BD38, type metadata accessor for PBOtherData);
  v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v6, v13, &qword_25554BD38, type metadata accessor for PBOtherData);
  swift_endAccess();
  return swift_release();
}

void (*PBState.otherData.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for PBOtherData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  sub_21FA44968(v10, (uint64_t)v5, &qword_25554BD38, type metadata accessor for PBOtherData);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_DWORD *)v9 = 0;
    v9[1] = 0;
    v9[2] = 0xE000000000000000;
    sub_21FC5AD10();
    sub_21FA2D1F8((uint64_t)v5, &qword_25554BD38, type metadata accessor for PBOtherData);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBOtherData);
  }
  return sub_21FBD1CC8;
}

void sub_21FBD1CC8(uint64_t a1, char a2)
{
  sub_21FA38454(a1, a2, (void (*)(void *))PBState.otherData.setter, type metadata accessor for PBOtherData);
}

BOOL PBState.hasOtherData.getter()
{
  return sub_21FAF57D4(&qword_25554BD38, type metadata accessor for PBOtherData, type metadata accessor for PBState, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData);
}

Swift::Void __swiftcall PBState.clearOtherData()()
{
  sub_21FBD1D1C(&qword_25554BD38, type metadata accessor for PBOtherData, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData);
}

uint64_t sub_21FBD1D1C(unint64_t *a1, uint64_t (*a2)(uint64_t), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_21FA2D1A0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - v8;
  v10 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v3 + v10) = sub_21FBD9604(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(v3 + v10);
  v13 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  v14 = v12 + *a3;
  swift_beginAccess();
  swift_retain();
  sub_21FA2D2D8((uint64_t)v9, v14, a1, a2);
  swift_endAccess();
  return swift_release();
}

uint64_t (*PBState.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_21FBD1E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BB48);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BB48);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "UNDEFINED";
  *(_QWORD *)(v8 + 8) = 9;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "HEALTH_APP";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "DASHBOARD";
  *((_QWORD *)v14 + 1) = 9;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "UNIVERSAL";
  *((_QWORD *)v16 + 1) = 9;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBActor._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC08, (uint64_t)qword_25554BB48, a1);
}

uint64_t sub_21FBD2068@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC08, (uint64_t)qword_25554BB48, a1);
}

uint64_t sub_21FBD2084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  _QWORD *v54;
  char *v55;
  _QWORD *v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  _QWORD *v60;
  char *v61;
  uint64_t v63;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BB60);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BB60);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_21FC6FAF0;
  v6 = v63 + v5;
  v7 = v63 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v63 + v5) = 0;
  *(_QWORD *)v7 = "UNDEFINED_EVENT";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v63 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 1;
  *(_QWORD *)v11 = "INITIATE";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v63 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "ABORT";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v63 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "GEO_ACCEPT";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v63 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "GEO_DENY";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v63 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "PA_DELIVERY";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v63 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "PA_GENERATE_ERROR";
  *((_QWORD *)v21 + 1) = 17;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v63 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "PB_VERIFY_SUCCESS";
  *((_QWORD *)v23 + 1) = 17;
  v23[16] = 2;
  v10();
  v24 = v63 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 8;
  *(_QWORD *)v24 = "PB_VERIFY_ERROR";
  *(_QWORD *)(v24 + 8) = 15;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v63 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "CONFIRMATIONA_DELIVERY";
  *((_QWORD *)v26 + 1) = 22;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v63 + v5 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 10;
  *(_QWORD *)v28 = "CONFIRMATIONA_GENERATE_ERROR";
  *((_QWORD *)v28 + 1) = 28;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v63 + v5 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 11;
  *(_QWORD *)v30 = "CONFIRMATIONB_VERIFY_SUCCESS";
  *((_QWORD *)v30 + 1) = 28;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v63 + v5 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 12;
  *(_QWORD *)v32 = "CONFIRMATIONB_VERIFY_ERROR";
  *((_QWORD *)v32 + 1) = 26;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v63 + v5 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 13;
  *(_QWORD *)v34 = "LOOKUPINFO_DELIVERY";
  *((_QWORD *)v34 + 1) = 19;
  v34[16] = 2;
  v10();
  v35 = (_QWORD *)(v63 + v5 + 14 * v4);
  v36 = (char *)v35 + *(int *)(v2 + 48);
  *v35 = 14;
  *(_QWORD *)v36 = "LOOKUPINFO_RECEIVED";
  *((_QWORD *)v36 + 1) = 19;
  v36[16] = 2;
  v10();
  v37 = (_QWORD *)(v63 + v5 + 15 * v4);
  v38 = (char *)v37 + *(int *)(v2 + 48);
  *v37 = 15;
  *(_QWORD *)v38 = "ACCESS_CODE_DELIVERY";
  *((_QWORD *)v38 + 1) = 20;
  v38[16] = 2;
  v10();
  v39 = v63 + v5 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 16 * v4) = 16;
  *(_QWORD *)v39 = "GEO_DELIVERY";
  *(_QWORD *)(v39 + 8) = 12;
  *(_BYTE *)(v39 + 16) = 2;
  v10();
  v40 = (_QWORD *)(v63 + v5 + 17 * v4);
  v41 = (char *)v40 + *(int *)(v2 + 48);
  *v40 = 17;
  *(_QWORD *)v41 = "PB_DELIVERY";
  *((_QWORD *)v41 + 1) = 11;
  v41[16] = 2;
  v10();
  v42 = (_QWORD *)(v63 + v5 + 18 * v4);
  v43 = (char *)v42 + *(int *)(v2 + 48);
  *v42 = 18;
  *(_QWORD *)v43 = "PB_GENERATE_ERROR";
  *((_QWORD *)v43 + 1) = 17;
  v43[16] = 2;
  v10();
  v44 = (_QWORD *)(v63 + v5 + 19 * v4);
  v45 = (char *)v44 + *(int *)(v2 + 48);
  *v44 = 19;
  *(_QWORD *)v45 = "PA_VERIFY_SUCCESS";
  *((_QWORD *)v45 + 1) = 17;
  v45[16] = 2;
  v10();
  v46 = (_QWORD *)(v63 + v5 + 20 * v4);
  v47 = (char *)v46 + *(int *)(v2 + 48);
  *v46 = 20;
  *(_QWORD *)v47 = "PA_VERIFY_ERROR";
  *((_QWORD *)v47 + 1) = 15;
  v47[16] = 2;
  v10();
  v48 = (_QWORD *)(v63 + v5 + 21 * v4);
  v49 = (char *)v48 + *(int *)(v2 + 48);
  *v48 = 21;
  *(_QWORD *)v49 = "CONFIRMATIONB_DELIVERY";
  *((_QWORD *)v49 + 1) = 22;
  v49[16] = 2;
  v10();
  v50 = (_QWORD *)(v63 + v5 + 22 * v4);
  v51 = (char *)v50 + *(int *)(v2 + 48);
  *v50 = 22;
  *(_QWORD *)v51 = "CONFIRMATIONB_GENERATE_ERROR";
  *((_QWORD *)v51 + 1) = 28;
  v51[16] = 2;
  v10();
  v52 = (_QWORD *)(v63 + v5 + 23 * v4);
  v53 = (char *)v52 + *(int *)(v2 + 48);
  *v52 = 23;
  *(_QWORD *)v53 = "CONFIRMATIONA_VERIFY_SUCCESS";
  *((_QWORD *)v53 + 1) = 28;
  v53[16] = 2;
  v10();
  v54 = (_QWORD *)(v63 + v5 + 24 * v4);
  v55 = (char *)v54 + *(int *)(v2 + 48);
  *v54 = 24;
  *(_QWORD *)v55 = "CONFIRMATIONA_VERIFY_ERROR";
  *((_QWORD *)v55 + 1) = 26;
  v55[16] = 2;
  v10();
  v56 = (_QWORD *)(v63 + v5 + 25 * v4);
  v57 = (char *)v56 + *(int *)(v2 + 48);
  *v56 = 25;
  *(_QWORD *)v57 = "LOOKUPINFO_DEREF_SUCCESS";
  *((_QWORD *)v57 + 1) = 24;
  v57[16] = 2;
  v10();
  v58 = (_QWORD *)(v63 + v5 + 26 * v4);
  v59 = (char *)v58 + *(int *)(v2 + 48);
  *v58 = 26;
  *(_QWORD *)v59 = "LOOKUPINFO_DEREF_FAIL";
  *((_QWORD *)v59 + 1) = 21;
  v59[16] = 2;
  v10();
  v60 = (_QWORD *)(v63 + v5 + 27 * v4);
  v61 = (char *)v60 + *(int *)(v2 + 48);
  *v60 = 27;
  *(_QWORD *)v61 = "SHARE_OTHER_DATA";
  *((_QWORD *)v61 + 1) = 16;
  v61[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBEventType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC10, (uint64_t)qword_25554BB60, a1);
}

uint64_t sub_21FBD274C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC10, (uint64_t)qword_25554BB60, a1);
}

uint64_t sub_21FBD2768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v43;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BB78);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BB78);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_21FC66560;
  v6 = v43 + v5;
  v7 = v43 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v43 + v5) = 0;
  *(_QWORD *)v7 = "UNDEFINED_STEP";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 1;
  *(_QWORD *)v11 = "ABORTED";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "DISPLAY_COMPOSITE_CODE";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "PENDING_SUBMIT_GEO";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "PENDING_ACKNOWLEDGE_GEO";
  *((_QWORD *)v17 + 1) = 23;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "GENERATE_PA";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "GENERATE_PB";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "PENDING_VERIFY_PB";
  *((_QWORD *)v23 + 1) = 17;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 8;
  *(_QWORD *)v24 = "PENDING_VERIFY_PA";
  *(_QWORD *)(v24 + 8) = 17;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "GENERATE_CONFIRMATIONA";
  *((_QWORD *)v26 + 1) = 22;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 10;
  *(_QWORD *)v28 = "GENERATE_CONFIRMATIONB";
  *((_QWORD *)v28 + 1) = 22;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v6 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 11;
  *(_QWORD *)v30 = "PENDING_VERIFY_CONFIRMATIONB";
  *((_QWORD *)v30 + 1) = 28;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v6 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 12;
  *(_QWORD *)v32 = "PENDING_VERIFY_CONFIRMATIONA";
  *((_QWORD *)v32 + 1) = 28;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v6 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 13;
  *(_QWORD *)v34 = "PENDING_LOOKUPINFO_DELIVERY";
  *((_QWORD *)v34 + 1) = 27;
  v34[16] = 2;
  v10();
  v35 = (_QWORD *)(v6 + 14 * v4);
  v36 = (char *)v35 + *(int *)(v2 + 48);
  *v35 = 14;
  *(_QWORD *)v36 = "VERIFY_LOOKUPINFO_DELIVERED";
  *((_QWORD *)v36 + 1) = 27;
  v36[16] = 2;
  v10();
  v37 = (_QWORD *)(v6 + 15 * v4);
  v38 = (char *)v37 + *(int *)(v2 + 48);
  *v37 = 15;
  *(_QWORD *)v38 = "PENDING_DATA_TRANSFER_SUCCESS";
  *((_QWORD *)v38 + 1) = 29;
  v38[16] = 2;
  v10();
  v39 = v6 + 16 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 16 * v4) = 16;
  *(_QWORD *)v39 = "DATA_TRANSFER_SUCCESS";
  *(_QWORD *)(v39 + 8) = 21;
  *(_BYTE *)(v39 + 16) = 2;
  v10();
  v40 = (_QWORD *)(v6 + 17 * v4);
  v41 = (char *)v40 + *(int *)(v2 + 48);
  *v40 = 17;
  *(_QWORD *)v41 = "OTHER_DATA";
  *((_QWORD *)v41 + 1) = 10;
  v41[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBStep._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC18, (uint64_t)qword_25554BB78, a1);
}

uint64_t sub_21FBD2C30@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC18, (uint64_t)qword_25554BB78, a1);
}

unint64_t static PBPollParameters.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FBD2C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BB90);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BB90);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "actor";
  *(_QWORD *)(v8 + 8) = 5;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "mailbox_id";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBPollParameters._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC20, (uint64_t)qword_25554BB90, a1);
}

uint64_t PBPollParameters.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_21FC5AE3C();
      }
      else if (result == 1)
      {
        sub_21FBDCAD8();
        sub_21FC5ADC4();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBPollParameters.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*v0 || (sub_21FBDCAD8(), result = sub_21FC5AED8(), !v1))
  {
    v3 = v0[3];
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v4 || (result = sub_21FC5AF2C(), !v1))
    {
      type metadata accessor for PBPollParameters(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t PBPollParameters.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPollParameters, &qword_25554BD50, (uint64_t)&protocol conformance descriptor for PBPollParameters);
}

uint64_t sub_21FBD2FDC@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FBD300C()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_21FBD3028()
{
  return PBPollParameters.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBD303C()
{
  return PBPollParameters.traverse<A>(visitor:)();
}

uint64_t sub_21FBD3050()
{
  sub_21FA2A08C(&qword_25554CB18, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
  return sub_21FC5AD70();
}

uint64_t sub_21FBD30A0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC20, (uint64_t)qword_25554BB90, a1);
}

uint64_t sub_21FBD30BC()
{
  sub_21FA2A08C(&qword_25554BE38, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBD30FC()
{
  sub_21FA2A08C(&qword_25554BE38, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
  return sub_21FC5AEA8();
}

unint64_t static PBPollStateRequest.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_21FBD316C(uint64_t a1)
{
  return sub_21FBD66E8(a1, qword_25554BBA8, (uint64_t)"poll_parameters", 15);
}

uint64_t static PBPollStateRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC28, (uint64_t)qword_25554BBA8, a1);
}

uint64_t sub_21FBD31A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for PBPollStateRequest._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  v2 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  v4 = type metadata accessor for PBPollParameters(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_25554BBC0 = v0;
  return result;
}

uint64_t type metadata accessor for PBOtherData(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C070);
}

uint64_t type metadata accessor for PBUpdateParameters(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C108);
}

uint64_t type metadata accessor for PBUpdateParameters._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C548);
}

uint64_t sub_21FBD3274()
{
  return sub_21FBD6B34(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters, &qword_25554BC98, type metadata accessor for PBPollParameters);
}

uint64_t PBPollStateRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBPollStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPollStateRequest._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FBD6900(v2, &qword_25554BC98, type metadata accessor for PBPollParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters);
    swift_release();
  }
  swift_retain();
  sub_21FBD3380();
  return swift_release();
}

uint64_t sub_21FBD3380()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBBlobAuth(0);
        sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBPollParameters(0);
    sub_21FA2A08C(&qword_25554BE38, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
LABEL_5:
    sub_21FC5AE60();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBPollStateRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPollStateRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FBD350C);
}

uint64_t sub_21FBD350C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a4;
  v26 = a2;
  v27 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BC98, type metadata accessor for PBPollParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - v8;
  v25 = type metadata accessor for PBPollParameters(0);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v22 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, v6);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = type metadata accessor for PBBlobAuth(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v18, (uint64_t)v13, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21FA2D1F8((uint64_t)v13, &qword_255542068, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBBlobAuth);
    sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v17, type metadata accessor for PBBlobAuth);
    if (v4)
      return result;
  }
  v20 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_21FA44968(v20, (uint64_t)v9, &qword_25554BC98, type metadata accessor for PBPollParameters);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v25) == 1)
    return sub_21FA2D1F8((uint64_t)v9, &qword_25554BC98, type metadata accessor for PBPollParameters);
  v21 = v22;
  sub_21FA2D23C((uint64_t)v9, v22, type metadata accessor for PBPollParameters);
  sub_21FA2A08C(&qword_25554BE38, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
  sub_21FC5AF50();
  return sub_21FA326EC(v21, type metadata accessor for PBPollParameters);
}

uint64_t static PBPollStateRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBPollStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD385C) & 1;
}

BOOL sub_21FBD385C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v45;
  char v46;
  uint64_t v47;
  uint64_t *v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;

  v57 = a2;
  v54 = type metadata accessor for PBPollParameters(0);
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v48 = (uint64_t *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_25554CB58, &qword_25554BC98, type metadata accessor for PBPollParameters);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v55 = (uint64_t)&v47 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BC98, type metadata accessor for PBPollParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t *)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v53 = (uint64_t)&v47 - v10;
  v11 = type metadata accessor for PBBlobAuth(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v47 - v16;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, v6);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v56 = (uint64_t *)((char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v47 - v21;
  v23 = a1;
  v24 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v24, (uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
  v25 = v57;
  v26 = v57
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_21FA44968((uint64_t)v22, (uint64_t)v17, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA44968(v26, v27, &qword_255542068, type metadata accessor for PBBlobAuth);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) != 1)
  {
    v32 = v23;
    v30 = v25;
    v33 = v56;
    sub_21FA44968((uint64_t)v17, (uint64_t)v56, &qword_255542068, type metadata accessor for PBBlobAuth);
    if (v28(v27, 1, v11) != 1)
    {
      v34 = v50;
      sub_21FA2D23C(v27, (uint64_t)v50, type metadata accessor for PBBlobAuth);
      v31 = v32;
      swift_retain();
      swift_retain();
      v35 = static PBBlobAuth.== infix(_:_:)(v33, v34);
      sub_21FA326EC((uint64_t)v34, type metadata accessor for PBBlobAuth);
      sub_21FA2D1F8((uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
      sub_21FA326EC((uint64_t)v33, type metadata accessor for PBBlobAuth);
      sub_21FA2D1F8((uint64_t)v17, &qword_255542068, type metadata accessor for PBBlobAuth);
      if ((v35 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
    sub_21FA326EC((uint64_t)v33, type metadata accessor for PBBlobAuth);
LABEL_6:
    sub_21FA48E3C((uint64_t)v17, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
  v29 = v28(v27, 1, v11);
  v30 = v25;
  v31 = v23;
  if (v29 != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v17, &qword_255542068, type metadata accessor for PBBlobAuth);
LABEL_9:
  v36 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  v37 = v53;
  sub_21FA44968(v36, v53, &qword_25554BC98, type metadata accessor for PBPollParameters);
  v38 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  v39 = v55;
  v40 = v55 + *(int *)(v51 + 48);
  sub_21FA44968(v37, v55, &qword_25554BC98, type metadata accessor for PBPollParameters);
  sub_21FA44968(v38, v40, &qword_25554BC98, type metadata accessor for PBPollParameters);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  v42 = v54;
  if (v41(v39, 1, v54) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v37, &qword_25554BC98, type metadata accessor for PBPollParameters);
    if (v41(v40, 1, v42) == 1)
    {
      sub_21FA2D1F8(v39, &qword_25554BC98, type metadata accessor for PBPollParameters);
      return 1;
    }
    goto LABEL_14;
  }
  v43 = v49;
  sub_21FA44968(v39, (uint64_t)v49, &qword_25554BC98, type metadata accessor for PBPollParameters);
  if (v41(v40, 1, v42) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v37, &qword_25554BC98, type metadata accessor for PBPollParameters);
    sub_21FA326EC((uint64_t)v43, type metadata accessor for PBPollParameters);
LABEL_14:
    sub_21FA48E3C(v39, &qword_25554CB58, &qword_25554BC98, type metadata accessor for PBPollParameters);
    return 0;
  }
  v45 = v48;
  sub_21FA2D23C(v40, (uint64_t)v48, type metadata accessor for PBPollParameters);
  v46 = _s19HealthRecordsDaemon16PBPollParametersV2eeoiySbAC_ACtFZ_0(v43, v45);
  swift_release();
  swift_release();
  sub_21FA326EC((uint64_t)v45, type metadata accessor for PBPollParameters);
  sub_21FA2D1F8(v37, &qword_25554BC98, type metadata accessor for PBPollParameters);
  sub_21FA326EC((uint64_t)v43, type metadata accessor for PBPollParameters);
  sub_21FA2D1F8(v39, &qword_25554BC98, type metadata accessor for PBPollParameters);
  return (v46 & 1) != 0;
}

uint64_t PBPollStateRequest.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBPollStateRequest, &qword_25554BD58, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
}

uint64_t sub_21FBD3F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DC30, &qword_25554BBC0, a2);
}

unint64_t sub_21FBD3F4C()
{
  return 0xD000000000000030;
}

uint64_t sub_21FBD3F68()
{
  return PBPollStateRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBD3F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPollStateRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FBD3F90()
{
  sub_21FA2A08C(&qword_25554CB10, type metadata accessor for PBPollStateRequest, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
  return sub_21FC5AD70();
}

uint64_t sub_21FBD3FE0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC28, (uint64_t)qword_25554BBA8, a1);
}

uint64_t sub_21FBD3FFC()
{
  sub_21FA2A08C(&qword_25554BE50, type metadata accessor for PBPollStateRequest, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBD403C()
{
  sub_21FA2A08C(&qword_25554BE50, type metadata accessor for PBPollStateRequest, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
  return sub_21FC5AEA8();
}

uint64_t sub_21FBD408C(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBPollStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD385C) & 1;
}

unint64_t static PBOtherData.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_21FBD40D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BBC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BBC8);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F720;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "version";
  *(_QWORD *)(v8 + 8) = 7;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "value";
  *((_QWORD *)v12 + 1) = 5;
  v12[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBOtherData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC38, (uint64_t)qword_25554BBC8, a1);
}

uint64_t PBOtherData.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_21FC5AE3C();
      }
      else if (result == 1)
      {
        sub_21FC5AE0C();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBOtherData.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*(_DWORD *)v0 || (result = sub_21FC5AF08(), !v1))
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = *(_QWORD *)(v0 + 8) & 0xFFFFFFFFFFFFLL;
    if (!v4 || (result = sub_21FC5AF2C(), !v1))
    {
      type metadata accessor for PBOtherData(0);
      return sub_21FC5AD04();
    }
  }
  return result;
}

uint64_t PBOtherData.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBOtherData, &qword_25554BD60, (uint64_t)&protocol conformance descriptor for PBOtherData);
}

uint64_t sub_21FBD43D0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  return sub_21FC5AD10();
}

unint64_t sub_21FBD43F8()
{
  return 0xD000000000000029;
}

uint64_t sub_21FBD4414()
{
  return PBOtherData.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBD4428()
{
  return PBOtherData.traverse<A>(visitor:)();
}

uint64_t sub_21FBD443C()
{
  sub_21FA2A08C(&qword_25554CB08, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
  return sub_21FC5AD70();
}

uint64_t sub_21FBD448C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC38, (uint64_t)qword_25554BBC8, a1);
}

uint64_t sub_21FBD44A8()
{
  sub_21FA2A08C(&qword_25554BE68, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBD44E8()
{
  sub_21FA2A08C(&qword_25554BE68, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
  return sub_21FC5AEA8();
}

unint64_t static PBUpdateParameters.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_21FBD4558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v32;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BBE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BBE0);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_21FC6FB00;
  v6 = v32 + v5;
  v7 = v32 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v32 + v5) = 1;
  *(_QWORD *)v7 = "actor";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v32 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "mailbox_id";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v32 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "access_code";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v32 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "confirmation_b";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v32 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "pb";
  *((_QWORD *)v17 + 1) = 2;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v32 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "geo_encrypted";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v32 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "confirmation_a";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v32 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "lookupinfo_encrypted";
  *((_QWORD *)v23 + 1) = 20;
  v23[16] = 2;
  v10();
  v24 = v32 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "pa";
  *(_QWORD *)(v24 + 8) = 2;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v32 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "root_dlid";
  *((_QWORD *)v26 + 1) = 9;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v32 + v5 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 12;
  *(_QWORD *)v28 = "other_data";
  *((_QWORD *)v28 + 1) = 10;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v32 + v5 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 11;
  *(_QWORD *)v30 = "event_type";
  *((_QWORD *)v30 + 1) = 10;
  v30[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBUpdateParameters._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC40, (uint64_t)qword_25554BBE0, a1);
}

uint64_t sub_21FBD48FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  type metadata accessor for PBUpdateParameters._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  v2 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  qword_25554BBF8 = v0;
  return result;
}

uint64_t sub_21FBD4994()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  return swift_deallocClassInstance();
}

uint64_t PBUpdateParameters.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB52968(a1, a2, a3, type metadata accessor for PBUpdateParameters, (void (*)(_QWORD))type metadata accessor for PBUpdateParameters._StorageClass, sub_21FBDC5C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FBD4A10);
}

uint64_t sub_21FBD4A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  char v49;
  uint64_t v50;
  __int16 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  __int16 *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  __int16 *v118;
  __int16 *v119;
  __int16 *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  __int16 *v129;
  char *v130;
  uint64_t v131;
  __int16 *v132;
  uint64_t v133;
  __int16 *v134;
  uint64_t v135;
  __int128 v136;
  __int16 *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;

  v138 = a4;
  v139 = type metadata accessor for PBOtherData(0);
  v135 = *(_QWORD *)(v139 - 8);
  v6 = MEMORY[0x24BDAC7A8](v139);
  v128 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v124 = (uint64_t)&v116 - v8;
  v9 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  v141 = *(_QWORD *)(v9 - 8);
  v142 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v125 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v126 = (uint64_t)&v116 - v12;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v127 = (uint64_t)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v130 = (char *)&v116 - v17;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, v13);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v129 = (__int16 *)((char *)&v116 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v134 = (__int16 *)((char *)&v116 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v140 = (char *)&v116 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v116 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v131 = (uint64_t)&v116 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v132 = (__int16 *)((char *)&v116 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v133 = (uint64_t)&v116 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v137 = (__int16 *)((char *)&v116 - v38);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (uint64_t *)((char *)&v116 - v40);
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v116 - v42;
  v44 = a1;
  v45 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  v46 = OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  swift_beginAccess();
  v47 = v144;
  v144 = a3;
  result = sub_21FC5AD88();
  v50 = v47;
  if (!v47)
  {
    v121 = v43;
    v122 = v30;
    v123 = v21;
    v120 = (__int16 *)(v44 + v46);
    v119 = (__int16 *)(v44 + 32);
    v118 = (__int16 *)(v44 + 16);
    v51 = &jpt_21FBD4E98;
    v136 = xmmword_21FC5E350;
    v52 = v139;
    v53 = (uint64_t)v140;
    while ((v49 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v51 = v118;
          swift_beginAccess();
          sub_21FBDCAD8();
          v56 = v50;
          sub_21FC5ADC4();
          goto LABEL_12;
        case 2:
          v51 = v119;
          swift_beginAccess();
          v56 = v50;
          sub_21FC5AE3C();
LABEL_12:
          v50 = v56;
          swift_endAccess();
          goto LABEL_7;
        case 3:
          v57 = (uint64_t)v121;
          sub_21FA44968(v45, (uint64_t)v121, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v57, 1, v142);
          sub_21FA2D1F8(v57, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v58 != 1)
            sub_21FC5AD94();
          v53 = (uint64_t)v140;
          v51 = &jpt_21FBD4E98;
          v143 = 0uLL;
          sub_21FC5AE30();
          v59 = *((_QWORD *)&v143 + 1);
          if (!*((_QWORD *)&v143 + 1))
            goto LABEL_49;
          *v41 = v143;
          v41[1] = v59;
          v60 = v142;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v41, 0, 1, v60);
          v61 = (uint64_t)v137;
          sub_21FA2D280((uint64_t)v41, (uint64_t)v137, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_beginAccess();
          v62 = v61;
          v51 = &jpt_21FBD4E98;
          v63 = v45;
          v53 = (uint64_t)v140;
          goto LABEL_48;
        case 4:
          v51 = (__int16 *)v45;
          v64 = v45;
          v65 = v133;
          sub_21FA44968(v64, v133, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v65, 1, v142);
          sub_21FA2D1F8(v65, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v66 != 1)
            sub_21FC5AD94();
          v53 = (uint64_t)v140;
          v45 = (uint64_t)v51;
          v143 = v136;
          sub_21FC5ADE8();
          v67 = *((_QWORD *)&v143 + 1);
          if (*((_QWORD *)&v143 + 1) >> 60 == 15)
            goto LABEL_6;
          v68 = v142;
          *v41 = v143;
          v41[1] = v67;
          goto LABEL_4;
        case 5:
          v51 = v132;
          sub_21FA44968(v45, (uint64_t)v132, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v69 = (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v141 + 48))(v51, 1, v142);
          sub_21FA2D1F8((uint64_t)v51, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v69 != 1)
            sub_21FC5AD94();
          v53 = (uint64_t)v140;
          v143 = v136;
          sub_21FC5ADE8();
          v70 = *((_QWORD *)&v143 + 1);
          if (*((_QWORD *)&v143 + 1) >> 60 == 15)
            goto LABEL_6;
          v68 = v142;
          *v41 = v143;
          v41[1] = v70;
          goto LABEL_4;
        case 6:
          v51 = (__int16 *)v45;
          v71 = v45;
          v72 = v131;
          sub_21FA44968(v71, v131, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v72, 1, v142);
          sub_21FA2D1F8(v72, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v73 != 1)
            sub_21FC5AD94();
          v53 = (uint64_t)v140;
          v45 = (uint64_t)v51;
          v143 = v136;
          sub_21FC5ADE8();
          v74 = *((_QWORD *)&v143 + 1);
          if (*((_QWORD *)&v143 + 1) >> 60 == 15)
            goto LABEL_6;
          v68 = v142;
          *v41 = v143;
          v41[1] = v74;
LABEL_4:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v41, 0, 1, v68);
          v54 = (uint64_t)v41;
          v51 = v137;
          v55 = (uint64_t)v137;
          goto LABEL_5;
        case 7:
          v75 = v45;
          v76 = v45;
          v77 = (uint64_t)v122;
          sub_21FA44968(v76, (uint64_t)v122, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v77, 1, v142);
          sub_21FA2D1F8(v77, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v53 = (uint64_t)v140;
          v45 = v75;
          v51 = &jpt_21FBD4E98;
          v143 = v136;
          sub_21FC5ADE8();
          v99 = *((_QWORD *)&v143 + 1);
          if (*((_QWORD *)&v143 + 1) >> 60 == 15)
            goto LABEL_49;
          *v41 = v143;
          v41[1] = v99;
          v100 = v45;
          v101 = v142;
          swift_storeEnumTagMultiPayload();
          v102 = v101;
          v45 = v100;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v41, 0, 1, v102);
          v103 = (uint64_t)v137;
          sub_21FA2D280((uint64_t)v41, (uint64_t)v137, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_beginAccess();
          v62 = v103;
          v51 = &jpt_21FBD4E98;
          v63 = v45;
          goto LABEL_48;
        case 8:
          sub_21FA44968(v45, v53, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v53, 1, v142);
          v79 = v53;
          v80 = v78;
          sub_21FA2D1F8(v79, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v80 != 1)
            sub_21FC5AD94();
          v53 = (uint64_t)v140;
          v143 = v136;
          sub_21FC5ADE8();
          v81 = *((_QWORD *)&v143 + 1);
          if (*((_QWORD *)&v143 + 1) >> 60 == 15)
            goto LABEL_49;
          *v41 = v143;
          v41[1] = v81;
          v82 = v51;
          v83 = v45;
          v84 = v142;
          swift_storeEnumTagMultiPayload();
          v85 = v84;
          v45 = v83;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v41, 0, 1, v85);
          v86 = (uint64_t)v137;
          sub_21FA2D280((uint64_t)v41, (uint64_t)v137, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_beginAccess();
          v62 = v86;
          v51 = v82;
          v63 = v45;
LABEL_48:
          sub_21FA2D2D8(v62, v63, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_endAccess();
LABEL_49:
          v52 = v139;
          goto LABEL_7;
        case 9:
          v51 = v134;
          sub_21FA44968(v45, (uint64_t)v134, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v87 = (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v141 + 48))(v51, 1, v142);
          sub_21FA2D1F8((uint64_t)v51, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v87 != 1)
            sub_21FC5AD94();
          v53 = (uint64_t)v140;
          v143 = v136;
          sub_21FC5ADE8();
          v88 = *((_QWORD *)&v143 + 1);
          if (*((_QWORD *)&v143 + 1) >> 60 == 15)
            goto LABEL_6;
          *v41 = v143;
          v41[1] = v88;
          v89 = v45;
          v90 = v142;
          goto LABEL_42;
        case 10:
          v51 = v129;
          sub_21FA44968(v45, (uint64_t)v129, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          v91 = (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v141 + 48))(v51, 1, v142);
          sub_21FA2D1F8((uint64_t)v51, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v91 != 1)
            sub_21FC5AD94();
          v53 = (uint64_t)v140;
          v143 = 0uLL;
          sub_21FC5AE30();
          v92 = *((_QWORD *)&v143 + 1);
          if (!*((_QWORD *)&v143 + 1))
            goto LABEL_6;
          *v41 = v143;
          v41[1] = v92;
          v89 = v45;
          v90 = v142;
LABEL_42:
          swift_storeEnumTagMultiPayload();
          v93 = v90;
          v45 = v89;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v41, 0, 1, v93);
          v54 = (uint64_t)v41;
          v51 = v137;
          v55 = (uint64_t)v137;
LABEL_5:
          sub_21FA2D280(v54, v55, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_beginAccess();
          sub_21FA2D2D8((uint64_t)v51, v45, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_endAccess();
LABEL_6:
          v52 = v139;
          goto LABEL_7;
        case 11:
          v51 = v120;
          swift_beginAccess();
          sub_21FBDF148();
          sub_21FC5ADC4();
          swift_endAccess();
          goto LABEL_7;
        case 12:
          v117 = v41;
          v94 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 + 56);
          v95 = v45;
          v96 = (uint64_t)v130;
          v94(v130, 1, 1, v52);
          v116 = v95;
          v97 = v95;
          v98 = (uint64_t)v123;
          sub_21FA44968(v97, (uint64_t)v123, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v98, 1, v142) == 1)
          {
            sub_21FA2D1F8(v98, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
          }
          else
          {
            v104 = v98;
            v105 = v126;
            sub_21FA2D23C(v104, v126, type metadata accessor for PBUpdateParameters.OneOf_Data);
            sub_21FC5AD94();
            v106 = v105;
            v107 = v125;
            sub_21FA2D23C(v106, v125, type metadata accessor for PBUpdateParameters.OneOf_Data);
            if (swift_getEnumCaseMultiPayload() == 8)
            {
              sub_21FA2D1F8(v96, &qword_25554BD38, type metadata accessor for PBOtherData);
              v108 = v107;
              v109 = v124;
              sub_21FA2D23C(v108, v124, type metadata accessor for PBOtherData);
              sub_21FA2D23C(v109, v96, type metadata accessor for PBOtherData);
              v52 = v139;
              v94((char *)v96, 0, 1, v139);
              v110 = (uint64_t)v128;
              v41 = v117;
              v51 = &jpt_21FBD4E98;
              goto LABEL_54;
            }
            sub_21FA326EC(v107, type metadata accessor for PBUpdateParameters.OneOf_Data);
          }
          v110 = (uint64_t)v128;
          v41 = v117;
          v51 = &jpt_21FBD4E98;
          v52 = v139;
LABEL_54:
          sub_21FA2A08C(&qword_25554BE68, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
          sub_21FC5AE60();
          v111 = v96;
          v112 = v127;
          sub_21FA2D280(v111, v127, &qword_25554BD38, type metadata accessor for PBOtherData);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v112, 1, v52) == 1)
          {
            sub_21FA2D1F8(v112, &qword_25554BD38, type metadata accessor for PBOtherData);
            v53 = (uint64_t)v140;
            v45 = v116;
          }
          else
          {
            sub_21FA2D23C(v112, v110, type metadata accessor for PBOtherData);
            sub_21FA2D23C(v110, (uint64_t)v41, type metadata accessor for PBOtherData);
            v113 = v142;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v41, 0, 1, v113);
            v114 = (uint64_t)v137;
            sub_21FA2D280((uint64_t)v41, (uint64_t)v137, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
            v45 = v116;
            swift_beginAccess();
            v115 = v114;
            v51 = &jpt_21FBD4E98;
            sub_21FA2D2D8(v115, v45, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
            swift_endAccess();
            v53 = (uint64_t)v140;
          }
LABEL_7:
          result = sub_21FC5AD88();
          break;
        default:
          goto LABEL_7;
      }
    }
  }
  return result;
}

uint64_t PBUpdateParameters.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBUpdateParameters, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FBD5AAC);
}

uint64_t sub_21FBD5AAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v33 = type metadata accessor for PBOtherData(0);
  MEMORY[0x24BDAC7A8](v33);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v25 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  swift_beginAccess();
  if (!*(_QWORD *)(a1 + 16)
    || (v14 = *(_BYTE *)(a1 + 24), v31 = *(_QWORD *)(a1 + 16), v32 = v14, sub_21FBDCAD8(), result = sub_21FC5AED8(), !v1))
  {
    v28 = v4;
    swift_beginAccess();
    v16 = *(_QWORD *)(a1 + 40);
    v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0)
      v17 = *(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
    if (v17)
    {
      swift_bridgeObjectRetain();
      sub_21FC5AF2C();
      if (v1)
        return swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v18 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    v27 = v18;
    sub_21FA44968(v18, (uint64_t)v13, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    v19 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    if (v26(v13, 1, v19) != 1)
    {
      sub_21FA44968((uint64_t)v13, (uint64_t)v11, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
      v23 = (char *)&loc_21FBD5DF4 + 4 * byte_21FC6FB28[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    sub_21FA2D1F8((uint64_t)v13, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    v20 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
    swift_beginAccess();
    v21 = *(_QWORD *)v20;
    v22 = *(unsigned __int8 *)(v20 + 8);
    if (sub_21FA2EDE0(v21, v22, 0) || (v29 = v21, v30 = v22, sub_21FBDF148(), result = sub_21FC5AED8(), !v1))
    {
      sub_21FA44968(v27, (uint64_t)v8, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
      if (v26(v8, 1, v19) == 1)
      {
        return sub_21FA2D1F8((uint64_t)v8, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
      }
      else if (swift_getEnumCaseMultiPayload() == 8)
      {
        v24 = (uint64_t)v28;
        sub_21FA2D23C((uint64_t)v8, (uint64_t)v28, type metadata accessor for PBOtherData);
        sub_21FA2A08C(&qword_25554BE68, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
        sub_21FC5AF50();
        return sub_21FA326EC(v24, type metadata accessor for PBOtherData);
      }
      else
      {
        return sub_21FA326EC((uint64_t)v8, type metadata accessor for PBUpdateParameters.OneOf_Data);
      }
    }
  }
  return result;
}

void sub_21FBD5FEC()
{
  uint64_t v0;

  sub_21FA326EC(v0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  JUMPOUT(0x21FBD5CD0);
}

uint64_t static PBUpdateParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD6030) & 1;
}

BOOL sub_21FBD6030(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v4 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554CB50, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - v10;
  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v39 - v16;
  swift_beginAccess();
  v18 = a1[2];
  swift_beginAccess();
  v19 = *(_QWORD *)(a2 + 16);
  if (*(_BYTE *)(a2 + 24) == 1)
    __asm { BR              X10 }
  if (v18 != v19)
    return 0;
  v40 = v7;
  v41 = v4;
  swift_beginAccess();
  v20 = a1[4];
  v21 = a1[5];
  swift_beginAccess();
  if (v20 == *(_QWORD *)(a2 + 32) && v21 == *(_QWORD *)(a2 + 40) || (v22 = sub_21FC5BDF0(), v23 = 0, (v22 & 1) != 0))
  {
    v39 = v15;
    v24 = (uint64_t)a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    sub_21FA44968(v24, (uint64_t)v17, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    v25 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_21FA44968((uint64_t)v17, (uint64_t)v11, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    sub_21FA44968(v25, v26, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v28 = v41;
    if (v27((uint64_t)v11, 1, v41) == 1)
    {
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v17, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
      if (v27(v26, 1, v28) == 1)
      {
        sub_21FA2D1F8((uint64_t)v11, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_17:
        v34 = (char *)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
        swift_beginAccess();
        v35 = *(_QWORD *)v34;
        v36 = v34[8];
        swift_release();
        v37 = (uint64_t *)(a2
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
        swift_beginAccess();
        v38 = *v37;
        swift_release();
        return sub_21FA2EDE0(v35, v36, v38);
      }
    }
    else
    {
      v29 = (uint64_t)v39;
      sub_21FA44968((uint64_t)v11, (uint64_t)v39, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
      if (v27(v26, 1, v28) != 1)
      {
        v31 = v40;
        sub_21FA2D23C(v26, (uint64_t)v40, type metadata accessor for PBUpdateParameters.OneOf_Data);
        swift_retain();
        swift_retain();
        _s19HealthRecordsDaemon18PBUpdateParametersV10OneOf_DataO2eeoiySbAE_AEtFZ_0(v29, v31);
        v33 = v32;
        sub_21FA326EC((uint64_t)v31, type metadata accessor for PBUpdateParameters.OneOf_Data);
        sub_21FA2D1F8((uint64_t)v17, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
        sub_21FA326EC(v29, type metadata accessor for PBUpdateParameters.OneOf_Data);
        sub_21FA2D1F8((uint64_t)v11, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
        if ((v33 & 1) != 0)
          goto LABEL_17;
        goto LABEL_13;
      }
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v17, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
      sub_21FA326EC(v29, type metadata accessor for PBUpdateParameters.OneOf_Data);
    }
    sub_21FA48E3C((uint64_t)v11, &qword_25554CB50, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_13:
    swift_release();
    swift_release();
    return 0;
  }
  return v23;
}

uint64_t PBUpdateParameters.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBUpdateParameters, &qword_25554BD68, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
}

uint64_t sub_21FBD6530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DC48, &qword_25554BBF8, a2);
}

unint64_t sub_21FBD654C()
{
  return 0xD000000000000030;
}

uint64_t sub_21FBD6568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBUpdateParameters.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FBD657C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBUpdateParameters.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FBD6590()
{
  sub_21FA2A08C(&qword_25554CB00, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
  return sub_21FC5AD70();
}

uint64_t sub_21FBD65E0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC40, (uint64_t)qword_25554BBE0, a1);
}

uint64_t sub_21FBD65FC()
{
  sub_21FA2A08C(&qword_25554BE80, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBD663C()
{
  sub_21FA2A08C(&qword_25554BE80, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
  return sub_21FC5AEA8();
}

uint64_t sub_21FBD668C(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD6030) & 1;
}

unint64_t static PBUpdateStateRequest.protoMessageName.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_21FBD66D0(uint64_t a1)
{
  return sub_21FBD66E8(a1, qword_25554BC00, (uint64_t)"update_parameters", 17);
}

uint64_t sub_21FBD66E8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  char *v17;

  v5 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_21FC5F720;
  v12 = (_QWORD *)(v11 + v10);
  v13 = v11 + v10 + *(int *)(v7 + 48);
  *v12 = 1;
  *(_QWORD *)v13 = "blob_auth";
  *(_QWORD *)(v13 + 8) = 9;
  *(_BYTE *)(v13 + 16) = 2;
  v14 = *MEMORY[0x24BE5C328];
  v15 = sub_21FC5AF5C();
  v16 = *(void (**)(void))(*(_QWORD *)(v15 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v13, v14, v15);
  v17 = (char *)v12 + v9 + *(int *)(v7 + 48);
  *(_QWORD *)((char *)v12 + v9) = 2;
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  v17[16] = 2;
  v16();
  return sub_21FC5AF68();
}

uint64_t static PBUpdateStateRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC50, (uint64_t)qword_25554BC00, a1);
}

uint64_t sub_21FBD6868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for PBUpdateStateRequest._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  v2 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  v4 = type metadata accessor for PBUpdateParameters(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_25554BC18 = v0;
  return result;
}

uint64_t sub_21FBD6900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;

  v28 = a2;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - v12;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, v10);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - v15;
  v17 = *a4;
  v27 = v5;
  v18 = v5 + v17;
  v19 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = v5 + *a5;
  v21 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = a1 + *a4;
  swift_beginAccess();
  sub_21FA44968(v22, (uint64_t)v16, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v16, v18, &qword_255542068, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  v23 = a1 + *a5;
  swift_beginAccess();
  v24 = v28;
  sub_21FA44968(v23, (uint64_t)v13, v28, a3);
  swift_release();
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v13, v20, v24, a3);
  swift_endAccess();
  return v27;
}

uint64_t sub_21FBD6B10()
{
  return sub_21FBD6B34(&OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
}

uint64_t sub_21FBD6B34(_QWORD *a1, _QWORD *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;

  sub_21FA2D1F8(v4 + *a1, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA2D1F8(v4 + *a2, a3, a4);
  return swift_deallocClassInstance();
}

uint64_t PBUpdateStateRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateStateRequest._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FBD6900(v2, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters);
    swift_release();
  }
  swift_retain();
  sub_21FBD6C88();
  return swift_release();
}

uint64_t sub_21FBD6C88()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBBlobAuth(0);
        sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
        goto LABEL_5;
      }
LABEL_6:
      result = sub_21FC5AD88();
    }
    swift_beginAccess();
    type metadata accessor for PBUpdateParameters(0);
    sub_21FA2A08C(&qword_25554BE80, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
LABEL_5:
    sub_21FC5AE60();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBUpdateStateRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBUpdateStateRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FBD6E14);
}

uint64_t sub_21FBD6E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a4;
  v26 = a2;
  v27 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - v8;
  v25 = type metadata accessor for PBUpdateParameters(0);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v22 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, v6);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = type metadata accessor for PBBlobAuth(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v18, (uint64_t)v13, &qword_255542068, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21FA2D1F8((uint64_t)v13, &qword_255542068, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBBlobAuth);
    sub_21FA2A08C(&qword_255542280, type metadata accessor for PBBlobAuth, (uint64_t)&protocol conformance descriptor for PBBlobAuth);
    sub_21FC5AF50();
    result = sub_21FA326EC((uint64_t)v17, type metadata accessor for PBBlobAuth);
    if (v4)
      return result;
  }
  v20 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_21FA44968(v20, (uint64_t)v9, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v25) == 1)
    return sub_21FA2D1F8((uint64_t)v9, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  v21 = v22;
  sub_21FA2D23C((uint64_t)v9, v22, type metadata accessor for PBUpdateParameters);
  sub_21FA2A08C(&qword_25554BE80, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
  sub_21FC5AF50();
  return sub_21FA326EC(v21, type metadata accessor for PBUpdateParameters);
}

uint64_t static PBUpdateStateRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBUpdateStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD7164) & 1;
}

BOOL sub_21FBD7164(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;

  v57 = a2;
  v54 = type metadata accessor for PBUpdateParameters(0);
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v48 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554CB48, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v55 = (uint64_t)&v47 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BCC8, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (uint64_t)&v47 - v10;
  v11 = type metadata accessor for PBBlobAuth(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA48F60(0, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v47 - v16;
  sub_21FA2D1A0(0, &qword_255542068, type metadata accessor for PBBlobAuth, v6);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v56 = (uint64_t *)((char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v47 - v21;
  v23 = a1;
  v24 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_21FA44968(v24, (uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
  v25 = v57;
  v26 = v57
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_21FA44968((uint64_t)v22, (uint64_t)v17, &qword_255542068, type metadata accessor for PBBlobAuth);
  sub_21FA44968(v26, v27, &qword_255542068, type metadata accessor for PBBlobAuth);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) != 1)
  {
    v32 = v23;
    v30 = v25;
    v33 = v56;
    sub_21FA44968((uint64_t)v17, (uint64_t)v56, &qword_255542068, type metadata accessor for PBBlobAuth);
    if (v28(v27, 1, v11) != 1)
    {
      v34 = v50;
      sub_21FA2D23C(v27, (uint64_t)v50, type metadata accessor for PBBlobAuth);
      v31 = v32;
      swift_retain();
      swift_retain();
      v35 = static PBBlobAuth.== infix(_:_:)(v33, v34);
      sub_21FA326EC((uint64_t)v34, type metadata accessor for PBBlobAuth);
      sub_21FA2D1F8((uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
      sub_21FA326EC((uint64_t)v33, type metadata accessor for PBBlobAuth);
      sub_21FA2D1F8((uint64_t)v17, &qword_255542068, type metadata accessor for PBBlobAuth);
      if ((v35 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_21FA2D1F8((uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
    sub_21FA326EC((uint64_t)v33, type metadata accessor for PBBlobAuth);
LABEL_6:
    sub_21FA48E3C((uint64_t)v17, &qword_2555437E0, &qword_255542068, type metadata accessor for PBBlobAuth);
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  sub_21FA2D1F8((uint64_t)v22, &qword_255542068, type metadata accessor for PBBlobAuth);
  v29 = v28(v27, 1, v11);
  v30 = v25;
  v31 = v23;
  if (v29 != 1)
    goto LABEL_6;
  sub_21FA2D1F8((uint64_t)v17, &qword_255542068, type metadata accessor for PBBlobAuth);
LABEL_9:
  v36 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  v37 = v53;
  sub_21FA44968(v36, v53, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  v38 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  v39 = v55;
  v40 = v55 + *(int *)(v51 + 48);
  sub_21FA44968(v37, v55, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  sub_21FA44968(v38, v40, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  v42 = v54;
  if (v41(v39, 1, v54) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v37, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
    if (v41(v40, 1, v42) == 1)
    {
      sub_21FA2D1F8(v39, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
      return 1;
    }
    goto LABEL_14;
  }
  v43 = v49;
  sub_21FA44968(v39, v49, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  if (v41(v40, 1, v42) == 1)
  {
    swift_release();
    swift_release();
    sub_21FA2D1F8(v37, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
    sub_21FA326EC(v43, type metadata accessor for PBUpdateParameters);
LABEL_14:
    sub_21FA48E3C(v39, &qword_25554CB48, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
    return 0;
  }
  v45 = v48;
  sub_21FA2D23C(v40, v48, type metadata accessor for PBUpdateParameters);
  v46 = sub_21FA449D4(v43, v45, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD6030);
  swift_release();
  swift_release();
  sub_21FA326EC(v45, type metadata accessor for PBUpdateParameters);
  sub_21FA2D1F8(v37, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  sub_21FA326EC(v43, type metadata accessor for PBUpdateParameters);
  sub_21FA2D1F8(v39, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
  return (v46 & 1) != 0;
}

uint64_t PBUpdateStateRequest.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBUpdateStateRequest, &qword_25554BD70, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
}

uint64_t sub_21FBD7844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DC58, &qword_25554BC18, a2);
}

unint64_t sub_21FBD7860()
{
  return 0xD000000000000032;
}

uint64_t sub_21FBD787C()
{
  return PBUpdateStateRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBD7890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBUpdateStateRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FBD78A4()
{
  sub_21FA2A08C(&qword_25554CAF8, type metadata accessor for PBUpdateStateRequest, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
  return sub_21FC5AD70();
}

uint64_t sub_21FBD78F4@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC50, (uint64_t)qword_25554BC00, a1);
}

uint64_t sub_21FBD7910()
{
  sub_21FA2A08C(&qword_25554BE98, type metadata accessor for PBUpdateStateRequest, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBD7950()
{
  sub_21FA2A08C(&qword_25554BE98, type metadata accessor for PBUpdateStateRequest, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
  return sub_21FC5AEA8();
}

uint64_t sub_21FBD79A0(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBUpdateStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD7164) & 1;
}

unint64_t static PBStateResponse.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FBD79E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BC20);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BC20);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC603D0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 1;
  *(_QWORD *)v8 = "mailbox_id";
  *(_QWORD *)(v8 + 8) = 10;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C328];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "state";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "msg";
  *((_QWORD *)v14 + 1) = 3;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "result_code";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBStateResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC60, (uint64_t)qword_25554BC20, a1);
}

uint64_t sub_21FBD7BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;

  type metadata accessor for PBStateResponse._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  v2 = type metadata accessor for PBState(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  qword_25554BC38 = v0;
  return result;
}

uint64_t sub_21FBD7C80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state, &qword_25554BCD8, type metadata accessor for PBState);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBStateResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FB52968(a1, a2, a3, type metadata accessor for PBStateResponse, (void (*)(_QWORD))type metadata accessor for PBStateResponse._StorageClass, sub_21FBDC854, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FBD7D10);
}

uint64_t sub_21FBD7D10()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBState(0);
          sub_21FA2A08C(&qword_25554BEE0, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
          v4 = v3;
          sub_21FC5AE60();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_21FBDF0C0();
          v4 = v3;
          sub_21FC5ADC4();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBStateResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBStateResponse, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FBD7EFC);
}

uint64_t sub_21FBD7EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26[3];
  char v27;
  uint64_t v28;

  v5 = v4;
  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v26 - v10;
  v12 = type metadata accessor for PBState(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v26[0] = (uint64_t)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 24);
  v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v16 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  v28 = a4;
  v26[1] = a3;
  if (!v16 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v4))
  {
    v18 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
    swift_beginAccess();
    sub_21FA44968(v18, (uint64_t)v11, &qword_25554BCD8, type metadata accessor for PBState);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_21FA2D1F8((uint64_t)v11, &qword_25554BCD8, type metadata accessor for PBState);
    }
    else
    {
      v19 = v26[0];
      sub_21FA2D23C((uint64_t)v11, v26[0], type metadata accessor for PBState);
      sub_21FA2A08C(&qword_25554BEE0, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
      sub_21FC5AF50();
      result = sub_21FA326EC(v19, type metadata accessor for PBState);
      if (v4)
        return result;
    }
    v20 = (uint64_t *)(a1
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
    swift_beginAccess();
    v21 = *v20;
    v22 = v20[1];
    v23 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0)
      v23 = v21 & 0xFFFFFFFFFFFFLL;
    if (!v23 || (swift_bridgeObjectRetain(), sub_21FC5AF2C(), result = swift_bridgeObjectRelease(), !v5))
    {
      v24 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
      result = swift_beginAccess();
      if (*(_QWORD *)v24)
      {
        v25 = *(_BYTE *)(v24 + 8);
        v26[2] = *(_QWORD *)v24;
        v27 = v25;
        sub_21FBDF0C0();
        return sub_21FC5AED8();
      }
    }
  }
  return result;
}

uint64_t static PBStateResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBStateResponse, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD8210) & 1;
}

BOOL sub_21FBD8210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _BOOL8 result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for PBState(0);
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554CB40, &qword_25554BCD8, type metadata accessor for PBState);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - v9;
  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v36 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - v14;
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v16 == *(_QWORD *)(a2 + 16) && v17 == *(_QWORD *)(a2 + 24)
    || (v18 = sub_21FC5BDF0(), result = 0, (v18 & 1) != 0))
  {
    v35 = v6;
    v20 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
    swift_beginAccess();
    sub_21FA44968(v20, (uint64_t)v15, &qword_25554BCD8, type metadata accessor for PBState);
    v21 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
    swift_beginAccess();
    v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_21FA44968((uint64_t)v15, (uint64_t)v10, &qword_25554BCD8, type metadata accessor for PBState);
    sub_21FA44968(v21, v22, &qword_25554BCD8, type metadata accessor for PBState);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
    if (v23((uint64_t)v10, 1, v4) == 1)
    {
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v15, &qword_25554BCD8, type metadata accessor for PBState);
      if (v23(v22, 1, v4) == 1)
      {
        sub_21FA2D1F8((uint64_t)v10, &qword_25554BCD8, type metadata accessor for PBState);
LABEL_11:
        v27 = (uint64_t *)(a1
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
        swift_beginAccess();
        v28 = *v27;
        v29 = v27[1];
        v30 = (_QWORD *)(a2
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
        swift_beginAccess();
        if (v28 == *v30 && v29 == v30[1] || (sub_21FC5BDF0() & 1) != 0)
        {
          v31 = (uint64_t *)(a1
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
          swift_beginAccess();
          v32 = *v31;
          swift_release();
          v33 = (uint64_t *)(a2
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
          swift_beginAccess();
          v34 = *v33;
          LODWORD(v33) = *((unsigned __int8 *)v33 + 8);
          swift_release();
          if ((_DWORD)v33 == 1)
            __asm { BR              X9 }
          return v32 == v34;
        }
LABEL_16:
        swift_release();
        swift_release();
        return 0;
      }
    }
    else
    {
      v24 = v36;
      sub_21FA44968((uint64_t)v10, v36, &qword_25554BCD8, type metadata accessor for PBState);
      if (v23(v22, 1, v4) != 1)
      {
        v25 = (uint64_t)v35;
        sub_21FA2D23C(v22, (uint64_t)v35, type metadata accessor for PBState);
        swift_retain();
        swift_retain();
        v26 = sub_21FA449D4(v24, v25, type metadata accessor for PBState, sub_21FBDAC2C);
        sub_21FA326EC(v25, type metadata accessor for PBState);
        sub_21FA2D1F8((uint64_t)v15, &qword_25554BCD8, type metadata accessor for PBState);
        sub_21FA326EC(v24, type metadata accessor for PBState);
        sub_21FA2D1F8((uint64_t)v10, &qword_25554BCD8, type metadata accessor for PBState);
        if ((v26 & 1) == 0)
          goto LABEL_16;
        goto LABEL_11;
      }
      swift_retain();
      swift_retain();
      sub_21FA2D1F8((uint64_t)v15, &qword_25554BCD8, type metadata accessor for PBState);
      sub_21FA326EC(v24, type metadata accessor for PBState);
    }
    sub_21FA48E3C((uint64_t)v10, &qword_25554CB40, &qword_25554BCD8, type metadata accessor for PBState);
    goto LABEL_16;
  }
  return result;
}

uint64_t PBStateResponse.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBStateResponse, &qword_25554BD78, (uint64_t)&protocol conformance descriptor for PBStateResponse);
}

uint64_t sub_21FBD8760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DC68, &qword_25554BC38, a2);
}

unint64_t sub_21FBD877C()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_21FBD8798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBStateResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_21FBD87AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBStateResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FBD87C0()
{
  sub_21FA2A08C(&qword_25554CAF0, type metadata accessor for PBStateResponse, (uint64_t)&protocol conformance descriptor for PBStateResponse);
  return sub_21FC5AD70();
}

uint64_t sub_21FBD8810@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC60, (uint64_t)qword_25554BC20, a1);
}

uint64_t sub_21FBD882C()
{
  sub_21FA2A08C(&qword_25554BEB0, type metadata accessor for PBStateResponse, (uint64_t)&protocol conformance descriptor for PBStateResponse);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBD886C()
{
  sub_21FA2A08C(&qword_25554BEB0, type metadata accessor for PBStateResponse, (uint64_t)&protocol conformance descriptor for PBStateResponse);
  return sub_21FC5AEA8();
}

uint64_t sub_21FBD88BC(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBStateResponse, (uint64_t (*)(uint64_t, uint64_t))sub_21FBD8210) & 1;
}

uint64_t sub_21FBD88E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BC40);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BC40);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC5F3A0;
  v7 = v6 + v5;
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v5) = 0;
  *(_QWORD *)v8 = "UNDEFINED";
  *(_QWORD *)(v8 + 8) = 9;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 1;
  *(_QWORD *)v12 = "OK";
  *(_QWORD *)(v12 + 8) = 2;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "STATE_UPDATED";
  *((_QWORD *)v14 + 1) = 13;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "STATE_NOT_UPDATED";
  *((_QWORD *)v16 + 1) = 17;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "SERVER_ERROR";
  *((_QWORD *)v18 + 1) = 12;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "MAILBOX_NOT_FOUND";
  *((_QWORD *)v20 + 1) = 17;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "UNAUTHORIZED";
  *((_QWORD *)v22 + 1) = 12;
  v22[16] = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBStateResponse.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC70, (uint64_t)qword_25554BC40, a1);
}

uint64_t sub_21FBD8B74@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC70, (uint64_t)qword_25554BC40, a1);
}

unint64_t static PBGeo.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_21FBD8BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char *v12;
  uint64_t v13;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BC58);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BC58);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21FC60A70;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v2 + 48);
  *v7 = 1;
  *(_QWORD *)v8 = "latitude";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_21FC5AF5C();
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = (char *)v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + v4) = 2;
  *(_QWORD *)v12 = "longitude";
  *((_QWORD *)v12 + 1) = 9;
  v12[16] = 2;
  v11();
  v13 = (uint64_t)v7 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v7 + 2 * v4) = 3;
  *(_QWORD *)v13 = "radius";
  *(_QWORD *)(v13 + 8) = 6;
  *(_BYTE *)(v13 + 16) = 2;
  v11();
  return sub_21FC5AF68();
}

uint64_t static PBGeo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC78, (uint64_t)qword_25554BC58, a1);
}

uint64_t PBGeo.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_21FC5AD88();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_21FC5AE0C();
      }
      else if (result == 2 || result == 1)
      {
        sub_21FC5AE24();
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBGeo.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(double *)v0 == 0.0 || (result = sub_21FC5AF20(), !v1))
  {
    if (*(double *)(v0 + 8) == 0.0 || (result = sub_21FC5AF20(), !v1))
    {
      if (!*(_DWORD *)(v0 + 16) || (result = sub_21FC5AF08(), !v1))
      {
        type metadata accessor for PBGeo(0);
        return sub_21FC5AD04();
      }
    }
  }
  return result;
}

uint64_t PBGeo.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBGeo, &qword_25554BD80, (uint64_t)&protocol conformance descriptor for PBGeo);
}

unint64_t sub_21FBD8F2C()
{
  return 0xD000000000000023;
}

uint64_t sub_21FBD8F48()
{
  return PBGeo.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBD8F5C()
{
  return PBGeo.traverse<A>(visitor:)();
}

uint64_t sub_21FBD8F70()
{
  sub_21FA2A08C(&qword_25554CAE8, type metadata accessor for PBGeo, (uint64_t)&protocol conformance descriptor for PBGeo);
  return sub_21FC5AD70();
}

uint64_t sub_21FBD8FC0@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC78, (uint64_t)qword_25554BC58, a1);
}

uint64_t sub_21FBD8FDC()
{
  sub_21FA2A08C(&qword_25554BEC8, type metadata accessor for PBGeo, (uint64_t)&protocol conformance descriptor for PBGeo);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBD901C()
{
  sub_21FA2A08C(&qword_25554BEC8, type metadata accessor for PBGeo, (uint64_t)&protocol conformance descriptor for PBGeo);
  return sub_21FC5AEA8();
}

unint64_t static PBState.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_21FBD908C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v36;

  v0 = sub_21FC5AF74();
  __swift_allocate_value_buffer(v0, qword_25554BC70);
  __swift_project_value_buffer(v0, (uint64_t)qword_25554BC70);
  sub_21FA2D1A0(0, (unint64_t *)&qword_25553EAC0, (uint64_t (*)(uint64_t))sub_21FA48EB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_21FA48EB8();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_21FC66540;
  v6 = v36 + v5;
  v7 = v36 + v5 + *(int *)(v2 + 48);
  *(_QWORD *)(v36 + v5) = 1;
  *(_QWORD *)v7 = "mailbox_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_21FC5AF5C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v36 + v5 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + v4) = 2;
  *(_QWORD *)v11 = "actor";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v36 + v5 + 2 * v4);
  v13 = (char *)v12 + *(int *)(v2 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "access_code";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v36 + v5 + 3 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "sid";
  *((_QWORD *)v15 + 1) = 3;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v36 + v5 + 4 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "composite_code_trials";
  *((_QWORD *)v17 + 1) = 21;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v36 + v5 + 5 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "expiration_time";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v36 + v5 + 6 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "geo_encrypted";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v36 + v5 + 7 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "pa";
  *((_QWORD *)v23 + 1) = 2;
  v23[16] = 2;
  v10();
  v24 = v36 + v5 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v6 + 8 * v4) = 9;
  *(_QWORD *)v24 = "pb";
  *(_QWORD *)(v24 + 8) = 2;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v36 + v5 + 9 * v4);
  v26 = (char *)v25 + *(int *)(v2 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "confirmation_a";
  *((_QWORD *)v26 + 1) = 14;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v36 + v5 + 10 * v4);
  v28 = (char *)v27 + *(int *)(v2 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "confirmation_b";
  *((_QWORD *)v28 + 1) = 14;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v36 + v5 + 11 * v4);
  v30 = (char *)v29 + *(int *)(v2 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "lookupinfo_encrypted";
  *((_QWORD *)v30 + 1) = 20;
  v30[16] = 2;
  v10();
  v31 = (_QWORD *)(v36 + v5 + 12 * v4);
  v32 = (char *)v31 + *(int *)(v2 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "step";
  *((_QWORD *)v32 + 1) = 4;
  v32[16] = 2;
  v10();
  v33 = (_QWORD *)(v36 + v5 + 13 * v4);
  v34 = (char *)v33 + *(int *)(v2 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "other_data";
  *((_QWORD *)v34 + 1) = 10;
  v34[16] = 2;
  v10();
  return sub_21FC5AF68();
}

uint64_t static PBState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA3A338(&qword_25553DC80, (uint64_t)qword_25554BC70, a1);
}

uint64_t sub_21FBD9498()
{
  uint64_t result;

  type metadata accessor for PBState._StorageClass(0);
  swift_allocObject();
  result = sub_21FBD94D4();
  qword_25554BC88 = result;
  return result;
}

uint64_t sub_21FBD94D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  *(_DWORD *)(v0 + 80) = 0;
  v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  v2 = sub_21FC5ACEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  *v3 = sub_21FC5ACF8();
  v3[1] = v4;
  v5 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  *v5 = sub_21FC5ACF8();
  v5[1] = v6;
  v7 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  *v7 = sub_21FC5ACF8();
  v7[1] = v8;
  v9 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  *v9 = sub_21FC5ACF8();
  v9[1] = v10;
  v11 = (uint64_t *)(v0
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  *v11 = sub_21FC5ACF8();
  v11[1] = v12;
  v13 = (uint64_t *)(v0
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  *v13 = sub_21FC5ACF8();
  v13[1] = v14;
  v15 = v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = v0
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  v17 = type metadata accessor for PBOtherData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  return v0;
}

uint64_t sub_21FBD9604(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v83;
  _QWORD *v84;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v94 = (uint64_t)&v83 - v5;
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], v3);
  MEMORY[0x24BDAC7A8](v6);
  v87 = (uint64_t)&v83 - v7;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  v83 = (_QWORD *)(v1 + 48);
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 56) = 0xE000000000000000;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0xE000000000000000;
  *(_DWORD *)(v1 + 80) = 0;
  v84 = (_QWORD *)(v1 + 64);
  v85 = (_DWORD *)(v1 + 80);
  v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  v86 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  v9 = sub_21FC5ACEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  *v10 = sub_21FC5ACF8();
  v10[1] = v11;
  v12 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  *v12 = sub_21FC5ACF8();
  v12[1] = v13;
  v14 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  v15 = sub_21FC5ACF8();
  v88 = v14;
  *v14 = v15;
  v14[1] = v16;
  v17 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  v18 = sub_21FC5ACF8();
  v89 = v17;
  *v17 = v18;
  v17[1] = v19;
  v20 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  v21 = sub_21FC5ACF8();
  v90 = v20;
  *v20 = v21;
  v20[1] = v22;
  v23 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  *v23 = sub_21FC5ACF8();
  v23[1] = v24;
  v25 = v1 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  v91 = v23;
  v92 = v25;
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  v26 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  v93 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  v27 = type metadata accessor for PBOtherData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 16);
  v28 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v29;
  *(_QWORD *)(v1 + 24) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v30 = *(_QWORD *)(a1 + 32);
  LOBYTE(v23) = *(_BYTE *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v30;
  *(_BYTE *)(v1 + 40) = (_BYTE)v23;
  swift_beginAccess();
  v32 = *(_QWORD *)(a1 + 48);
  v31 = *(_QWORD *)(a1 + 56);
  v33 = v83;
  swift_beginAccess();
  *v33 = v32;
  *(_QWORD *)(v1 + 56) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v35 = *(_QWORD *)(a1 + 64);
  v34 = *(_QWORD *)(a1 + 72);
  v36 = v84;
  swift_beginAccess();
  *v36 = v35;
  *(_QWORD *)(v1 + 72) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v34) = *(_DWORD *)(a1 + 80);
  v37 = v85;
  swift_beginAccess();
  *v37 = v34;
  v38 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  v39 = v87;
  v40 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  sub_21FA44968(v38, v87, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  v41 = v86;
  swift_beginAccess();
  sub_21FA2D2D8(v39, v41, &qword_255542078, v40);
  swift_endAccess();
  v42 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  swift_beginAccess();
  v44 = *v42;
  v43 = v42[1];
  swift_beginAccess();
  v45 = *v10;
  v46 = v10[1];
  *v10 = v44;
  v10[1] = v43;
  sub_21FA32314(v44, v43);
  sub_21FA2D770(v45, v46);
  v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  swift_beginAccess();
  v49 = *v47;
  v48 = v47[1];
  swift_beginAccess();
  v50 = *v12;
  v51 = v12[1];
  *v12 = v49;
  v12[1] = v48;
  sub_21FA32314(v49, v48);
  sub_21FA2D770(v50, v51);
  v52 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  swift_beginAccess();
  v54 = *v52;
  v53 = v52[1];
  v55 = v88;
  swift_beginAccess();
  v56 = *v55;
  v57 = v55[1];
  *v55 = v54;
  v55[1] = v53;
  sub_21FA32314(v54, v53);
  sub_21FA2D770(v56, v57);
  v58 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  swift_beginAccess();
  v60 = *v58;
  v59 = v58[1];
  v61 = v89;
  swift_beginAccess();
  v62 = *v61;
  v63 = v61[1];
  *v61 = v60;
  v61[1] = v59;
  sub_21FA32314(v60, v59);
  sub_21FA2D770(v62, v63);
  v64 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  swift_beginAccess();
  v66 = *v64;
  v65 = v64[1];
  v67 = v90;
  swift_beginAccess();
  v68 = *v67;
  v69 = v67[1];
  *v67 = v66;
  v67[1] = v65;
  sub_21FA32314(v66, v65);
  sub_21FA2D770(v68, v69);
  v70 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  swift_beginAccess();
  v72 = *v70;
  v71 = v70[1];
  v73 = v91;
  swift_beginAccess();
  v74 = *v73;
  v75 = v73[1];
  *v73 = v72;
  v73[1] = v71;
  sub_21FA32314(v72, v71);
  sub_21FA2D770(v74, v75);
  v76 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step);
  swift_beginAccess();
  v77 = *v76;
  LOBYTE(v76) = *((_BYTE *)v76 + 8);
  v78 = v92;
  swift_beginAccess();
  *(_QWORD *)v78 = v77;
  *(_BYTE *)(v78 + 8) = (_BYTE)v76;
  v79 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  v80 = v94;
  sub_21FA44968(v79, v94, &qword_25554BD38, type metadata accessor for PBOtherData);
  swift_release();
  v81 = v93;
  swift_beginAccess();
  sub_21FA2D2D8(v80, v81, &qword_25554BD38, type metadata accessor for PBOtherData);
  swift_endAccess();
  return v1;
}

uint64_t sub_21FBD9CE8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FA2D1F8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
  sub_21FA2D770(*(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted), *(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted+ 8));
  sub_21FA2D770(*(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa), *(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa+ 8));
  sub_21FA2D770(*(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb), *(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb+ 8));
  sub_21FA2D770(*(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA), *(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA+ 8));
  sub_21FA2D770(*(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB), *(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB+ 8));
  sub_21FA2D770(*(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted), *(_QWORD *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted+ 8));
  sub_21FA2D1F8(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData, &qword_25554BD38, type metadata accessor for PBOtherData);
  return v0;
}

uint64_t sub_21FBD9DCC()
{
  sub_21FBD9CE8();
  return swift_deallocClassInstance();
}

uint64_t PBState.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_21FBD9604(v2);
    swift_release();
  }
  swift_retain();
  sub_21FBD9EB4();
  return swift_release();
}

uint64_t sub_21FBD9EB4()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_21FC5AD88();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE3C();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          sub_21FBDCAD8();
          v4 = v3;
          sub_21FC5ADC4();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_21FC5AE0C();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_21FC5ACEC();
          sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
          sub_21FC5AE60();
          goto LABEL_13;
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
          swift_beginAccess();
          sub_21FC5ADF4();
          goto LABEL_13;
        case 13:
          swift_beginAccess();
          sub_21FBDF104();
          sub_21FC5ADC4();
LABEL_13:
          swift_endAccess();
          break;
        case 14:
          swift_beginAccess();
          type metadata accessor for PBOtherData(0);
          sub_21FA2A08C(&qword_25554BE68, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
          sub_21FC5AE60();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_21FC5AD88();
    }
  }
  return result;
}

uint64_t PBState.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21FA41BCC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PBState, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21FBDA2D0);
}

uint64_t sub_21FBDA2D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v24[2] = (char *)v24 - v5;
  v25 = type metadata accessor for PBOtherData(0);
  v24[1] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v24[0] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], v3);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v24 - v8;
  v10 = sub_21FC5ACEC();
  v29 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v26 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 24);
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 32))
  {
    v14 = *(_BYTE *)(a1 + 40);
    v27 = *(_QWORD *)(a1 + 32);
    v28 = v14;
    sub_21FBDCAD8();
    result = sub_21FC5AED8();
    if (v1)
      return result;
  }
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 56);
  v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0)
    v17 = *(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (!v1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 72);
  v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v19 = *(_QWORD *)(a1 + 64) & 0xFFFFFFFFFFFFLL;
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_21FC5AF2C();
    if (v1)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_DWORD *)(a1 + 80) || (result = sub_21FC5AF08(), !v1))
  {
    v20 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
    swift_beginAccess();
    sub_21FA44968(v20, (uint64_t)v9, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    v21 = v29;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v10) == 1)
    {
      sub_21FA2D1F8((uint64_t)v9, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v9, v10);
      sub_21FA2A08C(&qword_2555437D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
      v22 = v29;
      sub_21FC5AF50();
      if (v1)
        return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v26, v10);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v10);
    }
    v23 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted;
    swift_beginAccess();
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_21FBDA738()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((v2 & 0xFF000000000000) != 0)
  {
    sub_21FA32314(v1, v2);
    sub_21FC5AEF0();
    sub_21FA2D770(v1, v2);
    if (v0)
      JUMPOUT(0x21FBDA594);
  }
  v4 = v3 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa;
  v5 = swift_beginAccess();
  return ((uint64_t (*)(uint64_t))((char *)sub_21FBDA7D8 + 4 * byte_21FC6FB52[*(_QWORD *)(v4 + 8) >> 62]))(v5);
}

uint64_t sub_21FBDA7D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((v2 & 0xFF000000000000) != 0)
  {
    sub_21FA32314(v1, v2);
    sub_21FC5AEF0();
    sub_21FA2D770(v1, v2);
    if (v0)
      JUMPOUT(0x21FBDA594);
  }
  v4 = v3 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb;
  v5 = swift_beginAccess();
  return ((uint64_t (*)(uint64_t))((char *)sub_21FBDA878 + 4 * byte_21FC6FB56[*(_QWORD *)(v4 + 8) >> 62]))(v5);
}

uint64_t sub_21FBDA878()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((v2 & 0xFF000000000000) != 0)
  {
    sub_21FA32314(v1, v2);
    sub_21FC5AEF0();
    sub_21FA2D770(v1, v2);
    if (v0)
      JUMPOUT(0x21FBDA594);
  }
  v4 = v3
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA;
  v5 = swift_beginAccess();
  return ((uint64_t (*)(uint64_t))((char *)sub_21FBDA918 + 4 * byte_21FC6FB5A[*(_QWORD *)(v4 + 8) >> 62]))(v5);
}

uint64_t sub_21FBDA918()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((v2 & 0xFF000000000000) != 0)
  {
    sub_21FA32314(v1, v2);
    sub_21FC5AEF0();
    sub_21FA2D770(v1, v2);
    if (v0)
      JUMPOUT(0x21FBDA594);
  }
  v4 = v3
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB;
  v5 = swift_beginAccess();
  return ((uint64_t (*)(uint64_t))((char *)sub_21FBDA9B8 + 4 * byte_21FC6FB5E[*(_QWORD *)(v4 + 8) >> 62]))(v5);
}

uint64_t sub_21FBDA9B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((v2 & 0xFF000000000000) != 0)
  {
    sub_21FA32314(v1, v2);
    sub_21FC5AEF0();
    sub_21FA2D770(v1, v2);
    if (v0)
      JUMPOUT(0x21FBDA594);
  }
  v4 = v3
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted;
  v5 = swift_beginAccess();
  return ((uint64_t (*)(uint64_t))((char *)sub_21FBDAA58 + 4 * byte_21FC6FB62[*(_QWORD *)(v4 + 8) >> 62]))(v5);
}

void sub_21FBDAA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((v3 & 0xFF000000000000) == 0 || (sub_21FA32314(v2, v3), sub_21FC5AEF0(), sub_21FA2D770(v2, v3), !v1))
  {
    v5 = v4 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
    swift_beginAccess();
    if (!*(_QWORD *)v5
      || (v6 = *(_BYTE *)(v5 + 8),
          *(_QWORD *)(v0 + 40) = *(_QWORD *)v5,
          *(_BYTE *)(v0 + 48) = v6,
          sub_21FBDF104(),
          sub_21FC5AED8(),
          !v1))
    {
      v7 = v4
         + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
      swift_beginAccess();
      v8 = *(_QWORD *)(v0 + 16);
      sub_21FA44968(v7, v8, &qword_25554BD38, type metadata accessor for PBOtherData);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 8) + 48))(v8, 1, *(_QWORD *)(v0 + 24)) == 1)
      {
        sub_21FA2D1F8(v8, &qword_25554BD38, type metadata accessor for PBOtherData);
      }
      else
      {
        v9 = v8;
        v10 = *(_QWORD *)v0;
        sub_21FA2D23C(v9, *(_QWORD *)v0, type metadata accessor for PBOtherData);
        sub_21FA2A08C(&qword_25554BE68, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
        sub_21FC5AF50();
        sub_21FA326EC(v10, type metadata accessor for PBOtherData);
      }
    }
  }
  JUMPOUT(0x21FBDA594);
}

uint64_t static PBState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_21FA449D4(a1, a2, type metadata accessor for PBState, sub_21FBDAC2C) & 1;
}

uint64_t sub_21FBDAC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  unint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v122 = type metadata accessor for PBOtherData(0);
  v119 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v116 = (uint64_t)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_25554CB38, &qword_25554BD38, type metadata accessor for PBOtherData);
  v118 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v121 = (uint64_t)&v114 - v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v117 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v120 = (uint64_t)&v114 - v11;
  v12 = sub_21FC5ACEC();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
  v14 = *(_QWORD *)(v12 - 8);
  v123 = v12;
  v124 = v14;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA48F60(0, &qword_2555437C8, &qword_255542078, v13);
  v18 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v114 - v19;
  sub_21FA2D1A0(0, &qword_255542078, v13, v7);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v114 - v25;
  swift_beginAccess();
  v28 = *(_QWORD *)(a1 + 16);
  v27 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v28 == *(_QWORD *)(a2 + 16) && v27 == *(_QWORD *)(a2 + 24)
    || (v29 = sub_21FC5BDF0(), result = 0, (v29 & 1) != 0))
  {
    swift_beginAccess();
    v31 = *(_QWORD *)(a1 + 32);
    swift_beginAccess();
    v32 = *(_QWORD *)(a2 + 32);
    if (*(_BYTE *)(a2 + 40) == 1)
      __asm { BR              X10 }
    if (v31 != v32)
      return 0;
    if ((swift_beginAccess(),
          v33 = *(_QWORD *)(a1 + 48),
          v34 = *(_QWORD *)(a1 + 56),
          swift_beginAccess(),
          v33 == *(_QWORD *)(a2 + 48))
      && v34 == *(_QWORD *)(a2 + 56)
      || (v35 = sub_21FC5BDF0(), result = 0, (v35 & 1) != 0))
    {
      if ((swift_beginAccess(),
            v36 = *(_QWORD *)(a1 + 64),
            v37 = *(_QWORD *)(a1 + 72),
            swift_beginAccess(),
            v36 == *(_QWORD *)(a2 + 64))
        && v37 == *(_QWORD *)(a2 + 72)
        || (v38 = sub_21FC5BDF0(), result = 0, (v38 & 1) != 0))
      {
        swift_beginAccess();
        v39 = *(_DWORD *)(a1 + 80);
        swift_beginAccess();
        if (v39 != *(_DWORD *)(a2 + 80))
          return 0;
        v40 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
        swift_beginAccess();
        sub_21FA44968(v40, (uint64_t)v26, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        v41 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
        swift_beginAccess();
        v42 = (uint64_t)&v20[*(int *)(v18 + 48)];
        v43 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
        sub_21FA44968((uint64_t)v26, (uint64_t)v20, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        v115 = v42;
        sub_21FA44968(v41, v42, &qword_255542078, v43);
        v44 = v123;
        v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48);
        if (v45((uint64_t)v20, 1, v123) == 1)
        {
          swift_retain();
          swift_retain();
          sub_21FA2D1F8((uint64_t)v26, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          if (v45(v115, 1, v44) == 1)
          {
            sub_21FA2D1F8((uint64_t)v20, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
LABEL_21:
            v52 = (uint64_t *)(a1
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
            swift_beginAccess();
            v54 = *v52;
            v53 = v52[1];
            v55 = (uint64_t *)(a2
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
            swift_beginAccess();
            v57 = *v55;
            v56 = v55[1];
            sub_21FA32314(v54, v53);
            sub_21FA32314(v57, v56);
            sub_21FB13260(v54, v53);
            v59 = v58;
            sub_21FA2D770(v57, v56);
            sub_21FA2D770(v54, v53);
            if ((v59 & 1) != 0)
            {
              v60 = (uint64_t *)(a1
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
              swift_beginAccess();
              v62 = *v60;
              v61 = v60[1];
              v63 = (uint64_t *)(a2
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
              swift_beginAccess();
              v65 = *v63;
              v64 = v63[1];
              sub_21FA32314(v62, v61);
              sub_21FA32314(v65, v64);
              sub_21FB13260(v62, v61);
              v67 = v66;
              sub_21FA2D770(v65, v64);
              sub_21FA2D770(v62, v61);
              if ((v67 & 1) != 0)
              {
                v68 = (uint64_t *)(a1
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
                swift_beginAccess();
                v70 = *v68;
                v69 = v68[1];
                v71 = (uint64_t *)(a2
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
                swift_beginAccess();
                v73 = *v71;
                v72 = v71[1];
                sub_21FA32314(v70, v69);
                sub_21FA32314(v73, v72);
                sub_21FB13260(v70, v69);
                v75 = v74;
                sub_21FA2D770(v73, v72);
                sub_21FA2D770(v70, v69);
                if ((v75 & 1) != 0)
                {
                  v76 = (uint64_t *)(a1
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
                  swift_beginAccess();
                  v78 = *v76;
                  v77 = v76[1];
                  v79 = (uint64_t *)(a2
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
                  swift_beginAccess();
                  v81 = *v79;
                  v80 = v79[1];
                  sub_21FA32314(v78, v77);
                  sub_21FA32314(v81, v80);
                  sub_21FB13260(v78, v77);
                  v83 = v82;
                  sub_21FA2D770(v81, v80);
                  sub_21FA2D770(v78, v77);
                  if ((v83 & 1) != 0)
                  {
                    v84 = (uint64_t *)(a1
                                    + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
                    swift_beginAccess();
                    v86 = *v84;
                    v85 = v84[1];
                    v87 = (uint64_t *)(a2
                                    + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
                    swift_beginAccess();
                    v89 = *v87;
                    v88 = v87[1];
                    sub_21FA32314(v86, v85);
                    sub_21FA32314(v89, v88);
                    sub_21FB13260(v86, v85);
                    v91 = v90;
                    sub_21FA2D770(v89, v88);
                    sub_21FA2D770(v86, v85);
                    if ((v91 & 1) != 0)
                    {
                      v92 = (uint64_t *)(a1
                                      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
                      swift_beginAccess();
                      v94 = *v92;
                      v93 = v92[1];
                      v95 = (uint64_t *)(a2
                                      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
                      swift_beginAccess();
                      v97 = *v95;
                      v96 = v95[1];
                      sub_21FA32314(v94, v93);
                      sub_21FA32314(v97, v96);
                      sub_21FB13260(v94, v93);
                      v99 = v98;
                      sub_21FA2D770(v97, v96);
                      sub_21FA2D770(v94, v93);
                      if ((v99 & 1) != 0)
                      {
                        v100 = a1
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
                        swift_beginAccess();
                        v101 = *(_QWORD *)v100;
                        v102 = *(unsigned __int8 *)(v100 + 8);
                        v103 = (uint64_t *)(a2
                                         + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step);
                        swift_beginAccess();
                        if (sub_21FA2EDE0(v101, v102, *v103))
                        {
                          v104 = a1
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
                          swift_beginAccess();
                          v105 = v120;
                          sub_21FA44968(v104, v120, &qword_25554BD38, type metadata accessor for PBOtherData);
                          v106 = a2
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
                          swift_beginAccess();
                          v107 = v121;
                          v108 = v121 + *(int *)(v118 + 48);
                          sub_21FA44968(v105, v121, &qword_25554BD38, type metadata accessor for PBOtherData);
                          sub_21FA44968(v106, v108, &qword_25554BD38, type metadata accessor for PBOtherData);
                          v109 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48);
                          v110 = v122;
                          if (v109(v107, 1, v122) == 1)
                          {
                            swift_release();
                            swift_release();
                            sub_21FA2D1F8(v105, &qword_25554BD38, type metadata accessor for PBOtherData);
                            if (v109(v108, 1, v110) == 1)
                            {
                              sub_21FA2D1F8(v107, &qword_25554BD38, type metadata accessor for PBOtherData);
                              return 1;
                            }
                          }
                          else
                          {
                            v111 = v117;
                            sub_21FA44968(v107, v117, &qword_25554BD38, type metadata accessor for PBOtherData);
                            if (v109(v108, 1, v110) != 1)
                            {
                              v112 = v116;
                              sub_21FA2D23C(v108, v116, type metadata accessor for PBOtherData);
                              if (*(_DWORD *)v111 == *(_DWORD *)v112
                                && (*(_QWORD *)(v111 + 8) == *(_QWORD *)(v112 + 8)
                                 && *(_QWORD *)(v111 + 16) == *(_QWORD *)(v112 + 16)
                                 || (sub_21FC5BDF0() & 1) != 0))
                              {
                                sub_21FC5AD1C();
                                sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                                v113 = sub_21FC5B5D4();
                                swift_release();
                                swift_release();
                                sub_21FA326EC(v112, type metadata accessor for PBOtherData);
                                sub_21FA2D1F8(v105, &qword_25554BD38, type metadata accessor for PBOtherData);
                                sub_21FA326EC(v111, type metadata accessor for PBOtherData);
                                sub_21FA2D1F8(v107, &qword_25554BD38, type metadata accessor for PBOtherData);
                                if ((v113 & 1) != 0)
                                  return 1;
                              }
                              else
                              {
                                swift_release();
                                swift_release();
                                sub_21FA326EC(v112, type metadata accessor for PBOtherData);
                                sub_21FA2D1F8(v105, &qword_25554BD38, type metadata accessor for PBOtherData);
                                sub_21FA326EC(v111, type metadata accessor for PBOtherData);
                                sub_21FA2D1F8(v107, &qword_25554BD38, type metadata accessor for PBOtherData);
                              }
                              return 0;
                            }
                            swift_release();
                            swift_release();
                            sub_21FA2D1F8(v105, &qword_25554BD38, type metadata accessor for PBOtherData);
                            sub_21FA326EC(v111, type metadata accessor for PBOtherData);
                          }
                          sub_21FA48E3C(v107, &qword_25554CB38, &qword_25554BD38, type metadata accessor for PBOtherData);
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
LABEL_32:
            swift_release();
            swift_release();
            return 0;
          }
        }
        else
        {
          sub_21FA44968((uint64_t)v20, (uint64_t)v24, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          v46 = v115;
          if (v45(v115, 1, v44) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v124 + 32))(v16, v46, v44);
            sub_21FA2A08C(&qword_2555437D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
            v47 = v44;
            swift_retain();
            swift_retain();
            v48 = sub_21FC5B5D4();
            v49 = *(void (**)(char *, uint64_t))(v124 + 8);
            v49(v16, v47);
            v50 = (uint64_t)v26;
            v51 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
            sub_21FA2D1F8(v50, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
            v49(v24, v47);
            sub_21FA2D1F8((uint64_t)v20, &qword_255542078, v51);
            if ((v48 & 1) == 0)
              goto LABEL_32;
            goto LABEL_21;
          }
          swift_retain();
          swift_retain();
          sub_21FA2D1F8((uint64_t)v26, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
          (*(void (**)(char *, uint64_t))(v124 + 8))(v24, v44);
        }
        sub_21FA48E3C((uint64_t)v20, &qword_2555437C8, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990]);
        goto LABEL_32;
      }
    }
  }
  return result;
}

uint64_t PBState.hashValue.getter()
{
  return sub_21FA42FDC(type metadata accessor for PBState, &qword_25554BD88, (uint64_t)&protocol conformance descriptor for PBState);
}

uint64_t sub_21FBDB99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FA42AD4(a1, &qword_25553DC88, &qword_25554BC88, a2);
}

unint64_t sub_21FBDB9B8()
{
  return 0xD000000000000025;
}

uint64_t sub_21FBDB9D4()
{
  return PBState.decodeMessage<A>(decoder:)();
}

uint64_t sub_21FBDB9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBState.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_21FBDB9FC()
{
  sub_21FA2A08C(&qword_25554CAE0, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
  return sub_21FC5AD70();
}

uint64_t sub_21FBDBA4C@<X0>(uint64_t a1@<X8>)
{
  return sub_21FA40BC8(&qword_25553DC80, (uint64_t)qword_25554BC70, a1);
}

uint64_t sub_21FBDBA68()
{
  sub_21FA2A08C(&qword_25554BEE0, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
  return sub_21FC5AE9C();
}

uint64_t sub_21FBDBAA8()
{
  sub_21FA2A08C(&qword_25554BEE0, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
  return sub_21FC5AEA8();
}

uint64_t _s19HealthRecordsDaemon5PBGeoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
  {
    v11 = type metadata accessor for PBGeo(0);
    v12 = a1 + *(int *)(v11 + 28);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, a2 + *(int *)(v11 + 28), v4);
    sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_21FC5B5D4();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

void _s19HealthRecordsDaemon18PBUpdateParametersV10OneOf_DataO2eeoiySbAE_AEtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  v27 = a1;
  v28 = a2;
  v22 = type metadata accessor for PBOtherData(0);
  MEMORY[0x24BDAC7A8](v22);
  v23 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v21 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)&v21 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  sub_21FBDF18C();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v21 + *(int *)(v16 + 48) - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D120(v27, (uint64_t)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PBUpdateParameters.OneOf_Data);
  v19 = (uint64_t)v28;
  v28 = v18;
  sub_21FA2D120(v19, (uint64_t)v18, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v20 = (char *)sub_21FBDBE68 + 4 * byte_21FC6FB6A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21FBDBE68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t (*v8)(_QWORD);
  int v11;

  v3 = v0;
  sub_21FA2D120(v0, (uint64_t)v1, type metadata accessor for PBUpdateParameters.OneOf_Data);
  v5 = *v1;
  v4 = v1[1];
  v6 = *(_QWORD **)(v2 - 88);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    LOBYTE(v7) = 0;
    v8 = (uint64_t (*)(_QWORD))sub_21FBDF18C;
  }
  else
  {
    if (v5 == *v6 && v4 == v6[1])
    {
      swift_bridgeObjectRelease_n();
      LOBYTE(v7) = 1;
    }
    else
    {
      v11 = sub_21FC5BDF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v11 << 31 >> 31;
    }
    v8 = type metadata accessor for PBUpdateParameters.OneOf_Data;
  }
  sub_21FA326EC(v3, v8);
  return v7 & 1;
}

uint64_t _s19HealthRecordsDaemon16PBPollParametersV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a2;
  if (*((_BYTE *)a2 + 8) == 1)
    __asm { BR              X11 }
  if (*a1 == v11)
  {
    v13 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v13 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v14 = type metadata accessor for PBPollParameters(0);
      v15 = (char *)a1 + *(int *)(v14 + 24);
      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, (char *)a2 + *(int *)(v14 + 24), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon11PBOtherDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_21FC5AD1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    v11 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
    if (v11 || (v12 = 0, (sub_21FC5BDF0() & 1) != 0))
    {
      v13 = type metadata accessor for PBOtherData(0);
      v14 = a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 24), v4);
      sub_21FA2A08C(&qword_25553EAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_21FC5B5D4();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_21FBDC5C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _BYTE v17[24];

  sub_21FA2D1A0(0, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v17[-v4];
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v9;
  *(_BYTE *)(v1 + 24) = v10;
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v11;
  *(_QWORD *)(v1 + 40) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_21FA44968(v13, (uint64_t)v5, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
  swift_beginAccess();
  v15 = *v14;
  LOBYTE(v14) = *((_BYTE *)v14 + 8);
  swift_beginAccess();
  *(_QWORD *)v8 = v15;
  *(_BYTE *)(v8 + 8) = (_BYTE)v14;
  return v1;
}

uint64_t type metadata accessor for PBUpdateParameters.OneOf_Data(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C1B0);
}

uint64_t type metadata accessor for PBUpdateStateRequest(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C240);
}

uint64_t type metadata accessor for PBUpdateStateRequest._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C678);
}

uint64_t type metadata accessor for PBStateResponse(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C2D0);
}

uint64_t type metadata accessor for PBStateResponse._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C768);
}

uint64_t sub_21FBDC854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _BYTE v19[24];

  sub_21FA2D1A0(0, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v19[-v4];
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  v7 = type metadata accessor for PBState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v10;
  *(_QWORD *)(v1 + 24) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_21FA44968(v12, (uint64_t)v5, &qword_25554BCD8, type metadata accessor for PBState);
  swift_beginAccess();
  sub_21FA2D2D8((uint64_t)v5, v6, &qword_25554BCD8, type metadata accessor for PBState);
  swift_endAccess();
  v13 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  v15 = *v13;
  v14 = v13[1];
  swift_beginAccess();
  *v8 = v15;
  v8[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
  swift_beginAccess();
  v17 = *v16;
  LOBYTE(v16) = *((_BYTE *)v16 + 8);
  swift_beginAccess();
  *(_QWORD *)v9 = v17;
  *(_BYTE *)(v9 + 8) = (_BYTE)v16;
  return v1;
}

uint64_t type metadata accessor for PBState(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C3F8);
}

uint64_t type metadata accessor for PBGeo(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C360);
}

uint64_t type metadata accessor for PBState._StorageClass(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554C898);
}

unint64_t sub_21FBDCAD8()
{
  unint64_t result;

  result = qword_25554BD48;
  if (!qword_25554BD48)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBActor, &type metadata for PBActor);
    atomic_store(result, (unint64_t *)&qword_25554BD48);
  }
  return result;
}

unint64_t sub_21FBDCB20()
{
  unint64_t result;

  result = qword_25554BD90;
  if (!qword_25554BD90)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBActor, &type metadata for PBActor);
    atomic_store(result, (unint64_t *)&qword_25554BD90);
  }
  return result;
}

unint64_t sub_21FBDCB68()
{
  unint64_t result;

  result = qword_25554BD98;
  if (!qword_25554BD98)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBActor, &type metadata for PBActor);
    atomic_store(result, (unint64_t *)&qword_25554BD98);
  }
  return result;
}

unint64_t sub_21FBDCBB0()
{
  unint64_t result;

  result = qword_25554BDA0;
  if (!qword_25554BDA0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBActor, &type metadata for PBActor);
    atomic_store(result, (unint64_t *)&qword_25554BDA0);
  }
  return result;
}

uint64_t sub_21FBDCBF4()
{
  return sub_21FB095AC(&qword_25554BDA8, &qword_25554BDB0);
}

unint64_t sub_21FBDCC24()
{
  unint64_t result;

  result = qword_25554BDB8;
  if (!qword_25554BDB8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBEventType, &type metadata for PBEventType);
    atomic_store(result, (unint64_t *)&qword_25554BDB8);
  }
  return result;
}

unint64_t sub_21FBDCC6C()
{
  unint64_t result;

  result = qword_25554BDC0;
  if (!qword_25554BDC0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBEventType, &type metadata for PBEventType);
    atomic_store(result, (unint64_t *)&qword_25554BDC0);
  }
  return result;
}

unint64_t sub_21FBDCCB4()
{
  unint64_t result;

  result = qword_25554BDC8;
  if (!qword_25554BDC8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBEventType, &type metadata for PBEventType);
    atomic_store(result, (unint64_t *)&qword_25554BDC8);
  }
  return result;
}

uint64_t sub_21FBDCCF8()
{
  return sub_21FB095AC(&qword_25554BDD0, &qword_25554BDD8);
}

unint64_t sub_21FBDCD28()
{
  unint64_t result;

  result = qword_25554BDE0;
  if (!qword_25554BDE0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStep, &type metadata for PBStep);
    atomic_store(result, (unint64_t *)&qword_25554BDE0);
  }
  return result;
}

unint64_t sub_21FBDCD70()
{
  unint64_t result;

  result = qword_25554BDE8;
  if (!qword_25554BDE8)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStep, &type metadata for PBStep);
    atomic_store(result, (unint64_t *)&qword_25554BDE8);
  }
  return result;
}

unint64_t sub_21FBDCDB8()
{
  unint64_t result;

  result = qword_25554BDF0;
  if (!qword_25554BDF0)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStep, &type metadata for PBStep);
    atomic_store(result, (unint64_t *)&qword_25554BDF0);
  }
  return result;
}

uint64_t sub_21FBDCDFC()
{
  return sub_21FB095AC(&qword_25554BDF8, &qword_25554BE00);
}

unint64_t sub_21FBDCE2C()
{
  unint64_t result;

  result = qword_25554BE08;
  if (!qword_25554BE08)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStateResponse.ResultCode, &type metadata for PBStateResponse.ResultCode);
    atomic_store(result, (unint64_t *)&qword_25554BE08);
  }
  return result;
}

unint64_t sub_21FBDCE74()
{
  unint64_t result;

  result = qword_25554BE10;
  if (!qword_25554BE10)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStateResponse.ResultCode, &type metadata for PBStateResponse.ResultCode);
    atomic_store(result, (unint64_t *)&qword_25554BE10);
  }
  return result;
}

unint64_t sub_21FBDCEBC()
{
  unint64_t result;

  result = qword_25554BE18;
  if (!qword_25554BE18)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStateResponse.ResultCode, &type metadata for PBStateResponse.ResultCode);
    atomic_store(result, (unint64_t *)&qword_25554BE18);
  }
  return result;
}

uint64_t sub_21FBDCF00()
{
  return sub_21FB095AC(&qword_25554BE20, &qword_25554BE28);
}

uint64_t sub_21FBDCF2C()
{
  return sub_21FA2A08C(&qword_25554BE30, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
}

uint64_t sub_21FBDCF58()
{
  return sub_21FA2A08C(&qword_25554BE38, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
}

uint64_t sub_21FBDCF84()
{
  return sub_21FA2A08C(&qword_25554BD50, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
}

uint64_t sub_21FBDCFB0()
{
  return sub_21FA2A08C(&qword_25554BE40, type metadata accessor for PBPollParameters, (uint64_t)&protocol conformance descriptor for PBPollParameters);
}

uint64_t sub_21FBDCFDC()
{
  return sub_21FA2A08C(&qword_25554BE48, type metadata accessor for PBPollStateRequest, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
}

uint64_t sub_21FBDD008()
{
  return sub_21FA2A08C(&qword_25554BE50, type metadata accessor for PBPollStateRequest, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
}

uint64_t sub_21FBDD034()
{
  return sub_21FA2A08C(&qword_25554BD58, type metadata accessor for PBPollStateRequest, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
}

uint64_t sub_21FBDD060()
{
  return sub_21FA2A08C(&qword_25554BE58, type metadata accessor for PBPollStateRequest, (uint64_t)&protocol conformance descriptor for PBPollStateRequest);
}

uint64_t sub_21FBDD08C()
{
  return sub_21FA2A08C(&qword_25554BE60, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
}

uint64_t sub_21FBDD0B8()
{
  return sub_21FA2A08C(&qword_25554BE68, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
}

uint64_t sub_21FBDD0E4()
{
  return sub_21FA2A08C(&qword_25554BD60, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
}

uint64_t sub_21FBDD110()
{
  return sub_21FA2A08C(&qword_25554BE70, type metadata accessor for PBOtherData, (uint64_t)&protocol conformance descriptor for PBOtherData);
}

uint64_t sub_21FBDD13C()
{
  return sub_21FA2A08C(&qword_25554BE78, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
}

uint64_t sub_21FBDD168()
{
  return sub_21FA2A08C(&qword_25554BE80, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
}

uint64_t sub_21FBDD194()
{
  return sub_21FA2A08C(&qword_25554BD68, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
}

uint64_t sub_21FBDD1C0()
{
  return sub_21FA2A08C(&qword_25554BE88, type metadata accessor for PBUpdateParameters, (uint64_t)&protocol conformance descriptor for PBUpdateParameters);
}

uint64_t sub_21FBDD1EC()
{
  return sub_21FA2A08C(&qword_25554BE90, type metadata accessor for PBUpdateStateRequest, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
}

uint64_t sub_21FBDD218()
{
  return sub_21FA2A08C(&qword_25554BE98, type metadata accessor for PBUpdateStateRequest, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
}

uint64_t sub_21FBDD244()
{
  return sub_21FA2A08C(&qword_25554BD70, type metadata accessor for PBUpdateStateRequest, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
}

uint64_t sub_21FBDD270()
{
  return sub_21FA2A08C(&qword_25554BEA0, type metadata accessor for PBUpdateStateRequest, (uint64_t)&protocol conformance descriptor for PBUpdateStateRequest);
}

uint64_t sub_21FBDD29C()
{
  return sub_21FA2A08C(&qword_25554BEA8, type metadata accessor for PBStateResponse, (uint64_t)&protocol conformance descriptor for PBStateResponse);
}

uint64_t sub_21FBDD2C8()
{
  return sub_21FA2A08C(&qword_25554BEB0, type metadata accessor for PBStateResponse, (uint64_t)&protocol conformance descriptor for PBStateResponse);
}

uint64_t sub_21FBDD2F4()
{
  return sub_21FA2A08C(&qword_25554BD78, type metadata accessor for PBStateResponse, (uint64_t)&protocol conformance descriptor for PBStateResponse);
}

uint64_t sub_21FBDD320()
{
  return sub_21FA2A08C(&qword_25554BEB8, type metadata accessor for PBStateResponse, (uint64_t)&protocol conformance descriptor for PBStateResponse);
}

uint64_t sub_21FBDD34C()
{
  return sub_21FA2A08C(&qword_25554BEC0, type metadata accessor for PBGeo, (uint64_t)&protocol conformance descriptor for PBGeo);
}

uint64_t sub_21FBDD378()
{
  return sub_21FA2A08C(&qword_25554BEC8, type metadata accessor for PBGeo, (uint64_t)&protocol conformance descriptor for PBGeo);
}

uint64_t sub_21FBDD3A4()
{
  return sub_21FA2A08C(&qword_25554BD80, type metadata accessor for PBGeo, (uint64_t)&protocol conformance descriptor for PBGeo);
}

uint64_t sub_21FBDD3D0()
{
  return sub_21FA2A08C(&qword_25554BED0, type metadata accessor for PBGeo, (uint64_t)&protocol conformance descriptor for PBGeo);
}

uint64_t sub_21FBDD3FC()
{
  return sub_21FA2A08C(&qword_25554BED8, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
}

uint64_t sub_21FBDD428()
{
  return sub_21FA2A08C(&qword_25554BEE0, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
}

uint64_t sub_21FBDD454()
{
  return sub_21FA2A08C(&qword_25554BD88, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
}

uint64_t sub_21FBDD480()
{
  return sub_21FA2A08C(&qword_25554BEE8, type metadata accessor for PBState, (uint64_t)&protocol conformance descriptor for PBState);
}

uint64_t sub_21FBDD4AC@<X0>(_QWORD *a1@<X8>)
{
  return PBPollStateRequest.blobAuth.getter(a1);
}

uint64_t sub_21FBDD4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBPollStateRequest.blobAuth.setter);
}

uint64_t sub_21FBDD4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBPollParameters, (uint64_t (*)(char *))PBPollStateRequest.pollParameters.setter);
}

uint64_t sub_21FBDD518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FBDD588@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.accessCode.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD5B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_10Tm(a1, a2, a3, a4, PBUpdateParameters.accessCode.setter);
}

uint64_t sub_21FBDD5BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.confirmationB.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD5E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_12Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.confirmationB.setter);
}

uint64_t sub_21FBDD5F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.pb.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD618(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_12Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.pb.setter);
}

uint64_t sub_21FBDD624@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.geoEncrypted.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD64C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_12Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.geoEncrypted.setter);
}

uint64_t sub_21FBDD658@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.confirmationA.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD680(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_12Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.confirmationA.setter);
}

uint64_t sub_21FBDD68C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.lookupinfoEncrypted.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD6B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_12Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.lookupinfoEncrypted.setter);
}

uint64_t sub_21FBDD6C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.pa.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD6E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_12Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.pa.setter);
}

uint64_t keypath_set_12Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t))
{
  uint64_t v6;
  unint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  sub_21FA32314(*a1, v7);
  return a5(v6, v7);
}

uint64_t sub_21FBDD738@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PBUpdateParameters.rootDlid.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21FBDD760(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_10Tm(a1, a2, a3, a4, PBUpdateParameters.rootDlid.setter);
}

uint64_t keypath_set_10Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

uint64_t sub_21FBDD7AC@<X0>(uint64_t a1@<X8>)
{
  return PBUpdateParameters.otherData.getter(a1);
}

uint64_t sub_21FBDD7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBOtherData, (uint64_t (*)(char *))PBUpdateParameters.otherData.setter);
}

uint64_t sub_21FBDD7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FB2D660(a1, type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType, a2);
}

uint64_t sub_21FBDD814(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBCEE58(a1, a2, a3, a4, type metadata accessor for PBUpdateParameters, (void (*)(_QWORD))type metadata accessor for PBUpdateParameters._StorageClass, sub_21FBDC5C8, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
}

uint64_t sub_21FBDD848@<X0>(_QWORD *a1@<X8>)
{
  return PBUpdateStateRequest.blobAuth.getter(a1);
}

uint64_t sub_21FBDD868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBUpdateStateRequest.blobAuth.setter);
}

uint64_t sub_21FBDD890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBUpdateParameters, (uint64_t (*)(char *))PBUpdateStateRequest.updateParameters.setter);
}

uint64_t sub_21FBDD8B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBStateResponse, a2);
}

uint64_t sub_21FBDD8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBState, (uint64_t (*)(char *))PBStateResponse.state.setter);
}

uint64_t sub_21FBDD904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FB2D660(a1, type metadata accessor for PBStateResponse, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode, a2);
}

uint64_t sub_21FBDD928(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBCEE58(a1, a2, a3, a4, type metadata accessor for PBStateResponse, (void (*)(_QWORD))type metadata accessor for PBStateResponse._StorageClass, sub_21FBDC854, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
}

uint64_t sub_21FBDD95C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21FAF6710(a1, type metadata accessor for PBState, a2);
}

uint64_t sub_21FBDD97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 40);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 32);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_21FBDD9EC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 80);
  return result;
}

uint64_t sub_21FBDDA4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBD0D88(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted, a2);
}

uint64_t sub_21FBDDA68(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBD0DF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
}

uint64_t sub_21FBDDA84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBD0D88(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa, a2);
}

uint64_t sub_21FBDDAA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBD0DF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
}

uint64_t sub_21FBDDABC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBD0D88(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb, a2);
}

uint64_t sub_21FBDDAD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBD0DF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
}

uint64_t sub_21FBDDAF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBD0D88(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA, a2);
}

uint64_t sub_21FBDDB10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBD0DF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
}

uint64_t sub_21FBDDB2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBD0D88(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB, a2);
}

uint64_t sub_21FBDDB48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBD0DF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
}

uint64_t sub_21FBDDB64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBD0D88(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted, a2);
}

uint64_t sub_21FBDDB80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FBD0DF4(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
}

uint64_t sub_21FBDDB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FB2D660(a1, type metadata accessor for PBState, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step, a2);
}

uint64_t sub_21FBDDBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21FA392DC(a1, a2, a3, a4, type metadata accessor for PBOtherData, (uint64_t (*)(char *))PBState.otherData.setter);
}

ValueMetadata *type metadata accessor for PBActor()
{
  return &type metadata for PBActor;
}

ValueMetadata *type metadata accessor for PBEventType()
{
  return &type metadata for PBEventType;
}

ValueMetadata *type metadata accessor for PBStep()
{
  return &type metadata for PBStep;
}

_QWORD *initializeBufferWithCopyOfBuffer for PBPollParameters(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_21FC5AD1C();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBPollParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21FC5AD1C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBPollParameters(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPollParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBDDF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBPollParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBDDF98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FBDE00C()
{
  return sub_21FBDE3C8();
}

uint64_t getEnumTagSinglePayload for PBPollStateRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPollStateRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBOtherData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_21FC5AD1C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t initializeWithCopy for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21FC5AD1C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBOtherData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBDE2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBOtherData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBDE344(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AD1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FBDE3B8()
{
  return sub_21FBDE3C8();
}

uint64_t sub_21FBDE3C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBUpdateParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBUpdateParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeBufferWithCopyOfBuffer for PBUpdateParameters.OneOf_Data(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_21FBDE4B4 + 4 * byte_21FC6FB77[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for PBUpdateParameters.OneOf_Data(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 7:
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      result = sub_21FA2D770(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      break;
    case 8:
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for PBOtherData(0) + 24);
      v4 = sub_21FC5AD1C();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for PBUpdateParameters.OneOf_Data()
{
  char *v0;

  v0 = (char *)sub_21FBDE750 + 4 * byte_21FC6FB89[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t *sub_21FBDE750()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  sub_21FA32314(v2, v3);
  *v0 = v2;
  v0[1] = v3;
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for PBUpdateParameters.OneOf_Data(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_21FA326EC(result, type metadata accessor for PBUpdateParameters.OneOf_Data);
    v2 = (char *)&loc_21FBDE858 + 4 * byte_21FC6FB92[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for PBUpdateParameters.OneOf_Data(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 8)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    v6 = *(int *)(type metadata accessor for PBOtherData(0) + 24);
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = sub_21FC5AD1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for PBUpdateParameters.OneOf_Data(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_21FA326EC((uint64_t)a1, type metadata accessor for PBUpdateParameters.OneOf_Data);
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v6 = *(int *)(type metadata accessor for PBOtherData(0) + 24);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_21FC5AD1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_21FBDEB74()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PBOtherData(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBUpdateStateRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBUpdateStateRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PBStateResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBStateResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PBStateResponse.ResultCode()
{
  return &type metadata for PBStateResponse.ResultCode;
}

uint64_t getEnumTagSinglePayload for PBGeo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBDEC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBGeo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBDECA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = sub_21FC5AD1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_21FBDECE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AD1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBDED8C()
{
  return type metadata accessor for PBPollStateRequest._StorageClass(0);
}

void sub_21FBDED94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FBDEE64(a1, a2, a3, &qword_25554BC98, type metadata accessor for PBPollParameters);
}

uint64_t sub_21FBDEDA8()
{
  return type metadata accessor for PBUpdateParameters._StorageClass(0);
}

void sub_21FBDEDB0()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25554BCB0, type metadata accessor for PBUpdateParameters.OneOf_Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FBDEE48()
{
  return type metadata accessor for PBUpdateStateRequest._StorageClass(0);
}

void sub_21FBDEE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21FBDEE64(a1, a2, a3, &qword_25554BCC8, type metadata accessor for PBUpdateParameters);
}

void sub_21FBDEE64(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v7;
  unint64_t v8;

  sub_21FA2D1A0(319, &qword_255542068, type metadata accessor for PBBlobAuth, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v7 <= 0x3F)
  {
    sub_21FA2D1A0(319, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v8 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_21FBDEF24()
{
  return type metadata accessor for PBStateResponse._StorageClass(0);
}

void sub_21FBDEF2C()
{
  unint64_t v0;

  sub_21FA2D1A0(319, &qword_25554BCD8, type metadata accessor for PBState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21FBDEFC8()
{
  return type metadata accessor for PBState._StorageClass(0);
}

void sub_21FBDEFD0()
{
  unint64_t v0;
  unint64_t v1;

  sub_21FA2D1A0(319, &qword_255542078, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_21FA2D1A0(319, &qword_25554BD38, type metadata accessor for PBOtherData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

unint64_t sub_21FBDF0C0()
{
  unint64_t result;

  result = qword_25554CB20;
  if (!qword_25554CB20)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStateResponse.ResultCode, &type metadata for PBStateResponse.ResultCode);
    atomic_store(result, (unint64_t *)&qword_25554CB20);
  }
  return result;
}

unint64_t sub_21FBDF104()
{
  unint64_t result;

  result = qword_25554CB28;
  if (!qword_25554CB28)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBStep, &type metadata for PBStep);
    atomic_store(result, (unint64_t *)&qword_25554CB28);
  }
  return result;
}

unint64_t sub_21FBDF148()
{
  unint64_t result;

  result = qword_25554CB30;
  if (!qword_25554CB30)
  {
    result = MEMORY[0x2207D0F78](&protocol conformance descriptor for PBEventType, &type metadata for PBEventType);
    atomic_store(result, (unint64_t *)&qword_25554CB30);
  }
  return result;
}

void sub_21FBDF18C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25554CB60)
  {
    type metadata accessor for PBUpdateParameters.OneOf_Data(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25554CB60);
  }
}

uint64_t sub_21FBDF208@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  sub_21FA2ED54(0, (unint64_t *)&qword_25406AAE8, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_21FC5AAAC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v32 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v32(v9, a1 + v30, v10);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v34(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_21FA71828((uint64_t)v9);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v31 = a1;
  swift_bridgeObjectRetain();
  v20 = v17 - 1;
  v21 = v32;
  if (v20)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v31 + v33 + v30;
    while (1)
    {
      v21(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1)
        break;
      v19(v14, v7, v10);
      sub_21FBE0CF8();
      v27 = sub_21FC5B5BC();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v19(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_21FA71828((uint64_t)v7);
  v22 = v29;
  v19(v29, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

int64_t sub_21FBDF4DC(uint64_t a1)
{
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  int64x2_t v5;
  int64x2_t *v6;
  unint64_t v7;
  int64x2_t v8;
  int8x16_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t *v12;
  int64_t v13;
  int64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 5)
    {
      v4 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      v5 = vdupq_n_s64(v2);
      v6 = (int64x2_t *)(a1 + 56);
      v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      v8 = v5;
      do
      {
        v5 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v5, v6[-1]), (int8x16_t)v5, (int8x16_t)v6[-1]);
        v8 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v8, *v6), (int8x16_t)v8, *(int8x16_t *)v6);
        v6 += 2;
        v7 -= 4;
      }
      while (v7);
      v9 = vbslq_s8((int8x16_t)vcgtq_s64(v5, v8), (int8x16_t)v5, (int8x16_t)v8);
      v10 = vextq_s8(v9, v9, 8uLL).u64[0];
      v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v9.i64[0], v10), *(int8x8_t *)v9.i8, (int8x8_t)v10);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL))
        return v2;
    }
    else
    {
      v4 = 1;
    }
    v11 = v1 - v4;
    v12 = (int64_t *)(a1 + 8 * v4 + 32);
    do
    {
      v14 = *v12++;
      v13 = v14;
      if (v2 <= v14)
        v2 = v13;
      --v11;
    }
    while (v11);
  }
  return v2;
}

uint64_t ClinicalIngestionResponseTimeMetricValue.responseTimes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClinicalIngestionResponseTimeMetricValue.responseTimes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ClinicalIngestionResponseTimeMetricValue.responseTimes.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalIngestionResponseTimeMetricValue.min.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (!v2)
    return 0;
  v3 = *(double *)(v1 + 32);
  v4 = v2 - 1;
  if (v2 != 1)
  {
    v5 = (double *)(v1 + 40);
    do
    {
      v6 = *v5++;
      v7 = v6;
      if (v6 < v3)
        v3 = v7;
      --v4;
    }
    while (v4);
  }
  return *(_QWORD *)&v3;
}

uint64_t ClinicalIngestionResponseTimeMetricValue.median.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16))
  {
    v5 = 0.0;
    return *(_QWORD *)&v5;
  }
  v8 = *(_QWORD *)v0;
  swift_bridgeObjectRetain_n();
  sub_21FBE0384(&v8);
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v8 + 16);
  if ((v1 & 1) != 0)
  {
    v6 = (v1 - 1) >> 1;
    if (v6 < v1)
    {
      v5 = *(double *)(v8 + 8 * v6 + 32);
      swift_release();
      return *(_QWORD *)&v5;
    }
    goto LABEL_11;
  }
  if (v1 >> 1 >= v1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v1 >= 2)
  {
    v2 = v8 + 8 * (v1 >> 1);
    v4 = *(double *)(v2 + 24);
    v3 = *(double *)(v2 + 32);
    swift_release();
    v5 = (v3 + v4) * 0.5;
    return *(_QWORD *)&v5;
  }
LABEL_12:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t ClinicalIngestionResponseTimeMetricValue.max.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (!v2)
    return 0;
  v3 = *(double *)(v1 + 32);
  v4 = v2 - 1;
  if (v2 != 1)
  {
    v5 = (double *)(v1 + 40);
    do
    {
      v6 = *v5++;
      v7 = v6;
      if (v3 < v6)
        v3 = v7;
      --v4;
    }
    while (v4);
  }
  return *(_QWORD *)&v3;
}

uint64_t ClinicalIngestionResponseTimeMetricValue.analyticsString.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v12;
  double *v13;
  double v14;
  double v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = v2;
  if (v2 == 1)
  {
    v4 = ClinicalIngestionResponseTimeMetricValue.median.getter();
    if ((v5 & 1) == 0)
    {
      v6 = v4;
      sub_21FAC8CFC();
      v7 = swift_allocObject();
      v8 = MEMORY[0x24BEE13C8];
      v9 = MEMORY[0x24BEE1448];
      *(_OWORD *)(v7 + 16) = xmmword_21FC5EE30;
      *(_QWORD *)(v7 + 56) = v8;
      *(_QWORD *)(v7 + 64) = v9;
      *(_QWORD *)(v7 + 32) = v6;
      return sub_21FC5B628();
    }
    v3 = *(_QWORD *)(v1 + 16);
  }
  v10 = 0xD000000000000046;
  if (v3)
  {
    v11 = *(double *)(v1 + 32);
    v12 = v3 - 1;
    if (v12)
    {
      v13 = (double *)(v1 + 40);
      do
      {
        v14 = *v13++;
        v15 = v14;
        if (v14 < v11)
          v11 = v15;
        --v12;
      }
      while (v12);
    }
    v16 = ClinicalIngestionResponseTimeMetricValue.median.getter();
    if ((v17 & 1) == 0)
    {
      v18 = *(_QWORD *)(v1 + 16);
      if (v18)
      {
        v19 = v16;
        v20 = *(double *)(v1 + 32);
        v21 = v18 - 1;
        if (v21)
        {
          v22 = (double *)(v1 + 40);
          do
          {
            v23 = *v22++;
            v24 = v23;
            if (v20 < v23)
              v20 = v24;
            --v21;
          }
          while (v21);
        }
        sub_21FAC8CFC();
        v25 = swift_allocObject();
        v26 = MEMORY[0x24BEE1768];
        v27 = MEMORY[0x24BEE17F0];
        *(_OWORD *)(v25 + 16) = xmmword_21FC603D0;
        *(_QWORD *)(v25 + 56) = v26;
        *(_QWORD *)(v25 + 64) = v27;
        *(_QWORD *)(v25 + 32) = v2;
        v28 = MEMORY[0x24BEE13C8];
        v29 = MEMORY[0x24BEE1448];
        *(_QWORD *)(v25 + 96) = MEMORY[0x24BEE13C8];
        *(_QWORD *)(v25 + 104) = v29;
        *(double *)(v25 + 72) = v11;
        *(_QWORD *)(v25 + 136) = v28;
        *(_QWORD *)(v25 + 144) = v29;
        *(_QWORD *)(v25 + 112) = v19;
        *(_QWORD *)(v25 + 176) = v28;
        *(_QWORD *)(v25 + 184) = v29;
        *(double *)(v25 + 152) = v20;
        return sub_21FC5B628();
      }
    }
  }
  return v10;
}

HealthRecordsDaemon::ClinicalIngestionResponseTimeMetricValue __swiftcall ClinicalIngestionResponseTimeMetricValue.init(responseTime:)(Swift::Double responseTime)
{
  _QWORD *v1;
  _QWORD *v3;
  HealthRecordsDaemon::ClinicalIngestionResponseTimeMetricValue result;
  _QWORD *rawValue;
  unint64_t v6;
  unint64_t v7;

  v3 = v1;
  result.responseTimes._rawValue = sub_21FA7E770(0, 1, 1, MEMORY[0x24BEE4AF8]);
  rawValue = result.responseTimes._rawValue;
  v7 = *((_QWORD *)result.responseTimes._rawValue + 2);
  v6 = *((_QWORD *)result.responseTimes._rawValue + 3);
  if (v7 >= v6 >> 1)
  {
    result.responseTimes._rawValue = sub_21FA7E770((_QWORD *)(v6 > 1), v7 + 1, 1, result.responseTimes._rawValue);
    rawValue = result.responseTimes._rawValue;
  }
  rawValue[2] = v7 + 1;
  *(Swift::Double *)&rawValue[v7 + 4] = responseTime;
  *v3 = rawValue;
  return result;
}

Swift::Void __swiftcall ClinicalIngestionResponseTimeMetricValue.add(responseTime:)(Swift::Double responseTime)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_21FA7E770(0, v3[2] + 1, 1, v3);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_21FA7E770((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  *(Swift::Double *)&v3[v5 + 4] = responseTime;
  *v1 = v3;
}

Swift::Void __swiftcall ClinicalIngestionResponseTimeMetricValue.addResponseTimes(from:)(HealthRecordsDaemon::ClinicalIngestionResponseTimeMetricValue from)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain();
  sub_21FBDFF30(v1);
}

uint64_t sub_21FBDFA50(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_21FA7DE54(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  sub_21FA50724(0, (unint64_t *)&qword_25553EC80);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

uint64_t sub_21FBDFBD0(unint64_t a1)
{
  return sub_21FBDFD4C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_21FBFFD24);
}

uint64_t sub_21FBDFBDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_21FA7DFB8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

uint64_t sub_21FBDFD2C(uint64_t a1)
{
  return sub_21FBE0088(a1, (uint64_t (*)(void))sub_21FA7E23C, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingDataNodeInfo);
}

uint64_t sub_21FBDFD40(unint64_t a1)
{
  return sub_21FBDFD4C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_21FBFFF40);
}

uint64_t sub_21FBDFD4C(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x2207D0588](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_21FC5BC7C();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_21FC5B7C0();
  }
  __break(1u);
  return result;
}

uint64_t sub_21FBDFF08(uint64_t a1)
{
  return sub_21FBE0088(a1, (uint64_t (*)(void))sub_21FA7DE84, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_21FBDFF1C(uint64_t a1)
{
  return sub_21FBE0088(a1, (uint64_t (*)(void))sub_21FA7E0EC, type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_21FBDFF30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_21FA7E770(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

uint64_t sub_21FBE0074(uint64_t a1)
{
  return sub_21FBE0088(a1, (uint64_t (*)(void))sub_21FA7E9C4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
}

uint64_t sub_21FBE0088(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

uint64_t sub_21FBE0200(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_21FA7EC68(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  sub_21FA2ED54(0, &qword_25553F0A0, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

uint64_t sub_21FBE0384(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21FBF27C8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_21FBE03FC(v5);
  *a1 = v2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalIngestionResponseTimeMetricValue()
{
  return &type metadata for ClinicalIngestionResponseTimeMetricValue;
}

uint64_t sub_21FBE03FC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_21FC5BDC0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_21FBE0A8C((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_21FBF2764((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_21FC5B7D8();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v95 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (double *)(v95 + 8 * v9);
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_21FBF2344(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_21FBF2344((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_21FBE0A8C((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_21FC5BC64();
  __break(1u);
  return result;
}

uint64_t sub_21FBE0A8C(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_21FBF24E4((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_21FC5BCB8();
  __break(1u);
  return result;
}

unint64_t sub_21FBE0CF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255540578;
  if (!qword_255540578)
  {
    v1 = sub_21FC5AAAC();
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_255540578);
  }
  return result;
}

HealthRecordsDaemon::HTTPHeader_optional __swiftcall HKClinicalGatewayEndpointSchemaParameter.asHTTPHeader(using:)(Swift::OpaquePointer_optional using)
{
  uint64_t *v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  HealthRecordsDaemon::HTTPHeader_optional result;

  v3 = v1;
  v4 = sub_21FBE0F5C((uint64_t)using.value._rawValue);
  if (v5)
  {
    v6 = v4;
    v7 = v5;
    v8 = objc_msgSend(v2, sel_param);
    v9 = sub_21FC5B604();
    v11 = v10;

    *v3 = v9;
    v3[1] = v11;
    v3[2] = v6;
    v3[3] = v7;
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v16 = sub_21FC5AFD4();
    __swift_project_value_buffer(v16, (uint64_t)qword_25406D830);
    v17 = v2;
    v18 = sub_21FC5AFC8();
    v19 = sub_21FC5B970();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v26 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = objc_msgSend(v17, sel_param);
      v23 = sub_21FC5B604();
      v25 = v24;

      sub_21FABDCF8(v23, v25, &v26);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v18, v19, "HKClinicalGatewayEndpointSchemaParameter.asHTTPHeader: no value found for parameter %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v21, -1, -1);
      MEMORY[0x2207D105C](v20, -1, -1);

    }
    else
    {

    }
    *(_OWORD *)v3 = 0u;
    *((_OWORD *)v3 + 1) = 0u;
  }
  result.value.value._object = v15;
  result.value.value._countAndFlagsBits = v14;
  result.value.name._object = v13;
  result.value.name._countAndFlagsBits = v12;
  return result;
}

uint64_t sub_21FBE0F5C(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v3 = objc_msgSend(v1, sel_literal);
  if (v3)
  {
    v4 = v3;
    v5 = sub_21FC5B604();

  }
  else if (a1)
  {
    return sub_21FBE1180(a1);
  }
  else
  {
    if (qword_25406B7F8 != -1)
      swift_once();
    v6 = sub_21FC5AFD4();
    __swift_project_value_buffer(v6, (uint64_t)qword_25406D830);
    v7 = v1;
    v8 = sub_21FC5AFC8();
    v9 = sub_21FC5B970();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v17 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = objc_msgSend(v7, sel_param);
      v13 = sub_21FC5B604();
      v15 = v14;

      sub_21FABDCF8(v13, v15, &v17);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v8, v9, "HKClinicalGatewayEndpointSchemaParameter.paramValue: %s has no literal value and no substitusions is nil.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v11, -1, -1);
      MEMORY[0x2207D105C](v10, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v5;
}

uint64_t sub_21FBE1180(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_variable);
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = sub_21FC5B604();
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  ContentVariables.init(rawValue:)(v9);
  if (v24 == 12)
    goto LABEL_6;
  if (*(_QWORD *)(a1 + 16) && (v10 = sub_21FA74060(v24), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    if (qword_25406B7F8 != -1)
      swift_once();
    v13 = sub_21FC5AFD4();
    __swift_project_value_buffer(v13, (uint64_t)qword_25406D830);
    v14 = v2;
    v15 = sub_21FC5AFC8();
    v16 = sub_21FC5B970();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v24 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = objc_msgSend(v14, sel_param);
      v20 = sub_21FC5B604();
      v22 = v21;

      sub_21FABDCF8(v20, v22, &v24);
      sub_21FC5BAC0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FA27000, v15, v16, "HKClinicalGatewayEndpointSchemaParameter.variableValue: %s no substitusions to apply.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D105C](v18, -1, -1);
      MEMORY[0x2207D105C](v17, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v12;
}

uint64_t sub_21FBE13CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  if ((unint64_t)(result - 1) > 0xC)
    v2 = 0;
  else
    v2 = qword_21FC70F50[result - 1];
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_21FBE13FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  int v25;
  _BOOL4 v26;
  _QWORD *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  v50 = a3;
  v49 = a2;
  v48 = sub_21FC5A98C();
  v4 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_255542058, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - v8;
  v10 = type metadata accessor for PBBlobs(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PBPushBlobsRequest(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2A08C(&qword_255542268, v17, (uint64_t)&protocol conformance descriptor for PBPushBlobsRequest);
  v18 = v51;
  result = sub_21FC5AE90();
  if (!v18)
  {
    v42 = a1;
    v43 = v11;
    v39 = v10;
    v40 = (uint64_t *)v13;
    v44 = 0;
    v45 = v20;
    v41 = v9;
    v46 = result;
    v47 = v4;
    v51 = v6;
    v21 = v48;
    if (qword_25406B7F8 != -1)
      swift_once();
    v22 = sub_21FC5AFD4();
    __swift_project_value_buffer(v22, (uint64_t)qword_25406D830);
    v23 = (uint64_t)v16;
    sub_21FA2D120(v42, (uint64_t)v16, type metadata accessor for PBPushBlobsRequest);
    v24 = sub_21FC5AFC8();
    v25 = sub_21FC5B970();
    v26 = os_log_type_enabled(v24, (os_log_type_t)v25);
    v27 = v49;
    v28 = v43;
    if (v26)
    {
      LODWORD(v42) = v25;
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 134217984;
      v30 = *(_QWORD *)(v23 + *(int *)(v14 + 20))
          + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
      swift_beginAccess();
      v31 = v30;
      v32 = (uint64_t)v41;
      sub_21FA6A498(v31, (uint64_t)v41, &qword_255542058, (void (*)(uint64_t))type metadata accessor for PBBlobs);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v32, 1, v39) == 1)
      {
        v33 = v40;
        *v40 = MEMORY[0x24BEE4AF8];
        sub_21FC5AD10();
        sub_21FA2EDA0(v32, &qword_255542058, (void (*)(uint64_t))type metadata accessor for PBBlobs);
      }
      else
      {
        v33 = v40;
        sub_21FA2D23C(v32, (uint64_t)v40, type metadata accessor for PBBlobs);
      }
      v34 = (uint64_t)v33;
      v35 = *v33;
      swift_bridgeObjectRetain();
      sub_21FA326EC(v34, type metadata accessor for PBBlobs);
      v36 = *(_QWORD *)(v35 + 16);
      swift_bridgeObjectRelease();
      sub_21FA326EC(v23, type metadata accessor for PBPushBlobsRequest);
      v52 = v36;
      sub_21FC5BAC0();
      _os_log_impl(&dword_21FA27000, v24, (os_log_type_t)v42, "Creating PushBlobRequest. Count: %ld", v29, 0xCu);
      MEMORY[0x2207D105C](v29, -1, -1);
    }
    else
    {
      sub_21FA326EC(v23, type metadata accessor for PBPushBlobsRequest);
    }
    v37 = v51;

    v38 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    (*(void (**)(char *, _QWORD *, uint64_t))(v47 + 16))(v37, v38, v21);
    sub_21FC5A59C();
    sub_21FC5A578();
    type metadata accessor for ClinicalSharingCloudStandardAPI();
    swift_bridgeObjectRetain();
    sub_21FC5A56C();
    sub_21FC5A5CC();
    sub_21FC5A5CC();
    return sub_21FC5A5C0();
  }
  return result;
}

uint64_t sub_21FBE1860@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_21FBE1CD8(a1, a2, sub_21FAAA3B4, a3);
}

uint64_t sub_21FBE186C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  v50 = a3;
  v49 = a2;
  v48 = sub_21FC5A98C();
  v4 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_2555420A0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - v8;
  v10 = type metadata accessor for PBDeleteBlobs(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PBDeleteBlobsRequest(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2A08C(&qword_255542330, v17, (uint64_t)&protocol conformance descriptor for PBDeleteBlobsRequest);
  v18 = v51;
  result = sub_21FC5AE90();
  if (!v18)
  {
    v43 = a1;
    v44 = v11;
    v40 = v10;
    v41 = (uint64_t *)v13;
    v45 = 0;
    v46 = v20;
    v42 = v9;
    v47 = result;
    v51 = v6;
    v21 = v48;
    if (qword_25406B7F8 != -1)
      swift_once();
    v22 = sub_21FC5AFD4();
    __swift_project_value_buffer(v22, (uint64_t)qword_25406D830);
    v23 = (uint64_t)v16;
    sub_21FA2D120(v43, (uint64_t)v16, type metadata accessor for PBDeleteBlobsRequest);
    v24 = sub_21FC5AFC8();
    v25 = sub_21FC5B970();
    v26 = os_log_type_enabled(v24, v25);
    v27 = v4;
    v28 = v44;
    if (v26)
    {
      v43 = v4;
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 134217984;
      v30 = *(_QWORD *)(v23 + *(int *)(v14 + 20))
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
      swift_beginAccess();
      v31 = v30;
      v32 = (uint64_t)v42;
      sub_21FA6A498(v31, (uint64_t)v42, &qword_2555420A0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v32, 1, v40) == 1)
      {
        v33 = v41;
        *v41 = MEMORY[0x24BEE4AF8];
        sub_21FC5AD10();
        sub_21FA2EDA0(v32, &qword_2555420A0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
      }
      else
      {
        v33 = v41;
        sub_21FA2D23C(v32, (uint64_t)v41, type metadata accessor for PBDeleteBlobs);
      }
      v35 = *v33;
      swift_bridgeObjectRetain();
      sub_21FA326EC((uint64_t)v33, type metadata accessor for PBDeleteBlobs);
      v36 = *(_QWORD *)(v35 + 16);
      swift_bridgeObjectRelease();
      sub_21FA326EC(v23, type metadata accessor for PBDeleteBlobsRequest);
      v52 = v36;
      sub_21FC5BAC0();
      _os_log_impl(&dword_21FA27000, v24, v25, "Creating DeleteBlobRequest. Count: %ld", v29, 0xCu);
      MEMORY[0x2207D105C](v29, -1, -1);
      v34 = v51;
      v27 = v43;
    }
    else
    {
      sub_21FA326EC(v23, type metadata accessor for PBDeleteBlobsRequest);
      v34 = v51;
    }

    v37 = (char *)__swift_project_boxed_opaque_existential_1(v49, v49[3]);
    v38 = type metadata accessor for ClinicalSharingCloudStandardAPI();
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v34, &v37[*(int *)(v38 + 20)], v21);
    sub_21FC5A59C();
    sub_21FC5A578();
    swift_bridgeObjectRetain();
    sub_21FC5A56C();
    sub_21FC5A5CC();
    sub_21FC5A5CC();
    return sub_21FC5A5C0();
  }
  return result;
}

uint64_t sub_21FBE1CCC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_21FBE1CD8(a1, a2, sub_21FAAAE80, a3);
}

uint64_t sub_21FBE1CD8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = a3(a1, 3);
  *a4 = result;
  return result;
}

uint64_t sub_21FBE1D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v14 = sub_21FC5AAF4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2CEA0(a1, (uint64_t)a7);
  a7[5] = a2;
  a7[6] = a3;
  a7[7] = a4;
  a7[8] = a5;
  v18 = (int *)type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  v19 = (char *)a7 + v18[7];
  v20 = sub_21FC5AAAC();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a6, v20);
  *((_BYTE *)a7 + v18[8]) = HKImproveHealthAndActivityAnalyticsAllowed();
  v36 = (uint64_t)v18;
  sub_21FBE4F30();
  v36 = sub_21FC5B64C();
  v37 = v22;
  sub_21FC5B6AC();
  sub_21FC5AAE8();
  sub_21FC5AAB8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v23 = sub_21FA94BEC(8);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  MEMORY[0x2207D0054](v23, v25, v27, v29);
  sub_21FC5B6AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  v30 = v36;
  v31 = v37;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a6, v20);
  result = __swift_destroy_boxed_opaque_existential_1(v35);
  v33 = (_QWORD *)((char *)a7 + v18[9]);
  *v33 = v30;
  v33[1] = v31;
  return result;
}

uint64_t sub_21FBE1EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  __int128 v72[3];

  v1 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BEE1328];
  sub_21FBE4A64(0, &qword_25554CB68, (unint64_t *)&qword_25406B980, MEMORY[0x24BEE1328], (void (*)(void))sub_21FAEC350);
  v52 = v6;
  v54 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - v7;
  sub_21FBE2630();
  v55 = v9;
  v57 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBE27B8(0);
  v58 = v11;
  v60 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBE27F0(0);
  v61 = v13;
  v63 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBE280C(0, &qword_25554CBB0, v15, (void (*)(void))sub_21FBE28D0);
  v64 = v16;
  v66 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v59 = (char *)&v50 - v17;
  sub_21FBE28EC();
  v65 = v18;
  v67 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v62 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2CEA0(v0, (uint64_t)v72);
  v20 = swift_allocObject();
  sub_21FA3175C(v72, v20 + 16);
  sub_21FA5D3F8(0, (unint64_t *)&qword_25406B9C8, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  *(_QWORD *)&v72[0] = sub_21FC5B25C();
  sub_21FAEED80();
  v21 = sub_21FC5B280();
  swift_release();
  *(_QWORD *)&v72[0] = v21;
  v22 = MEMORY[0x24BDB9AE0];
  sub_21FA5D3F8(0, (unint64_t *)&qword_25406B980, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEC350();
  sub_21FC5B2C8();
  swift_release();
  v23 = v0;
  v68 = v0;
  sub_21FBE45E4(v0, (uint64_t)v4);
  v24 = *(unsigned __int8 *)(v2 + 80);
  v25 = (v24 + 16) & ~v24;
  v69 = v24 | 7;
  v70 = v25 + v3;
  v26 = swift_allocObject();
  v27 = v25;
  sub_21FA2D23C((uint64_t)v4, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  sub_21FA5D3F8(0, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v22);
  v29 = v28;
  sub_21FBE26F0();
  sub_21FBE2758();
  v30 = v52;
  v50 = v29;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v30);
  v31 = (uint64_t)v4;
  sub_21FBE45E4(v23, (uint64_t)v4);
  v32 = swift_allocObject();
  v51 = v25;
  sub_21FA2D23C((uint64_t)v4, v32 + v25, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  sub_21FC5B184();
  sub_21FBE27D4();
  v33 = v53;
  v34 = v55;
  v35 = v71;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v34);
  v36 = v68;
  sub_21FBE45E4(v68, (uint64_t)v4);
  v37 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v4, v37 + v27, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  sub_21FC5B184();
  sub_21FBE28B4();
  v38 = v56;
  v39 = v58;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v39);
  sub_21FBE45E4(v36, (uint64_t)v4);
  v40 = swift_allocObject();
  v41 = v51;
  sub_21FA2D23C(v31, v40 + v51, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  sub_21FC5B184();
  sub_21FBE28D0();
  v42 = v59;
  v43 = v61;
  sub_21FC5B34C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v43);
  sub_21FBE45E4(v68, v31);
  v44 = swift_allocObject();
  sub_21FA2D23C(v31, v44 + v41, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  sub_21FA50724(0, &qword_25406AE10);
  sub_21FBE298C();
  v45 = v62;
  v46 = v64;
  sub_21FC5B2C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v46);
  sub_21FA2A08C(&qword_25554CBD0, (uint64_t (*)(uint64_t))sub_21FBE28EC, MEMORY[0x24BDB96C0]);
  v47 = v65;
  v48 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v47);
  return v48;
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSubmissionTask()
{
  uint64_t result;

  result = qword_25554CCB0;
  if (!qword_25554CCB0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21FBE2630()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554CB70)
  {
    sub_21FBE4A64(255, &qword_25554CB68, (unint64_t *)&qword_25406B980, MEMORY[0x24BEE1328], (void (*)(void))sub_21FAEC350);
    sub_21FA5D3F8(255, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FBE26F0();
    sub_21FBE2758();
    v0 = sub_21FC5B0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554CB70);
  }
}

unint64_t sub_21FBE26F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554CB80;
  if (!qword_25554CB80)
  {
    sub_21FBE4A64(255, &qword_25554CB68, (unint64_t *)&qword_25406B980, MEMORY[0x24BEE1328], (void (*)(void))sub_21FAEC350);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25554CB80);
  }
  return result;
}

unint64_t sub_21FBE2758()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554CB88;
  if (!qword_25554CB88)
  {
    sub_21FA5D3F8(255, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25554CB88);
  }
  return result;
}

void sub_21FBE27B8(uint64_t a1)
{
  sub_21FBE280C(a1, &qword_25554CB90, (void (*)(uint64_t))sub_21FBE2630, (void (*)(void))sub_21FBE27D4);
}

uint64_t sub_21FBE27D4()
{
  return sub_21FA2A08C(&qword_25554CB98, (uint64_t (*)(uint64_t))sub_21FBE2630, MEMORY[0x24BDB9740]);
}

void sub_21FBE27F0(uint64_t a1)
{
  sub_21FBE280C(a1, &qword_25554CBA0, sub_21FBE27B8, (void (*)(void))sub_21FBE28B4);
}

void sub_21FBE280C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_21FA5D3F8(255, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a3(255);
    sub_21FBE2758();
    a4();
    v7 = sub_21FC5B100();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_21FBE28B4()
{
  return sub_21FA2A08C(&qword_25554CBA8, (uint64_t (*)(uint64_t))sub_21FBE27B8, MEMORY[0x24BDB98F0]);
}

uint64_t sub_21FBE28D0()
{
  return sub_21FA2A08C(&qword_25554CBB8, (uint64_t (*)(uint64_t))sub_21FBE27F0, MEMORY[0x24BDB98F0]);
}

void sub_21FBE28EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554CBC0)
  {
    sub_21FBE280C(255, &qword_25554CBB0, sub_21FBE27F0, (void (*)(void))sub_21FBE28D0);
    sub_21FA50724(255, &qword_25406AE10);
    sub_21FBE298C();
    v0 = sub_21FC5B064();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554CBC0);
  }
}

unint64_t sub_21FBE298C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554CBC8;
  if (!qword_25554CBC8)
  {
    sub_21FBE280C(255, &qword_25554CBB0, sub_21FBE27F0, (void (*)(void))sub_21FBE28D0);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB98F0], v1);
    atomic_store(result, (unint64_t *)&qword_25554CBC8);
  }
  return result;
}

_BYTE *sub_21FBE29EC@<X0>(_BYTE *result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)a2 = *result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_21FBE2A08@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  sub_21FA80754(0, &qword_25554CBF8, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  v7 = v6;
  v43 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - v8;
  sub_21FA5D3F8(0, &qword_25554CC00, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - v11;
  v13 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v17 = sub_21FC5AFD4();
  __swift_project_value_buffer(v17, (uint64_t)qword_25406D830);
  sub_21FBE45E4(a2, (uint64_t)v15);
  v18 = v16;
  v19 = v16;
  v20 = sub_21FC5AFC8();
  v21 = sub_21FC5B970();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v44 = v38;
    *(_DWORD *)v22 = 136315394;
    v39 = v7;
    v40 = a3;
    v23 = (uint64_t *)&v15[*(int *)(v13 + 36)];
    v24 = *v23;
    v25 = v23[1];
    swift_bridgeObjectRetain();
    v45 = sub_21FABDCF8(v24, v25, &v44);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    sub_21FBE4928((uint64_t)v15);
    *(_WORD *)(v22 + 12) = 2080;
    v45 = (uint64_t)v16;
    v26 = v16;
    v27 = v16;
    sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
    sub_21FC5BE08();
    v28 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_21FC5BAF0();
    swift_unknownObjectRelease();
    v29 = sub_21FC5B64C();
    v31 = v30;

    v32 = v29;
    a3 = v40;
    v45 = sub_21FABDCF8(v32, v31, &v44);
    sub_21FC5BAC0();
    v7 = v39;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FA27000, v20, v21, "%s Could not retrieve AnalyticsOptInState %s", (uint8_t *)v22, 0x16u);
    v33 = v38;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v33, -1, -1);
    MEMORY[0x2207D105C](v22, -1, -1);
  }
  else
  {
    sub_21FBE4928((uint64_t)v15);

  }
  LOBYTE(v45) = 2;
  v46 = 0;
  v47 = 0;
  v48 = 1;
  v49 = 0;
  v50 = 0;
  sub_21FC5B22C();
  sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
  sub_21FC5B208();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v7);
  sub_21FBE4A04();
  v34 = v42;
  v35 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v34);
  *a3 = v35;
  return result;
}

uint64_t sub_21FBE2E3C@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  void *v29;
  uint64_t (*v30)(void);
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t (*v39)(void);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[5];
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71[8];
  _QWORD v72[3];

  sub_21FA50814();
  v58 = v6;
  v57 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBE4C28();
  v65 = v8;
  v63 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBE4CC8();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  v59 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v60 = v16;
  v61 = (uint64_t)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v52 - v17;
  v19 = a1[1];
  v68 = *a1;
  v69 = v19;
  v70 = a1[2];
  if (qword_25406B7F8 != -1)
    swift_once();
  v20 = sub_21FC5AFD4();
  __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
  sub_21FBE45E4((uint64_t)a2, (uint64_t)v18);
  v21 = sub_21FC5AFC8();
  v22 = sub_21FC5B970();
  if (os_log_type_enabled(v21, v22))
  {
    v55 = v11;
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v54 = a3;
    *(_DWORD *)v23 = 136315138;
    v67[0] = v24;
    v53 = a2;
    v25 = (uint64_t *)&v18[*(int *)(v14 + 36)];
    v26 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain();
    v72[0] = sub_21FABDCF8(v26, v27, v67);
    a2 = v53;
    a3 = v54;
    sub_21FC5BAC0();
    v11 = v55;
    swift_bridgeObjectRelease();
    sub_21FBE4928((uint64_t)v18);
    _os_log_impl(&dword_21FA27000, v21, v22, "%s Retrieving HKClinicalAccount list", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v24, -1, -1);
    MEMORY[0x2207D105C](v23, -1, -1);
  }
  else
  {
    sub_21FBE4928((uint64_t)v18);
  }

  v28 = (void *)__swift_project_boxed_opaque_existential_1(a2, a2[3])[2];
  v67[3] = (uint64_t)&type metadata for ClinicalSharingAccountStore;
  v67[4] = (uint64_t)&off_24E484B78;
  v67[0] = (uint64_t)v28;
  v29 = (void *)*__swift_project_boxed_opaque_existential_1(v67, (uint64_t)&type metadata for ClinicalSharingAccountStore);
  *(_QWORD *)(swift_allocObject() + 16) = v29;
  v30 = MEMORY[0x24BDB9E38];
  sub_21FAEF97C(0, (unint64_t *)&qword_25406B9B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_21FAEFA9C((unint64_t *)&qword_25406B9B0, (unint64_t *)&qword_25406B9B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v30, MEMORY[0x24BDB9E58]);
  v31 = v28;
  v32 = v29;
  v33 = v56;
  sub_21FC5B268();
  sub_21FA2A08C(&qword_25406B9D0, (uint64_t (*)(uint64_t))sub_21FA50814, MEMORY[0x24BDB9E90]);
  v34 = v58;
  v35 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v34);
  v66 = v35;
  v36 = a2;
  sub_21FA2D23C((uint64_t)&v68 + 8, (uint64_t)v71, (uint64_t (*)(_QWORD))sub_21FAEF8F4);
  sub_21FBE4964((uint64_t)&v70, (uint64_t)v72);
  v37 = (_OWORD *)swift_allocObject();
  v38 = v69;
  v37[1] = v68;
  v37[2] = v38;
  v37[3] = v70;
  sub_21FAEF92C((uint64_t)v71);
  sub_21FBE49CC((uint64_t)v72);
  v39 = MEMORY[0x24BDB9AE0];
  sub_21FAEF97C(0, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEFA9C((unint64_t *)&qword_25406B960, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v39, MEMORY[0x24BDB9AF8]);
  v40 = v62;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  v41 = (uint64_t)v36;
  v42 = v61;
  sub_21FBE45E4(v41, v61);
  v43 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v44 = (v60 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject();
  sub_21FA2D23C(v42, v45 + v43, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  v46 = (_OWORD *)(v45 + v44);
  v47 = v69;
  *v46 = v68;
  v46[1] = v47;
  v46[2] = v70;
  sub_21FAEF92C((uint64_t)v71);
  sub_21FBE49CC((uint64_t)v72);
  sub_21FA5D3F8(0, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v39);
  sub_21FA2A08C(&qword_25554CC40, (uint64_t (*)(uint64_t))sub_21FBE4C28, MEMORY[0x24BDB96C0]);
  sub_21FBE2758();
  v49 = v64;
  v48 = v65;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v48);
  sub_21FA2A08C(&qword_25554CC48, (uint64_t (*)(uint64_t))sub_21FBE4CC8, MEMORY[0x24BDB9740]);
  v50 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v49, v11);
  *a3 = v50;
  return result;
}

uint64_t sub_21FBE34A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)a3 = *(_BYTE *)a2;
  *(_QWORD *)(a3 + 8) = v3;
  *(_QWORD *)(a3 + 16) = v4;
  *(_BYTE *)(a3 + 24) = v5;
  *(_QWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBE34EC@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t (*v33)(void);
  char *v34;
  unint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59[3];

  v53 = a3;
  sub_21FBE4A64(0, &qword_25554CC10, &qword_25406BDB8, MEMORY[0x24BEE1768], (void (*)(void))sub_21FAEF258);
  v48 = v5;
  v51 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v43 - v6;
  sub_21FBE4AE4();
  v52 = v7;
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  v47 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v47 + 64);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - v14;
  v16 = a1[1];
  v55 = *a1;
  v56 = v16;
  v57 = a1[2];
  if (qword_25406B7F8 != -1)
    swift_once();
  v17 = sub_21FC5AFD4();
  __swift_project_value_buffer(v17, (uint64_t)qword_25406D830);
  sub_21FBE45E4((uint64_t)a2, (uint64_t)v15);
  v18 = sub_21FC5AFC8();
  v19 = sub_21FC5B970();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v46 = v10;
    v22 = v21;
    v44 = v11;
    v45 = v9;
    *(_DWORD *)v20 = 136315138;
    v59[0] = v21;
    v43 = v20 + 4;
    v23 = (uint64_t *)&v15[*(int *)(v46 + 36)];
    v24 = *v23;
    v25 = v23[1];
    swift_bridgeObjectRetain();
    v58 = sub_21FABDCF8(v24, v25, v59);
    v11 = v44;
    sub_21FC5BAC0();
    v9 = v45;
    swift_bridgeObjectRelease();
    sub_21FBE4928((uint64_t)v15);
    _os_log_impl(&dword_21FA27000, v18, v19, "%s Retrieving Age", v20, 0xCu);
    swift_arrayDestroy();
    v26 = v22;
    v10 = v46;
    MEMORY[0x2207D105C](v26, -1, -1);
    MEMORY[0x2207D105C](v20, -1, -1);
  }
  else
  {
    sub_21FBE4928((uint64_t)v15);
  }

  v27 = (id *)__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v28 = (uint64_t)a2 + *(int *)(v10 + 28);
  v29 = *v27;
  v30 = sub_21FAEA0BC(v28);

  v54 = v30;
  sub_21FA2D23C((uint64_t)&v55 + 8, (uint64_t)&v58, (uint64_t (*)(_QWORD))sub_21FAEF8F4);
  sub_21FBE4964((uint64_t)&v57, (uint64_t)v59);
  v31 = (_OWORD *)swift_allocObject();
  v32 = v56;
  v31[1] = v55;
  v31[2] = v32;
  v31[3] = v57;
  sub_21FAEF92C((uint64_t)&v58);
  sub_21FBE49CC((uint64_t)v59);
  v33 = MEMORY[0x24BDB9AE0];
  sub_21FA5D3F8(0, &qword_25406BDB8, MEMORY[0x24BEE1768], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEF258();
  v34 = v50;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  sub_21FBE45E4((uint64_t)a2, (uint64_t)v13);
  v35 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v36 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v13, v36 + v35, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  v37 = (_OWORD *)(v36 + ((v11 + v35 + 7) & 0xFFFFFFFFFFFFFFF8));
  v38 = v56;
  *v37 = v55;
  v37[1] = v38;
  v37[2] = v57;
  sub_21FAEF92C((uint64_t)&v58);
  sub_21FBE49CC((uint64_t)v59);
  sub_21FA5D3F8(0, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v33);
  sub_21FBE4BA4();
  sub_21FBE2758();
  v39 = v48;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v39);
  sub_21FA2A08C(&qword_25554CC28, (uint64_t (*)(uint64_t))sub_21FBE4AE4, MEMORY[0x24BDB9740]);
  v40 = v52;
  v41 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v9, v40);
  *v53 = v41;
  return result;
}

uint64_t sub_21FBE39F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)a3 = *(_BYTE *)a2;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = v3;
  *(_BYTE *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = v6;
  *(_QWORD *)(a3 + 40) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBE3A38@<X0>(void **a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, const char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  const char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55[2];
  char v56[8];

  v48 = a4;
  sub_21FA80754(0, &qword_25554CBF8, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v44 - v12;
  sub_21FA5D3F8(0, &qword_25554CC00, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v44 - v14;
  v16 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  if (qword_25406B7F8 != -1)
    swift_once();
  v20 = sub_21FC5AFD4();
  __swift_project_value_buffer(v20, (uint64_t)qword_25406D830);
  sub_21FBE45E4(a2, (uint64_t)v18);
  v21 = v19;
  v22 = v19;
  v23 = sub_21FC5AFC8();
  v24 = sub_21FC5B970();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v45 = v11;
    v26 = v25;
    v44 = swift_slowAlloc();
    v55[0] = v44;
    *(_DWORD *)v26 = 136315394;
    v46 = v10;
    v47 = a5;
    v27 = (uint64_t *)&v18[*(int *)(v16 + 36)];
    v28 = *v27;
    v29 = v27[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v52 = sub_21FABDCF8(v28, v29, v55);
    sub_21FC5BAC0();
    swift_bridgeObjectRelease();
    sub_21FBE4928((uint64_t)v18);
    *(_WORD *)(v26 + 12) = 2080;
    *(_QWORD *)&v52 = v19;
    v30 = v19;
    v31 = v19;
    sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
    sub_21FC5BE08();
    v32 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_21FC5BAF0();
    swift_unknownObjectRelease();
    v33 = sub_21FC5B64C();
    v35 = v34;

    v36 = v33;
    a5 = v47;
    *(_QWORD *)&v52 = sub_21FABDCF8(v36, v35, v55);
    sub_21FC5BAC0();
    v10 = v46;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FA27000, v23, v24, v48, (uint8_t *)v26, 0x16u);
    v37 = v44;
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v37, -1, -1);
    v38 = v26;
    v11 = v45;
    MEMORY[0x2207D105C](v38, -1, -1);
  }
  else
  {
    sub_21FBE4928((uint64_t)v18);

  }
  sub_21FA2D23C((uint64_t)a3 + 8, (uint64_t)v56, (uint64_t (*)(_QWORD))sub_21FAEF8F4);
  sub_21FBE4964((uint64_t)(a3 + 2), (uint64_t)v55);
  v39 = a3[1];
  v52 = *a3;
  v53 = v39;
  v54 = a3[2];
  sub_21FAEF92C((uint64_t)v56);
  sub_21FBE49CC((uint64_t)v55);
  v40 = v49;
  sub_21FC5B22C();
  sub_21FA50724(0, (unint64_t *)&qword_25406BB50);
  sub_21FC5B208();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v40, v10);
  sub_21FBE4A04();
  v41 = v51;
  v42 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v15, v41);
  *a5 = v42;
  return result;
}

uint64_t sub_21FBE3E98@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t (*v30)(void);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __int128 v38;
  char *v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58[3];

  v52 = a3;
  sub_21FBE4A64(0, &qword_25554CBD8, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (void (*)(void))sub_21FAEF004);
  v6 = v5;
  v50 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v42 - v7;
  sub_21FBE4800();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  v46 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v47 = v14;
  v48 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v42 - v15;
  v17 = a1[1];
  v54 = *a1;
  v55 = v17;
  v56 = a1[2];
  if (qword_25406B7F8 != -1)
    swift_once();
  v18 = sub_21FC5AFD4();
  __swift_project_value_buffer(v18, (uint64_t)qword_25406D830);
  sub_21FBE45E4((uint64_t)a2, (uint64_t)v16);
  v19 = sub_21FC5AFC8();
  v20 = sub_21FC5B970();
  if (os_log_type_enabled(v19, v20))
  {
    v45 = v9;
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v43 = a2;
    v44 = v6;
    *(_DWORD *)v21 = 136315138;
    v58[0] = v22;
    v23 = (uint64_t *)&v16[*(int *)(v12 + 36)];
    v24 = *v23;
    v25 = v23[1];
    swift_bridgeObjectRetain();
    v57 = sub_21FABDCF8(v24, v25, v58);
    a2 = v43;
    v6 = v44;
    sub_21FC5BAC0();
    v9 = v45;
    swift_bridgeObjectRelease();
    sub_21FBE4928((uint64_t)v16);
    _os_log_impl(&dword_21FA27000, v19, v20, "%s Retrieving Sex", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D105C](v22, -1, -1);
    MEMORY[0x2207D105C](v21, -1, -1);
  }
  else
  {
    sub_21FBE4928((uint64_t)v16);
  }

  v26 = (id)*__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v27 = sub_21FAEA394();

  v53 = v27;
  sub_21FA2D23C((uint64_t)&v54 + 8, (uint64_t)&v57, (uint64_t (*)(_QWORD))sub_21FAEF8F4);
  sub_21FBE4964((uint64_t)&v56, (uint64_t)v58);
  v28 = (_OWORD *)swift_allocObject();
  v29 = v55;
  v28[1] = v54;
  v28[2] = v29;
  v28[3] = v56;
  sub_21FAEF92C((uint64_t)&v57);
  sub_21FBE49CC((uint64_t)v58);
  v30 = MEMORY[0x24BDB9AE0];
  sub_21FA5D3F8(0, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FAEF004();
  v31 = v49;
  sub_21FC5B2C8();
  swift_release();
  swift_release();
  v32 = (uint64_t)a2;
  v33 = v48;
  sub_21FBE45E4(v32, v48);
  v34 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v35 = (v47 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  sub_21FA2D23C(v33, v36 + v34, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  v37 = (_OWORD *)(v36 + v35);
  v38 = v55;
  *v37 = v54;
  v37[1] = v38;
  v37[2] = v56;
  sub_21FAEF92C((uint64_t)&v57);
  sub_21FBE49CC((uint64_t)v58);
  sub_21FA5D3F8(0, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v30);
  sub_21FBE48C0();
  sub_21FBE2758();
  v39 = v51;
  sub_21FC5B2E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v6);
  sub_21FA2A08C(&qword_25554CBF0, (uint64_t (*)(uint64_t))sub_21FBE4800, MEMORY[0x24BDB9740]);
  v40 = sub_21FC5B280();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v39, v9);
  *v52 = v40;
  return result;
}

uint64_t sub_21FBE438C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(_BYTE *)(a2 + 24);
  *(_BYTE *)a3 = *(_BYTE *)a2;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a3 + 24) = v5;
  *(_QWORD *)(a3 + 32) = v3;
  *(_QWORD *)(a3 + 40) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBE43D0@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;

  v6 = (int *)type metadata accessor for ClinicalSharingOnboardingMetric();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21FC5AAAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a1;
  v13 = *((_QWORD *)a1 + 1);
  v29 = *((_QWORD *)a1 + 2);
  v30 = v13;
  v28 = a1[24];
  v14 = *((_QWORD *)a1 + 4);
  v15 = *((_QWORD *)a1 + 5);
  v16 = *((_QWORD *)a2 + 6);
  v26 = *((_QWORD *)a2 + 5);
  v27 = v14;
  v17 = *((_QWORD *)a2 + 7);
  v24 = *((_QWORD *)a2 + 8);
  v25 = v17;
  v18 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, &a2[*(int *)(v18 + 28)], v9);
  LOBYTE(v18) = a2[*(int *)(v18 + 32)];
  a3[3] = (uint64_t)v6;
  a3[4] = (uint64_t)&off_24E490FE8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  v19 = &v8[v6[12]];
  *(_QWORD *)v19 = 0xD000000000000031;
  *((_QWORD *)v19 + 1) = 0x800000021FC7D960;
  *(_QWORD *)v8 = v29;
  v8[8] = v28;
  *((_QWORD *)v8 + 2) = v27;
  *((_QWORD *)v8 + 3) = v15;
  *((_QWORD *)v8 + 4) = v26;
  *((_QWORD *)v8 + 5) = v16;
  v20 = v24;
  *((_QWORD *)v8 + 6) = v25;
  *((_QWORD *)v8 + 7) = v20;
  *((_QWORD *)v8 + 8) = v30;
  v8[v6[10]] = v18;
  v8[v6[11]] = v31 & 1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v8[v6[9]], v12, v9);
  sub_21FA2D23C((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingOnboardingMetric);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21FBE45C0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_21FBE45E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBE462C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8) + 80);
  return sub_21FBE2A08(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_21FBE467C(uint64_t a1)
{
  return sub_21FBE46A8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FBE2E3C);
}

uint64_t sub_21FBE468C(uint64_t a1)
{
  return sub_21FBE46A8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FBE34EC);
}

uint64_t sub_21FBE469C(uint64_t a1)
{
  return sub_21FBE46A8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_21FBE3E98);
}

uint64_t sub_21FBE46A8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t objectdestroy_2Tm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  __swift_destroy_boxed_opaque_existential_1(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 28);
  v5 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FBE47B4@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8) + 80);
  return sub_21FBE43D0(a1, (char *)(v2 + ((v5 + 16) & ~v5)), a2);
}

void sub_21FBE4800()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554CBE0)
  {
    sub_21FBE4A64(255, &qword_25554CBD8, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (void (*)(void))sub_21FAEF004);
    sub_21FA5D3F8(255, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FBE48C0();
    sub_21FBE2758();
    v0 = sub_21FC5B0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554CBE0);
  }
}

unint64_t sub_21FBE48C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554CBE8;
  if (!qword_25554CBE8)
  {
    sub_21FBE4A64(255, &qword_25554CBD8, (unint64_t *)&qword_25406B948, MEMORY[0x24BEE0D00], (void (*)(void))sub_21FAEF004);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25554CBE8);
  }
  return result;
}

uint64_t sub_21FBE4928(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21FBE4964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21FA80754(0, (unint64_t *)&qword_25406BA00, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBE49C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FBE438C(a1, v2 + 16, a2);
}

uint64_t sub_21FBE49CC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21FBE49F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBE4EC4(a1, "%s Could not retrieve sex %s", a2);
}

unint64_t sub_21FBE4A04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554CC08;
  if (!qword_25554CC08)
  {
    sub_21FA5D3F8(255, &qword_25554CC00, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDBA1D0], v1);
    atomic_store(result, (unint64_t *)&qword_25554CC08);
  }
  return result;
}

void sub_21FBE4A64(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_21FA5D3F8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a5();
    v7 = sub_21FC5B064();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_21FBE4AE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554CC18)
  {
    sub_21FBE4A64(255, &qword_25554CC10, &qword_25406BDB8, MEMORY[0x24BEE1768], (void (*)(void))sub_21FAEF258);
    sub_21FA5D3F8(255, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FBE4BA4();
    sub_21FBE2758();
    v0 = sub_21FC5B0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554CC18);
  }
}

unint64_t sub_21FBE4BA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25554CC20;
  if (!qword_25554CC20)
  {
    sub_21FBE4A64(255, &qword_25554CC10, &qword_25406BDB8, MEMORY[0x24BEE1768], (void (*)(void))sub_21FAEF258);
    result = MEMORY[0x2207D0F78](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25554CC20);
  }
  return result;
}

uint64_t sub_21FBE4C10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FBE39F8(a1, v2 + 16, a2);
}

uint64_t sub_21FBE4C1C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBE4EC4(a1, "%s Could not retrieve age %s", a2);
}

void sub_21FBE4C28()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25554CC30)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_21FAEF97C(255, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FAEFA9C((unint64_t *)&qword_25406B960, &qword_25406B968, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_21FC5B064();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25554CC30);
  }
}

void sub_21FBE4CC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554CC38)
  {
    sub_21FBE4C28();
    sub_21FA5D3F8(255, &qword_25554CB78, (uint64_t)&type metadata for OnboardingMetricDetailList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FA2A08C(&qword_25554CC40, (uint64_t (*)(uint64_t))sub_21FBE4C28, MEMORY[0x24BDB96C0]);
    sub_21FBE2758();
    v0 = sub_21FC5B0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554CC38);
  }
}

uint64_t sub_21FBE4D84()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t objectdestroy_17Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FBE4DD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FBE34A8(a1, v2 + 16, a2);
}

uint64_t objectdestroy_20Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  __swift_destroy_boxed_opaque_existential_1(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 28);
  v5 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21FBE4EB8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21FBE4EC4(a1, "%s Could not retrieve HKClinicalAccount list %s", a2);
}

uint64_t sub_21FBE4EC4@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_21FBE3A38(a1, v3 + v8, (__int128 *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3);
}

unint64_t sub_21FBE4F30()
{
  unint64_t result;

  result = qword_25554CC50;
  if (!qword_25554CC50)
  {
    type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25554CC50);
  }
  return result;
}

uint64_t destroy for OnboardingMetricDetailList()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OnboardingMetricDetailList(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OnboardingMetricDetailList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OnboardingMetricDetailList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingMetricDetailList(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingMetricDetailList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingMetricDetailList()
{
  return &type metadata for OnboardingMetricDetailList;
}

_QWORD *sub_21FBE5180(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v9 = a2[8];
    v4[7] = a2[7];
    v4[8] = v9;
    v10 = a3[7];
    v11 = (char *)v4 + v10;
    v12 = (uint64_t)a2 + v10;
    v13 = sub_21FC5AAAC();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21FBE5284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBE52F0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_21FC5AAAC();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_21FBE53C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5AAAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v10 = a3[9];
  v11 = (uint64_t *)((char *)a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FBE54A0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_21FBE5538(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_21FC5AAAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21FBE55F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBE5600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21FC5AAAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_21FBE567C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBE5688(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_21FC5AAAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21FBE56FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5AAAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21FBE5788@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_21FA8D544();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_25553DC90 != -1)
      swift_once();
    v7 = (void *)qword_255572F60;
    v8 = (void *)sub_21FC5B5E0();
    v9 = objc_msgSend(v7, sel_dateFromString_, v8);

    if (v9)
    {
      sub_21FC5AA94();

      v10 = sub_21FC5AAAC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
    }
    else
    {
      v13 = sub_21FC5AAAC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
    }
    return sub_21FA6A41C((uint64_t)v6, a2);
  }
  else
  {
    v11 = sub_21FC5AAAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

id sub_21FBE58F8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  qword_255572F60 = (uint64_t)result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ClinicalSharingSleepSummaryQuery(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  v4 = v3;
  return a1;
}

void destroy for ClinicalSharingSleepSummaryQuery(uint64_t a1)
{
  swift_release();

}

_QWORD *assignWithCopy for ClinicalSharingSleepSummaryQuery(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for ClinicalSharingSleepSummaryQuery(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingSleepSummaryQuery()
{
  return &type metadata for ClinicalSharingSleepSummaryQuery;
}

uint64_t sub_21FBE5A24(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v19;
  _QWORD v20[5];

  sub_21FBE6350();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2CEA0(a1 + 16, (uint64_t)v20);
  v9 = (void *)*__swift_project_boxed_opaque_existential_1(v20, v20[3]);
  v10 = objc_allocWithZone(MEMORY[0x24BEA9950]);
  v11 = v9;
  v12 = (void *)sub_21FC5B5E0();
  v13 = objc_msgSend(v10, sel_initWithIdentifier_healthStore_, v12, v11);

  v14 = sub_21FA88CA4();
  v19 = v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  sub_21FBE63E4();
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_21FA2A08C(&qword_25554CD08, (uint64_t (*)(uint64_t))sub_21FBE63E4, MEMORY[0x24BDB9AF8]);
  swift_retain();
  v16 = a2;
  sub_21FC5B28C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  sub_21FA2A08C(&qword_25554CD10, (uint64_t (*)(uint64_t))sub_21FBE6350, MEMORY[0x24BDB94C8]);
  v17 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v17;
}

uint64_t sub_21FBE5C10@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t Output;
  uint64_t v18;

  sub_21FA2ED54(0, &qword_25553F0A0, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for PBTypedData(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
    goto LABEL_4;
  v15 = *a1;
  sub_21FBE5D8C(v15, a2, a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {

    sub_21FA2EDA0((uint64_t)v10, &qword_25553F0A0, (void (*)(uint64_t))type metadata accessor for PBTypedData);
LABEL_4:
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Output - 8) + 56))(a4, 1, 1, Output);
  }
  sub_21FA2D23C((uint64_t)v10, (uint64_t)v14, type metadata accessor for PBTypedData);
  sub_21FBE7488((uint64_t)v14, 0, a2, a3, a4);

  return sub_21FA326EC((uint64_t)v14, type metadata accessor for PBTypedData);
}

uint64_t sub_21FBE5D8C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;

  v46 = sub_21FC5AAAC();
  v43 = *(_QWORD *)(v46 - 8);
  v8 = MEMORY[0x24BDAC7A8](v46);
  v47 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v41 - v10;
  sub_21FA2ED54(0, &qword_25553E0E8, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - v12;
  v14 = type metadata accessor for PBDateRange(0);
  MEMORY[0x24BDAC7A8](v14);
  v45 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2ED54(0, &qword_25553EBB0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - v17;
  v19 = type metadata accessor for PBSleepSummary(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v48 = (uint64_t)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v41 - v23;
  v49 = a3;
  sub_21FBE61A0(a1, a3, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_21FA2EDA0((uint64_t)v18, &qword_25553EBB0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
    v25 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a4, 1, 1, v25);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v18, (uint64_t)v24, type metadata accessor for PBSleepSummary);
    sub_21FC5AD10();
    v27 = type metadata accessor for PBTypedData(0);
    v41 = v24;
    v42 = v27;
    v28 = *(int *)(v27 + 20);
    if (qword_25553D590 != -1)
      swift_once();
    *(_QWORD *)(a4 + v28) = qword_25553E450;
    v29 = a2;
    v30 = a2 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
    v32 = a2 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date;
    v33 = v46;
    v31(v44, v32, v46);
    v31(v47, v30, v33);
    swift_retain();
    sub_21FC5A68C();
    v34 = sub_21FC5A6C8();
    v35 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v13, 0, 1, v34);
    v36 = (uint64_t)v45;
    sub_21FBE816C(5, 1, v13, v29);
    sub_21FA2EDA0((uint64_t)v13, &qword_25553E0E8, v35);
    PBTypedData.dateRange.setter(v36);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v37 = swift_retain();
      *(_QWORD *)(a4 + v28) = sub_21FA3A458(v37);
      swift_release();
    }
    v38 = *(_QWORD *)(a4 + v28);
    swift_beginAccess();
    *(_QWORD *)(v38 + 16) = 113;
    *(_BYTE *)(v38 + 24) = 1;
    v39 = (uint64_t)v41;
    v40 = v48;
    sub_21FBE6484((uint64_t)v41, v48);
    PBTypedData.sleepSummary.setter(v40);
    sub_21FA326EC(v39, type metadata accessor for PBSleepSummary);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(a4, 0, 1, v42);
  }
}

uint64_t sub_21FBE61A0@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v6 = type metadata accessor for PBSleepSummary(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_isEnabled))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  sub_21FC5AD10();
  objc_msgSend(a1, sel_sleepDurationGoal);
  *(float *)&v10 = v10 / 60.0;
  *((_DWORD *)v9 + 2) = LODWORD(v10);
  v11 = objc_msgSend(a1, sel_occurrences);
  sub_21FA5BE58(0, &qword_25554CD18);
  v12 = sub_21FC5B7A8();

  swift_retain();
  v13 = a2;
  v14 = sub_21FBE64C8(v12);
  swift_bridgeObjectRelease();

  swift_release();
  *(_QWORD *)v9 = v14;
  sub_21FBE6484((uint64_t)v9, a3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  return sub_21FA326EC((uint64_t)v9, type metadata accessor for PBSleepSummary);
}

uint64_t sub_21FBE6348()
{
  uint64_t v0;

  return sub_21FBE5A24(*(_QWORD *)v0, *(void **)(v0 + 8));
}

void sub_21FBE6350()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554CCF8)
  {
    sub_21FBE63E4();
    type metadata accessor for ClinicalSharingQueryOutput(255);
    sub_21FA2A08C(&qword_25554CD08, (uint64_t (*)(uint64_t))sub_21FBE63E4, MEMORY[0x24BDB9AF8]);
    v0 = sub_21FC5B004();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554CCF8);
  }
}

void sub_21FBE63E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25554CD00)
  {
    sub_21FA88F00(255);
    sub_21FA2CDB4();
    v0 = sub_21FC5B190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25554CD00);
  }
}

uint64_t sub_21FBE6450()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21FBE647C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21FBE5C10(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_21FBE6484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PBSleepSummary(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21FBE64C8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  id v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  char v46;
  _BYTE *v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  _QWORD v54[2];
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;

  v2 = v1;
  v63 = sub_21FC5A83C();
  v58 = *(_QWORD *)(v63 - 8);
  v4 = MEMORY[0x24BDAC7A8](v63);
  v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)v54 - v7;
  sub_21FA2ED54(0, &qword_25554CD20, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v54 - v9;
  v11 = type metadata accessor for PBSleepSummary.Schedule(0);
  v66 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v64 = (uint64_t)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v54 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v59 = (uint64_t)v54 - v17;
  if (a1 >> 62)
  {
LABEL_68:
    swift_bridgeObjectRetain();
    v18 = sub_21FC5BC7C();
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_3:
      v57 = v6;
      v54[1] = v2;
      v62 = a1 & 0xC000000000000001;
      v19 = MEMORY[0x24BEE4AF8];
      v2 = 4;
      v61 = v18;
      v65 = v16;
      v55 = v11;
      v56 = a1;
      while (1)
      {
        v67 = v19;
        v6 = (char *)(v2 - 4);
        v21 = a1;
        if (v62)
          v22 = (id)MEMORY[0x2207D057C](v2 - 4, a1);
        else
          v22 = *(id *)(a1 + 8 * v2);
        v23 = v22;
        a1 = v2 - 3;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        if ((objc_msgSend(v22, sel_isSingleDayOverride) & 1) != 0)
        {
          v24 = v66;
          (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v66 + 56))(v10, 1, 1, v11);

          if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v24 + 48))(v10, 1, v11) != 1)
            goto LABEL_48;
          goto LABEL_4;
        }
        *((_QWORD *)v16 + 1) = 0;
        *(_DWORD *)v16 = 0;
        *(_DWORD *)(v16 + 3) = 0;
        sub_21FC5AD10();
        v25 = objc_msgSend(v23, sel_bedtimeComponents);
        v26 = v60;
        sub_21FC5A7AC();

        v27 = sub_21FC5A7D0();
        if ((v28 & 1) != 0)
          v29 = 0;
        else
          v29 = v27;
        v11 = 60 * v29;
        if ((unsigned __int128)(v29 * (__int128)60) >> 64 != (60 * v29) >> 63)
          goto LABEL_62;
        v30 = sub_21FC5A800();
        if ((v31 & 1) != 0)
          v32 = 0;
        else
          v32 = v30;
        v33 = v11 + v32;
        if (__OFADD__(v11, v32))
          goto LABEL_63;
        v34 = sub_21FC5A818() / 60;
        if ((v35 & 1) != 0)
          v34 = 0;
        v11 = v33 + v34;
        if (__OFADD__(v33, v34))
          goto LABEL_64;
        v36 = *(void (**)(char *, uint64_t))(v58 + 8);
        v36(v26, v63);
        if ((v11 & 0x8000000000000000) != 0 || HIDWORD(v11))
        {
LABEL_71:
          result = sub_21FC5BC64();
          __break(1u);
          return result;
        }
        *((_DWORD *)v16 + 2) = v11;
        v37 = objc_msgSend(v23, sel_wakeUpComponents);
        v16 = v57;
        sub_21FC5A7AC();

        v38 = sub_21FC5A7D0();
        if ((v39 & 1) != 0)
          v40 = 0;
        else
          v40 = v38;
        v11 = 60 * v40;
        if ((unsigned __int128)(v40 * (__int128)60) >> 64 != (60 * v40) >> 63)
          goto LABEL_65;
        v41 = sub_21FC5A800();
        if ((v42 & 1) != 0)
          v43 = 0;
        else
          v43 = v41;
        v44 = __OFADD__(v11, v43);
        v11 += v43;
        if (v44)
          goto LABEL_66;
        v45 = sub_21FC5A818() / 60;
        if ((v46 & 1) != 0)
          v45 = 0;
        v44 = __OFADD__(v11, v45);
        v11 += v45;
        if (v44)
          goto LABEL_67;
        v36(v16, v63);
        if ((v11 & 0x8000000000000000) != 0)
          goto LABEL_71;
        v21 = v56;
        v18 = v61;
        v47 = v65;
        if (HIDWORD(v11))
          goto LABEL_71;
        *((_DWORD *)v65 + 3) = v11;
        v48 = objc_msgSend(v23, sel_weekdays);
        if ((v48 & 1) != 0)
        {
          v47[1] = 1;
          v11 = v55;
          if ((v48 & 2) == 0)
          {
LABEL_41:
            if ((v48 & 4) == 0)
              goto LABEL_42;
            goto LABEL_55;
          }
        }
        else
        {
          v11 = v55;
          if ((v48 & 2) == 0)
            goto LABEL_41;
        }
        v47[2] = 1;
        if ((v48 & 4) == 0)
        {
LABEL_42:
          if ((v48 & 8) == 0)
            goto LABEL_43;
          goto LABEL_56;
        }
LABEL_55:
        v47[3] = 1;
        if ((v48 & 8) == 0)
        {
LABEL_43:
          if ((v48 & 0x10) == 0)
            goto LABEL_44;
          goto LABEL_57;
        }
LABEL_56:
        v47[4] = 1;
        if ((v48 & 0x10) == 0)
        {
LABEL_44:
          if ((v48 & 0x20) == 0)
            goto LABEL_45;
          goto LABEL_58;
        }
LABEL_57:
        v47[5] = 1;
        if ((v48 & 0x20) == 0)
        {
LABEL_45:
          if ((v48 & 0x40) == 0)
            goto LABEL_47;
LABEL_46:
          *v47 = 1;
          goto LABEL_47;
        }
LABEL_58:
        v47[6] = 1;
        if ((v48 & 0x40) != 0)
          goto LABEL_46;
LABEL_47:
        sub_21FA2D23C((uint64_t)v47, (uint64_t)v10, type metadata accessor for PBSleepSummary.Schedule);
        v49 = v66;
        (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v66 + 56))(v10, 0, 1, v11);

        if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v49 + 48))(v10, 1, v11) != 1)
        {
LABEL_48:
          v50 = v59;
          sub_21FA2D23C((uint64_t)v10, v59, type metadata accessor for PBSleepSummary.Schedule);
          sub_21FA2D23C(v50, v64, type metadata accessor for PBSleepSummary.Schedule);
          v19 = v67;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v19 = sub_21FA7E9B0(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
          v16 = v65;
          v52 = *(_QWORD *)(v19 + 16);
          v51 = *(_QWORD *)(v19 + 24);
          if (v52 >= v51 >> 1)
            v19 = sub_21FA7E9B0(v51 > 1, v52 + 1, 1, v19);
          *(_QWORD *)(v19 + 16) = v52 + 1;
          sub_21FA2D23C(v64, v19+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v52, type metadata accessor for PBSleepSummary.Schedule);
          v18 = v61;
          goto LABEL_5;
        }
LABEL_4:
        sub_21FA2EDA0((uint64_t)v10, &qword_25554CD20, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
        v19 = v67;
        v16 = v65;
LABEL_5:
        ++v2;
        v20 = a1 == v18;
        a1 = v21;
        if (v20)
        {
          swift_bridgeObjectRelease();
          return v19;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

_QWORD *initializeWithCopy for ClinicalSharingMultiDeviceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingMultiDeviceInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for ClinicalSharingMultiDeviceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingMultiDeviceInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingMultiDeviceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingMultiDeviceInfo()
{
  return &type metadata for ClinicalSharingMultiDeviceInfo;
}

BOOL sub_21FBE6CFC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_21FBE6D44(v5, v7);
}

BOOL sub_21FBE6D44(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  char v8;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_21FC5BDF0(), result = 0, (v5 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3])
      return a1[4] == a2[4];
    v8 = sub_21FC5BDF0();
    result = 0;
    if ((v8 & 1) != 0)
      return a1[4] == a2[4];
  }
  return result;
}

id sub_21FBE6DC8(void *a1)
{
  objc_class *v2;
  char *v3;
  id v4;
  objc_super v6;

  v2 = (objc_class *)type metadata accessor for VerifiableHealthRecordsParsingServiceServer();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon43VerifiableHealthRecordsParsingServiceServer_cancellables] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon43VerifiableHealthRecordsParsingServiceServer_client] = a1;
  v6.receiver = v3;
  v6.super_class = v2;
  v4 = a1;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for SignedClinicalDataDaemonPlugin()
{
  return objc_opt_self();
}

uint64_t sub_21FBE6E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;

  sub_21FAEA068();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21FC5EE30;
  if (qword_25406BE88 != -1)
    swift_once();
  v1 = qword_25406D890;
  v2 = *(_QWORD *)algn_25406D898;
  v3 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  v4 = objc_allocWithZone(v3);
  swift_bridgeObjectRetain();
  v5 = sub_21FA2EF8C(v1, v2, 0xD000000000000041, 0x800000021FC7DA60, (uint64_t)sub_21FBE6DC8, 0);
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = &off_24E4838E0;
  *(_QWORD *)(v0 + 32) = v5;
  return v0;
}

unint64_t sub_21FBE6F54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, __int16 a5)
{
  id v7;

  sub_21FC5BB74();
  swift_bridgeObjectRelease();
  sub_21FC5B6AC();
  if (a3)
  {
    v7 = a3;
    objc_msgSend(v7, sel_code);
    sub_21FC5BDCC();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    sub_21FC5B6AC();

    swift_bridgeObjectRelease();
  }
  if ((a5 & 0x100) == 0)
  {
    sub_21FC5B64C();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
    sub_21FC5B6AC();
    swift_bridgeObjectRelease();
  }
  return 0xD000000000000011;
}

uint64_t sub_21FBE70B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21FBE7118(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingWalkingSteadinessClassificationQuery, (void (*)(uint64_t *, char *))sub_21FBF4030, a3);
}

uint64_t sub_21FBE70C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21FBE7118(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSampleQuery, (void (*)(uint64_t *, char *))sub_21FBF4030, a3);
}

uint64_t sub_21FBE70DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21FBE762C(a1, a2, type metadata accessor for ClinicalSharingSleepStatisticsQuery, (void (*)(uint64_t *, char *))sub_21FBF4030, a3);
}

uint64_t sub_21FBE70F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21FBE7118(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery, (void (*)(uint64_t *, char *))sub_21FBF4030, a3);
}

uint64_t sub_21FBE7104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21FBE7118(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery, (void (*)(uint64_t *, char *))sub_21FBF4030, a3);
}

uint64_t sub_21FBE7118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(uint64_t *, char *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t Output;
  _QWORD *v23;
  _BYTE v24[16];
  _QWORD *v25;

  v11 = sub_21FC5ACD4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(_QWORD *)(*(_QWORD *)v5 + 56);
  swift_bridgeObjectRetain();
  sub_21FBEA398(a3, v14);
  v25 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_21FBE9FC4(MEMORY[0x24BEE4AF8], a4, (uint64_t)v24, v15);
  swift_bridgeObjectRelease_n();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if (*(_QWORD *)(v16 + 16))
  {
    sub_21FA2D120(a1, a5, type metadata accessor for PBTypedData);
    v17 = sub_21FBF27F0(v16);
    swift_bridgeObjectRelease();
    if (a2)
    {
      v18 = *(void **)(v5 + *(int *)(a3(0) + 24));
      v19 = v18;
    }
    else
    {
      v18 = 0;
    }
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(_QWORD *)(a5 + *(int *)(Output + 20)) = v17;
    v23 = (_QWORD *)(a5 + *(int *)(Output + 24));
    *v23 = v18;
    v23[1] = a2;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(Output - 8) + 56))(a5, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    v20 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21FBE72C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t Output;
  _QWORD *v19;
  _BYTE v20[16];
  _QWORD *v21;

  v7 = sub_21FC5ACD4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_21FBEA5E0(v10);
  v21 = v10;
  swift_bridgeObjectRetain();
  v12 = sub_21FBE9FC4(MEMORY[0x24BEE4AF8], (void (*)(uint64_t *, char *))sub_21FBF4030, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if (*(_QWORD *)(v12 + 16))
  {
    sub_21FA2D120(a1, a3, type metadata accessor for PBTypedData);
    v13 = sub_21FBF27F0(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      v14 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v15 = objc_msgSend(v14, sel_activitySummaryType);
    }
    else
    {
      v15 = 0;
    }
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(_QWORD *)(a3 + *(int *)(Output + 20)) = v13;
    v19 = (_QWORD *)(a3 + *(int *)(Output + 24));
    *v19 = v15;
    v19[1] = a2;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(Output - 8) + 56))(a3, 0, 1, Output);
  }
  else
  {
    v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21FBE7488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t Output;
  _QWORD *v21;
  _BYTE v22[16];
  _QWORD *v23;

  v10 = sub_21FC5ACD4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(a3 + 56);
  swift_bridgeObjectRetain();
  sub_21FBEA7C0(a4, v13);
  v23 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_21FBE9FC4(MEMORY[0x24BEE4AF8], (void (*)(uint64_t *, char *))sub_21FBF4030, (uint64_t)v22, v14);
  swift_bridgeObjectRelease_n();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if (*(_QWORD *)(v15 + 16))
  {
    sub_21FA2D120(a1, a5, type metadata accessor for PBTypedData);
    v16 = sub_21FBF27F0(v15);
    swift_bridgeObjectRelease();
    if (a2)
      v17 = a4;
    else
      a4 = 0;
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(_QWORD *)(a5 + *(int *)(Output + 20)) = v16;
    v21 = (_QWORD *)(a5 + *(int *)(Output + 24));
    *v21 = a4;
    v21[1] = a2;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(Output - 8) + 56))(a5, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    v18 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a5, 1, 1, v18);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21FBE762C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(uint64_t *, char *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t Output;
  _QWORD *v23;
  _BYTE v24[16];
  _QWORD *v25;

  v11 = sub_21FC5ACD4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(_QWORD *)(*(_QWORD *)v5 + 56);
  swift_bridgeObjectRetain();
  sub_21FBEA990(a3, v14);
  v25 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_21FBE9FC4(MEMORY[0x24BEE4AF8], a4, (uint64_t)v24, v15);
  swift_bridgeObjectRelease_n();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if (*(_QWORD *)(v16 + 16))
  {
    sub_21FA2D120(a1, a5, type metadata accessor for PBTypedData);
    v17 = sub_21FBF27F0(v16);
    swift_bridgeObjectRelease();
    if (a2)
    {
      v18 = *(void **)(v5 + *(int *)(a3(0) + 32));
      v19 = v18;
    }
    else
    {
      v18 = 0;
    }
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(_QWORD *)(a5 + *(int *)(Output + 20)) = v17;
    v23 = (_QWORD *)(a5 + *(int *)(Output + 24));
    *v23 = v18;
    v23[1] = a2;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(Output - 8) + 56))(a5, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    v20 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21FBE77DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t result;
  uint64_t Output;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = (uint64_t)v3;
  v30 = a1;
  v31 = a2;
  v32 = a3;
  v5 = sub_21FC5ACD4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(*v3 + 56);
  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  v10 = (void *)v3[2];
  sub_21FA5BE58(0, &qword_25553FF78);
  v11 = (void *)*MEMORY[0x24BDD33A0];
  swift_bridgeObjectRetain();
  v12 = v10;
  v13 = (void *)MEMORY[0x2207D03B4](v11);
  LOBYTE(v10) = sub_21FC5BA60();

  if ((v10 & 1) != 0)
    goto LABEL_3;
  v14 = (void *)*MEMORY[0x24BDD33A8];
  v15 = v12;
  sub_21FBF3FA8(v4);
  v16 = (void *)MEMORY[0x2207D03B4](v14);
  LOBYTE(v14) = sub_21FC5BA60();

  sub_21FBF3FE8(v4);
  if ((v14 & 1) != 0)
  {
LABEL_3:
    v17 = objc_msgSend((id)objc_opt_self(), sel_correlationTypeForIdentifier_, *MEMORY[0x24BDD2B08], v30);
    if (!v17)
    {
      result = sub_21FC5BC70();
      __break(1u);
      return result;
    }
    *v8 = v17;
  }
  else
  {
    *v8 = v15;
    v18 = v15;
  }
  v19 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE458E8], v5);
  MEMORY[0x24BDAC7A8](v19);
  v29 = v8;
  swift_bridgeObjectRetain();
  v20 = sub_21FBE9FC4(MEMORY[0x24BEE4AF8], (void (*)(uint64_t *, char *))sub_21FBF4030, (uint64_t)(&v30 - 4), v9);
  swift_bridgeObjectRelease_n();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if (*(_QWORD *)(v20 + 16))
  {
    v21 = v32;
    sub_21FA2D120(v30, v32, type metadata accessor for PBTypedData);
    v22 = sub_21FBF27F0(v20);
    swift_bridgeObjectRelease();
    v23 = v31;
    if (v31)
      v24 = v12;
    else
      v12 = 0;
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(_QWORD *)(v21 + *(int *)(Output + 20)) = v22;
    v28 = (_QWORD *)(v21 + *(int *)(Output + 24));
    *v28 = v12;
    v28[1] = v23;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(Output - 8) + 56))(v21, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    v25 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v32, 1, 1, v25);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21FBE7B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for PBECGMeasurement(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v15 = v1;
    v17 = MEMORY[0x24BEE4AF8];
    sub_21FC01DF4(0, v7, 0);
    v8 = v17;
    v16 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
    v9 = *(_QWORD *)(v16 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_21FA2D120(v10 + *(int *)(v16 + 20), (uint64_t)v6, type metadata accessor for PBECGMeasurement);
      v17 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21FC01DF4(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      sub_21FA2D23C((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, type metadata accessor for PBECGMeasurement);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_21FBE7C84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_21FC5AAAC();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v20 = sub_21FC5A6C8();
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v18[1] = v1;
    v21 = MEMORY[0x24BEE4AF8];
    sub_21FC0196C(0, v8, 0);
    v9 = v21;
    v10 = *(_QWORD *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0) - 8);
    v11 = (id *)(a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
    v19 = *(_QWORD *)(v10 + 72);
    do
    {
      v12 = *v11;
      v13 = objc_msgSend(*v11, sel_startDate);
      sub_21FC5AA94();

      v14 = objc_msgSend(v12, sel_endDate);
      sub_21FC5AA94();

      sub_21FC5A68C();
      v21 = v9;
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_21FC0196C(v15 > 1, v16 + 1, 1);
        v9 = v21;
      }
      *(_QWORD *)(v9 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16, v7, v20);
      v11 = (id *)((char *)v11 + v19);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_21FBE7E90@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v37 = sub_21FC5AAAC();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - v11;
  v13 = sub_21FC5A6C8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0xE000000000000000;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_21FC5AD10();
  *(_QWORD *)(a4 + 32) = a1;
  *(_BYTE *)(a4 + 40) = a2 & 1;
  sub_21FA44968(a3, (uint64_t)v12, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_21FA2D1F8((uint64_t)v12, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v34 = v13;
  v18(v16, v12, v13);
  sub_21FC5A6A4();
  v19 = v36;
  v20 = *(id *)(*v36 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  v21 = (void *)sub_21FC5AA64();
  v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

  v23 = sub_21FC5B604();
  v25 = v24;

  v26 = *(void (**)(char *, uint64_t))(v35 + 8);
  v27 = v37;
  v26(v9, v37);
  swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v23;
  *(_QWORD *)(a4 + 8) = v25;
  sub_21FC5A680();
  v28 = *(id *)(*v19 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  v29 = (void *)sub_21FC5AA64();
  v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

  v31 = sub_21FC5B604();
  v33 = v32;

  v26(v9, v27);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v34);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 16) = v31;
  *(_QWORD *)(a4 + 24) = v33;
  return result;
}

uint64_t sub_21FBE8170@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a4;
  v9 = sub_21FC5AAAC();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - v13;
  v15 = sub_21FC5A6C8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0xE000000000000000;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_21FC5AD10();
  *(_QWORD *)(a5 + 32) = a1;
  *(_BYTE *)(a5 + 40) = a2 & 1;
  sub_21FA44968(a3, (uint64_t)v14, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_21FA2D1F8((uint64_t)v14, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  v20 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v35 = v15;
  v20(v18, v14, v15);
  sub_21FC5A6A4();
  v21 = *(id *)(v36 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  v22 = (void *)sub_21FC5AA64();
  v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

  v24 = sub_21FC5B604();
  v26 = v25;

  v27 = v38;
  v28 = *(void (**)(char *, uint64_t))(v37 + 8);
  v28(v11, v38);
  swift_bridgeObjectRelease();
  *(_QWORD *)a5 = v24;
  *(_QWORD *)(a5 + 8) = v26;
  sub_21FC5A680();
  v29 = v21;
  v30 = (void *)sub_21FC5AA64();
  v31 = objc_msgSend(v29, sel_stringFromDate_, v30);

  v32 = sub_21FC5B604();
  v34 = v33;

  v28(v11, v27);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v35);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 16) = v32;
  *(_QWORD *)(a5 + 24) = v34;
  return result;
}

uint64_t sub_21FBE842C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = sub_21FC5AAAC();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - v11;
  v13 = sub_21FC5A6C8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0xE000000000000000;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_21FC5AD10();
  *(_QWORD *)(a4 + 32) = a1;
  *(_BYTE *)(a4 + 40) = a2 & 1;
  sub_21FA44968(a3, (uint64_t)v12, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_21FA2D1F8((uint64_t)v12, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v36 = v13;
  v18(v16, v12, v13);
  sub_21FC5A6A4();
  v35 = *(int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() + 20);
  v19 = v38;
  v20 = objc_retain(*(id *)(*(_QWORD *)(v38 + v35)
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  v21 = (void *)sub_21FC5AA64();
  v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

  v23 = sub_21FC5B604();
  v25 = v24;

  v26 = *(void (**)(char *, uint64_t))(v37 + 8);
  v27 = v39;
  v26(v9, v39);
  swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v23;
  *(_QWORD *)(a4 + 8) = v25;
  sub_21FC5A680();
  v28 = objc_retain(*(id *)(*(_QWORD *)(v19 + v35)
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  v29 = (void *)sub_21FC5AA64();
  v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

  v31 = sub_21FC5B604();
  v33 = v32;

  v26(v9, v27);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 16) = v31;
  *(_QWORD *)(a4 + 24) = v33;
  return result;
}

uint64_t sub_21FBE871C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  void (*v19)(char *, char *, uint64_t);
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;

  v8 = sub_21FC5AAAC();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v34 - v12;
  v14 = sub_21FC5A6C8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0xE000000000000000;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_21FC5AD10();
  *(_QWORD *)(a4 + 32) = a1;
  *(_BYTE *)(a4 + 40) = a2 & 1;
  sub_21FA44968(a3, (uint64_t)v13, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_21FA2D1F8((uint64_t)v13, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  v19 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v34[0] = v14;
  v19(v17, v13, v14);
  sub_21FC5A6A4();
  v20 = objc_retain(*(id *)(*(_QWORD *)v34[1]
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  v21 = (void *)sub_21FC5AA64();
  v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

  v23 = sub_21FC5B604();
  v25 = v24;

  v26 = v36;
  v27 = *(void (**)(char *, uint64_t))(v35 + 8);
  v27(v10, v36);
  swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v23;
  *(_QWORD *)(a4 + 8) = v25;
  sub_21FC5A680();
  v28 = v20;
  v29 = (void *)sub_21FC5AA64();
  v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

  v31 = sub_21FC5B604();
  v33 = v32;

  v27(v10, v26);
  (*(void (**)(char *, _QWORD))(v15 + 8))(v17, v34[0]);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 16) = v31;
  *(_QWORD *)(a4 + 24) = v33;
  return result;
}

uint64_t sub_21FBE89DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;

  v4 = sub_21FC5A6C8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v32 - v8;
  sub_21FA2D1A0(0, &qword_25553E0E8, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v34 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  v18 = v5;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v41 = a2;
  v40(a2, 1, 1, v4);
  v19 = *(_QWORD *)(a1 + 16);
  v32 = a1;
  if (v19)
  {
    v20 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v36 = *(_QWORD *)(v5 + 72);
    v37 = v15;
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
    v33 = v17;
    while (1)
    {
      v38(v17, v20, v4);
      v40((uint64_t)v17, 0, 1, v4);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (v23(v17, 1, v4) == 1)
        break;
      v24 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v24(v39, v17, v4);
      v25 = (uint64_t)v37;
      sub_21FA44968(v41, (uint64_t)v37, &qword_25553E0E8, v21);
      if (v23((char *)v25, 1, v4) == 1)
      {
        v22 = v41;
        sub_21FA2D1F8(v41, &qword_25553E0E8, v21);
        sub_21FA2D1F8(v25, &qword_25553E0E8, v21);
        v24((char *)v22, v39, v4);
        v40(v22, 0, 1, v4);
      }
      else
      {
        v26 = v35;
        v24(v35, (char *)v25, v4);
        v27 = v18;
        v28 = v39;
        v29 = (uint64_t)v34;
        sub_21FC5A6BC();
        v30 = *(void (**)(char *, uint64_t))(v27 + 8);
        v30(v26, v4);
        v30(v28, v4);
        sub_21FA2D1F8(v41, &qword_25553E0E8, v21);
        v40(v29, 0, 1, v4);
        v18 = v27;
        v17 = v33;
        sub_21FA2D280(v29, v41, &qword_25553E0E8, v21);
      }
      v20 += v36;
      if (!--v19)
        goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    v40((uint64_t)v17, 1, 1, v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21FBE8D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FBE8D30(a1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSampleQuery, a2);
}

uint64_t sub_21FBE8D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21FBE8D30(a1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingHistogramQuery, a2);
}

uint64_t sub_21FBE8D30@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v37 = a1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v36 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v34 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v14 = type metadata accessor for PBDateRange(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v35 = (uint64_t)&v34 - v19;
  sub_21FC5AD10();
  v20 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_25553D590 != -1)
    swift_once();
  *(_QWORD *)(a3 + v20) = qword_25553E450;
  v21 = *(void **)(v3 + *(int *)(a2(0) + 24));
  swift_retain();
  v22 = v21;
  sub_21FAE78C4((uint64_t)&v38);

  if ((v40 & 1) == 0)
  {
    v23 = v38;
    v24 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v34 = v15;
      v25 = swift_retain();
      v15 = v34;
      *(_QWORD *)(a3 + v20) = sub_21FA3A458(v25);
      swift_release();
    }
    v26 = *(_QWORD *)(a3 + v20);
    swift_beginAccess();
    *(_QWORD *)(v26 + 16) = v23;
    *(_BYTE *)(v26 + 24) = v24 & 1;
  }
  sub_21FA44968(v37, (uint64_t)v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_21FA2D1F8((uint64_t)v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v28 = (uint64_t)v13;
  v29 = v35;
  sub_21FA2D23C(v28, v35, type metadata accessor for PBDateRange);
  sub_21FA2D120(v29, (uint64_t)v18, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    v30 = swift_retain();
    *(_QWORD *)(a3 + v20) = sub_21FA3A458(v30);
    swift_release();
  }
  v31 = *(_QWORD *)(a3 + v20);
  sub_21FA2D23C((uint64_t)v18, (uint64_t)v11, type metadata accessor for PBDateRange);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  v32 = v36;
  sub_21FA2D280((uint64_t)v11, v36, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v33 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FBF303C(v32, v33);
  swift_endAccess();
  swift_release();
  return sub_21FA326EC(v29, type metadata accessor for PBDateRange);
}

uint64_t sub_21FBE90E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v31 = a1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v29 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - v10;
  v12 = type metadata accessor for PBDateRange(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v32 = (uint64_t)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - v16;
  sub_21FC5AD10();
  v18 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_25553D590 != -1)
    swift_once();
  *(_QWORD *)(a2 + v18) = qword_25553E450;
  v19 = (void *)objc_opt_self();
  swift_retain();
  v20 = objc_msgSend(v19, sel_activitySummaryType);
  sub_21FAE78C4((uint64_t)&v33);

  if ((v35 & 1) == 0)
  {
    v29 = v17;
    v30 = v6;
    v21 = v33;
    v22 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v23 = swift_retain();
      *(_QWORD *)(a2 + v18) = sub_21FA3A458(v23);
      swift_release();
    }
    v24 = *(_QWORD *)(a2 + v18);
    swift_beginAccess();
    *(_QWORD *)(v24 + 16) = v21;
    *(_BYTE *)(v24 + 24) = v22 & 1;
    v17 = v29;
    v6 = v30;
  }
  sub_21FA44968(v31, (uint64_t)v11, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_21FA2D1F8((uint64_t)v11, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA2D23C((uint64_t)v11, (uint64_t)v17, type metadata accessor for PBDateRange);
  sub_21FA2D120((uint64_t)v17, v32, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    v26 = swift_retain();
    *(_QWORD *)(a2 + v18) = sub_21FA3A458(v26);
    swift_release();
  }
  v27 = *(_QWORD *)(a2 + v18);
  sub_21FA2D23C(v32, (uint64_t)v9, type metadata accessor for PBDateRange);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  sub_21FA2D280((uint64_t)v9, (uint64_t)v6, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v28 = v27
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FBF303C((uint64_t)v6, v28);
  swift_endAccess();
  swift_release();
  return sub_21FA326EC((uint64_t)v17, type metadata accessor for PBDateRange);
}

uint64_t sub_21FBE947C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  v34 = a1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v33 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - v10;
  v12 = type metadata accessor for PBDateRange(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  sub_21FC5AD10();
  v19 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_25553D590 != -1)
    swift_once();
  *(_QWORD *)(a2 + v19) = qword_25553E450;
  v20 = *(void **)(v2 + *(int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) + 32));
  swift_retain();
  v21 = v20;
  sub_21FAE78C4((uint64_t)&v35);

  if ((v37 & 1) == 0)
  {
    v32 = v18;
    v22 = v35;
    v23 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v31 = v13;
      v24 = swift_retain();
      v13 = v31;
      *(_QWORD *)(a2 + v19) = sub_21FA3A458(v24);
      swift_release();
    }
    v25 = *(_QWORD *)(a2 + v19);
    swift_beginAccess();
    *(_QWORD *)(v25 + 16) = v22;
    *(_BYTE *)(v25 + 24) = v23 & 1;
    v18 = v32;
  }
  sub_21FA44968(v34, (uint64_t)v11, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_21FA2D1F8((uint64_t)v11, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA2D23C((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBDateRange);
  sub_21FA2D120((uint64_t)v18, (uint64_t)v16, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    v27 = swift_retain();
    *(_QWORD *)(a2 + v19) = sub_21FA3A458(v27);
    swift_release();
  }
  v28 = *(_QWORD *)(a2 + v19);
  sub_21FA2D23C((uint64_t)v16, (uint64_t)v9, type metadata accessor for PBDateRange);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  v29 = v33;
  sub_21FA2D280((uint64_t)v9, v33, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v30 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FBF303C(v29, v30);
  swift_endAccess();
  swift_release();
  return sub_21FA326EC((uint64_t)v18, type metadata accessor for PBDateRange);
}

uint64_t sub_21FBE9834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  char v35;

  v32 = a1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v29 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - v11;
  v13 = type metadata accessor for PBDateRange(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v29 - v18;
  sub_21FC5AD10();
  v20 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_25553D590 != -1)
    swift_once();
  *(_QWORD *)(a2 + v20) = qword_25553E450;
  v21 = *(void **)(v2 + 16);
  swift_retain();
  v22 = v21;
  sub_21FAE78C4((uint64_t)&v33);

  if ((v35 & 1) == 0)
  {
    v31 = v33;
    v30 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v29 = v14;
      v23 = swift_retain();
      v14 = v29;
      *(_QWORD *)(a2 + v20) = sub_21FA3A458(v23);
      swift_release();
    }
    v24 = *(_QWORD *)(a2 + v20);
    swift_beginAccess();
    *(_QWORD *)(v24 + 16) = v31;
    *(_BYTE *)(v24 + 24) = v30 & 1;
  }
  sub_21FA44968(v32, (uint64_t)v12, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_21FA2D1F8((uint64_t)v12, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA2D23C((uint64_t)v12, (uint64_t)v19, type metadata accessor for PBDateRange);
  sub_21FA2D120((uint64_t)v19, (uint64_t)v17, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    v26 = swift_retain();
    *(_QWORD *)(a2 + v20) = sub_21FA3A458(v26);
    swift_release();
  }
  v27 = *(_QWORD *)(a2 + v20);
  sub_21FA2D23C((uint64_t)v17, (uint64_t)v10, type metadata accessor for PBDateRange);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  sub_21FA2D280((uint64_t)v10, (uint64_t)v7, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v28 = v27
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FBF303C((uint64_t)v7, v28);
  swift_endAccess();
  swift_release();
  return sub_21FA326EC((uint64_t)v19, type metadata accessor for PBDateRange);
}

uint64_t sub_21FBE9BFC@<X0>(uint64_t a1@<X0>, void *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  char v35;

  v32 = a1;
  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v29 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for PBDateRange(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v29 - v19;
  sub_21FC5AD10();
  v21 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_25553D590 != -1)
    swift_once();
  *(_QWORD *)(a3 + v21) = qword_25553E450;
  swift_retain();
  v22 = a2;
  sub_21FAE78C4((uint64_t)&v33);

  if ((v35 & 1) == 0)
  {
    v31 = v33;
    v30 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      v29 = v15;
      v23 = swift_retain();
      v15 = v29;
      *(_QWORD *)(a3 + v21) = sub_21FA3A458(v23);
      swift_release();
    }
    v24 = *(_QWORD *)(a3 + v21);
    swift_beginAccess();
    *(_QWORD *)(v24 + 16) = v31;
    *(_BYTE *)(v24 + 24) = v30 & 1;
  }
  sub_21FA44968(v32, (uint64_t)v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_21FA2D1F8((uint64_t)v13, &qword_25553E0F8, type metadata accessor for PBDateRange);
  sub_21FA2D23C((uint64_t)v13, (uint64_t)v20, type metadata accessor for PBDateRange);
  sub_21FA2D120((uint64_t)v20, (uint64_t)v18, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    v26 = swift_retain();
    *(_QWORD *)(a3 + v21) = sub_21FA3A458(v26);
    swift_release();
  }
  v27 = *(_QWORD *)(a3 + v21);
  sub_21FA2D23C((uint64_t)v18, (uint64_t)v11, type metadata accessor for PBDateRange);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  sub_21FA2D280((uint64_t)v11, (uint64_t)v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
  v28 = v27
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_21FBF303C((uint64_t)v8, v28);
  swift_endAccess();
  swift_release();
  return sub_21FA326EC((uint64_t)v20, type metadata accessor for PBDateRange);
}

uint64_t sub_21FBE9FC4(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, char *);
  uint64_t v30;

  v29 = a2;
  sub_21FBF2F90();
  v28 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v26 - v11;
  v30 = a1;
  v13 = *(_QWORD *)(a4 + 64);
  v26 = a4 + 64;
  v14 = 1 << *(_BYTE *)(a4 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v27 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    v24 = *(_QWORD *)(a4 + 48);
    v25 = sub_21FC5AAF4();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v12, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * i, v25);
    *(_QWORD *)&v12[*(int *)(v28 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * i);
    sub_21FA2D23C((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_21FBF2F90);
    swift_bridgeObjectRetain();
    v29(&v30, v10);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_21FA326EC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_21FBF2F90);
      return swift_release();
    }
    result = sub_21FA326EC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_21FBF2F90);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v18);
    if (!v22)
      break;
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 2;
  if (v18 + 2 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 3;
  if (v18 + 3 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 4;
  if (v18 + 4 >= v27)
  {
LABEL_26:
    swift_release();
    return v30;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
LABEL_16:
    v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21FBEA268(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  uint64_t v11;
  void *v12;
  id v14;
  void *v15;

  v15 = a1;
  v7 = a1;
  if (a4 >> 62)
    goto LABEL_13;
  v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_21FC5BC7C())
  {
    for (i = 4; ; ++i)
    {
      v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207D057C](i - 4, a4) : *(id *)(a4 + 8 * i);
      v7 = v10;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v14 = v10;
      a2(&v15, &v14);
      if (v4)
      {
        v12 = v15;
        swift_bridgeObjectRelease();

        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_21FBEA398@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;

  v4 = v2;
  v24 = a2;
  v5 = a1(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - v6;
  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  v8 = *(int *)(v5 + 24);
  v9 = *(void **)(v2 + v8);
  sub_21FA5BE58(0, &qword_25553FF78);
  v10 = (void *)*MEMORY[0x24BDD33A0];
  v11 = v9;
  v12 = (void *)MEMORY[0x2207D03B4](v10);
  LOBYTE(v9) = sub_21FC5BA60();

  sub_21FA2D120(v4, (uint64_t)v7, a1);
  if ((v9 & 1) != 0)
  {
    sub_21FA326EC((uint64_t)v7, a1);
  }
  else
  {
    v13 = (void *)*MEMORY[0x24BDD33A8];
    v14 = *(id *)&v7[*(int *)(v5 + 24)];
    v15 = (void *)MEMORY[0x2207D03B4](v13);
    LOBYTE(v13) = sub_21FC5BA60();

    sub_21FA326EC((uint64_t)v7, a1);
    if ((v13 & 1) == 0)
    {
      v18 = *(void **)(v4 + v8);
      v17 = v24;
      *v24 = v18;
      v19 = v18;
      goto LABEL_7;
    }
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_correlationTypeForIdentifier_, *MEMORY[0x24BDD2B08]);
  if (v16)
  {
    v17 = v24;
    *v24 = v16;
LABEL_7:
    v20 = *MEMORY[0x24BE458E8];
    v21 = sub_21FC5ACD4();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v17, v20, v21);
  }
  result = sub_21FC5BC70();
  __break(1u);
  return result;
}

uint64_t sub_21FBEA5E0@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;
  void *v4;
  char v5;
  id v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_activitySummaryType);
  sub_21FA5BE58(0, &qword_25553FF78);
  v4 = (void *)MEMORY[0x2207D03B4]((id)*MEMORY[0x24BDD33A0]);
  v5 = sub_21FC5BA60();

  if ((v5 & 1) == 0)
  {
    v6 = objc_msgSend(v2, sel_activitySummaryType);
    v7 = (void *)MEMORY[0x2207D03B4]((id)*MEMORY[0x24BDD33A8]);
    v8 = sub_21FC5BA60();

    if ((v8 & 1) == 0)
      goto LABEL_5;
  }
  v9 = objc_msgSend(v2, sel_correlationTypeForIdentifier_, *MEMORY[0x24BDD2B08]);
  if (!v9)
  {
    LODWORD(v14) = 0;
    v13 = 76;
    sub_21FC5BC70();
    __break(1u);
LABEL_5:
    v9 = objc_msgSend(v2, sel_activitySummaryType, v13, v14);
  }
  *a1 = v9;
  v10 = *MEMORY[0x24BE458E8];
  v11 = sub_21FC5ACD4();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
}

uint64_t sub_21FBEA7C0@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  sub_21FA5BE58(0, &qword_25553FF78);
  v4 = (void *)*MEMORY[0x24BDD33A0];
  v5 = a1;
  v6 = (void *)MEMORY[0x2207D03B4](v4);
  LOBYTE(a1) = sub_21FC5BA60();

  if ((a1 & 1) == 0)
  {
    v7 = (void *)*MEMORY[0x24BDD33A8];
    v8 = v5;
    swift_retain();
    v9 = (void *)MEMORY[0x2207D03B4](v7);
    LOBYTE(v7) = sub_21FC5BA60();
    swift_release();

    if ((v7 & 1) == 0)
    {
      *a2 = v8;
      v11 = v8;
      goto LABEL_6;
    }
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_correlationTypeForIdentifier_, *MEMORY[0x24BDD2B08]);
  if (v10)
  {
    *a2 = v10;
LABEL_6:
    v12 = *MEMORY[0x24BE458E8];
    v13 = sub_21FC5ACD4();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a2, v12, v13);
  }
  result = sub_21FC5BC70();
  __break(1u);
  return result;
}

uint64_t sub_21FBEA990@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;

  v4 = v2;
  v24 = a2;
  v5 = a1(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - v6;
  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  v8 = *(int *)(v5 + 32);
  v9 = *(void **)(v2 + v8);
  sub_21FA5BE58(0, &qword_25553FF78);
  v10 = (void *)*MEMORY[0x24BDD33A0];
  v11 = v9;
  v12 = (void *)MEMORY[0x2207D03B4](v10);
  LOBYTE(v9) = sub_21FC5BA60();

  sub_21FA2D120(v4, (uint64_t)v7, a1);
  if ((v9 & 1) != 0)
  {
    sub_21FA326EC((uint64_t)v7, a1);
  }
  else
  {
    v13 = (void *)*MEMORY[0x24BDD33A8];
    v14 = *(id *)&v7[*(int *)(v5 + 32)];
    v15 = (void *)MEMORY[0x2207D03B4](v13);
    LOBYTE(v13) = sub_21FC5BA60();

    sub_21FA326EC((uint64_t)v7, a1);
    if ((v13 & 1) == 0)
    {
      v18 = *(void **)(v4 + v8);
      v17 = v24;
      *v24 = v18;
      v19 = v18;
      goto LABEL_7;
    }
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_correlationTypeForIdentifier_, *MEMORY[0x24BDD2B08]);
  if (v16)
  {
    v17 = v24;
    *v24 = v16;
LABEL_7:
    v20 = *MEMORY[0x24BE458E8];
    v21 = sub_21FC5ACD4();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v17, v20, v21);
  }
  result = sub_21FC5BC70();
  __break(1u);
  return result;
}

uint64_t sub_21FBEABD8@<X0>(void *a1@<X3>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_21FA5BE58(0, (unint64_t *)&qword_25406BAD0);
  sub_21FA5BE58(0, &qword_25553FF78);
  v4 = (void *)*MEMORY[0x24BDD33A0];
  v5 = a1;
  v6 = (void *)MEMORY[0x2207D03B4](v4);
  LOBYTE(a1) = sub_21FC5BA60();

  if ((a1 & 1) == 0)
  {
    v7 = (void *)*MEMORY[0x24BDD33A8];
    v8 = v5;
    swift_retain();
    v9 = (void *)MEMORY[0x2207D03B4](v7);
    LOBYTE(v7) = sub_21FC5BA60();
    swift_release();

    if ((v7 & 1) == 0)
    {
      *a2 = v8;
      v11 = v8;
      goto LABEL_6;
    }
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_correlationTypeForIdentifier_, *MEMORY[0x24BDD2B08]);
  if (v10)
  {
    *a2 = v10;
LABEL_6:
    v12 = *MEMORY[0x24BE458E8];
    v13 = sub_21FC5ACD4();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a2, v12, v13);
  }
  result = sub_21FC5BC70();
  __break(1u);
  return result;
}

BOOL sub_21FBEADA8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_21FBEADE4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingElectrocardiogramQuery.State()
{
  return objc_opt_self();
}

uint64_t *sub_21FBEAE14(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21FC5A6C8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v14 = (_OWORD *)((char *)v7 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    v18 = a3[9];
    v19 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v7 + v17) = (uint64_t)v19;
    v20 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)v7 + v18) = (uint64_t)v20;
    v21 = v19;
    v22 = v20;
  }
  return v7;
}

void sub_21FBEAEF4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + a2[5];
  v5 = sub_21FC5A6C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_QWORD *sub_21FBEAF5C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  v16 = a3[9];
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = *(void **)((char *)a2 + v16);
  *(_QWORD *)((char *)a1 + v16) = v18;
  v19 = v17;
  v20 = v18;
  return a1;
}

_QWORD *sub_21FBEB014(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  v13 = a3[8];
  v14 = *(void **)((char *)a2 + v13);
  v15 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  v16 = v14;

  v17 = a3[9];
  v18 = *(void **)((char *)a2 + v17);
  v19 = *(void **)((char *)a1 + v17);
  *(_QWORD *)((char *)a1 + v17) = v18;
  v20 = v18;

  return a1;
}

_QWORD *sub_21FBEB0F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *sub_21FBEB194(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21FC5A6C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[8];
  v15 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);

  v16 = a3[9];
  v17 = *(void **)((char *)a1 + v16);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);

  return a1;
}

uint64_t sub_21FBEB24C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FBEB258(char *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
}

uint64_t sub_21FBEB264()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21FBEB270(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
}

uint64_t type metadata accessor for ClinicalSharingElectrocardiogramQuery(uint64_t a1)
{
  return sub_21FA44B58(a1, qword_25554CE20);
}

uint64_t sub_21FBEB290()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21FC5A6C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingElectrocardiogramQuery.WaveformCounts(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingElectrocardiogramQuery.WaveformCounts(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingElectrocardiogramQuery.WaveformCounts()
{
  return &type metadata for ClinicalSharingElectrocardiogramQuery.WaveformCounts;
}

uint64_t sub_21FBEB38C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[7];

  v1 = v0;
  v2 = type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  v3 = *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64);
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v50 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21FC5B8F8();
  v6 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v49 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBECC9C();
  v9 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  v55 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21FC5AAAC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char *)v0 + *(int *)(v2 + 28);
  v44 = *(_OWORD *)v15;
  v16 = *((_QWORD *)v15 + 2);
  v17 = *((_QWORD *)v15 + 3);
  type metadata accessor for ClinicalSharingElectrocardiogramQuery.State();
  v18 = swift_allocObject();
  v47 = v18;
  *(_OWORD *)(v18 + 16) = v44;
  *(_QWORD *)(v18 + 32) = v16;
  *(_QWORD *)(v18 + 40) = v17;
  v45 = v2;
  v19 = *(int *)(v2 + 32);
  v20 = *(void **)((char *)v1 + v19);
  v21 = (void *)objc_opt_self();
  v22 = v20;
  sub_21FC5A6A4();
  v23 = (void *)sub_21FC5AA64();
  v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v14, v11);
  sub_21FC5A680();
  v25 = (void *)sub_21FC5AA64();
  v24(v14, v11);
  v26 = objc_msgSend(v21, sel_predicateForSamplesWithStartDate_endDate_options_, v23, v25, 0);

  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v22, v26);
  v28 = *(void **)((char *)v1 + v19);
  v29 = v28;
  sub_21FBE6F54(0x706D61732D676365, 0xEB0000000073656CLL, v28, 5, 1);

  sub_21FA2CEA0(*v1 + 16, (uint64_t)v57);
  __swift_project_boxed_opaque_existential_1(v57, v57[3]);
  sub_21FA80754(0, (unint64_t *)&qword_25554BAF0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_21FC5E070;
  *(_QWORD *)(v30 + 32) = v27;
  v56 = v30;
  sub_21FC5B7C0();
  v31 = v27;
  sub_21FAADEE8();
  v32 = v46;
  sub_21FC5B91C();
  sub_21FA2A08C(&qword_25553F088, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A48], MEMORY[0x24BE45A40]);
  v33 = v48;
  v34 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = v34;
  v35 = v50;
  sub_21FA2D120((uint64_t)v1, v50, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v37 = (v52 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject();
  sub_21FA2D23C(v35, v38 + v36, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  *(_QWORD *)(v38 + v37) = v47;
  v39 = MEMORY[0x24BDB9AE0];
  sub_21FA84A5C(0, (unint64_t *)&qword_25553E0B0, (uint64_t (*)(uint64_t))sub_21FBECD94, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_21FA84A5C(0, (unint64_t *)&qword_25406CA10, type metadata accessor for ClinicalSharingQueryOutput, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v39);
  sub_21FA84B70(&qword_25553E0C8, (unint64_t *)&qword_25553E0B0, (uint64_t (*)(uint64_t))sub_21FBECD94);
  sub_21FA84B70(&qword_25406CA08, (unint64_t *)&qword_25406CA10, type metadata accessor for ClinicalSharingQueryOutput);
  swift_retain();
  v40 = v53;
  sub_21FC5B34C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  sub_21FA2A08C(&qword_25554CE70, (uint64_t (*)(uint64_t))sub_21FBECC9C, MEMORY[0x24BDB98F0]);
  v41 = v54;
  v42 = sub_21FC5B280();

  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  return v42;
}

uint64_t sub_21FBEB8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[3];
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v6 = type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBF2A20();
  v11 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  v37 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBF2AB4();
  v15 = *(_QWORD *)(v14 - 8);
  v38 = v14;
  v39 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBF2C48();
  v41 = v18;
  v43 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v35 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FBF2CC0();
  v42 = v20;
  v44 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v40 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1;
  sub_21FBECD94();
  sub_21FA2A08C(&qword_25554CE80, (uint64_t (*)(uint64_t))sub_21FBECD94, MEMORY[0x24BEE12C8]);
  sub_21FC5B748();
  sub_21FA2D120(v3, (uint64_t)v9, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  v22 = *(unsigned __int8 *)(v7 + 80);
  v23 = (v22 + 16) & ~v22;
  v34[0] = v22 | 7;
  v34[1] = v23 + v8;
  v24 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v9, v24 + v23, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  *(_QWORD *)(v24 + ((v23 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  sub_21FA84A5C(0, &qword_25554CE90, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_21FA2A08C(&qword_25554CEA0, (uint64_t (*)(uint64_t))sub_21FBF2A20, MEMORY[0x24BDB9970]);
  sub_21FA84B70(&qword_25554CEA8, &qword_25554CE90, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
  swift_retain();
  v25 = v36;
  sub_21FC5B388();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v25);
  sub_21FA2A08C(&qword_25554CEC0, (uint64_t (*)(uint64_t))sub_21FBF2AB4, MEMORY[0x24BDB98F0]);
  v26 = v35;
  v27 = v38;
  sub_21FC5B328();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v27);
  sub_21FA2D120(v34[2], (uint64_t)v9, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  v28 = swift_allocObject();
  sub_21FA2D23C((uint64_t)v9, v28 + v23, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_21FA2A08C(&qword_25554CED0, (uint64_t (*)(uint64_t))sub_21FBF2C48, MEMORY[0x24BDB98D8]);
  v30 = v40;
  v29 = v41;
  sub_21FC5B28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v29);
  sub_21FA2A08C(&qword_25554CED8, (uint64_t (*)(uint64_t))sub_21FBF2CC0, MEMORY[0x24BDB94C8]);
  v31 = v42;
  v32 = sub_21FC5B280();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v31);
  return v32;
}

void sub_21FBEBCE4(void **a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  id v9;

  v3 = *a1;
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v3;
    v7 = sub_21FBEC0DC((uint64_t)objc_msgSend(v5, sel_classification));
    v8 = sub_21FBEC154(v5, v7);

    *a2 = v8;
  }
  else
  {
    sub_21FC5BB74();
    v9 = objc_msgSend(v3, sel_description);
    sub_21FC5B604();
    swift_bridgeObjectRelease();

    sub_21FC5B6AC();
    sub_21FC5BC70();
    __break(1u);
  }
}

uint64_t sub_21FBEBE24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Output;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v23 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_21FA2D1A0(0, &qword_25553F0A0, type metadata accessor for PBTypedData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - v5;
  v7 = type metadata accessor for PBTypedData(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA2D1A0(0, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v3);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = type metadata accessor for PBDateRange(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  swift_bridgeObjectRetain();
  sub_21FBF0DA0(&v24);
  v17 = v24;
  v18 = sub_21FBE7B1C((uint64_t)v24);
  v19 = sub_21FBE7C84((uint64_t)v17);
  swift_release();
  sub_21FBE89DC(v19, (uint64_t)v13);
  sub_21FBE7E90(5, 1, (uint64_t)v13, (uint64_t)v16);
  sub_21FA2D1F8((uint64_t)v13, &qword_25553E0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  sub_21FBEC70C(v18, (uint64_t)v16, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21FA326EC((uint64_t)v16, type metadata accessor for PBDateRange);
    swift_bridgeObjectRelease();
    sub_21FA2D1F8((uint64_t)v6, &qword_25553F0A0, type metadata accessor for PBTypedData);
    Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Output - 8) + 56))(v23, 1, 1, Output);
  }
  else
  {
    sub_21FA2D23C((uint64_t)v6, (uint64_t)v10, type metadata accessor for PBTypedData);
    sub_21FBE762C((uint64_t)v10, v19, type metadata accessor for ClinicalSharingElectrocardiogramQuery, (void (*)(uint64_t *, char *))sub_21FA85168, v23);
    swift_bridgeObjectRelease();
    sub_21FA326EC((uint64_t)v10, type metadata accessor for PBTypedData);
    return sub_21FA326EC((uint64_t)v16, type metadata accessor for PBDateRange);
  }
}

BOOL sub_21FBEC0DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _BOOL8 result;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1[2];
  result = v3 > 0;
  v5 = v3 < 1;
  v6 = v3 - 1;
  if (!v5)
    v1[2] = v6;
  if (a1 == 2)
  {
    v10 = v1[4];
    v8 = v1 + 4;
    v7 = v10;
LABEL_7:
    if (v7 <= 0)
      return result;
    goto LABEL_8;
  }
  if (a1 == 1)
  {
    v9 = v1[3];
    v8 = v1 + 3;
    v7 = v9;
    goto LABEL_7;
  }
  if ((unint64_t)(a1 - 3) <= 3)
  {
    v11 = v1[5];
    v8 = v1 + 5;
    v7 = v11;
    if (v11 >= 1)
    {
LABEL_8:
      *v8 = v7 - 1;
      return 1;
    }
  }
  return result;
}

uint64_t sub_21FBEC154(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[5];

  v49 = a1;
  LODWORD(v48) = a2;
  v2 = type metadata accessor for PBECGMeasurement(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  MEMORY[0x24BDAC7A8](v51);
  v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21FA2D1A0(0, &qword_25554CF00, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v8 = v7;
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - v9;
  sub_21FA84A5C(0, &qword_25554CF08, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0]);
  v12 = v11;
  v45 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v44 - v13;
  v15 = type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  v47 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v47 + 64);
  MEMORY[0x24BDAC7A8](v15);
  sub_21FBF310C();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v48 & 1) != 0)
  {
    v22 = (uint64_t)v50;
    v23 = *v50;
    v46 = v18;
    v48 = v19;
    sub_21FA2CEA0(v23 + 16, (uint64_t)v53);
    v24 = (void **)__swift_project_boxed_opaque_existential_1(v53, v53[3]);
    v25 = *(void **)(v22 + *(int *)(v15 + 36));
    v26 = *v24;
    v27 = (_QWORD *)swift_allocObject();
    v28 = v49;
    v27[2] = v26;
    v27[3] = v28;
    v27[4] = 1;
    v27[5] = v25;
    sub_21FBF31BC(0, &qword_25554CF38, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    swift_allocObject();
    v29 = v26;
    v30 = v28;
    v31 = v25;
    v52 = sub_21FC5B25C();
    sub_21FBF32E4(&qword_25554CF40, &qword_25554CF38, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38], MEMORY[0x24BDB9E58]);
    v32 = sub_21FC5B280();
    swift_release();
    v52 = v32;
    sub_21FA2D120(v22, (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ClinicalSharingElectrocardiogramQuery);
    v33 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v34 = swift_allocObject();
    sub_21FA2D23C((uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v34 + v33, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
    *(_QWORD *)(v34 + ((v16 + v33 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
    v35 = MEMORY[0x24BDB9AE0];
    sub_21FBF31BC(0, &qword_25554CF18, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FBF32E4(&qword_25554CF28, &qword_25554CF18, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v35, MEMORY[0x24BDB9AF8]);
    v36 = v30;
    sub_21FC5B2C8();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    sub_21FA2A08C(&qword_25554CF48, (uint64_t (*)(uint64_t))sub_21FBF310C, MEMORY[0x24BDB96C0]);
    v37 = v46;
    v38 = sub_21FC5B280();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v37);
  }
  else
  {
    v39 = *(void **)((char *)v50 + *(int *)(v15 + 36));
    v40 = (void *)MEMORY[0x2207D0ABC](v18);
    v41 = v49;
    sub_21FBEC8F0(v49, MEMORY[0x24BEE4AF8], v39, (uint64_t)v4);
    sub_21FA2D120((uint64_t)v4, (uint64_t)v6 + *(int *)(v51 + 20), type metadata accessor for PBECGMeasurement);
    *v6 = v41;
    v42 = v41;
    sub_21FA326EC((uint64_t)v4, type metadata accessor for PBECGMeasurement);
    objc_autoreleasePoolPop(v40);
    sub_21FC5B22C();
    sub_21FA2CDB4();
    sub_21FC5B208();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v8);
    sub_21FBF3244();
    v38 = sub_21FC5B280();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v12);
  }
  return v38;
}

void sub_21FBEC624(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v8 = type metadata accessor for PBECGMeasurement(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = *(void **)(a2 + *(int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) + 36));
  v13 = (void *)MEMORY[0x2207D0ABC]();
  sub_21FBEC8F0(a3, v11, v12, (uint64_t)v10);
  v14 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  sub_21FA2D120((uint64_t)v10, (uint64_t)a4 + *(int *)(v14 + 20), type metadata accessor for PBECGMeasurement);
  *a4 = a3;
  v15 = a3;
  sub_21FA326EC((uint64_t)v10, type metadata accessor for PBECGMeasurement);
  objc_autoreleasePoolPop(v13);
}

uint64_t sub_21FBEC70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  sub_21FA2D1A0(0, &qword_25553E0F8, type metadata accessor for PBDateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - v7;
  v9 = type metadata accessor for PBECGs(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v19 - v13);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_21FC5AD10();
    *v14 = a1;
    sub_21FA2D120(a2, (uint64_t)v8, type metadata accessor for PBDateRange);
    v15 = type metadata accessor for PBDateRange(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
    swift_bridgeObjectRetain();
    sub_21FBE947C((uint64_t)v8, a3);
    sub_21FA2D1F8((uint64_t)v8, &qword_25553E0F8, type metadata accessor for PBDateRange);
    sub_21FA2D120((uint64_t)v14, (uint64_t)v12, type metadata accessor for PBECGs);
    PBTypedData.ecgs.setter((uint64_t)v12);
    v16 = type metadata accessor for PBTypedData(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
    return sub_21FA326EC((uint64_t)v14, type metadata accessor for PBECGs);
  }
  else
  {
    v18 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
}

uint64_t sub_21FBEC8F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  double v24;
  double v25;
  float v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  float v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  char v47;
  char v48;

  v9 = sub_21FC5AAAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0xE000000000000000;
  *(_DWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = 0xE000000000000000;
  *(_QWORD *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0xE000000000000000;
  *(_QWORD *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = 0xE000000000000000;
  *(_QWORD *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = 0xE000000000000000;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a4 + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a4 + 96) = v13;
  *(_DWORD *)(a4 + 104) = 0;
  *(_QWORD *)(a4 + 112) = 0;
  *(_BYTE *)(a4 + 120) = 1;
  type metadata accessor for PBECGMeasurement(0);
  sub_21FC5AD10();
  v14 = objc_msgSend(a1, sel_startDate);
  sub_21FC5AA94();

  v15 = *(id *)(*v4 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  v16 = (void *)sub_21FC5AA64();
  v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

  v18 = sub_21FC5B604();
  v20 = v19;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v18;
  *(_QWORD *)(a4 + 8) = v20;
  v21 = objc_msgSend(a1, sel_samplingFrequency);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(), sel_hertzUnit);
    objc_msgSend(v22, sel_doubleValueForUnit_, v23);
    v25 = v24;

    v26 = v25;
    *(float *)(a4 + 16) = v26;
  }
  v27 = objc_msgSend(a1, sel_device);
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, sel_name);

    if (v29)
    {
      v30 = sub_21FC5B604();
      v32 = v31;

      swift_bridgeObjectRelease();
      *(_QWORD *)(a4 + 24) = v30;
      *(_QWORD *)(a4 + 32) = v32;
    }
  }
  v33 = objc_msgSend(a1, sel__localizedSymptoms);
  v34 = sub_21FC5B7A8();

  swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 88) = v34;
  sub_21FBECC58((unint64_t)objc_msgSend(a1, sel_classification), (uint64_t)&v46);
  if ((v48 & 1) == 0)
  {
    v35 = v47;
    *(_QWORD *)(a4 + 112) = v46;
    *(_BYTE *)(a4 + 120) = v35 & 1;
  }
  v36 = objc_msgSend(a1, sel_averageHeartRate);
  if (v36)
  {
    v37 = v36;
    objc_msgSend(v36, sel__beatsPerMinute);
    v39 = v38;

    v40 = v39;
    *(float *)(a4 + 104) = v40;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 56) = 73;
  *(_QWORD *)(a4 + 64) = 0xE100000000000000;
  v41 = objc_msgSend(a3, sel_unitString);
  v42 = sub_21FC5B604();
  v44 = v43;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 72) = v42;
  *(_QWORD *)(a4 + 80) = v44;
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a4 + 96) = a2;
  }
  return result;
}

unint64_t sub_21FBECC58@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;
  BOOL v4;

  v2 = 7;
  if (result != 100)
    v2 = 0;
  v3 = result != 100;
  if (result >= 7)
  {
    v4 = result == 100;
  }
  else
  {
    v2 = result;
    v4 = 1;
  }
  *(_QWORD *)a2 = v2;
  if (result < 7)
    v3 = 0;
  *(_BYTE *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 9) = v3;
  return result;
}

void sub_21FBECC9C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25554CE68)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_21FA84A5C(255, (unint64_t *)&qword_25406CA10, type metadata accessor for ClinicalSharingQueryOutput, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_21FA84A5C(255, (unint64_t *)&qword_25553E0B0, (uint64_t (*)(uint64_t))sub_21FBECD94, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0);
    sub_21FA84B70(&qword_25406CA08, (unint64_t *)&qword_25406CA10, type metadata accessor for ClinicalSharingQueryOutput);
    sub_21FA84B70(&qword_25553E0C8, (unint64_t *)&qword_25553E0B0, (uint64_t (*)(uint64_t))sub_21FBECD94);
    v1 = sub_21FC5B100();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25554CE68);
  }
}

void sub_21FBECD94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25553E0B8)
  {
    sub_21FA5BE58(255, (unint64_t *)&qword_25553E0C0);
    v0 = sub_21FC5B7F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25553E0B8);
  }
}

uint64_t sub_21FBECDF8(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  void (*v16)(_QWORD, _QWORD, _QWORD);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char *v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_21FC5AAF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_21FBAF1C0();
  swift_bridgeObjectRetain();
  v28 = a2;
  v11 = sub_21FC5B58C();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v24 = v3;
    v25 = a1;
    v26 = ~v12;
    v27 = v7;
    v14 = *(_QWORD *)(v7 + 72);
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v16 = v15;
      v15(v9, *(_QWORD *)(v10 + 48) + v14 * v13, v6);
      sub_21FA2A08C(&qword_25553FB98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v17 = sub_21FC5B5D4();
      v18 = *(void (**)(char *, uint64_t))(v27 + 8);
      v18(v9, v6);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v26;
      v15 = v16;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v24;
        v19 = v25;
        v20 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v18(v28, v6);
    v16(v25, *(_QWORD *)(*v24 + 48) + v14 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v19 = a1;
    v20 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v28;
    v15(v9, v28, v6);
    v29 = *v3;
    *v3 = 0x8000000000000000;
    sub_21FBEEBA8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v19, v22, v6);
    return 1;
  }
}

uint64_t sub_21FBED03C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  void (*v16)(_QWORD, _QWORD, _QWORD);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char *v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_21FC5ACD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_21FBF3020();
  swift_bridgeObjectRetain();
  v28 = a2;
  v11 = sub_21FC5B58C();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v24 = v3;
    v25 = a1;
    v26 = ~v12;
    v27 = v7;
    v14 = *(_QWORD *)(v7 + 72);
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v16 = v15;
      v15(v9, *(_QWORD *)(v10 + 48) + v14 * v13, v6);
      sub_21FA2A08C(&qword_25553ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], MEMORY[0x24BE45958]);
      v17 = sub_21FC5B5D4();
      v18 = *(void (**)(char *, uint64_t))(v27 + 8);
      v18(v9, v6);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v26;
      v15 = v16;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v24;
        v19 = v25;
        v20 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v18(v28, v6);
    v16(v25, *(_QWORD *)(*v24 + 48) + v14 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v19 = a1;
    v20 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v28;
    v15(v9, v28, v6);
    v29 = *v3;
    *v3 = 0x8000000000000000;
    sub_21FBEEDD4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v19, v22, v6);
    return 1;
  }
}

uint64_t sub_21FBED280(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_21FC5BE8C();
  swift_bridgeObjectRetain();
  sub_21FC5B67C();
  v8 = sub_21FC5BEB0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21FC5BDF0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21FC5BDF0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21FBEF000(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21FBED42C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v19;
  uint64_t v21;
  uint64_t __s1;

  v10 = *v5;
  sub_21FC5BE8C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21FC5B67C();
  swift_bridgeObjectRelease();
  sub_21FA32314(a4, a5);
  sub_21FC5A9F8();
  sub_21FA2D770(a4, a5);
  v11 = sub_21FC5BEB0();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v21 = ~v12;
    do
    {
      v14 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 32 * v13);
      v15 = v14[3];
      v16 = *v14 == a2 && v14[1] == a3;
      if (v16 || (sub_21FC5BDF0() & 1) != 0)
        __asm { BR              X10 }
      v13 = (v13 + 1) & v21;
    }
    while (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __s1 = *v19;
  *v19 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21FA32314(a4, a5);
  sub_21FBEF198(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
  *v19 = __s1;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  result = 1;
  a1[2] = a4;
  a1[3] = a5;
  return result;
}

uint64_t sub_21FBEDFD8(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  void (*v16)(_QWORD, _QWORD, _QWORD);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char *v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_21FC5ABF0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_21FBF3790();
  swift_bridgeObjectRetain();
  v28 = a2;
  v11 = sub_21FC5B58C();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v24 = v3;
    v25 = a1;
    v26 = ~v12;
    v27 = v7;
    v14 = *(_QWORD *)(v7 + 72);
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v16 = v15;
      v15(v9, *(_QWORD *)(v10 + 48) + v14 * v13, v6);
      sub_21FA2A08C(&qword_255540E10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
      v17 = sub_21FC5B5D4();
      v18 = *(void (**)(char *, uint64_t))(v27 + 8);
      v18(v9, v6);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v26;
      v15 = v16;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v24;
        v19 = v25;
        v20 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v18(v28, v6);
    v16(v25, *(_QWORD *)(*v24 + 48) + v14 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v19 = a1;
    v20 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v28;
    v15(v9, v28, v6);
    v29 = *v3;
    *v3 = 0x8000000000000000;
    sub_21FBEFCD0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v19, v22, v6);
    return 1;
  }
}

uint64_t sub_21FBEE21C(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(uint64_t);

  v44 = a4;
  v6 = v4;
  v7 = a2(0);
  v43 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - v8;
  v10 = *v4;
  a3(0);
  v11 = sub_21FC5BB50();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 56);
    v42 = (_QWORD *)(v10 + 56);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v40 = v4;
    v41 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 56;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v22 = v21 | (v19 << 6);
      }
      else
      {
        v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v23 >= v41)
          goto LABEL_33;
        v24 = v42[v23];
        ++v19;
        if (!v24)
        {
          v19 = v23 + 1;
          if (v23 + 1 >= v41)
            goto LABEL_33;
          v24 = v42[v19];
          if (!v24)
          {
            v19 = v23 + 2;
            if (v23 + 2 >= v41)
              goto LABEL_33;
            v24 = v42[v19];
            if (!v24)
            {
              v25 = v23 + 3;
              if (v25 >= v41)
              {
LABEL_33:
                swift_release();
                v6 = v40;
                v38 = 1 << *(_BYTE *)(v10 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v10 + 16) = 0;
                break;
              }
              v24 = v42[v25];
              if (!v24)
              {
                while (1)
                {
                  v19 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_39;
                  if (v19 >= v41)
                    goto LABEL_33;
                  v24 = v42[v19];
                  ++v25;
                  if (v24)
                    goto LABEL_23;
                }
              }
              v19 = v25;
            }
          }
        }
LABEL_23:
        v16 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      v26 = v10;
      v27 = *(_QWORD *)(v43 + 72);
      v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
      v29 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30 = v29(v9, v28, v7);
      v44(v30);
      result = sub_21FC5B58C();
      v31 = -1 << *(_BYTE *)(v12 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v17 + 8 * v33);
        }
        while (v37 == -1);
        v20 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      result = v29((char *)(*(_QWORD *)(v12 + 48) + v20 * v27), (unint64_t)v9, v7);
      ++*(_QWORD *)(v12 + 16);
      v10 = v26;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_21FBEE574()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_21FBF359C(0, &qword_25554CF50, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE24D8]);
  v3 = sub_21FC5BB50();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_21FC5BE8C();
      sub_21FC5B67C();
      result = sub_21FC5BEB0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21FBEE86C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  sub_21FBF3628();
  v3 = sub_21FC5BB50();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      sub_21FC5BE8C();
      swift_bridgeObjectRetain();
      sub_21FC5B67C();
      swift_bridgeObjectRelease();
      sub_21FA32314(v22, v23);
      sub_21FC5A9F8();
      sub_21FA2D770(v22, v23);
      result = sub_21FC5BEB0();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21FBEEBA8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_21FC5AAF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_21FBEE21C(v12, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], sub_21FBF2F6C, (void (*)(uint64_t))sub_21FBAF1C0);
  }
  else
  {
    if (v11 > v10)
    {
      sub_21FBEFEFC((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], sub_21FBF2F6C);
      goto LABEL_12;
    }
    sub_21FBF04B4(v12, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], sub_21FBF2F6C, (void (*)(uint64_t))sub_21FBAF1C0);
  }
  v13 = *v3;
  sub_21FBAF1C0();
  v14 = sub_21FC5B58C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_21FA2A08C(&qword_25553FB98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_21FC5B5D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_21FC5BE14();
  __break(1u);
  return result;
}

uint64_t sub_21FBEEDD4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_21FC5ACD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_21FBEE21C(v12, (uint64_t (*)(_QWORD))MEMORY[0x24BE45940], (void (*)(_QWORD))sub_21FA85900, (void (*)(uint64_t))sub_21FBF3020);
  }
  else
  {
    if (v11 > v10)
    {
      sub_21FBEFEFC((uint64_t (*)(_QWORD))MEMORY[0x24BE45940], (void (*)(_QWORD))sub_21FA85900);
      goto LABEL_12;
    }
    sub_21FBF04B4(v12, (uint64_t (*)(_QWORD))MEMORY[0x24BE45940], (void (*)(_QWORD))sub_21FA85900, (void (*)(uint64_t))sub_21FBF3020);
  }
  v13 = *v3;
  sub_21FBF3020();
  v14 = sub_21FC5B58C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_21FA2A08C(&qword_25553ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], MEMORY[0x24BE45958]);
      v19 = sub_21FC5B5D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_21FC5BE14();
  __break(1u);
  return result;
}

uint64_t sub_21FBEF000(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_21FBEE574();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_21FBF0120();
      goto LABEL_22;
    }
    sub_21FBF07C8();
  }
  v11 = *v4;
  sub_21FC5BE8C();
  sub_21FC5B67C();
  result = sub_21FC5BEB0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_21FC5BDF0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_21FC5BE14();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_21FC5BDF0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_21FBEF198(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 <= v12 || (a6 & 1) == 0)
  {
    if ((a6 & 1) != 0)
    {
      sub_21FBEE86C();
    }
    else
    {
      if (v13 > v12)
      {
        result = (uint64_t)sub_21FBF02EC();
        goto LABEL_17;
      }
      sub_21FBF0A90();
    }
    v14 = *v6;
    sub_21FC5BE8C();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
    sub_21FA32314(a3, a4);
    sub_21FC5A9F8();
    sub_21FA2D770(a3, a4);
    result = sub_21FC5BEB0();
    v15 = -1 << *(_BYTE *)(v14 + 32);
    a5 = result & ~v15;
    if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
    {
      v25 = ~v15;
      do
      {
        v16 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 32 * a5);
        v17 = v16[3];
        v18 = *v16 == v11 && v16[1] == a2;
        if (v18 || (result = sub_21FC5BDF0(), (result & 1) != 0))
          __asm { BR              X10 }
        a5 = (a5 + 1) & v25;
      }
      while (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
    }
  }
LABEL_17:
  v19 = *v24;
  *(_QWORD *)(*v24 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v20 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 32 * a5);
  *v20 = v11;
  v20[1] = a2;
  v20[2] = a3;
  v20[3] = a4;
  v21 = *(_QWORD *)(v19 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
    JUMPOUT(0x21FBEFC10);
  }
  *(_QWORD *)(v19 + 16) = v23;
  return result;
}

uint64_t sub_21FBEFCD0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_21FC5ABF0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_21FBEE21C(v12, (uint64_t (*)(_QWORD))MEMORY[0x24BDCF290], sub_21FBF37AC, (void (*)(uint64_t))sub_21FBF3790);
  }
  else
  {
    if (v11 > v10)
    {
      sub_21FBEFEFC((uint64_t (*)(_QWORD))MEMORY[0x24BDCF290], sub_21FBF37AC);
      goto LABEL_12;
    }
    sub_21FBF04B4(v12, (uint64_t (*)(_QWORD))MEMORY[0x24BDCF290], sub_21FBF37AC, (void (*)(uint64_t))sub_21FBF3790);
  }
  v13 = *v3;
  sub_21FBF3790();
  v14 = sub_21FC5B58C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_21FA2A08C(&qword_255540E10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
      v19 = sub_21FC5B5D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_21FC5BE14();
  __break(1u);
  return result;
}

void *sub_21FBEFEFC(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - v7;
  a2(0);
  v9 = *v2;
  v10 = sub_21FC5BB44();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_21FBF0120()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_21FBF359C(0, &qword_25554CF50, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE24D8]);
  v2 = *v0;
  v3 = sub_21FC5BB44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21FBF02EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_21FBF3628();
  v2 = *v0;
  v3 = sub_21FC5BB44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)sub_21FA32314(v19, v20);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21FBF04B4(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  void (*v39)(uint64_t);

  v39 = a4;
  v6 = v4;
  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - v9;
  v11 = *v4;
  a3(0);
  v12 = sub_21FC5BB50();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v13;
    return result;
  }
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 56);
  v36 = v4;
  v37 = v11 + 56;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v38 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 56;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_24;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v38)
      goto LABEL_33;
    v25 = *(_QWORD *)(v37 + 8 * v24);
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v38)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v20);
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v38)
          goto LABEL_33;
        v25 = *(_QWORD *)(v37 + 8 * v20);
        if (!v25)
          break;
      }
    }
LABEL_23:
    v17 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v8 + 72);
    v28 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, *(_QWORD *)(v11 + 48) + v27 * v23, v7);
    v39(v28);
    result = sub_21FC5B58C();
    v29 = -1 << *(_BYTE *)(v13 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v18 + 8 * v31);
      }
      while (v35 == -1);
      v21 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v21 * v27, v10, v7);
    ++*(_QWORD *)(v13 + 16);
  }
  v26 = v24 + 3;
  if (v26 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v36;
    goto LABEL_35;
  }
  v25 = *(_QWORD *)(v37 + 8 * v26);
  if (v25)
  {
    v20 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    v20 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v20 >= v38)
      goto LABEL_33;
    v25 = *(_QWORD *)(v37 + 8 * v20);
    ++v26;
    if (v25)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21FBF07C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_21FBF359C(0, &qword_25554CF50, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE24D8]);
  v3 = sub_21FC5BB50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_21FC5BE8C();
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    result = sub_21FC5BEB0();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21FBF0A90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  sub_21FBF3628();
  v3 = sub_21FC5BB50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    sub_21FC5BE8C();
    swift_bridgeObjectRetain();
    sub_21FA32314(v21, v22);
    swift_bridgeObjectRetain();
    sub_21FC5B67C();
    swift_bridgeObjectRelease();
    sub_21FA32314(v21, v22);
    sub_21FC5A9F8();
    sub_21FA2D770(v21, v22);
    result = sub_21FC5BEB0();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21FBF0DA0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_21FBF27DC(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_21FBF0E20(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_21FBF0E20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  id *v30;
  id v31;
  char *v32;
  id v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id *v42;
  id *v43;
  id v44;
  char *v45;
  id v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  id *v69;
  id *v70;
  id v71;
  char *v72;
  id v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  id *v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  id *v163;

  v2 = v1;
  v157 = sub_21FC5AAAC();
  v151 = *(_QWORD *)(v157 - 8);
  v4 = MEMORY[0x24BDAC7A8](v157);
  v156 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v155 = (char *)&v140 - v6;
  v7 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  v149 = *(_QWORD *)(v7 - 8);
  v150 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v146 = (uint64_t)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v161 = (uint64_t)&v140 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v158 = (id *)((char *)&v140 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v163 = (id *)((char *)&v140 - v14);
  v15 = a1[1];
  result = sub_21FC5BDC0();
  if (result >= v15)
  {
    if (v15 < 0)
      goto LABEL_139;
    if (v15)
      return sub_21FBF19CC(0, v15, 1, a1);
    return result;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_147;
  v143 = result;
  if (v15 < 2)
  {
    v148 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
    v142 = MEMORY[0x24BEE4AF8];
    if (v15 != 1)
    {
      v23 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v22 = (char *)MEMORY[0x24BEE4AF8];
LABEL_105:
      if (v23 >= 2)
      {
        v133 = *a1;
        do
        {
          v134 = v23 - 2;
          if (v23 < 2)
            goto LABEL_134;
          if (!v133)
            goto LABEL_146;
          v135 = v22;
          v136 = *(_QWORD *)&v22[16 * v134 + 32];
          v137 = *(_QWORD *)&v22[16 * v23 + 24];
          sub_21FBF1CF0(v133 + *(_QWORD *)(v149 + 72) * v136, v133 + *(_QWORD *)(v149 + 72) * *(_QWORD *)&v22[16 * v23 + 16], v133 + *(_QWORD *)(v149 + 72) * v137, v148);
          if (v2)
            break;
          if (v137 < v136)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v135 = sub_21FBF2764((uint64_t)v135);
          if (v134 >= *((_QWORD *)v135 + 2))
            goto LABEL_136;
          v138 = &v135[16 * v134 + 32];
          *(_QWORD *)v138 = v136;
          *((_QWORD *)v138 + 1) = v137;
          v139 = *((_QWORD *)v135 + 2);
          if (v23 > v139)
            goto LABEL_137;
          memmove(&v135[16 * v23 + 16], &v135[16 * v23 + 32], 16 * (v139 - v23));
          v22 = v135;
          *((_QWORD *)v135 + 2) = v139 - 1;
          v23 = v139 - 1;
        }
        while (v139 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v142 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v18 = v17 >> 1;
    v19 = sub_21FC5B7D8();
    *(_QWORD *)(v19 + 16) = v18;
    v20 = *(unsigned __int8 *)(v149 + 80);
    v142 = v19;
    v148 = v19 + ((v20 + 32) & ~v20);
  }
  v21 = 0;
  v22 = (char *)MEMORY[0x24BEE4AF8];
  v160 = a1;
  while (1)
  {
    v24 = v21;
    v25 = v21 + 1;
    v145 = v22;
    v147 = v21;
    if (v21 + 1 >= v15)
    {
      v39 = v21 + 1;
      v50 = v21;
    }
    else
    {
      v144 = *a1;
      v26 = v144;
      v27 = *(_QWORD *)(v149 + 72);
      v28 = v163;
      sub_21FA2D120(v144 + v27 * v25, (uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      v29 = v26 + v27 * v24;
      v30 = v158;
      sub_21FA2D120(v29, (uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      v31 = objc_msgSend(*v28, sel_endDate);
      v159 = v15;
      v32 = v155;
      sub_21FC5AA94();

      v33 = objc_msgSend(*v30, sel_endDate);
      v34 = v156;
      sub_21FC5AA94();

      LODWORD(v154) = sub_21FC5AA7C();
      v35 = *(void (**)(char *, uint64_t))(v151 + 8);
      v36 = v34;
      v37 = v157;
      v35(v36, v157);
      v38 = v32;
      v15 = v159;
      v35(v38, v37);
      sub_21FA326EC((uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      sub_21FA326EC((uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      v39 = v24 + 2;
      v162 = v27;
      if (v24 + 2 < v15)
      {
        v141 = v2;
        v40 = v144;
        v152 = v27 * v39;
        v153 = v27 * v25;
        while (1)
        {
          v41 = v39;
          v42 = v163;
          sub_21FA2D120(v40 + v152, (uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          v43 = v158;
          sub_21FA2D120(v40 + v153, (uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          v44 = objc_msgSend(*v42, sel_endDate);
          v45 = v155;
          sub_21FC5AA94();

          v46 = objc_msgSend(*v43, sel_endDate);
          v47 = v156;
          sub_21FC5AA94();

          LODWORD(v46) = sub_21FC5AA7C();
          v48 = v47;
          v49 = v157;
          v35(v48, v157);
          v35(v45, v49);
          sub_21FA326EC((uint64_t)v43, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          sub_21FA326EC((uint64_t)v42, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          if (((v154 ^ v46) & 1) != 0)
            break;
          v39 = v41 + 1;
          v27 = v162;
          v40 += v162;
          if (v159 == v41 + 1)
          {
            v15 = v159;
            a1 = v160;
            v39 = v159;
            v2 = v141;
            goto LABEL_23;
          }
        }
        v15 = v159;
        a1 = v160;
        v39 = v41;
        v2 = v141;
        v27 = v162;
      }
LABEL_23:
      v50 = v147;
      if ((v154 & 1) != 0)
      {
        if (v39 < v147)
          goto LABEL_140;
        if (v147 < v39)
        {
          v51 = 0;
          v52 = v27 * (v39 - 1);
          v53 = v39 * v27;
          v54 = v147;
          v55 = v147 * v27;
          do
          {
            if (v54 != v39 + v51 - 1)
            {
              v57 = v2;
              v58 = v39;
              v59 = v144;
              if (!v144)
                goto LABEL_145;
              v60 = v144 + v55;
              v154 = v144 + v52;
              sub_21FA2D23C(v144 + v55, v146, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
              if (v55 < v52 || v60 >= v59 + v53)
              {
                v56 = v154;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v56 = v154;
                if (v55 != v52)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_21FA2D23C(v146, v56, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
              v39 = v58;
              v2 = v57;
              v27 = v162;
            }
            ++v54;
            --v51;
            v52 -= v27;
            v53 -= v27;
            v55 += v27;
          }
          while (v54 < v39 + v51);
          v15 = v159;
          a1 = v160;
          v50 = v147;
        }
      }
    }
    if (v39 < v15)
    {
      if (__OFSUB__(v39, v50))
        goto LABEL_138;
      if (v39 - v50 < v143)
        break;
    }
LABEL_55:
    if (v39 < v50)
      goto LABEL_133;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v159 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v22 = v145;
    else
      v22 = sub_21FBF2344(0, *((_QWORD *)v145 + 2) + 1, 1, v145);
    v82 = *((_QWORD *)v22 + 2);
    v81 = *((_QWORD *)v22 + 3);
    v23 = v82 + 1;
    if (v82 >= v81 >> 1)
      v22 = sub_21FBF2344((char *)(v81 > 1), v82 + 1, 1, v22);
    *((_QWORD *)v22 + 2) = v23;
    v83 = v22 + 32;
    v84 = &v22[16 * v82 + 32];
    v85 = v159;
    *(_QWORD *)v84 = v50;
    *((_QWORD *)v84 + 1) = v85;
    if (v82)
    {
      while (1)
      {
        v86 = v23 - 1;
        if (v23 >= 4)
        {
          v91 = &v83[16 * v23];
          v92 = *((_QWORD *)v91 - 8);
          v93 = *((_QWORD *)v91 - 7);
          v97 = __OFSUB__(v93, v92);
          v94 = v93 - v92;
          if (v97)
            goto LABEL_122;
          v96 = *((_QWORD *)v91 - 6);
          v95 = *((_QWORD *)v91 - 5);
          v97 = __OFSUB__(v95, v96);
          v89 = v95 - v96;
          v90 = v97;
          if (v97)
            goto LABEL_123;
          v98 = v23 - 2;
          v99 = &v83[16 * v23 - 32];
          v101 = *(_QWORD *)v99;
          v100 = *((_QWORD *)v99 + 1);
          v97 = __OFSUB__(v100, v101);
          v102 = v100 - v101;
          if (v97)
            goto LABEL_125;
          v97 = __OFADD__(v89, v102);
          v103 = v89 + v102;
          if (v97)
            goto LABEL_128;
          if (v103 >= v94)
          {
            v121 = &v83[16 * v86];
            v123 = *(_QWORD *)v121;
            v122 = *((_QWORD *)v121 + 1);
            v97 = __OFSUB__(v122, v123);
            v124 = v122 - v123;
            if (v97)
              goto LABEL_132;
            v114 = v89 < v124;
            goto LABEL_92;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v115 = *((_QWORD *)v22 + 4);
            v116 = *((_QWORD *)v22 + 5);
            v97 = __OFSUB__(v116, v115);
            v108 = v116 - v115;
            v109 = v97;
            goto LABEL_86;
          }
          v88 = *((_QWORD *)v22 + 4);
          v87 = *((_QWORD *)v22 + 5);
          v97 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          v90 = v97;
        }
        if ((v90 & 1) != 0)
          goto LABEL_124;
        v98 = v23 - 2;
        v104 = &v83[16 * v23 - 32];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v107 = __OFSUB__(v105, v106);
        v108 = v105 - v106;
        v109 = v107;
        if (v107)
          goto LABEL_127;
        v110 = &v83[16 * v86];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v97 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v97)
          goto LABEL_130;
        if (__OFADD__(v108, v113))
          goto LABEL_131;
        if (v108 + v113 >= v89)
        {
          v114 = v89 < v113;
LABEL_92:
          if (v114)
            v86 = v98;
          goto LABEL_94;
        }
LABEL_86:
        if ((v109 & 1) != 0)
          goto LABEL_126;
        v117 = &v83[16 * v86];
        v119 = *(_QWORD *)v117;
        v118 = *((_QWORD *)v117 + 1);
        v97 = __OFSUB__(v118, v119);
        v120 = v118 - v119;
        if (v97)
          goto LABEL_129;
        if (v120 < v108)
          goto LABEL_14;
LABEL_94:
        v125 = v86 - 1;
        if (v86 - 1 >= v23)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        v126 = *a1;
        if (!*a1)
          goto LABEL_144;
        v127 = v22;
        v128 = &v83[16 * v125];
        v129 = *(_QWORD *)v128;
        v130 = &v83[16 * v86];
        v131 = *((_QWORD *)v130 + 1);
        sub_21FBF1CF0(v126 + *(_QWORD *)(v149 + 72) * *(_QWORD *)v128, v126 + *(_QWORD *)(v149 + 72) * *(_QWORD *)v130, v126 + *(_QWORD *)(v149 + 72) * v131, v148);
        if (v2)
          goto LABEL_116;
        if (v131 < v129)
          goto LABEL_119;
        if (v86 > *((_QWORD *)v127 + 2))
          goto LABEL_120;
        *(_QWORD *)v128 = v129;
        *(_QWORD *)&v83[16 * v125 + 8] = v131;
        v132 = *((_QWORD *)v127 + 2);
        if (v86 >= v132)
          goto LABEL_121;
        v23 = v132 - 1;
        memmove(&v83[16 * v86], v130 + 16, 16 * (v132 - 1 - v86));
        v22 = v127;
        *((_QWORD *)v127 + 2) = v132 - 1;
        a1 = v160;
        if (v132 <= 2)
          goto LABEL_14;
      }
    }
    v23 = 1;
LABEL_14:
    v15 = a1[1];
    v21 = v159;
    if (v159 >= v15)
      goto LABEL_105;
  }
  if (__OFADD__(v50, v143))
    goto LABEL_141;
  if (v50 + v143 >= v15)
    v61 = v15;
  else
    v61 = v50 + v143;
  if (v61 >= v50)
  {
    if (v39 != v61)
    {
      v141 = v2;
      v62 = *(_QWORD *)(v149 + 72);
      v63 = v62 * (v39 - 1);
      v152 = v62;
      v64 = v39 * v62;
      v144 = v61;
      do
      {
        v66 = 0;
        v159 = v39;
        v153 = v64;
        v154 = v63;
        while (1)
        {
          v67 = v160;
          v68 = *v160;
          v162 = v64 + v66;
          v69 = v163;
          sub_21FA2D120(v64 + v66 + v68, (uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          v70 = v158;
          sub_21FA2D120(v63 + v66 + v68, (uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          v71 = objc_msgSend(*v69, sel_endDate);
          v72 = v155;
          sub_21FC5AA94();

          v73 = objc_msgSend(*v70, sel_endDate);
          v74 = v156;
          sub_21FC5AA94();

          LOBYTE(v73) = sub_21FC5AA7C();
          v75 = *(void (**)(char *, uint64_t))(v151 + 8);
          v76 = v74;
          v77 = v157;
          v75(v76, v157);
          v75(v72, v77);
          sub_21FA326EC((uint64_t)v70, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          sub_21FA326EC((uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          if ((v73 & 1) == 0)
            break;
          v78 = *v67;
          if (!*v67)
            goto LABEL_143;
          v64 = v153;
          v63 = v154;
          v79 = v78 + v154 + v66;
          sub_21FA2D23C(v78 + v153 + v66, v161, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          swift_arrayInitWithTakeFrontToBack();
          sub_21FA2D23C(v161, v79, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          v66 -= v152;
          ++v50;
          v65 = v159;
          if (v159 == v50)
            goto LABEL_48;
        }
        v65 = v159;
        v64 = v153;
        v63 = v154;
LABEL_48:
        v39 = v65 + 1;
        v63 += v152;
        v64 += v152;
        v50 = v147;
      }
      while (v39 != v144);
      v39 = v144;
      v2 = v141;
      a1 = v160;
    }
    goto LABEL_55;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_21FC5BC64();
  __break(1u);
  return result;
}

